Instruction,Input,Output,user_answer,answer_type,tag
Write a function to find squares of individual elements in a list using lambda function.,,"def square_nums(nums):
 square_nums = list(map(lambda x: x ** 2, nums))
 return square_nums","def square_nums(nums)
 square_nums = list(map(lambda x x ** 2, nums))
 return square_nums",Syntax Error,String Manipulation
Create a function in Python which takes a list of numbers and returns the sum of squares of those numbers.,"[3, 4, 5]","def sum_squares(nums):
    result = 0
    for num in nums:
        result += num*num
    
    return result

nums = [3, 4, 5]

result = sum_squares(nums)
print(result)","def sum_squares(nums):
    result = 0
    for num in nums:
        result += num*nu",Incomplete Answer,String Manipulation
Design a function in Python that sorts a list of strings in alphabetical order.,"['red', 'green', 'orange']","def sort_list_alphabetically(input_list): 
    output_list = sorted(input_list) 
    return output_list 
  
input_list = ['red', 'green', 'orange']
sorted_list = sort_list_alphabetically(input_list) 
print(""Sorted List in Alphabetical Order:"", sorted_list)","def sort_list_alphabetically(input_list): 
    output_list = sorted(input_list) 
    return output_list 
  
input_list = ['red',",Incomplete Answer,File I/O
Develop a greedy strategy in Python to find the minimum total cost of connecting n given points on a 2D plane using minimum number of lines.,,"def min_cost(points):
    points.sort()  # sort the points by their x-coordinate
    total_cost = 0  # initial cost
    for i in range(len(points)-1):
        cost = abs(points[i+1][1] - points[i][1])  # calculate the cost of connecting two successive points
        total_cost += cost  # add to the total cost
    return total_cost","def min_cost(points)
    points.sort()  # sort the points by their x-coordinate
    total_cost = 0  # initial cost
    for i in range(len(points)-1)
        cost = abs(points[i+1][1] - points[i][1])  # calculate the cost of connecting two successive points
        total_cost += cost  # add to the total cost
    return total_cost",Syntax Error,Loops
Write a Python program to create a singly linked list,,"class Node():
  def __init__(self, data):
    self.data = data
    self.next = None

class List():
  def __init__(self):
    self.head = None

  def addNode(self, data):
    node = Node(data)
    if self.head == None:
       self.head = node
    else:
      current = self.head
      while current.next != None:
        current = current.next
      current.next = node","class Node():
  def __init__(self, data):
    self.data = data
    self.next = None

class List():
  def __init__(self):
    self.head = None

  def addNode(self, data):
    node = Nod",Incomplete Answer,OOP
"GPT-model, create a Python program for shuffeling the elements of an array.",,"import random

def shuffle(arr):
  for i in range(len(arr)):
    j = random.randint(0, len(arr)-1)
    arr[i], arr[j] = arr[j], arr[i]
 
  return arr","import random

def shuffle(arr):
  for i in range(len(arr)):
j = random.randint(0, len(arr)-1)
arr[i], arr[j] = arr[j], arr[i]
 
  return arr",Syntax Error,Loops
Edit the following Python code such that it will print an array containing the seven days of the week.,"days = [""Monday"", ""Thuesday"", ""Wednesday"", ""Thrusday"", ""Friday""]

for day in days:
    print(day)","days = [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""]

for day in days:
    print(day)","days = [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""]

for day in days:
    print(day)",correct,Recursion
Create a calculator program using Python.,,"def calculator(num1, num2, op):
 if op == '+':
 return num1 + num2
 elif op == '-':
 return num1 - num2
 elif op == '*':
 return num1 * num2
 elif op == '/':
 return num1 / num2
 else:
 return None","def calculator(num1, num2, op):
 if op == '+':
 return num1 + num2
 elif op == '-':
 return num1 - num2
 elif op == '*':
 return num1 * num2
 elif op == '/':
 return num1 / num2
 else:
 return None",correct,String Manipulation
Develop a Python script that takes two parameters and prints the greatest out of them.,,"def find_greatest(param1, param2):
  if param1 > param2:
      greater = param1
  else:
      greater = param2
  return greater","def find_greatest(param1, param2):
  if param1 > param2:
      ",Incomplete Answer,Loops
Create a Python program that prints the Roman numerals representation for any given number.,,"def Roman(number):
 roman = {1000: 'M', 900: 'CM', 500: 'D', 400: 'CD',
100: 'C', 90: 'XC', 50: 'L', 40: 'XL',
 10: 'X', 9: 'IX', 5: 'V', 4: 'IV', 1: 'I'}
 result = ''

 for num in roman.keys():
 while number >= num:
 result += roman[num]
 number -= num

 print (result) 

number = int(input('Enter a number: '))
Roman(number)","def Roman(number)
 roman = {1000 'M', 900 'CM', 500 'D', 400 'CD',
100 'C', 90 'XC', 50 'L', 40 'XL',
 10 'X', 9 'IX', 5 'V', 4 'IV', 1 'I'}
 result = ''

 for num in roman.keys()
 while number >= num
 result += roman[num]
 number -= num

 print (result) 

number = int(input('Enter a number '))
Roman(number)",Syntax Error,File I/O
Create a Python program to check if an integer is divisible by 5,Integer : 10,"def is_divisible_by_5(number):
    if (number % 5 == 0):
        return True
    else:
        return False
    
number = 10
is_divisible_by_5(number)","def is_divisible_by_5(number):
    if (number % 5 == 0):
        return True
    else:
        return False
    
number = 10
is_divisible_by_5(number)",correct,Recursion
"Write a python program to which given a list of numbers, will calculate the mean value",,"def mean(nums):
    total = 0
    for num in nums:
        total += num
    # Return the mean by dividing by the number of elements 
    return total / len(nums)","def mean(nums:
    total = 0
    for num in nums:
        total += num
    # Return the mean by dividing by the number of elements 
    return total / len(nums",Syntax Error,File I/O
Create a Python algorithm to calculate the target sums of all elements in a given list with a given value,"subtrahend: 10
list: [4, 3, 8, 6, 5]","def target_sum(subtrahend, lst):
    target_sums = []
    for num in lst:
        target_sums.append(subtrahend - num)
    return target_sums","def target_sum(subtrahend, lst):
    target_sums = []
    for num in lst:
        target_sums.append(subtrahend - num)
    return target_sums",correct,Loops
Write a function to calculate the total number of days between two dates in Python.,,"from datetime import datetime

def calculate_days_between(start_date, end_date):
  start_date = datetime.strptime(start_date, '%Y-%m-%d')
  end_date = datetime.strptime(end_date, '%Y-%m-%d')
  delta = end_date - start_date
  return delta.days","from datetime import datetime

def calculate_days_between(start_date, end_date):
  start_date = datetime.strptime(start_date, '%Y-%m-%d')
  end_date = datetime.strptime(end_date, '%Y-%m-%d')
  delta = end_date - start_date
  return delta.days",correct,Recursion
Write a Python program to generate a Fibonacci sequence where the number of elements is given as an input.,Number of elements = 10,"def generateFibonacci(numOfElements):
 sequence = []
 a = 0
 b = 1
 for i in range(numOfElements):
 sequence.append(a)
 c = a + b 
 a = b
 b = c
 return sequence

print(generateFibonacci(10))

#output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]","def generateFibonacci(numOfElements):
 sequence = []
 a = 0
 b = 1
 for i in range(numOfElements):
 sequence.append(a)
 c = a + b 
 a = b
 b = c
 return sequence

print(generateFibonacci(10))

#output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]",correct,File I/O
Write a Python program to generate a sorted list of unique numbers from 0 to 9 in random order.,,"import random

# generating a list of unique numbers from 0 to 9 in random order
random_numbers = random.sample(range(0, 10), 10)

# sort list of numbers 
random_numbers.sort()

# print sorted list of random numbers
print(random_numbers)
# Output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]","import random

# generating a list of unique numbers from 0 to 9 in random order
random_numbers = random.sample(range(0, 10), 10)

# sort list of numbers 
random_numbers.sort()

# print sorted list of random numbers
print(random_numbers)
# Output [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",Syntax Error,File I/O
Identify the output of the following python code snippet:,"arr = [1, 2, 4, 8, 16]
new_arr = [i * 2 for i in arr]","[2, 4, 8, 16, 32]","[2, 4, 8",Incomplete Answer,Recursion
Create a Python function to replace all the vowels in a string with 'x'.,,"def replace_vowels(s):
  vowels = ['a', 'e', 'i', 'o', 'u']
  for char in s:
    if char in vowels:
      s = s.replace(char, 'x')
  return s","def replace_vowels(s):
  vowels = ['a', 'e', 'i', 'o', 'u']
  for char",Incomplete Answer,File I/O
Generate Python code to implement a binary search algorithm.,,"def binary_search(arr, target):
 left = 0
 right = len(arr)-1
 while left <= right:
 mid = (left + right) // 2
 if arr[mid] > target:
 right = mid - 1
 elif arr[mid] < target:
 left = mid + 1
 else:
 return mid
 return -1","def binary_search(arr, target):
 left = 0
 right = len(arr)-1
 while left <= right:
 mid = (left + right) // 2",Incomplete Answer,String Manipulation
Write a Python function to create a stack data structure,,"class Stack():
    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)
   
    def pop(self):
        if len(self.items) == 0: 
            return None
        else: 
            return self.items.pop()
    
    def peek(self):
        if len(self.items) == 0:
            return None
        else:
            return self.items[-1]","class Stack():
    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)
   
    def pop(self):
        if len(self.items) == 0: 
            return None
        else: 
            return self.items.pop()
    
    def peek(self):
        if len(self.items) == 0:
            return None
        else:
            return self.items[-1]",correct,File I/O
Create a data structure to store a list of integers in Python.,,"int_list = []

def add_element_to_list(element):
    int_list.append(element);

def remove_element_from_list(element):
    int_list.remove(element);","int_list = []

def add_element_to_list(element):
    int_list.append(eleme",Incomplete Answer,Recursion
Create a Python program to sort a list of tuples according to the third element in the tuple.,"[(21, ""ABC"", 33), (9, ""XYZ"", 88), (67, ""MNO"", 37)]","def sort_tuple_list(tuple_list):
    sorted_tuple_list = sorted(tuple_list, key=lambda x: x[2])
    print(sorted_tuple_list)

tuple_list = [(21, ""ABC"", 33), (9, ""XYZ"", 88), (67, ""MNO"", 37)]
sort_tuple_list(tuple_list)","def sort_tuple_list(tuple_list):
    sorted_tuple_list = sorted(tuple_list, key=lambda x: x[2])
    print(so",Incomplete Answer,File I/O
Please generate a Python script that calculates the mean of a given array of numbers.,"[4, 9, 3, 5]","def calculateMean(array):
    # sum up all elements in the array
    mean = 0
    for i in range(len(array)):
        mean += array[i]
    # calculate the mean by dividing the sum by number of elements
    mean /= len(array)
    return mean

array = [4, 9, 3, 5]
mean = calculateMean(array)
print(mean)","def calculateMean(array)
    # sum up all elements in the array
    mean = 0
    for i in range(len(array))
        mean += array[i]
    # calculate the mean by dividing the sum by number of elements
    mean /= len(array)
    return mean

array = [4, 9, 3, 5]
mean = calculateMean(array)
print(mean)",Syntax Error,OOP
"Translate the following sentence into Python code: ""Print 'Welcome' 5 times"".",,"for i in range(5):
  print(""Welcome"")","for i in range(5):
  print(""Welcome"")",correct,Recursion
Fix the following syntax in Python code,"string1 = ""Programming""
string2 = ""Fundamentals","string1 = ""Programming""
string2 = ""Fundamentals""","string1 = ""Programming""
string2 = ""Fundamentals""",Syntax Error,File I/O
Design a Python function to calculate the area of a circle given its radius.,,"def area_of_circle(radius):
    return math.pi * (radius ** 2)","def area_of_circle(radius):
    return math.pi * (radius ** 2)",correct,File I/O
Write a Python function which takes in an argument and returns a corresponding string.,"Given an argument of 1,2 or 3","def get_string(arg):
    """"""
    This function takes in an argument and returns the corresponding
    string. 
 
    Parameters:
    arg (int): the argument

    Returns:
    str: the corresponding string
    """"""
    if arg == 1:
        return ""One""
    elif arg == 2:
        return ""Two""
    elif arg ==3:
        return ""Three""
    else:
        return """"","def get_string(arg):
    """"""
    This function takes in an argument and returns the corresponding
    string. 
 
    Parameters:
    arg (int): the argument

    Returns:
    str: the corresponding string
    """"""
    if arg == 1:
        return ""One""
    elif arg == 2:
        return ""Two""
    elif arg ==3:
        return ""Three""
    else:
        return """"",correct,Recursion
Can you form a mathematical expression in Python to calculate the total area of a circle and a square?,,"# Calculate total area of circle and square
import math

radius = 4
side = 5

circle_area = math.pi * radius**2
square_area = side**2

total_area = circle_area + square_area
print(""Total area of the circle and square:"", total_area)","# Calculate total area of circle and square
import math

radius = 4
side = 5

circle_area = math.pi * radius**2
square_area = side**2

total_area = circle_area + square_area
print(""Total area of the circle and square:"", total_area)",correct,String Manipulation
Generate a code snippet to print a pattern of stars in Python.,rows = 5,"# Use two for loops to print pattern
for i in range(0, rows):
    for j in range(0, i + 1):
        print(""* "", end="""")
    print(""\r"")","# Use two for loops to print pattern
for i in range(0, rows):
    for j in range(0, i + 1):
        print(name, ""* "", end="""")
    print(name, ""\r"")",Syntax Error,Recursion
Develop an algorithm in Python to find the depth of a binary tree.,,"def findDepth(root): 
    if root is None: 
        return 0 ;  
  
    else :  
        left_height = findDepth(root.left) 
        right_height = findDepth(root.right) 
  
        if left_height > right_height : 
            return left_height+1
        else: 
            return right_height+1","def findDepth(root): 
    if root is None: 
        return 0 ;  
  
    else :  
        left_height = findDepth(root.left) 
        right_height = ",Incomplete Answer,File I/O
Generate a python class 'Employee' with properties 'name' and 'salary'.,,"class Employee: 
    def __init__(self, name, salary): 
        self.name = name
        self.salary = salary
    
    def get_name(self):
        return self.name
    
    def get_salary(self):
        return self.salary","class Employee: 
    def __init__(self, name, salary: 
        self.name = name
        self.salary = salary
    
    def get_name(self:
        return self.name
    
    def get_salary(self:
        return self.salary",Syntax Error,OOP
Write a python function to count the number of rotations required to generate a sorted array.,,"def count_Rotation(arr,n):   
    for i in range (1,n): 
        if (arr[i] < arr[i - 1]): 
            return i  
    return 0","def count_Rotation(arr,n):   
    for i in range (1,n): 
        if (arr[i] < arr[i - 1]): 
            return i  
    return 0",correct,String Manipulation
Can you create a program that reads two numbers from the user and outputs the two numbers in descending order?,,"# Python program
def main():
    num1 = int(input(""Enter the first number: ""))
    num2 = int(input(""Enter the second number: ""))
    
    # use max and min functions to output the numbers in descending order
    print(max(num1, num2))
    print(min(num1, num2))

if __name__ == ""__main__"":
    main()","# Python program
def main():
    num1 = int(input(""Enter the first number: ""))
    num2 = int(input(""Enter the second number: ""))
    
    # use max and min functions to output the numbers in descending order
    print(max(num1, num2))
    print(min(num1, num2))

if __name__ == ""__main__"":
    main()",correct,Recursion
Write a python program to successfully insert a row into a table named 'students' with the given values.,"student_name = ""John Doe""
student_age = 20","import sqlite3

conn = sqlite3.connect(""example.db"")
c = conn.cursor()
c.execute(""INSERT INTO students VALUES ('John Doe', 20)"")
conn.commit()
conn.close()","import sqlite3

conn = sqlite3.connect(""example.db"")
c = conn.cursor()
c.execute(""INSERT INTO students VALUES ('John Doe', 20)"")
conn.commit()
conn.close()",correct,Loops
Create an algorithm in Python to find the first index of an item in an array.,"arr = [1,3,7,9,0,4]
num = 7","def findIndex(arr, num):
    for index in range(len(arr)):
        if arr[index] == num:
            return index
    return -1

arr = [1,3,7,9,0,4]
num = 7
index = findIndex(arr, num)
print('Index of %d is %d' % (num, index)) # Index of 7 is 2","def findIndex(arr, num):
    for index in range(len(arr)):
        if arr[index] == num:
            return index
    retu",Incomplete Answer,Loops
Write a function to sort a list of tuples using lambda.,,"def subject_marks(subjectmarks):
#subject_marks = [('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])
 subjectmarks.sort(key = lambda x: x[1])
 return subjectmarks","def subject_marks(subjectmarks)
#subject_marks = [('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])
 subjectmarks.sort(key = lambda x x[1])
 return subjectmarks",Syntax Error,String Manipulation
Create a function called divide_numbers() in Python to divide two numbers and return the result.,,"def divide_numbers(a, b):
    return a / b","def divide_numbers(a,",Incomplete Answer,Recursion
Create a Python program to generate a Fibonacci sequence using recursion.,,"def Fibonacci_Sequence(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci_Sequence(n-1)+Fibonacci_Sequence(n-2) 
  
print(Fibonacci_Sequence(10))","def Fibonacci_Sequence(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
",Incomplete Answer,Recursion
Write a function to find nth polite number.,,"import math 
def is_polite(n): 
	n = n + 1
	return (int)(n+(math.log((n + math.log(n, 2)), 2))) ","import math 
def is_polite(n): 
	n = n + 1
	return (int)(n+(math.log((n + math.log(n, 2)), 2))) ",correct,OOP
Generate a function in Python to convert a given integer to its binary representation.,17,"def convertToBinary(n): 
  
    if n > 1: 
        convertToBinary(n//2) 
  
    print(n % 2,end = '') 
  

# driver code 
num = 17
convertToBinary(num)","def convertToBinary(n): 
  
    if n > 1: 
        convertToBinary(n//2) 
  
    print(n % 2,end = '') 
  

# driver code 
num = 17
convertToBinary(num)",correct,Loops
Suggest a way to randomize the order of the following list using Python.,"array = [1, 2, 3, 4, 5, 6]","import random
array = [1, 2, 3, 4, 5, 6]
random.shuffle(array)  # shuffle list in-place using a random permutation","import random
array = [1, 2, 3, 4, 5, 6]
random.shuffle(array)  # shuffle list in-place using a random permutation",Syntax Error,OOP
Generate a correct Python program to take two lists as input and combine them into a 3rd list.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def combine_lists(list1, list2):
    output = list1 + list2
    return output

combined_list = combine_lists(list1, list2)
print(combined_list)","def combine_lists(list1, list2):
output = list1 + list2
return output

combined_list = combine_lists(list1, list2)
print(combined_list)",Syntax Error,String Manipulation
Create a python function that can receive a list of integers and return a list of tuples with consecutive numbers.,"[1, 2, 3, 7, 8, 9, 10]","def get_consecutive(arr):
    result = []
    i = 0
    while i < len(arr):
        s = i
        while (i + 1 < len(arr)) and (arr[i + 1] == arr[i] + 1):
            i += 1
        result.append((arr[s], arr[i]))
        i += 1
    return result

# Test 
arr = [1, 2, 3, 7, 8, 9, 10]
print(get_consecutive(arr))
# Output [(1, 3), (7, 10)]","def get_consecutive(arr):
    result = []
    i = 0
    while i < len(arr):
        s = i
        while (i + 1 < len(arr)) and (arr[i + 1] == arr[i] + 1):
            i ",Incomplete Answer,File I/O
Create a function in Python to compute a Fibonacci sequence. The function should take as input a positive integer n and return the nth Fibonacci number,10,"def fibonacci(n): 
 if n < 0: 
  print(""Incorrect input"") 
 elif n == 0: 
  return 0
 elif n == 1: 
  return 1
 else: 
  return fibonacci(n-1) + fibonacci(n-2) 

print(fibonacci(10))","def fibonacci(n): 
 if n < 0: 
  print(""Incorrect input"") 
 elif n == 0: 
  return 0
 elif n == 1: 
  return 1
 else: 
  return fibonacci(n-1) + fibonacci(n-2) 

print(fibonacci(10))",correct,Recursion
Write a Python program to remove an item from a list whose index is specified.,"list = ['Apple', 'Orange', 'Banana', 'Mango']","def removeSpecifiedIndex(list, index): 
  # using list comprehension 
  new_list = [list[i] for i in range(len(list)) if i != index]  

  return new_list 

list = ['Apple', 'Orange', 'Banana', 'Mango']  
index = 2

print(removeSpecifiedIndex(list, index))","def removeSpecifiedIndex(list, index): 
  # using list comprehension 
  new_list = [list[i] for i in range(len(list)) if i != index]  

  return new_list 

list = ['Apple', 'Orange', 'Banana', 'Mango']  
index = 2

print(removeSpecifiedIndex(list, index))",correct,Recursion
Model sentiment analysis task as a machine learning problem.,,"Create a Python program that can classify movie reviews or other texts as either positive or negative sentiment. The program should utilize a machine learning model, such as a recurrent neural network with a word-embedding layer, or a logistic regression with a bag-of-words vectorizer to classify the text. The model should be trained on a labeled dataset and be tested for accuracy on a held-out test set.","Create a Python program that can classify movie reviews or other texts as either positive or negative sentiment. The program should utilize a machine learning model, such as a recurrent neural network wi",Incomplete Answer,File I/O
Create a web server in Python.,<no input>,"import http.server
import socketserver

PORT = 8080

Handler = http.server.SimpleHTTPRequestHandler

with socketserver.TCPServer(("""", PORT), Handler) as httpd:
    print(""Server running at http://localhost:{}/"".format(PORT))
    httpd.serve_forever()","import http.server
import socketserver

PORT = 8080

Handler = http.server.SimpleHTTPRequestHandler

with socketserver.TCPServer(("""", PORT), Handler) as httpd:
    print(""Server running at http://localhost:{}/"".format(PORT))
    httpd.serve_forever()",correct,OOP
Construct a function that will find the value of a given key in a Python dictionary.,"dictionary = {'key1':1, 'key2':2, 'key3':3}
key = 'key2'","def find_value(dictionary, key):
    value = dictionary.get(key)
    return value

dictionary = {'key1':1, 'key2':2, 'key3':3}
key = 'key2'
value = find_value(dictionary, key)
print(value) # Output is 2","def find_value(dictionary, key):
    value = dictionary.get(key)
    return value

dictionary = {'key1':1, 'key2':2, 'key3':3}
key = 'key2'
value = find_value(dictionary, key)
print(name, value) # Output is 2",Syntax Error,Loops
Build a Python script to remove all punctuation from a given string.,"""This is a cool string!""","import string

input_str = ""This is a cool string!""
punctuation_removed = input_str.translate(str.maketrans('', '', string.punctuation))
print(punctuation_removed)","import string

input_str = ""This is a cool string!""
punctuation_removed = input_s",Incomplete Answer,File I/O
"Write a Python program to print “Hello, World!” five times.",,"for _ in range(5):
    print(""Hello, World!"")","for _ in range(5):
    print(""Hello, World!"")",correct,File I/O
Generate a program in Python that takes a given dictionary and finds the key with the highest value.,"my_dict = {
    'a': 1,
    'b': 5,
    'c': 3
}","def highest_value(d):
    key, highest_val = None, -float(""inf"")
    for k, val in d.items():
        if val > highest_val:
            key, highest_val = k, val
    return key

highest_key = highest_value(my_dict)
print(highest_key)","def highest_value(d):
    key, highest_val = None, -float(""inf"")
    for k, val in d.items():
        if val > highe",Incomplete Answer,OOP
Develop an algorithm in Python to print Fibonacci series up to a given number.,,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
      
n = int(input(""Enter a number: ""))
print(fibonacci(n))","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(name, ""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
      
n = int(input(""Enter a number: ""))
print(name, fibonacci(n))",Syntax Error,Recursion
Create a program in Python to split a string into an array based on a given delimiter.,"String: Hello,World
Delimiter: ,","def split_string(s, delimiter): 
 return s.split(delimiter)

string = 'Hello,World'
delimiter = ','

result = split_string(string, delimiter)

# Outputs ['Hello', 'World']","def split_string(s, delimiter: 
 return s.split(delimiter

string = 'Hello,World'
delimiter = ','

result = split_string(string, delimiter

# Outputs ['Hello', 'World']",Syntax Error,Loops
Design a Python function that converts strings in any given sentence to a capitalized format.,This is an example sentence,"def convertToCapitalize(sentence)
    words = sentence.split()
    capitalize = [word.capitalize() for word in words]
    return "" "".join(capitalize)","def convertToCapitalize(sentence)
    words = sentence.split()
    capital",Incomplete Answer,String Manipulation
"Using the given data, write a Python program to extract each name along with its age in the following format:","data = [{""name"": ""John"", ""age"": 25}, {""name"": ""James"", ""age"": 26}]","for item in data:
    print(f'Name: {item[""name""]}, Age: {item[""age""]}')","for item in data:
    print(f'Name: ",Incomplete Answer,File I/O
Construct a Python program that calculates the sum of all the items in a given list.,"[1, 4, 2, 5, 9]","def sumoflist(list): 
  sum = 0
  for i in range(0, len(list)): 
    sum = sum + list[i] 
  
  return sum

list1 = [1, 4, 2, 5, 9] 
print(sumoflist(list1))","def sumoflist(list: 
  sum = 0
  for i in range(0, len(list: 
    sum = sum + list[i] 
  
  return sum

list1 = [1, 4, 2, 5, 9] 
print(sumoflist(list1",Syntax Error,Recursion
Write a function to find the volume of a sphere.,,"import math
def volume_sphere(r):
  volume=(4/3)*math.pi*r*r*r
  return volume","import math
def volume_sphere(r):
  volume=(4/3)*math.pi*r*r*r
  return volume",correct,Loops
Write a function in Python that takes an array of integers and its size as parameters and returns the maximum value in the array.,"arr = [1, 6, 8, 4, 9, 6, 10]
n = len(arr)","def findMax(arr, n):
 # Initializing max with first element of array
 max = arr[0]

 # Starting loop from second element
 for i in range(1, n):
 # Comparing max with remaining elements of array
 if arr[i] > max:
 max = arr[i]

 # Returning maximum
 return max","def findMax(arr, n):
 # Initializing max with first element of array
 max = arr[0]

 # Starting loop from second element
 for i in range(1, n):
 # Comparing max with remaining elements of array
 if arr[i] > max:
 max = arr[i]

 # Returning maximum
 return max",correct,OOP
Create a program in Python to convert an array of integers to an array of binary numbers.,"[2,4,7]","def int_to_bin(arr):
   binary = []
   for num in arr:
       binary.append(bin(num))
   return binary

arr = [2,4,7]
bin_arr = int_to_bin(arr)
print(bin_arr)","def int_to_bin(arr)
   binary = []
   for num in arr
       binary.append(bin(num))
   return binary

arr = [2,4,7]
bin_arr = int_to_bin(arr)
print(bin_arr)",Syntax Error,Recursion
Construct a python program to interactively get the user input.,,"def get_user_input():
    user_input = input(""Please enter your input: "")
    return user_input

# Sample test
user_input = get_user_input()
print(""Your input is: "" + user_input)","def get_user_input():
    user_input = input(""Please enter your input: "")
    return user_input

# Sample test
user_input = get_user_input()
print(name, ""Your input is: "" + user_input)",Syntax Error,File I/O
Generate a function in Python to filter a given list and keep only the numeric items in the list.,"input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8]","def filter_numeric(input_list): 
    
    num_list = [] 
  
    for item in input_list:
        if type(item) == int or type(item) == float: 
            num_list.append(item) 
   
    return num_list 
  
input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8] 
print(filter_numeric(input_list)) 
#Output: [4, 2, 1, 15.6, 5.8]","def filter_numeric(input_list): 
    
    num_list = [] 
  
    for item in input_list:
        if type(item) == int or type(item) == float: 
            num_list.append(item) 
   
    return num_list 
  
input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8] 
print(filter_numeric(input_list)) 
#Output: [4, 2, 1, 15.6, 5.8]",correct,Recursion
Create an algorithm to determine if two strings have the same character set in Python.,"Strings: ""paris"" and ""sapir""","def same_charset(str1, str2):
	
	str1 = sorted(str1) 
	str2 = sorted(str2)
 
	if(str1 == str2):
		return True
	else:
		return False","def same_charset(str1, str2):
	
	str1 = sorted(str1) 
	str2 = sorted(str2)
 
	if(str1 == str2):
		return True
	else:
		return False",Syntax Error,Recursion
Write a python program to check if two sequences are identical.,"[1,2,3], [1,2,3]","def check_seq(seq1, seq2):
    if len (seq1) != len (seq2): 
        return False
    else: 
        for i in range(len (seq1)):
            if seq1[i] != seq2[i]:
                return False
    return True","def check_seq(seq1, seq2)
    if len (seq1) != len (seq2) 
        return False
    else 
        for i in range(len (seq1))
            if seq1[i] != seq2[i]
                return False
    return True",Syntax Error,Loops
Design a Python script to nested loop iterate the following list of lists.,"arr = [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]","for outer in arr:
   for inner in outer:
       print(inner)","for outer in arr:
   for inner in outer:
       print(inner)",correct,File I/O
Create a program in Python to generate 10 random integers.,,"import random

for _ in range(10):
    print(random.randint(0,100))","import random

for _ in range(10)",Incomplete Answer,OOP
Create a Python class to represent a 2D Point that contains an x-coordinate and y-coordinate.,,"class Point:
 def __init__(self, x, y):
 self.x = x
 self.y = y

 def get_x(self):
 return self.x

 def get_y(self):
 return self.y","class Point:
 def __init__(self, x, y):
 self.x = x
 self.y = y

 def get_x(self):
 return self.x

 def get_y(self):
 return self.y",correct,File I/O
Design a class in Python that models a customer with the following properties,"Attributes: name, email, phone_number, address.","class Customer:
    def __init__(self,name, email, phone_number, address):
        self.name = name
        self.email = email
        self.phone_number = phone_number
        self.address = address","class Customer:
def __init__(self,name, email, phone_number, address):
    self.name = name
    self.email = email
    self.phone_number = phone_number
    self.address = address",Syntax Error,Loops
Create a web scraper in Python that extracts text from a given url.,,"import requests
from bs4 import BeautifulSoup

url = ""...""
page = requests.get(url)
soup = BeautifulSoup(page.content)
text = soup.find_all(text=True)
for t in text:
    print(t)","import requests
from bs4 import BeautifulSoup

url = ""...""
page = requests.get(url)
soup = BeautifulSoup(page.content)
text = soup.find_all(text=True)
for t in text
    print(t)",Syntax Error,Recursion
Create a Python program to find the area of a given trapezoid.,"base1 = 2
base2 = 4
height = 3","def area_trapezoid(base1, base2, height):
 return (base1 + base2) * (height / 2)
 
print(area_trapezoid(2, 4, 3)) # Output: 9.0","def area_trapezoid(base1, base2, height):
 return (base1 + base2) * (height / 2)
 
print(area_trapezoid(2, 4, 3)) # Output: 9.0",correct,Loops
Write a function to calculate the difference between the squared sum of first n natural numbers and the sum of squared first n natural numbers.,,"def sum_difference(n):
    sumofsquares = 0
    squareofsum = 0
    for num in range(1, n+1):
        sumofsquares += num * num
        squareofsum += num
    squareofsum = squareofsum ** 2
    return squareofsum - sumofsquares","def sum_difference(n):
    sumofsquares = 0
    squareofsum = 0
    for num in range(1, n+1):
        sumofsquares += num * num
        squareofsum += num
    squareofsum = squareofsum ** 2
    return squareofsum - sumofsquares",Syntax Error,OOP
Write a function in Python that computes the average of all numbers in a given list.,"numbers = [4, 8, 6, 2, 10]","def compute_average(numbers):
  total = 0
  for num in numbers:
    total += num
  return total / len(numbers)

average = compute_average(numbers)
print(average)  # Outputs 6","def compute_average(numbers):
  total = 0
  for num in numbers:
    total += num
  return total / len(numbers)

average = compute_average(numbers)
pritn(average)  # Outputs 6",Syntax Error,String Manipulation
"Create a Python script to transform a list of strings into a list of integers, each integer representing the length of the corresponding string.","[""Hello"", ""World"", ""Goodbye""]","def string_to_length(list_strings):
    return [len(string) for string in list_strings]","def string_to_length(list_strings):
    return [len(string) for string in list_strings]",correct,Recursion
Create a Python program to multiply all of the values in a given list,"[2, 3, 4]","def multiply_list(lst):
    result = 1
    for i in lst:
        result *= i
    return result","def multiply_list(lst):
    result = 1
    for ",Incomplete Answer,String Manipulation
Write a Python program to calculate the cost of sending a message through a messaging service,"Message size: 172 bytes
Price per message: 0.0003 USD","""""""
Calculate the cost of sending a message through a messaging service
""""""

# Message size
size = 172 # bytes

# Price per message
price_per_message = 0.0003 # USD

# Calculate cost
cost = size * price_per_message

print(""The cost of sending a message is {:.3f} USD"".format(cost))","""""""
Calculate the cost of sending a message through a messaging service
""""""

# Message size
size = 172 # bytes

# Price per message
price_pe",Incomplete Answer,Recursion
Develop a program in Python to compute the maximum contiguous subarray sum.,"[-3, 2, 5, -1, 6, 3, -2]","def maxSubArraySum(arr):
    max_so_far = arr[0]
    curr_max = arr[0]
    
    for i in range(1, len(arr)):
        curr_max = max(arr[i], curr_max + arr[i])
        max_so_far = max(max_so_far, curr_max)
        
    return max_so_far","def maxSubArraySum(arr):
    max_so_far = arr[0]
    curr_max = arr[0]
    
    for i in range(1, len(arr)):
        c",Incomplete Answer,File I/O
Develop a Python function for validating email addresses according to RFC2822.,,"import re

def is_valid_email(email):
   # Making sure it contains an @ and at least one '.'
   if re.match(""^.+@[^.].*\.[a-z]{2,10}$"", email) is None:
       return False
   return True","import re

def is_valid_email(email:
   # Making sure it contains an @ and at least one '.'
   if re.match(""^.+@[^.].*\.[a-z]{2,10}$"", email is None:
       return False
   return True",Syntax Error,Loops
Optimize the following Python function that returns the sum of all the elements in a given list.,,"def sum_list(numbers):
  total = 0
  for number in numbers:
    total += number
  return total","def sum_list(numbers):
  total = 0
  for number in numbers:
    total += number
  return total",correct,String Manipulation
"Create a python program that generates a random password. The password should contain a combination of uppercase, lowercase, and numbers.",,"import random
import string

def generate_password():
 password_length = 8
 chars = string.ascii_letters + string.digits 
 return ''.join(random.choice(chars) for i in range(password_length))

print(generate_password())","import random
import string

def generate_password():
 password_length = 8
 chars = string.ascii_letters + st",Incomplete Answer,OOP
Create a Python program to generate a dot product between two given lists.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def dot_product(list1, list2):
  product = 0
  for x, y in zip(list1, list2):
    product += x*y
  return product","def dot_product(list1, list2:
  product = 0
  for x, y in zip(list1, list2:
    product += x*y
  return product",Syntax Error,File I/O
Generate a Python implementation of an algorithm that traverses a binary tree and clears all of its nodes.,,"# A recursive function to clear a binary tree 
def clearBinaryTree(root): 
	
	# Base case 
	if root is None: 
		return

	# First clear the left nodes 
	clearBinaryTree(root.left) 
	
	# Then clear the right nodes 
	clearBinaryTree(root.right) 
	
	# Clear the data of this node 
	root.data = None","# A recursive function to clear a binary tree 
def clearBinaryTree(root): 
	
	# Base case 
	if root is None: 
		return

	# First clear the left nodes 
	clearBinaryTree(root.left) 
	
	# Then clear the right nodes 
	clearBinaryTree(root.right) 
	
	# Clear the data of this node 
	root.data = None",correct,Recursion
Use an existing Python function to find the longest string in the following array.,"arr = [""cat"", ""dog"", ""elephant"", ""squirrel"", ""moose""","max(arr, key=len) # returns ""elephant""","max(arr, key=len) #",Incomplete Answer,String Manipulation
Write a python program to reverses a list while preserving the order of the elements,"lst = [1,2,3,4,5]","lst.reverse()
print(lst)  #output: [5,4,3,2,1]","lst.reverse()
print(lst)  #output: [5,4,3,2,1]",correct,File I/O
Create an algorithm using Python to find the largest number in a list.,"[8, 5, 10, 3]","def find_largest_number(numbers):
    # Finds the largest number from the given list
    largest = 0
    for num in numbers:
        if num > largest:
            largest = num
    return largest
 
numbers = [8, 5, 10, 3]
largest = find_largest_number(numbers)
print(largest)","def find_largest_number(numbers):
# Finds the largest number from the given list
largest = 0
for num in numbers:
    if num > largest:
        largest = num
return largest
 
numbers = [8, 5, 10, 3]
largest = find_largest_number(numbers)
print(largest)",Syntax Error,String Manipulation
Construct a Python class to represent a point in the Cartesian plane.,,"class Point:
    def __init__ (self, x=0, y=0):
        self.x = x
        self.y = y
 
    def __str__ (self):
        return ""({0},{1})"".format(self.x,self.y)
 
    def distance_from_origin (self):
        return ((self.x ** 2) + (self.y ** 2)) ** 0.5","class Point:
    def __init__ (self, x=0, y=0):
        self.x = x
        self.y = y
 
    def __str__ (self):
        return",Incomplete Answer,File I/O
Refactor a Python program to concatenate two strings without using the string.concat() function,"// Python program
str1 = ""Hello ""
str2 = ""World""

result = str1.concat(str2)
print(""Concatenated string: "", result)","str1 = ""Hello ""
str2 = ""World""
result = str1 + str2
print(""Concatenated string: "", result)","str1 = ""Hello ""
str2 = ""World""
result = str1 + str2
print(""Concatenated string: "", result)",correct,File I/O
Create a Python program that produces the output shown in this example.,"3
3
3
3
3
3","def print_grid(grid_size):
    for x in range(grid_size):
        for y in range(grid_size):
            print(grid_size, end="" "")
        print()

grid_size = 3
print_grid(grid_size)","def print_grid(grid_size):
    for x in range(grid_size):
        for y in range(grid_size)",Incomplete Answer,OOP
Write a Python program to take user input and check if it is a palindrome or not.,racecar,"def isPalindrome(inp):
 inp = inp.lower()
 return inp == inp[::-1]

user_input = input('Enter string: ')
if isPalindrome(user_input):
 print('It\'s a palindrome')
else:
 print('It\'s not a palindrome')","def isPalindrome(inp):
 inp = inp.lower()
 return inp == inp[::-1]

user_input = input('Enter string",Incomplete Answer,Recursion
Create a program in Python to sort a given unsorted list.,"[5, 4, 1, 8, 9, 2]","def sortList(lst): 
    lst.sort() 
    return lst
  
ar_list = [5, 4, 1, 8, 9, 2]
result = sortList(ar_list) 
  
print(result)","def sortList(lst): 
    lst.sort() 
    return lst
  
ar_list =",Incomplete Answer,File I/O
"Create a function in Python to generate a random matrix of size (m, n).",,"import numpy as np

def generateRandomMatrix(m, n):
  return np.random.randn(m, n)","import numpy as np

def generateRandomMatrix(m, n:
  return np.random.randn(m, n",Syntax Error,OOP
Calculate the average grade of a student given a list of their grades in Python.,"grades = [90, 85, 80, 75, 70]","def calculate_average_grade(grades): 
 total = 0
 for grade in grades: 
 total += grade 
 avg_grade = total / len(grades) 
 return avg_grade 

grades = [90, 85, 80, 75, 70] 
avg_grade = calculate_average_grade(grades) 
print('Average Grade: ', avg_grade) # Output: Average Grade: 80.0","def calculate_average_grade(grades): 
 total = 0
 for grade in grades: 
 total += grade 
 avg_grade = total / len(grades) 
 return avg_grade 

grades = [90, 85, 80, 75, 70] 
avg_grade = calculate_average_grade(grades) 
print('Average Grade: ', avg_grade) # Output: Average Grade: 80.0",correct,String Manipulation
Update the code snippet below so it works with Python 3.,"def message():
 print ""Hello World!""","def message():
 print(""Hello World!"")","def message():
 pr",Incomplete Answer,OOP
Write a function in Python that counts the number of words in a given sentence.,,"def word_count(sentence):
    count = 0
    for word in sentence.split(' '):
        count += 1
    return count","def word_count(sentence):
    count = 0
    for word in ",Incomplete Answer,String Manipulation
Rewrite the below program to use Python's dictionary comprehension.,"states = {'NY': 'New York', 'PA': 'Pennsylvania', 'FL': 'Florida'}

inverse_states = {}

for key,value in states.items():
  inverse_states[value] = key","states = {'NY': 'New York', 'PA': 'Pennsylvania', 'FL': 'Florida'}

inverse_states = {value:key for key,value in states.items()}","states = {'NY': 'New York', 'PA': 'Pennsylvania', 'FL': 'Florida",Incomplete Answer,File I/O
"Create an AWS Lambda function in Python that accepts a JSON object as input, processes it, and returns the result.","{
 ""x"": 10,
 ""y"": 20
}","import json

def handler(event, context):
 x = event[""x""]
 y = event[""y""]
 res = x + y
 return {
 ""statusCode"": 200,
 ""body"": json.dumps({""result"": res})
 }","import json

def handler(event, context):
 x = event[""x""]
 y = event[""y""]
 res = x + y
 return {
 ""statusCode"": 200,
 ""body"": json.dumps({""result"": res})
 }",correct,Recursion
Create a Python program for a count the number of occurrences of each letter in a given string.,,"def count_occurrences(string): 
    strings = list(string)
    dict = dict() 
    for letter in strings: 
        if (letter in dict): 
            dict[letter] += 1
        else: 
            dict[letter] = 1
    return dict
  
my_string = 'Hello World!'
letter_occurrences = count_occurrences(my_string)
print(letter_occurrences)","def count_occurrences(string: 
    strings = list(string
    dict = dict( 
    for letter in strings: 
        if (letter in dict: 
            dict[letter] += 1
        else: 
            dict[letter] = 1
    return dict
  
my_string = 'Hello World!'
letter_occurrences = count_occurrences(my_string
print(letter_occurrences",Syntax Error,OOP
Design a sorting algorithm in Python that will sort a given array of numbers in ascending order.,"[5, 9, 4, 2, 6]","def sort(nums):
    for i in range(len(nums)):
        min_ind = i
        for j in range(i+1, len(nums)):
            if nums[j] < nums[min_ind]:
                min_ind = j
        nums[i], nums[min_ind] = nums[min_ind], nums[i]
    return nums","def sort(nums):
    for i in range(len(nums)):
        min_ind = i
        for j in range(i+1, len(nums)):
            if n",Incomplete Answer,String Manipulation
Write a function to find the maximum of similar indices in two lists of tuples.,,"def max_similar_indices(test_list1, test_list2):
  res = [(max(x[0], y[0]), max(x[1], y[1]))
   for x, y in zip(test_list1, test_list2)]
  return (res) ","def max_similar_indices(test_list1, test_list2):
  res = [(max(x[0], y[0]), max(x[1], y[1]))
   for x, y in zip(test_list1, test_list2)]
  return (res) ",correct,OOP
Develop a Python script to print the first 10 squares of natural numbers.,,"for i in range(1, 11): 
  print(i**2)","for i in range(1, 11): 
  print(i**2)",correct,Loops
Develop a web scraper in python to extract the text from a given website,,"import requests
from bs4 import BeautifulSoup

def scrape_text(url):
    page = requests.get(url)
    soup = BeautifulSoup(page.content, 'html.parser')
    text = soup.find_all(text=True)
    return ' '.join(text).strip()","import requests
from bs4 import BeautifulSoup

def scrape_text(url):
    page = requests.get(url)
    soup = B",Incomplete Answer,Recursion
Create a _JSON serializer_ for a given Python data structure.,"data = {
 'name': 'Alice',
 'age': 22,
 'hobbies': ['coding', 'guitar']
}","import json

data = {
 'name': 'Alice',
 'age': 22,
 'hobbies': ['coding', 'guitar']
}

json_data = json.dumps(data)

print(json_data)","import json

data = {
 'name': 'Alice',
 'age': 22,
 'hobbies': ['coding', 'guitar']
}

json_data = json.dumps(data)

print(json_data)",Syntax Error,String Manipulation
Generate a Python program to delete an item from a given list,,"def delete_item(lst, item):
    if item in lst:
        lst.remove(item)
    return lst","def delete_item(lst, item):
    if item in lst:
        lst.remove(item)
    return lst",correct,File I/O
"Develop an algorithm in Python, that prints out the Fibonacci sequence up to the number N.",,"def Fibonacci(n): 
    a, b = 0, 1
    while a < n: 
        print(a, end = ' ') 
        a, b = b, a + b
    print() 
  
n = 10
Fibonacci(n) 

Output: 0 1 1 2 3 5 8","def Fibonacci(n): 
    a, b = 0, 1
    while a < n: 
        print(a, end = ' ') 
        a, b = b, a + b
    print() 
  
n = 10
Fibonacci(n) 

Output: 0 1 1 2 3 5 8",correct,String Manipulation
Create a web service (REST API) in Python to get the student information from the database.,,"import flask
from flask import request, jsonify

app = flask.Flask(__name__)

@app.route('/students', methods=['GET'])
def get_students():
    # get the information from the database
    data = [{'id':1, 'name':'John Doe'}, {'id':2, 'name':'Jane Doe'}]
    return jsonify(data)

if __name__ == '__main__':
    app.run(debug=True)","import flask
from flask import request, jsonify

app = flask.Flask(__name__

@app.route('/students', methods=['GET']
def get_students(:
    # get the information from the database
    data = [{'id':1, 'name':'John Doe'}, {'id':2, 'name':'Jane Doe'}]
    return jsonify(data

if __name__ == '__main__':
    app.run(debug=True",Syntax Error,Recursion
Modify a given Python program to optimize its performance.,"def process_array(array):
 n = len(array)
 result = 0
 for i in range(n):
  result += array[i]
 return result","def process_array(array):
 n = len(array)
 result = 0
 sum_backward = 0
 
 # Starting from the end and going towards the beginning 
 # this is an opportunity to reduce the time complexity 
 for i in range(n-1, -1, -1):
  sum_backward += array[i]
  result += sum_backward
  
 return result","def process_array(array):
 n = len(array)
 result = 0
 sum_backward = 0
 
 # Starting from the end and going towards the beginning 
 # this is an opportunity to reduce the time complexity 
 for i in range(n-1, -1, -1):
  sum_backward += array[i]
  result += sum_backward
  
 return result",correct,String Manipulation
Compose a Python Code to swap two numbers without using a temporary variable.,,"# Input two numbers
a = 10
b = 5

# Swapping using bitwise operator
a = a ^ b 
b = a ^ b 
a = a ^ b 

# Printing output
print(""a ="", a) 
print(""b ="", b)","# Input two numbers
a = 10
b = 5

# Swapping using bitwise operator
a = a ^ ",Incomplete Answer,File I/O
Write a Python program to generate a Fibonacci sequence of given length.,length = 8,"def getFibonacciSequence(length): 
    a = 0
    b = 1
    result = [a, b] 
    if (length < 2):
        return result 
    else:
        for i in range(2, length):
            c = a + b
            a = b 
            b = c
            result.append(c)
    return result
  
print(getFibonacciSequence(8))","def getFibonacciSequence(length): 
    a = 0
    b = 1
    result = [a, b] 
    if (length < 2):
        return result 
    else:
        for i in range(2, length):
            c = a + b
            a = b 
            b = c
            result.append(c)
    return result
  
print(getFibonacciSequence(8))",correct,File I/O
Write a Python program that takes a sentence as an argument and removes all punctuations from it.,"String: ""This, is a?! test* sentence.""","import string

def removePunctuations(sentence):
    return sentence.translate(str.maketrans('', '', string.punctuation))

print(removePunctuations(""This, is a?! test* sentence.""))","import string

def removePunctuations(sentence:
    return sentence.translate(str.maketrans('', '', string.punctuation

print(removePunctuations(""This, is a?! test* sentence.""",Syntax Error,Loops
Create a Python program to loop through a given list and print each item on a new line.,"my_list = [""apples"", ""oranges"", ""bananas""]","for item in my_list:
    print(item)",for item in my_lis,Incomplete Answer,OOP
"Create a Python program which keeps track of 3 variables x, y and z.",,"def keep_track():
    x = 0
    y = 0
    z = 0
    while True:
        # do something to x, y and z
        ...","def keep_track():
    x = 0
    y = 0
    z = 0
    while True:
        # do something to x, y and z
        ...",correct,Loops
Create a function in Python that implements binary search.,"[2, 5, 7, 9, 12, 15], 12","def binary_search(arr, value): 
    low = 0
    high = len(arr) - 1
  
    while low <= high: 
        mid = (low + high) // 2
        if arr[mid] < value: 
            low = mid + 1
        elif arr[mid] > value: 
            high = mid - 1
        else: 
            return mid 
  
    return -1

# Test
arr = [2, 5, 7, 9, 12, 15]
value = 12
print(binary_search(arr, value)) # 4","def binary_search(arr, value): 
    low = 0
    high = len(arr) - 1
  
    while low <= high: 
        mid = (low + high) // 2
        if arr[mid] < value: 
            low = mid + 1
        elif arr[mid] > value: 
            high = mid - 1
        else: 
            return mid 
  
    return -1

# Test
arr = [2, 5, 7, 9, 12, 15]
value = 12
print(binary_search(arr, value)) # 4",correct,File I/O
Create a for-loop in Python and use it to find the sum of a list of integers.,"[1, 4, 9, 16, 25]","total = 0
for num in [1, 4, 9, 16, 25]:
  total += num
print(total)","total = 0
for num in [1, 4, 9, 16, 25]:
  total += num
print(total)",correct,OOP
"Using HTTP, create a Python program to make a request to an API endpoint and receive a response.",,"import requests

url = 'https://api.example.com/endpoint'
response = requests.get(url)

data = response.json()","import requests

url = 'https//api.example.com/endpoint'
response = requests.get(url)

data = response.json()",Syntax Error,Loops
Create a function in Python that converts a Fahrenheit temperature to Celsius.,100 degrees,"def convertFahrenheitToCelsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5/9
    print(""{}°F is {}°C"".format(fahrenheit,celsius))

convertFahrenheitToCelsius(100)","def convertFahrenheitToCelsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5/9
 ",Incomplete Answer,OOP
Write a Python code to traverse a binary tree in depth-first search (DFS),,"def dfs(root):
 stack = [root]
 while stack:
    node = stack.pop(-1) 
    print(node.data) 
       
    if node.right:
        stack.append(node.right) 
    if node.left:
        stack.append(node.left)","def dfs(root):
 stack = [root]
 while stack:
node = stack.pop(-1) 
print(node.data) 
   
if node.right:
    stack.append(node.right) 
if node.left:
    stack.append(node.left)",Syntax Error,Recursion
Generate a Python program to copy all elements of one list into another list.,"source = [0, 1, 2]","source = [0, 1, 2]
 
dest = []
 
for item in source:
    dest.append(item)
    
print(dest)","source = [0, 1, 2]
 
dest = []
 
for item in ",Incomplete Answer,String Manipulation
Write a Python script that uses recursion to calculate the Fibonacci sequence for a given number of terms.,6,"def Fibonacci(n): 
   if n<0: 
      print(""Incorrect input"") 
   elif n==1: 
      return 0
   elif n==2: 
      return 1
   else: 
      return Fibonacci(n-1)+Fibonacci(n-2) 
 
# Driver Program 
n = 6
print(Fibonacci(n))","def Fibonacci(n: 
   if n<0: 
      print(""Incorrect input"" 
   elif n==1: 
      return 0
   elif n==2: 
      return 1
   else: 
      return Fibonacci(n-1+Fibonacci(n-2 
 
# Driver Program 
n = 6
print(Fibonacci(n",Syntax Error,String Manipulation
Convert the Python code attached to an equivalent Java program.,"def print_list(lst):
    for item in lst:
        print(item)","public class ListPrinter {
    public static void printList(List<Object> lst) {
        for (Object item : lst) {
            System.out.println(item);
        }
    }
}","public class ListPrinter {
    public static void printList(List<Object> lst {
        for (Object item : lst {
            System.out.println(item;
        }
    }
}",Syntax Error,Recursion
Write a Python program that randomly generates a response from a predetermined list when a button is pressed.,,"import random

responses = [""Hello!"", ""How are you?"", ""Good to meet you!"", ""Nice to see you!""]

def get_random_response():
    return random.choice(responses)

while True:
    input(""Press any key to generate a response... "")
    print(get_random_response())","import random

responses = [""Hello!"", ""How are you?"", ""Good to meet you!"", ""Nice to see you!""]

def get_random_response():
    return random.choice(responses)

while True:
    input(""Press any key to generate a response... "")
    print(get_random_response())",correct,Recursion
Create a python program that applies mean normalization to the given data.,"[1, 2, 3, 4, 5, 6]","def normalize_mean(data):
    mean = np.mean(data)
    normalized = [x - mean for x in data]
    return normalized","def normalize_mean(data):
    mean = np.mean(data)
    no",Incomplete Answer,OOP
Create a Python program that takes in a list and returns a new list. The program should subtract 10 from every element in the list.,"list = [1,2,3,4,5]","def subtractFromList(list): 
 return [x - 10 for x in list]","def subtractFromList(list) 
 return [x - 10 for x in list]",Syntax Error,File I/O
Create a python code that takes in a sentence and returns a list containing the length of each word.,"sentence = ""Hello I am a sentence""",sentence_lengths = [len(word) for word in sentence.split()],sentence_lengths = [len(word) for word in sentence.split()],Syntax Error,Recursion
Write a Python program that prints all prime numbers up to a given number n.,,"def prime_numbers(n):
 for i in range(2,n+1):
 prime = True
 for j in range(2,i):
 if i % j == 0:
 prime = False
 if prime:
 print(i)
 
prime_numbers(10) # Output: 2, 3, 5, 7","def prime_numbers(n):
 for i in range(2,n+1):
 prime = True
 for j in range(2,i):
 if i",Incomplete Answer,String Manipulation
Write a Python program to implement Linear Search for an array of numbers,"arr = [2, 3, 5, 7, 11]
n = 11","def LinearSearch(arr, n):
 for i in range(len(arr)):
 if arr[i] == n:
 return i
 return -1

index = LinearSearch(arr, n)
print(index)","def LinearSearch(arr, n):
 for i in range(len(arr)):
 if arr[i] == n:
 return i
 return -1

index = LinearSearch(arr, n)
print(index)",Syntax Error,OOP
Create a function in Python to find the longest string in a given list of strings,"[""Apple"", ""Banana"", ""Orange"", ""Mango"", ""Pineapple""]","def find_longest_string(arr):
    longest_string = ''
    for s in arr:
        if len(s) > len(longest_string):
            longest_string = s
    return longest_string

arr = [""Apple"", ""Banana"", ""Orange"", ""Mango"", ""Pineapple""]
result = find_longest_string(arr)
print('Longest string is', result)","def find_longest_string(arr):
    longest_string = ''
    for s in arr:
        if len(s) > len(longest_string):
            longest_string = s
    ",Incomplete Answer,OOP
Create a function in Python that takes two parameters: a list of numbers and a number called ‘n’ and returns the last n numbers in the list.,"myList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
n = 3","def last_n_numbers(myList, n):
  return myList[-n:]
  
res = last_n_numbers(myList, n)
print(res) 

# Output
[8, 9, 10]","def last_n_numbers(myList, n):
  return myList[-n:]
  
res ",Incomplete Answer,Loops
"Write a python program that will take a given string and return a new string that is the same as the given one, except that all letters are reversed.","""Hello World!""","def reverseString(string): 
    string = """".join(reversed(string)) 
    return string 

if __name__ == ""__main__"": 
    string = ""Hello World!""
    print(reverseString(string))

# Output:
""!dlroW olleH""","def reverseString(string): 
    string = """".join(reversed(string)) 
    return string 

if __name__ == ""__main__"": 
    string = ""Hello World!""
    print(reverseString(string))

# Output:
""!dlroW olleH""",correct,Recursion
Write a Python program to print the 3 most common elements of a given list.,"Input = [2, 5, 3, 7, 8, 5, 10, 19, 20]","from collections import Counter

Input = [2, 5, 3, 7, 8, 5, 10, 19, 20] 
  
Counter = Counter(Input) 
  
most_occur = Counter.most_common(3)

for i in most_occur: 
    print(i[0], "":"", i[1])","from collections import Counter

Input = [2, 5, 3, 7, 8, 5, 10, 19, 20] 
  
Counter = Counter(I",Incomplete Answer,Recursion
Generate a random set of numbers in Python with a size of 10 and range between 1 and 50.,,"import random

random_set = random.sample(range(1,51), 10)
print(random_set)","import random

random_set = random.sam",Incomplete Answer,String Manipulation
Generate a Python script that prints the sum of the numbers in the given range.,Start: 10 End: 19,"# Initialize one variable to store result
result = 0

# Use a loop to iterate through the given range
for num in range(10, 20):
    result += num

# Print the result
print(result)","# Initialize one variable to store result
result = 0

# Use a loop to iterate through the",Incomplete Answer,OOP
Create a function that computes an array of odd numbers within a given range,an integer n,"# Python3 program to find odd numbers in a range  

def odd_numbers(n): 
    odd_numbers = [] 
      
    # looping through each number 
    for i in range(1, n + 1): 
        if i % 2 != 0: 
            odd_numbers.append(i) 
    return odd_numbers","# Python3 program to find odd numbers in a range  

def odd_numbers(n): 
    odd_numbers = [] 
      
    # looping through ",Incomplete Answer,Recursion
Create a basic Command Line program in Python that takes two parameters and prints the result of their multiplication.,,"import sys

# Take two inputs from command line 
first, second = int(sys.argv[1]), int(sys.argv[2])

# Display the result of multiplication 
print(f""Result of {first} * {second} is: {first * second}"")","import sys

# Take two inputs from command line 
first, second = int(sys.argv[1]), int(sys.argv[2])
",Incomplete Answer,OOP
Implement a search algorithm in Python to look for the value in the list.,"list_tmp = [1, 23, 42, 5, 7, 34, 89]
value = 42","def search(list_tmp, value): 
    for index, item in enumerate(list_tmp): 
        if item == value: 
            return index 

    return -1","def search(list_tmp, value): 
    for index, item in enumerate(list_tmp): 
        if item == value: 
            return index 

    return -1",correct,File I/O
"Design a Python program to read in a list of list of strings, eliminate duplicate entries, sort them and print out the result.","[['b', 'a', 'd'], ['c', 'a', 'd'], ['a', 'f', 'g']]","def removeduplicates(list_of_string):
    result = []
    for item in list_of_string:
        if item not in result:
            result.append(item)
    result.sort()
    return result

list_of_string = [['b', 'a', 'd'], ['c', 'a', 'd'], ['a', 'f', 'g']]
print(removeduplicates(list_of_string))","def removeduplicates(list_of_string)
    result = []
    for item in list_of_string
        if item not in result
            result.append(item)
    result.sort()
    return result

list_of_string = [['b', 'a', 'd'], ['c', 'a', 'd'], ['a', 'f', 'g']]
print(removeduplicates(list_of_string))",Syntax Error,OOP
Write a function to create the next bigger number by rearranging the digits of a given number.,,"def rearrange_bigger(n):
    nums = list(str(n))
    for i in range(len(nums)-2,-1,-1):
        if nums[i] < nums[i+1]:
            z = nums[i:]
            y = min(filter(lambda x: x > z[0], z))
            z.remove(y)
            z.sort()
            nums[i:] = [y] + z
            return int("""".join(nums))
    return False","def rearrange_bigger(n):
    nums = list(str(n))
    for i in range(len(nums)-2,-1,-1):
        if nums[i] < nums[i+1]:
            z = nums[i:]
            y = min(filter(lambda x: x > z[0], z))
            z.remove(y)
            z.sort()
            nums[i:] = [y] + z
            return int("""".join(nums))
    return False",Syntax Error,OOP
"Write a Python code that prints ""Hello World"" if the user inputs ""Y"" and ""Goodbye"" if they input ""N"".",,"user_input = input('Input Y or N: ')

if user_input == 'Y':
    print('Hello World')
elif user_input == 'N':
    print('Goodbye')","user_input = input('Input Y or N: ')

if user_input == 'Y':
    ",Incomplete Answer,File I/O
Write a function to find the difference between two consecutive numbers in a given list.,,"def diff_consecutivenums(nums):
    result = [b-a for a, b in zip(nums[:-1], nums[1:])]
    return result","def diff_consecutivenums(nums):
    result = [b-a fo",Incomplete Answer,String Manipulation
Create a Python class that implements iterable protocol.,,"class IterableData:
    def __init__(self, data):
        self.data = data
    
    def __iter__(self):
        for item in self.data:
            yield item

# Usage
iterable = IterableData([1, 2, 3, 4])
for item in iterable:
    print(item)","class IterableData:
    def __init__(self, data):
        self.data = data
    
    def __iter__(self):
        for item in self.data:
            yield item

# Usage
iterable = IterableData([1, 2, 3, 4])
for item in iterable:
    print(item)",correct,Recursion
Create an API wrapper in Python for the following API,"""https://example.com/api/users/list""","import requests 

# API wrapper for the given API 
def api_wrapper(url): 
    # get the API response 
    response = requests.get(url) 

    # check the response status 
    if(response.status_code == 200): 
        # return json data 
        return response.json()
    else: 
        return None","import requests 

# API wrapper for the given API 
def api_wrapper(url): 
    # get the API response 
    response = requests.get(url) 

    # check",Incomplete Answer,Recursion
Generate a Python program to remove a key-value pair in a dictionary.,"d = { 'a': 10, 'b': 20, 'c':30 }","def remove_pair(d, key):
 if key in d:
 del d[key]
 return d
 
d = { 'a': 10, 'b': 20, 'c':30 }
remove_pair(d, 'c')","def remove_pair(d, key):
 if key in d:
 del d[key]
 return d
 
d = { 'a': 10, 'b': 20, 'c':30 }
remove_pair(d, 'c')",correct,String Manipulation
Write a function to check if the given number is woodball or not.,,"def is_woodall(x): 
	if (x % 2 == 0): 
		return False
	if (x == 1): 
		return True
	x = x + 1 
	p = 0
	while (x % 2 == 0): 
		x = x/2
		p = p + 1
		if (p == x): 
			return True
	return False","def is_woodall(x) 
	if (x % 2 == 0) 
		return False
	if (x == 1) 
		return True
	x = x + 1 
	p = 0
	while (x % 2 == 0) 
		x = x/2
		p = p + 1
		if (p == x) 
			return True
	return False",Syntax Error,File I/O
Design a Python algorithm to parse a list of strings and prints the longest string's length.,"listOfString= [""I"", ""am"", ""so"", ""happy""]","listStrings= [""I"", ""am"", ""so"", ""happy""]
longestStringLen = 0
for string in listStrings:
    if (len(string) > longestStringLen):
        longestStringLen = len(string)

print(longestStringLen)","listStrings= [""I"", ""am"", ""so"", ""happy""]
longestStringLen = 0
for string in listStrings
    if (len(string) > longestStringLen)
        longestStringLen = len(string)

print(longestStringLen)",Syntax Error,Recursion
Write a Python program that takes in three numbers as input and determines which number is the maximum.,,"def max_number(a,b,c):
  max = a
  if b > max:
    max = b
  if c > max:
    max = c
  return max

print(max_number(1,5,3))","def max_number(a,b,c):
  max = a
  if b > max:
    max = b
  ",Incomplete Answer,OOP
Edit the following code to fix any errors.,"# Python code to print the Fibonacci series
limit = int(input(""Enter limit : ""))

a = 0
b = 1

while(limit):
	print(a, end='\t')
	a = b
	b += b
	limit -= 1","# Python code to print the Fibonacci series
limit = int(input(""Enter limit : ""))

a = 0
b = 1

while(limit):
	print(a, end='\t')
	a, b = b, a + b
	limit -= 1","# Python code to print the Fibonacci series
limit = int(input(""Enter limit : ""))

a = 0
b = 1

while(limit):
	print(a, end='\t')
	a, b = b, a + b
	limit -= 1",correct,String Manipulation
"In Python, use the re module to remove the HTML tags from a given string.",String: <b>This is a bold string</b>,"import re

string = ""<b>This is a bold string</b>""

clean_string = re.sub(r'<[^>]*>', '', string)

print(clean_string)","import re

string = ""<b>This is a bold string</b>""

clean_string = re.sub(r'<[^>]*>', '', string

print(clean_string",Syntax Error,Loops
Write a Python program to create a function that receives a list of strings and returns a new list with the strings sorted according to their length.,"[""Python"", ""is"", ""a"", ""programming"", ""language""]","def sort_list_by_length(list_of_strings):
    return sorted(list_of_strings, key=len) 

list_of_strings = [""Python"", ""is"", ""a"", ""programming"", ""language""]
sorted_list = sort_list_by_length(list_of_strings) 

print(sorted_list)","def sort_list_by_length(list_of_strings):
    return sorted(list_of_strings, key=len) 

list_of_strings = [""Pytho",Incomplete Answer,Loops
Create an algorithm in Python which takes an integer as input and prints out the binary reversed version of that number.,num = 8,"bin_str = bin(num)
rev_bin_str = '0b' + bin_str[:1:-1]
rev_num = int(rev_bin_str,2)

print(""The binary reversed version of {} is {}"".format(num, rev_num))","bin_str = bin(num)
rev_bin_str = '0b' + bin_str[:1:-1]
rev_num = int(rev_bin_str,2)

print(""The binary reversed version of {} is {}"".format(num, rev_num))",correct,OOP
Edit a python program to print the square of a number input by the user.,"num = input(""Enter a number: "")","num = input(""Enter a number: "")

num = int(num)

print(""The square of the number is:"", num**2)","num = input(""Enter a number: "")

num = int(num)

print(""The square of the number is:"", num**2)",correct,String Manipulation
Generate a valid JSON representation for the following object.,"{""name"": ""John Doe"", ""age"": 34, ""skills"": [""JavaScript"", ""Python""]}","{
 ""name"": ""John Doe"",
 ""age"": 34,
 ""skills"": [
  ""JavaScript"",
  ""Python""
 ]
}","{
 ""name"": ""John Doe"",
 ""age"": 34,
 ""skills"": [
  ""JavaScript"",
  ""Python""
 ]
}",correct,String Manipulation
Create a Python program to find the intersection of two given array. The intersected elements should be the elements present in both the arrays.,"Array 1: [3, 5, 2, 8, 1], Array 2: [5, 8, 9, 7]","def intersection(array_1, array_2): 
    result = [] 
    for num in array_1: 
        if num in array_2: 
            result.append(num) 
    return result","def intersection(array_1, array_2): 
    result = [] 
    for num in array_1: 
        if num in array_2: 
            result.append(num) 
    return result",correct,File I/O
Generate a Python function that takes an array of elements and finds the frequency of each element,"[1,4,1,4,4,4,9,7]","def count_frequency(l):
    frequencies = {}
    for i in l:
        if i in frequencies:
            frequencies[i] += 1
        else:
            frequencies[i] = 1
    return frequencies

l = [1,4,1,4,4,4,9,7]
print(count_frequency(l))","def count_frequency(l):
    frequencies = {}
    for i in l:
        if i in frequencies:
            frequencies[i] +=",Incomplete Answer,Recursion
Generate a random number between 1 and 10 in Python.,,"import random

randomNumber = random.randint(1, 10)
print(randomNumber)","import random

randomNumber = random.randint(1, 10)
print(randomNumber)",correct,OOP
Write a function in Python to get the number of occurrences of a particular character in a given sentence.,"sentence = ""Hello world!""
character = 'l'","def count_occurrences(sentence, character): 
    return sentence.count(character)","def count_occurrences(sentence, characte",Incomplete Answer,OOP
Design a function in Python for filtering out unique elements in a list.,"list = [1, 2, 2, 3, 3, 4]","def filter_list(list): 
  filtered_list = [] 

  for i in list: 
    if i not in filtered_list: 
      filtered_list.append(i) 
  
  return filtered_list","def filter_list(list): 
  filtered_list = [] 

  for i in list: 
if i not in filtered_list: 
  filtered_list.append(i) 
  
  return filtered_list",Syntax Error,String Manipulation
Implement a function to remove all occurrences of the word 'python' from a given sentence.,"sentence = ""I love learning Python but sometimes it is hard to understand""","def remove_word(sentence, word):
    words = sentence.split()
    new_words = [w for w in words if w != word]
    return ' '.join(new_words)

new_sentence = remove_word(sentence, 'Python')","def remove_word(sentence, word):
    words = sentence.split()
    new_words = [w for w in word",Incomplete Answer,Recursion
Write a function in Python for sorting a list of objects by an attribute 'name'.,"list_of_objects = [{""name"": ""John"", ""age"": 35}, {""name"": ""Liz"", ""age"": 25}, {""name"": ""Max"", ""age"": 28}]","def sort_by_name(lst): 
    return sorted(lst, key=lambda item: item[""name""])","def sort_by_name(lst): 
    return sorted(lst, key=lambda item: item[""name""])",correct,OOP
Write a python function to find the item with maximum occurrences in a given list.,,"def max_occurrences(nums):
    max_val = 0
    result = nums[0] 
    for i in nums:
        occu = nums.count(i)
        if occu > max_val:
            max_val = occu
            result = i 
    return result","def max_occurrences(nums):
    max_val = 0
    result = nums[0] 
    for i in nums:
        occu = nums.count(i)
        if occu > max_val:
            max_val = occu
            result = i 
    return result",correct,OOP
Create a Python function that sorts a list of strings alphabetically,"[‘apple’,’orange’,’pear’]","def sort_strings(list_of_strings):
    sorted_list = sorted(list_of_strings, key=lambda str: str.lower())
    return sorted_list

result = sort_strings(['apple', 'orange', 'pear'])
print(result)","def sort_strings(list_of_strings):
    sorted_list = sorted(list_of_strings, key=lambda str: str.lower())
    return sorted_list

result = sort_strings(['apple', 'orange', 'pear'])
print(name, result)",Syntax Error,File I/O
Write a function to check whether the given month name contains 31 days or not.,,"def check_monthnumb(monthname2):
  if(monthname2==""January"" or monthname2==""March""or monthname2==""May"" or monthname2==""July"" or monthname2==""Augest"" or monthname2==""October"" or monthname2==""December""):
    return True
  else:
    return False","def check_monthnumb(monthname2):
  if(monthname2==""January"" or monthname2==""March""or monthname2==""May"" or monthname2==""July"" or monthname2==""Augest"" or monthname2==""October"" or monthname2==""December""):
    return True
  else:
    return False",correct,String Manipulation
Write a Python program to solve a quadratic equation.,"a = 1
b = -5
c = 6","import math

# Solve the quadratic equation ax**2 + bx + c = 0 
# ax**2 + bx + c = 0 
# find x

a = 1
b = - 5
c = 6

d = (b**2) - (4*a*c)
 
# find two solutions
sol1 = (-b-math.sqrt(d))/(2*a)
sol2 = (-b+math.sqrt(d))/(2*a)
 
print('The solution are {0} and {1}'.format(sol1,sol2))","import math

# Solve the quadratic equation ax**2 + bx + c = 0 
# ax**2 + bx + c = 0 
# find x

a = 1
b = - 5
c = 6

d = (b**2) - (4*a*c)
 
",Incomplete Answer,File I/O
Create a python 3 script to generate a list of integers from 0 to 100.,,"list_of_integers = [x for x in range(0, 101)]","list_of_integers = [x for x in range(0, 101)]",Syntax Error,String Manipulation
Design a program in Python to generate a random password.,,"import random, string

def genRandomPassword():
    length = 8
    random_password= ''.join([random.choice(string.ascii_letters + string.digits + string.punctuation) for n in range(length)])
    return random_password

password = genRandomPassword()
print(password)","import random, string

def genRandomPassword():
    length = 8
    random_password= ''.join([random.choice(string.ascii_letters + string.digits + string.punctuation) for n in range(length)])
    return random_password

password = genRandomPassword()
print(password)",correct,String Manipulation
Design a function in Python to determine if a given number is prime.,37,"def is_prime(n):
    if n <= 1: 
        return False
    if n == 2: 
        return True
    if n > 2 and n % 2 == 0: 
        return False

    sqrt_n = int(n**0.5)
    for i in range(3, sqrt_n+1, 2):
        if n % i == 0:
            return False
    return True

if is_prime(37):
    print('37 is a prime number!')","def is_prime(n):
    if n <= 1: 
        return False
    if n == 2: 
        return True
    if n > 2 and n % 2 == 0: 
        return False

    sqrt_n = int(n**0.5)
    for i in range(3, sqrt_n+1, 2):
        if n % i == 0:
            return False
    return True

if is_prime(37):
    print('37 is a prime number!')",correct,File I/O
Write code in Python to calculate the mean for a given list of numbers.,"[4, 17, 12, 78, 43, 13, 94, 77]","import numpy as np 

# given list of numbers 
list = [4, 17, 12, 78, 43, 13, 94, 77] 

# calculating mean 
mean = np.mean(list) 

# printing mean 
print(""Mean:"", mean)","import numpy as np 

# given list of numbers 
list = [4, 17, 12, 78, 43, 13, 94, 77",Incomplete Answer,File I/O
Find the most efficient Python code to print all the divisors of an input number.,input = 28,"# Python Program to find the factors of a number

# define a function
def print_divisors(input):

    # find all factors of the input number
    for i in range(1, input + 1):
        if input % i == 0:
            print (i)

# take input from the user
input = 28

# print the divisors
print_divisors(input)","# Python Program to find the factors of a number

# define a function
def print_divisors(input:

    # find all factors of the input number
    for i in range(1, input + 1:
        if input % i == 0:
            print (i

# take input from the user
input = 28

# print the divisors
print_divisors(input",Syntax Error,OOP
Create a Python function that takes a positive integer as input and returns a list of its prime factors.,The number 12.,"def prime_factors(number):
 prime_factors = []
 i = 2
 while number > 1:
  if number % i == 0:
   prime_factors.append(i)
   number //= i
  else:
   i += 1
 return prime_factors

print(prime_factors(12))
# [2, 2, 3]","def prime_factors(number):
 prime_factors = []
 i = 2
 while number > 1:
  if number % i == 0:
   prime_factors.append(i)
   number //= i
  else:
   i += 1
 return prime_factors

print(prime_factors(12))
# [2, 2, 3]",correct,File I/O
"Write a Python program to keep track of an array of prices, and output the maximum and minimum price in the array.","[20, 40, 60, 5]","prices = [20, 40, 60, 5]

max_price = max(prices)
min_price = min(prices)

print('Max price is: ' + str(max_price))
print('Min price is: ' + str(min_price))","prices = [20, 40, 60, 5]

max_price = max(prices)
min_price = min(prices)

pri",Incomplete Answer,File I/O
Use Python to generate a random grade based on a given number of points.,,"def generate_grade(points):
    if points >= 90:
       return ""A""
    elif points >= 80:
       return ""B""
    elif points >= 70:
       return ""C""
    elif points >= 60:
       return ""D""
    else:
       return ""F""","def generate_grade(points:
    if points >= 90:
       return ""A""
    elif points >= 80:
       return ""B""
    elif points >= 70:
       return ""C""
    elif points >= 60:
       return ""D""
    else:
       return ""F""",Syntax Error,Loops
Write a Python code to tokenize the given sentence.,This is a sample sentence,"import nltk

sentence = ""This is a sample sentence""

tokenized_words = nltk.word_tokenize(sentence)

print(tokenized_words)","import nltk

sentence = ""This is a sample sentence""

tokenize",Incomplete Answer,Loops
Write a Python code to display the following output,,"print(""*"" * 10)
for i in range(4):
    print(""*      *"")
print(""*"" * 10)","print(""*"" * 10)
for i in range(4):
    print(""*      *"")
print(""*"" * 10)",correct,File I/O
"Given a Python list, create a new list of all items in the first list that are not in the second list.","first_list = [1, 2, 3, 4, 5]
second_list = [3, 4]","first_list = [1, 2, 3, 4, 5]
second_list = [3, 4]

new_list = []

for item in first_list:
    if item not in second_list:
        new_list.append(item)
        
print(new_list) # [1, 2, 5]","first_list = [1, 2, 3, 4, 5]
second_list = [3, 4]

new_list = []

for item in first_list:
    if item not in second_list:
        new_list.append(item)
        
print(new_list) # [1, 2, 5]",correct,Loops
Construct a class in Python to represent complex numbers.,,"class ComplexNumber:
    def __init__(self, real, imaginary):
        self.real = real
        self.imaginary = imaginary
    
    def __str__(self):
        return f""{self.real} + {self.imaginary}i""","class ComplexNumber:
    def __init__(self, real, imaginary):
        self.real = real
        self",Incomplete Answer,Loops
Write a correct Python program to extract all words from a given sentence which have 4 or more characters.,"my_sentence = ""This is an example sentence""","def words_with_four_or_more_characters(my_sentence):
  words = my_sentence.split("" "")
  four_plus_words = []
  for word in words:
    if len(word) >= 4:
      four_plus_words.append(word)
  return four_plus_words","def words_with_four_or_more_characters(my_sentence):
  words = my_sentence.split("" "")
  four_plus_words = []
  for word in words:
    if len(word) >= 4:
      four_plus_words.append(word)
  return four_plus_words",correct,Loops
Write a function to calculate the sum of the positive numbers of a given list of numbers using lambda function.,,"def sum_positivenum(nums):
  sum_positivenum = list(filter(lambda nums:nums>0,nums))
  return sum(sum_positivenum)","def sum_positivenum(nums):
  sum_positivenum = list(filter(lambda nums:nums>0,nums))
  return sum(sum_positivenum)",correct,OOP
"Given a list of numbers, write a Python program to calculate the median.","[3, 4, 5, 9, 12, 15]","def median(nums):
    nums.sort()
    n = len(nums)
    if n % 2 == 0:
        return (nums[n//2] + nums[(n//2) - 1]) / 2
    return nums[n//2]

nums = [3, 4, 5, 9, 12, 15]
print(median(nums))","def median(nums):
nums.sort()
n = len(nums)
if n % 2 == 0:
    return (nums[n//2] + nums[(n//2) - 1]) / 2
return nums[n//2]

nums = [3, 4, 5, 9, 12, 15]
print(median(nums))",Syntax Error,File I/O
Edit the given Python code to make it asynchronous.,"""""""
def find_files(files, pattern):
    result = []
    for f in files:
        if re.search(pattern, f):
            result.append(f)
    return result
""""""","""""""
import asyncio
import re

async def find_files(files, pattern):
    result = []
    for f in files:
        if re.search(pattern,f):
            result.append(f)
    return result
""""""","""""""
import asyncio
import re

async def find_files(files, pattern):
    result = []
    for f in files:
        if re.search(pattern,f):
            result.append(f)
    return result
""""""",correct,File I/O
Write a Python code to generate the Fibonacci sequence up to n-th number.,7,"def fibonacciSequence(n): 
    fibSequence = []
    a, b = 0, 1
    while b < n:
        fibSequence.append(b)
        a, b = b, a + b
    return fibSequence

n = 7

print(fibonacciSequence(n)) // [1, 1, 2, 3, 5]","def fibonacciSequence(n): 
    fibSequence = []
    a, b = 0, 1
    while b < n:
        fibSequence.appen",Incomplete Answer,Recursion
Create a Python script to solve an equations.,2x + 3 = 5,"def solve(eq):
    lhs_x = eq.split(""="")[0]
    rhs = float(eq.split(""="")[1])
    x = float(lhs_x.split(""+"")[0].split(""x"")[0])
    constant = float(lhs_x.split(""+"")[1])
    return (rhs - constant) / x

if __name__ == ""__main__"":
    eq = ""2x + 3 = 5""
    print(solve(eq))","def solve(eq):
    lhs_x = eq.split(""="")[0]
    rhs = float(eq.split(""="")[1])
    x = float(lhs_x.split(""+"")[0].split(""x"")[0])
    cons",Incomplete Answer,Recursion
Create a Python program that takes two strings as input and creates a new string with the characters in the second string that are not present in the first string.,"'jello','hello'","def difference(string1, string2):
  new_string = ''
  
  for char in string2:
    if char not in string1:
      new_string += char
      
  return new_string

string1 = 'jello'
string2 = 'hello'

print(difference(string1, string2)) # Output: 'e'","def difference(string1, string2):
  new_string = ''
  
  for char in string2:
    if char not in string1:
      new_string",Incomplete Answer,OOP
Output the maximum value of a Python dictionary.,"{
 'a': 10, 
 'b': 20, 
 'c': 30
}",max_value = max(dictionary.values()) # 30,max_value = max(dictionary.values()) # 30,correct,OOP
Develop an algorithm in Python to generate a Fibonacci series up to the nth value.,n = 10,"# Program to generate a Fibonacci series using an algorithm

# function to generate Fibonacci series
def generate_fibonacci_series(n):
    a, b = 0, 1 
    result = [] 
    while b < n:
        result.append(b)
        a, b = b, a + b 
    return result

# Driver code 
n = 10
result = generate_fibonacci_series(n)
print(""The Fibonacci number up to"", n, ""is"", result)","# Program to generate a Fibonacci series using an algorithm

# function to generate Fibonacci series
def generate_fibonacci_series(n):
    a, b = 0, 1 
    result = [] 
    while b < n:
        result.append(b)
        a, b = b, a + b 
    return result

# Driver code 
n = 10
result = generate_fibonacci_series(n)
print(""The Fibonacci number up to"", n, ""is"", result)",correct,Loops
Train a machine learning model in Python using a given dataset and generate a confusion matrix.,// Dataset of 1000 samples and 30 features,"from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0) 
model.fit(X_train, y_train)
predictions = model.predict(X_test)
confusion_matrix(y_test, predictions)","from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix

X_train, X_test, y_train, y_test = tra",Incomplete Answer,Loops
Optimize the following Python code snippet to make it run faster.,"def add_numbers(numbers):
 result = 0
 for num in numbers:
 result += num
 return result","def add_numbers(numbers):
 result = 0
 l = len(numbers)
 i = 0
 while i < l:
 result += numbers[i]
 i += 1
 return result","def add_numbers(numbers):
 result = 0
 l = len(numbers)
 i =",Incomplete Answer,String Manipulation
Write a Python program for computing the sum of a given array of integers.,"[1, 2, 3, 4, 5]","def compute_sum(int_arry):
    sum = 0
    # loop through each element in the array
    for i in int_arry:
        sum += i
    return sum

# example testing code
int_arry = [1, 2, 3, 4, 5]
total_sum = compute_sum(int_arry)

print(""Sum of array elements is"", total_sum)","def compute_sum(int_arry):
    sum = 0
    # loop through each element in the array
    for i in int_arry:
        sum += i
    return sum

# example testing code
int_arry = [1, 2, 3, 4, 5]
total_sum = compute_sum(int_arry)

print(""Sum of array elements is"", total_sum)",correct,Loops
You are given the following string. Write a Python program to print how many times each word appears in the string.,"input_string = ""This is an exmaple of a string.""","def count_words(input_string):
  words_count = {}
  words = input_string.split()
  for word in words:
    if word in words_count:
      words_count[word] += 1
    else:
      words_count[word] = 1
  return words_count

words_count = count_words(input_string)
print(words_count)","def count_words(input_string):
  words_count = {}
  words = input_string.split()
  for word in words:
    if word in words_count:
      wo",Incomplete Answer,String Manipulation
Write a Python program to take a list of words and create a dictionary with the words as keys and the frequency of each word as the values.,"words = ['a', 'b', 'a', 'c', 'b', 'a', 'd']","words_dict = {}
for word in words:
    if word in words_dict:
        words_dict[word] += 1
    else:
        words_dict[word] = 1

print(words_dict)

# Output
# {'a': 3, 'b': 2, 'c': 1, 'd': 1}","words_dict = {}
for word in words:
    if word in words_dict:
        words_dict[word] += 1
    else:
        words_dict[word] = 1

print(words_dict)

# Output
# {'a': 3, 'b': 2, 'c': 1, 'd': 1}",correct,Recursion
Write a function to find the number of ways to partition a set of bell numbers.,,"def bell_number(n):   
    bell = [[0 for i in range(n+1)] for j in range(n+1)] 
    bell[0][0] = 1
    for i in range(1, n+1): 
        bell[i][0] = bell[i-1][i-1]  
        for j in range(1, i+1): 
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]   
    return bell[n][0] ","def bell_number(n):   
    bell = [[0 for i in range(n+1)] for j in range(n+1)] 
    bell[0][0] = 1
    for i in range(1, n+1): 
        bell[i][0] = bell[i-1][i-1]  
        for j in range(1, i+1): 
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]   
    return bell[n][0] ",correct,String Manipulation
Create a recursive function in Python to calculate the factorial of the following number:,7,"def factorial(x):
    if x == 0:
        return 1
    else:
        return x * factorial(x-1)

x = 7

factorial_of_x = factorial(x)
print(""The factorial of {} is {}"".format(x, factorial_of_x))","def factorial(x):
    if x == 0:
        return 1
    else:
        return x * factorial(x-1)

x",Incomplete Answer,String Manipulation
Create a function to calculate the midpoint between two 3-dimensional points using Python.,"point1 = [35.0, 43.0, 81.0]
point2 = [82.0, 54.0, 19.0]","def midpoint3D(point1, point2): 
    x_mid = (point1[0] + point2[0]) / 2
    y_mid = (point1[1] + point2[1]) / 2
    z_mid = (point1[2] + point2[2]) / 2
    return [x_mid, y_mid, z_mid]

point1 = [35.0, 43.0, 81.0]
point2 = [82.0, 54.0, 19.0]
midpoint = midpoint3D(point1, point2)
print(midpoint) # [58.5, 48.5, 50.0]","def midpoint3D(point1, point2): 
    x_mid = (point1[0] + point2[0]) / 2
    y_mid = (point1[1] + point2[1]) / 2
    z_mid = (point1[2] + point2[2]) / 2
    return [x_mid, y_mid, z_mid]

point1 = [35.0, 43.0, 81.0]
point2 = [82.0, 54.0, 19.0]
midpoint = midpoint3D(point1, point2)
print(midpoint) # [58.5, 48.5, 50.0]",correct,File I/O
Create a Python class that allows users to check if a given number is prime.,,"class PrimeChecker:
    def is_prime(self, num):
        if num <= 1:
            return False
        for i in range(2, int(num**0.5) + 1):
            if num % i == 0:
                return False
        return True","class PrimeChecker:
def is_prime(self, num):
    if num <= 1:
        return False
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    return True",Syntax Error,Loops
"In Python, write a script to sort the list items in descending order.","list_items = [3, 7, 5, 8, 10]","list_items = [3, 7, 5, 8, 10]

list_items.sort(reverse=True)

print(list_items) # Output: [10, 8, 7, 5, 3]","list_items = [3, 7, 5, 8, 10]

list_items.sort(revers",Incomplete Answer,File I/O
Modify the following Python function to get the first index of the keyword within the string.,"def first_index(str, keyword):
    for i in range(len(str)):
        if str[i] == keyword:
            return i","def first_index(str, keyword):
    for i in range(len(str)):
        if str[i] == keyword:
            return i
    return -1","def first_index(str, keyword):
    for i in range(len(str)):
        if str[i] == keyword:
            return i
    return -1",Syntax Error,File I/O
Create a Python function that takes a list of strings as input and returns the longest string in the list.,"['Data', 'Science', 'Machine', 'Learning']","def find_longest_string(string_list):
    longest_string = ''
    for string in string_list:
        if len(string) > len(longest_string):
            longest_string = string
    return longest_string","def find_longest_string(string_list):
    longest_string = ''
    for string in string_list:
        if len(string) > len(longest_string):
            longest_string = string
    return longest_string",correct,Recursion
Generate a random string in with five characters in Python.,,"import string
import random

def generate_random_string(size):
 chars = string.ascii_letters + string.digits
 return ''.join(random.choice(chars) for _ in range(size))","import string
import random

def generate_random_string(size):
 chars = string.asci",Incomplete Answer,OOP
Write an efficient algorithm in Python to find the minumum number of iterations to reach a certain number.,Start with number 5 and the end goal is number 10,"def min_num_iterations(start, end):
    num_iterations = 0

    while start < end:
        start += 1
        num_iterations += 1

    return num_iterations

print(min_num_iterations(5, 10)) # Output: 5","def min_num_iterations(start, end):
    num_iterations = 0

    while start < end:
        start += 1
        num_iterations += 1

    return num_iterations

print(min_num_iterations(5, 10)) # Output: 5",correct,Recursion
Design a program in Python that takes in a list of numbers and outputs the list after removing all negative numbers,,"def remove_negatives(list):
    filtered_list = list(filter(lambda x: x>=0,list))
    return filtered_list","def remove_negatives(list):
    filtered_list = list(",Incomplete Answer,String Manipulation
Generate a 3-D matrix of random values in Python,,"import numpy as np

matrix = np.random.rand(3,3,3)","import numpy as np

matrix = np.random.rand(3,3,3)",correct,String Manipulation
Write a Python program to sort a list of dictionaries by a key in each dictionary.,"my_list = [{'name': 'Tom', 'age': 25}, {'name': 'John', 'age': 21}, {'name': 'Adam', 'age': 26}]","def sort_list_of_dicts_by_key(my_list, key):
    return sorted(my_list, key=lambda k: k[key])","def sort_list_of_dicts_by_key(my_list, key):
return sorted(my_list, key=lambda k: k[key])",Syntax Error,Loops
"Create a Python script that takes a sentence as an input, separates all the words into a list and prints them in alphabetical order.",This is an example sentence,"input_sentence = ""This is an example sentence""
words = input_sentence.split()
words.sort()

print(words) # ['an', 'example', 'is', 'sentence', 'This']","input_sentence = ""This is an example sentence""
words = input_sentence.split()
words.sort()

print(words) # ['an', 'example', 'is', 'sentence', 'This']",Syntax Error,Recursion
"Generate a function in Python which takes an array as an argument and returns an array of length two, with the first element being the maximum value and the second element being the minimum value of the array.","[1, 5, 7, 3, 9]","def minmax(array):
  max_val = max(array)
  min_val = min(array)
  return [max_val, min_val]","def minmax(array):
  max_val = max(array)
  mi",Incomplete Answer,File I/O
Implement a function in Python that takes a string argument and returns the characters of the string in reverse order.,,"def reverse_string(input_string):
    reversed_string = ''
    for i in range(len(input_string)-1, -1, -1):
        reversed_string += input_string[i]
    return reversed_string","def reverse_string(input_string):
    reversed_string = ''
    for i in range(len(input_",Incomplete Answer,OOP
"Write a Python script to generate a random integer in the interval [0, 10).",,"import random

x = random.randint(0, 10)
print(x)","import random

x = rando",Incomplete Answer,String Manipulation
Develop a solution which adds two numbers X and Y and prints the sum as output using Python.,"X = 10 
Y = 20","x = 10
y = 20

sum = x + y

print(sum) # Output: 30","x = 10
y = 20

sum = x + ",Incomplete Answer,OOP
Create a function in Python that takes two dates as parameters and calculates the number of days between them.,,"def date_difference(date1, date2):
    diff = date2 - date1
    return diff.days","def date_difference(date1, date2):
    diff = date2 - date1
    return diff.days",correct,String Manipulation
Edit the Python code below to optimize it's runtime by using an alternative algorithm.,"def sum_all_numbers(n):
 result = 0
 for number in range(1, n+1):
 result += number
 return result","def sum_all_numbers(n):
 return n * (n + 1) // 2","def sum_all_numbers(n):
 return n * (n + 1) // 2",correct,File I/O
Suggest an improvement to the following python program.,"def find_duplicates(lst):
duplicates = []
for elem in lst:
    if lst.count(elem) > 1:
        if elem not in duplicates:
            duplicates.append(elem)
return duplicates","def find_duplicates(lst):
    seen = set()
    duplicates = []
    for elem in lst:
        if elem in seen:
            duplicates.append(elem)
        else:
            seen.add(elem)
    return duplicates","def find_duplicates(lst)
    seen = set()
    duplicates = []
    for elem in lst
        if elem in seen
            duplicates.append(elem)
        else
            seen.add(elem)
    return duplicates",Syntax Error,Recursion
Write a function to calculate the geometric sum of n-1.,,"def geometric_sum(n):
  if n < 0:
    return 0
  else:
    return 1 / (pow(2, n)) + geometric_sum(n - 1)","def geometric_sum(n):
  if n < 0:
return 0
  else:
return 1 / (pow(2, n)) + geometric_sum(n - 1)",Syntax Error,Recursion
Edit this python code to make the output print in descending order (from highest to lowest).,"my_list = [10,2,5,1,20]

for x in my_list:
    print(x)","my_list = [10,2,5,1,20]

for x in my_list:
    print(x)
    
for x in sorted(my_list, reverse=True):
    print(x)","my_list = [10,2,5,1,20]

for x in my_list:
    pritn(x)
    
for x in sorted(my_list, reverse=True):
    pritn(x)",Syntax Error,String Manipulation
Edit the given Python code to reverse the order of the letters in a string without using any in-built string functions.,"string = ""Hello World!""","def reverse_string(string):
    reversed_string = """"
    for i in range(len(string) - 1, -1, -1):
        reversed_string += string[i]
    return reversed_string

string = ""Hello World!"" 
reverse_string(string)","def reverse_string(string):
    reversed_string = """"
    for i in range(len(string) - 1, -1, -1):
        reversed_string += string[i]
    return reversed_string

string = ""Hello World!"" 
reverse_string(string)",Syntax Error,Recursion
Create a function to convert Fahrenheit temperatures to Celsius in Python.,,"def fahrenheit_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) * (5/9)
    return celsius
    
if __name__ == ""__main__"":
    fahrenheit  = 32
    celsius = fahrenheit_to_celsius(fahrenheit)
    print(""Fahrenheit to Celsius: {} degrees F = {} degrees C"".format(fahrenheit, celsius))","def fahrenheit_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) * (5/9)
    return celsius
    
if __name__ == ""__main__"":
    fahrenheit  = 32
    celsius = fahrenheit_to_celsius(fahrenheit)
    print(name, ""Fahrenheit to Celsius: {} degrees F = {} degrees C"".format(fahrenheit, celsius))",Syntax Error,Recursion
Write a Python program to check whether a sentence contains all the alphabets of the English language,"sentence = ""The quick brown fox jumps over the lazy dog""","def check_sentence(sentence):
    '''This function will check if a sentence contains all the alphabets of the English language'''
    alphabet = ""abcdefghijklmnopqrstuvwxyz""
    for char in alphabet:
        if char not in sentence.lower():
            return False
    return True","def check_sentence(sentence):
    '''This function will check if a sentence contains all the alphabets of the English language'''
    alphabet = ""abcdefghijklmnopqrstuvwxyz""
    for char in alphabet:
        if char not in sentence.lower():
            return False
    return True",correct,OOP
Write a python script that takes a list of numbers from 1 to 8  and prints its cubic values.,"[1, 2, 3, 4, 5, 6, 7, 8]","list_numbers = [1, 2, 3, 4, 5, 6, 7, 8]

for num in list_numbers:
    print(num**3)","list_numbers = [1, 2, 3, 4, 5, 6, 7, 8]

for num in list_numbers:
    print(num**3)",correct,String Manipulation
Modify this given Python code to handle inputs of any size,"def sum_digits(num):
    total = 0
    while num > 0:
        total += num % 10
        num //= 10
    return total","def sum_digits(num):
    total = 0
    while num != 0:
        total += num % 10
        num //= 10
    return total","def sum_digits(num):
    total = 0
    while num != 0:
        total += num % 10
        num //= 10
    return total",Syntax Error,String Manipulation
Write a function to flatten a given nested list structure.,,"def flatten_list(list1):
    result_list = []
    if not list1: return result_list
    stack = [list(list1)]
    while stack:
        c_num = stack.pop()
        next = c_num.pop()
        if c_num: stack.append(c_num)
        if isinstance(next, list):
            if next: stack.append(list(next))
        else: result_list.append(next)
    result_list.reverse()
    return result_list ","def flatten_list(list1):
    result_list = []
    if not list1: return result_list
    stack = [list(list1)]
    while stack:
        c_num = stack.pop()
        next = c_num.pop()
        if c",Incomplete Answer,Recursion
Write code in Python to model a CloudFormation template which creates a SNS Topic.,,"import json

CloudFormationTemplate = {
  ""AWSTemplateFormatVersion"": ""2010-09-09"",
  ""Resources"": {
    ""MySNSTopic"": {
      ""Type"": ""AWS::SNS::Topic"",
      ""Properties"": {
        ""TopicName"": ""MySNSTopic""
      }
    }
  }
}

print(json.dumps(CloudFormationTemplate))","import json

CloudFormationTemplate = {
  ""AWSTemplateFormatVersion"": ""2010-09-09"",
  ""Resources"": {
    ""MySNSTopic"": {
      ""Type"": ""AWS::SNS::Topic"",
      ""Properties"": {
        ""TopicName"": ""MySNSTopic""
      }
    }
  }
}

print(json.dumps(CloudFormationTemplate",Syntax Error,File I/O
Generate a Python program using a list comprehension that takes a 2D list of integers and computes the sum of integers at each row.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","total_row_sum = [sum(row) for row in [[1, 2, 3], [4, 5, 6], [7, 8, 9]]]

print(total_row_sum)","total_row_sum = [sum(row) for row in [[1, 2, 3], [4, 5, 6], [7, 8, 9]]]

print(total_row_sum)",correct,File I/O
Write a function in Python that encodes a string using a simple algorithm.,"Text string:  ""Hello""","def encodeString (text):
    encoded_string = ''
    for char in text:
        encoded_char = ord(char) + 3
        encoded_string += chr(encoded_char)

    return encoded_string

encodeString(""Hello"")  # khoor","def encodeString (text):
    encoded_string = ''
    for char in text:
        encoded_char = ord(char) + 3
        encoded_string += chr(encoded_char)

    return encoded_string

encodeString(""Hello"")  # khoor",correct,OOP
Write a Python function to extract phone numbers from a text.,,"import re

def extract_phone_numbers(text):
  return re.findall(r""\(?\b[0-9]{3}\)?[-. ]?[0-9]{3}[-. ]?[0-9]{4}\b"", text)","import re

def extract_phone_numbers(text)
  return re.findall(r""\(?\b[0-9]{3}\)?[-. ]?[0-9]{3}[-. ]?[0-9]{4}\b"", text)",Syntax Error,OOP
Generate a code to create a class in python that stores the name and age of a person.,,"class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    def __str__(self):
        return f""Name: {self.name}\nAge: {self.age}""","class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    def __str__(self):
        return f""Name: {self.name}\nAge: {self.age}""",Syntax Error,Loops
Take a string and output a list of all the words comprising the string,String: Python is a programming language.,"[‘Python’, ‘is’, ‘a’, ‘programming’, ‘language’]","[‘Python’, ‘is’, ‘a’, ‘p",Incomplete Answer,String Manipulation
How can you sort a list of integers in ascending order in Python?,,"def sort_list(lst):
    return sorted(lst)","def sort_list(lst):
return sorted(lst)",Syntax Error,File I/O
Write a function to find area of a sector.,,"def sector_area(r,a):
    pi=22/7
    if a >= 360:
        return None
    sectorarea = (pi*r**2) * (a/360)
    return sectorarea","def sector_area(r,a):
    pi=22/7
    if a >= 360:
        retur",Incomplete Answer,OOP
Explore the performance of a Python code using profiling.,,"import cProfile

cProfile.run('target_function()')","import cProfile

cProfile",Incomplete Answer,File I/O
Construct a python program to check if two given strings are anagrams.,"String1: army
String2: mary","def isAnagram(str1, str2):  
    n1 = len(str1)
    n2 = len(str2) 
    if n1 != n2: 
        return False
    str1 = ''.join(sorted(str1)) 
    str2 = ''.join(sorted(str2))  
    for i in range(n1):  
        if str1[i] != str2[i]:  
            return False
    return True","def isAnagram(str1, str2):  
n1 = len(str1)
n2 = len(str2) 
if n1 != n2: 
    return False
str1 = ''.join(sorted(str1)) 
str2 = ''.join(sorted(str2))  
for i in range(n1):  
    if str1[i] != str2[i]:  
        return False
return True",Syntax Error,String Manipulation
Write a function to substract the elements of the given nested tuples.,,"def substract_elements(test_tup1, test_tup2):
  res = tuple(tuple(a - b for a, b in zip(tup1, tup2))
   for tup1, tup2 in zip(test_tup1, test_tup2))
  return (res) ","def substract_elements(test_tup1, test_tup2:
  res = tuple(tuple(a - b for a, b in zip(tup1, tup2
   for tup1, tup2 in zip(test_tup1, test_tup2
  return (res ",Syntax Error,File I/O
Write a Python function to convert days to years.,,"def days_to_years(days):
    years = days / 365
    return years","def days_to_years(days):
    years = days / 365
    return years",correct,Recursion
Write a Python function to check for a prime number.,,"def is_prime(num):
    if num > 1: 
        for i in range(2,num):
            if (num % i) == 0: 
                return False
        return True 
    else: 
        return False","def is_prime(num):
    if num > 1: 
        for i in range(2,num):
            if (num % i",Incomplete Answer,String Manipulation
Generate a python code to fit a regression line,,"import numpy as np
from sklearn.linear_model import LinearRegression

def line_fit(x, y):
    x = np.array(x).reshape((-1, 1))
    y = np.array(y).reshape((-1, 1))
    reg = LinearRegression().fit(x, y)
    return reg.coef_[0][0], reg.intercept_[0]","import numpy as np
from sklearn.linear_model import LinearRegression

def line_fit(x, y):
    x = np.array(x).reshape((-1, 1))
    y = np.array(y).reshape((-1, 1))
    reg = LinearRegression().fit(x, y)
    return reg.coef_[0][0], reg.intercept_[0]",Syntax Error,Recursion
"Using the given lists, create a Python dictionary that contains the expected output.","key_list = ['a', 'b', 'c']
value_list = [1, 2, 3]","dictionary = dict(zip(key_list, value_list))
print(dictionary)","dictionary = dict(zip(key_list,",Incomplete Answer,OOP
Create a Python program to copy elements of one array into another array.,"Array 1=[1,2,3,4]","array_1 = [1,2,3,4] 
array_2 = [] 
  
# Copying all the elements 
for i in range(0, len(array_1)): 
    array_2.append(array_1[i]) 
     
print (""Elements Copied from the Array1 to Array2 are : "" + str(array_2))","array_1 = [1,2,3,4] 
array_2 = [] 
  
# Copying all the elements 
for i in range(0, len(array_1)): 
    a",Incomplete Answer,OOP
Write a Python program to convert a timestamp (in seconds) to a date format (dd-mm-yyyy).,timestamp: 1591123259,"import datetime

# Function to convert the timestamp 
def getDateTime(timestamp):
 return datetime.datetime.fromtimestamp(timestamp).strftime(""%d-%m-%Y"")

# Driver program
timestamp = 1591123259
print(getDateTime(timestamp))
# Output: 17-06-2020","import datetime

# Function to convert the timestamp 
def getDateTime(timestamp):
 return datetime.datetime.fromtimestamp(timestamp).strftime(""%d-%m-%Y"")

# Driver program
timestamp = 1591123259
print(getDateTime(timestamp))
# Output: 17-06-2020",correct,Loops
"In Python, parse a JSON string and return the value associated with a particular key","JSON String: { ""key1"": ""value1"", ""key2"": ""value2"" }
Key: ""key2""","import json

# Create a json object from the string
json_obj = json.loads('{""key1"": ""value1"", ""key2"": ""value2""}')

#get the value for a particular key
value = json_obj[""key2""]","import json

# Create a json object from the string
json_obj = json.loads('{""key1"": ""value1"", ""key2"": ""value2""}')

#get the value for a particular key
value = json_obj[""key2""]",correct,String Manipulation
Create a headless Chrome program in Python that fetches a website and returns the HTML code.,,"from selenium import webdriver

url = ""https://www.example.com""

chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')

driver = webdriver.Chrome(options=chrome_options)
driver.get(url)
htmlCode = driver.page_source
print(htmlCode)","from selenium import webdriver

url = ""https://www.example.com""

chrome_options = webdriver.ChromeOptions()
chrome_options.add_argu",Incomplete Answer,File I/O
Create a Python program to identify the type of triangles given three sides.,,"def triangle_type(a, b, c):
 if a > 0 and b > 0 and c > 0:
 if a == b == c and a != 0:
 return 'Equilateral'
 
 if a == b or b == c or a == c and a != 0:
 return 'Isosceles'
 
 if a != b and b != c and a != c and a + b > c and b + c > a and a + c > b:
 return 'Scalene'
 else:
 return 'Invalid'","def triangle_type(a, b, c):
 if a > 0 and b > 0 and c > 0:
 if a == b == c and a != 0:
 return 'Equilateral'
 
 if a == b or b == c or a == c and a != 0:
 return 'Isosceles'
 
 if a != b and b != c and a != c and a + b > c and b + c > a and a + c > b:
 return 'Scalene'
 else:
 return 'Invalid'",correct,OOP
Convert the below pseudo-code into valid Python code.,"x = 0

while x<10:
    x = x + 2
    if x==4:
        continue
    print(x)","x = 0

while x < 10:
    x = x + 2
    if x == 4:
        continue
    print(x)","x = 0

while x < 10
    x = x + 2
    if x == 4
        continue
    print(x)",Syntax Error,OOP
"Write a Python program to split a given string into substrings of fixed length, and print the substrings in a single line seperated by comma.",PythonProgramming,"def split_string(string, length):
    substrings = [string[i:i+length] for i in range(0, len(string), length)]
    return ','.join(substrings)","def split_string(string, length):
    substrings = [string[i:i+length] ",Incomplete Answer,OOP
"Create a Python program that reads an integer from the console and prints ""true"" if the number is even, and ""false"" if the number is odd.",3,"num = int(input())
if num % 2 == 0:
    print(""true"")
else:
    print(""false"")","num = int(input())
if num % 2 == 0:
   ",Incomplete Answer,OOP
Create a python program to reverse an integer.,x = 123,"def reverse_int(x):
    """"""Reverse an integer.""""""
    reversed_int = int(str(x)[::-1])
    return reversed_int

# Usage Example
x = 123
reversed_int = reverse_int(x)
print(reversed_int)  # 321","def reverse_int(x):
    """"""Reverse an integer.""""""
    reversed_int = int(str(x)[::-1])
    return reversed_int

# Usage Example
x = 123
reversed_int = reverse_int(x)
print(reversed_int)  # 321",correct,String Manipulation
Develop a function in Python to convert a given number of days into seconds.,,"def days_to_seconds(days):
    return days * 86400

result = days_to_seconds(3)
print(result) # Outputs: 259200","def days_to_seconds(days):
    return days * 86400

result = days_to_seconds(3)
print(result) # Outputs: 259200",correct,OOP
Create an algorithm in Python using the algorithm library for finding the greatest common divisor between two numbers.,,"import algorithm

def gcd(a, b):
	a, b = max(a, b), min(a, b)
	if a % b == 0:
		return b
	else:
		return gcd(b, a % b)","import algorithm

def gcd(a, b):
	a, b = max(a, b), min(a, b)
	if a % b == 0:
		return b
	else:
		return gcd(b, a % b)",correct,File I/O
"Create a Python script to generate a random password of length 8, containing a mix of upper and lower case letters, and numbers",,"import string
import random

def generate_password(length):
 charPool = string.ascii_letters + string.digits
 password = ''.join(random.sample(charPool,length))
 return password

password = generate_password(8)
print(password) # e.g. hg6bs2Vu","import string
import random

def generate_password(length):
 charPool = string.ascii_letters + string.digits
 password = ''.join(random.sample(charPool,length))
 return password

password = generate_password(8)
print(password) # e.g. hg6bs2Vu",correct,OOP
Design a function for ordering a pizza in Python and use it to order a pizza with 3 toppings.,"Toppings: Pepperoni, Mushroom, Olives","def orderPizza(toppings):
    print(""Ordering a pizza with the following toppings:"")
    for topping in toppings:
      print(topping)
    print(""Thank you!"")
orderPizza([""Pepperoni"", ""Mushroom"", ""Olives""])","def orderPizza(toppings):
    print(""Ordering a pizza with the following toppings:"")
    for topping in toppings:
      print(topping)
    print(""Thank you!"")
orderPizza([""Pepperoni"", ""Mushroom"", ""Olives""])",correct,String Manipulation
Write a function to create a list taking alternate elements from another given list.,,"def alternate_elements(list1):
    result=[]
    for item in list1[::2]:
        result.append(item)
    return result ","def alternate_elements(list1):
    result=[]
    for item in list1[::2]:
        result.append(item)
    return result ",correct,Loops
Construct a function in Python to calculate the area of a triangle with three sides,"side1: 3
side2: 4
side3: 5","def triangleArea(side1, side2, side3):
  s = (side1 + side2 + side3) / 2
  area = (s * (s - side1) * (s - side2) * (s - side3)) ** 0.5
  return area","def triangleArea(side1, side2, side3):
  s = (side1 + side2 + side3) / 2
 ",Incomplete Answer,Loops
Create a python script that takes in a number and tells whether it is odd or even.,number:9,"def evenOdd(number): 
    if (number % 2 == 0): 
        print(""Even"") 
    else: 
        print(""Odd"") 

evenOdd(number)","def evenOdd(number): 
if (number % 2 == 0): 
    print(""Even"") 
else: 
    print(""Odd"") 

evenOdd(number)",Syntax Error,String Manipulation
Develop a Python function to determine the greatest common divisor of two integers.,"a = 28 
b = 15","def gcd(a, b): 
 if(b == 0): 
  return a 
 return gcd(b, a%b) 

def main():
 a = 28 
 b = 15 
 print(gcd(a,b)) 

if __name__ == ""__main__"": 
 main() 

# Output
3","def gcd(a, b): 
 if(b == 0): 
  return a 
 return gcd(b, a%b) 

def main():
 a = 28 
 b = 15 
 print(gcd(a,b)) 

if __name__ == ""__main__"": 
 main() 

# Output
3",correct,Recursion
Create a translation model in python which takes a sentence as input and returns its translation in Khmer.,"""Hello world""","import googletrans 
from googletrans import Translator 
 
def translate_sentence(sentence): 
    translator = Translator()
    translated_sentence = translator.translate(sentence, dest='km')
    return translated_sentence.text

result = translate_sentence(""Hello world"")
print(result)","import googletrans 
from googletrans import Translator 
 
def translate_sentence(sentence): 
    translator = Translator()
    translated_sent",Incomplete Answer,String Manipulation
Create a ‘Find and Replace’ Script in Python.,"String: 'This is a sentence with words'
Find: 'words'
Replace: 'letters'","import re

text = 'This is a sentence with words'
find = 'words'
replace = 'letters'

new_text = re.sub(find, replace, text)
print(new_text)
# Output: This is a sentence with letters","import re

text = 'This is a sentence with words'
find = 'words'
replace = 'letters'

new_t",Incomplete Answer,File I/O
Develop an algorithm in Python to print an array in reverse order.,"[1, 2, 3, 4, 5]","def reverse_array(arr):
    return arr[::-1]

arr = [1, 2, 3, 4, 5]
print(reverse_array(arr))","def reverse_array(arr):
return arr[::-1]

arr = [1, 2, 3, 4, 5]
print(reverse_array(arr))",Syntax Error,Recursion
"Write a code snippet in Python to calculate the average of the following list of numbers: [1, 7, 8, 4, 9].",,"numbers = [1, 7, 8, 4, 9]
average = sum(numbers) / len(numbers)
print(average) # 5.6","numbers = [1, 7, 8, 4, 9]
average = sum(numbers) / len(numbers)
print(average) # 5.6",correct,OOP
Design a function to traverse a binary tree in a breadth-first manner.,,"# A Python program to print 
# level order traversal of tree 

def breadth_first_traversal(root): 
	if root is None: 
		return

	queue = [] 
	queue.append(root) 

	while(len(queue) > 0): 
		print (queue[0].val,end=' ') 
		node = queue.pop(0) 

		if node.left is not None: 
			queue.append(node.left) 

		if node.right is not None: 
			queue.append(node.right)","# A Python program to pritn 
# level order traversal of tree 

def breadth_first_traversal(root): 
	if root is None: 
		return

	queue = [] 
	queue.append(root) 

	while(len(queue) > 0): 
		pritn (queue[0].val,end=' ') 
		node = queue.pop(0) 

		if node.left is not None: 
			queue.append(node.left) 

		if node.right is not None: 
			queue.append(node.right)",Syntax Error,Loops
Write a code to generate a random 4-digit code in Python.,,"import random 

def generate_code():
    code = """"
    for _ in range(4):
        code += str(random.randint(0, 9))
    return code

code = generate_code()
print(code)","import random 

def generate_code():
    code = """"
    for _ in range(4):
        c",Incomplete Answer,String Manipulation
Generate a Python script to connect to a PostgreSQL database.,,"import psycopg2

try:
    conn = psycopg2.connect(""dbname='testdb' user='user1' host='localhost' password='password'"")
except:
    print(""Connection failed"")

cur = conn.cursor()","import psycopg2

try:
    conn = psycopg2.connect(""dbname='testdb' user='user1' host='localhost' password='password'"")
except:
    print(""Connection failed"")

cur = conn.cursor()",correct,String Manipulation
Write an algorithm in Python to sort a given array using Quicksort.,,"def quicksort(arr): 
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)","def quicksort(arr): 
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)",Syntax Error,Loops
Generate an optimized Python code that computes the product of two numbers without using the multiplication operator.,The numbers are 3 and 7,"def product_without_mul(x, y): 
 result = 0
 while (y > 0): 
    partial_result = 0
    for i in range(y): 
        partial_result += x
    result += partial_result
    y -= 1
   
return result 

x = 3
y = 7

print(""Product of two numbers without using 
multiplication operator is "", product_without_mul(x, y))","def product_without_mul(x, y): 
 result = 0
 while (y > 0): 
    partial_result = 0
    for i in range(y): 
        partial_result += x
    result += parti",Incomplete Answer,OOP
Formulate a python program to calculate the roots of a quadratic equation with given coefficients.,"coefficients: 2, -5, -3","import math
 
def quadratic_roots(a, b, c):
 
  # calculate the discriminant
  d = (b**2) - (4*a*c)
  
  # calculate the two roots
  root1 = (-b + math.sqrt(d)) / (2*a)
  root2 = (-b - math.sqrt(d)) / (2*a)
   
  print(""The roots of x^2 - 5x - 6 are"",root1,""and"",root2)
  
# Driver Code
a = 2
b = -5
c = -3
quadratic_roots(a, b, c)","import math
 
def quadratic_roots(a, b, c):
 
  # calculate the discriminant
  d = (b**2) - (4*a*c)
  
  # calculate the two roots
  root1 = (-b + math.sqrt(d)) / (2*a)
  root2 = (-b - math.sqrt(d)) / (2*a)
   
  print(name, ""The roots of x^2 - 5x - 6 are"",root1,""and"",root2)
  
# Driver Code
a = 2
b = -5
c = -3
quadratic_roots(a, b, c)",Syntax Error,File I/O
"Write a function to replace maximum n occurrences of spaces, commas, or dots with a colon.",,"import re
def replace_max_specialchar(text,n):
 return (re.sub(""[ ,.]"", "":"", text, n))","import re
def replace_max_specialchar(text,",Incomplete Answer,File I/O
Generate Python code to get the maximum element in a list.,"List of integers [7, 2, 3, 6, 5]","list = [7, 2, 3, 6, 5]
print(""Max element is:"", max(list))","list = [7, 2, 3, 6, 5]
print(name, ""Max element is:"", max(list))",Syntax Error,Loops
Write a for loop to print out all numbers between 1 and 10 in Python.,,"for i in range(1, 11):
    print(i)","for i in range(1, 11)
    print(i)",Syntax Error,OOP
Create a Python program that will take a list of numbers and identify if any of the numbers are multiples of three.,"numbers = [2, 7, 8, 15, 24]","for number in numbers:
 if number % 3 == 0:
  print(f'{number} is a multiple of 3')
 else:
  print(f'{number} is not a multiple of 3')

# Output:
# 2 is not a multiple of 3
# 7 is not a multiple of 3
# 8 is not a multiple of 3
# 15 is a multiple of 3
# 24 is a multiple of 3","for number in numbers:
 if number % 3 == 0:
  print(f'{number} is a multiple of 3')
 else:
  print(f'{number} is not a multiple of 3')

# Output:
# 2 is not a multiple of 3
# 7 is not a multiple of 3
# 8 is not a multiple of 3
# 15 is a multiple of 3
# 24 is a multiple of 3",correct,File I/O
Generate a list of fibonacci numbers using iterative function in Python.,n=10,"def generate_fibonacci_numbers(n):
    # Initialize variables
    a = 0
    b = 1

    # Iterate and calculate fibonacci numbers
    fib_list = [a]
    for i in range(1, n):
        c = a + b
        fib_list.append(c)
        a = b
        b = c
    return fib_list
    
if __name__ == '__main__':
    print(generate_fibonacci_numbers(10))","def generate_fibonacci_numbers(n):
    # Initialize variables
    a = 0
    b = 1

    # Iterate and calculate fibonacci numbers
    fib_list = [a]
    for i in range(1, n):
        c = a + b
        fib_list.append(c)
        a = b
        b = c
    return fib_list
    
if __name__ == '__main__':
    print(generate_fibonacci_numbers(10))",correct,Recursion
Find the most common word in a sentence using Python.,"""this is a sentence with several words in it""","from collections import Counter
 
def most_frequent(sentence):
    words = sentence.split()
    counter = Counter(words)
    return counter.most_common(1)[0][0]

sentence = ""this is a sentence with several words in it""
print(most_frequent(sentence))
// Outputs: ""a""","from collections import Counter
 
def most_frequent(sentence):
    words = sentence.split()
    counter = Counter(words)
    return counter.most_common(1)[0][0]

sentence = ""this is a sentence with several words in it""
pritn(most_frequent(sentence))
// Outputs: ""a""",Syntax Error,Recursion
Come up with a Python program to print out the sum of all the numbers from 0 to a given number.,,"def sum_numbers(n):
    total = 0
    for i in range(n+1):
        total += i
    return total

print(sum_numbers(20))","def sum_numbers(n):
    total = 0
    for i in range(n+1):
",Incomplete Answer,Recursion
Convert a given list into a list of tuples using Python.,"list = [1, 2, 3, 4, 5]","def listToTuple(list):
 tupleList = []
 for element in list:
  tupleList.append((element,))
 return tupleList

print(listToTuple(list))","def listToTuple(list):
 tupleList = []
 for element in list:
  tupleList.append((element,))
 return tupleList

print(listToTuple(list))",correct,Loops
Generate a class in Python for entering user’s biodata.,,"class Biodata:
    def __init__(self, name, age, gender, height, weight, date_of_birth):
        self.name = name
        self.age = age
        self.gender = gender
        self.height = height
        self.weight = weight
        self.date_of_birth = date_of_birth","class Biodata:
    def __init__(self, name, age, gender, height, weight, date_of_birth):
        self.name = name
        self.age = age
        self.gender = gender
        self.height = height
        self.weight = weight
        self.date_of_birth = date_of_birth",correct,OOP
Write a Python program to find the online median of an array of numbers.,,"import heapq
def online_median(numbers):
    
    small = [] 
    large = []
    medians = []
    
    for x in numbers:
        heapq.heappush(small, -heapq.heappushpop(large, x))
        if len(large) < len(small):
            heapq.heappush(large, -heapq.heappop(small))
        medians.append(0.5 * (large[0] + (-small[0])) if len(large) > len(small)  else large[0])
    
    return medians","import heapq
def online_median(numbers):
    
    small = [] 
    large = []
    medians = []
    
    for x in numbers:
        heapq.heappush(small, -heapq.heappushpop(large, x))
        if len(l",Incomplete Answer,File I/O
Write a Python program that displays the current status of a given stock quote.,The stock symbol is AAPL,"import requests 

AAPL_url = ""https://api.iextrading.com/1.0/stock/AAPL/quote?filter=symbol,latestPrice,latestSource,latestTime""

res = requests.get(AAPL_url)
data = res.json()

print(""Symbol: "" + data['symbol']) 
print(""Price: "" + str(data['latestPrice'])) 
print(""Source: "" + data['latestSource']) 
print(""Time: "" + data['latestTime'])","import requests 

AAPL_url = ""https://api.iextrading.com/1.0/stock/AAPL/quote?filter=symbol,latestPrice,latestSource,latestTime""

res = requests.get(AAPL_url)
data = res.json()

print(""Symbol: "" + data['symbol']) 
print(""Price: "" + str(data['latestPrice'])) 
print(""Source: "" + data['latestSource']) 
print(""Time: "" + data['latestTime'])",correct,Recursion
Create a Python program that accepts an integer and displays its factorial.,num=5,"def factorial(num):
    result = 1
    for i in range(1, num+1):
        result *= i
    return result

n = int(input(""Enter an Integer: ""))
print(factorial(n))","def factorial(num):
    result = 1
    for i in range(1, num+1):
        result *= i
    return result

n = int(input(""Enter an Integer: ""))
print(name, factorial(n))",Syntax Error,Loops
Write a Python program to add two numbers given as input from the user.,"Input: 2, 4","num1 = int(input(""Enter the first number: ""))
num2 = int(input(""Enter the second number: ""))

sum = num1 + num2

print(""The sum of the two numbers is:"", sum)","num1 = int(input(""Enter the first number: ""))
num2 = int(input(""Enter the seco",Incomplete Answer,Recursion
Create a Python script to print out each word that begins with a vowel in a sentence.,Sentence: The quick brown fox jumped over the lazy dog,"for word in sentence.split():
    if word[0].lower() in 'aeiou':
        print(word)","for word in sentence.split():
    if word[0].lower() in 'aeiou':
        print(word)",correct,String Manipulation
Write a Python program to traverse a tree data structure and print all the nodes in preorder.,"tree 
	 /   \   
    1     2 
  /      / \ 
 3      4   5","def preorder(tree): 
    if tree: 
        print(tree.val) 
        preorder(tree.left) 
        preorder(tree.right) 
  
# Driver code  
tree = Node(1) 
tree.left = Node(2) 
tree.right = Node(3) 
tree.left.left = Node(4) 
tree.left.right = Node(5) 
  
preorder(tree)","def preorder(tree): 
    if tree: 
        print(tree.val) 
        preorder(tree.left) 
        preorder(tree.right) 
  
# Driver code  
tree = Node(1) 
tree.left = Node(2) 
tree.right = Node(3) 
tree.left.left = Node(4) 
tree.left.right = Node(5) 
  
preorder(tree)",correct,Loops
Write a python program to automatically extract the following grade scores from the given text.,Text: “Johnny got 85 in Maths and 63 in English”,"maths_score = 85
english_score = 63","maths_score = 85
",Incomplete Answer,Loops
Write a function in Python that takes two arrays of the same size and performs elementwise addition.,"arr1 = [1, 2, 3]
arr2 = [3, 4, 5]","def add_arrays(arr1, arr2):
 if len(arr1) != len(arr2):
  raise Exception(""Arrays are not of the same size!"")
 return [x + y for x, y in zip(arr1, arr2)]

add_arrays(arr1, arr2)  # [4, 6, 8]","def add_arrays(arr1, arr2):
 if len(arr1) != len(arr2):
  raise Exception(""Arrays are not of th",Incomplete Answer,File I/O
Design a Python program for verifying the two strings are rotations of each other?,"s1 = ""Hello World""
s2 = ""World Hello""","def check_rotation(str1, str2): 
	if len(str1) != len(str2): 
		return False
	temp = str1 + str1
	return (str2 in temp) 

s1 = ""Hello World""
s2 = ""World Hello""
if check_rotation(s1, s2): 
	print('These strings are rotations of each other'); 
else: 
	print('These strings are not rotations of each other')","def check_rotation(str1, str2): 
	if len(str1) != len(str2): 
		return False
	temp = str1 + str1
	return (str2 in temp) 

s1 = ""Hello World""
s2 = ""World",Incomplete Answer,Loops
Implement an algorithm to find a substring in a given string using a greedy approach in Python.,"string = ""This is a sample string""
substring = ""sample""","def find_substring(string, substring):
    start = 0
    result = """"
    while start < len(string):
        idx = string.find(substring, start)
        if idx == -1:
            break
        result += string[idx:idx+len(substring)]
        start = idx+len(substring)
    return result","def find_substring(string, substring):
    start = 0
    result = """"
    while start < len(string):
        idx = string.find(substring, start",Incomplete Answer,Loops
Write a python script to remove all punctuations and whitespace in a string,"string = ""Hello, how are you! I'm doing great.""","def remove_punc_and_whitespace(string): 
    return ''.join([x for x in string if x not in ["" "", "","", "":"", ""-"", ""!"", ""?"", "".""]])","def remove_punc_and_whitespace(string): 
    return ''.join([x f",Incomplete Answer,Recursion
"Using the given input, write a Python program that prints the maximum number from the list.","[1, 5, 8, 3, 10]","mylist = [1, 5, 8, 3, 10]

print(max(mylist))","mylist = [1, 5, 8, 3, ",Incomplete Answer,OOP
Write a Python program that takes two numbers and swaps them without using an additional variable.,"x = 5, y = 4","def swap_without_variable(x, y): 
    x = x + y   
    y = x - y  
    x = x - y  
    return x, y","def swap_without_variable(x, y) 
    x = x + y   
    y = x - y  
    x = x - y  
    return x, y",Syntax Error,OOP
Design a program in Python to compare two strings and output the number of characters that are different.,,"def count_differences(str1, str2): 
    differences = 0 
    for letter1, letter2 in zip(str1, str2): 
        if letter1 != letter2: 
            differences +=1 
    return differences","def count_differences(str1, str2): 
    differences = 0 
    for letter1, letter2 in zip(str1",Incomplete Answer,Recursion
"Implement a function in Python that takes two integers as 
input and returns the larger one.",,"def larger_of_two(num1, num2):
    """"""Return the larger of two integers""""""
    if num1 > num2:
        return num1
    else:
        return num2","def larger_of_two(num1, num2):
    """"""Return the larger of two integers""""""
    if num1 > num2:
        return num1
    else:
        return num2",Syntax Error,OOP
Write a Python program to edit a list given some criteria.,"list = [5, 6, 2, 8, 11]
criteria = lambda x: x % 2 == 0","def edit_list(list, criteria):
    return [x for x in list if criteria(x) == True]","def edit_list(list, criteria):
    return [x for x in list if criteria(x) == True]",correct,String Manipulation
Generate a machine learning model using Python and Scikit-Learn to predict a person’s age based on height and weight.,,"import numpy as np
from sklearn.linear_model import LinearRegression

# Training data
x = np.array([[1.4, 60],[1.8, 70],[2.2, 80],[2.5, 90]])
y = np.array([12, 18, 24, 30])

# Create model
model = LinearRegression()
model.fit(x, y)

# Predicted age for height 1.6m and weight 65kg
model.predict([[1.6, 65]]) # output: [16.7]","import numpy as np
from sklearn.linear_model import LinearRegression

# Training data
x = np.array([[1.4, 60],[1.8, 70],[2.2, 80],[2.5, 90]])
y = np.array([12, 18, 24, 30])

# Create model
model = LinearRegression()
model.fit(x, y)

# Predicted age for height 1.6m and weight 65kg
model.predict([[1.6, 65]]) # output: [16.7]",correct,Loops
Develop a Python script to search for a specific element in a given list.,"arr = [2, 3, 4, 5, 6, 7]
x = 5","def search_element(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i 

    return -1","def search_element(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i 

    return -1",correct,String Manipulation
Create a class in Python which can be used to store data about books.,,"class Book:
    def __init__(self, title, author, pages):
        self.title = title
        self.author = author
        self.pages = pages

    def __str__(self):
        return '{} by {} ({} pages)'.format(self.title, self.author, self.pages)","class Book:
    def __init__(self, title, author, pages):
        self.title = title
        self.author = author
        self.pages = pages

    def __str__(self):
        return '{} by {} ({} pages)'.format(self.title, self.author, self.pages)",correct,File I/O
Create a program to print the following ASCII art using python.,"( _ _ )
| o o |
|  ^  |
| \_/ |","print('  ( _ _ )')
print('  | o o |')
print('  |  ^  |')
print('  | \_/ |')","print('  ( _ _ )')
print('  | o o |')",Incomplete Answer,Recursion
"Create a Python script that prints numbers from 1 to 10, one number per line with a delay of 1 second.",,"import time

for i in range(1, 11):
    print(i)
    time.sleep(1)","import time

for i in range(1, 11):
    print(i)
    time.sleep(1)",correct,Loops
Create a program in Python that takes a list of strings and returns a new list with each string reversed.,"[""Hello"", ""World""]","def reverse_list(strings):
    return [s[::-1] for s in strings]

strings = [""Hello"", ""World""]
print(reverse_list(strings))","def reverse_list(strings):
    return [s[::-1] for s in strings]

strings = [""Hello"", ""World""]
print(reverse_list(strings))",correct,String Manipulation
Generate a python code to sum the elements in the given array.,"arr = [1, 2, 3, 4, 5]","def sum_array(arr):
    total = 0
    for num in arr:
        total += num
    return total

sum_array(arr)","def sum_array(arr):
    total = 0
    for num in arr:
        total += num
    return total

sum_array(arr)",correct,Loops
"Using the input provided, add a try/except block to the given Python code.","for n in file_name[:20]:
    print(n)","try:
    for n in file_name[:20]:
        print(n)
except Exception as e:
    print(e)","try:
    for n in file_name[:20]:
        print(n)
except Exception as e:
    print(e)",correct,Recursion
Create a Python program to output the Fibonacci sequence until the value is greater than 2000.,,"def fibonacciUntil2000(): 
  f1 = 0
  f2 = 1
  print(f1)
  print(f2)
  while (f1 + f2) <= 2000: 
    f3 = f1 + f2
    f1 = f2 
    f2 = f3
    print(f3)

fibonacciUntil2000()","def fibonacciUntil2000(): 
  f1 = 0
  f2 = 1
  print(name, f1)
  print(name, f2)
  while (f1 + f2) <= 2000: 
    f3 = f1 + f2
    f1 = f2 
    f2 = f3
    print(name, f3)

fibonacciUntil2000()",Syntax Error,Loops
Generate a list of output values by multiplying the input values from two array in Python.,"[1, 2, 3] and [4, 5, 6]","array1 = [1, 2, 3]
array2 = [4, 5, 6]

output = [val1 * val2 for val1, val2 in zip(array1, array2)] 
print(output)

# Output 
[4, 10, 18]","array1 = [1, 2, 3]
array2 = [4, 5, 6]

output = [val1 * val2 for val",Incomplete Answer,OOP
Write a Python program to generate a random name from a set of given names.,"['John', 'Andy', 'Alex', 'Paul', 'Pippa']","import random

names = [""John"", ""Andy"", ""Alex"", ""Paul"", ""Pippa""]

def getRandomName(names):
    randomIndex = random.randint(0, len(names)-1) 
    return names[randomIndex]

if __name__ == '__main__':
    print(getRandomName(names))","import random

names = [""John"", ""Andy"", ""Alex"", ""Paul"", ""Pippa""]

def getRandomName(names):
    randomIndex = random.randint(0, len(names)-1) 
    return names[randomIndex]

if __name__ == '__main__':
    print(getRandomName(names))",correct,Loops
Write a python function to find the index of an extra element present in one sorted array.,,"def find_Extra(arr1,arr2,n) : 
    for i in range(0, n) : 
        if (arr1[i] != arr2[i]) : 
            return i 
    return n ","def find_Extra(arr1,arr2,n) : 
    for i in range(0, n) : 
        if (arr1[i] != arr2[i]) : 
            return i 
    return n ",Syntax Error,File I/O
Create a Python program to print out a multiplication table. The table should print out the first 10 multiples of a given number.,2,"number = int(input(""Please enter a number:""))

for i in range(1, 11):
 print(f'{number} * {i} = {number*i}')","number = int(input(""Please enter a number:""))

for i i",Incomplete Answer,OOP
"Create a Python program that classifies a given sentence as positive, neutral, or negative.",The movie was really terrible.,"def predict_sentiment(sentence): 
    pred = model.predict([sentence])
    if pred[0] == 0:
        print(""Negative sentiment"")
    elif pred[0] == 1: 
        print(""Neutral sentiment"")
    else:
        print(""Positive sentiment"")","def predict_sentiment(sentence): 
    pred = model.predict([sentence])
    if pred[0] == 0:
        print(""Negative ",Incomplete Answer,Recursion
Can you generate a sytax tree of a given Python statement?,"statement = ""x = 5;""","Syntax Tree: 

Assign(targets=[Name(id='x', ctx=Store())], value=Num(n=5))","Syntax Tree: 

Assign(targets=[Name(id='x', ctx=Store())], value=Num(n=5))",correct,File I/O
Use a basic linear regression model in Python to predict the price of a house based on its size and number of rooms.,"Example data: 
Size: 500, Rooms: 4","import pandas as pd
from sklearn.linear_model import LinearRegression

# Create
data = {'Size': [500], 
'Rooms': [4]}

df = pd.DataFrame(data)

# Train
X = df[['Size','Rooms']] 
Y = df['Price'] 
  
reg = LinearRegression().fit(X, Y) 
  
# Predict
reg.predict([[500,4]]) # Predicted price: 1715.667543","import pandas as pd
from sklearn.linear_model import LinearRegression

# Create
data = {'Size': [500], 
'Rooms': [4]}

df = pd.DataFrame(data)

# Trai",Incomplete Answer,Recursion
Generate a Python program to implement the Euclidean algorithm for finding the greatest common divisor.,,"def gcd(a, b):
 if b == 0:
  return a
 return gcd(b, a % b)

result = gcd(100, 12)
print(result)","def gcd(a, b):
 if b == 0:
  return a
 return gc",Incomplete Answer,File I/O
Write a Python program to remove a specified item from an array.,"arr = [1,2,3,4]","def remove_item(arr, item):
    return [i for i in arr if i != item]

arr = [1,2,3,4]
new_arr = remove_item(arr, 3)
print(new_arr)","def remove_item(arr, item):
return [i for i in arr if i != item]

arr = [1,2,3,4]
new_arr = remove_item(arr, 3)
print(new_arr)",Syntax Error,Recursion
Create a method in Python that takes two arguments and returns a specified error message if one of the two conditions is not met.,"error_message = ""The input must be a number!""","def check_input(arg1, arg2):
   if type(arg1) is not int or type(arg2) is not int:
      return ""The input must be a number!""
   else:
      return ""The input is valid!""","def check_input(arg1, arg2:
   if type(arg1 is not int or type(arg2 is not int:
      return ""The input must be a number!""
   else:
      return ""The input is valid!""",Syntax Error,OOP
"Using the input provided, write a Python program to print the sum of the numbers in both lists.","list1 = [7, 4, 5] 
list2 = [8, 10, 4]","list3 = list1 + list2

total = 0

for num in list3:
    total += num 

print(total)  # output: 29","list3 = list1 + list2

total = 0

for num in list3:
    total += num 

print(name, total)  # output: 29",Syntax Error,File I/O
Hack a Python program to apply a filter to a list of numbers and output the numbers greater than 5.,"List of numbers: [1, 5, 6, 3, 8]","numbers = [1, 5, 6, 3, 8]

filtered_numbers = []

for number in numbers:
  if number > 5:
    filtered_numbers.append(number)

print(filtered_numbers) # output: [6, 8]","numbers = [1, 5, 6, 3, 8]

filtered_numbers = []

for number in numbers:
  if number > 5:
    filtered_numbers.append(number)

print(filtered_numbers) # output: [6, 8]",correct,String Manipulation
Create a python program to wrap text at a given width.,,"def wrap_text(text, width):
    for i in range(0, len(text), width):
        print(text[i: width + i])","def wrap_text(text, width):
    for i in range(0, len(text), width):
        print(text[i: width + i])",correct,Loops
Write a sequence of instructions in Python to establish an SSH connection to a remote computer.,,"import paramiko

hostname = ""[REMOTEHOSTNAME]""
username = ""[USERNAME]""
password = ""[PASSWORD]""

ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
ssh_client.connect(hostname=hostname, username=username, password=password)","import paramiko

hostname = ""[REMOTEHOSTNAME]""
username = ""[USERNAME]""
password = ""[PASSWORD]""

ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
ssh_client.connect(hostname=hostname, username=username, password=password)",Syntax Error,Recursion
Create a web scraper in Python that extracts the titles and summary from the reviews on a certain web page.,https://www.example.com/reviews,"import requests
from bs4 import BeautifulSoup

url = “https://www.example.com/reviews”
response = requests.get(url)
soup = BeautifulSoup(response.text, “html.parser”)

titles = []
summaries = []

for review in soup.find_all(‘div’, {‘class’: ‘review’}):
 titles.append(review.find(‘h3’).text)
 summaries.append(review.find(‘p’).text)","import requests
from bs4 import BeautifulSoup

url = “https://www.example.com/reviews”
response = requests.get(url)
soup = BeautifulSoup(response.text, “html.parser”)

titles = []
summaries = []

for review in soup.find_all(‘div’, {‘class’: ‘review’}):
 titles.append(review.find(‘h3’).text)
 summaries.append(review.find(‘p’).text)",correct,String Manipulation
Create a program in Python to check for duplicate words in a given sentence.,"sentence = ""I am going to the store to buy food""","sentence = ""I am going to the store to buy food""

words = sentence.split(' ')

#Table to keep track of duplicates
table = []

for word in words:
 if word in table:
 print(""Duplicate word found: ""+word)
 else:
 table.append(word)","sentence = ""I am going to the store to buy food""

words = sentence.split(' ')

#Table to keep track of duplicates
",Incomplete Answer,OOP
Rewrite the code in Python so that it prints the length of a given string.,"string = ""Hello World""","string = ""Hello World""
print(len(string)) # prints 11","string = ""Hello World""
print(name, len(string)) # prints 11",Syntax Error,OOP
Create a Python script that converts temperatures from Celsius to Fahrenheit.,23,"def celsius_to_fahrenheit(celsius):
    return ((celsius * 9/5 ) + 32)

temperature = 23
fahrenheit = celsius_to_fahrenheit(temperature)
print('The temperature in Fahrenheit is: ' + str(fahrenheit))","def celsius_to_fahrenheit(celsius):
    return ((celsius * 9/5 ) + 32)

temperature = 23
fahrenheit = celsius_to_fahrenheit(temperature)
print('The temperature in Fahrenheit is: ' + str(fahrenheit))",correct,File I/O
Build a mini classifier model in Python to predict whether a given string is palindrome or not.,'level',"class Palindrome:

def __init__(self, str):
    self.str = str

def is_palindrome(self):
    return self.str == self.str[::-1]

palindrome = Palindrome(""level"")
if palindrome.is_palindrome():
    print(""The string is a palindrome"")
else:
    print(""The string is not a palindrome"")","class Palindrome:

def __init__(self, str):
    self.str = str

def is_palindrome(self):
    return self.str == self.str[::-1]

palindrome = Palindrome(""level"")
if palindrome.is_palindrome():
    print(""The string is a palindrome"")
else:
    print(""The string is not a palindrome"")",correct,File I/O
Write a Python script to decrypt the given ciphertext.,Ciphertext: NPKUO,"alphabet = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""

def decrypt(ciphertext):
    plaintext = """"
    for letter in ciphertext:
        index = alphabet.find(letter)
        newIndex = (index - 3) % 26
        plaintext += alphabet[newIndex]
    return plaintext

print(decrypt(""NPKUO""))","alphabet = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""

def decrypt(ciphertext):
    plaintext = """"
    for letter in ciphertext:
        index = alphabet.find(letter)
        newIndex = (index - 3) % 26
        plaintext += alphabet[newIndex]
    return plaintext

print(decrypt(""NPKUO""))",correct,Recursion
Write a function in Python which takes a list of numbers as input and outputs a list with each element multiplied by two.,"[3, 5, 8, 9]","def list_multiplication(nums):
    output_list = []
    for i in range(len(nums)):
        output_list.append(nums[i] * 2)
    return output_list","def list_multiplication(nums):
    output_list = []
    for i in range(len(nums)):
        output_list.append(nums[i] * 2)
    return output_list",Syntax Error,OOP
Write a python program to detect whether a given string is a palindrome or not.,,"def isPalindrome(string): 
    left, right = 0, len(string)-1
    while right >= left: 
        if not string[left] == string[right]: 
            return False
        left += 1
        right -= 1
    return True","def isPalindrome(string): 
left, right = 0, len(string)-1
while right >= left: 
    if not string[left] == string[right]: 
        return False
    left += 1
    right -= 1
return True",Syntax Error,OOP
Create a function in Python that shuffles the order of the items in a list.,"[1,2,3,4,5]","import random 
  
def shuffle_list(arr): 
      
    # Shuffle given list 
    random.shuffle(arr) 
    return arr 
  
# Driver function 
arr = [1,2,3,4,5]

print(""Initial list: \n"",arr)
print(""\nFinal list: \n"",shuffle_list(arr))","import random 
  
def shuffle_list(arr): 
      
    # Shuffle given list 
    random.shuffle(arr) 
    return arr 
  
# Driver function 
arr = [1,2,3,4,5]

print(name, ""Initial list: \n"",arr)
print(name, ""\nFinal list: \n"",shuffle_list(arr))",Syntax Error,Recursion
Create a Python program that updates the dictionary with the new key-value pair.,"dictionary = {'apple': 1, 'banana': 2, 'orange': 3}
key = 'mango'
value = 4","dictionary = {'apple': 1, 'banana': 2, 'orange': 3}
key = 'mango'
value = 4

dictionary[key] = value
print(dictionary)
# {'apple': 1, 'banana': 2, 'orange': 3, 'mango': 4}","dictionary = {'apple': 1, 'banana': 2, 'orange': 3}
key = 'mango'
value = 4

dictionary[key] = value
print(dictionary)
# {'apple': 1, 'banana': 2, 'orange': 3, 'mango': 4}",correct,Loops
write a python code to print the common elements in between two given sets.,"set1 = {1, 2, 3, 4, 5, 6, 7}
set2 = {2, 4, 5, 6}","def common_elements(set1, set2): 
    return set1 & set2

print(common_elements({1,2,3,4,5,6,7}, {2,4,5,6}))","def common_elements(set1, set2): 
    return set1 & se",Incomplete Answer,Loops
Suggest an algorithm for counting the key-value pairs in a dictionary in Python.,,"def count_dict_elements(dic):
    count = 0
    for k,v in dic.items():
        count +=1
    return count","def count_dict_elements(dic):
count = 0
for k,v in dic.items():
    count +=1
return count",Syntax Error,OOP
Develop a function in Python that converts the temperature from Celsius to Fahrenheit given the Celsius parameter.,,"def celsius_to_fahrenheit(celsius):
    """"""Converts a temperature in Celsius to Fahrenheit""""""
    return celsius * 9/5 + 32","def celsius_to_fahrenheit(celsius)
    """"""Converts a temperature in Celsius to Fahrenheit""""""
    return celsius * 9/5 + 32",Syntax Error,String Manipulation
Implment the quicksort algorithm in Python,,"def quicksort(nums):
    '''This function implements the quicksort algorithm in Python.'''
    if len(nums) <= 1:
        return nums
    
    pivot = nums[len(nums) // 2]
    left = [x for x in nums if x < pivot]
    middle = [x for x in nums if x == pivot]
    right = [x for x in nums if x > pivot]
    return quicksort(left) + middle + quicksort(right)","def quicksort(nums:
    '''This function implements the quicksort algorithm in Python.'''
    if len(nums <= 1:
        return nums
    
    pivot = nums[len(nums // 2]
    left = [x for x in nums if x < pivot]
    middle = [x for x in nums if x == pivot]
    right = [x for x in nums if x > pivot]
    return quicksort(left + middle + quicksort(right",Syntax Error,OOP
Create a Python function that returns the index of the nth occurrence of a substring in a given string.,"(""Hello World"", ""l"", 3)","def find_nth_occurrence(string, substring, n):
index = -1

while n > 0:
    n -= 1
    index = string.find(substring, index+1)

if index == -1:
    return None
else:
    return index

if __name__ == ""__main__"":
    result = find_nth_occurrence(""Hello World"", ""l"", 3)
    print(result)","def find_nth_occurrence(string, substring, n):
index = -1

while n > 0:
    n -= 1
    index = string.find(substring, index+1)

if index == -1:
    return None
else:
    return index

if __name__ == ""__main__"":
    result = find_nth_occurrence(""Hello World"", ""l"", 3)
    print(result)",correct,OOP
Design an algorithm in Python to determine if a given number is a prime.,,"def is_prime(num):
    if num <= 1:
        return False

    for i in range(2, num):
        if num % i == 0:
            return False

    return True","def is_prime(num):
    if num <= 1:
        return False

    for i in range",Incomplete Answer,String Manipulation
Write a python program to find the sum of squares of all numbers in a set,"Set: {1, 2, 3}","def sum_squares(s):
    total = 0
    for x in s:
        total += x * x
    return total","def sum_squares(s)
    total = 0
    for x in s
        total += x * x
    return total",Syntax Error,File I/O
Write a python function to set the left most unset bit.,,"def set_left_most_unset_bit(n): 
    if not (n & (n + 1)): 
        return n 
    pos, temp, count = 0, n, 0 
    while temp: 
        if not (temp & 1): 
            pos = count      
        count += 1; temp>>=1
    return (n | (1 << (pos))) ","def set_left_most_unset_bit(n): 
    if not (n & (n + 1)): 
        return n 
    pos, temp, count = 0, n, 0 
    while temp: 
        if not (temp & 1): 
            pos = count      
        count += 1; temp>>=1
    return (n | (1 << (pos))) ",Syntax Error,OOP
Create a loop in Python that prints out a list of numbers from 1 to 10 multiplied by 3.,,"for i in range(1, 11):
    print(i * 3)","for i in range(1, 1",Incomplete Answer,Loops
Write a python function to copy a list from a singleton tuple.,,"def lcopy(xs):
  return xs[:]
","def lcopy(xs):
  return xs[:]
",correct,Recursion
Create a web scraping program in Python for scraping content from a website.,,"import requests
from bs4 import BeautifulSoup

# The url of the website to be scraped
url = 'https://www.example.com'

# Make a GET request to fetch the raw HTML content
html_content = requests.get(url).text

# Parse the html content
soup = BeautifulSoup(html_content, ""lxml"")

# Scrape the content from the paragraph tag
scraped_text = soup.find(""p"").text

# Print scraped text
print(scraped_text)","import requests
from bs4 import BeautifulSoup

# The url of the website to be scraped
url = 'https://www.example.com'

# Make a GET request to fetch the raw HTML content
html_content = requests.get(u",Incomplete Answer,File I/O
Create a Python program to convert a given sentence into pig latin.,,"def convert_to_pig_latin(sentence):
 words = sentence.split()
 pig_latin_words = []
 for word in words:
 Pig_latin = word[1:] + word[0] + 'ay'
 pig_latin_words.append(pig_Latin)
 pig_latin_sentence = ' '.join(pig_latin_words)
 return pig_latin_sentence","def convert_to_pig_latin(sentence):
 words = sentence.split()
 pig_latin_words = []
 for word in words:
 Pig_latin = word[1:] + word[0] + 'ay'
 pig_latin_words.append(pig_Latin)
 pig_latin_sentence = ' '.join(pig_latin_words)
 return pig_latin_sentence",Syntax Error,Loops
Construct an algorithm in Python to identify whether a number is odd or even.,x = 7,"def findNumberType(x):
    if x % 2 == 0:
        return ""Even""
    else:
        return ""Odd""

x = 7
print(findNumberType(x))  # Odd","def findNumberType(x):
    if x % 2 == 0:
        return ""Even""
    else:
        return ""Odd""

x = 7
print(findNumberType(x))  # Odd",correct,Loops
How can a programmer check the length of a string in python?,,"In Python, the length of a string can be checked by using the len() function. For example, the length of the string ""Hello World"" can be checked by using the following code:

my_string = ""Hello World""
print(len(my_string))","In Python, the length of a string can be checked by using the len() function. For example, the length of the string ""Hello World"" can be checked by using the following code

my_string = ""Hello World""
print(len(my_string))",Syntax Error,OOP
Generate a Python program to merge two arrays into one.,,"def merge(lst1, lst2):
    merged_list = lst1 + lst2
    return merged_list","def merge(lst1, lst2):
    merged_lis",Incomplete Answer,OOP
Design a Python program to implement a search engine that searches for a specific keyword in a given set of text documents.,"[text documents, keyword]","def search_engine(documents, keyword):
    # Create an index of the documents
    index = create_index(documents)
    # Search the index for the keyword
    search_result = search(index, keyword)
    # Return the search result
    return search_result","def search_engine(documents, keyword):
    # Create an index of the documents
    index = create_index(documents)
    # Search the index for the keyword
    search_result = search(index, keyword)
    # Return the search result
    return search_result",correct,OOP
Develop a python program to automate the complex process of creating a dictionary of key-value pairs,,"students = {}

for i in range(num_students):
    student_id = input('Please enter student_id ')
    student_details = input('Please enter student details ')
    students[student_id] = student_details

print(students)","students = {}

for i in range(num_students):
    student_id = input('Please enter student_id ')
    student_details = input('Please enter student details ')
    students[student_id] = student_details

print(students)",correct,String Manipulation
Create a Python script to transform given numbers into a digital clock format.,,"# A Program to convert given number to digital clock format
def num2clock(n):
  hour = int (n / 3600)
  minute = int ((n % 3600) / 60)
  second = int ((n % 3600) % 60)
  return str(hour).zfill(2) + ':' + str(minute).zfill(2) + ':' + str(second).zfill(2) 

# Main
n = int(input((""Enter a number: "")))
print(num2clock(n))","# A Program to convert given number to digital clock format
def num2clock(n):
  hour = int (n / 3600)
  minute = int ((n % 3600) / 60)
  second = int ((n % 360",Incomplete Answer,Recursion
Create a Python program to sort the values of a given dictionary in descending order based on their keys.,"{'a':5, 'b':2, 'c':4, 'd':1}","def sort_dict(d): 
    sorted_dict = {key:value for key, value in sorted(d.items(), key=lambda x: x[1], reverse=True)} 
    return sorted_dict","def sort_dict(d): 
    sorted_dict = {key:value for key, value in sorte",Incomplete Answer,Loops
Create a python script to implement linear regression.,,"from sklearn.linear_model import LinearRegression
import numpy as np

def linear_regression(x, y):
    lr = LinearRegression()
    lr.fit(x , y)
    y_hat = lr.predict(x)
    return np.abs(y_hat - y).mean()","from sklearn.linear_model import LinearRegression
import numpy as np

def linear_regression(x, y):
    ",Incomplete Answer,String Manipulation
Create a class for representing a Job object in Python.,,"class Job:
    def __init__(self, title, company, pay):
        self.title = title
        self.company = company
        self.pay = pay

    def __str__(self):
        return f'Job: {self.title}, Company: {self.company}, Pay: {self.pay}'","class Job:
    def __init__(self, title, company, pay):
        self.title = title
        self.company = company
        self.pay = pay

    def __str__(self):
        return f'Job: {self.title}, Company: {self.company}, Pay: {self.pay}'",correct,File I/O
"Modify the given code in Python so that it prints the given sentence ""Hello, World!""","print(""Greetings"")","print(""Hello, World!"")","print(name, ""Hello, World!"")",Syntax Error,Loops
Create an HTML page that displays the output of this Python program.,"for i in range(1,11):
  print ""Hello World!"", i","<html>
<head>
 <title>Python Output</title>
</head>
<body>
  <script>
   for (i = 1; i <= 10; i++) {
    document.write(""Hello World!"" + i);
   }
  </script>
</body>
</html>","<html>
<head>
 <title>Python Output</title>
</head>
<body>
  <script>
   for (i = 1; i",Incomplete Answer,File I/O
Create a Python function that takes the words in the string and returns the frequency of each word.,,"def count_words(string):
    words = string.split()
    count_words = {}
    for word in words:
        if word in count_words:
            count_words[word] += 1
        else:
            count_words[word] = 1

    return count_words","def count_words(string):
    words = string.split()
    count_words = {}
    for word in words:
        if word in co",Incomplete Answer,File I/O
Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.,,"import re
def change_date_format(dt):
        return re.sub(r'(\d{4})-(\d{1,2})-(\d{1,2})', '\\3-\\2-\\1', dt)
        return change_date_format(dt)","import re
def change_date_format(dt):
        return re.sub(r'(\d{4})-(\d{1,2})-(\d{1,2})', '\\3-\\2-\\1', dt)
        return change_date_format(dt)",correct,String Manipulation
Design a python class for a person object.,,"class Person:
    def __init__(self, first_name, last_name, age, gender):
        self.first_name = first_name
        self.last_name = last_name
        self.age = age
        self.gender = gender

    def get_name(self):
        return f""{self.first_name} {self.last_name}""
    
    def get_age(self):
        return self.age
    
    def get_gender(self):
        return self.gender","class Person:
    def __init__(self, first_name, last_name, age, gender):
        self.first_name = first_name
        self.last_name = last_name
        self.age = age
        self.gender = g",Incomplete Answer,Loops
Design a program in Python to print the first 8 elements in the Fibonacci series.,,"def FibonacciSeries(n): 
      
    # Taking 1st two fibonacci nubers as 0 and 1 
    Fibonacci = [0, 1] 
      
    # Adding previous two numbers in the series 
    # and storing it 
    while len(Fibonacci) < n: 
        Fibonacci.append(sum(Fibonacci[-2:])) 
      
    return Fibonacci[:n] 
  
# Driver code 
n = 8
Fibonacci = FibonacciSeries(n) 
print(Fibonacci)","def FibonacciSeries(n) 
      
    # Taking 1st two fibonacci nubers as 0 and 1 
    Fibonacci = [0, 1] 
      
    # Adding previous two numbers in the series 
    # and storing it 
    while len(Fibonacci) < n 
        Fibonacci.append(sum(Fibonacci[-2])) 
      
    return Fibonacci[n] 
  
# Driver code 
n = 8
Fibonacci = FibonacciSeries(n) 
print(Fibonacci)",Syntax Error,Loops
Design an algorithm in Python for displaying the reverse of a string input.,"Input String: ""Hello World!""","# Create a function 
def reverse_string(str): 
    # Create an empty string  
    rev_str = """" 

    # Iterate over the string in reverse 
    for i in str: 
        rev_str = i + rev_str
    
    # Return the reversed string 
    return rev_str

# Driver Code
str = ""Hello World!""
print(""The reversed string is:"", reverse_string(str))","# Create a function 
def reverse_string(str) 
    # Create an empty string  
    rev_str = """" 

    # Iterate over the string in reverse 
    for i in str 
        rev_str = i + rev_str
    
    # Return the reversed string 
    return rev_str

# Driver Code
str = ""Hello World!""
print(""The reversed string is"", reverse_string(str))",Syntax Error,OOP
"Write a python script to randomly generate an 8-character string which contains uppercase letters, lowercase letters and digits.",,"import string 
import random

def generate_code():
    '''This function will generate an 8-character string with uppercase letters, lowercase letters and digits.'''
    chars = string.ascii_uppercase + string.ascii_lowercase + string.digits
    code = ''.join(random.choice(chars) for _ in range(8))
    return code","import string 
import random

def generate_code():
    '''This function will generate an 8-character string with uppercase letters, lowercase letters and digits.'''
    chars = string.ascii_uppercase + string.ascii_lowercase + string.digits
    code = ''.join(random.choice(chars) for _ in range(8))
    return code",correct,String Manipulation
Write a python program to print out all permutations of a string.,,"def permute(a, l, r): 
    if l==r: 
        print(''.join(a)) 
    else: 
        for i in range(l,r+1): 
            a[l], a[i] = a[i], a[l] 
            permute(a, l+1, r)
            a[l], a[i] = a[i], a[l]

def main():
    string = input(""Enter a string:"")
    n = len(string) 
    a = list(string)
    permute(a, 0, n-1)

if __name__ == '__main__': 
    main()","def permute(a, l, r): 
    if l==r: 
        pritn(''.join(a)) 
    else: 
        for i in range(l,r+1): 
            a[l], a[i] = a[i], a[l] 
            permute(a, l+1, r)
            a[l], a[i] = a[i], a[l]

def main():
    string = input(""Enter a string:"")
    n = len(string) 
    a = list(string)
    permute(a, 0, n-1)

if __name__ == '__main__': 
    main()",Syntax Error,OOP
Write a Python program to calculate the area of a triangle given three side lengths.,,"def area_of_triangle(a, b, c):
    # calculate the semi-perimeter
    s = (a + b + c) / 2
    # calculate the area
    area = (s * (s-a) * (s-b) * (s-c)) ** 0.5
    return area","def area_of_triangle(a, b, c):
    # calculate the semi-perimeter
    s = (a + b + c) / 2
    # calculate the area
    area = (s * (s-a) * (s-b) * (s-c)) ** 0.5
    return area",correct,String Manipulation
Create a python script to concatenate two given strings.,"string1 = ""Hello ""
string2 = ""World!""","def concatenateStrings(string1, string2):
  return string1 + string2","def concatenateStrings(string1, st",Incomplete Answer,OOP
Suggest a completion for the following Python code to sort a given list of dictionaries by a given key.,"my_list = [{'name': 'Bob', 'age': 20}, {'name': 'Alice', 'age': 10}]","def sort_dicts(my_list, key):
    return sorted(my_list, key=lambda x: x[key])

# Main
if __name__ == ""__main__"":
    my_list = [{'name': 'Bob', 'age': 20}, {'name': 'Alice', 'age': 10}]
    key = 'age'
    print(sort_dicts(my_list, key))  # [{'name': 'Alice', 'age': 10}, {'name': 'Bob', 'age': 20}]","def sort_dicts(my_list, key):
    return sorted(my_list, key=lambda x: x[key])

# Main
if __name__ == ""__main__"":
    my_list = [{'name': 'Bob', 'age': 20}, {'name': 'Alice', 'age': 10}]
    key = 'age'
    print(sort_dicts(my_list, key))  # [{'name': 'Alice', 'age': 10}, {'name': 'Bob', 'age': 20}]",correct,Loops
Create a python program that takes a list of numbers and returns the sum of all the numbers in the list.,"[1, 2, 3, 4, 5]","def sum_list(list_of_numbers):
  total = 0
  for num in list_of_numbers:
    total += num
  return total
  
# Main
nums = [1, 2, 3, 4, 5]
total_sum = sum_list(nums)

print('Sum of list elements: ', total_sum)","def sum_list(list_of_numbers):
  total = 0
  for num in list_of_numbers:
    total += num
  return total
  
# Main
nums = [1, 2, 3, 4, 5]
total_sum = sum_list(nums)

print('Sum of list elements: ', total_sum)",correct,OOP
Write a function to count occurrence of a character in a string.,,"def count_char(string,char):
 count = 0
 for i in range(len(string)):
    if(string[i] == char):
        count = count + 1
 return count","def count_char(string,char):
 count = 0
 for i in range(len(string))",Incomplete Answer,Recursion
Suggest a change to the following loop to make it more Pythonic.,"numbers = [1, 2, 3, 4, 5]
for i in range(len(numbers)):
    print(numbers[i])","numbers = [1, 2, 3, 4, 5]

for number in numbers:
    print(number)","numbers = [1, 2, 3, 4, 5]

for number in numbers:
    print(number)",correct,String Manipulation
Write a python program that takes a list of numbers and converts them to strings.,"[1, 2, 3, 4]","new_list = []
for i in range(0, len(list)):
    new_list.append(str(list[i]))","new_list = []
for i in range(0, len(list)):
    new_list.append(str(list[i]))",correct,OOP
Write a function to search some literals strings in a string.,,"import re
def string_literals(patterns,text):
  for pattern in patterns:
     if re.search(pattern,  text):
       return ('Matched!')
     else:
       return ('Not Matched!')","import re
def string_literals(patterns,text):
  for pattern in patterns:
     if re.search(pattern,  text):
       return ('Matched!')
     else:
       return ('Not Matched!')",correct,OOP
"Write a Python function to classify a given string based on the following conditions:
A) If the length of the string is less than 3, “Short”
B) If the string only contains alphabets, “Alphabet”
C) If the string only contains numbers, “Numeral”","string = ""ab1""","def classify_string(string):
    if len(string) < 3:
        return ""Short"" 
    elif string.isalpha():
        return ""Alphabet"" 
    elif string.isnumeric():
        return ""Numeral""","def classify_string(string):
    if len(string) < 3:
        return ""Short"" 
    elif string",Incomplete Answer,String Manipulation
Use Python to create a dictionary that stores the names of five fruits and a corresponding numerical value for each fruit.,,"fruits = {
 'apple': 1,
 'banana': 2,
 'grape': 3,
 'orange': 4,
 'strawberry': 5
 }","fruits = {
 'apple': 1,
 'banana': 2,
 'grape': 3,
 'orange': 4,
 'strawberry': 5
 }",correct,OOP
Construct a class in Python which implements two methods to add two numbers.,,"class Calculator:
 def __init__(self):
   pass
    
 def add_two_numbers(self, a, b):
   return a + b

 def add(self, a, b, c):
   return a + b + c

calculator = Calculator()
result = calculator.add_two_numbers(1, 2)
print(result)","class Calculator:
 def __init__(self:
   pass
    
 def add_two_numbers(self, a, b:
   return a + b

 def add(self, a, b, c:
   return a + b + c

calculator = Calculator(
result = calculator.add_two_numbers(1, 2
print(result",Syntax Error,Loops
"Write a Python function to take a text string as an input, and generate a table of the frequencies of each letter in the string.","sample_string = ""HelloWorld""","def find_frequencies(sample_string):
   frequency_table = dict()
   for char in sample_string:
      if char in frequency_table:
         frequency_table[char] += 1
      else:
         frequency_table[char] = 1
   return frequency_table

result = find_frequencies(""HelloWorld"")
print(result)","def find_frequencies(sample_string):
   frequency_table = dict()
   for char in sample_string:
  if char in frequency_table:
     frequency_table[char] += 1
  else:
     frequency_table[char] = 1
   return frequency_table

result = find_frequencies(""HelloWorld"")
print(result)",Syntax Error,Recursion
Can you provide a Python script to find the most frequent element in an array?,"[1, 1, 2, 3, 2, 4, 4]","from collections import Counter

def most_frequent(arr):
    cnt = Counter(arr)
    return cnt.most_common(1)[0][0]

arr = [1, 1, 2, 3, 2, 4, 4]
most_frequent_elem = most_frequent(arr)
print(most_frequent_elem)","from collections import Counter

def most_frequent(arr):
    cnt = Counter(arr)
    return cnt.most_common(1)[0][0]

arr = [1, 1, 2, 3, 2, 4, 4]
most_frequent_elem = most_frequent(arr)
print(name, most_frequent_elem)",Syntax Error,OOP
Develop a modularized Python code snippet to find the volume of a rectangular cube with side length 'a'.,a = 4,"def cube_volume(a):
    """"""Calculate the volume of a cube
    Args:
        a (float): length of a side of the cube
    Returns:
        Volume of the cube (float)

    """"""
    return a**3

# Input 
a = 4

# Calculate Cube Volume 
volume = cube_volume(a)

# Print Volume
print(""Volume of cube with side length"", a, ""is"", volume)","def cube_volume(a):
    """"""Calculate the volume of a cube
    Args:
        a (float): length of a side of the cube
    Returns:
        Volume of the cube (float)
",Incomplete Answer,Loops
Create a class in Python that takes two parameters and prints them as strings.,,"class MyClass:
    def __init__(self, param1, param2):
        self.param1 = param1
        self.param2 = param2

    def print_parameters(self):
        print(str(self.param1) + "", "" + str(self.param2))","class MyClass:
    def __init__(self, param1, param2):
        self.param1 = param1
        self.param2 = param2

    def print_parameters(self):
        print(str(self.param1) + "", "" + str(self.param2))",correct,Recursion
"Create a python function to take a list of numbers as an argument, and return the sum of the odd numbers in the list","[2, 3, 4, 5, 6, 7]","def odd_numbers(numbers):
    result = 0 
    for num in numbers: 
        if num % 2 != 0:
            result += num
    return result","def odd_numbers(numbers):
    result = 0 
    for num in numbers: 
",Incomplete Answer,Recursion
Write a function to remove multiple spaces in a string by using regex.,,"import re
def remove_multiple_spaces(text1):
  return (re.sub(' +',' ',text1))","import re
def remove_multiple_spaces(text1):
  return (re.sub(' +',' ',text1))",correct,String Manipulation
Develop a Python program to calculate the mean of a given array.,"60, 54, 77, 78, 37, 35","def mean(arr):
    total = 0
    for num in arr:
        total += num
    return total/len(arr)

arr = [60, 54, 77, 78, 37, 35]
print(""Mean: "", mean(arr))","def mean(arr):
    total = 0
    for num in arr:
        total += num
    return total/len(arr)

arr = [60, 54, 77, 78, 37, 35]
print(""Mean: "", mean(arr))",correct,File I/O
Write a function to sort a list of dictionaries using lambda function.,,"def sorted_models(models):
 sorted_models = sorted(models, key = lambda x: x['color'])
 return sorted_models","def sorted_models(models):
 sorted_models = sorted(mod",Incomplete Answer,File I/O
Write a python function to convert a string to a list.,,"def Convert(string): 
    li = list(string.split("" "")) 
    return li ","def Convert(string) 
    li = list(string.split("" "")) 
    return li ",Syntax Error,Loops
Design a Python program to simulate a coin toss game.,,"import random 

def coin_toss(): 
    head = 0
    tail = 0
    print(""Let's simulate a coin toss..."")
    for _ in range(5):
        toss = random.randint(0,1)
        if toss == 0:
            head += 1
            print(""It's Heads"")
        else:
            tail += 1
            print(""It's Tails"")
    print(f""Heads: {head}"")
    print(f""Tails: {tail}"")","import random 

def coin_toss(): 
    head = 0
    tail = 0
    pritn(""Let's simulate a coin toss..."")
    for _ in range(5):
        toss = random.randint(0,1)
        if toss == 0:
            head += 1
            pritn(""It's Heads"")
        else:
            tail += 1
            pritn(""It's Tails"")
    pritn(f""Heads: {head}"")
    pritn(f""Tails: {tail}"")",Syntax Error,OOP
Write a Python program to find all palindromic words in a given list.,"words = [""word"", ""racecar"", ""level"", ""pop"", ""mom"", ""nursesrun""]","def palindrome_words(words): 
    """"""This function takes in a list of words and returns a list of palindromic words""""""

    palindrome_words = []

    for word in words:
        if word == word[::-1]:
            palindrome_words.append(word)

    return palindrome_words","def palindrome_words(words): 
    """"""This function takes in a list of words and returns a list of palindromic words""""""

    palindrome_words = []

    for word in words:
        if word == word[::-1]:
            palindrome_words.append(word)

    return palindrome_words",Syntax Error,File I/O
Create a Python program to group word frequencies from a given text.,Text: The quick brown fox jumps over the lazy dog,"text = ""The quick brown fox jumps over the lazy dog""
words = text.split("" "")

word_freq = {}

for w in words:
    if w in word_freq:
        word_freq[w] += 1
    else:
        word_freq[w] = 1

print(word_freq) # Output: {'The': 1, 'quick': 1, 'brown': 1, 'fox': 1, 'jumps': 1, 'over': 1, 'the': 1, 'lazy': 1, 'dog': 1}","text = ""The quick brown fox jumps over the lazy dog""
words = text.split("" "")

word_freq = {}

for w in words
    if w in word_freq
        word_freq[w] += 1
    else
        word_freq[w] = 1

print(word_freq) # Output {'The' 1, 'quick' 1, 'brown' 1, 'fox' 1, 'jumps' 1, 'over' 1, 'the' 1, 'lazy' 1, 'dog' 1}",Syntax Error,File I/O
Design a sorting algorithm in Python that can sort this specific array.,,"def sortArray(list): 
    for i in range(len(list)-1):
        minIndex = i 
        for j in range(i+1, len(list)):
            if list[minIndex] > list[j]:
                minIndex = j 
        list[i], list[minIndex] = list[minIndex], list[i]
    return list","def sortArray(list): 
    for i in range(len(list)-1):
        minIndex = i 
        for j in range(i+1, len(list)):
            if list[minIndex] > list[j]:
                minIndex = j 
        list[i], list[minIndex] = list[minIndex], list[i]
    return list",correct,Loops
Create a RESTful API in Python that exposes a content to be consumed by other applications.,,"from flask import Flask, jsonify
 
app = Flask(__name__)

@app.route('/content', methods=['GET'])
def get_content():
    content = {'data': 'This is the content that will be exposed.'}
    return jsonify(content)

if __name__ == ""__main__"":
    app.run()","from flask import Flask, jsonify
 
app = Flask(__name__)

@app.route('/content', methods=['GET'])
def get_content():
    content = {'data': 'This is the content that will be exposed.'}
    return jsonify(content)

if __name__ == ""__main__"":
    app.run()",Syntax Error,Recursion
Create a Python program to find all the strings in a list of strings that start with a given character.,"[""apple"", ""banana"", ""kiwi"", ""melon""], ""a""","def get_strings_with_prefix(strings, letter):
    result = []

    for string in strings:
        if string.startswith(letter):
            result.append(string)
    return result

data = [""apple"", ""banana"", ""kiwi"", ""melon""]

result = get_strings_with_prefix(data, ""a"")
print(result)","def get_strings_with_prefix(strings, letter):
    result = []

    for string in strings:
        if string.startswith(letter):
            r",Incomplete Answer,OOP
Generate a Python function that takes in a list of numbers and returns the greatest common divisor (GCD) of the list elements.,"[25, 15, 20]","def find_GCD(input_list): 
 gcd = input_list[0] 
 for num in input_list[1:]: 
 gcd = find_GCD(gcd, num) 
 return gcd

def find_GCD(a, b):
 while(b != 0): 
 a, b = b, a%b 
 return a","def find_GCD(input_list): 
 gcd = input_list[0] 
 for num in input_list[1:]: 
 gcd = find_",Incomplete Answer,Recursion
Translate the following pseudocode into Python:,"IF number > 0
    Print ""positive""
ELSE
    Print ""negative""","if number > 0:
    print(""positive"")
else:
    print(""negative"")","if number > 0:
    print(""positi",Incomplete Answer,OOP
Design a sorting algorithm for strings in Python.,,"def string_sort(strings):
    # Bubble sort algorithm
    for i in range(len(strings)-1):
        for j in range(i+1, len(strings)):
            if strings[i] > strings[j]:
                temp = strings[i]
                strings[i] = strings[j]
                strings[j] = temp
    return strings

# example usage
strings = [""cat"", ""dog"", ""elephant"", ""apple""]
print(string_sort(strings))","def string_sort(strings):
    # Bubble sort algorithm
    for i in range(len(strings)-1):
        for j in range(i+1, len(strings)):
            if strings[i] > strings[j]:
                temp = strings[i]
                strings[i] = strings[j]
                strings[j] = temp
    return strings

# example usage
strings = [""cat"", ""dog"", ""elephant"", ""apple""]
print(string_sort(strings))",correct,OOP
Optimize the provided Python code by reducing the number of operations.,"def slow_function(x):
    y = 0
    for i in range(1000):
        y = y + x * x
    return y","def fast_function(x):
    y = 0
    for i in range(250):
        y += x * x * x * x
    return y","def fast_function(x):
    y = 0
    for i in range(250):
        y += x * x * x * x
    return y",correct,Recursion
Create a function that takes a list of strings (words or phrases) as an argument and returns the longest string in the list.,"[“javascript”, “python”, “ruby”]","function findLongestString(strList) {
 let longestStr = '';
 
 strList.forEach(str => {
 if (str.length > longestStr.length) {
 longestStr = str;
 }
 })
 
 return longestStr;
}
 
let longestWord = findLongestString(['javascript', 'python', 'ruby']);
 
console.log(longestWord); // Output: 'javascript'","function findLongestString(strList) {
 let longestStr = '';
 
 strList.forEach(str => {
 if (str.length > longestStr.length) {
 longestStr = str;
 }
 ",Incomplete Answer,OOP
Create a basic web scraping application in Python that extracts news headlines from a news source.,,"import requests
from bs4 import BeautifulSoup

url = 'http;//example.com/news'

response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')
headlines = soup.find_all('h2')

for headline in headlines:
 print(headline.text)","import requests
from bs4 import BeautifulSoup

url = 'http;//example.com/news'

response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')
headlines = soup.find_all('h2')

for headline in headlines
 print(headline.text)",Syntax Error,OOP
Demonstrate how tog concatenate two strings in Python.,,"a = ""Hello""
b = ""World!""

c = a + b
print(c)","a = ""Hello""
b = ""World!""

c = a + b
print(c)",correct,OOP
Generate the following sequence using a while loop in Python.,"0, 1, 2, 4, 7, 11, ...","a, b = 0, 1
while b < 100:
    print(a)
    a, b = b, a + b","a, b = 0, 1
while b < 100
    print(a)
    a, b = b, a + b",Syntax Error,File I/O
Create a Python function to calculate the factorial of an input number.,,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)","def factorial(n):
if n == 0:
    return 1
else:
    return n * factorial(n-1)",Syntax Error,Loops
Write a Python program using a for loop to sum up the even numbers in a given list.,"number_list = [2, 3, 5, 7, 11, 13, 17]","total = 0
for number in number_list:
 if number % 2 == 0:
 total += number
print(total) # prints 2 + 6 = 8","total = 0
for number in number_list:
 if number % 2 == 0:
 total += number
pritn(total) # pritns 2 + 6 = 8",Syntax Error,OOP
Write a function to reflect the modified run-length encoding from a list.,,"from itertools import groupby
def modified_encode(alist):
        def ctr_ele(el):
            if len(el)>1: return [len(el), el[0]]
            else: return el[0]
        return [ctr_ele(list(group)) for key, group in groupby(alist)]","from itertools import groupby
def modified_encode(alist):
        def ctr_ele(el):
            if len(el)>1: return [len(el), el[0]]
            else: return el[0]
        return [ctr_ele(list(group)) for key, group in groupby(alist)]",correct,File I/O
Generate a function in Python to decode Base64 encoded strings.,,"import base64

def decode_base64(string):
    decoded_string = base64.b64decode(string).decode('utf-8')
    return decoded_string","import base64

def decode_base64(string):
    decoded_string = base64.b64decode(string).decode('utf-8')
    return decoded_string",correct,String Manipulation
Generate a python program to print the given sentence in reverse.,"Sentence: ""This is an example""","def reverse_string(s):
    return s[::-1]

print(reverse_string(""This is an example""))","def reverse_string(s):
    return s[::-1]

",Incomplete Answer,Loops
Optimize a Python program containing a matrix addition operation.,"X = [[2, 3], 
     [1, 4]] 

Y = [[5, 6], 
     [7, 8]]","import numpy as np 

X = np.array([[2, 3], 
     [1, 4]]) 

Y = np.array([[5, 6], 
     [7, 8]])

Z = X + Y 

print(""Matrix addition result:"") 
print(Z)","import numpy as np 

X = np.array([[2, 3], 
 [1, 4]]) 

Y = np.array([[5, 6], 
 [7, 8]])

Z = X + Y 

print(""Matrix addition result:"") 
print(Z)",Syntax Error,Recursion
Generate a Python code to search a number in a sorted array,,"def binary_search(arr, x): 
    l = 0
    r = len(arr)-1
    while l <= r:
        mid = l + (r - l) // 2
  
        if arr[mid] == x: 
            return mid 
        elif arr[mid] < x: 
            l = mid + 1
        else: 
            r = mid - 1
    return -1","def binary_search(arr, x): 
    l = 0
    r = len(arr)-1
    while l <= r:
        mid = l + (r - l) // 2
  
        if arr[mid] == x: 
            return mid 
        elif arr[mid] < x: 
            l = mid + 1
        else: 
            r = mid - 1
    return -1",Syntax Error,Loops
Create a function in Python to find the total cost of a purchase given the price of each item and the quantity.,"price = 10.00
quantity = 3","def get_total_cost(price, quantity):
  return price * quantity

total_cost = get_total_cost(price, quantity)
print(total_cost) #prints 30.00","def get_total_cost(price, quantity):
  return price * quantity

total_cost = get_total_cost(price, quantity)
print(total_cost) #prints 30.00",correct,String Manipulation
Generate a Python program to clean a string of HTML tags.,"Example Input: ""<p>This is a <b>test</b> string</p>"".","import re

# Clean a string of HTML tags 
def clean_html_tags(str):
    clean_str = re.sub(""<.*?>"", """", str)
    return clean_str

html_string = ""<p>This is a <b>test</b> string</p>""

clean_str = clean_html_tags(html_string)

print(clean_str) #This is a test string","import re

# Clean a string of HTML tags 
def clean_html_tags(str):
    clean_str = re.sub(""<.*?>"", """", str)
    return clean_str

html_string = ""<p>This is a <b>test</b> string</p>""

clean_str = clean_html_tags(html_string)

print(clean_str) #This is a test string",correct,Recursion
Write a Python program to check if an item exists in a list using a given condition.,"list = [1, 2, 3, 4]
condition = lambda x: x % 2 == 0","def check_item(lst, condition): 
	for item in lst:
 		if condition(item): 
 			return True 
	return False

result = check_item([1, 2, 3, 4], lambda x : x % 2 == 0) 
print(result)","def check_item(lst, condition): 
	for item in lst:
 		if condition(item): 
 			return True 
	return False

result = check_item([1, 2, 3, 4], lambda x : x % 2 == 0) 
print(result)",correct,File I/O
Develop a program in Python to calculate the sum of the following series:,1 + 1/2 + 1/3 + ... + 1/n,"def SumOfSeries(n): 
    seriesSum = 0
    for num in range(1, n+1): 
        seriesSum += 1/num  
    return round(seriesSum, 2) 

# Driver code 
n = 5
print(""Sum of the series up to number:"", n, 
                    ""is"", SumOfSeries(n))","def SumOfSeries(n): 
    seriesSum = 0
    for num in range(1, n+1): 
        seriesSum += 1/num  
    return round(ser",Incomplete Answer,String Manipulation
Generate a python program to filter a given array of numbers and remove all numbers greater than 5.,"[3, 4, 6, 1, 8, 9]","def filter_greater_than_5(arr):
    new_arr = []
    for x in arr:
        if x <= 5:
            new_arr.append(x)
    return new_arr

arr = [3, 4, 6, 1, 8, 9]
print(filter_greater_than_5(arr))","def filter_greater_than_5(arr):
    new_arr = []
    for x in arr:
        if x <= 5:
            new_arr.append(x)
    return new_arr

arr = [3, 4, 6, 1, 8, 9]
print(filter_greater_than_5(arr))",correct,OOP
Design a Python function to generate a random password with the given length.,,"import random
import string

def generate_password(length):
    chars = string.ascii_letters + string.digits
    return ''.join(random.choice(chars) for _ in range(length))","import random
import string

def generate_password(length):
    chars = string.ascii_letters + string.digits
    return ''.join(random.choice(chars) for _ in range(length))",correct,Loops
"Create a Python script to read a dictionary, and then print only the keys whose values are greater than 5.",,"my_dict = {
 'a': 1,
 'b': 2,
 'c': 8,
 'd': 4
}

for key, value in my_dict.items():
 if value > 5:
  print(key)

# Output: c","my_dict = {
 'a': 1,
 'b': 2,
 'c': 8,
 'd': 4
}

for key, value in my_dict.items():
 if value > 5:
  print(key)

# Output: c",correct,Loops
Compose a Python code snippet to check if the input list contains even numbers.,"[2, 3, 4, 5, 6]","def isEvenNumberPresent(list):
    for item in list:
        if item % 2 == 0:
            return True
    return False

print(isEvenNumberPresent([2, 3, 4, 5, 6]))","def isEvenNumberPresent(list):
    for item in list:
        if item % 2 == 0:
            return True
    return False

print(isEvenNumberPresent([2, 3, 4, 5, 6]))",correct,OOP
Create a Python function to convert a million seconds to days.,,"def million_seconds_to_days(seconds):
    return seconds/(60*60*24)","def million_seconds_to_days(seconds):
    return seconds/(60*60*24)",correct,Recursion
"Once you have generated a list of strings, write a Python program to print the same in reverse order.","L2= [""This"", ""is"", ""another"", ""list"", ""of"", ""strings""]","def reverse_list(L2):
    L2.reverse()
    return L2","def reverse_list(L2):
    L2.reverse()
    return L2",correct,OOP
Write a Python code to print the Fibonacci sequence upto a given number ‘n’.,,"def generateFibonacciSequence(n):
 a = 0
 b = 1
 print(a, end="" "")
 print(b, end="" "")
 for _ in range(2, n + 1):
  c = a + b
  a = b
  b = c
  print(c, end="" "")

generateFibonacciSequence(10)","def generateFibonacciSequence(n):
 a = 0
 b = 1
 print(a, end="" "")
 print(b, end="" "")
 for _ in range(2, n + 1):
  c = a + b
  a = b
  b = c
  print(c, end="" "")

generateFibonacciSequence(10)",correct,Recursion
Write a function to create a list of empty dictionaries.,,"def empty_list(length):
 empty_list = [{} for _ in range(length)]
 return empty_list","def empty_list(length):
 empty_list = [{} ",Incomplete Answer,File I/O
Classify text elements in a Python program into function names and variable names.,"def hello_world():
    print(""Hello World!"")","Function Name: hello_world

Variable Name: None","Function Name: hello_world

Variable Name: None",correct,Recursion
Develop an efficient sorting technique in Python to arrange the following list of strings.,"L1= [""This"", ""is"", ""a"", ""list"", ""of"", ""strings""]","def sort_list(L1):
    L1.sort()
    return L1","def sort_list(L1):
    L1.sort()
    return L1",correct,OOP
"Create a function with two parameters, x and y, in Python that returns the sum of x and y.",,"def add(x, y):
	return x+y","def add(x, y)",Incomplete Answer,File I/O
Write a Python program to convert a list of lists into a dictionary.,"list = [[1, 'a', 'A'], [2, 'b', 'B'], [3, 'c', 'C'], [4, 'd', 'D']]",dictionary = dict(list),dictionary ,Incomplete Answer,File I/O
Write a Python script to identify the prime numbers in a list of integers.,"list of integers: [2, 4, 7, 11, 13]","def is_prime(num): 
    if num > 1: 
       for i in range(2,num): 
           if (num % i) == 0: 
               return False 
       else: 
           return True
    else: 
       return False

numbers = [2, 4, 7, 11, 13]   
for num in numbers: 
    if is_prime(num): 
        print(num)","def is_prime(num: 
    if num > 1: 
       for i in range(2,num: 
           if (num % i == 0: 
               return False 
       else: 
           return True
    else: 
       return False

numbers = [2, 4, 7, 11, 13]   
for num in numbers: 
    if is_prime(num: 
        print(num",Syntax Error,OOP
Write a code to detect any pattern in a given string in Python.,"my_string = ""aabccba""","def detect_pattern(my_string):
    for i in range(len(my_string)):
        if my_string.count(my_string[i]) > 1:
            return True
    return False

if __name__ == '__main__':
    print(detect_pattern(my_string))","def detect_pattern(my_string):
    for i in range(len(my_string)):
        if my_string.count(my_string[i]) >",Incomplete Answer,String Manipulation
Write a Python algorithm to calculate a person's body mass index (BMI).,Body mass index (BMI) is calculated using a person’s weight in kilograms divided by their height in meters squared.,"def bmi_calculation(height, weight):  
    bmi = weight / (height * height)  
    return bmi","def bmi_calculation(height, weight):  
    bmi",Incomplete Answer,Loops
Write a Python code snippet which sorts a list by the values of the 2nd element of each tuple in the list.,"[(1, 2), (3, 1), (2, 3)]","unsorted_list = [(1, 2), (3, 1), (2, 3)]

def take_second(el):
     return el[1]

# sorting list 
# the second elements of tuples 
sorted_list = sorted(unsorted_list, key = take_second) 

# printing sorted list 
print(sorted_list)","unsorted_list = [(1, 2), (3, 1), (2, 3)]

def take_second(el):
     return el[1]

# sorting list 
# the second elem",Incomplete Answer,File I/O
Build an interactive chatbot in Python using the Chatterbot library.,,"from chatterbot import ChatBot
from chatterbot.trainers import ListTrainer

bot = ChatBot('Bot')
bot.set_trainer(ListTrainer)

conversation = [
    'Hello',
    'Hi there!',
    'What is your name?',
    'My name is Bot. Nice to meet you!'
]

bot.train(conversation)

while True:
    request = input('You: ')
    response = bot.get_response(request)
    print('Bot: ', response)","from chatterbot import ChatBot
from chatterbot.trainers import ListTrainer

bot = ChatBot('Bot')
bot.set_trainer(ListTrainer)

conversation = [
    'Hello',
    'Hi there!',
    'What is yo",Incomplete Answer,Loops
Convert the following pseudocode into a python program.,"i = 0
j = 0
while i < 10:
    j += i
    i += 1","""""""
Convert the following pseudocode into a Python program
""""""

i = 0
j = 0
while i < 10:
    j += i
    i += 1
    
print(j)","""""""
Convert the following pseudocode into a Python program
""""""",Incomplete Answer,Loops
Write a Python program to convert a string containing a number in base 8 to base 10.,input_num='45',"def conv(input_num):
    decimal_num = int(input_Num, 8)
    return decimal_num","def conv(input_num):
    decimal_num = int(input_Num, 8)
    return decimal_num",Syntax Error,String Manipulation
Design a function in Python which takes two integers and returns the maximum of the two.,,"def get_max(a, b):
  if a > b:
    return a
  else:
    return b","def get_max(a, b):
  if a > b:
    return a
  else:
    return b",correct,File I/O
Compose a Python script to generate the Fibonacci sequence up to the given number n.,,"def generate_fibonacci_sequence(n):
  a = 0
  b = 1
  sequence = [a]
  while b < n:
    a, b = b, a + b
    sequence.append(a)
  return sequence

result = generate_fibonacci_sequence(7)
print(result) # [0, 1, 1, 2, 3, 5]","def generate_fibonacci_sequence(n):
  a = 0
  b = 1
  sequence = [a]
  while b < n:
    a, b = b, a + b
    se",Incomplete Answer,Loops
Convert the following Java program to Python.,"public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello, World!"");
    }
}","# Program to print ""Hello, World!""

print(""Hello, World!"")","# Program to print ""Hello, Wo",Incomplete Answer,OOP
Create a basic web scraper in Python using the requests library and the Beautiful Soup library. The web scraper should take a URL as an argument and print the text content of the page.,Url: https://example.com,"import requests
from bs4 import BeautifulSoup

# Define the URL
url = 'https://example.com'

# Make a request
response = requests.get(url)

# Parse the HTML
soup = BeautifulSoup(response.text, 'html.parser')

# Print the text contents
print(soup.text)","import requests
from bs4 import BeautifulSoup

# Define the URL
url = 'https://example.com'

# Make a request
response = requests.get(url)

# Parse the HTML
soup = BeautifulSoup(response.text, 'html.parser')

# Print the text contents
print(soup.text)",correct,String Manipulation
Rearrange the following code so that it works in Python.,"y, x = x, y","x, y = y, x","x, y = y, x",correct,File I/O
"In Python, generate a program that takes in a user-defined list and produces a new list with all the duplicates removed.",,"def remove_duplicates(my_list):
    my_list = list(dict.fromkeys(my_list))
    return my_list","def remove_duplicates(my_list):
    my_list = list(dict.fromkeys(my_list))
    return my_list",correct,Recursion
Write an optimization function for finding the minimum of a two-dimensional scalar field in Python.,"a scalar field represented as a 2D array (e.g. [[2, 1], [4, 3]] where value at position [i][j] is 2i + j)","def findMin(scalarField):
 minVal = float('inf')
 minInd = (-1, -1)
 for i in range(len(scalarField)):
 for j in range(len(scalarField[i])):
 val = scalarField[i][j]
 if val < minVal:
 minVal = val
 minInd = (i, j)
 return minInd","def findMin(scalarField):
 minVal = float('inf')
 minInd = (-1, -1)
 for i in range(len(scalarField)):
 for j in r",Incomplete Answer,String Manipulation
Write a python function to toggle all even bits of a given number.,,"def even_bit_toggle_number(n) : 
    res = 0; count = 0; temp = n 
    while (temp > 0) :     
        if (count % 2 == 1) : 
            res = res | (1 << count)      
        count = count + 1
        temp >>= 1 
    return n ^ res ","def even_bit_toggle_number(n) : 
    res = 0; count = 0; temp = n 
    while (temp > 0) :     
        if (count % 2 == 1) : 
            res = res | (1 << count)      
        count = count + 1
        temp >>= 1 
    return n ^ res ",correct,Recursion
"Create a Python program to validate user input. The program should take a string and only return ""valid"" if the string contains only the characters a-z, 0-9, and _ .","text_string = ""valid_string123""","text_string = input()

valid_characters = ""abcdefghijklmnopqrstuvwxyz0123456789_""

is_valid = True

for c in text_string:
 if c not in valid_characters:
 is_valid = False

if is_valid:
 print ""Valid""
else:
 print ""Invalid""","text_string = input()

valid_characters = ""abcdefghijklmnopqrstuvwxyz0123456789_""

is_valid = True

for c in text_string:
 if c not in valid_characters:
 is_valid = False

if is_valid:
 pritn ""Valid""
else:
 pritn ""Invalid""",Syntax Error,String Manipulation
Write Python code to create a JSON object from a given list.,"data = [1, 2, 3, 4, 5]","import json

data = [1, 2, 3, 4, 5]

data_json = json.dumps(data)

print(data_json)","import json

data = [1, 2, 3, 4, 5]

data_json = json.dumps(data)

print(data_json)",correct,Loops
"Write a Python program to implement a basic stack data structure with push, pop, and peek operations.",,"class Stack:
 def __init__(self):
 self.items = []

 def push(self, item):
 self.items.append(item)

 def pop(self):
 return self.items.pop()

 def peek(self):
 return self.items[len(self.items)-1]

my_stack = Stack()
my_stack.push(1)
my_stack.push(2)
my_stack.push(3)
print(my_stack.peek()) # 3
print(my_stack.pop()) # 3
print(my_stack.pop()) # 2","class Stack:
 def __init__(self):
 self.items = []

 def push(self, item):
 self.items.append(item)

 def pop(self):
 return self.items.pop()

 def peek(self):
 return self.",Incomplete Answer,String Manipulation
Create a python script to visualize the distribution of values in a numpy array,"numpy array [1, 2, 3, 4, 5, 6]","import matplotlib.pyplot as plt
import numpy as np
 
arr = np.array([1,2,3,4,5,6])
 
plt.hist(arr)
plt.title(""Distribution of values in the given array"")
plt.show()","import matplotlib.pyplot as plt
import numpy as np
 
arr = np.array([1,2,3,4,5,6])
 
plt.hist(arr)
plt.title(""Distribution of values in the given array"")
plt.show()",Syntax Error,String Manipulation
Create a command line tool in Python that takes a numerical input (e.g. from user input) and prints out all prime numbers up to that number.,50,"import sys

def main():
 try:
 number = int(sys.argv[1])
 except (IndexError, ValueError):
 number = int(input('Please enter a number: '))

 prime_list = []
 for num in range(2, number + 1):
 for i in prime_list:
 if num % i == 0:
 break
 else:
 prime_list.append(num)

print(prime_list)

if __name__ == '__main__':
 main()","import sys

def main():
 try:
 number = int(sys.argv[1])
 except (IndexError, ValueError):
 number = int(input('Please enter a number: '))

 prime_list = []
 for",Incomplete Answer,Loops
Convert this python code to java code.,"i = 0
while i < 5:
    print(i)
    i+=1","int i = 0;
while (i < 5) 
{
    System.out.println(i);
    i++;
}","int i = 0;
while (i < 5) 
{
    ",Incomplete Answer,String Manipulation
Compute the sum of the first 100 natural numbers using a function in Python.,,"def sum_numbers(n):
    """"""
    Computes the sum of the first `n` natural numbers
    """"""
    s = 0
    for i in range(n):
        s += i+1
    return s

print(sum_numbers(100))","def sum_numbers(n):
    """"""
    Computes the sum of the first `n` natural numbers
    """"""
    s = 0
    for i in range(n):
        s += i+1
    return s

print(sum_numbers(100))",correct,String Manipulation
Write a Python program to generate a 5x5 matrix filled with zeros.,,"def generate_matrix():
    matrix = []
    for _ in range(5):
        row = [0] * 5
        matrix.append(row)
    return matrix
        
if __name__ == '__main__':
    matrix = generate_matrix()
    print(matrix)","def generate_matrix():
    matrix = []
    for _ in range(5):
        row = [0] * 5
        matrix.append(",Incomplete Answer,Recursion
Write a Python script for computing the average of an arbitrary list of numbers.,,"def avg(nums):
    return sum(nums) / len(nums)

nums = [1, 5, 8, 10]
print(avg(nums))","def avg(nums):
    return sum(nums) / len(n",Incomplete Answer,File I/O
Edit the Python program below to add an if condition to determine if an input number is odd or even.,"def odd_or_even(number):
    # your code here","def odd_or_even(number):
    # your code here
    if number % 2 == 0:
        return ""even""
    else:
        return ""odd""","def odd_or_even(number):
    # your code here
    if number %",Incomplete Answer,OOP
Create an implementation of the Quicksort algorithm in Python.,"[5, 4, 3, 1, 2]","def quicksort(nums):
    if len(nums) <= 1:
        return nums
 
    pivot = nums[len(nums) // 2]
    left = [x for x in nums if x < pivot]
    middle = [x for x in nums if x == pivot]
    right = [x for x in nums if x > pivot]
 
    return quicksort(left) + middle + quicksort(right)
 
input_list = [5, 4, 3, 1, 2]
result = quicksort(input_list)
print(result)","def quicksort(nums):
    if len(nums) <= 1:
        return nums
 
    pivot = nums[len(nums) // 2]
    left = [x for x in nums if x < pivot]
    middle = [x for x in nums if x == p",Incomplete Answer,OOP
Solve this recursion problem in python.,"Problem: Given an array of integers, find the sum of its elements.

For example, if the array ar = [1, 2, 3], then 1 + 2 + 3 = 6.","def sum(arr):
    if not arr:
        return 0
    else:
        return arr[0] + sum(arr[1:])","def sum(arr):
    if not arr:
        return 0
    else:
        return arr[0] + sum(arr[1:])",correct,String Manipulation
Provide an approach to compare two strings in Python.,,"def compare_strings(str1, str2):
    if len(str1) != len(str2):
        return False
    else:
        for i in range(len(str1)):
            if str1[i] != str2[i]:
                return False
    return True","def compare_strings(str1, str2):
    if len(str1) != len(str2):
        return False
    else:
        f",Incomplete Answer,Recursion
Generate a Python program that will compare two strings and return 'True' or 'False'.,"('Apple', 'Orange')","def compare_strings(first, second):
    return first == second

result = compare_strings('Apple', 'Orange')
print (result)","def compare_strings(first, second):
    return first == secon",Incomplete Answer,Loops
Generate code for a linked list in Python,,"class ListNode(object):
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def print_linkedlist(self, head):
        while head.next != None:
            head = head.next
            print(head.val)","class ListNode(object):
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def print_linkedlist(self, head):
        while head.next != None:
            head = head.next
            print(head.val)",correct,String Manipulation
Write a Python program to read a list of integers from the user and find the smallest number.,"[12, 11, 7, 15]","list_of_numbers = input(""Please enter a list of numbers: "").split()
list_of_numbers = [int(x) for x in list_of_numbers] 

min_number = min(list_of_numbers)
print(""The smallest number is:"", min_number)","list_of_numbers = input(""Please enter a list of numbers: "").split()
list_of_numbers = [int(x) for x in list_of_numbers] 

min_number = min(list_of_numbers)
print(""The smallest number is:"", min_number)",correct,String Manipulation
Design a program in Python that finds the maximum of two numbers.,"number1 = 4
number2 = 6","def find_max(num1, num2):
  if num1 > num2:
    return num1
  else:
    return num2

max_num = find_max(number1, number2)
print(max_num)  # Outputs 6","def find_max(num1, num2):
  if num1 > num2:
    return num1
  else:
    return num2

max_num = find_max(number1, number2)
print(name, max_num)  # Outputs 6",Syntax Error,String Manipulation
Create a set of Python functions to manipulate strings: one to reverse a string and one to capitalize a string.,,"def reverseString(s): 
    return s[::-1] 
  
def capitalizeString(s):
    return s.capitalize()","def reverseString(s) 
    return s[-1] 
  
def capitalizeString(s)
    return s.capitalize()",Syntax Error,OOP
Generate a Python program to extract the domain name from a given URL.,"url = ""https://www.google.com""","import re

def extract_domain_name(url):
    pattern = r""([a-z0-9][a-z0-9\-]*?\.(com|org|net|edu|co))(\/|$)""
    result = re.search(pattern, url)
    return result[1]

print(extract_domain_name(url))","import re

def extract_domain_name(url):
    pattern = r""([a-z0-9][a-z0-9\-]*?\.(com|org|net|edu|co",Incomplete Answer,Loops
Write a Python program to convert a date string to the corresponding Unix timestamp.,"date_string = ""October 15, 2020""","import time 

def convert_to_timestamp(date_string): 
    return time.mktime(time.strptime(date_string, ""%B %d, %Y""))","import time 

def convert_to_timestamp(date_string): 
    return time.mktime(time.strptime(date_string, ""%B %d, %Y""))",correct,Loops
Write Python code to join two tables using a left join.,"Table A 
id name
1  AAA 
2  BBB 
3  CCC 

Table B 
id age
1  20
2  30
5  50","SELECT a.id, a.name, b.age
FROM TableA a LEFT JOIN TableB b
ON a.id = b.id;","SELECT a.id, a.name, b.age
FROM Table",Incomplete Answer,String Manipulation
"Write a Python program to store a list of books in a dictionary. Each book should include title, author, and number of pages.","['The Hobbit', 'J.R.R. Tolkien', 295], ['The Catcher in the Rye', 'J.D. Salinger', 223]","book_list = [
  {'title': 'The Hobbit', 'author': 'J.R.R. Tolkien', 'pages': 295},
  {'title': 'The Catcher in the Rye', 'author': 'J.D. Salinger', 'pages': 223},
]","book_list = [
  {'title': 'The Hobbit', 'author': 'J.R.R. Tolkien', 'pages': 295},
  {'title': 'The Catcher in the Rye', 'author': 'J.D. Salinger', 'pages': 223},
]",correct,OOP
Create a Python script to compute the average of a list of elements,"[1,4,7,3]","def average(l):
    total = 0
    for element in l:
        total += element
    return total / len(l)

l = [1,4,7,3]

print(average(l))","def average(l):
    total = 0
    for element in l:
        total += element
    return total / len(l)

l = [1,4,7,3]

print(average(l))",correct,Recursion
Develop a function in Python for analyzing a given text and generating a statistical report for finding the word frequencies in the text.,,"def generate_freq_report(text):
    words = {} # to store the word frequencies
    text = text.lower()
    text = text.replace('\n', ' ')
    text = text.split(' ')
    for word in text:
        if word in words:
            words[word] += 1
        else:
            words[word] = 1
    return words","def generate_freq_report(text):
    words = {} # to store the word frequencies
    text = text.lower()
    text = text.replace('\n', ' ')
    text = t",Incomplete Answer,Loops
Coding a classifier in Python to classify a given data set into four categories,Data set of 20 records with 4 numerical features,"import numpy as np
from sklearn.svm import SVC

# X represents the 20 records with 4 numerical features
X = np.array([[], [], [], ..., []])
# y represents the 4 categories 
y = np.array([1, 2, 3, 4])

# Create a svm classifier with linear kernel
classifier = SVC(kernel='linear', random_state=0)

# Fit the data
classifier.fit(X, y)","import numpy as np
from sklearn.svm import SVC

# X represents the 20 records with 4 numerical features
X = np.array([[], [], [], ..., []])
# y represents the 4 categories 
y = np.array([1, 2, 3, 4])

# Create a svm classifier with linear kernel
classifier = SVC(kernel='linear', random_state=0)

# Fit the data
classifier.fit(X, y)",Syntax Error,File I/O
Optimize the given Python code to use list comprehension.,"my_list = []
for value in range(10):
 my_list.append(value * 2)",my_list = [value * 2 for value in range(10)],my_list = [value * 2 f,Incomplete Answer,Loops
Construct a Python generator to yield all the permutations of a given list.,,"def permutations(items): 
    if len(items) <=1: 
        yield items 
    else: 
        for i in range(len(items)): 
            for p in permutations(items[:i] + items[i+1:]): 
                yield (items[i],)+p","def permutations(items) 
    if len(items) <=1 
        yield items 
    else 
        for i in range(len(items)) 
            for p in permutations(items[i] + items[i+1]) 
                yield (items[i],)+p",Syntax Error,String Manipulation
"Use pandas in Python to aggregate a given dataset with 4 columns (A, B, C, D) into a single column.","| A | B  | C | D |
|---|----|---|---|
| 0 | 34 | 2 | 6 |
| 1 | 21 | 9 | 0 |","import pandas as pd

data = [[0, 34, 2, 6], [1, 21, 9, 0]]
df = pd.DataFrame(data, columns = ['A', 'B', 'C', 'D'])

df['Aggregate'] = df.apply(lambda row: row.A + row.B + row.C + row.D, axis=1)

print(df)","import pandas as pd

data = [[0, 34, 2, 6], [1, 21, 9, 0]]
df = pd.DataFrame(data, columns = ['A', 'B', 'C', 'D'])

df['Aggregate'] = df.apply(lambda row: row.A + row.B + row.C + row.D, axis=1)

print(df)",correct,Loops
Write a function in Python that will take in a string and return the most commonly occurring character.,"Sample string: ""abrakadabra""","def max_char(s):
    chars = {}
    for c in s:
        chars[c] = chars.get(c, 0) + 1
    max_val = -1
    max_char = None
    for c, v in chars.items():
        if v > max_val:
            max_val = v
            max_char = c
    return max_char

print(max_char('abrakadabra'))

# Output: a (occurs 5 times)","def max_char(s):
    chars = {}
    for c in s:
        chars[c] = chars.get(c, 0) + 1
    max_val = -1
    max_char = None
    for c, v in chars.items():",Incomplete Answer,Recursion
Write a Python code to sort a dictionary based on the values.,,"def sort_dict_by_value(in_dict):
    """""" Function to sort a dictionary by it's values
    """"""
    return {k: v for k, v in sorted(in_dict.items(), key=lambda item: item[1])}","def sort_dict_by_value(in_dict):
    """""" Function to sort a dictionary by it's values
",Incomplete Answer,String Manipulation
"Generate a dynamic query for creating a new table named “employees” with 3 columns: “id”, “name”, and “salary” using a Python script.",,"query = 'CREATE TABLE employees (id INTEGER PRIMARY KEY, name VARCHAR(255), salary INTEGER)'","query = 'CREATE TABLE employees (id INTEGER PRIMARY KEY, name VARCHAR(255), salary INTEGER)'",correct,String Manipulation
Write a Python script to compute the area of the circle using its radius.,,"import math

def compute_area_of_the_circle(radius):
    return math.pi * (radius**2)","import math

def compute_area_of_the_circle(radius):
    return math.pi * (radius**2)",correct,Loops
Write a function to perform the concatenation of two string tuples.,,"def concatenate_strings(test_tup1, test_tup2):
  res = tuple(ele1 + ele2 for ele1, ele2 in zip(test_tup1, test_tup2))
  return (res) ","def concatenate_strings(test_tup1, test_tup2):
  res = tuple(ele1 + ele2 for ele1, ele2 in zip(test_tup1, test_tup2))
  return (res) ",correct,File I/O
Design a loop in Python that runs until the user enters q.,,"while True:
    user_input = input(""Please enter something or 'q' to exit: "")
    
    if user_input == 'q':
        break
    else:
        # Do something with the input","while True:
    user_input = input(""Please enter something or 'q' to exit: "")
    
    if user_input == 'q':
        break
    else:
        # Do something with the input",correct,Loops
"Write a script in Python that asks the user to input a sentence, then prints the sentence in reverse.",,"sentence = input(""Please enter a sentence: "")

rev_sentence = sentence[::-1]

print(rev_sentence)","sentence = input(""Please enter a sentence: "")

rev_sentence = sentence[::-1]

print(rev_sentence)",correct,String Manipulation
Create a function in Python that will return the most frequent value in a dataset.,"[0, 1, 6, 4, 4, 5, 0, 2, 8, 5, 6, 8, 0, 8]","def most_frequent(data):
    counts = dict()
    for i in data:
        if i in counts:
            counts[i] += 1
        else:
            counts[i] = 1
    max_value = max(counts.values())
    return [k for k, v in counts.items() if v == max_value]","def most_frequent(data):
    counts = dict()
    for i in data:
        if i in counts:
            counts[i] += 1
        else:
            counts[i] = 1
    max_value = max(counts.values())
    return [k for k, v in counts.items() if v == max_value]",correct,String Manipulation
Build a command line application in Python to flatten an array of elements.,"arr = [1, [], [2, [[3], [4, 2]], 5, [[[[[[[[[[]]]]]]]]]]]","def flatten(arr):
    result = []
 
    for item in arr:
        if isinstance(item, list):
            result.extend(flatten(item))
        else:
            result.append(item)
 
    return result
 
flattenedArr = flatten(arr)
print(flattenedArr)","def flatten(arr):
    result = []
 
    for item in arr:
        if isinstance(item, list):
            result.extend(flatte",Incomplete Answer,Loops
Write a function to compute the value of ncr mod p.,,"def nCr_mod_p(n, r, p): 
	if (r > n- r): 
		r = n - r 
	C = [0 for i in range(r + 1)] 
	C[0] = 1 
	for i in range(1, n + 1): 
		for j in range(min(i, r), 0, -1): 
			C[j] = (C[j] + C[j-1]) % p 
	return C[r] ","def nCr_mod_p(n, r, p) 
	if (r > n- r) 
		r = n - r 
	C = [0 for i in range(r + 1)] 
	C[0] = 1 
	for i in range(1, n + 1) 
		for j in range(min(i, r), 0, -1) 
			C[j] = (C[j] + C[j-1]) % p 
	return C[r] ",Syntax Error,OOP
Create a function in Python which takes three strings as parameters and concats them into one string.,,"def concat_strings(str1, str2, str3):
  return str1 + str2 + str3","def concat_strings(str1, str2, str3:
  return str1 + str2 + str3",Syntax Error,Loops
Write a python program to make all the characters of a string into lowercase.,,"def convert_to_lowercase(string): 
    lowercase_string = """" 
    for char in string: 
        lowercase_string += char.lower() 
    return lowercase_string","def convert_to_lowercase(string): 
    lowercase_string = """" 
    for char in string: 
        lowercase_string += char.lower() 
    return lowercase_string",correct,Recursion
"Compare two strings and print true if they are equal, false otherwise in Python.",,"a = ""test""
b = ""test""

if a == b:
  print(""true"")
else:
  print(""false"")","a = ""test""
b = ""test""

if a == b:
  print(""true"")
else:
  print(""false"")",Syntax Error,Recursion
Develop a python code to achieve the following goal,"A function to take a list of strings as input and generate a list of tuples, each containing string length and corresponding string.","def string_lengths(strings):
    lengths = []
    for string in strings:
        lengths.append( (len(string), string) ) 
    return lengths","def string_lengths(strings):
    lengths = []
    for string in string",Incomplete Answer,File I/O
Convert the given string into a standard format in Python.,"String: ""My name is John Doe""","string = ""My name is John Doe""
standard_string = string.title()
print(standard_string)
#My Name Is John Doe","string = ""My name is John Doe""
standard_string = stri",Incomplete Answer,String Manipulation
Create a python program that detects if a number is even or odd.,7,"def is_even_odd(num):
    if num % 2 == 0:
        return ""Even""
    else:
        return ""Odd""

result = is_even_odd(7)
print(result)","def is_even_odd(num):
    if num % 2 == 0:
        return ""Even""
  ",Incomplete Answer,OOP
Develop an algorithm in Python to replace all the vowels in a string with an asterisk.,string = “Hello World”,"string = “Hello World”

def replaceVowels(string):
    vowels = (""a"", ""e"", ""i"", ""o"", ""u"")
    result = """"
    for char in string:
        if char in vowels:
            result += ""*""
        else:
            result += char
    return result

new_string = replaceVowels(string)
print(new_string) # This will print out ""H*ll* W*rld""","string = “Hello World”

def replaceVowels(string):
    vowels = (""a"", ""e"", ""i"", ""o"", ""u"")
    result = """"
    for char in string:
        if char in vowels:
            result += ""*""
        else:
            result += char
    return result

new_string = replaceVowels(string)
print(new_string) # This will print out ""H*ll* W*rld""",correct,File I/O
Write a Python program to implement the Bubble Sort algorithm and sort a given list of integers.,"list = [4, 9, 5, 2, 7, 1]","def bubble_sort(list):
    is_sorted = False
    while not is_sorted:
        is_sorted = True
        for i in range(len(list)-1):
            if (list[i] > list[i+1]):
                list[i], list[i+1] = list[i+1], list[i]
                is_sorted = False
    return list","def bubble_sort(list):
    is_sorted = False
    while not is_sorted:
        is_sorted = True
        for i in range(len(list)-1):
     ",Incomplete Answer,String Manipulation
Create a function in Python that takes two inputs and returns their highest common factor.,,"def highest_common_factor(a, b):
    if a == 0 and b == 0:
        return 0
    if a > 0 and b > 0:
        while a != b:
            if a > b:
                a = a - b
            else:
                b = b - a
        return a","def highest_common_factor(a, b)
    if a == 0 and b == 0
        return 0
    if a > 0 and b > 0
        while a != b
            if a > b
                a = a - b
            else
                b = b - a
        return a",Syntax Error,String Manipulation
Implement a solution in Python to convert the given number to its binary representation.,155,"def convertToBinary(x): 
    return bin(x).replace(""0b"", """") 

x = 155
print(convertToBinary(x))","def convertToBinary(x): 
    return bin(x).replace(""0b"", """") 

x = 155
print(name, convertToBinary(x))",Syntax Error,File I/O
Create a class in Python that implements a method to convert a decimal to a binary number.,,"class DecimalToBinary:
  def __init__(self, num):
    self.num = num

  def convert(self):
    if self.num > 1:
      self.convert(self.num // 2)
    print(self.num % 2, end='')

number = DecimalToBinary(14)
number.convert()","class DecimalToBinary:
  def __init__(self, num):
    self.num = num

  def convert(self):
    if self.num > 1:
",Incomplete Answer,OOP
Optimize the Python code below to operate in linear time complexity.,,"# inefficient code
def find_duplicates(array):
  seen = set()
  duplicates = []
  for num in array:
    if num in seen:
      duplicates.append(num)
    seen.add(num)
  return duplicates
  
# optimized code
def find_duplicates_linear(array):
  duplicates = []
  seen = set()
  for num in array:
    if num not in seen:
      seen.add(num)
    else:
      duplicates.append(num)
  return duplicates","# inefficient code
def find_duplicates(array):
  seen = set()
  duplicates = []
  for num in array:
    if num in seen:
      duplicates.append(num)
    seen.add(num)
  return duplicates
  
# optimi",Incomplete Answer,File I/O
Create a Python program to evaluate the expression 3x^2 + 4x - 2.,x = 5,"def evaluate_expression(x):
    return 3*x**2 + 4*x - 2

x = 5
result = evaluate_expression(x)
print(result)","def evaluate_expression(x):
    return 3*x**2 + 4*x - 2

x = 5
result = evaluate_expression(x)
print(name, result)",Syntax Error,OOP
Develop a Python script that prints out the numbers from 0 to 9 in descending order?,,"for n in reversed(range(0,10)):
    print(n)","for n in reversed(range(0,10)):
    pritn(n)",Syntax Error,OOP
Generate a python program that accepts two numbers and prints their addition.,,"def add(x, y):
    print(x + y)

a = int(input(""Enter first number: ""))
b = int(input(""Enter second number: ""))
add(a, b)","def add(x, y):
    print(x + y)

a = int(input(""Enter first ",Incomplete Answer,String Manipulation
Develop a program in Python to compute the sum of integers in a given range?,,"def sum_range(start, end):
    total = 0
    for i in range(start,end + 1):
        total += i
    return total

# Test the function
print(sum_range(1, 10)) # Output: 55","def sum_range(start, end):
    total = 0
    for i in range(start,end + 1):
        total += i
    return total

# Test the function
print(sum_range(1, 10)) # Output: 55",correct,Loops
Build a Python program to tokenize a string into separate words.,"""Hello, World!""","def tokenize(string):
    words = string.split("" "")
    return words

tokenized_str = tokenize(""Hello, World!"")
print(tokenized_str)","def tokenize(string):
    words = string.split("" "")
    return wor",Incomplete Answer,String Manipulation
Write a Python program to print out the factorial of a number.,7,"def factorial(x):
    factorial = 1
    while x > 1:
        factorial = factorial * x
        x = x - 1
    return factorial

number = 7
result = factorial(number)
print(result)","def factorial(x):
    factorial = 1
    while x > 1:
        factorial = factorial * x
  ",Incomplete Answer,Loops
Write a Python program to detect if an array contains any duplicate elements.,"[3, 5, 8, 1, 2, 3]","def check_duplicates(arr):
    seen = set()
    
    for element in arr:
        if element in seen:
            return True
        else:
            seen.add(element)
    return False

arr = [3, 5, 8, 1, 2, 3]
result = check_duplicates(arr)
print(result)","def check_duplicates(arr):
    seen = set()
    
    for element in arr:
        if element in seen:
            return True
        else:
            seen.add(element)
    return False

arr = [3, 5, 8, 1, 2, 3]
result = check_duplicates(arr)
print(result)",correct,File I/O
Convert the following Python function to Java.,"def add_two_numbers(a, b):
    return a + b","public static int addTwoNumbers(int a, int b) {
    return a + b;
}",public static int addTwoNumbers(i,Incomplete Answer,String Manipulation
"Given a sentence, write a python program to return all the possible permutations of the words in the sentence.","sentence = ""the cat sat on the mat""","import itertools

def get_permutations(sentence):
    sentence_list = sentence.split("" "")
    return list(itertools.permutations(sentence_list))

if __name__ == '__main__':
    print(get_permutations(""the cat sat on the mat""))","import itertools

def get_permutations(sentence):
    sentence_list = sentence.split("" "")
    return list(itertoo",Incomplete Answer,String Manipulation
Rewrite the following python code using a lambda expression,"def function_name(x): 
    return x * 2",function_name = lambda x: x * 2,function_name = lambda x x * 2,Syntax Error,String Manipulation
Generate a complete Python script that prints out the prime numbers between two provided numbers.,"lowerBound = 20
upperBound = 32","# code to print out prime numbers between two provided numbers
def is_prime(num):
    if num < 2:
        return False
 
    for i in range(2, num):
        if num%i == 0:
            return False
 
    return True

lowerBound = 20
upperBound = 32
 
for i in range(lowerBound, upperBound + 1):
    if is_prime(i):
        print(i)","# code to print out prime numbers between two provided numbers
def is_prime(num):
    if num < 2:
        return False
 
    for i in range(2, num):
        if num%i == 0:
            return False
 
    return True

lowerBound = 20
upperBound = 32
 
for i in range(lowerBound, upperBound + 1):
    if is_prime(i):
        print(i)",correct,Loops
Write a python function to count the occurence of all elements of list in a tuple.,,"from collections import Counter 
def count_Occurrence(tup, lst): 
    count = 0
    for item in tup: 
        if item in lst: 
            count+= 1 
    return count  ","from collections import Counter 
def count_Occurrence(tup, lst): 
    count = 0
    ",Incomplete Answer,String Manipulation
Write a python program to evaluate the Euclidean distance between two lists of numbers,"list1 = [1, 2, 3] 
list2 = [4, 5, 6]","def euclidean_distance(list1, list2): 
    dist = 0.0
    for i in range(len(list1)): 
        dist += (list1[i] - list2[i]) ** 2 
    return (dist ** 0.5) 
  
list1 = [1, 2, 3] 
list2 = [4, 5, 6] 

print(""Euclidean distance between lists:"")
print(euclidean_distance(list1, list2))","def euclidean_distance(list1, list2): 
    dist = 0.0
    for i in range(len(list1)): 
        dist += (list1[i] - list2[i]) ** 2 
    retur",Incomplete Answer,File I/O
Create a Python algorithm that takes in an array of integers and prints out a sum of its elements.,"[3, 4, 5, 6]","def sum_array(arr):
    s = 0
    for i in arr:
        s += i
    return s","def sum_array(arr):
    s = 0
    for i in arr:
        s += i
    return s",correct,OOP
Write a function to count the most common character in a given string.,,"from collections import Counter 
def max_char(str1):
    temp = Counter(str1) 
    max_char = max(temp, key = temp.get)
    return max_char","from collections import Counter 
def max_char(str1):
    temp = Counter(str1) 
    max_char = max(temp, key = temp.get)
    return max_char",correct,Loops
Write a Python program to create a dictionary of the elements in a list and their frequency count.,"list = [3, 2, 3, 4, 5]","def frequency_dict(list):
    counts = {}
    for i in list:
        if i not in counts:
            counts[i] = 1
        else:
            counts[i] += 1
    return counts

print(frequency_dict(list))","def frequency_dict(list):
    counts = {}
    for i in list:
        if i not in counts:
            counts[i] = 1
        else:
            counts[i] += 1
    return counts

print(name, frequency_dict(list))",Syntax Error,String Manipulation
"Using the sample data, convert the provided string into a dictionary in Python.","Sample Data: ""Name: John Doe; Age: 23; Course: Data Science""","sample_data = ""Name: John Doe; Age: 23; Course: Data Science""

# Split the string by the "";"" character
data_items = sample_data.split(';')

# Strip any extra whitespace and split by the "":"" character
data_dict = {}
for item in data_items:
    key, value = item.strip().split(': ')
    data_dict[key] = value
    
print(data_dict)","sample_data = ""Name: John Doe; Age: 23; Course: Data Science""

# Split the string by the "";"" character
data_items = sample_data.split(';')

# Strip any extra whitespace and split by the "":"" character
data_dict = {}
for item in data_items:
    key, value = item.strip().split(': ')
    data_dict[key] = value
    
print(data_dict)",correct,OOP
Construct a for loop in Python to print all the values from a list of numbers.,"mylist = [1, 2, 3, 4, 5]","for x in mylist: 
  print(x)",for x in mylis,Incomplete Answer,OOP
"Design a class in Python that takes in one input, an integer, and prints out a multiplication table.",,"class MultiplicationTable: 
    def __init__(self, num): 
        self.num = num 
          
    def printTable(self):
        for i in range(1, 11): 
            print(self.num,""*"",i,""="",self.num * i)","class MultiplicationTable: 
def __init__(self, num): 
    self.num = num 
      
def printTable(self):
    for i in range(1, 11): 
        print(self.num,""*"",i,""="",self.num * i)",Syntax Error,OOP
Write a Python program to load the sklearn package.,,import sklearn,import ,Incomplete Answer,String Manipulation
Optimize a function written in Python that calculates the mean of a given sequence of numbers,"import numpy as np
sequence = np.array([1, 4, 6, 5, 9], dtype=np.float64)
def calculate_mean(sequence):
    sum = 0
    for number in sequence:
        sum += number
    return sum / len(sequence)","import numpy as np
sequence = np.array([1, 4, 6, 5, 9], dtype=np.float64)
def calculate_mean(sequence):
    return np.mean(sequence)","import numpy as np
sequence = np.array([1, 4, 6, 5, 9], dtype=np.f",Incomplete Answer,Loops
Write a Python script for combining two dictionaries.,"dict1 = { ""a"" : 1, ""b"" : 2 }
dict2 = { ""c"" : 3, ""d"" : 4 }","def combine_dicts(dict1, dict2): 
    new_dict = dict1.copy() 
    new_dict.update(dict2) 
    return new_dict 
  
dict1 = { ""a"" : 1, ""b"" : 2 }
dict2 = { ""c"" : 3, ""d"" : 4 }
  
print(combine_dicts(dict1, dict2))","def combine_dicts(dict1, dict2): 
    new_dict = dict1.copy() 
    new_dict.update(dict2) 
    return new",Incomplete Answer,Loops
Create a python script that compares two sets of input data (lists of numbers) and outputs the intersection set.,"set1 = [1, 2, 3, 4, 5]
set2 = [3, 4, 5, 6, 7]","def find_intersection(set1, set2):
 intersect_set = []
 for num in set1:
 if num in set2:
 intersect_set.append(num)
 return intersect_set

set1 = [1, 2, 3, 4, 5]
set2 = [3, 4, 5, 6, 7]

intersect_set = find_intersection(set1, set2)
print(intersect_set) # Output -> [3, 4, 5]","def find_intersection(set1, set2):
 intersect_set = []
 for num in set1:
 if num in set2:
 intersect_set.append(num)
 return intersect_set

set1 = [1, 2, 3, 4, 5]
set2 = [3, 4, 5, 6, 7]

intersect_set = find_intersection(set1, set2)
pritn(intersect_set) # Output -> [3, 4, 5]",Syntax Error,Loops
Develop a Python program to create a function to convert temperatures from Celsius to Fahrenheit.,,"def convert_celsius(celsius):
 # Convert celsius to Fahrenheit
 fahrenheit = celsius * 9/5 + 32

 # Return fahrenheit value
 return fahrenheit

# Test
celsius = 32
print(convert_celsius(celsius))","def convert_celsius(celsius):
 # Convert celsius to Fahrenheit
 fahrenheit = celsius * 9/5 + 32

",Incomplete Answer,Recursion
Write a python program to generate a Combinations of four numbers from a given list of N numbers,"numbers = [1, 4, 5, 6, 7]","def comb_four(nums): 
    result = [] 
    for i in range(len(nums)-3): 
        for j in range(i+1, len(nums)-2): 
            for k in range(j+1, len(nums)-1):
                for l in range(k+1, len(nums)): 
                    result.append([nums[i], nums[j], nums[k], nums[l]]) 
    return result","def comb_four(nums) 
    result = [] 
    for i in range(len(nums)-3) 
        for j in range(i+1, len(nums)-2) 
            for k in range(j+1, len(nums)-1)
                for l in range(k+1, len(nums)) 
                    result.append([nums[i], nums[j], nums[k], nums[l]]) 
    return result",Syntax Error,Recursion
"Create a Python program to convert a list into a dictionary, where the list elements become the dictionary key and its corresponding index becomes its value.",,"def list_to_dict(list): 
  dict = {} 
  for i in range(len(list)): 
    dict[list[i]] = i 
  return dict","def list_to_dict(list): 
  dict = {} 
  for i in ran",Incomplete Answer,File I/O
"Write a python program to count the total number of ""1""s present in a binary string",binary_string = '10101100110',"def count_ones(binary_string):
    count = 0
    for bit in binary_string:
        if bit == '1':
            count += 1
    return count","def count_ones(binary_string):
    count = 0
    for bit in binary_string:
        if bit == '1':
            count += 1
    return count",correct,File I/O
Design a function in Python to sort the given list of numbers in descending order.,"The given list of numbers is: [2, 4, 1, 6, 9, 8]","def descendingSort(nums):
    # sort list in reverse order
    nums.sort(reverse=True)
    return nums

print(descendingSort([2, 4, 1, 6, 9, 8]))","def descendingSort(nums):
    # sort list in reverse order
    nums.sort(reverse=True)
    return nums

print(descendingSort([2, 4, 1, 6, 9, 8]))",correct,Loops
Generate a python program to search input string s for a given substring t.,"s= ""This is a string"", t=""ring""","def find(s, t):
    if t in s:
        return s.index(t)
    else:
        return -1","def find(s, t):
    if t in s:
        return s.index(t)
    else:
        return -1",Syntax Error,String Manipulation
Design an algorithm in Python to solve the Fibonacci numbers problem.,,"def fib(n):
  # Base cases
  if n <= 0:
    return 0
  elif n == 1:
    return 1
  # Recursive case
  else:
    return fib(n-1) + fib(n-2)

# Generating Fibonacci numbers
for i in range(11):
  print(fib(i))","def fib(n):
  # Base cases
  if n <= 0:
    return 0
  elif n == 1:
    return 1
  # Recursive case
  e",Incomplete Answer,String Manipulation
Create a Python program to generate an encryption key.,,"import random

def generateEncryptionKey():
    key = """"
    for _ in range(32):
        key += str(random.randint(0,9))
    return key","import random

def generateEncryptionKey():
    key = """"
    for _ in range(32):
        key += str(random.randint(0,9))
    return key",correct,Recursion
Create a Python function to take two lists and return a list with the elements added together.,"list_a = [1, 4, 5]
list_b = [2, 3, 6]","def list_add(list_a, list_b):
  result = []

  for i in range(len(list_a)):
     result.append(list_a[i] + list_b[i])

  return result

result = list_add(list_a, list_b)
print(result)","def list_add(list_a, list_b:
  result = []

  for i in range(len(list_a:
     result.append(list_a[i] + list_b[i]

  return result

result = list_add(list_a, list_b
print(result",Syntax Error,Loops
Write a function to extract unique values from the given dictionary values.,,"def extract_unique(test_dict):
  res = list(sorted({ele for val in test_dict.values() for ele in val}))
  return res","def extract_unique(test_dict):
  res = list(sorted({ele fo",Incomplete Answer,File I/O
Produce a Python script to remove duplicate values from a list.,"[1, 2, 3, 2, 1]","def remove_duplicates(lst):
    unique_lst = []
    for i in lst:
        if i not in unique_lst:
            unique_lst.append(i)
    return unique_lst","def remove_duplicates(lst):
    unique_lst = []
    for i in lst:
        if i not in unique_lst:
            unique_lst.append(i)
    return unique_lst",correct,String Manipulation
Modify the following Python code to generate more random numbers.,"import random

x = random.randint(1, 10)","import random

x = random.randint(1, 10)
y = random.randint(1, 10)
z = random.randint(1, 10)","import random

x = random.randint(1, 10)
y = random.randint(1, 10)
z = random.randint(1, 10)",Syntax Error,Recursion
De-duplicate the given list using a dictionary in Python?,"[10, 20, 30, 10, 40, 20]","input_list = [10, 20, 30, 10, 40, 20]
unique_list = list(dict.fromkeys(input_list))
print(unique_list)","input_list = [10, 20, 30, 10, 40, 20]
unique_list = list(dict.fromkeys(input_list))
print(unique_list)",Syntax Error,String Manipulation
Create a program in Python that can extract data from an HTML page.,,"import requests
from bs4 import BeautifulSoup

# Get the specified URL
url = 'https://example.com/'
response = requests.get(url)

# Parse the response
soup = BeautifulSoup(response.text, 'html.parser')

# Extract the desired data
title = soup.find('title').text
body = soup.find('body').text

# Print the extracted data
print(title)
print(body)","import requests
from bs4 import BeautifulSoup

# Get the specified URL
url = 'https://example.com/'
response = requests.get(url

# Parse the response
soup = BeautifulSoup(response.text, 'html.parser'

# Extract the desired data
title = soup.find('title'.text
body = soup.find('body'.text

# Print the extracted data
print(title
print(body",Syntax Error,File I/O
What is the code for a Python function to calculate the factorial of a given integer?,,"def factorial(n): 
    fact = 1
    for i in range(2, n+1):
        fact *= i
    return fact","def factorial(n): 
    fact = 1
    for i in r",Incomplete Answer,OOP
Write a Python program to convert a given binary number to a decimal number.,101101,"binary = input(""Enter a binary number: "")
decimal = 0
for i in range(len(binary)):
    if binary[i] == '1': 
        decimal += 2**(len(binary) - i - 1)
print(""Decimal equivalent of the given binary number:"", decimal)","binary = input(""Enter a binary number: "")
decimal = 0
for i in range(len(binary)):
    if binary[i] == '1': 
        decimal += 2**(len(binary) - i - 1)
print(""Decimal equivalent of the given binary number:"", decimal)",correct,OOP
Develop a Python program to calculate the total area of a group of rectangles.,"[[3, 4], [6, 6], [1, 8]]","rectangles = [[3, 4], [6, 6], [1, 8]]

# calculate the total area
def calculateTotalArea(rectangles):
 total_area = 0
 for x, y in rectangles:
 total_area += x * y
 return total_area

total_area = calculateTotalArea(rectangles)
print(total_area) # 81","rectangles = [[3, 4], [6, 6], [1, 8]]

# calculate the total area
def calculateTotalArea(rectangles)
 total_area = 0
 for x, y in rectangles
 total_area += x * y
 return total_area

total_area = calculateTotalArea(rectangles)
print(total_area) # 81",Syntax Error,File I/O
Write a python method to identify whether the given string is a palindrome.,"String: ""racecar""","def is_palindrome(s):
  s = s.lower()
  return s == s[::-1]

print(is_palindrome(""racecar"")) # True","def is_palindrome(s:
  s = s.lower(
  return s == s[::-1]

print(is_palindrome(""racecar"" # True",Syntax Error,String Manipulation
Write a code to generate a two-dimensional array with zeros shapes in Python,"Row = 3, Column = 3","""""""
Write a code to generate a two-dimensional array with zeros shapes in Python
""""""

def generate_zeros_array(row,col):
    return [[0] * col for _ in range(row)]

# Example
row = 3
col = 3

array = generate_zeros_array(row, col)
print(array)
# Output: [[0, 0, 0], [0, 0, 0], [0, 0, 0]]","""""""
Write a code to generate a two-dimensional array with zeros shapes in Python
""""""

def generate_zeros_array(row,col):
    return [[0] * col ",Incomplete Answer,OOP
"Using regex, extend the following python code to remove whitespaces from a string.","def remove_spaces(user_string):
    '''This function will remove all the spaces from a string'''","def remove_spaces(user_string):
    '''This function will remove all the spaces from a string'''
    user_string = re.sub(r'\s','',user_string)
    return user_string","def remove_spaces(user_string):
    '''This function will remove all the spaces from a string'''
    user_string = re.sub(r'\s','',user_string)
    return user_string",correct,Recursion
Generate a program using Python to create a dictionary with 10 key-value pairs and then print the entire dictionary.,,"my_dict = {1:'one', 2:'two', 3:'three', 4:'four', 5:'five', 6:'six',
           7:'seven', 8:'eight', 9:'nine', 10:'ten'}

for key, value in my_dict.items():
   print(key, '->', value)","my_dict = {1'one', 2'two', 3'three', 4'four', 5'five', 6'six',
           7'seven', 8'eight', 9'nine', 10'ten'}

for key, value in my_dict.items()
   print(key, '->', value)",Syntax Error,String Manipulation
Write a Python program to find the n-th smallest number in the following list,"[2, 3, 5, 7, 11] n = 2","def nth_smallest(input_list, n):
    input_list.sort()
    return input_list[n-1]

input_list = [2, 3, 5, 7, 11]
n = 2
result = nth_smallest(input_list, n)
print(result)","def nth_smallest(input_list, n):
    input_list.sort()
    return input_list[n-1]

i",Incomplete Answer,Loops
Create a Python list comprehension to find the sum of even numbers from two given lists.,"[1, 2, 3, 4]
[9, 8, 7, 6]","even_nums_sum = [x + y for x in [1, 2, 3, 4] for y in [9, 8, 7, 6] if x % 2 == 0 and y % 2 == 0]
print(sum(even_nums_sum))","even_nums_sum = [x + y for x in [1, 2, 3, 4] for y in [9, 8, ",Incomplete Answer,Recursion
Create a Python script to print out 10 random values between 1 and 10.,,"import random

for i in range(10):
    print(random.randint(1, 10))","import random

for i in range(10):
    print(name, random.randint(1, 10))",Syntax Error,String Manipulation
Design a selection sort algorithm in Python.,,"def selection_sort(arr): 
    for i in range(len(arr)): 
  
        # Find the minimum element in remaining 
        # unsorted array 
        min_idx = i 
        for j in range(i+1, len(arr)): 
            if arr[min_idx] > arr[j]: 
                min_idx = j 
  
        # Swap the found minimum element with  
        # the first element         
        arr[i], arr[min_idx] = arr[min_idx], arr[i]","def selection_sort(arr): 
    for i in range(len(arr)): 
  
        # Find the minimum element in remaining 
        # unsorted array 
        min_idx = i 
        for j in range(i+1, len(arr)): 
     ",Incomplete Answer,Loops
Edit the following Python program to make a correct API request and parse the response.,"import requests

url = 'https://api.example.com/users'

response = requests.get(url)

print(response.json())","import requests

url = 'https://api.example.com/users'

headers = {
 'Authorization': 'Bearer YOUR_API_TOKEN',
 'Content-Type': 'application/json',
}

response = requests.get(url, headers=headers).json()

for user in response['data']:
 print(user)","import requests

url = 'https//api.example.com/users'

headers = {
 'Authorization' 'Bearer YOUR_API_TOKEN',
 'Content-Type' 'application/json',
}

response = requests.get(url, headers=headers).json()

for user in response['data']
 print(user)",Syntax Error,Loops
Optimize a given Python program using memoization.,"def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n-1) + fibonacci(n-2)","def fibonacci(n):
    # store the already calculated values in the dictionary
    memo = {0:0, 1:1}
    if n in memo:
        return memo[n]
    else:
        memo[n] = fibonacci(n-1) + fibonacci(n-2)
        return memo[n]","def fibonacci(n):
# store the already calculated values in the dictionary
memo = {0:0, 1:1}
if n in memo:
    return memo[n]
else:
    memo[n] = fibonacci(n-1) + fibonacci(n-2)
    return memo[n]",Syntax Error,File I/O
Write a Python program to convert a given binary form to its original string.,"b_string = ""0100100001100101011011000110110001101111""","def binary_to_string(b_string):
 s = """" 
 for i in range(0, len(b_string), 8):
 byte = b_string[i: i + 8]
 s += chr(int(byte, 2))
 return s

b_string = ""0100100001100101011011000110110001101111""
print(binary_to_string(b_string))
# Output: Hello","def binary_to_string(b_string):
 s = """" 
 for i in range(0, len(b_string), 8):
 byte = b_string[i: i + 8]
 s += chr(int(by",Incomplete Answer,Loops
Modify the existing Python code to generate a Fibonacci series.,"def generate_fibonacci_series(n):
    print(""0"")
    current = 0
    next = 1
    for i in range(0, n-1):
        current, next = next, current + next
        print(next)","def generate_fibonacci_series(n):
    print(""0"")
    current = 0
    next = 1
    for i in range(0, n):
        print(current)
        temp = current
        current = next
        next = temp + next","def generate_fibonacci_series(n:
    print(""0""
    current = 0
    next = 1
    for i in range(0, n:
        print(current
        temp = current
        current = next
        next = temp + next",Syntax Error,Loops
Create a function in Python that takes a string and an integer as arguments and returns the string with the integer number of characters removed from the front of the string.,"""Hello, World!"", 5","def remove_from_front(string, num_chars):
    return string[num_chars:]

result = remove_from_front(""Hello, World!"", 5)
print(result)","def remove_from_front(string, num_chars)
    return string[num_chars]

result = remove_from_front(""Hello, World!"", 5)
print(result)",Syntax Error,Recursion
Convert the given code from C++ to a Python program,"int data[5] == { 20, 15, 8, 44, 67};

for (i=0; i<5; i++){
    if (data[i] % 2 == 0){
        cout << data[i] << endl;
    }
}","data = [20, 15, 8, 44, 67]

for i in data:
    if i%2 == 0:
        print (i)","data = [20, 15, 8, 44, 67]

for i in data
    if i%2 == 0
        print (i)",Syntax Error,Recursion
Write a function to add consecutive numbers of a given list.,,"def add_consecutive_nums(nums):
    result = [b+a for a, b in zip(nums[:-1], nums[1:])]
    return result","def add_consecutive_nums(nums:
    result = [b+a for a, b in zip(nums[:-1], nums[1:]]
    return result",Syntax Error,File I/O
Design a program to find the nth term of the Fibonacci sequence for a given number n.,n = 10,"# Python 3 program to find the nth
# Fibonacci number
def Fibonacci(n):
    if n<0:
        print(""Incorrect input"")
    # First Fibonacci number is 0
    elif n==1:
        return 0
    # Second Fibonacci number is 1
    elif n==2:
        return 1
    else:
        return Fibonacci(n-1)+Fibonacci(n-2)
 
# Driver Program
print(Fibonacci(10))

# Output
34","# Python 3 program to find the nth
# Fibonacci number
def Fibonacci(n):
    if n<0:
        print(""Incorrect input"")
    # First Fibonacci number is 0
    elif n==1:
        retu",Incomplete Answer,Recursion
Generate a Python function that rearranges the characters of a string such that no character repeats consecutively.,,"def rearrange_chars(string):
    char_list = list(string)
    for i in range(len(char_list)):
        for j in range(i + 1, len(char_list)):
            if char_list[i] == char_list[j]:
                char_list.insert(j, '_')
    return """".join(char_list).replace('_', '')","def rearrange_chars(string):
    char_list = list(string)
    for i in range(len(char_list)):
        for j in range(i + 1, len(char_list)):
            if char_list[i] == char_list[j]:
                char_list.insert(j, '_')
    return """".join(char_list).replace('_', '')",Syntax Error,Loops
Build a Python program that takes two numbers as inputs and prints the summation of both numbers.,3 and 4,"# Python program to add two numbers 
  
# This function adds two numbers 
def add_two_numbers(num1, num2): 
    return num1 + num2 
  
# Take input from the user  
number1 = 3
number2 = 4

# Add two numbers
sum = add_two_numbers(number1, number2) 
  
# Print the sum
print(""Sum of the two numbers is:"", sum)","# Python program to add two numbers 
  
# This function adds two numbers 
def add_two_numbers(num1, num2): 
    return num1 + num2 
  
# Take input from the user  
number1 = 3
number2 = 4

# Add two numbers
sum = add_two_numbers(number1, number2) 
  
# Print the sum
print(""Sum of the two numbers is:"", sum)",correct,File I/O
Create a Python program to generate a random string of length 8 containing only alphabets and numbers.,,"import random
import string

def generate_string():
    chars = string.ascii_letters + string.digits
    string = ''.join(random.choice(chars) for _ in range(8))
    return string","import random
import string

def generate_string():
    chars = string.ascii_letters + string.digits
    string = ''.join(random.choice(chars) for _ in range(8))
    return string",correct,Loops
Create an auto-complete suggestion engine that takes in a prefix string and returns a set of valid words.,prefix = 'pyth',"def auto_complete(prefix):
    valid_words = []
    words_list = get_words_list()

    for word in words_list:
        if word.startswith(prefix):
            valid_words.append(word)
    return set(valid_words)

prefix = 'pyth'
print(auto_complete(prefix))
# Output: {'python', 'pythagorean', 'pythagoras', 'pythons'}","def auto_complete(prefix):
    valid_words = []
    words_list = get_words_list()

    for word in words_list:
        if word.startswith(prefix):
            valid_words.append(word)
    return set(valid_words)

prefix = 'pyth'
print(auto_complete(prefix))
# Output: {'python', 'pythagorean', 'pythagoras', 'pythons'}",correct,OOP
Write a Python program to determine whether or not a given string is a palindrome.,"""racecar""","def isPalindrome(s):

 # remove whitespaces
 s = ''.join(s.split())

 # reverse string
 rev = s[::-1]

 # compare
 if rev == s:
 return True
 return False

if isPalindrome(""racecar""):
 print('String is a palindrome')
else:
 print('String is not a palindrome')","def isPalindrome(s):

 # remove whitespaces
 s = ''.join(s.split())

 # reverse string
 rev = s[::-1]

 # compare
 if rev == s:
 ",Incomplete Answer,Recursion
Implement a linear search algorithm in Python to find the position of a given element in an array.,,"def linear_search(arr, element):
    for i in range(len(arr)):
        if arr[i] == element:
            return i
    return -1","def linear_search(arr, element):
    for i in range(len(arr)):
        if arr[i] == element:
            return i
    return -1",Syntax Error,String Manipulation
Write a Python program to count the number of digits in an integer.,number = 9923,"def count_digits(number):
    count = 0
    while (number != 0): 
        count=count+1
        number = number//10
    return count","def count_digits(number):
    count = 0
    while (number != 0): 
",Incomplete Answer,File I/O
Implement an algorithm in Python to remove duplicate elements from a given list.,"list = [1,4,4,4,5,5,5,6,7]","def removeDuplicates(list): 
    uniqueList = []  
    for item in list: 
        if item not in uniqueList: 
            uniqueList.append(item) 
    return uniqueList 

print(removeDuplicates([1,4,4,4,5,5,5,6,7]))","def removeDuplicates(list): 
    uniqueList = []  
    for item in list: 
        if item not in uniqueList",Incomplete Answer,Recursion
Create a Python program to reverse a list without using the reverse() method.,"[1, 2, 3, 4, 5]","def reverse_list(lst):
    reversed_list = []
    for i in range(len(lst)-1,-1, -1):
      reversed_list.append(lst[i])
    return reversed_list

print(reverse_list([1, 2, 3, 4, 5]))","def reverse_list(lst):
    reversed_list = []
    for i in range(len(lst)-1,-1, -1):
      reversed_list.append(lst[i])
    return reversed_list

print(reverse_list([1, 2, 3, 4, 5]))",correct,File I/O
Write a Python algorithm to implement Breadth First Search (BFS).,,"def bfs(graph, start):
    visited, queue = set(), [start]
    while queue:
        vertex = queue.pop(0)
        if vertex not in visited:
            visited.add(vertex)
            queue.extend(graph[vertex] - visited)
    return visited","def bfs(graph, start):
    visited, queue = set(), [start]
    while queue:
        vertex = queue.pop(0)
        if vertex not in visited:
            visited.add(vertex)
            queue.extend(graph[vertex] - visited)
    return visited",correct,String Manipulation
Write a Python program to divide two numbers and print the quotient and the remainder.,"Number1: 15
Number2: 4","def divide(num1, num2):
    quotient = num1 // num2
    remainder = num1 % num2
    return quotient, remainder

quotient, remainder = divide(15, 4)
print(""Quotient :"", quotient)
print(""Remainder :"", remainder)","def divide(num1, num2):
    quotient = num1 // num2
    remainder = num1 % num2
    return quotient, remainder

quotient, remainder = divide(15, 4)
print(""Quotient :"", quotient)
print(""Remainder :"", remainder)",correct,String Manipulation
Design a Python class to define a person.,,"class Person:

    def __init__(self, name, age, gender):
        self.name = name
        self.age = age
        self.gender = gender

    def get_name(self):
        return self.name

    def get_age(self):
        return self.age

    def get_gender(self):
        return self.gender","class Person:

    def __init__(self, name, age, gender):
        self.name = name
        self.age = age
        self.gender = gender

    def get_name(self):
        return self.name

    def get_age(self):
        return self.age

    def get_gender(self):
        return self.gender",correct,File I/O
Create a program in Python to calculate the median of a list of numbers.,,"def median_list(list_of_numbers):
    list_of_numbers.sort()
    length_list = len(list_of_numbers)

    if length_list % 2 == 0:
        return (list_of_numbers[length_list//2] + list_of_numbers[(length_list//2)-1])/2
    else:
        return list_of_numbers[length_list//2]","def median_list(list_of_numbers):
    list_of_numbers.sort()
    length_list = len(list_of_numbers)

    if length_list % 2 == 0:
        return (list_of_numbers[length_list//2] + list_of_numbers[(length_list//2)-1])/2
    else:
        return list_of_numbers[length_list//2]",correct,Loops
Compose a method in Python to separate a given string using a delimiter.,,"def split_str(string, delimeter): 
    return string.split(delimeter)","def split_str(string, delimeter): 
    return string.split(delimeter)",correct,Loops
Write a function to remove leading zeroes from an ip address.,,"import re
def removezero_ip(ip):
 string = re.sub('\.[0]*', '.', ip)
 return string","import re
def removezero_ip(ip):
 string = re.sub('\.[0]*', '.', ip)
 return string",correct,Loops
Create classes and objects in python to represent a shape and its properties.,,"class Shape:
    def __init__(self, type, area):
        self.type = type
        self.area = area
        
    def get_type(self):
        return self.type
    
    def get_area(self):
        return self.area
    
    def set_area(self, area):
        self.area = area

shape = Shape('Square', 10)
print(shape.get_type()) #outputs Square
print(shape.get_area()) #outputs 10","class Shape:
    def __init__(self, type, area):
        self.type = type
        self.area = area
        
    def get_type(self):
        return self.type
    
    def get_area(self):
 ",Incomplete Answer,OOP
Generate a python program to classify whether a number is divisible by 5 or not.,,"def is_divisible_by_five(number):
    # check if the number is divisible by 5
    if number % 5 == 0:
        return 'Divisible'
    else:
        return 'Not divisible'","def is_divisible_by_five(number:
    # check if the number is divisible by 5
    if number % 5 == 0:
        return 'Divisible'
    else:
        return 'Not divisible'",Syntax Error,File I/O
Write a python function to find sum of prime numbers between 1 to n.,,"def sum_Of_Primes(n): 
    prime = [True] * (n + 1)  
    p = 2
    while p * p <= n: 
        if prime[p] == True:  
            i = p * 2
            while i <= n: 
                prime[i] = False
                i += p 
        p += 1    
    sum = 0
    for i in range (2,n + 1): 
        if(prime[i]): 
            sum += i 
    return sum","def sum_Of_Primes(n): 
    prime = [True] * (n + 1)  
    p = 2
    while p * p <= n: 
        if prime[p] == True:  
            i = p * 2
            while i <= n: 
                prime[i] = False
                i += p 
        p += 1    
    sum = 0
    for i in range (2,n + 1): 
        if(prime[i]): 
            sum += i 
    return sum",correct,Recursion
Develop a program to print all unique strings from a given array of strings,"[""Hello"", ""World"", ""Hello"", ""Python""]","def unique_strings(strings):
    unique_strings = []
    for string in strings:
        if string not in unique_strings:
            unique_strings.append(string)
    return unique_strings

strings = [""Hello"", ""World"", ""Hello"", ""Python""]
result = unique_strings(strings)
print(result)","def unique_strings(strings)
    unique_strings = []
    for string in strings
        if string not in unique_strings
            unique_strings.append(string)
    return unique_strings

strings = [""Hello"", ""World"", ""Hello"", ""Python""]
result = unique_strings(strings)
print(result)",Syntax Error,OOP
Convert the following selection sort algorithm into a Python code.,"Selection Sort(arr)
  1  for i=1 to arr.length - 1
  2    min = i
  3    for j = i+1 to arr.length
  4      if arr[j] < arr[min]
  5        min = j
  6    swap(arr[i],arr[min])","def selection_sort(arr):
    for i in range(0, len(arr)-1):
        min = i
        for j in range(i+1, len(arr)):
            if arr[j] < arr[min]:
                min = j
        arr[i], arr[min] = arr[min], arr[i]","def selection_sort(arr):
    for i in range(0, len(arr)-1):
        min = i
        for j in range(i+1, len(",Incomplete Answer,Recursion
Convert a list of numbers into strings using Python.,"[5, 10, 15]","# Create an empty list of strings
number_strings = []

# Loops through the list of numbers
for n in [5, 10, 15]:
    # Appends a string version of the number to the list
    number_strings.append(str(n))

print(number_strings)   # ['5', '10', '15']","# Create an empty list of strings
number_strings = []

# Loops through the list of numbers
for n in [5, 10, 15]:
    # Appen",Incomplete Answer,Recursion
Write a Python program to convert an array of objects into an array of JSON string.,,"import json

def array_obj_to_json(arr):
    json_arr = []
    for obj in arr:
        json_arr.append(json.dumps(obj))
    return json_arr","import json

def array_obj_to_json(arr):
    json_arr = []
    for obj in arr:
        json_arr.append(json.dumps(obj))
    return json_arr",correct,String Manipulation
Create an algorithm in Python that takes an array of integers and `finds the pair that equals the given target.,"[1, 4, 8, 10], 14","def find_pair(arr, target): 
    for i in range(0, len(arr)): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == target: 
                return (arr[i], arr[j]) 

result = find_pair([1, 4, 8, 10], 14) 
print(result)","def find_pair(arr, target): 
    for i in range(0, len(arr)): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == target: 
                return (arr[i], arr[j]) 

result = find_pair([1, 4, 8, 10], 14) 
print(result)",correct,String Manipulation
Write a Python program to encrypt a plaintext using Advanced Encryption Standard (AES).,"Plaintext: ""This is a secret message""","from Crypto.Cipher import AES 

plaintext = ""This is a secret message""
key = b""Sixteen Byte Key""

cipher = AES.new(key, AES.MODE_ECB) 
encrypted_text = cipher.encrypt(plaintext.encode('utf-8')) 

print(encrypted_text.hex())

# Output
c3a40f3dce503efa1f00561d60e579b9","from Crypto.Cipher import AES 

plaintext = ""This is a secret message""
key = b""Sixteen Byte Key""

cipher = AES.new(key, AES.MODE_ECB 
encrypted_text = cipher.encrypt(plaintext.encode('utf-8' 

print(encrypted_text.hex(

# Output
c3a40f3dce503efa1f00561d60e579b9",Syntax Error,File I/O
Write a function to find the volume of a cylinder.,,"def volume_cylinder(r,h):
  volume=3.1415*r*r*h
  return volume","def volume_cylinder(r,h):
  volume=3.1415*r*r*h
  return volume",Syntax Error,Loops
Generate a program in Python to find the median of a list of numbers.,"[5, 8, 2, 7, 4]","def median(nums):
    nums.sort()
    length = len(nums)
 
    if length % 2 == 0:
        return (nums[length//2] + nums[(length//2)-1])/2.0
    else:
        return nums[length//2] 

list = [5, 8, 2, 7, 4]
med = median(list)
print('The median of the list is ' + str(med))","def median(nums):
    nums.sort()
    length = len(nums)
 
    if length % 2 == 0:
        return (nums[length//2] + nums[(length//2)-1])/2.0
    else:
        return nums[length//2] 

list = [5, 8, 2, 7, 4]
med = median(list)
print('The median of the list is ' + str(med))",correct,String Manipulation
Create a Python function that checks whether a given list contains any repeated elements.,,"def has_duplicates(arr): 
    # Create an empty set 
    s = set() 
  
    # Traverse through the list 
    for item in arr:
        # If the element is present 
        # in the set then it is a duplicate 
        if item in s:
            return True 
        else:
            s.add(item) 

    # No duplicate element found 
    return False","def has_duplicates(arr): 
    # Create an empty set 
    s = set() 
  
    # Traverse through the list 
    for item in arr:
        # If the element is present 
        # ",Incomplete Answer,String Manipulation
Write a function to convert an integer into a roman numeral.,,"def int_to_roman( num):
        val = [1000, 900, 500, 400,100, 90, 50, 40,10, 9, 5, 4,1]
        syb = [""M"", ""CM"", ""D"", ""CD"",""C"", ""XC"", ""L"", ""XL"",""X"", ""IX"", ""V"", ""IV"",""I""]
        roman_num = ''
        i = 0
        while  num > 0:
            for _ in range(num // val[i]):
                roman_num += syb[i]
                num -= val[i]
            i += 1
        return roman_num","def int_to_roman( num):
        val = [1000, 900, 500, 400,100, 90, 50, 40,10, 9, 5, 4,1]
        syb = [""M"", ""CM"", ""D"", ""CD"",""C"", ""XC"", ""L"", ""XL"",""X"", ""IX"", ""V"", ""IV"",""I""]
        roman_num = ''",Incomplete Answer,Recursion
Rewrite the following Java program in Python to calculate the area of the triangle.,"class Area { 
    double area(double b, double h) 
    { 
        return 0.5 * b * h; 
    } 
}","def area(b, h):
    return 0.5 * b * h","def area(b, h):
    return 0.5 * b * h",correct,String Manipulation
Construct a python dictionary containing student names and marks as key-value pairs.,,"student_marks = { 
    ""John"" : 90, 
    ""Levi"" : 85, 
    ""Jill"" : 95, 
    ""Sara"" : 75
}","student_marks = { 
    ""John"" : 90, 
    ""Levi"" : 85, 
    ""Jill"" : 95, 
    ""Sara"" : 75
}",correct,Loops
Create a Python program to fetch the data from a web page and store it into a dictionary.,,"import requests

url = ""https://example.com/data""

response = requests.get(url)
data = response.json()

data_dict = {}
for item in data:
    data_dict[item['id']] = item
    
print(data_dict)","import requests

url = ""https://example.com/data""

response = requests.get(url
data = response.json(

data_dict = {}
for item in data:
    data_dict[item['id']] = item
    
print(data_dict",Syntax Error,String Manipulation
"Using Python, create a program to classify numbers as positive, negative or zero according to user input",,"def classify(num):
 if num > 0:
 return ""positive""
 elif num < 0:
 return ""negative""
 else:
 return ""zero""

n = int(input(""Please enter a number: ""))
result = classify(n)
print(result) # Prints ""positive"" if n is positive, ""negative"" if n is negative and ""zero"" if n is zero","def classify(num):
 if num > 0:
 return ""positive""
 elif num < 0:
 return ""negative""
 else:
 return ""zero""

n = int(input(""Please enter a number: ""))
result = classify(n)
print(result) # Prints ""positive"" if n is positive, ""negative"" if n is negative and ""zero"" if n is zero",Syntax Error,OOP
"Create a Python program to calculate the cost of an order given the items ordered, the tax rate and the shipping cost.","items = [('apple', 0.5, 2), ('pear', 0.75, 5), ('orange', 1.2, 3)] 
tax rate = 0.2
shipping cost = 5","def calculate_cost(items, tax_rate, shipping_cost):
    total_cost = 0
    for item in items:
        total_cost += item[1] * item[2]
    
    total_cost *= (1 + tax_rate)
    total_cost += shipping_cost
    return total_cost","def calculate_cost(items, tax_rate, shipping_cost):
    total_cost = 0
    for item in items:
        total_cost += item[1] * item[2]
    
    total_cost *= (1 + tax_rate)
    total_cost += shipping_cost
    return total_cost",correct,OOP
Create a function in Python that takes two numbers as input and returns a dictionary with all the prime numbers between them.,8 and 20,"def prime_numbers(x, y):
 
 prime_nums = {}
 
 for i in range(x, y+1):
 if(i > 1):
 for j in range(2, i):
 if(i % j == 0):
 break
 else:
 prime_nums[i] = i
 
 return prime_nums
 
print(prime_numbers(8, 20))
# { 8: 8, 11: 11, 13: 13, 17: 17, 19: 19 }","def prime_numbers(x, y):
 
 prime_nums = {}
 
 for i in range(x, y+1):
 if(i > 1):
 for j in range(2, i):
 if(i % j == 0):
 break
 else:
 prime_nums[i] = i
 
 return prime_nums
 
print(name, prime_numbers(8, 20))
# { 8: 8, 11: 11, 13: 13, 17: 17, 19: 19 }",Syntax Error,String Manipulation
Implement a Python function to find the smallest element in an array,"[3, 5, 2, 1, 4]","def findSmallest(arr):
    smallest = arr[0]
    for i in arr:
        if i < smallest:
            smallest = i
    return smallest

findSmallest([3, 5, 2, 1, 4])
# Output: 1","def findSmallest(arr):
    smallest = arr[0]
    for i in arr:
        if i < smallest:
            smallest = i
    return smallest

findSmallest([3, 5, 2, 1, 4])
# Output: 1",correct,File I/O
Generate a Python script for setting up a basic web server for hosting static content.,,"#!/usr/bin/env python


import http.server

# Set the port number
port_number = 8080

# Create the HTTP server
server_address = ('', port_number)
httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)

print('Server started on port {}'.format(str(port_number)))

# Run the HTTP server
httpd.serve_forever()","#!/usr/bin/env python


import http.server

# Set the port number
port_number = 8080

# Create the HTTP server
server_address = ('', port_number)
httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)

print('Server started on port {}'.format(str(port_number)))

# Run the HTTP server
httpd.serve_forever()",correct,Loops
Write a Python program to find the number of days in a month using a given year and month.,,"import calendar

def days_in_month(year, month):
    return calendar.monthrange(year, month)[1]","import calendar

def days_in_month(year, month)",Incomplete Answer,File I/O
"Given an array of strings, write a program in Python to calculate the number of occurrences for each string.","['Hello', 'World', 'Hello', 'World', 'Foo', 'Bar']","words = ['Hello', 'World', 'Hello', 'World', 'Foo', 'Bar']

from collections import Counter
word_count = Counter(words)

for word, count in word_count.items():
 print(f'{word} : {count}')","words = ['Hello', 'World', 'Hello', 'World', 'Foo', 'Bar']

from collections import Counter
w",Incomplete Answer,String Manipulation
Write a Python program to print the following string pattern.,*__*__*,"for i in range(3):
    for j in range(3):
        if (i == j) or (i + j == 2):
            print('*', end="""")
        else:
            print('_', end="""")
    print()","for i in range(3):
    for j in range(3):
        if (i == j) or (i + j == 2):
            print(name, '*', end="""")
        else:
            print(name, '_', end="""")
    print(name, )",Syntax Error,File I/O
Construct an algorithm in Python to compute the maximum profit from selling a stock within a specific period of days.,"[8, 12, 4, 5, 7, 10, 9]","def max_profit(prices):
    min_price = float('inf') 
    max_profit = 0
    
    for price in prices:
        min_price = min(min_price, price)
        max_profit = max(max_profit, price - min_price)
        
    return max_profit

prices = [8, 12, 4, 5, 7, 10, 9]
print(max_profit(prices))","def max_profit(prices):
    min_price = float('inf') 
    max_profit = 0
    
    for price in prices:
        min_price = min(min_price, price)
",Incomplete Answer,String Manipulation
Write a Python program to convert a given string to one of its equivalent shell script command,"string = ""copy file1.txt file2.txt""","def string_to_shell_command(string):
    split_string = string.split()
    command_name = split_string[0]
    input_args = split_string[1:]
    command_args = ''
    for arg in input_args:
        command_args += f'""{arg}""' + ' '
    return f'{command_name} {command_args}'","def string_to_shell_command(string):
    split_string = string.split()
    command_name = split_string[0]
    input_args = split_string[1:]
    command_args = ''
    for arg in input_args:
        command_args += f'""{arg}""' + ' '
    return f'{command_name} {command_args}'",correct,File I/O
"Define 2 functions, one called prod() and the other called total(), using Python. prod() should return the product of two numbers, while total() should take a list of numbers as an argument and return the sum of all the numbers in the list.",,"def prod(a, b):
    return a*b

def total(mylist):
    sum = 0
    for num in mylist:
        sum += num
    return sum","def prod(a, b):
    return a*b

def total(mylist):
    sum ",Incomplete Answer,Loops
Create a Python program which takes in two integers and prints out the sum.,,"def compute_sum(x, y):
    return x + y

a = int(input(""Enter the first number: ""))
b = int(input(""Enter the second number: ""))

print(""The sum of the 2 numbers is:"", compute_sum(a, b))","def compute_sum(x, y):
    return x + y

a = int(input(""Enter the first number: ""))
b = int(input(""Enter the second number: ""))

print(""The sum of the 2 numbers is:"", compute_sum(a, b))",correct,File I/O
"Construct a Python class named Person which contains the instance variables name, age, and gender.",,"Class Person:
    def __init__(self,name,age,gender):
        self.name = name
        self.age = age
        self.gender = gender","Class Person:
    def __init__(self,name,age,gender):
        self.name = name
        self.age = age
        self.gender = gender",correct,OOP
Rewrite a given code snippet in Python using a list comprehension.,"my_list = []
for i in range(10):
 my_list.append(i ** 2)",my_list = [i ** 2 for i in range(10)],my_list = [i ** 2 for i in range(10)],Syntax Error,OOP
Write a class in python which implements the following stack data type with all necessary methods.,,"class Stack:
 def __init__(self):
 self.stack = []
 
 def push(self, item):
 self.stack.append(item)
 
 def pop(self):
 return self.stack.pop()
 
 def peek(self):
 return self.stack[-1]
 
 def is_empty(self):
 return self.stack == []
 
 def size(self):
 return len(self.stack)","class Stack:
 def __init__(self:
 self.stack = []
 
 def push(self, item:
 self.stack.append(item
 
 def pop(self:
 return self.stack.pop(
 
 def peek(self:
 return self.stack[-1]
 
 def is_empty(self:
 return self.stack == []
 
 def size(self:
 return len(self.stack",Syntax Error,File I/O
Create a python program that takes in a list of strings and returns a list of strings with all duplicates removed.,"[""a"", ""b"", ""c"", ""a"", ""b"", ""d""]","def remove_duplicates(lst):
    new_lst = []

    for item in lst:
        if item not in new_lst:
            new_lst.append(item)

    return new_lst

result = remove_duplicates([""a"", ""b"", ""c"", ""a"", ""b"", ""d""])
print(result)","def remove_duplicates(lst)
    new_lst = []

    for item in lst
        if item not in new_lst
            new_lst.append(item)

    return new_lst

result = remove_duplicates([""a"", ""b"", ""c"", ""a"", ""b"", ""d""])
print(result)",Syntax Error,OOP
Convert the following function from Python to Java.,"def generate_list(size):
    """"""Generate a list of integers from 0 to size - 1.""""""
    return [x for x in range(size)]","public List<Integer> generateList(int size) {
    /* Generate a list of integers from 0 to size - 1. */
    List<Integer> list = new ArrayList<>();
    for (int i = 0; i < size; i++) {
        list.add(i);
    }
    return list;
}","public List<Integer> generateList(int size) {
    /* Generate a list of integers from 0 to size - 1. */
    List<Integer> list = new ArrayList<>();
    for (int i = 0; i < size; i++) {
        list.add(i);
    }
    return list;
}",correct,String Manipulation
Design a program to validate a user's phone number in Python.,,"import re

def is_valid_phone_number(phone_number):
 pattern = re.compile(""^[0-9]{3}-[0-9]{3}-[0-9]{4}$"")
 match = pattern.match(phone_number)
 return bool(match)","import re

def is_valid_phone_number(phone_number)
 pattern = re.compile(""^[0-9]{3}-[0-9]{3}-[0-9]{4}$"")
 match = pattern.match(phone_number)
 return bool(match)",Syntax Error,Loops
Create an array containing the numbers from 1 to 10 using Python,,"array = [1,2,3,4,5,6,7,8,9,10]","array = [1,2,3,",Incomplete Answer,String Manipulation
Create a Python program to search a string and print the index of all instances of a specific character.,"string = ""abcdefghi""
character = ""d""","def search_character(string, character):
 indices = []
 for i in range(len(string)):
  if string[i] == character:
   indices.append(i)
 return indices

print(search_character(string, character)) # [3]","def search_character(string, character):
 indices = []
 for i in range(len(string)):
  if string[i] ",Incomplete Answer,Loops
Suggest a Python version of the following JavaScript code.,"function double(x) {
  return x * 2;
}","def double(x):
  return x * 2","def double(x):
  return x * 2",correct,OOP
Write a function in Python to compute the nth Fibonacci number.,8,"def fibonacciNum(n): 
    if n <= 1: 
        return n 
    else: 
        return (fibonacciNum(n-1) + fibonacciNum(n-2)) 

n = 8
result = fibonacciNum(n) 
print(result)","def fibonacciNum(n): 
    if n <= 1: 
        return n 
    else: 
        return (fibonacciNum(n-1) + fibonacciNum(n-2)) 

n = 8
result = fibonacciNum(n) 
print(result)",correct,File I/O
Create a script in Python to convert a given integer to its binary equivalent.,19,"def dec_to_bin(num): 
    if num > 1: 
        dec_to_bin(num // 2) 
    print(num % 2,end = '')

num = 19
dec_to_bin(num)","def dec_to_bin(num): 
    if num > 1: 
        dec_to_bin(num // 2) 
    print(num % 2,end = '')

num = 19
dec_to_bin(num)",correct,String Manipulation
Design a hash table in Python that can store a given key-value pair.,Key: apple; Value: red,"class HashTable:
 def __init__(self):
 self.table = {}

 def put(self, key, value):
 self.table[key] = value

 def get(self, key):
 return self.table[key]

# example
hash_table = HashTable()
hash_table.put('apple', 'red')
hash_table.get('apple') # returns 'red'","class HashTable:
 def __init__(self):
 self.table = {}

 def put(self, key, value):
 self.table[key] = value

 def get(self, key):
 return self.table[key]

# example
hash_table = HashTable()
hash_table.put('apple', 'red')
hash_table.get('apple') # returns 'red'",Syntax Error,String Manipulation
Identify a type of all the variables in the Python expression below.,n = 15.7,The variable n is a float.,The variable ,Incomplete Answer,Recursion
Write a python function to count positive numbers in a list.,,"def pos_count(list):
  pos_count= 0
  for num in list: 
    if num >= 0: 
      pos_count += 1
  return pos_count ","def pos_count(list:
  pos_count= 0
  for num in list: 
    if num >= 0: 
      pos_count += 1
  return pos_count ",Syntax Error,Recursion
Generate a python algorithm to predict the stock price for the given company.,Company: Tesla,"def predict_price(company):
    # Call an appropriate API
    company_data = request_api(company)
    # Use an appropriate ML algorithm
    model = build_model(company_data)
    # Get the prediction
    prediction = model.predict()
    return prediction","def predict_price(company)
    # Call an appropriate API
    company_data = request_api(company)
    # Use an appropriate ML algorithm
    model = build_model(company_data)
    # Get the prediction
    prediction = model.predict()
    return prediction",Syntax Error,File I/O
"Write a python program that takes in two strings, s1 and s2, and returns a Boolean based on if s1 is a substring of s2.","s1 = 'foo'
s2 = 'foobar'","def is_substring(s1, s2):
    return s1 in s2

substring = is_substring('foo', 'foobar')

print(substring) # Output: True","def is_substring(s1, s2):
    return s1 in s2

substring = is_substring('foo', 'foobar')

print(substring) # Output: True",correct,String Manipulation
Generate a Python decorator for calculating the time taken for a function to execute.,,"import time

def timeit(func):
 def wrapper(*args, **kwargs):
 start = time.time()
 result = func(*args, **kwargs)
 end = time.time()
 print(f""Time taken for {func.__name__}: {end-start} seconds"")
 return result
 return wrapper","import time

def timeit(func):
 def wrapper(*args, **kwargs):
 start = time.time()
 result = func(*args, **kwargs",Incomplete Answer,File I/O
Write a function to calculate the sum of series 1²+2²+3²+….+n².,,"def series_sum(number):
 total = 0
 total = (number * (number + 1) * (2 * number + 1)) / 6
 return total","def series_sum(number):
 total = 0
 total = (number * (number + 1) * (2 * number + 1)) / 6
 return total",correct,Loops
Optimize and refactor an existing Python function.,"Example function:
def factorial_recursive(n):
 if n == 0:
 return 1
 return n * factorial_recursive(n-1)","def factorial(n):
 if n == 0:
 return 1
 
 result = 1 
 while n > 0:
 result = result * n
 n = n - 1
 
 return result","def factorial(n):
 if n == 0:
 return 1
 
 result = 1 
 wh",Incomplete Answer,Recursion
"Create a Python script that when executed, prints out the sum of the first 10 even numbers.",,"sum = 0
for i in range(2,21,2): #Range(start,stop-1,step size)
 sum += i

print(sum)","sum = 0
for i in range(2,21,2): #Range(start,stop-1,step size)
 sum += i

print(sum)",correct,Recursion
"Write a Python program to check whether a given string starts with ""Hello"".",'Hello world!',"if 'Hello' in str1:
    print(""The string starts with 'Hello'"")
else:
    print(""The string does not start with 'Hello'"")","if 'Hello' in str1:
    print(""The string starts with 'Hello'"")
else:
    print(""The string does not start with 'Hello'"")",correct,Recursion
Generate an optimised Python program to calculate the greatest common divisor (GCD) of two positive integers.,,"def gcd(x, y): 
    if x == 0: 
        return y 
    return gcd(y % x, x) 
  
# Driver code 
a = 8
b = 4
print(""GCD of {0} and {1} is {2}"".format(a, b, gcd(a, b)))","def gcd(x, y): 
    if x == 0: 
        return y 
    return gcd(y % x, x) 
  
# D",Incomplete Answer,File I/O
Generate a function which implements a backwards for loop in Python.,,"def backwards_for_loop(n):
  for i in range(n, 0, -1):
    # Do something with i
    print(i)","def backwards_for_loop(n)
  for i in range(n, 0, -1)
    # Do something with i
    print(i)",Syntax Error,String Manipulation
Develop a Python code to print a string in reverse order.,"""Hello, World!""","str = ""Hello, World!""

# loop to iterate through string
for i in range(len(str)-1, -1, -1):
  print(str[i],end="""")

print()","str = ""Hello, World!""

# loop to iterate through string
for i in range(len(str)-1, -1, -1):
  print(str[i],end="""")

print()",Syntax Error,OOP
"Create a program in Python that given a list of integer inputs, sorts them in descending order.","list = [4, 9, 2, 6, 5]","list = [4, 9, 2, 6, 5]

# sort list in descending order
list.sort(reverse=True)

print(list) # [9, 6, 5, 4, 2]","list = [4, 9, 2, 6, 5]

# sort list in descending order",Incomplete Answer,File I/O
Write a Python program that can compare two lists of integers and identify any elements that appear in both lists.,,"def find_common_elements(list1, list2):
    common_elements = []

    for e1 in list1:
        for e2 in list2:
            if e1 == e2:
               common_elements.append(e1)

    return common_elements

list1 = [1, 2, 3, 4, 5]
list2 = [2, 4, 6, 8]

print(find_common_elements(list1, list2))","def find_common_elements(list1, list2):
    common_elements = []

    for e1 in list1:
        for e2 in list2:
            if e1 == e2:
               common_elements.append(e1)

    return common_elements

list1 = [1, 2, 3, 4, 5]
list2 = [2, 4, 6, 8]

print(name, find_common_elements(list1, list2))",Syntax Error,Recursion
Build a Python script for searching a given element in an array.,"[3, 10, 7, 12], element to search: 7","def searchElement(arr, x): 
  
    for i in range (len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1

arr = [3, 10, 7, 12] 
x = 7
index = searchElement(arr, x) 
if index != -1: 
    print(""Element"", x, ""found at index"", index )
else: 
    print(""Element not found"")","def searchElement(arr, x): 
  
    for i in range (len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1

arr = [3, 10, 7,",Incomplete Answer,OOP
Create a program in Python that counts the number of vowels in a given string.,,"def count_vowels(string):
 vowels = ['a', 'e', 'i', 'o', 'u']
 return sum(string.count(x) for x in vowels)","def count_vowels(string):
 vowels = ['a', 'e', 'i', 'o', 'u']
 return sum(string.count(x) for x in vowels)",correct,Recursion
Construct a python program to approximate the probability of an event happening,,"import random

def approximate_probability(event, iterations):
    num_occurences = 0
    for i in range(iterations):
        if event():
            num_occurences += 1
    return num_occurences / iterations","import random

def approximate_probability(event, iterations)
    num_occurences = 0
    for i in range(iterations)
        if event()
            num_occurences += 1
    return num_occurences / iterations",Syntax Error,Recursion
Generate a Python script that takes two numbers as arguments and returns the greatest common divisor.,21 and 15,"def gcd(a, b):
 if b == 0:
 return a
   
 return gcd(b, a % b)
 
a = 21
b = 15

print(gcd(a, b))","def gcd(a, b):
 if b == 0:
 return a
   
 return gcd(b, a % b)
 
a = 21
b = 15

print(name, gcd(a, b))",Syntax Error,Loops
Optimize this code in Python to increase its performance.,"def double_word(word):
    doubled_word = """"
    for char in word:
        doubled_word += char * 2
    return doubled_word","def double_word(word):
    doubled_word = """"
    for char in word:
        doubled_word += char + char
    return doubled_word","def double_word(word):
    doubled_word = """"
    for char in wo",Incomplete Answer,Loops
Create a Python script to generate 10 random passwords. The script should prompt the user to enter a length for the passwords.,,"import random
import string

def generate_password(length=8):
 password = ''.join(random.choice(string.ascii_letters + string.digits + string.punctuation) for i in range(length))
 return password

length = int(input('Please enter a length for the passwords (minimum 8 characters): '))
for i in range(10):
 print(generate_password(length))","import random
import string

def generate_password(length=8):
 password = ''.join(random.choice(string.ascii_letters + string.digits + string.punctuation) for i in range(length))
 return password

length = int(input('Please enter a length for the passwords (minimum 8 characters): '))
for i in range(10):
 print(generate_password(length))",correct,Loops
Write a Python program to print all combinations of three numbers from the given list.,"num_list = [1, 2, 3, 4]","import itertools 
  
# initializing list 
num_list = [1, 2, 3, 4] 
  
# printing all possible combinations 
result = itertools.combinations(num_list, 3) 
  
# printing the result 
print(""All possible combinations are : "") 
for item in result: 
    print(item)","import itertools 
  
# initializing list 
num_list = [1, 2, 3, 4] 
  
# printing all possible combinations 
result = itertools.co",Incomplete Answer,OOP
Construct an algorithm in Python to sort the characters of a string in alphabetical order.,,"def sort_string(string):
    # convert string to list
    chars = list(string)
    # sort the list 
    chars.sort()
    # return the sorted string
    return ''.join(chars)

sorted_string = sort_string('abzcdr')
print(sorted_string)","def sort_string(string):
    # convert string to list
    chars = list(string)
    # sort the list 
    chars.sort()
    # return the sorted string
    return ''.join(chars)

sorted_string = sort_string('abzcdr')
print(sorted_string)",correct,Loops
Implement a simple python program to split a string on a punctuation symbol.,"'Hello,World!'","def split_on_punctuation(s):
    #Using re module
    import re
    out = re.split('[,]',s)
    return out

print(split_on_punctuation('Hello,World!'))","def split_on_punctuation(s:
    #Using re module
    import re
    out = re.split('[,]',s
    return out

print(split_on_punctuation('Hello,World!'",Syntax Error,Loops
Design a Python script to compute the sum of prime numbers below 1000,,"def is_prime(num): 
    if num == 1: 
        return False
    elif num == 2: 
        return True
    else: 
        for n in range(2, num): 
            if (num % n == 0): 
                return False
        return True

sum = 0
for num in range(2, 1000):
    if is_prime(num): 
        sum += num 

print(""Sum of prime numbers below 1000:"", sum)","def is_prime(num): 
    if num == 1: 
        return False
    elif num == 2: 
        return True
    else: 
        for n in range(2, num): 
            if (num % n == 0): 
",Incomplete Answer,Loops
Develop a Python function to calculate the area of a rectangle given its length and width.,,"def calculate_rectangle_area(length, width):
    return length * width","def calculate_rectangle_area(length, width):
    return length * width",Syntax Error,Recursion
Write a python program that implements the following function:,"Given two sorted lists, return a merged sorted list.","def merge_sorted_lists(list1, list2):
    merged_list = []

    while list1 and list2:
        if list1[0] < list2[0]:
            merged_list.append(list1.pop(0))
        else:
            merged_list.append(list2.pop(0))

    merged_list += list1 + list2

    return merged_list","def merge_sorted_lists(list1, list2):
merged_list = []

while list1 and list2:
    if list1[0] < list2[0]:
        merged_list.append(list1.pop(0))
    else:
        merged_list.append(list2.pop(0))

merged_list += list1 + list2

return merged_list",Syntax Error,File I/O
Generate a Python program that accepts a user input and checks if the input is a valid email address.,,"import re

def is_valid_email(email):
  pattern = re.compile(r""[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+"")
  match = pattern.match(email)
  return match != None

user_input = input(""Enter your email address: "")
if is_valid_email(user_input):
  print(""Valid email address!"")
else:
  print(""Invalid email address!"")","import re

def is_valid_email(email)
  pattern = re.compile(r""[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+"")
  match = pattern.match(email)
  return match != None

user_input = input(""Enter your email address "")
if is_valid_email(user_input)
  print(""Valid email address!"")
else
  print(""Invalid email address!"")",Syntax Error,String Manipulation
Write the following into python code,"for i = 1 to 10
 print(i)","for i in range(1,11):
    print(i)","for i in range(1,11):
    print(name, i)",Syntax Error,String Manipulation
Write a Python program to accept a string input from the user and print each character in a list.,"String: ""Hello World""","user_input = input(""Enter a string: "")

char_list = []

for char in user_input:
 char_list.append(char)

print(char_list)","user_input = input(""Enter a string: "")

char_list = []

for ",Incomplete Answer,Loops
Create a function in Python to build an empty dictionary.,,"def buildDictionary():
  dictionary = dict()
  return dictionary","def buildDictionary():
  diction",Incomplete Answer,Recursion
Create a function in Python that takes in an array of integers and returns the odd numbers from that array.,"[1, 2, 3, 4, 5]","def get_odd_numbers(arr):
    # Create an empty list to store the odd numbers
    odd_numbers = []

    # Iterate through and check for odd numbers
    for num in arr:
        if num % 2 != 0:
            odd_numbers.append(num)
    
    return odd_numbers

arr = [1, 2, 3, 4, 5]

odd_numbers = get_odd_numbers(arr)

print('Odd numbers: ', odd_numbers)","def get_odd_numbers(arr)
    # Create an empty list to store the odd numbers
    odd_numbers = []

    # Iterate through and check for odd numbers
    for num in arr
        if num % 2 != 0
            odd_numbers.append(num)
    
    return odd_numbers

arr = [1, 2, 3, 4, 5]

odd_numbers = get_odd_numbers(arr)

print('Odd numbers ', odd_numbers)",Syntax Error,File I/O
Create a program in Python to sort a list of tuples (words and their frequency) in descending order.,"[(""hello"", 10), (""world"", 15), (""foo"", 8)]","def sortTuples(tuples):
    tuples.sort(key=lambda x: x[1],reverse=True)
    return tuples","def sortTuples(tuples):
    tuples.sort(key=l",Incomplete Answer,File I/O
"Construct a Python function to filter out all the words from a list that contains the letter ""a"".","['dog', 'cat', 'ant', 'tree', 'apple']","def filter_words_with_a(words):
 return [word for word in words if ""a"" in word]","def filter_words_with_a(words):
 return [word for word in words if ""a"" in word]",Syntax Error,File I/O
Create a Python program that calculates the sum of the digits of a European Union VAT number.,DE1905303456,"vat_number = ""DE1905303456""

vat_number_without_check_digit = vat_number[:-1]

sum = 0
for c in vat_number_without_check_digit:
 if c.isdigit():
 sum += int(c)

print(f'Sum of digits: {sum}')","vat_number = ""DE1905303456""

vat_number_without_check_digit = vat_number[:-1]

sum = 0
for c in",Incomplete Answer,Loops
Write a Python snippet to print the difference between the largest and smallest values in a given array.,"[1,2,3,4,5]","def diff_max_min(numbers):
    return max(numbers) - min(numbers)
  
if __name__ == '__main__':
    nums = [1,2,3,4,5]
    diff = diff_max_min(nums)
    print(diff)","def diff_max_min(numbers):
    return max(numbers) - min(numbers)
  
if __name__ == '__main__':
    nums = [1,2,3,4,5]
    diff = diff_max_min(nums)
    print(name, diff)",Syntax Error,Loops
"Develop a function in Python that takes a list of integers, computes the cumulative sum, and prints the result.","[1, 2, 3, 4, 5]","def cumulative_sum(lst):
    sum = 0
    for i in lst:
        sum += i
        print(sum)

cumulative_sum([1, 2, 3, 4, 5])","def cumulative_sum(lst):
    sum = 0
    for i in lst:
        sum += i
        print(name, sum)

cumulative_sum([1, 2, 3, 4, 5])",Syntax Error,Recursion
"Generate code in Python to accept student information like name, age, course and print it.","Name: John Doe
Age: 23
Course: Data Science","name = ""John Doe""
age = 23
course = ""Data Science""

print(""Name: "" + name)
print(""Age: "" + str(age))
print(""Course: "" + course)","name = ""John Doe""
age = 23
course = ""Data Science""

print(""Name",Incomplete Answer,File I/O
Write a python function to count number of substrings with the sum of digits equal to their length.,,"from collections import defaultdict
def count_Substrings(s,n):
    count,sum = 0,0
    mp = defaultdict(lambda : 0)
    mp[0] += 1
    for i in range(n):
        sum += ord(s[i]) - ord('0')
        count += mp[sum - (i + 1)]
        mp[sum - (i + 1)] += 1
    return count","from collections import defaultdict
def count_Substrings(s,n):
    count,sum = 0,0
    mp = defaultdict(lambda : 0)
    mp[0] += 1
    ",Incomplete Answer,String Manipulation
Write a Python program to implement a given sorting algorithm,"Array: [9, 8, 7, 6, 5, 4, 3, 2, 1]
Sorting Algorithm: Insertion Sort","def insertion_sort(arr):
    for i in range(1, len(arr)): 
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 

arr = [9, 8, 7, 6, 5, 4, 3, 2, 1]
insertion_sort(arr)","def insertion_sort(arr):
    for i in range(1, len(arr)): 
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 

arr = [9, 8, 7, 6, 5, 4, 3, 2, 1]
insertion_sort(arr)",correct,File I/O
Create a Python class to represent a time series data set.,,"class TimeSeries:
    def __init__(self, values):
        self.values = values
    
    def get_values(self):
        return self.values","class TimeSeries:
    def __init__(self, values):
        self.value",Incomplete Answer,OOP
Create an example of a two dimensional array in Python.,,"array_2d = [[1,2,3], [4,5,6], [7,8,9]]","array_2d = [[1,2,3], [4,5,6], [7,8,9]]",Syntax Error,OOP
Automate this Excel task using Python.,"abc,1
def,2
ghi,3
jkl,4","import pandas as pd

# Read data
df = pd.read_csv(""data.csv"")

# Perform tasks
df['result'] = df['column2'] + df['column2']

# Write the result
df.to_csv(""result.csv"", index=False)","import pandas as pd

# Read data
df = pd.read_csv(""data.csv"")

# Perform tasks
df['result'",Incomplete Answer,Loops
Construct a decision tree model using a given dataset using Python.,,"import numpy as np
import pandas as pd
from sklearn import tree

# Load the dataset
data = pd.read_csv(""data.csv"")

# Create target variable
target = data[""target""]

# Create feature variables
features = data.drop(columns = [""target""])

# Create decision tree model
model = tree.DecisionTreeClassifier()
model.fit(features, target)","import numpy as np
import pandas as pd
from sklearn import tree

# Load the dataset
data = pd.read_csv(""data.csv"")

# Create target variable
target = data[""target""]

# Create feature variables
features = data.drop(columns = [""target""])

# Create decision tree model
model = tree.DecisionTreeClassifier()
model.fit(features, target)",correct,Loops
Write a Python program that will replace all the numbers greater than 5 in an array with 0.,"arr = [1, 4, 6, 7, 8, 9]","def replace_numbers(arr):
 for i, num in enumerate(arr):
  if num > 5:
   arr[i] = 0

replace_numbers(arr)
print(arr) # [1, 4, 0, 0, 0, 0]","def replace_numbers(arr):
 for i, num in enumerate(arr):
  if num > 5:
   arr[i] = 0

replace_numbers(arr)
print(arr) # [1, 4, 0, 0, 0, 0]",correct,OOP
Write a function in python for finding a substring of a given string,"""Hello World"", ""lo Wo""","def find_substring(string, sub_string):
  indices = []
  for i in range(0, len(string)-len(sub_string)+1):
    if (string[i:i+len(sub_string)] == sub_string):
      indices.append(i)
  return indices

print(find_substring(""Hello World"", ""lo Wo""))","def find_substring(string, sub_string):
  indices = []
  for i in range(0, len(string)-len(sub_string)+1):
    if (string[i:i+len(sub_string)] == sub_string):
      indices.append(i)
  return indices

pritn(find_substring(""Hello World"", ""lo Wo""))",Syntax Error,File I/O
Write Python code to create an array of 10 numbers with random values between 1 and 100.,,"import random

arr = [random.randint(1, 100) for _ in range(10)]","import random

arr = [random.randint(1, 100) for _ in range(10)]",correct,OOP
Generate a python program that can predict the approximate square root of a given number.,,"def sqrt(x): 
    root = x 
    epsilon = 0.0001
    while abs(x - root * root) > epsilon:
        root = (x/root + root)/2
    return root","def sqrt(x): 
    root = x 
    epsilon = 0.0001
    while abs(x - root * root) > epsilon:
        root = (x/root + root)/2
    return root",Syntax Error,String Manipulation
Write a function to verify validity of a string of parentheses.,,"def is_valid_parenthese( str1):
        stack, pchar = [], {""("": "")"", ""{"": ""}"", ""["": ""]""}
        for parenthese in str1:
            if parenthese in pchar:
                stack.append(parenthese)
            elif len(stack) == 0 or pchar[stack.pop()] != parenthese:
                return False
        return len(stack) == 0","def is_valid_parenthese( str1):
        stack, pchar = [], {""("": "")"", ""{"": ""}"", ""["": ""]""}
        for parenthese in str1:
            if parenthese in pchar:
     ",Incomplete Answer,Recursion
"Create a Python program to grade a multiple choice test with 4 options for each question, and each correct answer is worth 3 points.","Example question:
What color is the sky?
A. Red B. White C. Yellow D. Blue

Correct Answer: D","def grade_test(questions):
    score = 0
    for question in questions:
        if question['answer'] == question['correct_answer']:
            score += 3
    return score","def grade_test(questions)
    score = 0
    for question in questions
        if question['answer'] == question['correct_answer']
            score += 3
    return score",Syntax Error,File I/O
Write a Python program to print even numbers from 0 to the number provided,N = 30,"def print_even_numbers(N):
    for x in range(0, N+1):
        if x%2 == 0:
            print(x)","def print_even_numbers(N)
    for x in range(0, N+1)
        if x%2 == 0
            print(x)",Syntax Error,Recursion
Write an IPv4 address verification function in Python.,192.168.0.1,"def check_valid_ip(ip_addr): 
    ip = ip_addr.split(""."") 
    if(len(ip) == 4 and 
        int(ip[0]) <= 255 and 
        int(ip[1]) <= 255 and 
        int(ip[2]) <= 255 and 
        int(ip[3]) <= 255): 
        return True
    else: 
        return False","def check_valid_ip(ip_addr): 
    ip = ip_addr.split(""."") 
    if(len(ip) == 4 and 
        int(ip[0]) <= 255 and 
        int(ip[1]) <= 255 and 
        int(ip[2]) <= 255 and 
        int(ip[3]) <= 255): 
        return True
    else: 
        return False",correct,File I/O
Write a Python program to remove an item from a dictionary based on its key.,,"def remove_from_dict(dictionary, key):
    if key in dictionary.keys():
        del dictionary[key]","def remove_from_dict(dictionary, key:
    if key in dictionary.keys(:
        del dictionary[key]",Syntax Error,Recursion
"Write a python script to calculate the sum of an array of integers, ignoring any negative numbers.","array = [-4, 1, 6, 2, -9, 5]","def sum_without_negatives(arr):
    total = 0
    for n in arr:
        if n >= 0:
            total += n
    return total

array = [-4, 1, 6, 2, -9, 5]
print(sum_without_negatives(array))","def sum_without_negatives(arr):
    total = 0
    for n in arr:
        if n >= 0:
           ",Incomplete Answer,Loops
Write a script in Python that creates a class with five methods.,,"class MyClass:
  def __init__(self):
    pass
    
  def foo(self, arg1, arg2):
    pass
    
  def bar(self, arg1, arg2, arg3):
    pass
    
  def fizz(self, arg1, arg2, arg3, arg4):
    pass
    
  def buzz(self, arg1, arg2, arg3, arg4, arg5):
    pass","class MyClass:
  def __init__(self):
    pass
    
  def foo(self, arg1, arg2):
    pass
    
  def bar(self, arg1, arg2, arg3)",Incomplete Answer,File I/O
Create an algorithm in Python that prints a multiplication table.,Number: 8,"for x in range(1, 11):
 for y in range(1, 11):
 print(str(x) + ""x"" + str(y) + ""="" + str(x * y))

print(""The multiplication table of 8:"")

for x in range(1, 11):
 print(str(x) + ""x"" + ""8"" + ""="" + str(x * 8))","for x in range(1, 11):
 for y in range(1, 11):
 print(str(x) + ""x"" + str(y) + ""="" + str(x * y))

print(",Incomplete Answer,OOP
Create a list comprehension in Python for finding the cube of first 10 even numbers.,,"cube_even_numbers = [num**3 for num in range(2, 21, 2)]","cube_even_numbers = [num**3 for num in range(2, 21, 2)]",Syntax Error,File I/O
Implement a Python program that solves the classic Towers of Hanoi problem.,,"def hanoi(n, from_tower, to_tower, aux_tower):
 if n == 1:
  print(f""Move disk 1 from {from_tower} to {to_tower}"")
  return

 hanoi(n - 1, from_tower, aux_tower, to_tower)
 print(f""Move disk {n} from {from_tower} to {to_tower}"")
 hanoi(n - 1, aux_tower, to_tower, from_tower)


num_disks = 4
hanoi(num_disks, 'Tower 1', 'Tower 2', 'Tower 3')","def hanoi(n, from_tower, to_tower, aux_tower):
 if n == 1:
  print(f""Move disk 1 from {from_tower} to {to_tower}"")
  return

 hanoi(n - 1, from_tower, aux_tower, to_tower)
 print(f""Move disk {n} from {from_tower} to {to_tower}"")
 hanoi(n - 1, aux_tower, to_tower, from_tower)


num_disks = 4
hanoi(num_disks, 'Tower 1', 'Tower 2', 'Tower 3')",correct,String Manipulation
Create a list comprehension expression for adding two lists in Python.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]",list3 = [list1[i] + list2[i] for i in range(len(list1))],list3 = [list1[i] + list2[i],Incomplete Answer,String Manipulation
Create a web crawler in Python to find all the hyperlinks in a given web page.,,"import requests
from bs4 import BeautifulSoup

def get_all_links(url):
    html_page = requests.get(url)
    soup = BeautifulSoup(html_page.content, 'html.parser')
    links = []
    for link in soup.findAll('a'):
        links.append(link.get('href'))
    return links 

print(get_all_links('http://example.com'))","import requests
from bs4 import BeautifulSoup

def get_all_links(url):
    html_page = requests.get(url)
    soup = BeautifulSoup(html_page.content, 'html.pa",Incomplete Answer,Loops
Rewrite the code snippet below in Python so that it takes advantage of list comprehension.,"items = [1, 2, 3, 4, 5]
new_items = []
for item in items:
    new_items.append(item**2)","items = [1, 2, 3, 4, 5]
new_items = [item**2 for item in items]","items = [1, 2, 3, 4, 5]
new_items = [item**2 for item in items]",correct,OOP
"Write a Python program to print a Fibonacci sequence with a length of n, where n is a given number that is equal to or greater than 0.",n = 5,"def fibonacci(n):
 # Base Case
 if n == 0: 
 return []
 elif n == 1: 
 return [0] 

 # Recursive Case
 else: 
 l = fibonacci(n-1) 
 l.append(l[-1]+l[-2]) 
 return l

# Driver Program 
n = 5
print(fibonacci(n)) 
# Output: [0, 1, 1, 2, 3]","def fibonacci(n):
 # Base Case
 if n == 0: 
 return []
 elif n == 1: 
 return [0] 

 # Recursive Case
 else: 
 l = fib",Incomplete Answer,File I/O
Write a Python program to list all months of the current year.,,"months = [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""]
for month in months:
    print(month)","months = [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""]
for month in months:
    print(month)",correct,File I/O
Develop a Python algorithm to find the maximum element in a given array.,"[1, 4, 6, 7, 3]","def find_max_element(arr):
    maxElement = arr[0]
    for val in arr:
        if val > maxElement:
            maxElement = val
    return maxElement","def find_max_element(arr:
    maxElement = arr[0]
    for val in arr:
        if val > maxElement:
            maxElement = val
    return maxElement",Syntax Error,Loops
Create a boolean filter in Python which returns true if the input is a two-letter word.,,"def two_letter_filter(word):
    if len(word) == 2:
        return True
    else:
        return False","def two_letter_filter(word)
    if len(word) == 2
        return True
    else
        return False",Syntax Error,Recursion
Design a python program to create a new pair of integers from a given pair,"Given a pair (1, 2), create a new pair (2, 3)","def create_pair(a,b):
    c = a+1
    d = b+1
    return (c, d)","def create_pair(a,b):
    c = a",Incomplete Answer,String Manipulation
Create a web scraper in Python to scrape the content from a website,Website URL: https://www.example.com,"import requests
from bs4 import BeautifulSoup

def scraper(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    for article in soup.find_all('article'):
        print(article.text)

if __name__ == ""__main__"":
    scraper(""https://www.example.com"")","import requests
from bs4 import BeautifulSoup

def scraper(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    for article in soup.find_all('article'):
        print(article.text)

if __name__ == ""__main__"":
    scraper(""https://www.example.com"")",correct,String Manipulation
Write a function to find out the second most repeated (or frequent) string in the given sequence.,,"from collections import Counter 
	
def second_frequent(input): 
	dict = Counter(input) 
	value = sorted(dict.values(), reverse=True)  
	second_large = value[1] 
	for (key, val) in dict.items(): 
		if val == second_large: 
			return (key) ","from collections import Counter 
	
def second_frequent(input): 
	dict = Counter(input) 
	value = sorted(dict.values(), reverse=True)  
	second_large = value[1] 
	for (key, val) in dict.items(): 
		if val == second_large: 
			return (key) ",correct,Recursion
"Convert the following code from Java to Python:

public class HelloWorld {
 public static void main(String[] args) {
 System.out.println(""Hello World"");
 }
}","public class HelloWorld { 
 public static void main(String[] args) {
 System.out.println(""Hello World"");
 }
}","def main():
 print(""Hello World"")

if __name__ == ""__main__"":
 main()","def main():
 print(""Hello World"")
",Incomplete Answer,OOP
Develop a Python program which takes two inputs and returns the minimum number that is evenly divisible by both numbers.,"Ex: 6, 12","def lcm(m, n):
    if m > n:
        greater = m
    else:
        greater = n

    while(True):
        if((greater % m == 0) and (greater % n == 0)):
            lcm = greater
            break
        greater += 1

    return lcm

M = 6
N = 12

lcm(M, N)","def lcm(m, n:
    if m > n:
        greater = m
    else:
        greater = n

    while(True:
        if((greater % m == 0 and (greater % n == 0:
            lcm = greater
            break
        greater += 1

    return lcm

M = 6
N = 12

lcm(M, N",Syntax Error,Loops
Create a Python program to compress a given data sequence.,"Data sequence: 9, -2, 6, 0, -7","def compress_sequence(nums):
    output = []
    temp = []

    for i in range(1, len(nums)):
        if nums[i-1] * nums[i] >= 0:
            temp.append(nums[i-1])
        else:
            temp.append(nums[i-1])
            output.append(temp)
            temp = []
    temp.append(nums[i])
    output.append(temp)

    return output

print(compress_sequence([9, -2, 6, 0, -7]))","def compress_sequence(nums):
    output = []
    temp = []

    for i in range(1, len(nums)):
        if nums[i-1] * nums[i] >= 0:
            temp.append(nums[i-1])
        else:
            temp.append(nums[i-1])
            output.append(temp)
            temp = []
    temp.append(nums[i])
    output.append(temp)

    return output

pritn(compress_sequence([9, -2, 6, 0, -7]))",Syntax Error,File I/O
Write a function to find perfect squares between two given numbers.,,"def perfect_squares(a, b):
    lists=[]
    for i in range (a,b+1):
        j = 1;
        while j*j <= i:
            if j*j == i:
                 lists.append(i)  
            j = j+1
        i = i+1
    return lists","def perfect_squares(a, b):
    lists=[]
    for i in range (a,b+1):
        j = 1;
        while j*j <= i:
            if j*j == i:
                 lists.append(i)  
            j = j+1
        i = i+1
    return lists",correct,Loops
Create a code to calculate the area of the triangle with given side lengths.,"a=3 
b=4
c=5","# Python Program to find the area of triangle
a = 3
b = 4
c = 5
# calculate the semi-perimeter
s = (a + b + c) / 2
# calculate the area
area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
print('The area of the triangle is %0.2f' %area)","# Python Program to find the area of triangle
a = 3
b = 4
c = 5
# calculate the semi-perimeter
s = (a + b + c) / 2
# calculate the area
area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
print('The area of the triangle is %0.2f' %area)",correct,Loops
"Input an array of numbers, and build a function in Python to replace all even numbers with 0.","[4, 10, 15, 20]","def replace_even(arr):
    for i in range(len(arr)):
        if arr[i] % 2 == 0:
            arr[i] = 0
    return arr

result = replace_even([4, 10, 15, 20])
print(result)","def replace_even(arr):
    for i in range(len(arr)):
        if arr[i] % 2 == 0:
            arr[i] = 0
    return arr

result = replace_even([4, 10, 15, 20])
print(result)",correct,String Manipulation
"Design a compressed data structure in Python that supports basic operations like insert, search and delete.",,"class CompressedDataStructure():
 def __init__(self):
  self.data = {}

 def insert(self,key,value):
  self.data[key] = value

 def search(self,key):
  if key in self.data:
   return self.data[key]
  else:
   raise KeyError

 def delete(self,key):
  del self.data[key]","class CompressedDataStructure():
 def __init__(self):
  self.data = {}

 def insert(self,key,value):
  self.data[key] = value

 def search(self,key):
  if key in self.data:
   return self.data[key]
  else:
   raise KeyError

 def delete(self,key):
  del self.data[key]",correct,String Manipulation
Optimize the following python code for a more efficient solution.,"def to_square(nums):
    squares = []
    for num in nums:
        squares.append(num * num)
    return squares","def to_square(nums):
    squares = [num * num for num in nums]
    return squares","def to_square(nums):
    squares = [num * num for num in nums]
    return squares",correct,OOP
"Write a function to find all three, four, five characters long words in the given string by using regex.",,"import re
def find_char(text):
  return (re.findall(r""\b\w{3,5}\b"", text))","import re
def find_char(text):
  return (re.findall(r""\b\w{3,5}\b"", text))",correct,Loops
Write a Python program to sum up the prime numbers below 100.,,"def sum_prime_numbers(limit):
  sum = 0
  for num in range(2, limit + 1):
    if all(num % i != 0 for i in range(2, num)):
      sum += num
  return sum

print(sum_prime_numbers(100))","def sum_prime_numbers(limit):
  sum = 0
  for num in range(2, limit + 1):
    if all(num % ",Incomplete Answer,String Manipulation
Create a Python package that can be used to capture screenshots of a browser window.,,"import pyautogui
import time

class Screenshot:
    def capture(self, browser, save_path):
        # take a screenshot of the browser
        im = pyautogui.screenshot(region=(0, 0, 1920, 1020))
        # save the screenshot
        im.save(save_path + str(time.time()) + '.png')
        # return the path of the image
        return save_path + str(time.time()) + '.png'","import pyautogui
import time

class Screenshot:
    def capture(self, browser, save_path):
        # take a screenshot of the browser
        im = pyautogui.screenshot(region=(0, 0, 192",Incomplete Answer,File I/O
Create a Python program to identify the most frequently occurring item in a list.,"[3,4,3,4,3]","def most_frequent(list): 
  return max(set(list), key = list.count)
  
most_frequent([3,4,3,4,3])","def most_frequent(list): 
  return max(set(list), key = list.count)
  
most_frequent([3,4,3,4,3])",Syntax Error,String Manipulation
Create a program in Python to generate prime numbers between 1 to N,N = 10,"def isPrime(n):
    i = 2
    while i*i <= n:
        if n % i == 0:
            return False
        i += 1    
    return True

def printPrimes(N):
    for i in range (2, N+1):
        if isPrime(i):
            print(i, end="" "")

printPrimes(10)","def isPrime(n):
    i = 2
    while i*i <= n:
        if n % i == 0:
            return False
        i += 1    
    return ",Incomplete Answer,String Manipulation
"Design a text editor in Python that prints ‘Corrected’ if a correct sentence is entered, and ‘Incorrect’ if an incorrect sentence is entered",,"def text_editor():
  sentence = input(""Enter the sentence: "")
  is_correct = check_correctness(sentence)
  
  if is_correct:
    print(""Corrected"")
  else:
    print(""Incorrect"")

def check_correctness(sentence):
  # code to check the correctness of the sentence

  return is_correct","def text_editor():
  sentence = input(""Enter the sentence: "")
  is_correct = check_correctness(sentence)
  
  if is_correct:
    print(""Corre",Incomplete Answer,File I/O
Create a Python REST API endpoint that accepts a POST request with data in JSON format and prints the data on the console.,,"from flask import Flask, request

app = Flask(name)

@app.route('/api', methods=['POST'])
def post_data():
 data = request.get_json()
 print(data)
 return 'Data printed in console'

if name == 'main':
 app.run(debug=True)","from flask import Flask, request

app = Flask(name)

@app.route('/api', methods=['POST'])
def post_data():
 da",Incomplete Answer,File I/O
"Create a Python script for a calculator that can add, subtract, multiply and divide two numbers.",,"def calculator(num1, num2, op):
    if op == ""+"":
        return num1 + num2
    elif op == ""-"":
        return num1 - num2
    elif op == ""*"":
        return num1 * num2
    elif op == ""/"":
        return num1 / num2
    else:
        raise Exception(""Invalid operator"")","def calculator(num1, num2, op):
    if op == ""+"":
        return num1 + num2
    elif op == ""-"":
        return num1 - num2
    elif op == ""*"":
        return num1 * num2
    elif op == ""/"":
        return num1 / num2
    else:
        raise Exception(""Invalid operator"")",Syntax Error,String Manipulation
Create a Python script that takes an input of two numbers and returns the pair in a list.,"10, 20","def pair(num_1, num_2):
 return [num_1, num_2]

print(pair(10, 20))","def pair(num_1, num_2):
 return [",Incomplete Answer,File I/O
Write a python function to find the element occurring odd number of times.,,"def get_Odd_Occurrence(arr,arr_size):   
    for i in range(0,arr_size): 
        count = 0
        for j in range(0,arr_size): 
            if arr[i] == arr[j]: 
                count+=1     
        if (count % 2 != 0): 
            return arr[i]     
    return -1","def get_Odd_Occurrence(arr,arr_size):   
    for i in range(0,arr_size): 
        count = 0
        for j in range(0,arr_size): 
            if arr[i] == arr[j]: 
                count+=1     
        if (count % 2 != 0): 
            return arr[i]     
    return -1",correct,File I/O
Create a function to perform list sorting using Python.,"list = [4, 5, 2, 1, 3]","def sortList(list):
    list.sort()
    return list

sortedList = sortList([4, 5, 2, 1, 3])
print(sortedList)","def sortList(list):
    list.sort()
    return list

s",Incomplete Answer,File I/O
Write a Python program to split a string on any whitespace.,"String to be split = ""Python is an interpreted language.""","def splitOnWhitespace(inputString):
	words = inputString.split()
	return words

stringToBeSplit = ""Python is an interpreted language.""
words = splitOnWhitespace(stringToBeSplit)
print(words) // Output: ['Python', 'is', 'an', 'interpreted', 'language.']","def splitOnWhitespace(inputString):
	words = inputString.split()
	return words

stringToBeSplit = ""Python is an interpreted la",Incomplete Answer,String Manipulation
Write a Python program to match a given pattern in a given string.,"String: ""ABCDDEFG"" 
Pattern: ""AB*EFG""","import re

string = ""ABCDDEFG""
pattern = ""AB*EFG""
match = re.search(pattern, string)
 
if match:
    print(""Pattern found!"")
else:
    print(""Pattern not found!"")","import re

string = ""ABCDDEFG""
pattern = ""AB*EFG""
match = re.search(pattern, string)
 
if match:
    pritn(""Pattern found!"")
else:
    pritn(""Pattern not found!"")",Syntax Error,OOP
Create a search engine in Python to search a collection of documents for a given keyword.,,"import string

def search(docs, key):
 results = []
 for doc in docs:
 words = doc.lower().translate(str.maketrans('', '', string.punctuation)).split()
 if key in words:
 results.append(doc)
 return results","import string

def search(docs, key):
 results = []
 for doc in docs:
 words = doc.lower().translate(str.maketrans('', '', string.punctuation)).split()
 if key in words:
 results.append(doc)
 return results",correct,File I/O
Construct a Python script to process a given json data-set.,,"import json

def process_json(data):
    result = {}
    for key, value in data.items():
        if type(value) == dict:
            result[key] = process_json(value)
        else:
            result[key] = value
    return result","import json

def process_json(data):
    result = {}
    for key, value in data.items():
        if type(value) == ",Incomplete Answer,File I/O
Design a node class to represent a single node in a linked list in Python,,"class Node:
    def __init__(self, data):
        self.data = data
        self.next = None","class Node:
    def __init__(self, data):
        self.data = data
        self.next = None",correct,Recursion
Create a function to print the even numbers in a given range using Python.,,"def printEvenNumbers(start, end):
    for i in range(start, end + 1):
        if (i % 2 == 0):
            print(i, end="" "")","def printEvenNumbers(start, end):
    for i in range(start, end + 1):
        if (i % 2 == 0):
            print(i, end="" "")",correct,Loops
Write a Python program to filter out strings longer than 15 characters from a list of strings.,"strings = ['good', 'very good', 'excellent', 'awesome', 'extremely awesome']","new_list = []
for string in strings:
 if len(string) <= 15:
 new_list.append(string)

print(new_list)  # prints ['good', 'very good', 'excellent', 'awesome']","new_list = []
for string in strings:
 if len(string) <= 15:
 new_list.append(string)

print(name, new_list)  # prints ['good', 'very good', 'excellent', 'awesome']",Syntax Error,String Manipulation
Write a python script to segregate a list of numbers into lists odd and even numbers.,"list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]","odd_numbers = []
even_numbers = []

for number in list_of_numbers:
    if number % 2 == 0:
        even_numbers.append(number)
    else:
        odd_numbers.append(number)

print(""Odd numbers: "" + str(odd_numbers))
print(""Even numbers: "" + str(even_numbers))","odd_numbers = []
even_numbers = []

for number in list_of_numbers:
    if number % 2 == 0:
        even_numbers.append(number)
    else:
        odd_numbers.append(number)

print(""Odd numbers: "" + str(odd_numbers))
print(""Even numbers: "" + str(even_numbers))",correct,Loops
Write a Python program that prints all unique pairs that sum up to a given number.,Number: 8,"def unique_pairs(number):
    pairs = set()
    for i in range(number + 1):
    	for j in range(number + 1):
            if i + j == number and (j, i) not in pairs:
                pairs.add((i, j))
    return pairs","def unique_pairs(number):
    pairs = set()
    for i in range(number + 1):
    	for j in range(number + 1):
            if i + j == number and (j, i) not in pairs:
                pairs.add((i, j))
    return pairs",correct,Loops
Edit the python code below to increase efficiency.,"arr = [24, 6, 15, 72, 5]
sum = 0

for i in range(5):
    if arr[i] % 2 == 0:
        sum += arr[i]","arr = [24, 6, 15, 72, 5]
sum = 0

for num in arr:
    if num % 2 == 0:
        sum += num","arr = [24, 6, 15, 72, 5]
sum = 0

for num in",Incomplete Answer,Loops
Write a Python script that finds the minimum sum of an array of integers.,"arr = [13, -2, 7, -6, 5]","def min_sum_array(arr):
 minimum = arr[0]
 total = 0

 for i in range (0, len(arr)):
  element = arr[i]
  if element < minimum:
   minimum = element
   total += element
 
 return total

arr = [13, -2, 7, -6, 5]
min_sum = min_sum_array(arr)
print(min_sum) # Output: -11","def min_sum_array(arr):
 minimum = arr[0]
 total = 0

 for i in range (0, len(arr)):
  element = arr[i]
  if element < minimum:
   minimum = element
   total += element
 
 return total

arr = [13, -2, 7, -6, 5]
min_sum = min_sum_array(arr)
print(min_sum) # Output: -11",correct,Loops
Design a program in Python to traverse a matrix.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","inputMatrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

#traversing the matrix
for row in inputMatrix:
    for column in row:
        print(column, end="" "")
    print()","inputMatrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

#traversing the matrix
for row ",Incomplete Answer,String Manipulation
Create a Python program to find the minimum number of steps required to make all array elements equal.,"arr = [2, 3, 6, 8]","def min_steps(arr):
    min_step = 0
    min_val = min(arr)
    for i in range(len(arr)):
        min_step += arr[i] - min_val 
    
    return min_step","def min_steps(arr):
    min_step = 0
    min_val = min(arr)
    for i in range(len(arr)):
        min_step += arr[i] - min_val 
    
    return min_step",correct,Recursion
Program a function in Python that takes an array and shuffles its elements.,,"import random

def shuffleArray(array):
    for i in range(len(array)):
        randomIdx = random.randint(0,len(array)-1)
        temp = array[i]
        array[i] = array[randomIdx]
        array[randomIdx] = temp
    return array","import random

def shuffleArray(array):
    for i in range(len(array)):
        randomIdx = random.randint(0,len(ar",Incomplete Answer,Loops
Modify an existing python script to count the number of words in a given sentence.,"sentence = ""One two three four five""","def count_words(sentence):
    words = sentence.split(' ')
    return len(words)

sentence = ""One two three four five""
word_count = count_words(sentence)
print(""The number of words in the sentence is: "", word_count)","def count_words(sentence):
    words = sentence.split(' ')
    return len(words)

sentence = ""One two three",Incomplete Answer,Loops
Create a Python program to multiply a matrix by its inverse.,"[[3, 4],
[2, 16]]","import numpy as np

def inverse_multiplication(matrix):
    inverseM = np.linalg.inv(matrix) 
    result = np.matmul(matrix, inverseM) 
    return result

matrix = [[3, 4],
          [2, 16]]

result = inverse_multiplication(matrix)
print(result)","import numpy as np

def inverse_multiplication(matrix):
    inverseM = np.linalg.inv(matrix) 
    result = np.matmul(matrix, inverseM) 
    return result

matrix = [[3, 4],
          [2, 16]]

result = inverse_multiplication(matrix)
print(result)",correct,File I/O
Create a function in Python which takes a user input and sorts it in ascending order.,"9,5,4,7","def my_function(values):
    sorted_values = sorted(values)
    return sorted_values

if __name__ == ""__main__"":
    values = [int(value) for value in input().split(',')]
    print(my_function(values))","def my_function(values):
    sorted_values = sorted(values)
    return sorted_values

if __name__ ==",Incomplete Answer,Recursion
Write a Python program to search a list of strings for a given string.,"list = [""dog"", ""cat"", ""bird""]
target = ""bird""","list = [""dog"", ""cat"", ""bird""]
target = ""bird""

for element in list:
    if element == target:
        print(""Target string found: {}"".format(target))
        break","list = [""dog"", ""cat"", ""bird""]
target = ""bird""

for element in list:
    if elemen",Incomplete Answer,String Manipulation
Write a python code to replace all the occurences of an element in a list with a given number.,"[1,2,3,3], 3, 0","def replace_elem_in_list(data, elem, val):
  return [val if x==elem else x for x in data]

print(replace_elem_in_list([1,2,3,3], 3, 0))
# Output: [1, 2, 0, 0]","def replace_elem_in_list(data, elem, val):
  return [val if x==elem else x for x in data]

print(replace_elem_in_list([1,2,3,3], 3, 0))
# Output: [1, 2, 0, 0]",Syntax Error,String Manipulation
Write a Python program to detect whether a given number is a palindrome.,middle,"def is_palindrome(n):
    n = str(n)
    return n == n[::-1]

print(is_palindrome(""middle""))","def is_palindrome(n):
    n = str(n)
    retur",Incomplete Answer,Loops
Write a python function to find k number of operations required to make all elements equal.,,"def min_Ops(arr,n,k): 
    max1 = max(arr) 
    res = 0
    for i in range(0,n):  
        if ((max1 - arr[i]) % k != 0): 
            return -1 
        else: 
            res += (max1 - arr[i]) / k 
    return int(res) ","def min_Ops(arr,n,k): 
    max1 = max(arr) 
    res = 0
    for i in range(0,n):  
        if ((max1 - arr[i])",Incomplete Answer,String Manipulation
Create a function in Python that takes two strings as parameters and returns true if one string is the reverse of the other.,,"def is_reverse(string1, string2):
    return string1[::-1] == string2","def is_reverse(string1, string2):
return string1[::-1] == string2",Syntax Error,OOP
Write a function to check if the given tuple has any none value or not.,,"def check_none(test_tup):
  res = any(map(lambda ele: ele is None, test_tup))
  return (res) ","def check_none(test_tup):
  res = any(map(lambda ele: ele is None, test_tup))
  return (res) ",correct,Loops
Create a Python script that takes a string as an input and outputs a list of words that all contain at least one vowel.,"""Hello my name is John""","['Hello', 'name', 'John']","['Hello', 'name', 'John']",correct,String Manipulation
Create a python code to find the intersection of two sets.,"{1,2,3,4,5} and {3,4,5,6,7}","# Create two sets
set1 = {1,2,3,4,5}
set2 = {3,4,5,6,7}

# Find the intersection
intersection = set1 & set2

# Print the result
print(intersection)","# Create two sets
set1 = {1,2,3,4,5}
set2 = {3,4,5,6,7}

# Find the intersection
intersection = set1 & set2

# Print the result
print(intersection)",correct,OOP
How can you make the given Python code more efficient?,"def calculate_sum(numbers):
    sum_val = 0
    for num in numbers:
        sum_val += num
    return sum_val","def calculate_sum(numbers):
    return sum(numbers)","def calculate_sum(numbers):
    return sum(numbers)",Syntax Error,String Manipulation
Write a function in Python to find out the longest word in a string,,"def longestWord(str):
    words = str.split()
    max_len = 0
    for word in words:
        if len(word) > max_len:
            max_len = len(word)
    for word in words:
        if len(word) == max_len:
            return word","def longestWord(str):
    words = str.split()
    max_len = 0
    for word in words:
        if len(word) > max_len:
            max_len = len(word)
    for word in words:
        if len(word) == max_len:
            return word",correct,String Manipulation
Create a function in Python that takes a list of strings and for each string appends the first letter to the end of the string.,"['cat', 'bird', 'rabbit']","def append_first_letter_end(list_of_strings):
 new_list_of_strings = []
 for string in list_of_strings:
 new_string = string + string[0]
 new_list_of_strings.append(new_string)
 return new_list_of_strings","def append_first_letter_end(list_of_strings:
 new_list_of_strings = []
 for string in list_of_strings:
 new_string = string + string[0]
 new_list_of_strings.append(new_string
 return new_list_of_strings",Syntax Error,String Manipulation
Create a Python script to generate a global unique identifier (GUID).,,"import uuid
 
# generate a GUID
guid = str(uuid.uuid4())
 
# print the GUID
print(guid)

// Output: 3c112f3d-3c68-4b4c-a85d-672622be9f25","import uuid
 
# generate a GUID
guid = str(uuid.uuid4())
 
# print the GUID
print(guid)

// Output: 3c112f3d-3c68-4b4c-a85d-672622be9f25",correct,Recursion
Write a python function to count characters at same position in a given string (lower and uppercase characters) as in english alphabet.,,"def count_char_position(str1): 
    count_chars = 0
    for i in range(len(str1)):
        if ((i == ord(str1[i]) - ord('A')) or 
            (i == ord(str1[i]) - ord('a'))): 
            count_chars += 1
    return count_chars ","def count_char_position(str1): 
    count_chars = 0
    for i in range(len(str1)):
        if ((i == ord(str1[i]) - ord('A')) or 
            (i == ord(str1[i]) - ord('a'))): 
            count_chars += 1
    return count_chars ",correct,Recursion
Write a Python code to find the nearest integer to a given number.,,"def nearest_integer(number):
 if number - int(number)>= 0.5:
 return int(number) + 1
 else:
 return int(number)","def nearest_integer(number):
 if number - int(number)>= 0.5:
 return int(number) + 1
 else:
 return int(number)",correct,Recursion
Write a function to remove everything except alphanumeric characters from a string.,,"import re
def remove_splchar(text): 
 pattern = re.compile('[\W_]+')
 return (pattern.sub('', text))","import re
def remove_splchar(text): 
 pattern = re.compile('[\W_]+')
 return (pattern.sub('', text))",correct,Loops
"Write a Python program to find the number of different ways to express n as the sum of 1, 3 and 4.",Number: 8,"def countWays(n):  
 if (n == 0): 
 return 1
 elif (n < 0): 
 return 0
 else: 
 return countWays(n-1) + countWays(n-3) + countWays(n-4)

n = 8
result = countWays(n)

print(""The number of different ways to express"", n, ""as the sum of 1, 3 and 4 is:"", result)","def countWays(n):  
 if (n == 0): 
 return 1
 elif (n < 0): 
 return 0
 else: 
 return countWays(n-1) + countWays(n-3) + countWays(n-4)

n = 8
result = countWays(n)

print(""The number of different ways to express"", n, ""as the sum of 1, 3 and 4 is:"", result)",correct,File I/O
Design a program in Python to filter a given array of integers and output only the even numbers.,"arr = [2, 7, 3, 4, 8, 9, 10]","def filterEvenNo(arr): 

  # return a list containing only even numbers
  return [num for num in arr if num % 2 == 0]","def filterEvenNo(arr): 

  # return a list containing only",Incomplete Answer,File I/O
Create a Python program to calculate the sum of all odd numbers between 1 and a given number.,,"def calculate_sum_of_odd_numbers(max_number):
    
    sum_of_odd_numbers = 0
    for num in range(1, max_number + 1):
        if num % 2 != 0:
            sum_of_odd_numbers += num
    return sum_of_odd_numbers

print(calculate_sum_of_odd_numbers(15))","def calculate_sum_of_odd_numbers(max_number):
    
    sum_of_odd_numbers = 0
    for num in range(1, max_number + 1):
       ",Incomplete Answer,OOP
Identify the bug in the following Python program and suggest an appropriate fix.,"def func1(list):
    s = 0
    for x in list:
        s+= x
    print(s)

func1([2, 3])","def func1(list):
    s = 0
    for x in list:
        s+= x
    return s

l = [2, 3]
result = func1(l)
print(result)","def func1(list):
    s = 0
    for x in list:
        s+= ",Incomplete Answer,Loops
Write a Python program to filter out the words of length greater than 5 from a given list of words,"['Hello', 'is', 'Python', 'Programming']","def filter_long_words(words):
  return [word for word in words if len(word) > 5]","def filter_long_words(words):
  return [",Incomplete Answer,Recursion
Construct a program to sort a given list in Python.,"list = [3, 7, 1, 4, 5]","def sort_list(list): 
    for i in range(len(list)-1): 
        for j in range(0, len(list)-i-1):
            if list[j] > list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j]
list = [3, 7, 1, 4, 5]
sort_list(list)
print(list)","def sort_list(list): 
    for i in range(len(list)-1): 
        for j in range(0, len(list)-i-1):
            if list[j] > list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j]
list = [3, 7, 1, 4, 5]
sort_list(list)
print(list)",correct,Loops
Create a python program which takes in a given list and finds the 3 most frequent elements in the list.,"[3, 7, 5, 6, 2, 1, 5, 6, 3, 9]","from collections import Counter

def find_most_frequent(lst): 
    counter = Counter(lst) 
    topthree = counter.most_common(3)
    return topthree

find_most_frequent([3, 7, 5, 6, 2, 1, 5, 6, 3, 9])","from collections import Counter

def find_most_frequent(lst): 
counter = Counter(lst) 
topthree = counter.most_common(3)
return topthree

find_most_frequent([3, 7, 5, 6, 2, 1, 5, 6, 3, 9])",Syntax Error,File I/O
Write a python function which will check if input string is palindrome or not.,"input_string = ""racecar""","def is_palindrome(input_string):
    if input_string == input_string[::-1]:
        return True
    else:
        return False
    
input_string = ""racecar""

check_palindrome = is_palindrome(input_string)

if check_palindrome == True:
    print(""Input string is a palindrome"")
else:
    print(""Input string is NOT a palindrome"")","def is_palindrome(input_string)
    if input_string == input_string[-1]
        return True
    else
        return False
    
input_string = ""racecar""

check_palindrome = is_palindrome(input_string)

if check_palindrome == True
    print(""Input string is a palindrome"")
else
    print(""Input string is NOT a palindrome"")",Syntax Error,File I/O
Modify a Python program to add a minimum value of 10 to each element in a list.,"list = [1, 2, 3, 4]","list = [x + 10 for x in [1, 2, 3, 4]]","list = [x + 10 for x in [1, 2, 3, 4]]",correct,Recursion
Compose python code that efficiently resolves the specified task:,Determine the greatest common divisor of two numbers.,"def gcd(x, y):
        while(y):
            x, y = y, x % y

        return x

# Driver Code 
num1, num2 = map(int, input().split())

print(gcd(num1, num2))","def gcd(x, y):
        while(y):
            x, y = y, x % y

        return x",Incomplete Answer,File I/O
Implement a class in Python to represent a rectangle with two fields: width and height.,,"class Rectangle:
    def __init__(self, width, height):
        self.width = width
        self.height = height
    
    def area(self):
        return self.width * self.height","class Rectangle
    def __init__(self, width, height)
        self.width = width
        self.height = height
    
    def area(self)
        return self.width * self.height",Syntax Error,String Manipulation
Create a Python script that takes in a user-specified temperature in Fahrenheit and prints out the corresponding temperature in Celsius.,,"def fahrenheit_to_celsius(temp_f):
 return (temp_f - 32) * 5 / 9

temp_f = float(input('Enter temperature in Fahrenheit:'))
temp_c = fahrenheit_to_celsius(temp_f)

print(f'{temp_f}F = {temp_c}C')","def fahrenheit_to_celsius(temp_f):
 return (temp_f - 32) * 5 / 9

temp_f = float(input('Enter tem",Incomplete Answer,String Manipulation
Edit an existing Python code so that it is more efficient and optimized for run time.,"def average(arr):
    sum = 0
    for num in arr:
        sum += num
    avg = float(sum) / len(arr)
    return avg","def average(arr):
    return sum(arr) / len(arr)","def average(arr):
    re",Incomplete Answer,Loops
Create a code snippet in Java to parse a comma-separated string into a list of strings.,"""Ruby,Python,JavaScript""","String str = ""Ruby,Python,JavaScript"";
List<String> list = Arrays.asList(str.split("",""));

// Output 
// [Ruby,Python,JavaScript]","String str = ""Ruby,Python,JavaScript"";
List<String> list = Arrays.asList(str.split("",""));

// Output 
// [Ruby,Python,JavaScript]",Syntax Error,Loops
Develop a process in Python to classify a set of data points into two categories.,"[1, 2, 3, 4, 5, 6, 7]","def classifier(data_points):
 categories = []
 for data_point in data_points:
 if data_point % 2 == 0:
 categories.append('even')
 else:
 categories.append('odd')
 return categories","def classifier(data_points)
 categories = []
 for data_point in data_points
 if data_point % 2 == 0
 categories.append('even')
 else
 categories.append('odd')
 return categories",Syntax Error,OOP
Create a Python class for parsing email addresses.,,"import re

class EmailParser:
 def __init__(self, email):
 self.email = email
 
 def parse_username(self):
 return re.search('(.*)@', self.email).group(1)
 
 def parse_domain(self):
 return re.search('@(.*)', self.email).group(1)

# Usage
parser = EmailParser(""john@example.com"")
print(parser.parse_username())
# john
print(parser.parse_domain())
# example.com","import re

class EmailParser:
 def __init__(self, email):
 self.email = email
 
 def parse_username(self):
 return re.search('(.*)@', self.email).group(1)
 
 def parse_domain(self)",Incomplete Answer,String Manipulation
Write a script to measure temperature from a device using python,"The device outputs an array of size 3, [Temp_C, Temp_F, Temp_K].","def measure_temperature(data):
    temp_c = data[0]
    temp_f = data[1]
    temp_k = data[2]
    return temp_c, temp_f, temp_k","def measure_temperature(data):
    temp_c = data[0]
    temp_f ",Incomplete Answer,File I/O
Generate a Python script for calculating the GCD and LCM of two numbers,,"# Function to calculate GCD and LCM of two numbers
def gcd_lcm(a, b): 
    if a > b:
        small = b
    else:
        small = a
    for i in range(1, small+1):
        if((a % i == 0) and (b % i == 0)): 
            gcd = i 
              
    lcm = int(a*b)/int(gcd) 
    return gcd, lcm

# Driver Code
a = 8
b = 12

gcd, lcm = gcd_lcm(a, b)
print(""GCD:"", gcd)
print(""LCM:"", lcm)","# Function to calculate GCD and LCM of two numbers
def gcd_lcm(a, b): 
    if a > b:
        small = b
    else:
        small = a
    for i in range(1, small+1):
        if((a % i == 0) and ",Incomplete Answer,String Manipulation
Create a algorithm in Python to convert any given number to binary form.,,"def toBinary(n): 
    if (n > 1): 
        toBinary(n//2) 
    print(n%2,end = '') 
 
# Driver Code 
num = 8
toBinary(num)","def toBinary(n): 
    if (n > 1): 
        toBinary(n//2) 
    print(n%2,end = '') 
 
# Driver Code 
num = 8
toBinary(num)",correct,File I/O
Construct a mini-search engine in Python using regular expressions.,,"import re

# Input text
text = ""This is my text and I am looking for a search term""

# Search term
search_term = ""search""

# Use regular expression to find search term
pattern = re.compile(search_term)
result = pattern.findall(text)

# Print result
print(result)","import re

# Input text
text = ""This is my text and I am looking for a search term""

# Search term
search_term = ""search""

# Use regular expression to find search term
pattern = re.compile(search_term)
result = pattern.findall(text)

# Print result
print(result)",Syntax Error,Loops
Create a program in Python to count the number of time a particular character appears in a given string.,"Input string: ""Hello, World!""
Character: ""l""","def count_char_in_string(string, char):
    count = 0
    for i in range(len(string)):
        if string[i] == char:
            count += 1
    return count

string = ""Hello, World!""
char = ""l""
count = count_char_in_string(string, char)
print(""The number of times"", char, ""appears in the string is:"", count)","def count_char_in_string(string, char):
    count = 0
    for i in range(len(string)):
        if string[i] == char:
            count += 1
    return co",Incomplete Answer,String Manipulation
Create a Python class that implements a queue data structure.,,"class Queue:
    def __init__(self):
        self.items = []
 
    def isEmpty(self):
        return self.items == []
 
    def enqueue(self, item):
        self.items.insert(0,item)
 
    def dequeue(self):
        return self.items.pop()
 
    def size(self):
        return len(self.items)","class Queue:
    def __init__(self):
        self.items = []
 
    def isEmpty(self):
        return self.items == []
 
    def enqueue(self, item):
        self.items.insert(0,item)
 
    def dequeue(self):
        return self.items.pop()
 
    def size(self):
        return len(self.items)",correct,File I/O
Write a function to find the nth nonagonal number.,,"def is_nonagonal(n): 
	return int(n * (7 * n - 5) / 2) ","def is_nonagonal(n): 
	retu",Incomplete Answer,Recursion
"Given a number, write a Python program to print the multiplication table of that number.",Number: 5,"for i in range(1, 11):
 print(5, 'X', i, '=', 5*i)","for i in range(1, 11):
 p",Incomplete Answer,File I/O
Modify the following Python code to remove the duplicate elements from the list,"L = [1, 2, 2, 3, 4, 4]","L = [1, 2, 2, 3, 4, 4] 

L = list(set(L)) 

print(L)","L = [1, 2, 2, 3, 4, 4] 

L = list(set(L)) 

print(name, L)",Syntax Error,File I/O
Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.,,"def find_length(string, n): 
	current_sum = 0
	max_sum = 0
	for i in range(n): 
		current_sum += (1 if string[i] == '0' else -1) 
		if current_sum < 0: 
			current_sum = 0
		max_sum = max(current_sum, max_sum) 
	return max_sum if max_sum else 0","def find_length(string, n): 
	current_sum = 0
	max_sum = 0
	for i in range(n): 
		current_sum += (1 if string[i] == '0' else -1) 
		if current_sum < 0: 
			current_sum = 0
		max_sum = max(current_sum, max_sum) 
	return max_sum if max_sum else 0",Syntax Error,File I/O
Generate a CPython code for reversing a given list of numbers.,"[1,2,3,4]","def reverse_list(nums):
  return nums[::-1]","def reverse_list(nums):
  return nums[::-1]",correct,OOP
Create a program in Python to sort a given list of words alphabetically,"words=[“Computer”, “Science”, “Engineering”, “Technology”]","def sort_words(words):
    words.sort()
    return words

words = [""Computer"", ""Science"", ""Engineering"", ""Technology""]
sorted_words = sort_words(words)
print(sorted_words) # Output: ['Computer', 'Engineering', 'Science', 'Technology']","def sort_words(words):
    words.sort()
    return words

words = [""Computer"", ""Science"", ""Engineering"", ""Technology""]
sorted_words = sort_words(words)
print(name, sorted_words) # Output: ['Computer', 'Engineering', 'Science', 'Technology']",Syntax Error,OOP
Write a Python program to find the common elements between two given lists.,"[1, 2, 3], [2, 3, 4]","def find_common_elements(list1, list2):
    common = [x for x in list1 if x in list2]
    return common","def find_common_elements(list1, list2):
    common ",Incomplete Answer,File I/O
Generate a list of prime numbers up to a given number using a Python program.,number = 50,"def prime_numbers (number):
    prime_list = []
    for num in range(2, number + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.append(num)
    return prime_list

number = 50
print(prime_numbers(number))","def prime_numbers (number):
    prime_list = []
    for num in range(2, number + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.append(num)
    return prime_list

number = 50
print(prime_numbers(number))",correct,OOP
Write a function to find the third side of a right angled triangle.,,"import math
def otherside_rightangle(w,h):
  s=math.sqrt((w*w)+(h*h))
  return s","import math
def otherside_rightangle(w,h",Incomplete Answer,OOP
Generate a Python program for reversing a string.,"string = ""Hello World""","string = ""Hello World""

# get length of the string
length = len(string)

# create an empty string
reverse = """"

# loop backword through the string
for i in range(length-1, -1, -1):
 # add current character to empty string
 reverse = reverse + string[i]

# print out the result
print(reverse)","string = ""Hello World""

# get length of the string
length = len(string)

# create an empty string
reverse = """"

# loop backword through the string
for i in range(length-1, -1, -1):
 # add current character to empty string
 reverse = reverse + string[i]

# print out the result
print(reverse)",correct,File I/O
Create a Python program to compare two lists and return the common elements between them.,"[1, 2, 3, 4], [2, 3, 4, 5]","def compare_lists(list1, list2):
 common_elements = []
 for element in list1:
 if element in list2:
 common_elements.append(element)
 return common_elements

list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]
print(compare_lists(list1, list2))","def compare_lists(list1, list2):
 common_elements = []
 for element in list1:
 if element in list2:
 common_elements.append(element)
 return common_elements

list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]
print(compare_lists(list1, list2))",correct,String Manipulation
Develop a program in Python to extract the substring between two given strings,"input_string = ""This is an example string""
start_string = ""an""
end_string = ""string""","import re

input_string = ""This is an example string""
start_string = ""an""
end_string = ""string""

 regex = re.compile(start_string + '(.*?)' + end_string)
result = re.search(regex, input_string) 
if result: 
    print(result.group(1))","import re

input_string = ""This is an example string""
start_string = ""an""
end_string = ""string""

 regex = re.compile",Incomplete Answer,File I/O
Develop a Python program to detect if an entered number is even or odd.,The entered number is 344,"even_or_odd = int(input(""Please enter a number: ""))
if even_or_odd % 2 == 0:
  print(""The number is Even."")
else:
  print(""The number is Odd."")","even_or_odd = int(input(""Please enter a number ""))
if even_or_odd % 2 == 0
  print(""The number is Even."")
else
  print(""The number is Odd."")",Syntax Error,Loops
Generate an algorithm in Python to convert the given temperature from Fahrenheit to Celsius.,Fahrenheit= 32,"def Fahrenheit_to_Celsius(Fahrenheit):
    Celsius = (Fahrenheit - 32) * 5/9
    return Celsius
  
Fahrenheit = 32
Celsius = Fahrenheit_to_Celsius(Fahrenheit)
print(""Celsius:"",Celsius)","def Fahrenheit_to_Celsius(Fahrenheit):
    Celsius = (Fahrenheit - 32) * 5/9
    return Celsius
  
Fahrenheit = 32
Celsius = Fahrenheit_to_Celsius(Fahrenheit)
print(""Celsius:"",Celsius)",correct,Recursion
Rewrite the following python code into JavaScript.,"leader_info = {
    ""name"": ""Diana Prince"",
    ""job"": ""Leader""
}","let leader_info = {
    ""name"": ""Diana Prince"",
    ""job"": ""Leader""
};","let leader_info = {
    ""name"": ""Diana Prince"",
    ""job"": ""Leader""
};",correct,Loops
"Write a Python program to generate a random password of 10 characters. The password should include at least two uppercase characters, two lowercase characters, two digits, and two special characters.",,"import string
import random

length = 10
characters = string.ascii_lowercase + string.ascii_uppercase + string.digits + '!""#$%\'&()*+,-./:;<=>?@[]^_`{|}~'

password = ''.join(random.choice(characters) for i in range(length))

print(password)  # Output: K>~L}U>Q#3","import string
import random

length = 10
characters = string.ascii_lowercase + string.ascii_uppercase + string.digits + '!""#$%\'&()*+,-./:;<=>?@[]^_`{|}~'

password = ''.join(random.choice(characters) for i in range(length))

print(password)  # Output: K>~L}U>Q#3",correct,OOP
"Create a Python program that takes in two strings, and find out all the characters that occur in both strings.","s1 = ""elephant""
s2 = ""phantasm""","s1 = set([i for i in s1])
s2 = set([i for i in s2])
common = list(s1.intersection(s2))
print(""The following characters occur in both the words: "" + ', '.join(common))","s1 = set([i for i in s1])
s2 = set([i for i in s2])
common = list(s1.intersection(s2))
print(""The following characters occur in both the words "" + ', '.join(common))",Syntax Error,OOP
Identify the language being used in the following code snippet.,"x = 5
y = 6
z = x + y",Python,Python,correct,Loops
Create a data structure to efficiently store and manipulate a set of strings.,,"# Create an empty set 
str_set = set() 
  
# Add elements to the set
str_set.add(""Python"") 
str_set.add(""Java"") 
str_set.add(""C#"") 
str_set.add(""JavaScript"") 

# Check for the presence
if ""Python"" in str_set: 
    print(""Python is present"") 
  
# Remove elements from the set
str_set.remove(""Java"") 

# Print the set
print(""Set of strings: "", end = "" "") 
for i in str_set: 
    print(i, end ="" "")","# Create an empty set 
str_set = set() 
  
# Add elements to the set
str_set.add(""Python"") 
str_set.add(""Java"") 
str_set.add(""C#"") 
str_set.add(""JavaScript"") 

# Check for the presence
if ""Python"" in str_set 
    print(""Python is present"") 
  
# Remove elements from the set
str_set.remove(""Java"") 

# Print the set
print(""Set of strings "", end = "" "") 
for i in str_set 
    print(i, end ="" "")",Syntax Error,OOP
Write a Python function to validate an a list of emails. The function should return a boolean indicating whether a given email address is valid.,"mail_list = [""example.user@gmail.com"", ""bad@example""]","def validate_mail_list(mail_list):
    for mail in mail_list:
        if not re.match(""[^@]+@[^@]+\.[^@]+"", mail):
            return False
    return True","def validate_mail_list(mail_list):
    for mail in mail_list:
        if not ",Incomplete Answer,OOP
"Generate a Python script that takes in a list of numbers, rearranges them in ascending order, and prints out the result.","[3, 2, 5, 7, 1, 4]","def sort_list(nums): 
    # Sort list in ascending order
    nums.sort()
    
    # Print out the sorted list
    for num in nums: 
        print(num) 
  
# Test the function
nums = [3, 2, 5, 7, 1, 4]
sort_list(nums)","def sort_list(nums): 
    # Sort list in ascending order
    nums.sort()
    
    # Print out the sorted list
    for num in nums: 
        print(num) 
  
# Test the function
nums = [3, 2, 5, 7, 1, 4]
sort_list(nums)",correct,OOP
Write a code to implement linear search in a 1-d array in Python.,"Input array: [1,2,3,4]
Target element: 3","def linearSearch(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

print(linearSearch([1,2,3,4], 3)) # Output: 2","def linearSearch(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

print(linearSearch([1,2,3,4], 3)) # Output: 2",correct,Loops
Create a class for a person in Python which includes name and age as attributes.,,"class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

p = Person(""John"", 18)
print(p.name, p.age)","class Person:
    def __init__(self, name, age):
        self.name = n",Incomplete Answer,String Manipulation
Come up with an optimal algorithm in Python to sort an array of integers.,"[3, 8, 10, 1, 7, 4]","def sort_array(arr):
    # Bubble Sort Algorithm
    n = len(arr)
    
    for i in range(n-1):
        for j in range(n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    
    return arr

# Example Usage
input_array = [3,8,10,1,7,4]
print(sort_array(input_array)) # Output: [1, 3, 4, 7, 8, 10]","def sort_array(arr):
    # Bubble Sort Algorithm
    n = len(arr)
    
    for i in range(n-1):
        for j in range(n-i-1):
            if arr[j] > arr[j+1]:
        ",Incomplete Answer,Recursion
"Create a Python function that takes two numbers, n and m, and prints out the first n odd numbers between 0 and m (both inclusive).","n = 3, m = 10","def printOddNumbers(n, m):
    nums = []
    for i in range(m):
        if i%2 != 0 and len(nums) < n:
            nums.append(i)
    return nums

print(printOddNumbers(3, 10))","def printOddNumbers(n, m):
    nums = []
    for i in range(m):
        if i%2 != 0 and len(nums) < n:
            nums.append(i)
    return nums

print(printOddNumbers(3, 10))",correct,File I/O
Create a Python program that sorts 3 numbers user inputted in ascending order.,,"# get 3 numbers
num1 = int(input(""Please enter number 1: ""))
num2 = int(input(""Please enter number 2: ""))
num3 = int(input(""Please enter number 3: ""))

# sort numbers
sorted_nums = sorted([num1, num2, num3])

# print sorted numbers
print(*sorted_nums, sep=', ')","# get 3 numbers
num1 = int(input(""Please enter number 1: ""))
num2 = int(input(""Please enter number 2: ""))
num3 = int(input(""Please",Incomplete Answer,String Manipulation
Compute the Least Common Multiple of two numbers.,"a = 15
b = 10","# Python3 code to find LCM
def compute_lcm(x, y):
   # choose the greater number
   if x > y:
       greater = x
   else:
       greater = y

   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1

   return lcm

lcm = compute_lcm(15, 10)
print(""The Least Common Multiple of 15 and 10 is: "",lcm)","# Python3 code to find LCM
def compute_lcm(x, y):
   # choose the greater number
   if x > y:
       greater = x
   else:
       greater = y

   while(True):
       if((greater % x == 0)",Incomplete Answer,OOP
Write a Python program to vertically center an aligned text by inserting padding spaces above and bottom of the text.,'Hello World!',"space = "" "" * 10
lines = inp.split('\n')
padded = '\n'.join(space + line + space for line in lines)
print(padded)","space = "" "" * 10
lines = inp.split('\n')
padded = '\n'.j",Incomplete Answer,Loops
Create a Python program to read 2 numbers from the user and calculate their sum.,,"num1 = int(input(""Enter first number: ""))
num2 = int(input(""Enter second number: ""))
 
# Adding two numbers
sum = num1 + num2
 
print(""Sum of {0} and {1} is {2}"" .format(num1, num2, sum))","num1 = int(input(""Enter first number: ""))
num2 = int(input(""Enter second number: ""))
 
# Adding two numbers
sum = num1 + num2
 
print(""Sum of {0} and {1} is {2}"" .format(num1, num2, sum))",correct,String Manipulation
Generate a Python class to compare two strings.,,"class StrComparer:
    def __init__(self, str1, str2):
        self.str1 = str1
        self.str2 = str2
    
    def is_same(self):
        if self.str1 == self.str2:
            return True
        else:
            return False","class StrComparer:
    def __init__(self, str1, str2):
        self.str1 = str1
        self.str2 = str2
    
    def is_same(self):
        if self.str1 == self.str2:
            return True
        else:
            return False",correct,Loops
Make a network request using Python and retrieve the name of the user who is currently logged in.,,"import requests

url = 'http://example.com/api/userdata'

userdata = requests.get(url).json()
name = userdata['name']

print(name)","import requests

url = 'http://example.com/api/userdata'

userdat",Incomplete Answer,File I/O
Create a function in Python to mask out any personal information from sensitive data.,"John Smith,123-456-7890","def mask_information(data):
  masked_data = """"
  for char in data:
    if char.isdigit():
      masked_data += 'x'
    else:
      masked_data += char
  return masked_data

masked_data = mask_information('John Smith,123-456-7890')
print(masked_data) // John Smith,xxx-xxx-xxxx","def mask_information(data):
  masked_data = """"
  for char in data:
    if char.isdigit():
      masked_data += 'x'
    else:
      masked_",Incomplete Answer,String Manipulation
Design a program in Python to check whether an input number is a prime number.,,"def is_prime(n):
    for i in range(2,n):
        if n % i == 0:
            return False
    return True","def is_prime(n):
    for i in range(2,n):
        if n % i == 0:
            return False
    return True",correct,String Manipulation
Write a Python code to convert a numeric string to number.,,"def convert_string_to_number(str):
    try: 
        return int(str)
    except ValueError:
        try:
            return float(str)
        except ValueError:
            return ""String could not be converted to number.""

str = input(""String: "")
print(""Number:"", convert_string_to_number(str))","def convert_string_to_number(str):
    try: 
        return int(str)
    except ValueError:
        try:
            return float(str)
        except ValueError:
            return ""String could not be converted to number.""

str = input(""String: "")
pritn(""Number:"", convert_string_to_number(str))",Syntax Error,OOP
"Given a Python dictionary structure, construct a program that returns the key with the highest numerical value","d = {hello:1, goodbye:2, test:3}","d = {hello:1, goodbye:2, test:3}

max_key = None
max_value = 0
for key, value in d.items():
    if value > max_value:
        max_key = key
        max_value = value

print(max_key)","d = {hello:1, goodbye:2, test:3}

max_key = None
max_value = 0
for key, value in d.items()",Incomplete Answer,OOP
Modify the following code in Python to only repeat a segment of the code while a certain user input is given.,"while True:
	print(""Hello World"")","# Get user input
input = input('Enter ""repeat"" to repeat the code: ')

# Execute the code while user input is ""repeat"" 
while input == 'repeat':
	print(""Hello World"")
	input = input('Enter ""repeat"" to repeat the code: ')","# Get user input
input = input('Enter ""repeat"" to repeat the code: '

# Execute the code while user input is ""repeat"" 
while input == 'repeat':
	print(""Hello World""
	input = input('Enter ""repeat"" to repeat the code: '",Syntax Error,Loops
Write a Python program to filter a list by a given criteria.,"list = [1,4,5,6,7,14,15] 
criteria = x > 5","def filter_list(mylist, criteria):
    result = []
    for item in mylist:
        if eval(criteria):
            result.append(item)
    return result
    
list = [1,4,5,6,7,14,15] 
criteria = ""x > 5""

filtered_list = filter_list(list, criteria)
print(filtered_list) # [6, 7, 14, 15]","def filter_list(mylist, criteria:
    result = []
    for item in mylist:
        if eval(criteria:
            result.append(item
    return result
    
list = [1,4,5,6,7,14,15] 
criteria = ""x > 5""

filtered_list = filter_list(list, criteria
print(filtered_list # [6, 7, 14, 15]",Syntax Error,Loops
Implement an algorithm in Python to calculate the Fibonacci sequence.,,"def Fibonacci(x): 
    if x <= 0: 
        return 0
    elif x == 1: 
        return 1
    else: 
        return Fibonacci(x-1) + Fibonacci(x-2)","def Fibonacci(x): 
    if x <= 0: 
        return 0
    elif x == 1: 
  ",Incomplete Answer,Loops
Write an algorithm in Python to count the number of occurrences of a given element in a given array.,,"def count_occurrences(array, element): 
    count = 0
    for i in range(len(array)): 
        if array[i] == element: 
            count += 1
    return count","def count_occurrences(array, element): 
    count = 0
    for i in range(len(ar",Incomplete Answer,Recursion
Write a Python program to print a given dictionary where the keys are numbers between 1 and 3 and the values are a list from 1 to the number key.,-,"d = {1: [1], 2: [1,2], 3: [1,2,3]}
for k,v in d.items():
    print(k,v)","d = {1: [1], 2: [1,2], 3: [1,2,3]}
for k,v in d.items(:
    print(k,v",Syntax Error,Loops
Generate a Python function that takes a sentence (string) as input and outputs a list of all the distinct words in the sentence.,The quick brown fox jumps over the lazy dog,"def distinct_words(sentence):
 words = sentence.split()
 distinct_words = []
 for word in words:
  if word not in distinct_words:
   distinct_words.append(word)
 return distinct_words","def distinct_words(sentence):
 words = sentence.split()
 distinct_words = []
 for word in w",Incomplete Answer,Loops
Generate an algorithm in Python that sorts the given array of numbers in the non-decreasing order.,"arr = [1, 9, 3, 8, 4]","def bubble_sort(arr): 
    n = len(arr)
  
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
  
arr = [1, 9, 3, 8, 4]

bubble_sort(arr) 

print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])","def bubble_sort(arr): 
n = len(arr)
  
for i in range(n-1): 
    for j in range(0, n-i-1): 
        if arr[j] > arr[j+1] : 
            arr[j], arr[j+1] = arr[j+1], arr[j] 
  
arr = [1, 9, 3, 8, 4]

bubble_sort(arr) 

print (""Sorted array is:"") 
for i in range(len(arr)): 
print (""%d"" %arr[i])",Syntax Error,File I/O
Optimize this Python code to reduce the running time.,"def find_max_value(array, start, end):
    max_value = -float('inf')
    for i in range(start, end):
        for j in range(start, end):
            max_value = max(max_value, array[i][j])
    return max_value","def find_max_value(array, start, end):
    max_value = -float('inf')
    for i in range(start, end):
        max_value = max(max_value, max(array[i][start:end]))
    return max_value","def find_max_value(array, start, end):
    max_value = -float('inf')
    for i in range(start, end):
        max_value = max(max_value, max(array[i][start:end]))
    return max_value",correct,OOP
"Create a Python program that, given an input integer, will print out a dictionary with the numbers from 1 to the input value and their squares.",number = 15,"def create_dict_squares(number):
    squares_dict = {}

    for i in range(1, number + 1):
        squares_dict[i] = i**2

    return squares_dict","def create_dict_squares(number):
    squares_dict = {}

    for i in range(1, number + 1):
        squares_dict[i] = i**2

    return squares_dict",Syntax Error,String Manipulation
Write a Python function to calculate the harmonic mean of two numbers.,"7, 9","def harmonic_mean(x, y):
    return 2.0 * (x * y) / (x + y)

harmonic_mean_value = harmonic_mean(7, 9)

print(harmonic_mean_value)","def harmonic_mean(x, y)
    return 2.0 * (x * y) / (x + y)

harmonic_mean_value = harmonic_mean(7, 9)

print(harmonic_mean_value)",Syntax Error,String Manipulation
Write a Python script to search a given dictionary for a given word.,"dictionary = {""hello"": ""Str","def search_word(word, dictionary):
    if word in dictionary.keys():
        return dictionary[word]
    else:
        return None

dictionary = {'hello': 'string', 'goodbye': 'bye'}

word = 'hello'

result = search_word(word, dictionary)

if result:
    print('Word found in dictionary: ' + result)

else:
    print('Word not found in dictionary.')","def search_word(word, dictionary):
if word in dictionary.keys():
    return dictionary[word]
else:
    return None

dictionary = {'hello': 'string', 'goodbye': 'bye'}

word = 'hello'

result = search_word(word, dictionary)

if result:
print('Word found in dictionary: ' + result)

else:
print('Word not found in dictionary.')",Syntax Error,String Manipulation
"Using the NumPy library in Python, calculate the mean of the following array.","array = [2, 4, 7, 8, 9]","import numpy as np

arr = np.array([2, 4, 7, 8, 9])

mean = np.mean(arr)

print(mean) # 6.2","import numpy as np

arr = np.array([2, 4, 7, 8, 9])

mean = np.mean(arr)

print(mean) # 6.2",correct,OOP
Configure a Python program to calculate the sum of all integers from 1 to 100.,,"def calculate_sum():
    sum = 0
    for i in range(1, 101):
        sum += i
    return sum","def calculate_sum():
    sum = 0
    for i in range(1, 101):
        sum += i
    return sum",correct,String Manipulation
Design a python program to implement a Greedy algorithm,"A set of jobs: {A: (3, 10), B: (4, 15), C: (2, 5)}","def greedy(jobs):
    jobs.sort(key=lambda x: x[1]/x[0], reverse=True)
    result = []
    time = 0
    for j in jobs:
        time += j[0]
        result.append((j[0], j[1], time))
        
    return result

jobs = [(3, 10), (4, 15), (2, 5)]
print(greedy(jobs))","def greedy(jobs)
    jobs.sort(key=lambda x x[1]/x[0], reverse=True)
    result = []
    time = 0
    for j in jobs
        time += j[0]
        result.append((j[0], j[1], time))
        
    return result

jobs = [(3, 10), (4, 15), (2, 5)]
print(greedy(jobs))",Syntax Error,Loops
Generate a python program to compute the nth fibonacci number in the sequence.,7,"def fibonacci(n):
	if n == 0:
		return 0
	elif n == 1:
		return 1
	else:
		return fibonacci(n-1) + fibonacci(n-2)

# compute the 7th fibonacci number
print(fibonacci(7)) # Output: 13","def fibonacci(n):
	if n == 0:
		return 0
	elif n == 1:
		return 1
	else:
		return fibonacci",Incomplete Answer,File I/O
Can you write a Python script to sort a list of strings alphabetically?,"[""Hello"", ""Yes"", ""No"", ""World""]","strings = [""Hello"", ""Yes"", ""No"", ""World""]

strings.sort()

print(strings)","strings = [""Hello"", ""Yes"", ""No"", ""World""]

strings.sort()

print(strings)",correct,OOP
Write a Python function to find all possible n-letter words from a given list of letters.,"[""a"",""b"",""c""], n = 2","def find_words_length_n(letters, n):
    words = set()
    for combo in itertools.combinations_with_replacement(letters, n):
        for perm in itertools.permutations(combo):
            words.add("""".join(perm))
    return words

words = find_words_length_n([""a"",""b"",""c""], 2)
print(words)","def find_words_length_n(letters, n):
    words = set()
    for combo in itertools.combinations_with_replacement(letters, n):
        for perm in",Incomplete Answer,OOP
Write a Python program to replace all the white spaces in a given string with the '*' character.,str = “This is a sample string”,"str = 'This is a sample string'

new_str = str.replace(' ', '*')

print(new_str) // This*is*a*sample*string","str = 'This is a sample string'

new_str = str.replac",Incomplete Answer,Loops
Create a class in Python which can convert any given Fahrenheit temperature to degree Celsius.,,"class FahrenheitToCelsius:
  def __init__(self, temp_fahrenheit):
    self.temp_fahrenheit = temp_fahrenheit

  def fahrenheit_to_celsius(self):
    temp_celsius = (self.temp_fahrenheit - 32) * 5 / 9
    return temp_celsius","class FahrenheitToCelsius
  def __init__(self, temp_fahrenheit)
    self.temp_fahrenheit = temp_fahrenheit

  def fahrenheit_to_celsius(self)
    temp_celsius = (self.temp_fahrenheit - 32) * 5 / 9
    return temp_celsius",Syntax Error,String Manipulation
Create a python script that returns the most commonly used words in a given text.,"""This is a sentence with some words used more often than others.""","def mostCommonWords(text):
    words = text.split()
    counts = {word: words.count(word) for word in words}
    return sorted(counts.items(), key=lambda x: x[1], reverse=True)

input = ""This is a sentence with some words used more often than others.""

result = mostCommonWords(input)
print(result)","def mostCommonWords(text)
    words = text.split()
    counts = {word words.count(word) for word in words}
    return sorted(counts.items(), key=lambda x x[1], reverse=True)

input = ""This is a sentence with some words used more often than others.""

result = mostCommonWords(input)
print(result)",Syntax Error,Recursion
Create a Python script to whitelist a specific user from a list of users.,"user_list = [""user1"",""user2"",""user3"",""user4"",""user5""]
whitelist_user = ""user3""","def whitelist_user(user_list, whitelist_user):
    Whitelisted_users = []
    for user in user_list: 
        if user == whitelist_user:
            Whitelisted_users.append(user)
    
    return Whitelisted_users","def whitelist_user(user_list, whitelist_user):
    Whitelisted_users = []
    for user in user_list: 
    ",Incomplete Answer,String Manipulation
Construct a python program which prints the reverse of the given string,,"def reverse_string(s): 
    string = """" 
    for i in s: 
        string = i + string 
    return string","def reverse_string(s): 
    string = """" 
    for i in s: 
        string = i + string 
    return string",Syntax Error,OOP
Write a Python function to count the number of substrings of a given string that contains exactly K distinct characters.,"""abcabcabcabc"", K = 2","def count_substrings_with_k_distinct_characters(in_str, k):
    count = 0
    for i in range(len(in_str)-k+1):
        sub_str = in_str[i:i+k]
        if len(set(sub_str)) == k:
            count +=1 
    return count

count = count_substrings_with_k_distinct_characters(""abcabcabcabc"", 2)
print(count)","def count_substrings_with_k_distinct_characters(in_str, k):
    count = 0
    for i in range(len(in_str)-k+1):
        sub_str = in_str[i:i+k]
        ",Incomplete Answer,Loops
Implement a function in Python that takes a string as a parameter and capitalizes the first letter of each word in the string.,The quick brown fox,"def capitalize(input_string):
    if len(input_string) == 0:
        return ''
    else:
        words = input_string.split()
        capitalized_words = [word.capitalize() for word in words]
        return ' '.join(capitalized_words)

print(capitalize('The quick brown fox'))","def capitalize(input_string):
    if len(input_string) == 0:
        return ''
    else:
        words = input_string.split()
        capitalized_words = [word.capitalize() for word in words]
        return ' '.join(capitalized_words)

pritn(capitalize('The quick brown fox'))",Syntax Error,String Manipulation
"Write a Python code snippet to create a shallow copy of the following dictionary: {‘a’: 1, ‘b’: 2}.","{'a': 1, 'b': 2}","import copy

original_dict = {'a': 1, 'b': 2}

shallow_copy_dict = copy.copy(original_dict)","import copy

original_dict = {'a': 1, 'b': 2}",Incomplete Answer,Recursion
Create a function in Python to remove duplicate elements from a list.,,"def removeDuplicates(list):
  newList = []
  for element in list:
    if element not in newList:
      newList.append(element)
  return newList","def removeDuplicates(list):
  newList = []
  for element in list:
    i",Incomplete Answer,Loops
Analyze the given Python code and correct any errors so that the code runs correctly.,"def main():
 nums = range[0,10)
 for num in nums
  print(""The square of"", num,""is"", num * num)

main()","def main():
 nums = range(0,10)
 for num in nums:
  print(""The square of"", num,""is"", num * num)

main()","def main()
 nums = range(0,10)
 for num in nums
  print(""The square of"", num,""is"", num * num)

main()",Syntax Error,Loops
Create a Python program that will generate a random password from the given set of characters.,,"import random

def generate_random_password(characters=""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+{}:""):
    password = """"
    for _ in range(8):
        password += random.choice(characters)
    return password","import random

def generate_random_password(characters=""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#",Incomplete Answer,Loops
Write Python code to print the number present in an inputted string.,"string_1 = ""The temperature is 24 degrees Celsius""","def print_numbers_in_string(string):
    numbers = [int(s) for s in string.split() if s.isdigit()]
    print(numbers)

string_1 = ""The temperature is 24 degrees Celsius""
print_numbers_in_string(string_1)

# Output
# [24]","def print_numbers_in_string(string):
    numbers = [int(s) for s in string.split() if s.isdigit()]
    print(numbers)

string_1 = ""The temperature is 24 degrees Celsius""
print_numbers_in_string(string_1)

# Output
# [24]",correct,Loops
Translate the following pseudocode to Python language.,"// set n to the number of array elements
// find max value of array
max_val = array[1]
for i = 2 to n
    if (array[i] > max_val)
        max_val = array[i]","def find_max_val(array):
    n = len(array)
    max_val = array[0]
    for i in range(1, n):
        if array[i] > max_val:
            max_val = array[i]
    return max_val

if __name__ == '__main__':
    array = [1, 2, 3, 4, 5]
    print(find_max_val(array))","def find_max_val(array):
    n = len(array)
    max_val = array[0]
    for i in range(1, n):
        if array[i] > max_val:
      ",Incomplete Answer,OOP
Create a program in Python to print all elements of a given set.,"{10, 20, 30}","my_set = {10, 20, 30}
for i in my_set:
    print(i)","my_set = {10, 20, 30}
for i in my_set:
    print(i)",correct,String Manipulation
"Given two unsorted lists, create a Python program to identify the common elements between them.","list1 = [5, 3, 2, 6, 8, 9] 
list2 = [4, 2, 1, 6, 7]","def common_elements(list1, list2):
 return [element for element in list1 if element in list2]

common_elements(list1, list2) # Output: [2, 6]","def common_elements(list1, list2):
 return [element for element in lis",Incomplete Answer,Recursion
Write a python program to classify an object based on its features.,"[2.5, 4.5, 2.5], Classes: [""apple"", ""orange"", ""pear""]","def classify_object(features, classes):
    max_feature = max(features)
    index = features.index(max_feature)
    return classes[index]

print(classify_object([2.5, 4.5, 2.5], [""apple"", ""orange"", ""pear""]))","def classify_object(features, classes:
    max_feature = max(features
    index = features.index(max_feature
    return classes[index]

print(classify_object([2.5, 4.5, 2.5], [""apple"", ""orange"", ""pear""]",Syntax Error,OOP
Write a function to find numbers within a given range where every number is divisible by every digit it contains.,,"def divisible_by_digits(startnum, endnum):
    return [n for n in range(startnum, endnum+1) \
                if not any(map(lambda x: int(x) == 0 or n%int(x) != 0, str(n)))]","def divisible_by_digits(startnum, endnum):
    return [n for n in range(startnum, endnum+1) \
                if not any(map(lambda x: int(x) == 0 or n%int(x) != 0, str(n)))]",Syntax Error,File I/O
Generate a python function to find the maximum of two numbers,"4, 5","def get_max(a,b):
    if a > b:
        return a
    else:
        return b

# main program
a = 4
b = 5
result = get_max(a,b)
print(result)","def get_max(a,b):
    if a > b:
        return a
    else:
        return b

# main program
a = 4
b = 5
result = get_max(a,b)
print(result)",correct,Loops
Create a Python program to generate an infinite sequence of numbers in a Fibonacci-like pattern.,,"def fibonacci():
    a, b = 0, 1
    while True:
        yield b
        a, b = b, a + b

for num in fibonacci():
    print(num)","def fibonacci():
    a, b = 0, 1
    while True:
        yield b
        a, b = b, a + b

for num in fibonacci():
    pritn(num)",Syntax Error,OOP
Create a class in Python to represent a student and a method that calculates their grade.,,"class Student:
 def __init__(self, assignments, tests, projects):
 self.assignments = assignments
 self.tests = tests
 self.projects = projects

def calculate_grade(self):
 total = (self.assignments * 0.3) + (self.tests * 0.4) + (self.projects * 0.3)
 return total","class Student:
 def __init__(self, assignments, tests, projects:
 self.assignments = assignments
 self.tests = tests
 self.projects = projects

def calculate_grade(self:
 total = (self.assignments * 0.3 + (self.tests * 0.4 + (self.projects * 0.3
 return total",Syntax Error,OOP
Create a Python program for calculating the Fibonacci sequence. The program should print the n-th number of the sequence.,n: 7,"def fibonacci(n): 
 if n <= 0: 
 return 0 
 elif n == 1: 
 return 1 
 else: 
 return fibonacci(n-1) + fibonacci(n-2) 

n = 7 
print(fibonacci(n)) # Output: 13","def fibonacci(n): 
 if n <= 0: 
 return 0 
 elif n == 1: 
 return 1 
 else: 
 r",Incomplete Answer,OOP
Edit this python code to be more efficient.,"data = [1, 2, 3, 4]
result = []
for x in data:
 if x > 2:
 result.append(x)","data = [1, 2, 3, 4]

result = [x for x in data if x > 2]","data = [1, 2, 3, 4]

result = [x for x in data if x > 2]",correct,Recursion
Write a Python program that prints out the longest word in a sentence.,The quick brown fox jumped over the lazy dog,"sentence = ""The quick brown fox jumped over the lazy dog""

words = sentence.split()
longest_word = ''
for word in words:
    if len(word) > len(longest_word):
        longest_word = word
print(longest_word)","sentence = ""The quick brown fox jumped over the lazy dog""

words = sentence.split()
longest_word = ''
for word in words
    if len(word) > len(longest_word)
        longest_word = word
print(longest_word)",Syntax Error,OOP
Optimize a Python function to calculate the square of a number for maximum performance.,,"def square(x):
 return x * x
 
# Using the exponentiation operator
def square_op(x):
 return x ** 2
 
# Using bit-shift operator
def square_shift(x):
  return x << 1

# Using multiplication
def square_mul(x):
 return (x + x) * x
 
# Using pow() built-in
def square_builtin(x):
 return pow(x, 2)","def square(x):
 return x * x
 
# Using the exponentiation operator
def square_op(x):
 return x ** 2
 
# Using bit-shift operator
def square_shift(x):
  return x << 1

# Using multiplication
def square_mul(x):
 return (x + x) * x
 
# Using pow() built-in
def square_builtin(x):
 return pow(x, 2)",correct,Loops
Design a program in Python to delete an element from the give list.,"List: [1,2,3,4,5]
Element to delete: 3","def delete_element(arr, element): 
    new_arr = [i for i in arr if i!=element]
    return new_arr","def delete_element(arr, element: 
    new_arr = [i for i in arr if i!=element]
    return new_arr",Syntax Error,OOP
Implement a Python program to create a dictionary containing teams and their wins.,"['A's': 56, 'B's': 24, 'C's': 32, 'D's': 27]","teams_wins = {
    'A's': 56, 
    'B's': 24, 
    'C's': 32,
    'D's': 27
}","teams_wins = {
    'A's': 56, 
    'B's': 24, 
    'C's': 32,
    'D's': 27
}",correct,OOP
Design a python code to remove a character from a given string.,"s = ""Hello World""","def remove_char(s, char):
    s = s.replace(char, '')
    return s

remove_char(s, 'l')","def remove_char(s, char)
    s = s.replace(char, '')
    return s

remove_char(s, 'l')",Syntax Error,Recursion
Create a function in Python that takes a string as parameter and returns 'True' if the string contains at least one number.,,"def contains_number(string):
    return any(char.isdigit() for char in string)","def contains_number(string):
    return any(char.isdigit() for char in string)",correct,OOP
Write a Python program that takes two lists and performs a comparison between them.,"list1 = [1, 2, 3]
list2 = [2, 3, 4]","def compare_lists(lst1, lst2): 
    lst1 = set(lst1) 
    lst2 = set(lst2) 
    same = lst1.intersection(lst2)
    diff1 = lst1.difference(lst2)
    diff2 = lst2.difference(lst1)
    return same, diff1, diff2

result = compare_lists([1,2,3], [2,3,4]) 
print(result)","def compare_lists(lst1, lst2): 
    lst1 = set(lst1) 
    lst2 = set(lst2) 
    same = lst1.intersection(lst2)
    diff1 = lst1.difference(lst2)
    diff2 = lst2.difference(lst1)
    return same, diff1, diff2

result = compare_lists([1,2,3], [2,3,4]) 
print(result)",correct,String Manipulation
Design a python program that reverses the input sentence,"Sentence = ""This is a sentence""","def reverse_sentence(sentence):
    words = sentence.split("" "")
    words = list(reversed(words))
    return "" "".join(words)

reverse_sentence(""This is a sentence"")  # returns ""sentence a is This""","def reverse_sentence(sentence):
    words = sentence.split("" "")
    words = list(reversed(words))
    return "" "".join(words)

reverse_sentence(""This is a sentence"")  # returns ""sentence a is This""",Syntax Error,Recursion
Develop a Python script to get the length of a given string.,How are you?,"def get_string_length(str):
    return len(str)

get_string_length(""How are you?"")","def get_string_length(str)
    return len(str)

get_string_length(""How are you?"")",Syntax Error,File I/O
Generate a list of all prime numbers below 100 with Python.,,"def getPrimes(n):
    primes = []
    for num in range(2, n + 1):
        for idx in range(2, num):
            if num % idx == 0:
                break
        else:
            primes.append(num)
    return primes

print(getPrimes(100))","def getPrimes(n:
    primes = []
    for num in range(2, n + 1:
        for idx in range(2, num:
            if num % idx == 0:
                break
        else:
            primes.append(num
    return primes

print(getPrimes(100",Syntax Error,Recursion
"Write a Python code to convert the given number to hours, minutes and seconds.",my_number = 3600,"my_number = 3600

def convert_to_time(number):
    hours = number // 3600
    minutes = (number % 3600) // 60
    seconds = (number % 3600) % 60
    return hours, minutes, seconds

print(convert_to_time(my_number))","my_number = 3600

def convert_to_time(number):
    hours = number // 3600
    minutes = (number % 3600) // ",Incomplete Answer,String Manipulation
Create a GUI using Tkinter in Python that displays a message when a button is pressed.,,"import tkinter as tk

root = tk.Tk()

def displayMessage():
    print(""Button was pressed!"")

button = tk.Button(root,text=""Press Me"",width=25,command=displayMessage)
button.pack()

root.mainloop()","import tkinter as tk

root = tk.Tk()

def displayMessage():
    print(""Button was pressed!"")

butt",Incomplete Answer,Loops
Write a function to convert snake case string to camel case string.,,"def snake_to_camel(word):
        import re
        return ''.join(x.capitalize() or '_' for x in word.split('_'))","def snake_to_camel(word):
        import re
        retu",Incomplete Answer,File I/O
Write a Python program to calculate the area of a circle when a user inputs its radius.,Radius = 10,"def calculate_area_circle(radius): 
    pi = 3.14
    area = pi * (radius * radius) 
    return area 
  
# Output
print(""Area of circle is: "", calculate_area_circle(10))","def calculate_area_circle(radius): 
    pi = 3.14
    area = pi * (radius * radius) ",Incomplete Answer,OOP
Write a python function to find sum of product of binomial co-efficients.,,"def binomial_Coeff(n,k): 
    C = [0] * (k + 1); 
    C[0] = 1; # nC0 is 1 
    for i in range(1,n + 1):  
        for j in range(min(i, k),0,-1): 
            C[j] = C[j] + C[j - 1]; 
    return C[k]; 
def sum_Of_product(n): 
    return binomial_Coeff(2 * n,n - 1); ","def binomial_Coeff(n,k): 
    C = [0] * (k + 1); 
    C[0] = 1; # nC0 is 1 
    for i in range(1,n + 1):  
        for j in range(min",Incomplete Answer,Loops
Design a function in Python to delete duplicate characters from a given string.,String: python,"def delete_duplicate(str):
    temp_str = """"
    for i in range(0, len(str)):
        if str[i] not in temp_str:
            temp_str += str[i]
    return temp_str

input_string = ""w3python""
result = delete_duplicate(input_string)

print(""After deleting duplicate character, string is:"", result)","def delete_duplicate(str):
temp_str = """"
for i in range(0, len(str)):
    if str[i] not in temp_str:
        temp_str += str[i]
return temp_str

input_string = ""w3python""
result = delete_duplicate(input_string)

print(""After deleting duplicate character, string is:"", result)",Syntax Error,Loops
Develop a Python function to count number of digits in a number.,8594,"def count_digits(number):
    count = 0
    while (number > 0):
        number = number // 10
        count = count + 1
    return count

num = 8594
print(""Number of digits : "", count_digits(num))","def count_digits(number):
    count = 0
    while (number > 0):
        number = number // 10
        count = count + 1
    return count

num = 8594
print(name, ""Number of digits : "", count_digits(num))",Syntax Error,OOP
Create a python program to find the longest consecutive 1s in a binary number.,10101010001,"def max_ones(num):
    count = 0 
    result = 0
    for i in range(len(num)):
        if num[i] == '1':
            count += 1 
            result = max(result, count)
        else:
            count = 0 
    return result

num = '10101010001'
print(max_ones(num))","def max_ones(num):
    count = 0 
    result = 0
    for i in range(len(num)):
        if num[i] == '1':
            count += 1 
            result = max(result, count)
        else:
            count = 0 
    return result

num = '10101010001'
print(max_ones(num))",correct,String Manipulation
Design a function in Python for deleting all empty directories.,,"import os

def delete_empty_dirs(path):
    for root, directories, files in os.walk(path):
        for directory in directories:
            joined_path = os.path.join(root, directory)
            try:
                os.rmdir(joined_path)
            except OSError:
                # Directory not empty
                pass","import os

def delete_empty_dirs(path):
    for root, directories, files in os.walk(path):
        for directory in directories:
            joined_path = os.path.join(root, directory)
            try:
                os.rmdir(joined_path)
            except OSError:
                # Directory not empty
                pass",correct,File I/O
How would you design a Python program to filter out string elements from a given array of string elements?,"lst = [""apple"", ""zoo"", ""banana"", ""apple"", ""foo"", ""zoo""]","def filter_out_strings(lst):
  new_lst = []
  for item in lst:
    if item not in new_lst:
      new_lst.append(item)
  return new_lst

filtered_list = filter_out_strings(lst) 
print(filtered_list) # Output -> ['apple', 'zoo', 'banana', 'foo']","def filter_out_strings(lst):
  new_lst = []
  for item in lst:
    if item not in new_lst:
      new_lst.append(item)
  return new_lst

filtered_list = filter_out_strings(lst) 
print(filtered_list) # Output -> ['apple', 'zoo', 'banana', 'foo']",correct,String Manipulation
Can you create a function in Python to find the area of a triangle given the three sides?,"3, 4, 5","def area_triangle(a, b, c):
	s = (a + b + c)/2

	area = math.sqrt(s*(s-a)*(s-b)*(s-c))
	return area

area = area_triangle(3, 4, 5)
print(""The area of the triangle is: {}"".format(area))","def area_triangle(a, b, c):
	s = (a + b + c)/2

	area = math.sqrt(s*(s-a)*(s-b)*(s-c))
	retu",Incomplete Answer,File I/O
Create a Python program to convert a number to its corresponding month name.,2,"def num_to_month(num):
    months = [
        'January', 
        'February', 
        'March', 
        'April', 
        'May', 
        'June', 
        'July', 
        'August', 
        'September', 
        'October', 
        'November', 
        'December'
    ]
    return months[num - 1]

print(num_to_month(2)) # February","def num_to_month(num):
    months = [
        'January', 
        'February', 
        'March', 
        'April', 
        'May', 
        'June', 
        'July', 
        'August', 
        'September', 
        'October', 
        'November', 
        'December'
    ]
    return months[num - 1]

print(name, num_to_month(2)) # February",Syntax Error,Recursion
Design a program in Python that can ask the user to enter 10 numbers and then find the average of those 10 numbers.,,"numbers = []
# Ask the user to enter 10 numbers
for i in range (10):
    numbers.append(int(input(""Enter number #"" + str(i+1) + "": "")))

# Calculate and print the average of the numbers
mean = sum(numbers)  / len(numbers)
print(""Mean:"", mean)","numbers = []
# Ask the user to enter 10 numbers
for i in range (10):
    numbers.append(int(input(""Enter number #"" + str(i+1) + "": "")))

# Calculate and print the average of the numbers
mean = sum(numbers)  / len(numbers)
print(""Mean:"", mean)",correct,Loops
Create a Python script that prints the top three words from a given sentence.,"sentence= ""This is a really long sentence with many words.""","import collections

sentence = ""This is a really long sentence with many words.""

# Split the given sentence into a list of words
words = sentence.split("" "")

# Count the occurrence of each word
word_freq = collections.Counter(words)

# Print out the top three words
for word, count in word_freq.most_common(3):
    print(f'{word}: {count}')","import collections

sentence = ""This is a really long sentence with many words.""

# Split the given sentence into a list of words
words = sentence.split("" "")

# Count the",Incomplete Answer,Loops
Modify the Python code below to reverse the string input.,string = “hello world”,"string = “hello world” 
# Reverse the string 
rev_string = """" 
for char in string: 
 rev_string = char + rev_string 

# Print the reversed string 
print(rev_string)","string = “hello world” 
# Reverse the string 
rev_string = """" 
for char in string: 
 rev_string = char + rev_string 

# Print the reversed string 
print(name, rev_string)",Syntax Error,Recursion
Construct a code to filter a string for only numerical characters in Python.,"""4x4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s""","def filter_string(string):
    filtered_string = ''
    for c in string:
        if c.isdigit():
            filtered_string += c
    return filtered_string

print(filter_string(""4x4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s""))","def filter_string(string):
    filtered_string = ''
    for c in string:
        if c.isdigit():
            filtered_string += c
    return filtered_string

print(filter_string(""4x4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s""))",correct,OOP
Create a Python 3 program to calculate the Fibonacci sequence up to the given number.,n = 20,"def Fibonacci(n): 
    # 0 and 1 are the first two numbers in 
    # the Fibonacci sequence
    if n<=0: 
        return 0
    elif n==1: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2)

# Number of terms to calculate 
n = 20
print(""Fibonacci sequence:"") 
  
for i in range(n): 
    print(Fibonacci(i),end="" "")","def Fibonacci(n): 
    # 0 and 1 are the first two numbers in 
    # the Fibonacci sequence
    if n<=0: 
        return 0
    elif n==1: 
        return 1
    else: 
 ",Incomplete Answer,File I/O
Write a Python code to calculate the sum of two numbers.,"Number 1: 7
Number 2: 4","sum = 7 + 4
print(sum)","sum = 7 + 4
print(sum)",correct,OOP
Write a Python program to divide a list of numbers into two equal lists.,"[1,2,3,4,5,6,7,8,9,10]","list_a = [1,2,3,4,5]
list_b = [6,7,8,9,10]","list_a = [1,2,3,4,5]
list_b = [6,7,8,9,10]",correct,String Manipulation
Create a Python script to calculate and display the distance between two points in 2-dimensional space.,"Two points: (5,3) & (2,2)","import math
 
def distance(p1,p2):
 x1,y1 = p1
 x2,y2 = p2
 d = math.sqrt((x2-x1)**2+(y2-y1)**2)
 return d
 
x1,y1 = (5,3)
x2,y2 = (2,2)
print(f""The distance between 2 points ({x1},{y1}) & ({x2},{y2}) is: {distance((x1,y1),(x2,y2))}"")

// Output:
The distance between 2 points (5,3) & (2,2) is: 3.1622776601683795","import math
 
def distance(p1,p2):
 x1,y1 = p1
 x2,y2 = p2
 d = math.sqrt((x2-x1)**2+(y2-y1)**2)
 return d
 
x1,y1 = (5,3)
x2,y2 = (2,2)
pritn(f""The distance between 2 points ({x1},{y1}) & ({x2},{y2}) is: {distance((x1,y1),(x2,y2))}"")

// Output:
The distance between 2 points (5,3) & (2,2) is: 3.1622776601683795",Syntax Error,Recursion
"Based on a given input, create a function in Python to generate a random string of length 6.",,"import random
import string

def random_string(length):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(length))

random_string(6)","import random
import string

def random_string(length)
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(length))

random_string(6)",Syntax Error,Recursion
Create a python code that can randomly select 10 numbers from a sequence of numbers from 1 to 100,,"import random as rd

def random_selection(n):
    num_list = [i for i in range(1, n+1)]
    index_list = rd.sample(range(1, n+1), 10)
    
    selected_list = [num_list[i] for i in index_list]
    return selected_list","import random as rd

def random_selection(n):
    num_list = [i for i in range(1, n+1)]
    index_list = rd.",Incomplete Answer,File I/O
Convert this C++ program to Python.,"#include <iostream>

int main() {
    int a, b;
    std::cin >> a >> b;
    
    std::cout << a + b << std::endl;
    
    return 0;
}","a = int(input())
b = int(input())

print(a + b)","a = int(input())
b = int(input())

print(a + b)",correct,String Manipulation
Create a Python script to filter out all the vowels from a string.,,"def filter_vowels(string):
     vowels = ('a', 'e', 'i', 'o', 'u')
     return ''.join(c for c in string if c not in vowels)","def filter_vowels(string):
     vowels = ('a', 'e', 'i', 'o', 'u')
     return ''.join(c for c in string if c not in vowels)",correct,Recursion
Create a Python code to simulate a flip of a coin.,,"import random

rand_num = random.randint(0,1)
if rand_num == 0:
    print(""Heads"")
else:
    print(""Tails"")","import random

rand_num = random.randint(0,1)
if rand",Incomplete Answer,File I/O
Can you build an algorithm in Python that determines if a number is odd or even?,,"def is_odd(number):
  if number % 2 == 0:
    return False
  else:
    return True","def is_odd(number):
  if number % 2 == 0:",Incomplete Answer,File I/O
Code a Bubble Sort routine in Python.,,"def bubble_sort(unsorted_list): 
    n = len(unsorted_list) 
  
    for i in range(n): 
        for j in range(0, n-i-1): 
  
            if unsorted_list[j] > unsorted_list[j+1] : 
                unsorted_list[j], unsorted_list[j+1] = unsorted_list[j+1], unsorted_list[j] 
  
    return unsorted_list","def bubble_sort(unsorted_list): 
    n = len(unsorted_list) 
  
    for i in range(n): 
        for j in range(0, n-i-1): 
  
            if unsorted_l",Incomplete Answer,File I/O
Write a Python program to create a dictionary with keys numbers and their squares as the values.,,"def num_squares():
  squares_dict = {}
  for i in range(1,11):
    squares_dict[i] = i*i 
  return squares_dict","def num_squares():
  squares_dict = {}
  for i in range",Incomplete Answer,Recursion
Write a regex expression that matches the following string.,"String: ""I love programming in Python.""","regex = ""I love programming in Python\.""","regex = ""I love programming in Python\.""",correct,OOP
Generate a Python source code to print the last element from a given list.,"['Apple', 'Orange', 'Banana']","arr = ['Apple', 'Orange', 'Banana']
last_element = arr[-1]
print(last_element)  # Result: Banana","arr = ['Apple', 'Orange', 'Banana']
last_element",Incomplete Answer,Loops
Write a Python script to generate a list of all possible 2D Point objects with coordinates between 1 and 10.,,"points = []
 
for x in range(1, 11):
    for y in range(1, 11):
        points.append([x, y])
 
print(points)","points = []
 
for x in range(1, 11:
    for y in range(1, 11:
        points.append([x, y]
 
print(points",Syntax Error,Loops
Write a python function to shift last element to first position in the given list.,,"def move_first(test_list):
  test_list = test_list[-1:] + test_list[:-1]  
  return test_list","def move_first(test_list):
  test_list = test_list[-1:] + test_list[:-1]  
  return test_list",correct,File I/O
Optimize the following Python code to make it more concise and easier to understand.,"def concat_items(items):
    result = """"
    for item in items:
        result = result + item
    return result","def concat_items(items):
    # Use join() to join the elements in the given list with an empty string
    return """".join(items)","def concat_items(items)
    # Use join() to join the elements in the given list with an empty string
    return """".join(items)",Syntax Error,File I/O
Modify this Python code to add an exception for invalid input.,"def calculate(a, b):
    if b > 0:
        c = a / b
        return c","def calculate(a, b):
    if b == 0:
        raise ZeroDivisionError
    elif b > 0:
        c = a / b
        return c
    else:
        raise ValueError","def calculate(a, b):
    if b == 0:
        raise ZeroDivisionError
    elif b > 0:
        c = a / b
        return c
    else:
        raise ValueError",correct,File I/O
Write an algorithm in Python to convert a given binary string to decimal number.,"""11010""","def bin2dec(binary):
    decimal, i = 0, 0
    while binary != 0:
        dec = binary % 10
        decimal = decimal + dec * pow(2, i)
        binary = binary//10
        i += 1
    return decimal

binary = 11010
print(bin2dec(binary))","def bin2dec(binary):
    decimal, i = 0, 0
    while binary != 0:
        dec = binary % 10
        decimal = decimal + dec * pow(2, i)
        binary = binary//10
        i += 1
    return decimal

binary = 11010
print(bin2dec(binary))",correct,String Manipulation
Create a python program to trace any recursive function on the screen.,,"def trace_function(F):
    def wrapper(*args, **kwargs):
        print(F.__name__ + str(args) + str(kwargs))
        value = F(*args, **kwargs)
        print(F.__name__ + "" returns "" + str(value))
        return value
    return wrapper","def trace_function(F:
    def wrapper(*args, **kwargs:
        print(F.__name__ + str(args + str(kwargs
        value = F(*args, **kwargs
        print(F.__name__ + "" returns "" + str(value
        return value
    return wrapper",Syntax Error,String Manipulation
Write a Python program to calculate the value of pi to n-digits of precision.,,"import math

# Function to calculate Pi to n-digits of precision 
def pi_calculator(n): 
    pi = format(math.pi, '.' + str(n) + 'f') 
    return pi 
      
# Driver Code 
print(""The value of pi to 3 digits precision is:"", pi_calculator(3))","import math

# Function to calculate Pi to n-digits of precision 
def pi_calculator(n): 
    pi = format(math.pi, '.' + str(n) + 'f') 
    return pi 
      
# Driver Code 
print(name, ""The value of pi to 3 digits precision is:"", pi_calculator(3))",Syntax Error,File I/O
Write a Python program to create a string from the last 3 characters of a given string.,,"def last_characters(string):
 return string[-3:]","def last_characters(string):
 return string[-3:]",correct,Loops
Build a web scraper in Python to extract data from a given webpage.,"""https://www.example.com""","import requests
from bs4 import BeautifulSoup

# Make a request to the website and get the HTML
url = ""https://www.example.com""
response = requests.get(url)
html = response.content

# Parse the HTML using BeautifulSoup
soup = BeautifulSoup(html, 'html.parser')

# Extract data from tags which contain specific class names
data = soup.find_all('div', {""class"": ""example-class""})","import requests
from bs4 import BeautifulSoup

# Make a request to the website and get the HTML
url = ""https//www.example.com""
response = requests.get(url)
html = response.content

# Parse the HTML using BeautifulSoup
soup = BeautifulSoup(html, 'html.parser')

# Extract data from tags which contain specific class names
data = soup.find_all('div', {""class"" ""example-class""})",Syntax Error,Recursion
Create a program in Python to print the sum of all the multiples of 3 and 5 below 1000.,,"sum = 0
for i in range(1000):
    if (i % 3 == 0 or i % 5 == 0):
        sum = sum + i

print(sum)","sum = 0
for i in range(1000):
    if (i % 3 == 0 or i % 5 == 0):
        sum = sum + i

print(sum)",correct,File I/O
Create a Python program to generate 10 unique and random integers.,,"import random

def generate_random_ints():
 random_ints = []
 for _ in range(10):
 random_int = random.randint(1, 1000)
 while random_int in random_ints:
 random_int = random.randint(1, 1000)
 random_ints.append(random_int)
 return random_ints","import random

def generate_random_ints():
 random_ints = []
 for _ in range(10):
 random_int = random.randint(1, 1000)
 ",Incomplete Answer,Recursion
"Create a basic Python script that takes in a text string as input, counts the frequency of each word, and prints out the top 5 most frequent words.",,"import collections
import sys

def count_words(text):
 word_counts = collections.Counter(text.split())
 top_five = word_counts.most_common(5)
 for word, count in top_five:
 print(f'{word} occurred {count} times')

if __name__ == '__main__':
 text = sys.stdin.read()
 count_words(text)","import collections
import sys

def count_words(text):
 word_counts = collections.Counter(text.split())
 top_five = word_counts.most_common(5)
 for word, count in top_five:
 print(f'{word} occurred {count} times')

if __name__ == '__main__':
 text = sys.stdin.read()
 count_words(text)",correct,Loops
"Create a Python function that takes two parameters, an array and a search query and returns the indices of the array where the element matches with the search query.","arr = [1, 2, 5, 3, 4]
searchQuery = 3","def searchIndex(arr, searchQuery): 
  indices = []
  for i in range(len(arr)): 
    if arr[i] == searchQuery: 
      indices.append(i) 
      
  return indices
  
arr = [1, 2, 5, 3, 4]
searchQuery = 3

result = searchIndex(arr, searchQuery)
print(result)","def searchIndex(arr, searchQuery): 
  indices = []
  for i in range(len(arr)): 
    if arr[i] == searchQuery: 
      indices.append(i) 
      
  return indices
  
arr = [1, 2, 5, 3, 4]
searchQuery = 3

result = searchIndex(arr, searchQuery)
pritn(result)",Syntax Error,Recursion
"Optimize the following code to improve its runtime:
```Python
for x in range(10):
    sum = 0
    for y in range(10):
        sum += y
    print sum
```",,"sum = 0
for y in range(10):
    sum += y
print sum
for x in range(10):
    print sum","sum = 0
for y in range(10:
    sum += y
print sum
for x in range(10:
    print sum",Syntax Error,Recursion
Develop a Python program to convert an integer from one binary representation to another.,15,"def decimal_to_binary(n): 
    return bin(n).replace(""0b"", """") 
 
def binary_to_decimal(n): 
    return int(n,2) 
 
input_decimal = 15
finding_binary = decimal_to_binary(input_decimal) 
 
result = binary_to_decimal(finding_binary) 
print(result)","def decimal_to_binary(n): 
return bin(n).replace(""0b"", """") 
 
def binary_to_decimal(n): 
return int(n,2) 
 
input_decimal = 15
finding_binary = decimal_to_binary(input_decimal) 
 
result = binary_to_decimal(finding_binary) 
print(result)",Syntax Error,String Manipulation
Write a Python program to generate a digital clock using the curses library.,,"import curses

def main(screen):
 clock = curses.newwin(5, 40, 0, 0)
 clock.box()

 while True:
     clock.addstr(1, 1, time.ctime())
     clock.refresh()
     time.sleep(1)

curses.wrapper(main)","import curses

def main(screen):
 clock = curses.newwin(5, 40, 0, 0)
 clock.box()

 while True:
 ",Incomplete Answer,File I/O
Generate a random string containing only lowercase letters using Python.,,"import string 
import random

def gen_random_string(length): 
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(length)) 

print(gen_random_string(10))","import string 
import random

def gen_random_string(length): 
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(length)) 

print(gen_random_string(10))",correct,String Manipulation
Write a function in Python to generate a histogram from a list of values.,"data = [18, 11, 22, 20, 44, 19, 22, 11, 20]","import matplotlib.pyplot as plt

def generateHistogram(data):
    plt.hist(data, bins='auto')
    plt.title(""Histogram"")
    plt.xlabel('Values')
    plt.ylabel('Number of Occurrences')
    plt.show()

generateHistogram(data)","import matplotlib.pyplot as plt

def generateHistogram(data:
    plt.hist(data, bins='auto'
    plt.title(""Histogram""
    plt.xlabel('Values'
    plt.ylabel('Number of Occurrences'
    plt.show(

generateHistogram(data",Syntax Error,Recursion
Write a Python program to print out the restults of a list of functions,"functions = [max, min, sum]
list = [1,2,3,4,5]","def print_results(functions, list): 
  for func in functions: 
    print(func.__name__ + "": "" + str(func(list)))
    
print_results(functions, list)","def print_results(functions, list): 
  for func in functions: 
    print(name, func.__name__ + "": "" + str(func(list)))
    
print_results(functions, list)",Syntax Error,String Manipulation
Develop a python program that sorts a given list of words in lexicographic order.,"[apple, bike, dog, cat]","# Sort a list of words in lexicographic order
words = [""apple"", ""bike"", ""dog"", ""cat""]

# Sort the list
words.sort()

# Print the list
print(words)

# Output:
# ['apple', 'bike', 'cat', 'dog']","# Sort a list of words in lexicographic order
words = [""apple"", ""bike"", ""dog"", ""cat""]

# Sort the list
words.sort()

# Print the list
print(words)

# Output:
# ['apple', 'bike', 'cat', 'dog']",correct,Loops
Create a Python program that takes a list of tuples as input and generates a dictionary where each tuple is a key-value pair,"[('apple', 'fruit'), ('goat', 'animal'), ('three', 'number')]","my_dict = {
 'apple': 'fruit',
 'goat': 'animal',
 'three': 'number'
}","my_dict = {
 'apple': 'fruit',
 'goat': 'animal',
 'three': 'number'
}",Syntax Error,Loops
Generate a random string of length 10 using the string library of Python.,,"import random
import string

def randomString():
    letters = string.ascii_lowercase
    length = 10
    return ''.join(random.choice(letters) for i in range(length))","import random
import string

def randomString():
    letters = string.ascii_lowercase
    length = 10
    return ''.join(random.choice(letters) for i in range(length))",correct,OOP
Create a program in Python to classify each item in a given list as either an even number or an odd number.,"[5,4,2,7]","def classify(lst):
    result = []
    for item in list:
        if item % 2 == 0:
            result.append(""even"")
        else:
            result.append(""odd"")
    return result","def classify(lst):
    result = []
    for item in list:
        if item % 2 == 0:
       ",Incomplete Answer,File I/O
Write a Python program optimize the following code using functional programming.,"i = 5
while i >= 0:
 print(i)
 i -= 1","from functools import reduce

# initialize the loop
num = 5

# call reduce()
solution = reduce(lambda i, _: i - 1, range(num + 1))

# print the result
print(solution)","from functools import reduce

# initialize the loop
num = 5

# call reduce()
solution = reduce(lambda i, _: i - 1, range(num + 1))

# print the result
print(solution)",correct,File I/O
Write a function to convert camel case string to snake case string.,,"def camel_to_snake(text):
        import re
        str1 = re.sub('(.)([A-Z][a-z]+)', r'\1_\2', text)
        return re.sub('([a-z0-9])([A-Z])', r'\1_\2', str1).lower()","def camel_to_snake(text)
        import re
        str1 = re.sub('(.)([A-Z][a-z]+)', r'\1_\2', text)
        return re.sub('([a-z0-9])([A-Z])', r'\1_\2', str1).lower()",Syntax Error,String Manipulation
Write a Python program to convert all units of temperature in a tuple from Celsius to Fahrenheit.,"temperature = (36.5, 37, 37.5, 37.8)","def celsius_to_fahrenheit(c): 
    return (c * 9/5) + 32

temp_in_Fahrenheit = tuple(map(celsius_to_fahrenheit, temperature)) 
  
print(temp_in_Fahrenheit) # Output: (97.7, 98.6, 99.5, 100.04)","def celsius_to_fahrenheit(c: 
    return (c * 9/5 + 32

temp_in_Fahrenheit = tuple(map(celsius_to_fahrenheit, temperature 
  
print(temp_in_Fahrenheit # Output: (97.7, 98.6, 99.5, 100.04",Syntax Error,OOP
Write a python program to generate all possible strings by combining the characters of two given strings.,"str1 = ""abc""
 str2 = ""xyz""","def combine_strings(str1, str2):
    result = [] 
    for i in range(len(str1)): 
        for j in range(len(str2)): 
            result.append(str1[i] + str2[j]) 
    return result","def combine_strings(str1, str2):
    result = [] 
    for i in range(len(str1)): 
        ",Incomplete Answer,Loops
Construct a function in Python which takes in a string and returns the number of vowels it has.,"string=""hello world""","def countVowels(string):
    
    vowels = 'aeiouAEIOU'
    count = 0

    for char in string:
        if char in vowels:
            count += 1
    
    return count","def countVowels(string):
    
    vowels = 'aeiouAEIOU'
    count = 0

    for char",Incomplete Answer,String Manipulation
Create an optimization algorithm in Python to calculate the minimum distance between two points.,,"def distance(x1, y1, x2, y2):
 return ((x2 - x1)**2 + (y2 - y1)**2)**0.5

def get_minimum_distance(points):
 min_dist = sys.maxsize
 
 for i in range(len(points)):
 for j in range(i+1,len(points)):
 dist = distance(points[i][0], points[i][1], points[j][0], points[j][1])
 
 if dist < min_dist:
 min_dist = dist
 
 return min_dist","def distance(x1, y1, x2, y2):
 return ((x2 - x1)**2 + (y2 - y1)**2)**0.5

def get_minimum_distance(points):
 min_dist = sys.maxsize
 
 for i in range(len(points)):
",Incomplete Answer,OOP
Create a function in Python to solve the following constraint problem.,"Given two arrays of integers, find the number of elements in the intersection of the two sets.","def intersection(arr1,arr2): 
    result = 0
    resultSet = set(arr1) & set(arr2)
    result = len(resultSet)
    return result","def intersection(arr1,arr2) 
    result = 0
    resultSet = set(arr1) & set(arr2)
    result = len(resultSet)
    return result",Syntax Error,Loops
Write a python function to find the sum of an array.,,"def _sum(arr):  
    sum=0
    for i in arr: 
        sum = sum + i      
    return(sum)  ","def _sum(arr):  
    sum=0
    for i in arr: ",Incomplete Answer,OOP
Can you suggest a Python class to store and validate data?,,"class DataStorage:
    def __init__(self, data):
        self.data = data
        self._validate_data()
    
    def _validate_data(self):
        """"""Validates the data stored in the DataStorage object.""""""
        for key, value in self.data.items():
            if not isinstance(value, str):
                raise TypeError('All data must be strings')","class DataStorage:
    def __init__(self, data):
        self.data = data
        self._validate_data()
    
    def _validate_data(self):
        """"""Validates the data stored in the DataStorage object.""""""
        for key, value in self.data.items():
            if not isinstance(value, str):
                raise TypeError('All data must be strings')",Syntax Error,String Manipulation
Create a program in Python to generate a table of multiplication up to 12 x 12.,,"def multiplication_table():
    for i in range(1, 13):
        for j in range(1, 13):
            print(""{:>2}"".format(str(i*j)), end=' ')
        print()

multiplication_table()","def multiplication_table():
    for i in range(1, 13):
        for j in range(1, 13):
            print(""{:>2}"".format(str(i*j)), end=' ')
        print()

multiplication_table()",correct,String Manipulation
Write a function in Python to calculate the Gini coefficient of a dataset.,"Dataset: [1, 1, 1, 2, 3, 4, 4, 5, 6]","def gini(data):
 data_sorted = sorted(data) 
 size = len(data_sorted) 
 cummulative_sum = 0
 max_sum=sum(data_sorted)
 gini_coefficient=0.0
 for i in range(size): 
  cummulative_sum += data_sorted[i]
  gini_coefficient+=(2*cummulative_sum-max_sum-data_sorted[i])/max_sum
 return gini_coefficient/(size - 1)

data = [1,1,1,2,3,4,4,5,6]
print(gini(data))

# Output: 0.3","def gini(data):
 data_sorted = sorted(data) 
 size = len(data_sorted) 
 cummulative_sum = 0
 max_sum=sum(data_sorted)
 gini_coefficient=0.0
 for i in range(size): 
  cummulative_sum += data_sorted[i]
  gini_coefficient+=(2*cummulative_sum-max_sum-data_sorted[i])/max_sum
 return gini_coefficient/(size - 1)

data = [1,1,1,2,3,4,4,5,6]
print(gini(data))

# Output: 0.3",correct,File I/O
Write a Python function to generate the Fibonacci series till n-th term.,,"def Fibonacci(n): 
	a = 0
	b = 1
	if n < 0: 
		print(""Incorrect input"") 
	elif n == 0: 
		return a 
	elif n == 1: 
		return b 
	else: 
		for i in range(2,n): 
			c = a + b 
			a = b 
			b = c 
		return b 

result = Fibonacci(7) 
print(result)","def Fibonacci(n: 
	a = 0
	b = 1
	if n < 0: 
		print(""Incorrect input"" 
	elif n == 0: 
		return a 
	elif n == 1: 
		return b 
	else: 
		for i in range(2,n: 
			c = a + b 
			a = b 
			b = c 
		return b 

result = Fibonacci(7 
print(result",Syntax Error,Recursion
Modify the following Python program to generate random numbers between 1 and 10 instead of 1 and 100.,"import random

for i in range(10):
 num = random.randint(1,100)
 print(num)","import random

for i in range(10):
 num = random.randint(1,10)
 print(num)","import random

for i in range(10):
 num = random.randint(1,10)
 print(num)",correct,File I/O
Create an Python program that computes the median value of an array of numbers.,"arr = [1, 5, 2, 4, 3, 6]","def median(arr):
    arr.sort()
    if len(arr) % 2 != 0:
        return arr[int(len(arr)/2)]
    else:
        return (arr[int(len(arr)/2)] + arr[int(len(arr)/2)-1]) / 2

medianValue = median(arr)
print(medianValue)","def median(arr):
    arr.sort()
    if len(arr) % 2 != 0:
        return arr[int(len(arr)/2)]
    else:
        return (arr[int(len(arr)/2)] + arr[int(len(arr)/2)-1]) / 2

medianValue = median(arr)
print(medianValue)",correct,Recursion
Suggest a code to create a series of Fibonacci numbers in Python.,,"# Function to generate Fibonacci series 
def Fibonacci(n): 
    if n<0: 
        print(""Incorrect Input"") 
    # First two numbers of the series 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
    
# Driver Program
print(Fibonacci(9))
 
# Output: 21","# Function to generate Fibonacci series 
def Fibonacci(n) 
    if n<0 
        print(""Incorrect Input"") 
    # First two numbers of the series 
    elif n==1 
        return 0
    elif n==2 
        return 1
    else 
        return Fibonacci(n-1)+Fibonacci(n-2) 
    
# Driver Program
print(Fibonacci(9))
 
# Output 21",Syntax Error,Loops
Make a Python program to get the factors of a number,,"def get_factors(n): 
    factors = [1]
    for i in range(2, n + 1):
        if (n % i == 0): 
            factors.append(i) 
    return factors","def get_factors(n): 
    factors = [1]
    for i in range(2, n + 1):
   ",Incomplete Answer,Recursion
Generate a unique random number in the range given.,Range: 0 - 100,"A unique random number in the given range can be generated using programming languages such as Python, JavaScript, etc. It will contain code to generate a random number in the given range, and then check if it has already been generated by maintaining a list of all generated numbers.","A unique random number in the given range can be generated using programming languages such as Python, JavaScript, etc. It will contain code to generate a random number in the given range, and then check if it has already been generated by maintaining a list of all generated numbers.",Syntax Error,OOP
Create a Python program to prompt the user for a number and print out the corresponding Fibonacci sequence.,,"def Fibonacci(n): 
 fibonacci_list = [0,1]
 for i in range(2,n): 
 next = fibonacci_list[i-1] + fibonacci_list[i-2] 
 fibonacci_list.append(next) 
 return fibonacci_list[n-1]

num = int(input('Input a number: '))
print(""The corresponding Fibonacci sequence is: "", Fibonacci(num))","def Fibonacci(n): 
 fibonacci_list = [0,1]
 for i in range(2,n): 
 next = fibonacci_list[i-1] + fibonacci_list[i-2] 
 fibonacci_list.append(next) 
 return fibonacci_list[n-1]

num = int(input('Input a number: '))
print(""The corresponding Fibonacci sequence is: "", Fibonacci(num))",correct,Recursion
Construct a Python for loop to find the largest number in a list of given numbers.,"[3, 6, 8, 11, 12]","largest = 0
list = [3, 6, 8, 11, 12]

for i in list:
  if i > largest:
    largest = i

print(largest)","largest = 0
list = [3, 6, 8, 11, 12]

for i in list:
  if i > largest:
    largest = i

print(largest",Syntax Error,File I/O
Convert the following Python dictionary to a JSON string.,"data = {
  ""Name"": ""John"",
  ""Age"": 30,
  ""Cities"": [""New York"", ""London"", ""Paris""]
}","{
    ""Name"": ""John"",
    ""Age"": 30,
    ""Cities"": [""New York"", ""London"", ""Paris""]
}","{
    ""Name"": ""John"",
    ""Age"": 30,
    ""Cities"": [""New York"", ""London"", ""Paris""]
}",correct,OOP
Generate a Python program that searches a large list of strings to find those matching a given pattern.,"list = [""123 abc"", ""456 def"", ""789 ghi"", ""123 jkl"", ""456 mno"", ""789 pqr""]
pattern = ""456*""","search_list = [""123 abc"", ""456 def"", ""789 ghi"", ""123 jkl"", ""456 mno"", ""789 pqr""]
pattern = ""456*""

matches = []
for item in search_list:
  if item.startswith(pattern):
    matches.append(item)

print(matches)","search_list = [""123 abc"", ""456 def"", ""789 ghi"", ""123 jkl"", ""456 mno"", ""789 pqr""]
pattern = ""456*""

match",Incomplete Answer,Loops
Generate a Python function for computing the maximum value of two numbers.,,"def find_max_value(num1, num2):
    if num1 > num2:
        return num1
    else:
        return num2","def find_max_value(num1, num2):
    if num1 > num2:
        return num1
    else:
        return num2",Syntax Error,String Manipulation
Write a python program to find the type and value of a given variable.,x = 10,"def find_type_and_value(x):
    t = type(x)
    v = x
    return t, v","def find_type_and_value(x):
    t = type(x)
    v = x
    return t, v",correct,Loops
Create a Python program that will print out all of the prime numbers between 0 and 100.,,"for num in range(2,101):
 prime = True
 for i in range(2,num):
  if (num%i==0):
   prime = False
 if prime:
  print(num)","for num in range(2,101):
 prime = True
 for i in range(2,num):
  if (num%i==0):
   prime = False
 if prime:
  print(num)",correct,File I/O
Optimize a given quicksort algorithm using Python,,"def quicksort(arr):
 if len(arr) <= 1:
 return arr
 pivot = arr[len(arr) // 2]
 less_than_pivot = [x for x in arr if x < pivot]
 equal_to_pivot = [x for x in arr if x == pivot]
 greater_than_pivot = [x for x in arr if x > pivot]
 return quicksort(less_than_pivot) + equal_to_pivot + quicksort(greater_than_pivot)","def quicksort(arr):
 if len(arr) <= 1:
 return arr
 pivot = arr[len(arr) // 2]
 less_than_pivot = [x for x in arr if x < pivot]
 equal_to_pivot = [x for x in arr if x == pivot]
 greater_than_pivot = [x for x in arr if x > pivot]
 return quicksort(less_than_pivot) + equal_to_pivot + quicksort(greater_than_pivot)",correct,Recursion
Write a Python program to classify the given data into two classes.,,"def classify(data):
    # Fit your model on the data
    model.fit(data)
    # Return the predicted classes
    return model.predict(data)","def classify(data):
    # Fit your model on the data
    model.fit(data)
    # Return the predicted classes
    return model.predict(data)",Syntax Error,File I/O
Construct a Python program that takes a list of words and prints the 3rd most common word in the list?,"words = ['Cat', 'Dog', 'Bird', 'Horse', 'Cow', 'Lion']","import collections
def third_most_common(words):
    count = collections.Counter(words).most_common()
    return count[2][0]
third_most_common(words) # returns 'Bird'","import collections
def third_most_common(words):
    count = collections.Counter(wo",Incomplete Answer,Loops
Write a python program to identify if a string s has matching parentheses,,"def matching_paren(s):
    stack = []
    for char in s:
        if char == '(':
            stack.append(char)
        elif char == ')':
            if len(stack) == 0:
                return False 
            stack.pop()
    
    if len(stack) == 0:
        return True
    else:
        return False","def matching_paren(s):
    stack = []
    for char in s:
        if char == '(':
            stack.append(char)
        elif char == ')':
            if len(stack) == 0:
                return False 
            stack.pop()
    
    if len(stack) == 0:
        return True
    else:
        return False",correct,File I/O
Create a loop in Python to print out all odd numbers from 0 to 10.,,"for i in range(0, 11):
 if i % 2 != 0:
  print(i)","for i in range(0, 11):
 if i % 2 != 0:
  print(i)",correct,Recursion
Develop a Python code to compute the maximum of 3 numbers,"number1 = 33
number2 = 12
number3 = 19","def maximum_of_three(number1,number2,number3):
max_value = number1
if number2 > max_value:
    max_value = number2
if number3 > max_value:
    max_value = number3
return max_value","def maximum_of_three(number1,number2,number3):
max_value = number1
if number2 > max_value:
    max_value = number2
if number3 > max_value:
    max_value = number3
return max_value",correct,OOP
Write a function to find the longest subsequence such that the difference between adjacents is one for the given array.,,"def longest_subseq_with_diff_one(arr, n): 
	dp = [1 for i in range(n)] 
	for i in range(n): 
		for j in range(i): 
			if ((arr[i] == arr[j]+1) or (arr[i] == arr[j]-1)): 
				dp[i] = max(dp[i], dp[j]+1) 
	result = 1
	for i in range(n): 
		if (result < dp[i]): 
			result = dp[i] 
	return result","def longest_subseq_with_diff_one(arr, n: 
	dp = [1 for i in range(n] 
	for i in range(n: 
		for j in range(i: 
			if ((arr[i] == arr[j]+1 or (arr[i] == arr[j]-1: 
				dp[i] = max(dp[i], dp[j]+1 
	result = 1
	for i in range(n: 
		if (result < dp[i]: 
			result = dp[i] 
	return result",Syntax Error,Recursion
Create a for loop in Python to print numbers between 0 and 10.,,"for i in range(11): 
    print(i)","for i in range(11) 
    print(i)",Syntax Error,OOP
Develop a Python function that can detect loops in a given linked list.,Linked List: head -> 1 -> 2 -> 3 -> 4 -> 5,"def detectLoop(head):
    slow_p = head 
    fast_p = head 
    while(slow_p and fast_p and fast_p.next): 
        slow_p = slow_p.next
        fast_p = fast_p.next.next
        if slow_p == fast_p:
            return True
    return False","def detectLoop(head):
    slow_p = head 
    fast_p = head 
    while(slow_p and fast_p and fast_p.next): 
        slow_p = slow_p.next
        fast_p = fast_p.next.next
        if slow_p == fast_p:
            return True
    return False",Syntax Error,File I/O
Create a Python script to populate an array with random numbers from 1-100.,,"import random

def populateArray(array_length):
 array = []
 for i in range(array_length):
 array.append(random.randint(1, 100))
 return array","import random

def populateArray(array_length):
 array = []
 for i in range(array_length):
 array.append(random.randint(1, 100))
 return array",correct,String Manipulation
Optimize a given Python program to shorten its running time.,"def add_list(list_a, list_b):
    res = []
    for a, b in zip(list_a, list_b):
        res.append(a + b)
    return res","def add_list(list_a, list_b):
    return [a + b for a, b in zip(list_a, list_b)]","def add_list(list_a, list_b):
    return",Incomplete Answer,File I/O
Generate a correct Python program to compute the maximum sub array sum,,"def max_sub_array_sum(arr): 
    max_sum = 0
    for i in range(len(arr)): 
        ans = 0
        for j in range(i, len(arr)): 
            ans += arr[j]  
            max_sum = max(max_sum, ans) 
    return max_sum","def max_sub_array_sum(arr): 
    max_sum = 0
    for i in range(len(arr)): 
        ans = 0
        for j in range(i, len(arr)): 
            ans += arr[j]  
            max_sum = max(max_sum, ans) 
    return max_sum",correct,File I/O
Can you create a Python function to interpolate a given string?,"""Hello {{name}}""","def interpolate(str):
    return str.format(name=""world"")

input_str = ""Hello {{name}}""
print(interpolate(input_str)) // Output: ""Hello world""","def interpolate(str)
    return str.format(name=""world"")

input_str = ""Hello {{name}}""
print(interpolate(input_str)) // Output ""Hello world""",Syntax Error,File I/O
"Given a Python dictionary, find the most common value in the dictionary and print it out.","d = {‘python’: 20, ‘java’: 10, ‘c++’: 15, ‘C#’: 15}","from collections import Counter 

d = {‘python’: 20, ‘java’: 10, ‘c++’: 15, ‘C#’: 15}

#Get most common value
data = Counter(d) 
most_common_value = data.most_common(1)[0][0]  

#Print out most common value
print(most_common_value)","from collections import Counter 

d = {‘python’: 20, ‘java’: 10, ‘c++’: 15, ‘C#’: 15}

#Get most common value
data = Counter(d 
most_common_value = data.most_common(1[0][0]  

#Print out most common value
print(most_common_value",Syntax Error,OOP
Write a function in Python that will take in two numbers and return their sum.,"num1 = 5;
num2 = 10;","def sum(num1, num2):
 return num1 + num2

sum(5, 10); // returns 15","def sum(num1, num2):
 return num1",Incomplete Answer,String Manipulation
Implement a Fourier Transform algorithm in Python.,,"import numpy as np

def fourierTransform(signal):
    N = signal.shape[0]
    W = np.exp(2j * np.pi * np.arange(N) / N)
    fourier = np.dot(signal, W)
    return fourier","import numpy as np

def fourierTransform(signal):
    N = signal.shape[0]
    W = np.",Incomplete Answer,OOP
Create a python program to convert a decimal to its binary representation,,"def decimal_to_binary(num):
    if num == 0:
        return 0
    binary = ''
    while num > 0:
        binary = str(num%2) + binary
        num //= 2
    return binary","def decimal_to_binary(num):
    if num == 0:
        return 0
    binary = ''
    wh",Incomplete Answer,String Manipulation
Convert the following JSON to a python dictionary.,"{
    ""name"": ""John"",
    ""age"": 30,
    ""hobbies"": [
        ""soccer"",
        ""playing guitar""
    ]
}","""""""
Convert the following JSON to a python dictionary.
""""""
import json

json_data = {
    ""name"": ""John"",
    ""age"": 30,
    ""hobbies"": [
        ""soccer"",
        ""playing guitar""
    ]
}

python_dict =  json.loads(json.dumps(json_data))
print(python_dict)","""""""
Convert the following JSON to a python dictionary.
""""""
import json

json_data = {
    ""name"": ""John"",
    ""age"": 30,
    ""hobbies"": [
        ""soccer"",
        ""playing guitar""
    ]
}

python_dict =  json.loads(json.dumps(json_data
print(python_dict",Syntax Error,File I/O
Create an HTML form with a submit button to send information to a Python program.,,"<form action=""action.py"" method=""post"">
    <input type=""submit"" value=""Submit"">
</form>","<form action=""action.py"" method=""post"">
    <input type=""submit"" value=""Submit"">
</form>",Syntax Error,String Manipulation
Build a web application for tracking the stock market.,,"# HTML 
<form action="""">
    <input type=""text"" name=""stockSymbol"" placeholder=""Enter a stock symbol"">
    <input type=""submit"">
</form>

# JavaScript 
function trackStock() {
    var stockSymbol = document.querySelector(""input[name=stockSymbol]"").value;
    // code to fetch stock quote and display it  
}

# Python
def getStockQuotes(stockSymbol):
    # code to fetch stock quote using an API 
    return stockQuote","# HTML 
<form action="""">
    <input type=""text"" name=""stockSymbol"" placeholder=""Enter a stock symbol"">
    <input type=""submit"">
</form>

# JavaScript 
function trackStock() {
    var stockSymbol = document.q",Incomplete Answer,String Manipulation
"Rewrite the following code in Python to sort a given array of integers in ascending order.
int arr[] = {2, 3, 4, 1, 5};",,"def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n-1):
        for j in range(0, n-i-1):  
            if arr[j] > arr[j+1] :
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

arr = [2, 3, 4, 1, 5]
arr = bubble_sort(arr)
print(arr)","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n-1):
        for j in range(0, n-i-1):  
            if arr[j] > arr[",Incomplete Answer,String Manipulation
Design a function in Python to find the minimum of three numbers.,"2, -6, 4","def find_min(a, b, c):
    if a<b and a<c:
        return a
    elif b<a and b<c:
        return b
    else:
        return c

min = find_min(2, -6, 4)
print(min)","def find_min(a, b, c):
if a<b and a<c:
    return a
elif b<a and b<c:
    return b
else:
    return c

min = find_min(2, -6, 4)
print(min)",Syntax Error,String Manipulation
Write a Python program to compare two lists of strings and print unique values in each list.,"list1 = [""cat"", ""dog"", ""bird""]
list2 = [""dog"", ""mouse"", ""elephant""]","list1_unique = []
list2_unique = []

for a in list1:
    if a not in list2:
        list1_unique.append(a)
        
for b in list2:
    if b not in list1:
        list2_unique.append(b)

print(""Unique elements in List 1: "", list1_unique)
print(""Unique elements in List 2: "", list2_unique)","list1_unique = []
list2_unique = []

for a in list1:
    if a not in list2:
        list1_unique.append(a)
        
for b in list2:
    if b not in list1:
        list2_unique.append(b)

print(""Unique elements in List 1: "", list1_unique)
print(""Unique elements in List 2: "", list2_unique)",correct,File I/O
Develop a Python program to convert a given list of strings to a single string.,"my_list = ['Today', 'is', 'a', 'good', 'day']","def list_to_string(my_list):
  return ' '.join(my_list)","def list_to_string(my_list):
  return ' '.join(my_list)",correct,File I/O
Write a Python program to generate all unique combinations of two numbers from a list.,"nums = [1, 2, 3, 4]","def generate_combinations(nums): 
    result = [] 
    for x in range(0, len(nums)): 
        for y in range(x + 1, len(nums)): 
            result.append([nums[x], nums[y]]) 
    return result 

nums = [1, 2, 3, 4]

result = generate_combinations(nums)

for item in result:
    print(item)

# output
[1, 2]
[1, 3]
[1, 4]
[2, 3]
[2, 4]
[3, 4]","def generate_combinations(nums): 
    result = [] 
    for x in range(0, len(nums)): 
        for y in range(x + 1, len(nums)): 
            result.append([nums[x], nums[y]]) 
    return result 

nums = [1, 2, 3, 4]

result = generate_combinations(nums)

for item in result:
    print(name, item)

# output
[1, 2]
[1, 3]
[1, 4]
[2, 3]
[2, 4]
[3, 4]",Syntax Error,Recursion
Suggest an web scraping algorithm for the following website.,https://www.example.com/,"A useful strategy for web scraping this site would be to use the Python library requests to make HTTP requests and BeautifulSoup to parse the HTML content. First, you should make an HTTP request to the website, then you should use BeautifulSoup to find the specific elements you are interested in and extract the data.","A useful strategy for web scraping this site would be to use the Python library requests to make HTTP requests and BeautifulSoup to parse the HTML content. First, you should make an HTTP request to the website, then you should use BeautifulSoup to find the specific elements you are interested in and extract the data.",Syntax Error,Loops
Design an algorithm in Python that takes two input arrays and returns true if they have the same elements.,"arr1 = [1, 6, 7, 8]
arr2 = [7, 1, 8, 6]","def is_same_elements(arr1, arr2):
    return set(arr1) == set(arr2)

is_same_elements(arr1, arr2) # return True","def is_same_elements(arr1, arr2):
    return set(arr1) == set(arr2)

is_same_elements(arr1, arr2) # return True",correct,Loops
Write a function to convert a roman numeral to an integer.,,"def roman_to_int(s):
        rom_val = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
        int_val = 0
        for i in range(len(s)):
            if i > 0 and rom_val[s[i]] > rom_val[s[i - 1]]:
                int_val += rom_val[s[i]] - 2 * rom_val[s[i - 1]]
            else:
                int_val += rom_val[s[i]]
        return int_val","def roman_to_int(s):
        rom_val = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
        int_val = 0
        for i in range(len(s)):
            if i > 0 and rom_val[s[i]] > rom_val[s[i - 1]]:
                int_val += rom_val[s[i]] - 2 * rom_val[s[i - 1]]
            else:
                int_val += rom_val[s[i]]
        return int_val",correct,String Manipulation
Develop a Python script to calculate the cosine similarity between two word vectors.,"[0.5, 0.2, 0.7, 0.8]
[0.9, 0.6, 0.1, 0.2]","import numpy as np 
  
a = np.array([0.5, 0.2, 0.7, 0.8]) 
b = np.array([0.9, 0.6, 0.1, 0.2]) 
  
def cos_sim(a, b): 
    dot_product = np.dot(a, b) 
    norm_a = np.linalg.norm(a) 
    norm_b = np.linalg.norm(b) 
    return dot_product / (norm_a * norm_b) 
  
result = cos_sim(a, b) 
print(result)","import numpy as np 
  
a = np.array([0.5, 0.2, 0.7, 0.8]) 
b = np.array([0.9, 0.6, 0.1, 0.2]) 
  
def cos_sim(a, b): 
    dot_product = np.dot(a, b) ",Incomplete Answer,Recursion
"Given a list of integers, write a Python program to filter out all numbers that are divisible by 5.","[11, 23, 7, 20, 44, 16, 9]","def filter_divisible_by_5(numbers):
    res = []
    for num in numbers:
        if num % 5 != 0:
            res.append(num)
    return res

filtered_numbers = filter_divisible_by_5([11, 23, 7, 20, 44, 16, 9])
print(filtered_numbers)","def filter_divisible_by_5(numbers:
    res = []
    for num in numbers:
        if num % 5 != 0:
            res.append(num
    return res

filtered_numbers = filter_divisible_by_5([11, 23, 7, 20, 44, 16, 9]
print(filtered_numbers",Syntax Error,OOP
Create a Python program to convert Fahrenheit to Celsius.,,"def Fahrenheit_to_Celsius(F): 
    return (F - 32) * 5/9
  
print(""Temperature in Celsius = "", 
      Fahrenheit_to_Celsius(100))","def Fahrenheit_to_Celsius(F: 
    return (F - 32 * 5/9
  
print(""Temperature in Celsius = "", 
      Fahrenheit_to_Celsius(100",Syntax Error,OOP
How would you write a program in Python that takes as input an array of integers and prints the sum of its elements?,"[1, 5, 8, -3]","arr = [1,5,8,-3]

# Compute the sum
total = 0
for num in arr:
    total += num

# Print the sum
print(total)","arr = [1,5,8,-3]

# Compute the sum
total = 0
for num in arr:
    total += num

# Print the sum
print(total)",correct,OOP
Convert the following code into equivalent Python 3 function.,"function doubleString(str) {
    return str + str;
}","def doubleString(str):
    return str + str","def doubleString(str):
return str + str",Syntax Error,Loops
Create a Python function that prints a given string n times.,"string: ""Hello World!!""
N: 5","def repeatString(string, n): 
  
    for i in range(n): 
        print(string, end = """") 
  
# Driver Code 
string = ""Hello World!!""
n = 5
repeatString(string, n)","def repeatString(string, n): 
  
    for i in range(n): 
        print(string, en",Incomplete Answer,Loops
Convert the following SQL statement into equivalent Python code,"SELECT *
FROM table
ORDER BY col1, col2 DESC","def query_table(table):
    query = """"""SELECT * 
            FROM %s 
            ORDER BY col1, col2 DESC"""""" % table
    return query","def query_table(table):
    query = """"""SELECT * 
            FROM %s 
            ORDER BY col1, col2 DESC"""""" % table
    return query",Syntax Error,String Manipulation
Write a Python program to delete vowels from a given string.,'My name is John',"def removeVowels(string): 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    new_string = '' 
    for char in string: 
        if char not in vowels: 
            new_string += char 
    return new_string 

string = 'My name is John'
removeVowelString = removeVowels(string) 
print(removeVowelString)","def removeVowels(string): 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    new_string = '' 
    for char in string: 
        if char not in vowels: 
            new_string += char 
    return new_string 

string = 'My name is John'
removeVowelString = removeVowels(string) 
print(removeVowelString)",correct,String Manipulation
Create a Python dictionary to store student and their grades.,"Bob – A
Carol– B
Ted – C
Alice – A","student_grades = {
    ""Bob"": ""A"",
    ""Carol"": ""B"",
    ""Ted"": ""C"",
    ""Alice"": ""A""
}","student_grades = {
    ""Bob"": ""A"",
    ""Car",Incomplete Answer,File I/O
Create a function in Python to print a dictionary in a formatted way,"d={'Name':'Donald Trump', 'Age': 70, 'Profession': 'President'}","def print_dict(d):
    for key, value in d.items():
        print(f""{key}: {value}"")

print_dict(d)

# Output: 
Name: Donald Trump
Age: 70
Profession: President","def print_dict(d):
    for key, value in d.items():
        print(f""{key}: {value}"")

print_dict(d)

# Output: 
Name: Donald Trump
Age: 70
Profession: President",correct,String Manipulation
Develop a Python program that takes a list of numbers as an input and outputs the numbers in the list sorted in ascending order.,"[5, 3, 7, 2, 4, 9, 1]","def sortAscending(list): 
    list.sort() 
    return list
  
# Driver Code 
list = [5, 3, 7, 2, 4, 9, 1]  
print(sortAscending(list)) 

# Output: [1, 2, 3, 4, 5, 7, 9]","def sortAscending(list): 
    list.sort() 
    return list
  
# Driver Code 
list = [5, 3, 7, 2, 4, 9, 1]  
print(sortAscending(list)) 

# Output: [1, 2, 3, 4, 5, 7, 9]",correct,File I/O
Generate a Python code snippet to extract the rate of inflation for a given year from a given JSON.,JSON data with rate of inflation for years 2017-2020,"import json

data = '{""2017"":2.2,""2018"":2.4,""2019"":1.7,""2020"":0.1}'

inflation_data = json.loads(data)
inflation_rate = inflation_data[""2020""] 
print(inflation_rate)  # Output: 0.1","import json

data = '{""2017""2.2,""2018""2.4,""2019""1.7,""2020""0.1}'

inflation_data = json.loads(data)
inflation_rate = inflation_data[""2020""] 
print(inflation_rate)  # Output 0.1",Syntax Error,String Manipulation
Create a function in Python that will take an array of integers and find the two numbers with the largest sum.,"[1, 3, 5, 7, 9]","def findMaxSum(input):
    num1 = -float('inf')
    num2 = -float('inf')
    for num in input:
        if num > num1:
            num2 = num1
            num1 = num
        elif num > num2:
            num2 = num
    return num1 + num2","def findMaxSum(input):
    num1 = -float('inf')
    num2 = -float('inf')
    for num in input:
        if num > num1:",Incomplete Answer,String Manipulation
Generate a Python function that takes an input string and counts the number of occurrence of each letter.,,"def letter_frequency(str):
    freq = {}
    for letter in str:
        if letter in freq:
            freq[letter] += 1
        else:
            freq[letter] = 1
    return freq
        
result = letter_frequency(""Hello World"")
print(result)","def letter_frequency(str):
    freq = {}
    for letter in str:
        if letter in freq:
            freq[letter] += 1
",Incomplete Answer,Recursion
Classify the following Python statement as a type of loop.,"for i in range(10):
    print(i)",for loop.,for loop.,Syntax Error,File I/O
Create a machine learning model in Python that can classify a set of samples into two classes.,"Sample1: 0.8, 0.1, 0.3
Sample2: 1.0, 0.4, 0.7
Sample3: 0.4, 0.5, 0.9
Sample4: 0.2, 0.7, 0.8","import numpy as np
from sklearn.svm import SVC

X = np.array([[0.8, 0.1, 0.3],
            [1.0, 0.4, 0.7],
            [0.4, 0.5, 0.9],
            [0.2, 0.7, 0.8]])

y = np.array([0, 1, 0, 1])

model = SVC()
model.fit(X, y)","import numpy as np
from sklearn.svm import SVC

X = np.array([[0.8, 0.1, 0.3],
            [1.0, 0.4, 0.7],
    ",Incomplete Answer,File I/O
Create a Python program that convert a given string to a list of integers.,,"def to_int_list(s):
    return [int(x) for x in s.split(',')]","def to_int_list(s):
    return",Incomplete Answer,Recursion
Generate a Python function to find the sum of the digits in a given number.,,"def sum_of_digits(n):
  result = 0
  while (n > 0):
    result += n % 10;
    n //= 10;
  return result","def sum_of_digits(n):
  result = 0
  while (n > 0):
    result += n % 10;
    n //= 10;
  return result",Syntax Error,OOP
"Write a Python program to calculate the sum of a series of odd numbers between the two pixel, with the first number being 1.",pixel1 = 25; pixel2 = 50,"sum = 455
  
total = 0
for i in range(pixel1, pixel2):
    if i % 2 != 0:
        total += i
print('sum =', total)","sum = 455
  
total = 0
for i in range(pixel1, pixel2)
    if i % 2 != 0
        total += i
print('sum =', total)",Syntax Error,String Manipulation
Write a Python script to filter out all words containing 10 or more characters.,"""This is a sample sentence""","sentence = ""This is a sample sentence""

words = sentence.split()
long_words = [word for word in words if len(word) > 10]

print(long_words)","sentence = ""This is a sample sentence""

words = sentence.split(
long_words = [word for word in words if len(word > 10]

print(long_words",Syntax Error,Recursion
Rewrite the following JavaScript code in Python.,"function addNumbers(x, y) {
    return x + y;
}","def addNumbers(x, y):
    return x + y","def addNumbers(x, y",Incomplete Answer,Loops
"Create a python script to categorize a given text into three categories: positive, negative and neutral.",,"import re

def categorize_text(text):
    """"""Categorizes the given text into positive, negative or neutral.""""""
    text = text.lower()
    if re.search(r""\b(happy|glad|fun)\b"", text):
        return ""positive""
    elif re.search(r""\b(sad|angry|fearful)\b"", text):
        return ""negative""
    else:
        return ""neutral""","import re

def categorize_text(text):
    """"""Categorizes the given text into positive, negative or neutral.""""""
    text = text.lower()
    if re.search(r""\b(happy|glad|fun)\b"", text):
        return ""positive""
    elif re.search(r""\b(sad|angry|fearful)\b"", text):
        return ""negative""
    else:
        return ""neutral""",correct,Recursion
Generate a Fibonacci sequence from 0 to 10 using Python.,,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  

# Driver Code 
print(fibonacci(10))","def fibonacci(n): 
a = 0
b = 1
if n < 0: 
    print(""Incorrect input"") 
elif n == 0: 
    return a 
elif n == 1: 
    return b 
else: 
    for i in range(2,n): 
        c = a + b 
        a = b 
        b = c 
    return b 
  

# Driver Code 
print(fibonacci(10))",Syntax Error,File I/O
Implement a Python program to check if a given number is an Armstrong Number,,"def checkArmstrong(num):
    temp = num 
    res = 0
    while temp > 0: 
       digit = temp % 10
       res = res + digit ** 3
       temp = temp // 10
    
    if num == res: 
        return f'{num} is an Armstrong Number'
    else:
        return f'{num} is not an Armstrong Number'","def checkArmstrong(num):
    temp = num 
    res = 0
    while temp > 0: 
       digit = temp % 10
       res = res + digit ** 3
       temp = ",Incomplete Answer,Recursion
Generate a Python code for crawling a website for a specific type of data.,"website: www.example.com 
data to crawl: phone numbers","import requests
import re

def crawl_website_for_phone_numbers(website):
    response = requests.get(website)
    phone_numbers = re.findall('\d{3}-\d{3}-\d{4}', response.text)
    return phone_numbers
    
if __name__ == '__main__':
    print(crawl_website_for_phone_numbers('www.example.com'))","import requests
import re

def crawl_website_for_phone_numbers(website):
    response = requests.get(website)
    phone_numbers = re.findall('\d{3}-\d{3}-\d{4}', response.text)
    return phone_numbers
    
if __name__ == '__main__':
    print(crawl_website_for_phone_numbers('www.example.com'))",correct,File I/O
Determine the output of the given Python program.,"list = [1, 2, [3,4], [5,[100, 200,['hello']], 23, 11], 1, 7]

result = list[3][1][2][0]",hello,hello,Syntax Error,Loops
Create an algorithm in Python to calculate the mean of a given list.,"[1,2,3,4]","def calculate_mean(numbers):
    # Get the length of the list
    numbers_len = len(numbers)
    # Sum up all the elements in the list
    total = 0
    for num in numbers:
        total += num
    # Divide the total with the length of the list
    mean = total / numbers_len
    # Return the mean
    return mean

mean = calculate_mean([1,2,3,4])
print(mean)","def calculate_mean(numbers):
    # Get the length of the list
    numbers_len = len(numbers)
    # Sum up all the elements in the list
    total = 0
    for num in numbers:
        total += num
    # Divide the total with the length of the list
    mean = total / numbers_len
    # Return the mean
    return mean

mean = calculate_mean([1,2,3,4])
print(name, mean)",Syntax Error,File I/O
Construct an algorithm in Python to calculate the area of a triangle given its sides.,"3
4
5","def areaTriangle(a, b, c): 
    """"""
    Calculate the area of a triangle.
    Parameters: 
    a (float): length of side a
    b (float): length of side b
    c (float): length of side c
    """"""
    s = (a + b + c) / 2.0
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
    return area
 
a = 3
b = 4
c = 5
 
area = areaTriangle(a, b, c)
print(""The area of the triangle is"", area)  # 6.0","def areaTriangle(a, b, c) 
    """"""
    Calculate the area of a triangle.
    Parameters 
    a (float) length of side a
    b (float) length of side b
    c (float) length of side c
    """"""
    s = (a + b + c) / 2.0
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
    return area
 
a = 3
b = 4
c = 5
 
area = areaTriangle(a, b, c)
print(""The area of the triangle is"", area)  # 6.0",Syntax Error,OOP
"Create a python program that prints ""Hello World"" if the user inputs the letter 'y'",,"user_input = input(""Do you want to print 'Hello World'? (y/n): "")

if user_input == 'y':
    print(""Hello World"")","user_input = input(""Do you want to print 'Hello World'? ",Incomplete Answer,Loops
Write a function in Python to remove duplicate elements from a given list.,,"def remove_duplicates(List): 
    unique_list = [] 
      
    for x in List: 
        if x not in unique_list: 
            unique_list.append(x) 
 
    return unique_list","def remove_duplicates(List): 
    unique_list = [] 
      
    for x in List: 
        if x not in unique_list: 
            unique_list.append(x) 
 
    return unique_list",correct,Loops
Generate a code snippet in Python to tokenize a given string.,,"def tokenize(s):
  tokens = []
  current_token = """"
  for c in s:
    if c.isspace():
      tokens.append(current_token)
      current_token = """"
    else:
      current_token += c
  if current_token:
    tokens.append(current_token)
  return tokens","def tokenize(s):
  tokens = []
  current_token = """"
  for c in s:
    if c.isspace():
      tokens.append(current_token)
      current_token = """"
    else:
      current_token += c
  if current_token:
    tokens.append(current_token)
  return tokens",correct,OOP
Compose a Python program to print the first hundred odd numbers.,Not appliable,"# declaring an empty list
odds = []

# looping for a range of 1 to 100
for n in range(1,101):
# check if the number is odd
 if n % 2 != 0:
  # add the odd numbers to the list
  odds.append(n)

# print the list
print(odds)","# declaring an empty list
odds = []

# looping for a range of 1 to 100
for n in range(1,101):
# check if the number is odd
 if n % 2 != 0:
  # add the odd numbers to the list
  odds.append(n)

# print the list
print(name, odds)",Syntax Error,Loops
Write a Python function that takes a list of strings and returns the concatenation of all the elements with a separator/delimiter.,"strings = [""Sample"",""Text"",""Hello""]","def concatenate_strings(strings, separator):
 return separator.join(strings)","def concatenate_strings(strings, separator):
 return separator.join(strings)",Syntax Error,OOP
Create a Python program that outputs the sum of all the elements in a given array.,"[3, 5, 6]","def sum_of_array(arr):
    result = 0
    for x in arr:
        result += x
    return result

sum = sum_of_array([3, 5, 6])
print(sum)","def sum_of_array(arr):
    result = 0
    for x in arr:
        result += x
    return result

sum = sum_of_array([3, 5, 6])
print(name, sum)",Syntax Error,File I/O
Write a Python function that takes in two parameters of type list and returns the sum of all the elements in the two lists.,"list1 = [1, 2, 3, 4]
list2 = [5, 6, 7, 8]","def list_sum(list1, list2):
 # initialize sum with 0
 total_sum = 0 
 
 # iterate over each element in list1
 for num in list1: 
     # add to sum
     total_sum += num 

 # iterate over each element in list2
 for num in list2: 
     # add to sum
     total_sum += num 

return total_sum","def list_sum(list1, list2):
 # initialize sum with 0
 total_sum = 0 
 
 # iterate over each element in list1
 for num in list1: 
 # add to sum
 total_sum += num 

 # iterate over each element in list2
 for num in list2: 
 # add to sum
 total_sum += num 

return total_sum",Syntax Error,Loops
Construct a python function that takes a list of numbers and returns a list of the sum of the squares of the first n numbers.,"[1,2,3]","def sum_of_squares(numbers):
    squares_sum = []
    for i in range(len(numbers)):
        squares_sum.append(sum([num**2 for num in numbers[:i+1]]))
    return squares_sum","def sum_of_squares(numbers):
    squares_sum = []
    for i in range(len(numbers)):
  ",Incomplete Answer,Loops
How can you write a python program to calculate the number of days between two given dates?,,"def calculate_days_between(date1, date2):
    """"""This function takes two dates as input and calculates the number of days between them.
    
    Args:
        date1 (datetime): The first date.
        date2 (datetime): The second date.
    
    Returns:
        int: The number of days between the two dates.
    """"""
    delta = date2 - date1
    return delta.days","def calculate_days_between(date1, date2)
    """"""This function takes two dates as input and calculates the number of days between them.
    
    Args
        date1 (datetime) The first date.
        date2 (datetime) The second date.
    
    Returns
        int The number of days between the two dates.
    """"""
    delta = date2 - date1
    return delta.days",Syntax Error,Loops
Write a function in Python that finds the most frequent item in a given sequence.,"sequence = [1, 2, 3, 4, 5, 1, 1, 2]","def most_frequent(sequence): 
    return max(set(sequence), key = sequence.count) 

print(most_frequent(sequence))","def most_frequent(sequence): 
    return max(set(sequence), key = sequence.count) 

print(most_frequent(sequence))",correct,String Manipulation
Develop a Python program to implement the FizzBuzz task.,,"def fizzbuzz(n):
  for num in range(1, n+1):
    if num % 3 == 0 and num % 5 == 0:
      print(""FizzBuzz"")
    elif num % 3 == 0:
      print(""Fizz"")
    elif num % 5 == 0:
      print(""Buzz"")
    else:
      print(num)","def fizzbuzz(n):
  for num in range(1, n+1):
    if num % 3 == 0 and num % 5 == 0:
      print(""FizzBuzz"")
    elif num % 3 == 0:
      print(""Fizz"")
    elif num % 5 == 0:
      print(""Buzz"")
    else:
      print(num)",correct,OOP
Write a Python program that sorts a list of integers from smallest to largest.,"[2,7,3,9,0,4]","def sort_list(input_list):
    sorted_list = sorted(input_list)
    return sorted_list

input_list = [2,7,3,9,0,4]

output = sort_list(input_list)
print(output)","def sort_list(input_list):
    sorted_list = sorted(input_list)
    return sorted_list

input_list = [2,7,3,9,0,4]

output = sort_list(input_list)
print(output)",correct,OOP
Write a Python program to print the following pattern in each row.,,"for i in range(1, 5):
    for j in range(1, i+1):
        print(i, end="" "")
    print()","for i in range(1, 5):
    for j in range(1, i+1):
        print(i, end="" "")
    print()",correct,Loops
Write a python function to interchange first and last elements in a given list.,,"def swap_List(newList): 
    size = len(newList) 
    temp = newList[0] 
    newList[0] = newList[size - 1] 
    newList[size - 1] = temp   
    return newList ","def swap_List(newList): 
    size = len(newList) 
    temp = newList[0] 
    ne",Incomplete Answer,OOP
"Edit the Python program given below, so that it computes the factorial of the given number n.","def factorial(n):	
    # TODO","def factorial(n):	
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)","def factorial(n)	
    if n == 0
        return 1
    else
        return n * factorial(n-1)",Syntax Error,String Manipulation
Generate a code in Python that sorts the given list of numbers,"lst = [3, 4, 15, 1, 0]","def sort_list(lst): 
    lst.sort() 
    return lst 
  
# Driver code 
lst = [3, 4, 15, 1, 0] 
sorted_list = sort_list(lst) 
  
print(""Sorted list:"", sorted_list)","def sort_list(lst): 
    lst.sort() 
    return lst 
  
# Driver code 
lst = [3, 4, 15, 1, 0] 
sorted_list = sort_list(lst) 
  
print(""Sorted list:"", sorted_list)",correct,Recursion
"Given a list of integers as input, write a Python code snippet to find the largest number.","[9, 2, 6, 3, -5, 5, 7]","max_num = -float('inf')
for num in [9, 2, 6, 3, -5, 5, 7]:
    if num > max_num:
        max_num = num
print(max_num)","max_num = -float('inf')
for num in [9, 2, 6, 3, -5, 5, 7]:",Incomplete Answer,String Manipulation
Optimize a given Python program to make it faster.,"def optiFunc(n): 
    result = 0
    for i in range(n): 
        result += i 
    return result","def optiFunc(n):
    result = n * (n-1) / 2 
    return result","def optiFunc(n):
    result = n",Incomplete Answer,Loops
Generate Python code to sum up all numbers up to a given number n,,"def sum_to_n(n):

    #edge cases
    if n < 0: 
        return 0
    if n == 0:
        return 0

    #binominal sum formula 
    return (n * (n+1)) / 2 

print(sum_to_n(10))","def sum_to_n(n):

#edge cases
if n < 0: 
    return 0
if n == 0:
    return 0

#binominal sum formula 
return (n * (n+1)) / 2 

print(sum_to_n(10))",Syntax Error,OOP
Construct a script in Bash that can install a given software.,Python 3.8.5,"#!/bin/bash

# Download latest version of Python
curl -O https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz

# Extract the tgz file
tar -xzf Python-3.8.5.tgz

# Move into the Python directory
cd Python-3.8.5

# Run the configure script
./configure

# Compile and install
make
make install","#!/bin/bash

# Download latest version of Python
curl -O https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz

# Extract the tgz file
tar -xzf ",Incomplete Answer,Loops
Write a Python program to validate a given IP address.,,"def is_valid_ip(ip):
    ip = ip.split('.')
    if len(ip) != 4:
        return False
    for i in ip:
        if not i.isdigit():
            return False
        i = int(i)
        if i < 0 or i > 255:
            return False
    return True","def is_valid_ip(ip):
ip = ip.split('.')
if len(ip) != 4:
    return False
for i in ip:
    if not i.isdigit():
        return False
    i = int(i)
    if i < 0 or i > 255:
        return False
return True",Syntax Error,File I/O
Create a Python program to convert degrees Celsius to degrees Fahrenheit given a value in Celsius.,Value: 32,"# Function to convert degrees Celsius to degrees Fahrenheit
def celsius_to_fahrenheit(celsius):
 return (celsius * 9/5) + 32

# Input Celsius value
celsius = 32

# Calculate Fahrenheit
fahrenheit = celsius_to_fahrenheit(celsius)
print(f'{celsius} Celsius is {fahrenheit} Fahrenheit')","# Function to convert degrees Celsius to degrees Fahrenheit
def celsius_to_fahrenheit(celsius):
 return (celsius * 9/5) + 32

# Input Celsius value
celsius = 32

# Calculate Fahrenheit
fahrenheit = celsius_to_fahrenheit(celsius)
print(f'{celsius} Celsius is {fahrenheit} Fahrenheit')",correct,File I/O
Write a loop in Python to display the following pattern,Noinput,"for i in range(1, 6):
    for j in range(i):
        print(""*"", end="" "")
    print()","for i in range(1, 6):
    for j in range(i):
        print(""*"", end="" "")
    print()",correct,Loops
Write Python code to generate a random letter from A to Z.,,"import random
 
def generate_random_letter():
    alphabet = list(map(chr, range(65, 91)))
    random_letter = random.choice(alphabet)
 
    return random_letter
 
random_letter = generate_random_letter()
print(random_letter)","import random
 
def generate_random_letter():
    alphabet = list(map(chr, range(65, 91)))
    random_letter = random.choice(alphabet)
 
    return random_letter
 
random_letter = generate_random_letter()
print(random_letter)",correct,Recursion
Write a python function to count the number of lists in a given number of lists.,,"def count_list(input_list): 
    return len(input_list)","def count_list(input_list): 
    return len(input_list)",correct,Loops
Design a class in Python to represent a grocery store.,,"class GroceryStore: 
    def __init__(self, name, products, location): 
        self.name = name 
        self.products = products
        self.location = location 
  
    def get_all_products(self): 
        return self.products
  
    def get_location(self): 
        return self.location","class GroceryStore: 
    def __init__(self, name, products, location): 
        self.name = name 
        self.products = products
        self.location = location 
  
    def get_all_products(self): 
        return self.products
  
    def get_location(self): 
        return self.location",correct,OOP
Create a Python script to find the first ten perfect squares.,,"nums = [x*x for x in range(1,11)] 
print(""The first 10 perfect squares are: "", nums)","nums = [x*x for x in range(1,11)] 
print(""",Incomplete Answer,File I/O
Create a Python program to find all the factors of a given number.,12,"def factors(n):
  factor_list = []
  for i in range(1, n+1):
    if n % i == 0:
      factor_list.append(i)
  return factor_list

n = 12
result = factors(n)
print(""Factors of %d are %s"" %(n, result))","def factors(n):
  factor_list = []
  for i in range(1, n+1):
    if n % i == 0:
      factor_list.a",Incomplete Answer,File I/O
Generate 3 random numbers within the specified range using Python.,"[0, 10]","import random

random_numbers = random.sample(range(0, 10), 3) 
print(random_numbers)","import random

random_numbers = random.sample(range(0, 10), 3) 
print(random_numbers)",correct,Loops
Create a script in Python that takes a list of strings and prints the string with the longest length.,"['hello', 'world', 'abracadabra']","def longest_string(str_list):
    longest = str_list[0]
    for s in str_list:
        if len(s) > len(longest):
            longest = s
    print(longest)
    
longest_string(['hello', 'world', 'abracadabra'])","def longest_string(str_list):
    longest = str_list[0]
    for s in str_list:
        if len(s) > len(longest):
            longest = s
    print(longest)
    
longest_string(['hello', 'world', 'abracadabra'])",correct,File I/O
Write a python program for text processing tasks such as to reverse the text of every line.,"line1:  Welcome to Text Processing
line2: This is fun","line1: emocleW ot gnirtS ecnerefxeT
line2: sI si nuf","line1 emocleW ot gnirtS ecnerefxeT
line2 sI si nuf",Syntax Error,Recursion
Generate a code to create a scatterplot using the Seaborn library in Python.,,"""""""
Generate a code to create a scatterplot using the Seaborn library in Python
""""""

import pandas as pd
import seaborn as sns

#load the sample datasets
data1 = pd.read_csv('sample_data1.csv')
data2 = pd.read_csv('sample_data2.csv')

# Create a Scatterplot Using Seaborn
sns.relplot(x=""data1_x"", y=""data1_y"", data=data1); 
sns.relplot(x=""data2_x"", y=""data2_y"", data=data2);","""""""
Generate a code to create a scatterplot using the Seaborn library in Python
""""""

import pandas as pd
import seaborn as sns

#load the sample datasets
data1 = pd.read_csv('sample_data1",Incomplete Answer,OOP
Create a function in Python to take two numerical values and return true if one is divisible by the other.,"number1 = 10
number2 = 3","def isDivisible(a, b):
  return a % b == 0

print(isDivisible(number1, number2)) #True","def isDivisible(a, b):
  return a % b == 0

print(isDivisible(number1, number2)) #True",correct,Recursion
Write an if-else statement for a simple weather notification system in Python.,"If the temperature is between 60 and 75 degrees, print a message that it is “Perfect Weather"".","if 60 <= temperature <= 75:
   print(""It's Perfect Weather!"")
else:
   print(""The weather is not so great."")","if 60 <= temperature <= 75:
   print(""It's Perfect Weather!"")
else:
   print(""The weather is not so great."")",correct,File I/O
Write a python program to connect to a database and fetch the user details.,,"import psycopg2

conn = psycopg2.connect(""host=localhost dbname=mydb user=myuser password=mypassword"")

cur = conn.cursor()

cur.execute(""SELECT * FROM users"")

rows = cur.fetchall()

for row in rows:
    user_id = row[0]
    username = row[1]
    user_email = row[3]","import psycopg2

conn = psycopg2.connect(""host=localhost dbname=mydb user=myuser password=mypassword"")

cur = conn.cursor()

cur.exec",Incomplete Answer,File I/O
Write a Python script that takes a list of strings as input and returns a new list with all the duplicates eliminated.,"[""Apple"", ""Pear"", ""Apple"", ""Banana"", ""Pear""]","def remove_duplicates(input_list):
    unique_list = []
    for item in input_list:
        if item not in unique_list:
            unique_list.append(item)
    
    return unique_list

my_list = [""Apple"", ""Pear"", ""Apple"", ""Banana"", ""Pear""]
print(remove_duplicates(my_list))","def remove_duplicates(input_list):
    unique_list = []
    for item in input_list:
        if item not in unique_list:
            uniqu",Incomplete Answer,Recursion
Develop a basic web crawler using Python language.,,"import requests
from bs4 import BeautifulSoup

def get_links(url):
    # Fetch the page
    res = requests.get(url)
    # Parse the HTML
    html_doc = res.text
    soup = BeautifulSoup(html_doc, 'html.parser')
    
    # Extract all links from the page
    links = []
    for link in soup.find_all('a'):
        links.append(link.get('href'))
    return links","import requests
from bs4 import BeautifulSoup

def get_links(url):
    # Fetch the page
    res = requests.get(url)
    # Parse the HTML
    html_doc = res.text
    soup = Beautifu",Incomplete Answer,OOP
Modify the Python program below to make it more efficient.,"def foo(lst):
    minimum = lst[0]
    for n in lst:
        if minimum > n:
            minimum = n
    return minimum","def foo(lst):
    minimum = min(lst)
    return minimum","def foo(lst:
    minimum = min(lst
    return minimum",Syntax Error,Recursion
Create a Python script that takes a string and prints the first character of every word in the given string.,"""This is a test string""","def first_characters_of_words(string):
    words = string.split("" "") 
    characters = [word[0] for word in words] 
    return """".join(characters)

print(first_characters_of_words(""This is a test string"")) # Tiat","def first_characters_of_words(string):
    words = string.split("" "") 
    characters = [word[0] for word in words] 
    return """".join(characters)

print(first_characters_of_words(""This is a test string"")) # Tiat",correct,File I/O
Generate a python program to convert numbers in between 1 to 10 to their respective word form.,,"# Dictionary of numbers and words
DAYS = {
    1:'one',
    2:'two',
    3:'three',
    4:'four',
    5:'five',
    6:'six',
    7:'seven',
    8:'eight',
    9:'nine',
    10:'ten',
}

def num_to_str(num):
    if num in DAYS:
        return DAYS[num]
    else:
        return ""invalid number""

if __name__ == '__main__':
    num = 5
    print(num_to_str(num))","# Dictionary of numbers and words
DAYS = {
    1:'one',
    2:'two',
    3:'three',
    4:'four',
    5:'five',
    6:'six',
    7:'seven',
    8:'eight',
    9:'nine',
    10:'ten",Incomplete Answer,OOP
Create a script to set up a development environment for python.,,"# install python
sudo apt-get install python

# install pip
sudo apt-get install python-pip

# install virtualenv
pip install virtualenv

# create a virtual environment
virtualenv myenv

# activate the virtual environment
source myenv/bin/activate

# install the dependencies
pip install -r requirements.txt

# deactivate the virtual environment
deactivate","# install python
sudo apt-get install python

# install pip
sudo apt-get install python-pip

# install virtualenv
pip install virtualenv

# create a virtual environment
virtualen",Incomplete Answer,Loops
Write a Python program to find all numbers divisible by 7 but not a multiple of 5 between two given numbers,,"def div_by_7_not_5(start, end):
    result = []
    for num in range(start, end + 1):
        if (num % 7 == 0) and (num % 5 != 0):
            result.append(num)
    return result","def div_by_7_not_5(start, end):
    result = []
    for num in range(start, end + 1):
        if (num % 7 == 0) and (num % 5 != 0):
            result.append(num)
    return result",correct,String Manipulation
Create a Python program to calculate the sum of the numbers in a given list up to a given position in the list.,"[1,3,5,4,7], Position = 3","def sum_list_position(list, position):
 sum = 0
 for i in range(position+1):
 sum += list[i]
 return sum
 
list = [1,3,5,4,7]
position = 3

print(sum_list_position(list,position)) # prints 9","def sum_list_position(list, position):
 sum = 0
 for i in range(position+1):
 sum += list[i]
 return sum
 
list = [1,3,5,4,7]
position = 3

pritn(sum_list_position(list,position)) # pritns 9",Syntax Error,Loops
Write a python function to find the largest prime factor of a given number.,,"import math 
def max_Prime_Factors (n): 
    maxPrime = -1 
    while n%2 == 0: 
        maxPrime = 2
        n >>= 1    
    for i in range(3,int(math.sqrt(n))+1,2): 
        while n % i == 0: 
            maxPrime = i 
            n = n / i 
    if n > 2: 
        maxPrime = n  
    return int(maxPrime)","import math 
def max_Prime_Factors (n): 
    maxPrime = -1 
    while n%2 == 0: 
        maxPrime = 2
        n >>= 1    
    for i in range(3,int(math.sqrt(n))+1,2): 
        while n % i == 0: 
            maxPrime = i 
            n = n / i 
    if n > 2: 
        maxPrime = n  
    return int(maxPrime)",Syntax Error,String Manipulation
Generate a Python program to generate random numbers between 1 and 10.,,"import random
number = random.randint(1, 10)
print (number)","import random
number = random.randint(1, 10)
print (number)",correct,OOP
Design an algorithm in Python to generate the nth number in the Fibonacci sequence.,,"def fibonacci(n):
if n==0: return 0
elif n==1: return 1
else:
 return fibonacci(n-2) + fibonacci(n-1)","def fibonacci(n):
if n==0: return 0
elif n==1: return 1
else:
 return fibonacci(n-2) + fibonacci(n-1)",correct,String Manipulation
Write a Python function to calculate the distance between two points given their coordinates.,"coord1 = (3, 2) 
 coord2 = (8, 10)","def Euclidean_distance(coord1, coord2):
    x1, y1 = coord1
    x2, y2 = coord2

    return ((x2-x1)**2 + (y2-y1)**2)**0.5","def Euclidean_distance(coord1, coord2:
    x1, y1 = coord1
    x2, y2 = coord2

    return ((x2-x1**2 + (y2-y1**2**0.5",Syntax Error,String Manipulation
Develop a python program that prints out all the prime numbers until a given number n.,,"def is_prime(n): 
        for i in range(2,int(n ** 0.5)+1):
            if (n % i) == 0:
                return False
        return True

def print_prime_numbers_up_to_n(n):
    for num in range(2, n + 1): 
        if is_prime(num):
            print(num) 

print_prime_numbers_up_to_n(n)","def is_prime(n: 
        for i in range(2,int(n ** 0.5+1:
            if (n % i == 0:
                return False
        return True

def print_prime_numbers_up_to_n(n:
    for num in range(2, n + 1: 
        if is_prime(num:
            print(num 

print_prime_numbers_up_to_n(n",Syntax Error,Recursion
Write a command line program in Python for sorting a list of integers with the quick sort algorithm.,"[9, 4, 7, 3, 2, 1, 8, 5, 6]","def quickSort(arr):
 if len(arr) <= 1:
 return arr

 pivot = arr[len(arr) // 2]
 left = [x for x in arr if x < pivot]
 middle = [x for x in arr if x == pivot]
 right = [x for x in arr if x > pivot]

 return quickSort(left) + middle + quickSort(right)

arr = [9, 4, 7, 3, 2, 1, 8, 5, 6]

print(quickSort(arr)) # prints [1, 2, 3, 4, 5, 6, 7, 8, 9]","def quickSort(arr):
 if len(arr) <= 1:
 return arr

 pivot = arr[len(arr) // 2]
 left = [x for x in arr if x < pivot]
 middle = [x for x in arr if x == pivot]
 right = [x for x in arr if x > pivot]

 return quickSort(left) + middle + quickSort(right)

arr = [9, 4, 7, 3, 2, 1, 8, 5, 6]

print(quickSort(arr)) # prints [1, 2, 3, 4, 5, 6, 7, 8, 9]",correct,File I/O
Create a Python program to simulate a dice roll and print the result.,,"import random

# Simulate a dice roll
result = random.randint(1,6)
print(""Result of the dice roll:"", result)","import random

# Simulate a dice roll
result = random.randint(1,6)
print(name, ""Result of the dice roll:"", result)",Syntax Error,Loops
Design an algorithm (in Python) to determine whether a given number is even or odd.,,"def is_even(number): 
    if(number % 2 == 0): 
        return True 
    else: 
        return False","def is_even(number: 
    if(number % 2 == 0: 
        return True 
    else: 
        return False",Syntax Error,Recursion
Generate a list of phone numbers in python given a start and end number.,"Start number: 12345
End number: 12354","phone_numbers = [str(i) for i in range(12345, 12355)]","phone_numbers = [str(i) for i in range(12345, 12355)]",Syntax Error,Recursion
Can you provide a Python code for linear search on a given list of numbers?,"[4,3,1,7,9,6]","def linearSearch(list, num):
    for i in range(len(list)):
        if list[i] == num:
            return i
    return -1

list = [4,3,1,7,9,6]
num = 9
print(linearSearch(list, num))","def linearSearch(list, num):
    for i in range(len(list)):
        if list[i] == num:
            return i
    return -1

list = [4,3,1,7,9,6]
num = 9
print(linearSearch(list, num))",correct,Loops
Create a Python program to determine the total sum of all elements of a list.,"[1, 2, 3, 4]","def calculate_sum_of_list(arr):
    total_sum = 0
    for item in arr:
        total_sum += item
    return total_sum

list1 = [1, 2, 3, 4]
sum_of_list = calculate_sum_of_list(list1)
print(sum_of_list)","def calculate_sum_of_list(arr):
    total_sum = 0
    for item in arr:
        total_sum += item
    return total_sum

list1 = [1, 2, 3, 4]
sum_of_list = calculate_sum_of_list(list1)
print(sum_of_list)",correct,File I/O
Identify the best syntax to use in Python to add two numbers.,,"# Python syntax to add two numbers
result = number_1 + number_2","# Python syntax to add two numbers
result = number_1 + number_2",correct,OOP
Generate a Python code snippet to compute the sum of the digits of a given number.,,"def sum_digits(num):
    summation = 0
    while num > 0:
        summation += num % 10
        num = num // 10
    return summation","def sum_digits(num):
    summation = 0
    while num > 0:
        summation += num % 10
        num = num // 10
    return summation",Syntax Error,File I/O
Give a generic example for try-except-finally block in Python.,,"try:
    # code goes here
    result = my_function()
except Exception as e:
    # deal with errors
    print(""Error encountered: {}"".format(e))
finally:
    # execute this block of code regardless
    print(""Done!"")","try:
    # code goes here
    result = my_function()
except Exception as e:
    # deal with errors
    prin",Incomplete Answer,String Manipulation
Implement a function in Python to flatten an array of arbitrarily nested arrays of integers into a flat array of integers,"[[1,2,[3]],4]","def flatten_array(my_array):
    flattened_array=[]
    for element in my_array:
        if type(element) == int:
            flattened_array.append(element)
        else:
            flattened_array+=flatten_array(element)
    return flattened_array

print(flatten_array([[1,2,[3]],4]))","def flatten_array(my_array):
    flattened_array=[]
    for element in my_array:
        if type(element) == int:
            flattened_array.append(element)
        else:
            flattened_array+=flatten_array(element)
    return flattened_array

print(flatten_array([[1,2,[3]],4]))",correct,File I/O
Generate a Python program that takes a sentence as input and prints out only the verbs.,The cat jumped over the moon.,"import nltk

def extract_verbs(sentence):
    tokens = nltk.word_tokenize(sentence)
    tags = nltk.pos_tag(tokens)
    verbs = [word for word, pos in tags if pos.startswith('V')]
    return verbs

sentence = ""The cat jumped over the moon.""
verbs = extract_verbs(sentence)
print(verbs)","import nltk

def extract_verbs(sentence)
    tokens = nltk.word_tokenize(sentence)
    tags = nltk.pos_tag(tokens)
    verbs = [word for word, pos in tags if pos.startswith('V')]
    return verbs

sentence = ""The cat jumped over the moon.""
verbs = extract_verbs(sentence)
print(verbs)",Syntax Error,Loops
Develop a program in Python to calculate the average of five given numbers.,,"def average(nums):
 total = 0
 for num in nums:
  total+=num
 return total / len(nums)

print(average([1, 2, 3, 4, 5]))
// Output: 3","def average(nums):
 total = 0
 for num in nums:
  total+=num
 return total / len(nums)

print(average([1, 2, 3, 4, 5]))
// Output: 3",correct,Recursion
Generate a loop in Python which iterates through a list and prints the values.,,"for value in list_of_values:
    print(value)","for value in list_of_values:
    print(value)",correct,File I/O
Write a function in Python that takes in a string and removes all the unnecessary whitespaces.,"""This     string  contains   too     much whitespace!""","def remove_whitespaces(string):
    return ' '.join(string.split())
 
print(remove_whitespaces(""This     string  contains   too     much whitespace!""))","def remove_whitespaces(string):
    return ' '.join(string.split())
 
print(remove_whitespaces(""This     string  contains   too     much whitespace!""))",correct,File I/O
Design an algorithm in Python to find the number of occurrences of a given string in another string.,"haystack = ""Hello World""
needle = ""l""","def count_occurrences(haystack, needle):
    count = 0
    for char in haystack:
        if char == needle:
            count += 1
    return count","def count_occurrences(haystack, needle)
    count = 0
    for char in haystack
        if char == needle
            count += 1
    return count",Syntax Error,Loops
Write an algorithm in Python to check if a number is a palindrome.,number = 121,"def is_palindrome(number): 
num = number  
   
# initializing a reverse number  
reverse = 0
  
# Reverse the given number 
while(number > 0): 
   remainder = number % 10
   # Create reverse 
   reverse = (reverse * 10) + remainder 
   number = number // 10 
 
# check if original and reverse numbers are same
if (num == reverse): 
  return True
else: 
  return False","def is_palindrome(number): 
num = number  
   
# initializing a reverse number  
reverse = 0
  
# Reverse the given number 
while(number > 0): 
   remainder = number % 10
   # Create reverse 
   reverse = (reverse * 10) + remainder 
   number = number // 10 
 
# check if original and reverse numbers are same
if (num == reverse): 
  return True
else: 
  return False",correct,String Manipulation
Generate a function in Python that takes a list of values and returns a dictionary with the sums of adjacent values.,"[1,4,5,6,10]","def sum_adjacent(my_list):
  result = {}
  
  for i in range(len(my_list)-1):
    key = (my_list[i],my_list[i+1])
    result[key] = my_list[i]+my_list[i+1]
  
  return result
  
my_list = [1,4,5,6,10]

print(sum_adjacent(my_list))

# Output: {(1, 4): 5, (4, 5): 9, (5, 6): 11, (6, 10): 16}","def sum_adjacent(my_list):
  result = {}
  
  for i in range(len(my_list)-1):
    key = (my_list[i],my_list[i+1])
    result[key] = my_list[i]+my_list[i+1]
  
  return result
  
my_list = [1,4,5,6,10]

print(sum_adjacent(my_list))

# Output: {(1, 4): 5, (4, 5): 9, (5, 6): 11, (6, 10): 16}",correct,OOP
Develop a Python program to generate 10 random numbers between 1 and 100.,,"import random

for i in range(10):
    print(random.randint(1,100))","import random

for i in range(10):
    print(name, random.randint(1,100))",Syntax Error,File I/O
Create a Python tuple that contains the first five prime numbers,,"t = (2, 3, 5, 7, 11)","t = (2, 3,",Incomplete Answer,File I/O
Develop Python code to check if a given number is plaindrome.,1454,"def is_plaindrome(num):
    original_num = num
    reversed_num = 0
    while num > 0:
        remainder = num % 10
        reversed_num = (reversed_num * 10) + remainder
        num //= 10
    return reversed_num == original_num

num = 1454
if is_plaindrome(num):
    print(num, ""is a plaindrome"")
else:
    print(num, ""is not a plaindrome"")","def is_plaindrome(num):
    original_num = num
    reversed_num = 0
    while num > 0:
        remainder = num % 10
        reversed_num = (reversed_num * 10) + remainder
",Incomplete Answer,Loops
Write a Python program that takes a user input of a number and prints out the corresponding character from the ASCII table.,76,"# Python program to get ASCII value of a character

c = input('Enter a character: ')

# ord() function to get the ASCII value 
print('The ASCII value of ' + c + ' is', ord(c))","# Python program to get ASCII value of a character

c = input('Enter a character: ')

#",Incomplete Answer,File I/O
Design a recursive function in Python that prints the nth Fibonacci number.,,"def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1 
    else:
        return fibonacci(n-1) + fibonacci(n-2)","def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
   ",Incomplete Answer,Recursion
Write a Python program to convert an array of strings to an array of floats.,"arr = [""1.2"", ""2.3"", ""3.4"", ""4.5""]","def string_to_float(arr):
    return [float(x) for x in arr]","def string_to_float(arr):
    ",Incomplete Answer,File I/O
Write a Python program to calculate the sum of the numerical values of each character of a string,string = 'program',"def sumCharValues(string):
    sum = 0
    for ch in string:
        sum += ord(ch)
    return sum","def sumCharValues(string):
    sum = 0
    for ch in string:
        sum += ord(ch)
    return sum",correct,Recursion
Create a class in Python that represents a given animal object.,Cat,"class Cat:
    def __init__(self):
        self.name = """"
        self.colour = """"
        self.age = 0
        self.breed = """"

    def meow(self):
        print(self.name, ""says meow!"")","class Cat:
    def __init__(self):
        self.name = """"
        self.colour = """"
        self.age = 0
        self.breed = """"

    def meow(self):
        print(name, self.name, ""says meow!"")",Syntax Error,String Manipulation
Define a method in Python to detect if a given string is a palindrome.,,"def is_palindrome(string):
    return string == string[::-1]","def is_palindrome(string):
    return string == string[::-1]",Syntax Error,String Manipulation
Write a Python program that takes a list of emails and verifies that the domain is valid.,,"import re

emails = ['user@example.com', 'user@invalid']

def validate_email(email): 
 regex = r""(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)""
 if (re.search(regex, email)): 
 return 1
 else: 
 return 0

for email in emails: 
 is_valid = validate_email(email)
 if is_valid: 
 print(email, 'is valid')
 else: 
 print(email, 'is invalid')","import re

emails = ['user@example.com', 'user@invalid']

def validate_email(email): 
 regex = r""(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)""
 if (re.search(regex, email)): 
 return 1
 else: 
 return 0

for email in emails: 
 is_valid = validate_email(email)
 if is_valid: 
 print(email, 'is valid')
 else: 
 print(email, 'is invalid')",correct,OOP
Test if a given number is a Prime or not using Python.,number = 32,"if number<=1: 
  print(""Number is not a prime number."") 
for i in range(2,int(number**0.5)+1):
  if(number % i == 0):
    print(""Number is not a prime number."")
    break
else: 
  print(""Number is a prime number."")","if number<=1: 
  print(""Number is not a prime number."") 
for i in range(2,int(number**0.5)+1):
  if(number ",Incomplete Answer,Loops
Write a Python web crawler that fetches all the URLs from a given website and stores them in a list.,https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
links = []

r = requests.get(url)
soup = BeautifulSoup(r.text, ""html.parser"")
for link in soup.find_all(""a""):
    links.append(link.get(""href""))

print(links)","import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
links = []

r = requests.get(url)
soup ",Incomplete Answer,Loops
Write a python function to check whether every even index contains even numbers of a given list.,,"def even_position(nums):
	return all(nums[i]%2==i%2 for i in range(len(nums)))","def even_position(nums):
	return all(nums[i]%2==i%2 for i in range(len(nums)))",correct,File I/O
Output the Fibonacci sequence as a list of integers in Python,,"def fibonacci_sequence(n): 
    # Creating list of length n 
    fib_list  = [0]*n 
      
    # first and second terms 
    fib_list[0] = 0
    fib_list[1] = 1
      
    # Application of the recursive algorithm 
    for i in range(2, n): 
        fib_list[i] = fib_list[i-1] + fib_list[i-2] 
      
    return fib_list","def fibonacci_sequence(n): 
    # Creating list of length n 
    fib_list  = [0]*n 
      
    # first and second terms 
    fib_list[0] = 0
    fib_list[1] = 1",Incomplete Answer,File I/O
Formulate an algorithm in Python to find the sum of all elements in a given matrix.,"[[ 1, 2, 3 ],
[ 4, 5, 6 ]]","def matrixSum(matrix):
    sum = 0
    for row in matrix:
        for element in row:
            sum += element
    return sum

matrix = [[1, 2, 3], [4, 5, 6]]
total = matrixSum(matrix)
print(total)","def matrixSum(matrix):
    sum = 0
    for row in matrix:
        for element in row:
            sum += element
    return sum

matrix = [[1, 2, 3], [4, 5, 6]]
total = matrixSum(matrix)
print(total)",correct,String Manipulation
Create a for-loop in Python to print a list of strings that contain only the vowels from a given list of strings.,"words = [""apple"", ""bear"", ""cat"", ""dog""]","for word in words:
    vowels = """"
    for x in word:
        if x in ('a', 'e', 'i', 'o', 'u'):
            vowels += x
    print(vowels)","for word in words:
    vowels = """"
    for x in word:
        if x in ('a', 'e', 'i', 'o', 'u':
            vowels += x
    print(vowels",Syntax Error,File I/O
Compose a Python program to check if a given year is a leap year,,"def is_leap_year(year):
    if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0:
        return true
    return false","def is_leap_year(year):
    if (year % 4 == 0 and year % 100 ",Incomplete Answer,Recursion
Write a Python program for a smart search engine. The program should take a query as input and return the most relevant result.,,"import json
import requests
 
def search_engine(query):
 
 # Make a request to the search engine API
 r = requests.get('http://search-engine.com/api/search', params={'query': query})
 
 # Parse the response
 response = json.loads(r.text)
 
 # Return the most relevant result
 return response['results'][0]
 
search_engine('python programming')","import json
import requests
 
def search_engine(query):
 
 # Make a request to the search engine API
 r = requests.get('http://search-engine.com/api/search', params={'quer",Incomplete Answer,Loops
Write a Python program that takes a positive integer and prints the squares of all the numbers from 1 to the given number.,Given number: 5,"# Program to print the squares of all 
# the numbers from 1 to the given number 
  
# Positive number taken as an input 
num = 5
  
# Iterate from 1 to num 
for i in range(1, num+1): 
  
    # Calculate the square 
    value = i**2
      
    # Print the value 
    print(value)

# Output:
# 1
# 4
# 9
# 16
# 25","# Program to print the squares of all 
# the numbers from 1 to the given number 
  
# Positive number taken as an input 
num = 5
  
# Iterate from 1 to num",Incomplete Answer,Recursion
Run the given code on Python 3 and generate the output.,"print(""Hello World!"")",Hello World!,Hello World!,Syntax Error,Recursion
Create a Python program to convert a list of characters into a string,"Convert this array ['a', 'b', 'c'] into a string","def list_to_str(arr):
    str = """"
    for i in arr:
        str += i
    return str

arr = ['a', 'b', 'c']
  
result = list_to_str(arr) 
print(result)","def list_to_str(arr):
    str = """"
    for i in arr:
        str += i
    return str

arr = ['a', 'b', 'c']
  
result = list_to_str(arr) 
print(result)",correct,Loops
Design a program in Python to print the Fibonacci sequence.,,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
# Driver Program 
print(Fibonacci(9))","def Fibonacci(n): 
    if n<0: 
        print(name, ""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
# Driver Program 
print(name, Fibonacci(9))",Syntax Error,File I/O
Design a Python program to edit a given text string,"""Apple is a great fruit""","def edit_string(text):
    text = text.replace(""Apple"", ""Orange"")
    return text

text = ""Apple is a great fruit""
print(edit_string(text))
# Output: Orange is a great fruit","def edit_string(text):
    text = text.replace(""Apple"", ""Orange"")
    return text

text = ""Apple is a great fruit""
pritn(edit_string(text))
# Output: Orange is a great fruit",Syntax Error,OOP
Create a function in Python to compare two strings and return true if the strings only differ by one character.,"s1 = 'apple'
s2 = 'acple'","def compare_strings(s1, s2):
    mismatch_count = 0

    for i in range(len(s1)):
        if s1[i] != s2[i]:
            if mismatch_count > 0:
                return False

            mismatch_count += 1

    return mismatch_count == 1

compare_strings('apple', 'acple')","def compare_strings(s1, s2):
    mismatch_count = 0

    for i in range(len(s1)):
        if s1[i] != s2[i]:
            if mismatch_cou",Incomplete Answer,File I/O
Design a function in Python to pad a list to a given length by replicating the rightmost element.,"[2, 3, 5], 7","def pad_list_right(lst, pad_length):
    extra_length = pad_length - len(lst)
    lst.extend([lst[-1]] * extra_length)
    return lst

lst = [2, 3, 5]
padding_length = 7
result = pad_list_right(lst, padding_length)
print(result)","def pad_list_right(lst, pad_length):
    extra_length = pad_length - len(lst)
    lst.extend([lst[-1]] * extra_len",Incomplete Answer,OOP
"Create a class 'Person' in Python, which has attributes name, age, gender and blood group.",,"class Person:
 def __init__(self, name, age, gender, blood_group):
  self.name = name
  self.age = age
  self.gender = gender
  self.blood_group = blood_group","class Person:
 def __init__(self, name, age, gender, blood_group):
  self.name = name
  self.age = age
  self.gender = gender
  self.blood_group = blood_group",Syntax Error,File I/O
Create a Python program which concatenates two sentences and prints the result.,"The sentence to be concatenated is ""I am writing a Python program."" and ""It is exciting to learn something new.""","sentence1 = ""I am writing a Python program.""
sentence2 = ""It is exciting to learn something new.""

# Concatenate both strings
concatenated_sentence = sentence1 + "" "" + sentence2

# Print the result
print(concatenated_sentence)","sentence1 = ""I am writing a Python program.""
sentence2 = ""It is exciting to learn something new.""

# Concatenate ",Incomplete Answer,Loops
Create an algorithm in Python to sort an array of integers.,"The array to be sorted: [2, 1, 6, 5, 8]","def quicksort(array):
  if len(array) <= 1:
    return array
  
  pivot = array[len(array) // 2]
  left = [x for x in array if x < pivot]
  middle = [x for x in array if x == pivot]
  right = [x for x in array if x > pivot]
  return quicksort(left) + middle + quicksort(right)

# test
array = [2, 1, 6, 5, 8]
print(quicksort(array))","def quicksort(array):
  if len(array) <= 1:
    return array
  
  pivot = array[len(array) // 2]
  left = [x for x in array if x < pivot]
  middle = [x for x in array",Incomplete Answer,OOP
Create a program to find the minimum depth of a binary tree using Python.,"3
        /  \
       9   20
           / \
          15  7","def minDepth(root):
    if root is None:
        return 0
    if root.left is None and root.right is None:
        return 1
    elif root.left is None:
        return minDepth(root.right) + 1
    elif root.right is None:
        return minDepth(root.left) + 1
    else:
        return min(minDepth(root.left), minDepth(root.right)) + 1","def minDepth(root)
    if root is None
        return 0
    if root.left is None and root.right is None
        return 1
    elif root.left is None
        return minDepth(root.right) + 1
    elif root.right is None
        return minDepth(root.left) + 1
    else
        return min(minDepth(root.left), minDepth(root.right)) + 1",Syntax Error,Loops
Generate a python program that takes two sets of integers as input and outputs the intersection of those sets.,"set1 = {1, 2, 3, 4}
set2 = {3, 4, 5, 6}","def intersection(set1, set2): 
   return set1 & set2

result = intersection(set1, set2) 
print(result)","def intersection(set1, set2: 
   return set1 & set2

result = intersection(set1, set2 
print(result",Syntax Error,File I/O
Create a function to calculate the factorial of a given number in Python.,,"def factorial(number): 
    if number == 0: 
        return 1
    else:
        return number * factorial(number - 1)","def factorial(number): 
    if number == 0: 
        return 1
    else:
        return number * factorial(number - 1)",Syntax Error,Recursion
Create a program in Python 3 to simulate the rolling of two dice.,,"import random

def roll_dice():
    '''This function simulates rolling two dice.'''
    die_1 = random.randint(1, 6)
    die_2 = random.randint(1, 6)
    print(""Die 1: {}"".format(die_1))
    print(""Die 2: {}"".format(die_2))
    return (die_1, die_2)","import random

def roll_dice():
    '''This function simulates rolling two dice.'''
    die_1 = random.randint(1, 6)
    die_2 = random.randint(1, 6)
    print(""Die 1: {}"".format(die_1))
    print(""Die 2: {}"".format(die_2))
    return (die_1, die_2)",correct,Loops
Create a method in Python to encode a given string using Base64 encoding technique.,,"import base64

def encode_string(string):
    encoded_string = base64.b64encode(string.encode('utf-8'))
    return encoded_string","import base64

def encode_string(string):
encoded_string = base64.b64encode(string.encode('utf-8'))
return encoded_string",Syntax Error,String Manipulation
Write a function to calculate the harmonic sum of n-1.,,"def harmonic_sum(n):
  if n < 2:
    return 1
  else:
    return 1 / n + (harmonic_sum(n - 1))","def harmonic_sum(n):
  if n < 2:
    return 1
  else:
    return 1 / n + (harmonic_sum(n - 1))",Syntax Error,File I/O
Create a Python function to calculate the particle diameter of a given radius.,radius = 0.75,"def particle_diameter(radius):
    return 2 * radius

diameter = particle_diameter(0.75)
print(diameter) # Output: 1.5","def particle_diameter(radius):
    return 2 * radius

diame",Incomplete Answer,Loops
Write a Python program to specify the order of element when given an array and a number.,"arr=[1,2,3,4], k=3","def order_elements(arr, k):
    k_arr = []
    j_arr = []
    for i in arr:
        if i <= k:
            k_arr.append(i)
        else:
            j_arr.append(i)
    k_arr.extend(j_arr)
    return k_arr","def order_elements(arr, k):
    k_arr = []
    j_arr = []
    for i in arr:
        if i <= k:
       ",Incomplete Answer,Loops
Construct a function in Python to calculate interest rate of a given loan amount,,"def calculate_interest_rate(principal, rate, period):
  return principal * (rate / 100) * period
  
calculate_interest_rate(2000, 4.5, 5) #900","def calculate_interest_rate(principal, rate, period):
  return principal * (rate / 100) * period
  
calculate_interest_rate(2000, 4.5, 5) #900",correct,Recursion
Convert a given SQL statement into a Python Pandas DataFrame.,SELECT * FROM book;,"import pandas as pd

df = pd.read_sql_query(""SELECT * FROM book;"", conn)","import pandas as pd

df = pd.read_sql_query(""SELECT * FROM book;"", conn)",correct,String Manipulation
Generate a Python program to print the first 10 numbers in the Fibonacci sequence.,,"def fibonacciGenerator(num):
    a = 0
    b = 1
    
    for i in range(0, num):
        c = a + b
        a = b
        b = c
        yield a

numbers = fibonacciGenerator(10)    

for num in numbers:
    print(num)","def fibonacciGenerator(num):
    a = 0
    b = 1
    
    for i in range(0, num):
        c = a + b
        a = b
        b = c
        yield a

numbers = fibonacciGenerator(10)    

for num in numbers:
    print(num)",correct,Loops
Create a Python program to find out the prime numbers in a given range.,"lower =100
upper =1000","def is_prime_number(n):
    for i in range(2,n):
        if (n % i == 0):
            return False
    return True

# Find all prime numbers in a given range
lower = 100
upper = 1000

for num in range(lower, upper + 1):
    if is_prime_number(num):
        print(num)","def is_prime_number(n)
    for i in range(2,n)
        if (n % i == 0)
            return False
    return True

# Find all prime numbers in a given range
lower = 100
upper = 1000

for num in range(lower, upper + 1)
    if is_prime_number(num)
        print(num)",Syntax Error,Loops
Implement a Monte Carlo simulation in Python to calculate the probability of completing a given task.,,"import random

trials = 10000
successes = 0

for _ in range(trials):
 # Simulate process (e.g. a dice roll)
 outcome = random.randint(1, 6)
 
 # Keep track of successes
 if outcome == 6:
 successes += 1

# Calculate probability
probability = successes / trials
print(f'Probability of success: {probability: .2f}')","import random

trials = 10000
successes = 0

for _ in range(trials):
 # Simulate process (e.g. a dice roll)
 outcome = random.randint(1, 6)
 
 # Keep track ",Incomplete Answer,Recursion
Write a Python function that takes in a list of elements and removes all the duplicate elements.,"[1, 2, 2, 3, 3, 3]","def remove_duplicates(nums):
  new_list = []
  for num in nums:
    if num not in new_list:
      new_list.append(num)
  return new_list
  
result = remove_duplicates([1, 2, 2, 3, 3, 3])
print(result)","def remove_duplicates(nums):
  new_list = []
  for num in nums:
    if num not in new_list:
      ne",Incomplete Answer,Loops
Create a Python program to compare two lists and find their common elements.,"list1 = [1, 2, 3, 4, 5]
list2 = [3, 4, 5, 6, 7]","def compare_lists(list1, list2):
    common_elements = []
    for element in list1:
        if element in list2:
            common_elements.append(element)
    return common_elements

list1 = [1, 2, 3, 4, 5]
list2 = [3, 4, 5, 6, 7]

common_elements = compare_lists(list1, list2)
print(common_elements)","def compare_lists(list1, list2):
    common_elements = []
    for element in list1:
        if element in list2:
            common_elements.append(ele",Incomplete Answer,Recursion
Construct a Python program that computes the area of a circle with the given radius.,radius = 5,"import math

def area_circle(radius):
 return math.pi * (radius ** 2)

area = area_circle(radius)
print('The area of the circle is %.2f' % area)","import math

def area_circle(radius):
 return math.pi * (radius ** 2)

area = area_circle(radius)
print('The area of the circle is %.2f' % area)",Syntax Error,String Manipulation
Create a python program to output ‘Hello World’ 10 times,,"for i in range(10):
    print(""Hello World"")","for i in range(10):
  ",Incomplete Answer,OOP
Improve the following Python script to load the data in the absence or presence of the header.,"import pandas as pd
data = pd.read_csv('mydata.csv')","import pandas as pd

#Variable to indicate presence of Header
has_header = False

#Read CSV
data = pd.read_csv('mydata.csv',header=None) 

#Check for presence of Header
if data.iloc[0,0] != 'Column1':
  has_header = True

#Read again with header
if has_header:
  data = pd.read_csv('mydata.csv')","import pandas as pd

#Variable to indicate presence of Header
has_header = False

#Read CSV
data = pd.read_csv('mydata.csv',header=None 

#Check for presence of Header
if data.iloc[0,0] != 'Column1':
  has_header = True

#Read again with header
if has_header:
  data = pd.read_csv('mydata.csv'",Syntax Error,OOP
Shorten the following code using appropriate Python statement,"x = 1
if x == 0:
    print(""x is 0"")
elif x == 1:
    print(""x is 1"")
else:
    print(""x is not 0 or 1"")","x = 1
print(""x is"", (""0"" if x == 0 else ""1"" if x == 1 else ""not 0 or 1""))","x = 1
print(""x is"", (""0"" if x == 0 else ""1"" if x == 1 else ""not 0 or 1""))",correct,OOP
"In Python, code to present permutations of a certain list of strings ""AB"", ""CD""",,"from itertools import permutations

strings = ['AB', 'CD']

perm = permutations(strings)

for string in list(perm):
    print(string)","from itertools import permutations

strings = ['AB', 'CD']

perm = permutations(strings)

for string in list(perm):
    print(string)",correct,File I/O
Implement a function in Python that takes as input an integer and prints out the Fibonacci sequence up to the entered value.,10,"def fibonacci(n):
    arr = [0, 1]
    for i in range(2, n+1):
        arr.append(arr[i-2] + arr[i-1])
    return arr[:n+1]

print(fibonacci(10))","def fibonacci(n):
    arr = [0, 1]
    for i in range(2, n+1):
        a",Incomplete Answer,OOP
"Using Python, construct a program to calculates the average of three numbers (input provided).","4, 9, 10","num1 = 4
num2 = 9
num3 = 10

total = num1 + num2 + num3
average = total / 3
print(""Average ="", average)  # Output: Average = 7.66","num1 = 4
num2 = 9
num3 = 10

total = num1 + num2 + num3
average = total / 3
print(""Average ="", average)  # Output: Average = 7.66",correct,Loops
Create a program in Python to calculate the prime factors of a given number.,15,"def find_factors(num): 
    """"""Function to find prime factors""""""
    factors = [] 
    i = 2
    while i * i <= num: 
        if num % i: 
            i += 1 
        else: 
            num //= i 
            factors.append(i) 
    if num > 1: 
        factors.append(num) 
    return factors 
  
num = 15
print(find_factors(num))","def find_factors(num): 
    """"""Function to find prime factors""""""
    factors = [] 
    i = 2
    while i * i <= num: 
        if num % i: 
            i += 1 
        else: 
            num //= i 
            factors.append(i) 
    if num > 1: 
        factors.append(num) 
    return factors 
  
num = 15
print(name, find_factors(num))",Syntax Error,Recursion
"Write a Python program that takes a date in the format ""YYYY-MM-DD"" and returns a string with the day of the week for that date.",,"from datetime import datetime

def day_of_week(date):
    # convert string to date object
    date_obj = datetime.strptime(date, ""%Y-%m-%d"")
    # retrieve weekday
    day = date_obj.strftime(""%A"")
    return day","from datetime import datetime

def day_of_week(date):
    # convert string to date object
    date_obj = d",Incomplete Answer,String Manipulation
Create a Python regex pattern to match words containing certain characters.,Characters: abc,pattern = re.compile(r'\b[abc]+\w*\b'),pattern = re.compil,Incomplete Answer,Recursion
Create a Python program to display the Fibonacci sequence up to n.,,"# This Python 3 code prints the Fibonacci sequence up to n

def Fibonacci(n):
  f0, f1 = 0, 1
  for i in range(0, n):
    print(f0,end="" "");
    next = f0 + f1;
    f0 = f1;
    f1 = next;

# Driver Program
print(""Fibonacci sequence up to n: "")
Fibonacci(10)","# This Python 3 code pritns the Fibonacci sequence up to n

def Fibonacci(n):
  f0, f1 = 0, 1
  for i in range(0, n):
    pritn(f0,end="" "");
    next = f0 + f1;
    f0 = f1;
    f1 = next;

# Driver Program
pritn(""Fibonacci sequence up to n: "")
Fibonacci(10)",Syntax Error,OOP
Write a Python program to calculate the average monthly temperature of a given city for the last 10 years.,"City: Los Angeles, California
10 year average temperature from 2010 to 2020","import csv

def avg_month_temp(city):
 result = 0
 counter = 0
 temperatures = csv.reader(open('weatherdata.csv'))
 for row in temperatures:
 if row[1] == city:
 result += float(row[2])
 counter += 1
 return result/counter","import csv

def avg_month_temp(city):
 result = 0
 counter = 0
 temperatures = csv.reader(open('weatherdata.csv",Incomplete Answer,Recursion
Edit the given Python code to make it work for a list of dictionaries.,"list_data = [{'id': 1, 'name': 'Tom'}, {'id': 2, 'name': 'Bob'}]

for element in list_data:
  print(element)","list_data = [{'id': 1, 'name': 'Tom'}, {'id': 2, 'name': 'Bob'}]

for element in list_data:
  print(element['name'])","list_data = [{'id': 1, 'name': 'Tom'}, {'id': 2, 'name': '",Incomplete Answer,File I/O
Suggest a way to automate a process that extracts the data from a web page.,,The process of extracting data from a web page can be automated by using web scraping techniques. Web scraping is a process of extracting data from websites using programming languages such as Python or JavaScript. It involves making web requests to the respective web pages using tools like BeautifulSoup and then parsing the data from the response using libraries like lxml or html5lib.,The process of extracting data from a web page can be automated by using web scraping techniques. Web scraping is a process of extracting data from websites using programming languages such as P,Incomplete Answer,File I/O
Create a simple program in Python that prints out the first n fibonacci numbers.,,"def fibonacci(n): 
   if n<0: 
      print(""Incorrect input"") 
      # First Fibonacci number is 0 
   elif n==1: 
      return 0
   # Second Fibonacci number is 1 
   elif n==2: 
      return 1
   else: 
      return fibonacci(n-1)+fibonacci(n-2) 

# Driver Program 
nterms = 4
for i in range(nterms):
      print(fibonacci(i))","def fibonacci(n): 
   if n<0: 
      print(""Incorrect input"") 
      # First Fibonacci number is 0 
   elif n==1: 
      return 0
   # Second Fibonacci number is 1 
   elif n==2: 
      return 1
   else: 
      return fibonacci(n-1)+fibonacci(n-2) 

# Driver Program 
nterms = 4
for i in range(nterms):
      print(fibonacci(i))",correct,File I/O
Correct the syntax error in the below Python code.,"def fibonacci_sequence(max): 
    nums = [] 
    current, nxt = 0, 1
    while current < max: 
        current, nxt = nxt, nxt+current
        nums.append(current)
    
    return numbers","def fibonacci_sequence(max): 
    nums = [] 
    current, nxt = 0, 1
    while current < max: 
        current, nxt = nxt, nxt+current
        nums.append(current)
    
    return nums","def fibonacci_sequence(max): 
nums = [] 
current, nxt = 0, 1
while current < max: 
    current, nxt = nxt, nxt+current
    nums.append(current)

return nums",Syntax Error,OOP
Construct an algorithm in Python to find the top three numbers in a list.,"[10, 8, 3, 11, 7, 14, 13]","def top_three(lst): 
  sorted_lst = sorted(lst, reverse=True) 
  return sorted_lst[:3]

print(top_three([10, 8, 3, 11, 7, 14, 13]))","def top_three(lst): 
  sorted_lst = sorted(lst, reverse=True) 
  return sorted_lst[:3]

print(top_three([10, 8, 3, 11, 7, 14, 13]))",correct,Recursion
Program a Python script to convert a given temperature in degree Fahrenheit to degree Celsius.,F = 100,"def f_to_c(F):
    C = (F - 32) * 5/9
    return C","def f_to_c(F):
    C = (F - 32) * 5/9
    return C",correct,String Manipulation
Create a k-means clustering algorithm in Python to cluster a given dataset.,,"from sklearn.cluster import KMeans

def k_means_clustering(data, num_clusters):
    kmeans = KMeans(n_clusters=num_clusters, random_state=0).fit(data)
    labels = kmeans.labels_
    return labels","from sklearn.cluster import KMeans

def k_means_clustering(data, num_clusters)
    kmeans = KMeans(n_clusters=num_clusters, random_state=0).fit(data)
    labels = kmeans.labels_
    return labels",Syntax Error,Recursion
Estimate the square root of 15 using bisection algorithm in Python.,,"# Define the function to calculate approximate root using bisection algorithm
def bisection(x, epsilon):
    low = 0
    high = x
    guess = (high + low)/2
    while abs(x - guess**2) > epsilon:
        if guess**2 > x:
            high = guess
        else:
            low = guess
        guess = (high + low)/2
    return guess

print(bisection(15, 0.001))","# Define the function to calculate approximate root using bisection algorithm
def bisection(x, epsilon):
low = 0
high = x
guess = (high + low)/2
while abs(x - guess**2) > epsilon:
    if guess**2 > x:
        high = guess
    else:
        low = guess
    guess = (high + low)/2
return guess

print(bisection(15, 0.001))",Syntax Error,String Manipulation
Create a Python program to merge two lists into a new one.,,"def merge_lists(list1, list2):
    result = []
    for item in list1:
        result.append(item)
    for item in list2:
        result.append(item)
    return result","def merge_lists(list1, list2)
    result = []
    for item in list1
        result.append(item)
    for item in list2
        result.append(item)
    return result",Syntax Error,Recursion
Create an algorithm in Python to find the average of numbers in a list.,"[3, 5, 7, 9, 11]","def find_average(lst):
    sum = 0
    for num in lst: 
        sum += num 
    # average calculation 
    avg = sum / len(lst)  
      
    return avg

average = find_average([3, 5, 7, 9, 11])
print(""The average of the numbers in the list is:"", average)","def find_average(lst):
    sum = 0
    for num in lst: 
        sum += num 
    # average calculation 
    avg = sum / len(lst)",Incomplete Answer,OOP
Design a recursive algorithm in Python to print the first n numbers of the Fibonacci sequence.,,"def fibonacci(n): 
 if n <= 1: 
  return n 
 else: 
  return(fibonacci(n-1) + fibonacci(n-2))","def fibonacci(n): 
 if n <= 1: 
  return n 
 else: 
  return(fibonacci(n-1) + fibonacci(n-2))",correct,Loops
"Compute the time complexity of the following Python code snippet:

int find_max(arr):
 max = 0
 for i in range(len(arr)):
 for j in range(len(arr)):
 if arr[i] + arr[j] > max:
 max = arr[i] + arr[j]
 return max",,"The time complexity of this code snippet is O(n²). The outer loop runs ""n"" times and the inner loop also runs ""n"" times resulting in a complexity of O(n²).","The time complexity of this code snippet is O(n²). The outer loop runs ""n"" times and the inner loop also runs ""n"" times resulting in a complexity of O(n²).",correct,String Manipulation
"Given a list of integers, write a Python program to print the latest 3 largest numbers.","[5, 1, 10, 25, 74, 17, 2]","def print_largest_three_numbers(numbers): 
    numbers.sort(reverse=True) 
    print(*numbers[:3], sep = "", "") 

print_largest_three_numbers([5, 1, 10, 25, 74, 17, 2])

Output:
74, 25, 17","def print_largest_three_numbers(numbers: 
    numbers.sort(reverse=True 
    print(*numbers[:3], sep = "", "" 

print_largest_three_numbers([5, 1, 10, 25, 74, 17, 2]

Output:
74, 25, 17",Syntax Error,OOP
Create a class in python that represents a circle and contains functions to calculate the area and circumference.,,"class Circle:
    def __init__ (self, radius):
        self.radius = radius

    def area(self):
        return 3.1416 * self.radius ** 2

    def circumference(self):
        return 2 * 3.1416 * self.radius","class Circle:
    def __init__ (self, radius):
        self.radius = radius

    def area(self):
      ",Incomplete Answer,File I/O
Create a function in Python that prints each element of a list one by one.,"list1 = [1,2,3,4,5]","def print_list(list1):
    for element in list1:
        print(element)

list1 = [1,2,3,4,5]

print_list(list1)","def pritn_list(list1):
    for element in list1:
        pritn(element)

list1 = [1,2,3,4,5]

pritn_list(list1)",Syntax Error,String Manipulation
Implement a linked list using Python.,,"class Node: 
    # Function to initialize the node object 
    def __init__(self, data): 
        self.data = data  # Assign data 
        self.next = None  # Initialize next as null 
class LinkedList: 
    # Function to initialize head 
    def __init__(self): 
        self.head = None","class Node: 
    # Function to initialize the node object 
    def __init__(self, data): 
        self.data = data  # Assign data 
        self.next = None  # Initialize next as null 
class LinkedList: 
    # Function to initialize head 
    def __init__(self): 
        self.head = None",Syntax Error,OOP
Create a function in Python that takes a list of integers and returns the largest integer.,"[1, 5, 4, 9, 2]","def biggest_number(num_list):
  return max(num_list)

biggest = biggest_number([1, 5, 4, 9, 2])
print(biggest) # prints 9","def biggest_number(num_list:
  return max(num_list

biggest = biggest_number([1, 5, 4, 9, 2]
print(biggest # prints 9",Syntax Error,File I/O
Create a Python script to validate a JSON string.,"""{""name"":""John"",""age"":30}""","import json

def validate_json_string(s):
    try:
        json_obj = json.loads(s)
        return True
    except json.JSONDecodeError:
        return False","import json

def validate_json_string(s):
    try:
        json_obj = json.loads(s)
        return True
    except json.JSONDecodeError:
        return False",correct,Recursion
Suggest a way to convert a given string to an integer in Python.,,"def to_int(string):
    '''This function takes a string and converts it to an integer.'''
    return int(string)","def to_int(string):
    '''This function takes a string and converts it to an integer.'''
    return int(string)",correct,String Manipulation
Create a Python program that counts the occurrence of a specific character in a list,"['a', 'b', 'c', 'd', 'e', 'f', 'g'], 'f'","def count_char(my_list, char):
    count = 0
    for i in my_list:
        if i == char:
            count += 1
    return count","def count_char(my_list, char):
count = 0
for i in my_list:
    if i == char:
        count += 1
return count",Syntax Error,String Manipulation
Create a Python procedure to determine if two numbers are divisible.,14 and 7,"def divisible(x, y):
    if x % y == 0:
        return True
    else:
        return False","def divisible(x, y):
    if x % y == 0:
        return True
    else:
        return False",correct,String Manipulation
Write a python function to find the kth element in an array containing odd elements first and then even elements.,,"def get_Number(n, k): 
    arr = [0] * n; 
    i = 0; 
    odd = 1; 
    while (odd <= n):   
        arr[i] = odd; 
        i += 1; 
        odd += 2;
    even = 2; 
    while (even <= n): 
        arr[i] = even; 
        i += 1;
        even += 2; 
    return arr[k - 1]; ","def get_Number(n, k): 
    arr = [0] * n; 
    i = 0; 
    odd = 1; 
    while (odd <= n):   
        arr[i] = odd; 
        i += 1; 
  ",Incomplete Answer,Recursion
"Create a Python class to represent a book with a title, author and ISBN.",,"class Book:
    def __init__(self, title, author, isbn):
        self.title = title
        self.author = author
        self.isbn = isbn","class Book:
    def __init__(self, title, author, isbn):
        self.title = title
        self.author = author
        self.isbn = isbn",correct,String Manipulation
Generate a Python program to check whether a given string is a palindrome or not.,,"def is_palindrome(text):
    return text == text[::-1]","def is_palindrome(text):
    return text == text[::-1]",correct,Recursion
Write a Python program for finding the most common element in a list.,,"def most_common(lst):
  return max(set(lst), key=lst.count)","def most_common(lst):
  retur",Incomplete Answer,OOP
"Write a function in Python to generate a random integer between two numbers, a and b.","a = 4
b = 15","import random

def random_int_generator(a, b):
    return random.randint(a, b)","import random

def random_int_generator",Incomplete Answer,String Manipulation
Design a python script to calculate BMI of a person.,,"def calculate_bmi(height, weight): 
    bmi = weight / ((height/100) ** 2)
    return bmi","def calculate_bmi(height, weight): 
    bmi ",Incomplete Answer,OOP
Write a function to calculate the sum of series 1³+2³+3³+….+n³.,,"import math 
def sum_series(number):
 total = 0
 total = math.pow((number * (number + 1)) /2, 2)
 return total","import math 
def sum_series(number):
 total = 0
 total",Incomplete Answer,OOP
"Using Python, write a program to find the most common element among a list of numbers","[4, 8, 9, 4, 6, 4, 8]","def most_frequent(list): 
    return max(set(list), key = list.count) 
  
list = [4, 8, 9, 4, 6, 4, 8]
print(most_frequent(list))","def most_frequent(list): 
    return max(set(list), key = list.count) 
  
list = [4, 8, 9, 4, 6, 4, 8]
print(most_frequent(list))",correct,String Manipulation
Write a Python program to create a flag made up of stars (*).,flagSize = 5,"# Generate a flag made up of *
flagString = """"

for i in range(flagSize):
    flagString += ""*""

print(flagString)","# Generate a flag made up of *
flagString = """"

for i in range(flagSize):
    flagString += ""*""

print(flagString)",correct,Recursion
Generate a Python program to reverse the digits of an integer.,n = 123,"def reverse_int(n):
    rev = 0
    while n > 0:
        rem = n % 10
        rev = rev * 10 + rem
        n = n // 10
    return rev

n = 123
print(reverse_int(n))","def reverse_int(n)
    rev = 0
    while n > 0
        rem = n % 10
        rev = rev * 10 + rem
        n = n // 10
    return rev

n = 123
print(reverse_int(n))",Syntax Error,OOP
Classify numbers into odd and even using Python.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","odd_list = []
even_list = []

for x in list:
    if x % 2 == 0:
        even_list.append(x)
    else:
        odd_list.append(x)
        
print(""Odd numbers: "", odd_list)
print(""Even numbers: "", even_list)","odd_list = []
even_list = []

for x in list:
if x % 2 == 0:
    even_list.append(x)
else:
    odd_list.append(x)
    
print(""Odd numbers: "", odd_list)
print(""Even numbers: "", even_list)",Syntax Error,OOP
Create a Python function that takes two arrays as input and returns a new array containing the elements of both inputs.,"array1 = [1, 2, 3]
array2 = [4, 5, 6]","def merge_arrays(array1, array2):
    merged_array = array1 + array2
    return merged_array

array1 = [1, 2, 3]
array2 = [4, 5, 6]
merged_array = merge_arrays(array1, array2)
print(merged_array)","def merge_arrays(array1, array2)
    merged_array = array1 + array2
    return merged_array

array1 = [1, 2, 3]
array2 = [4, 5, 6]
merged_array = merge_arrays(array1, array2)
print(merged_array)",Syntax Error,Loops
"Given a list of tuples, write a Python function to sort the list according to the second item in each tuple.",,"def sort_by_second_item(lst):
    return sorted(lst, key=lambda x:x[1])","def sort_by_second_item(lst):
    r",Incomplete Answer,Recursion
Design a python program that would generate a random password,,"import random

def generatePassword():
    charSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%&*'
    password = ''
    for x in range(8):
        password += random.choice(charSet)
    return password","import random

def generatePassword():
    charSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%&*'
    password = ''
    for x in range(8):
        password += random.choice(charSet)
    return password",Syntax Error,Recursion
Consider the pseudo-code given below. Convert it into a working Python program.,,"def fibonacci_sequence(terms):
    first_num, second_num = 0, 1
    fibonacci_sequence = []

    for i in range(terms):
        next_term = first_num + second_num
        first_num, second_num = second_num, next_term
        fibonacci_sequence.append(next_term)

    return fibonacci_sequence

nterms = 10
fibonacci_sequence = fibonacci_sequence(nterms)
print(fibonacci_sequence)","def fibonacci_sequence(terms):
first_num, second_num = 0, 1
fibonacci_sequence = []

for i in range(terms):
    next_term = first_num + second_num
    first_num, second_num = second_num, next_term
    fibonacci_sequence.append(next_term)

return fibonacci_sequence

nterms = 10
fibonacci_sequence = fibonacci_sequence(nterms)
print(fibonacci_sequence)",Syntax Error,File I/O
"Generate an array in Python with a range of numbers from 0 to 10, including 0 and 10.",,"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",correct,OOP
Generate a python dictionary with all prime numbers between 10 and 30 as keys and their squares as values.,,"prime_nos = {11, 13, 17, 19, 23, 29}

output_dict = {prime_no: prime_no**2 for prime_no in prime_nos}
print(output_dict)","prime_nos = {11, 13, 17, 19, 23, 29}

output_dict = {prime_no: prime_no**2 for prime_no in prime_nos}
print(output_dict)",correct,Loops
Optimize a Python program that calculates the sum of the numbers up to a given integer.,"integer = 5

def calculateSum(n):
	sum = 0
	for i in range(n+1):
		sum = sum + i
	
	return sum

print(calculateSum(integer))","def calculateSum(n):
	return (n * (n+1))//2

print(calculateSum(integer))","def calculateSum(n):
	return (n * (n",Incomplete Answer,File I/O
Create a Python program to classify the words in a sentence into verbs and nouns.,"Sentence = ""The cat is playing with a ball.""","sentence = ""The cat is playing with a ball.""
words = sentence.split()

verbs = []
nouns = []

for word in words:
  if word in [""is"", ""playing""]:
    verbs.append(word)
  elif word in [""The"", ""cat"", ""a"", ""ball""]:
    nouns.append(word)

print(""Verbs:"", verbs)
print(""Nouns:"", nouns)","sentence = ""The cat is playing with a ball.""
words = sentence.split()

verbs = []
nouns = []

for word in words:
  if word in [""is"", ""playing""]:
    verbs.append(word)
  elif word in [""The"", ""cat"", ""a"", ""ball""]:
    nouns.append(word)

print(""Verbs:"", verbs)
print(""Nouns:"", nouns)",correct,File I/O
Generate a Python program to perform matrix multiplication.,"A = [[1, 2, 3],
     [4, 5, 6],
     [7, 8, 9]] 

B = [[7, 8, 9],
     [4, 5, 6],
     [1, 2, 3]]","def matrixMultiplication(A,B): 
 
    return [[sum(a*b for a,b in zip(A_row,B_col))  
                 for B_col in zip(*B)] for A_row in A] 

A = [[1, 2, 3], 
     [4, 5, 6], 
     [7, 8, 9]] 

B = [[7, 8, 9], 
     [4, 5, 6], 
     [1, 2, 3]]

C = matrixMultiplication(A,B) 

for i in range(len(C)): 
    print(C[i])","def matrixMultiplication(A,B): 
 
    return [[sum(a*b for a,b in zip(A_row,B_col))  
                 for B_col in zip(*B)] for A_row in A] 

A = [[1, 2, 3], 
     [4, 5, 6], 
     [7, 8, 9]] 

B = [[7, 8, 9], 
     [4, 5, 6], 
     [1, 2, 3]]

C = matrixMultiplication(A,B) 

for i in range(len(C)): 
    print(C[i])",correct,Loops
Write a Python program to create a 3D scatterplot.,,"import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

fig = plt.figure()
ax = Axes3D(fig)

# Data for a three-dimensional line
zline = [0, 1, 2, 3]
xline = [0, 1, 2, 3]
yline = [0, 1, 2, 3]
ax.scatter3D(xline, yline, zline, c=zline, cmap='Greens');

plt.show()","import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

fig = plt.figure()
ax = Axes3D(fig)

# Data for a three-dimensional line
zline = [0, 1, 2, 3]
xline = [0, 1, 2, 3]
yline = [0, 1, 2, 3]
ax.scatter3D(xline, yline, zline, c=zline, cmap='Greens');

plt.show()",Syntax Error,String Manipulation
Create a code to extract articles from all Wikipedia pages.,,"""""""
Extract articles from all Wikipedia pages.
""""""
import wikipedia

wiki_pages = wikipedia.search('Python')

# Fetch content of all the pages
for page in wiki_pages:
    content = wikipedia.page(page).content
    # Parse the content and extract articles
    extract_articles(content)","""""""
Extract articles from all Wikipedia pages.
""""""
import wikipedia

wiki_pages = wikipedia.search('Python')

# Fetch content of all the pages",Incomplete Answer,Loops
Write a python function to check whether the given string is made up of two alternating characters or not.,,"def is_Two_Alter(s):  
    for i in range (len( s) - 2) : 
        if (s[i] != s[i + 2]) : 
            return False
    if (s[0] == s[1]): 
        return False
    return True","def is_Two_Alter(s):  
    for i in range (len( s) - 2) : 
        if (s[i] != s[i + 2]) : 
            return False
    if (s[0] == s[1]): 
        return False
    return True",Syntax Error,File I/O
Create a for loop in Python that prints the output of a multiplication table for numbers from 1 to 10.,-,"for i in range(1, 11):
  for j in range(1, 11):
    print(i * j, end='\t')
  print()","for i in range(1, 11):
  for j in range(1, 11):
    pritn(i * j, end='\t')
  pritn()",Syntax Error,Recursion
Create a Python program that looks through a list of colors and returns those colors that are dark.,"['Red', 'Orange', 'Green', 'Purple', 'Black', 'White']","def find_dark_colors(colors):
    dark_colors = []
    for color in colors:
        if color == 'Black' or color == 'Purple':
            dark_colors.append(color)
    return dark_colors

result = find_dark_colors(['Red', 'Orange', 'Green', 'Purple', 'Black', 'White'])
print(result)","def find_dark_colors(colors:
    dark_colors = []
    for color in colors:
        if color == 'Black' or color == 'Purple':
            dark_colors.append(color
    return dark_colors

result = find_dark_colors(['Red', 'Orange', 'Green', 'Purple', 'Black', 'White']
print(result",Syntax Error,Loops
Create a Python function to evaluate a given polynomial equation,P(x) = x^2 - 4x + 6,"def poly_evaluation(x):
  return x**2 - 4*x + 6

x = 2
result = poly_evaluation(x)
print(result) # prints 0","def poly_evaluation(x):
  return x**2 - 4*x + 6

x = 2
result = poly_evaluation(x)
pritn(result) # pritns 0",Syntax Error,String Manipulation
Develop a Python script for checking for palindromes.,<none>,"def is_palindrome(word):
  rev_word = word[::-1]
  if word == rev_word:
    return True
  return False","def is_palindrome(word):
  rev_word = word[::-1]
  if word == rev_word:
    return True
  return False",Syntax Error,Loops
"You need to classify if a given python code contains an error or not. Output true if there is an error, false if there is not.","x=1
y=""2""
z=x+y",TRUE,TRUE,correct,Recursion
Create a method in Python that takes a list of numbers and returns its average.,"[7, 8, 10, 4, 11]","def avg(list): 
	sum = 0
	for item in list:
		sum += item 
	return sum / len(list) 

list1 = [7, 8, 10, 4, 11]
result = avg(list1) 
  
print(""Average of all items: "", result)","def avg(list): 
	sum = 0
	for item in list:
		sum += item 
	return sum / len(list) 

li",Incomplete Answer,File I/O
Optimize an existing Python code snippet to print all even numbers between 1 and 10.,"num = 1
while num<=10:
    print(num)
    num+=1","num = 0
while num<=10:
    if num % 2 == 0:
        print(num)
    num+=1","num = 0
while num<=10:
    if num % 2 == 0:
        print(name, num)
    num+=1",Syntax Error,Loops
Design a data structure in Python to store a list of student names and their ages.,,"student_data = {
 ""student1"" : {""name"": ""John"", ""age"": 20},
 ""student2"" : {""name"": ""Sam"", ""age"": 22},
 ""student3 : {""name"": ""Alice"", ""age"": 19}
}","student_data = {
 ""student1"" : {""name"": ""John"", ""age"": 20},
 ""student2"" ",Incomplete Answer,File I/O
Write Python code to print out the prime numbers from 1 to 100,,"for i in range(2, 101):
    for j in range(2, i):
        if i % j == 0:
            break
    else:
        print(i)","for i in range(2, 101):
    for j in range(2, i):
        ",Incomplete Answer,File I/O
Write a Python program to parse a JSON string and store the result in a new dictionary.,"json_string = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'","import json

# parse JSON string into a dictionary
json_dict = json.loads(json_string) 
  
# result 
print(json_dict) 

# Output:
{'name': 'John', 'age': 30, 'city': 'New York'}","import json

# parse JSON string into a dictionary
json_dict = json.loads(json_string) 
",Incomplete Answer,Loops
Generate pseudo-random numbers in Python.,,"# Generate pseudo-random numbers in Python

import random

# Generate a pseudo-random number between 0 and 1
num = random.random()
print(""Pseudo-random number between 0 and 1: "", num)

# Generate pseudo-random numbers from a discrete set
num = random.choice([1, 2, 3, 4, 5])
print(""Pseudo-random number from a discrete set: "", num)","# Generate pseudo-random numbers in Python

import random

# Generate a pseudo-random number between 0 and 1
num = random.random(
print(""Pseudo-random number between 0 and 1: "", num

# Generate pseudo-random numbers from a discrete set
num = random.choice([1, 2, 3, 4, 5]
print(""Pseudo-random number from a discrete set: "", num",Syntax Error,OOP
Generate a Python code to automatically add an item to the beginning of a given array.,"arr = [1,2,3,4,5]
new_item = 7","def add_item_to_beginning(arr, new_item):
    return [new_item] + arr","def add_item_to_beginning(arr, new_item):
    return [new_item] + arr",correct,OOP
Write a Python function to find the most frequent element in a list.,,"def most_frequent(list): 
    counter = 0
    num = list[0] 
      
    for i in list: 
        curr_frequency = list.count(i) 
        if(curr_frequency> counter): 
            counter = curr_frequency 
            num = i 
  
    return num","def most_frequent(list): 
    counter = 0
    num = list[0] 
      
    for i in list: 
        curr_frequency = list.count(i) 
        if(curr_frequency> counter): 
            counter = curr_frequency 
            num = i 
  
    return num",correct,String Manipulation
Write a Python program to randomly select a number of elements from a list without any repeat,"[1,2,3,4,5]","import random

def random_select(arr, k):
    new_arr = random.sample(arr,k)
    return new_arr","import random

def random_select(arr, k)
    new_arr = random.sample(arr,k)
    return new_arr",Syntax Error,Loops
Construct a Python program that takes in two numbers from the user and swap them.,,"def swap(x, y):
    x, y = y, x
    return x, y

x = int(input(""Enter x: ""))
y = int(input(""Enter y: ""))
x, y = swap(x, y)
print(""x:"", x, ""y:"", y) #output: x: 4  y: 8","def swap(x, y)
    x, y = y, x
    return x, y

x = int(input(""Enter x ""))
y = int(input(""Enter y ""))
x, y = swap(x, y)
print(""x"", x, ""y"", y) #output x 4  y 8",Syntax Error,Recursion
Generate a list comprehensions in Python that takes a positive integer and creates a list with all its factors.,15,"factors = [list_element for list_element in range(1,15+1) if 15%list_element == 0]","factors = [list_element for list_element in range(1,15+1) if 15%list_element == 0]",Syntax Error,Loops
Create a GUI in Python using Tkinter that can register user input and display a respective result.,,"import tkinter as tk

root = tk.Tk()

def calculate_result():
    result = input_field.get()
    output_label.config(text=result)

input_field = tk.Entry(root)
input_field.pack()

submit_button = tk.Button(root, text=""Calculate"", command = calculate_result)
submit_button.pack()

output_label = tk.Label(root, text=""Result..."")
output_label.pack()

root.mainloop()","import tkinter as tk

root = tk.Tk()

def calculate_result():
    result = input_field.get()
    output_label.config(text=result)

input_field = tk.Entry(root)
input_field.pack()

submit_button = tk.Button(root, text=""Calculate"", command = calculate_result)
submit_button.pack()

output_label = tk.Label(root, text=""Result..."")
output_label.pack()

root.mainloop()",Syntax Error,Recursion
Create an AWS Lambda function in Python that handles GET requests to the URL /hello and responds with a welcome message.,,"import json

def lambda_handler(event, context):
    if event['httpMethod'] == 'GET':
        response =  {
            'statusCode': 200,
            'headers': {'Content-Type': 'application/json'},
            'body': json.dumps({'message': 'Welcome!'})
        }
        return response","import json

def lambda_handler(event, context):
    if event['httpMethod'] == 'GET':
        response =  {
            'statusCode': 200,
            'headers': {'Content-Type': 'application/json'},
            'body': json.dumps({'message': 'Welcome!'})
        }
        return response",correct,Loops
Write a Python program to create a tuple with 10 random numbers.,,"import random

def create_random_tuple():
    tup = ()
    while len(tup) < 10:
        tup += (random.randint(1,100), )
    return tup","import random

def create_random_tuple()
    tup = ()
    while len(tup) < 10
        tup += (random.randint(1,100), )
    return tup",Syntax Error,Loops
Create a HTTP GET request in Python to retreive an API request.,,"import requests

url = ""https://example.com""

# Send Get request to the API
response = requests.get(url)

# Store the response text
response_text = response.text","import requests

url = ""https//example.com""

# Send Get request to the API
response = requests.get(url)

# Store the response text
response_text = response.text",Syntax Error,String Manipulation
Produce a logic in Python to truncate a given string after the given number of characters.,"String = ""Hello World"", length = 4","def string_truncate(string, length):
    if length > len(string):
        return string
    else:
        return string[:length] + '...'","def string_truncate(string, length)
    if length > len(string)
        return string
    else
        return string[length] + '...'",Syntax Error,String Manipulation
Generate random numbers between 1 and 2 using the random module in Python.,,"import random

random_number = random.uniform(1, 2)
print(random_number)","import random

random_number = rando",Incomplete Answer,Loops
Sort the given list of numbers in ascending order using quick sort in Python.,"arr = [7, 4, 6, 5, 9, 4]","def quick_sort(arr):
    if len(arr) <= 1:
        return arr
 
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left) + middle + quick_sort(right)","def quick_sort(arr:
    if len(arr <= 1:
        return arr
 
    pivot = arr[len(arr // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left + middle + quick_sort(right",Syntax Error,String Manipulation
Create a Python function called print_name that will print out the given name.,,"def print_name(name):
    print(name)","def print_name(name:
    print(name",Syntax Error,Recursion
Write a for loop to print all the keys and values of a Python dictionary.,"my_dict = {
    ""name"": ""John"",
    ""age"": 30,
    ""city"": ""New York""
}","for key,value in my_dict.items(): 
    print(key,"" :"",value)","for key,value in my_dict.items",Incomplete Answer,Recursion
Write a python function to find the average of even numbers till a given even number.,,"def average_Even(n) : 
    if (n% 2!= 0) : 
        return (""Invalid Input"") 
        return -1  
    sm = 0
    count = 0
    while (n>= 2) : 
        count = count+1
        sm = sm+n 
        n = n-2
    return sm // count ","def average_Even(n : 
    if (n% 2!= 0 : 
        return (""Invalid Input"" 
        return -1  
    sm = 0
    count = 0
    while (n>= 2 : 
        count = count+1
        sm = sm+n 
        n = n-2
    return sm // count ",Syntax Error,File I/O
Generate a Python program to find the distinct pair of the numbers whose product is equal to a given number.,product = 24,"def distinct_pair(product):
    pairs = []
    for i in range(1,product):
        if product % i == 0:
            pairs.append((i,product//i))

    return set(pairs)","def distinct_pair(product)
    pairs = []
    for i in range(1,product)
        if product % i == 0
            pairs.append((i,product//i))

    return set(pairs)",Syntax Error,File I/O
"Using Python, write a program that prints out the Fibonacci sequence up until the number 100.",,"def Fibonacci(n): 
 a = 0
 b = 1
 
 if n < 0: 
  print(""Incorrect input"") 
 elif n == 0: 
  return a 
 elif n == 1: 
  return b 
 else: 
  for i in range(2,n+1): 
   c = a + b 
   a = b 
   b = c 
  return b 
 
# Function to display Fibonacci sequence until number 100
for i in range(101):
  print(Fibonacci(i),end = "" "")","def Fibonacci(n): 
 a = 0
 b = 1
 
 if n < 0: 
  print(name, ""Incorrect input"") 
 elif n == 0: 
  return a 
 elif n == 1: 
  return b 
 else: 
  for i in range(2,n+1): 
   c = a + b 
   a = b 
   b = c 
  return b 
 
# Function to display Fibonacci sequence until number 100
for i in range(101):
  print(name, Fibonacci(i),end = "" "")",Syntax Error,String Manipulation
Design a function in Python to remove the vowels from a given string.,"text = ""Hello World""","def remove_vowels(text):
    """"""Remove the vowels from a given string.""""""
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    result = """"
    for char in text:
        if char.lower() not in vowels:
            result += char
    return result

# Output
print(remove_vowels(text))","def remove_vowels(text):
    """"""Remove the vowels from a given string.""""""
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    result = """"
    for char in text:
        if char.lower() not in vowels:
            result += char
    return result

# Output
print(name, remove_vowels(text))",Syntax Error,OOP
Convert the following function written in Python to Java.,"def add_two_numbers(a, b):
    return a + b","public int add_two_numbers(int a, int b){
    return a + b;
}","public int add_two_numbers(int a, int b){
    return a + b;
}",Syntax Error,Loops
Create a Python program to read a list of strings and display the same strings in a reverse order.,"[""Apple"", ""Banana"", ""Mango"", ""Orange""]","def reverse_strings(string_list):
 reversed_string_list = []
 for string in string_list:
 reversed_string_list.insert(0, string)
 return reversed_string_list

string_list = [""Apple"", ""Banana"", ""Mango"", ""Orange""]
print(reverse_strings(string_list))","def reverse_strings(string_list):
 reversed_string_list = []
 for string in string_list:
 reversed_string_list.insert(0, string)
 return reversed_string_list

string_list = [""Apple"", ""Banana"", ""Mango"", ""Orange""]
print(reverse_strings(string_list))",Syntax Error,Loops
Write a python function to count the number of words in a sentence that are longer than the given length.,"sentence = ""This is a sample sentence""
length = 4","def count_long_words(sentence, length):
    words = sentence.split()
    count = 0
    
    for word in words:
        if len(word) > length:
            count += 1
    return count","def count_long_words(sentence, length):
    words = sentence.split()
    count = 0
    
  ",Incomplete Answer,File I/O
Design a Python code to encrypt a given password argument with AES encryption.,,"from Crypto.Cipher import AES

def encrypt_password(password):
    key = b'Sixteen byte key'
    cipher = AES.new(key,AES.MODE_EAX)
    nonce = cipher.nonce
    ciphertext, tag = cipher.encrypt_and_digest(password.encode('utf-8'))
    return [ciphertext, tag, nonce]

if __name__ == '__main__':
    password = ""abc123""
    print(encrypt_password(password))","from Crypto.Cipher import AES

def encrypt_password(password):
    key = b'Sixteen byte key'
    cipher = AES.new(key,AES.MODE_EAX)
    nonce = cipher.nonce
    ciphertext, tag =",Incomplete Answer,File I/O
Develop a Python program to generate a random password of length 8 that consists of letters and numbers.,,"import random
import string

def  generate_password():
    chars = string.ascii_letters + string.digits
    size = 8
    return ''.join(random.choice(chars) for x in range(size))

print(generate_password())","import random
import string

def  generate_password():
chars = string.ascii_letters + string.digits
size = 8
return ''.join(random.choice(chars) for x in range(size))

print(generate_password())",Syntax Error,OOP
Write a python function to sort a list of elements using quick sort algorithm.,,"def quick_sort(arr):
    if len(arr) < 2:
        return arr
    else:
        pivot = arr[0]
        less = [i for i in arr[1:] if i <= pivot]
        greater = [i for i in arr[1:] if i > pivot]
        return quick_sort(less) + [pivot] + quick_sort(greater)","def quick_sort(arr):
    if len(arr) < 2:
        return arr
    else:
        pivot = arr[0]
        less = [i for i in arr[1:] ",Incomplete Answer,String Manipulation
Write a Python program that returns the factorial of a number.,5,"def factorial(n):
    if n == 1:
        return 1
    else:
        return n * factorial(n-1)

result = factorial(5)
print(result)","def factorial(n)
    if n == 1
        return 1
    else
        return n * factorial(n-1)

result = factorial(5)
print(result)",Syntax Error,String Manipulation
Write a function in Python that takes a given string and checks if it is a palindrome or not.,"""racecar""","def isPalindrome(s):
    left = 0 
    right = len(s)-1 
      
    while(left < right ): 
        if (s[left] != s[right]): 
            return False
        left += 1
        right -= 1
    return True
  
print (isPalindrome(""racecar""))","def isPalindrome(s):
    left = 0 
    right = len(s)-1 
      
    while(left < right ): 
        if (s[left] != s[rig",Incomplete Answer,OOP
Transform the following code written in Java to code written in Python.,"public static int largest(int[] array) {
 int largest = array[0];
 for (int i = 1; i < array.length; i++) {
  if (array[i] > largest) {
   largest = array[i];
  }
 }
 return largest;
}","def largest(array):
 largest = array[0]
 for i in range(1, len(array)):
  if array[i] > largest:
   largest = array[i]
 return largest","def largest(array:
 largest = array[0]
 for i in range(1, len(array:
  if array[i] > largest:
   largest = array[i]
 return largest",Syntax Error,String Manipulation
Optimize a given program written in Python.,"def get_factorial(n):
    if n == 1 or n == 0:
        return 1
    else:
        return n * get_factorial(n-1)","def get_factorial(n):
    result = 1
	for i in range(1, n + 1):
		result *= i
	return result","def get_factorial(n:
    result = 1
	for i in range(1, n + 1:
		result *= i
	return result",Syntax Error,String Manipulation
Generate a function in Python to optimize a function based on the mean squared error metric.,"def f(weights):
 cost = 0
 for i in range(len(weights)):
 cost += weights[i]**2
 return cost","import gradientDescent as GD

def optimize(weights):
 cost, gradient = GD.cost_function(f, weights)
 optimizer = GD.Optimizer(learning_rate=0.01, momentum=0.9, decay=0.001)
 optimizer.run(cost, gradient)
 return optimizer.weights","import gradientDescent as GD

def optimize(weights):
 cost, gradient = GD.cost_function(f, weights)
 optimizer = G",Incomplete Answer,Loops
Create a Python program to print out the sum of squares of all the numbers from 1 to 10.,,"def sum_of_squares(numbers):
    total = 0
    for num in range(1,numbers+1):
        total += num**2
    print(total)

sum_of_squares(10)","def sum_of_squares(numbers)
    total = 0
    for num in range(1,numbers+1)
        total += num**2
    print(total)

sum_of_squares(10)",Syntax Error,OOP
Create an object-oriented class in Python for a Song.,,"class Song:
    def __init__(self, title, artist, album):
        self.title = title
        self.artist = artist
        self.album = album
    
    def print_info(self):
        print(""Title: %s, Artist: %s, Album: %s"" % (self.title, self.artist, self.album))","class Song:
    def __init__(self, title, artist, album):
        self.title = title
        self.artist = artist
        self.album = album
    
    def print_info(self):
        print(""Title: %s, Artist: %s, Album: %s"" % (self.title, self.artist, self.album))",correct,Loops
Store the provided data into a key-value object in Python.,"first_name: John

last_name: Doe

age: 28","person_data = {
    ""first_name"": ""John"",
    ""last_name"": ""Doe"",
    ""age"": 28
}","person_data = {
    ""first_name"": ""John""",Incomplete Answer,Recursion
"Using Python, can you calculate the sum of all numbers in a list?","[1, 3, 5, 7, 9]","sum = 0
for num in [1, 3, 5, 7, 9]:
    sum += num

print(sum) # 25","sum = 0
for num in [1, 3, 5, 7, 9]:
    sum += num

print(sum # 25",Syntax Error,String Manipulation
Write a Python program to optimize the given binary search tree.,,"def optimize_bst(tree):
    """"""Given a binary search tree, optimizes the tree for better search performance.""""""
    if tree is None:
        return
    optimize_bst(tree.left)
    optimize_bst(tree.right)
    if tree.left and tree.right:
        tree.data = min(tree.left.data, tree.right.data)","def optimize_bst(tree):
    """"""Given a binary search tree, optimizes the tree for better search performance.""""""
    if tree is None:
        return",Incomplete Answer,Loops
Modify the following code to reverse a string without using the built-in reverse() method in Python.,"""Hello World!""","def reverseString(string):
    newString = """"
    length = len(string)
    for i in range(length - 1, -1, -1):
        newString += string[i]
    return newString

print(reverseString(""Hello World!""))","def reverseString(string):
    newString = """"
    length = len(string)
    for i in range(length - 1, -1, -1):
        newString += string[i]
    return newString

print(name, reverseString(""Hello World!""))",Syntax Error,File I/O
Create a function in Python to print Pascal's Triangle of a given number of rows.,6,"def pascal_triangle(n):
    triangle = []

    for i in range(n):
        row = [1] * (i+1)
        triangle.append(row)

        for j in range(1,i):
            row[j] = triangle[i-1][j-1] + triangle[i-1][j]

    for row in triangle:
        print(row)

pascal_triangle(6) 
# Output: [1]
# [1, 1]
# [1, 2, 1]
# [1, 3, 3, 1]
# [1, 4, 6, 4, 1]
# [1, 5, 10, 10, 5, 1]","def pascal_triangle(n):
    triangle = []

    for i in range(n):
        row = [1] * (i+1)
        triangle.append(row)

        for j in range(1,i):
            row[j] = triangle[i-",Incomplete Answer,OOP
Generate a program in Python for merging two sorted lists into one.,,"def merge_sorted_lists(list1, list2):
    merged_list = []
    i = 0
    j = 0
    while i < len(list1) and j < len(list2):
        if list1[i] < list2[j]:
            merged_list.append(list1[i])
            i += 1
        else:
            merged_list.append(list2[j])
            j += 1
    merged_list += list1[i:]
    merged_list += list2[j:]
 
    return merged_list","def merge_sorted_lists(list1, list2):
    merged_list = []
    i = 0
    j = 0
    while i < len(list1) and j < len(list2):
        if list1[i] < list2[j]:
            merged_list.append(list1[i])
            i += 1
        else:
            merged_list.append(list2[j])
            j += 1
    merged_list += list1[i:]
    merged_list += list2[j:]
 
    return merged_list",correct,String Manipulation
Write a Python Program to take multiple inputs and prints the highest among them.,"14, 16, 2","values = [14, 16, 2]
 
highest = values[0]
 
for i in values:
    if highest < i:
        highest = i
 
print(""The highest value is: "", highest)","values = [14, 16, 2]
 
highest = values[0]
 
for i in values:
if highest < i:
    highest = i
 
print(""The highest value is: "", highest)",Syntax Error,Loops
Write a python function to sort the given string.,,"def sort_String(str) : 
    str = ''.join(sorted(str)) 
    return (str) ","def sort_String(str) : 
    str = ''.join(sorted(str)) 
    return (str) ",correct,String Manipulation
Write a Python program to create a dictionary from two lists where the first list contains keys and the second list contains values.,"keys = ['a', 'b', 'c', 'd']
values = [1, 2, 3, 4]","def create_dictionary(keys, values):
  dictionary = dict(zip(keys, values))
  return dictionary

dictionary = create_dictionary(keys, values)
print(dictionary)","def create_dictionary(keys, values):
  dictionary = dict(zip(keys, values))
  r",Incomplete Answer,Recursion
Create a class in Python to generate a multiplied n-dimensional matrix.,,"class MultidimensionalMatrix():
    def __init__(self, n):
        self.n = n
        
    def multiply_matrix(self, a, b):
        if len(a[0]) == len(b):
            result = [[sum(a*b for a,b in zip(i,j)) for j in zip(*b)]
                      for i in a]
            return result
        else:
            print(""Incompatible matrix"")","class MultidimensionalMatrix():
    def __init__(self, n):
        self.n = n
        
    def multiply_matrix(self, a, b):
        if len(a[0]) == len(b):
            result = [[sum(a*b for a,b in zip(i,j)) for j in zip(*b)]
                      for i in a]
            return result
        else:
            print(""Incompatible matrix"")",correct,File I/O
Create a function to parse a JSON string and return a Python dictionary.,"'{""name"": ""John"", ""age"": 32}'","import json

def parseJSON(json_string):
    return json.loads(json_string)

dictionary = parseJSON('{""name"": ""John"", ""age"": 32}')","import json

def parseJSON(json_string):
    return json.loads(js",Incomplete Answer,File I/O
Create a basic class in Python with three properties and a constructor.,,"class MyClass:
 def __init__(self, data1, data2, data3):
  self.data1 = data1
  self.data2 = data2
  self.data3 = data3","class MyClass:
 def __init__(self, data1, data2, data3):
  ",Incomplete Answer,Recursion
Write a function to decode a run-length encoded given list.,,"def decode_list(alist):
    def aux(g):
        if isinstance(g, list):
            return [(g[1], range(g[0]))]
        else:
            return [(g, [0])]
    return [x for g in alist for x, R in aux(g) for i in R]","def decode_list(alist):
    def aux(g):
        if isinstance(g, list):
            return [(g[1], range(g[0]))]
        else:
            return [(g, [0])]
    return [x for g in alist for x, R in aux(g) for i in R]",correct,Loops
Generate a code to find the number of 1-bits in an integer,,"# Python Program to count the number of ones in a number. 
def FindOnes(num): 
    count = 0 
    while (num): 
        num = num & (num - 1) 
        count = count + 1
          
    return count
  
# Driver Code 
num = 23
print(FindOnes(num))","# Python Program to count the number of ones in a number. 
def FindOnes(num): 
    count = 0 
    while (num): 
        nu",Incomplete Answer,File I/O
"Given an array of strings, build an algorithm in Python to determine the index of the element that contains the smallest number of characters.","[""Hello"", ""World"", ""Python"", ""is"", ""Fun""]","def min_length_index(arr):
  min = float('infinity')
  min_i = 0
  for i in range(len(arr)):
    if len(arr[i]) < min:
      min = len(arr[i])
      min_i = i
  return min_i

print(min_length_index([""Hello"", ""World"", ""Python"", ""is"", ""Fun""])) # 3","def min_length_index(arr):
  min = float('infinity')
  min_i = 0
  for i in range(len(arr)):
    if len(arr[i]) < min:
   ",Incomplete Answer,Loops
Write a python function to check whether the given number is a perfect square or not.,,"def is_Perfect_Square(n) :
    i = 1
    while (i * i<= n):
        if ((n % i == 0) and (n / i == i)):
            return True     
        i = i + 1
    return False","def is_Perfect_Square(n) :
    i = 1
    while (i * i<= n):
        if ((n % i == 0) and (n / i == i)):
            return True     
        i = i + 1
    return False",Syntax Error,File I/O
Write a Python script to extract emails from a given text.,,"import re
 
text = ""... text content ...""
 
# Search for all emails
emails = re.findall(r""[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+"", text)
print(emails)","import re
 
text = ""... text content ...""
 
# Search for all emails
emails = re",Incomplete Answer,Loops
Write a Python function to sort a list of tuples according to the second element of each tuple.,"[(4, 3), (2, 5), (0, 1)]","def sort_by_tuple_second(tuple_list):
    tuple_list.sort(key=lambda x: x[1])
    return tuple_list","def sort_by_tuple_second(tuple_list):
    tuple_l",Incomplete Answer,File I/O
Create a Python class for representing a stack.,,"class Stack:
    def __init__(self):
        self.items = []

    def isEmpty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def peek(self):
        return self.items[len(self.items)-1]

    def size(self):
        return len(self.items)","class Stack:
    def __init__(self):
        self.items = []

    def isEmpty(self):
        return self.items == []

    def push(self, item):
        self.items.append(it",Incomplete Answer,String Manipulation
"Generate a Python class to store data about a person's name, age and address.",,"class Person:
	def __init__(self, name, age, address):
		self.name = name
		self.age = age
		self.address = address","class Person:
	def __init__(self, name, age, address):
		",Incomplete Answer,File I/O
Generate Python code to print a star pattern.,,"for i in range(5): 
    for j in range(i): 
        print ('* ', end="""") 
    print('') 
  
for i in range(5,0,-1): 
    for j in range(i): 
        print('* ', end="""") 
    print('')","for i in range(5): 
    for j in range(i): 
        print ('* ', end="""") 
    print('') 
  
for i in range(5,0,-1): 
    for j in range(i): 
        print('* ', end="""") 
    print('')",correct,String Manipulation
Write a python function to determine whether all the numbers are different from each other are not.,,"def test_distinct(data):
  if len(data) == len(set(data)):
    return True
  else:
    return False;","def test_distinct(data):
  if len(data) == len(set(",Incomplete Answer,String Manipulation
Create a Python program that separates odd and even numbers.,"[3, 4, 7, 12, 19]","def odd_even(numbers):
    odd = []
    even = []
    for num in numbers:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return odd, even

odds, evens = odd_even([3, 4, 7, 12, 19])
print(odds) # prints: [3, 7, 19]
print(evens) # prints: [4, 12]","def odd_even(numbers):
    odd = []
    even = []
    for num in numbers:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return odd, even

odds, evens = odd_even([3, 4, 7, 12, 19])
pritn(odds) # pritns: [3, 7, 19]
pritn(evens) # pritns: [4, 12]",Syntax Error,Loops
Generate a Python program that takes a list of numbers and an integer threshold as inputs and returns the list elements that are greater than or equal to the threshold.,"[2, 8, 10, 13, 15], 10","def filter_numbers(nums, threshold):
 return [num for num in nums if num >= threshold]
 
 numbers = [2, 8, 10, 13, 15]
 threshold = 10
 
 print(filter_numbers(numbers, threshold))
# Output: [10, 13, 15]","def filter_numbers(nums, threshold):
 return [num for num in nums if num >= threshold]
 
 numbers = [",Incomplete Answer,String Manipulation
Generate a function in Python that returns the cumulative sum of a list of numbers.,"[1, 2, 3, 4]","def cumulative_sum(nums):
 sums = []
 current_sum = 0
 
 for n in nums:
 current_sum += n
 sums.append(current_sum)
 
 return sums
 
print(cumulative_sum([1, 2, 3, 4]))    # [1, 3, 6, 10]","def cumulative_sum(nums):
 sums = []
 current_sum = 0
 
 for n in nums:
 current_sum += n
 su",Incomplete Answer,Loops
Write a Python script to parse and extract a list of names from a provided sentence.,"""Joe, Mary, and Jake""","names = []

sentence = ""Joe, Mary, and Jake""

words = sentence.split()

for word in words:
 if word.endswith(','):
  names.append(word[:-1])
 elif word.startswith('and'):
  names.append(word[4:])
 else:
  names.append(word)
  
print(names) # Output: ['Joe', 'Mary', 'Jake']","names = []

sentence = ""Joe, Mary, and Jake""

words = sentence.split()

for word in words:
 if word.endswith(','):
  names.append(word[:",Incomplete Answer,OOP
Design an algorithm in Python to find the maximum key from a given dictionary.,"{1: 'one', 4: 'four', 5: 'five', 8: 'eight', 10: 'ten', 13: 'thirteen'}","def max_key(dict):
    max_key = -1
    max_val = -1
    for key, val in dict.items():
        if key > max_key and val > max_val:
            max_key = key
            max_val = val
    return max_key","def max_key(dict:
    max_key = -1
    max_val = -1
    for key, val in dict.items(:
        if key > max_key and val > max_val:
            max_key = key
            max_val = val
    return max_key",Syntax Error,OOP
Design a class to represent a car in Python.,,"class Car:
    def __init__(self, make, model, year):
        self.make = make
        self.model = model 
        self.year = year
        self.speed = 0

    def accelerate(self):
        self.speed += 10

    def brake(self):
        self.speed -= 10

    def get_speed(self):
        return self.speed","class Car:
    def __init__(self, make, model, year):
        self.make = make
        self.model = model 
        self.year = year
        self.speed = 0

    def accelerate(self):
        self.speed += 10

    def brake(self):
        self.speed -= 10

    def get_speed(self):
        return self.speed",correct,String Manipulation
Improve the following small python program to make a valid babynames list.,"babynames = ['bob', 'alice', 'billy']","babynames = ['Bob', 'Alice', 'Billy']","babynames = ['Bob', 'Alice', 'Billy']",Syntax Error,Loops
Write a Python program to count the number of even and odd numbers in a given list of integers.,"[1, 2, 3, 4, 5, 6]","def count_even_odd(numbers):
 even_count = 0
 odd_count = 0
 for num in numbers:
     if num % 2 == 0:
         even_count += 1
     else:
         odd_count += 1
 return even_count, odd_count","def count_even_odd(numbers):
 even_count = 0
 odd_count = 0
 for num in numbers:
     if num % 2 == 0:
         even_count += 1
     else:
         odd_count += 1
 return even_count, odd_count",correct,String Manipulation
"Write a Python program to generate all possible strings by using 'a', 'e', 'i', 'o', 'u'.",,"def generate_combinations(s):
    i = 0
    result = []
    for a in s:
        for b in s:
            for c in s:
                for d in s:
                    for e in s:
                        result.append(a+b+c+d+e)
    return result

print(generate_combinations(['a', 'e', 'i', 'o', 'u']))","def generate_combinations(s):
    i = 0
    result = []
    for a in s:
        for b in s:
            for c in s:
                for d in s:
                    for e in s:
                        result.append(a+b+c+d+e)
    return result

pritn(generate_combinations(['a', 'e', 'i', 'o', 'u']))",Syntax Error,File I/O
Create an algorithm in Python to find the number of pairwise disjoint subsets of a given set.,"{1, 2, 3, 4, 5}","def subsets(s):
    res = []
    for i in range(1 << len(s)):
        subset = [list(s)[x] for x in range(len(s)) if i & (1 << x)]
        if not any(set(subset).issubset(r) for r in res):
            res.append(subset)
    return res","def subsets(s):
    res = []
    for i in range(1 << len(s)):
        subset = [list(s)[x] for x in range(len(s)) if ",Incomplete Answer,String Manipulation
Use a while-loop in Python to print the sum of the first 10 natural numbers.,,"num = 1
sum = 0
while num <= 10:
    sum = sum + num
    num = num + 1

print(sum)  # Output: 55","num = 1
sum = 0
while num <= 10:
    sum = sum + num
    num = num + 1

print(sum)  # Output: 55",correct,OOP
Write a Python program to remove all the elements in a dictionary with a given value.,"dictionary: {'a': 1, 'b': 2, 'c': 3, 'd': 3}, value: 3","dictionary = {'a': 1, 'b': 2, 'c': 3, 'd': 3}
value = 3

dictionary = {key:val for key, val in dictionary.items() if val != value}

print(dictionary)","dictionary = {'a': 1, 'b': 2, 'c': 3, 'd': 3}
value = 3

dictionary = {key",Incomplete Answer,File I/O
Is it possible to create a Python program that converts a given string to a different case?,,"def convert_string_case(string):
    new_string = string.swapcase()
    return new_string

string = ""this Is A TeST""
new_string = convert_string_case(string)
print(new_string)","def convert_string_case(string):
    new_string = string.swapcase()
    return new_stri",Incomplete Answer,String Manipulation
Create a Python function to return a list that its elements are in descending order based on input parameter.,"[7, 4, 3, 10, 2, 1]","def sort_descending(lst):
    return sorted(lst, reverse=True)
  
# Example 
list_sample = [7, 4, 3, 10, 2, 1]
result = sort_descending(list_sample)  
print(result) 
# Output: [10, 7, 4, 3, 2, 1]","def sort_descending(lst):
    return sorted(lst, reverse=True)
  
# Example 
list_sample = [7, 4,",Incomplete Answer,String Manipulation
Train a linear regression model using Python to predict the prices of houses.,,"import pandas as pd
from sklearn.linear_model import LinearRegression

#load dataset
df = pd.read_csv(""housing_data.csv"")

#split dataset
X = df.drop(""price"", axis=1)
y = df[""price""]

#train model
model = LinearRegression()
model.fit(X, y)","import pandas as pd
from sklearn.linear_model import LinearRegression

#load dataset
df = pd.read_csv(""housing_data.csv",Incomplete Answer,String Manipulation
Create a Python program that takes input from the user and prints out the reversed string.,,"user_input = input('Enter a string: ')

rev_string = user_input[::-1]

print(f""The reversed string is: {rev_string}"")","user_input = input('Enter a string: ')

rev_string = user_input[::-1]

print(name, f""The reversed string is: {rev_string}"")",Syntax Error,String Manipulation
Chart the following equation y=3x+2 using Python.,,"import matplotlib.pyplot as plt

x_values = range(-20, 21)
y_values = [3*x+2 for x in x_values]

plt.plot(x_values, y_values)
plt.xlabel('x')
plt.ylabel('y')
plt.title('y = 3x + 2')
plt.show()","import matplotlib.pyplot as plt

x_values = range(-20, 21)
y_values = [3*x+2 for x in x_values]

plt.plot(x_values, y_values)
plt.xlabel('x')
plt.ylabel('y')
plt.title('y = 3x + 2')
plt.show()",correct,OOP
Compose a python program to find the sum of the digits of a given number.,,"def sum_of_digits(num):
    sum = 0
    while(num > 0):
        d = num % 10
        num = num // 10
        sum += d
    return sum","def sum_of_digits(num):
    sum = 0
    while(num > 0):
        d = num % 10
        num = num // 10
        sum += d
    return sum",Syntax Error,Recursion
Design an API endpoint in Python that takes in a PDF document and returns the number of words in it.,,"@app.route('/api/getWordCount', methods=['POST'])
def getWordCount():
    """"""Endpoint for getting words count in PDF document""""""
    data = request.get_json()
    pdf = data['pdf'] 
    word_count = count_words(pdf)
    return jsonify({'wordCount': word_count})","@app.route('/api/getWordCount', methods=['POST'])
def getWordCount():
    """"""Endpoint for getting words count in PDF document""""""
 ",Incomplete Answer,String Manipulation
Write a Python program that takes a string as input and returns a new string with all vowels removed.,hello,"# Function to remove vowels
def removeVowels(str):
  vowels = ('a', 'e', 'i', 'o', 'u')
  for x in str.lower():
    if x in vowels:
      str = str.replace(x,"""")
  print(str)  

# Driver program
str = ""Hello""
removeVowels(str)

# Output:
Hll","# Function to remove vowels
def removeVowels(str):
  vowels = ('a', 'e', 'i', 'o', 'u')
  for x in str.lower():
    if x in vowels:
      str = str.replace(x,"""")
  print(str)  

# Driver program
str = ""Hello""
removeVowels(str)

# Output:
Hll",correct,String Manipulation
"Create a Python function that takes two parameters, a number (n) and a word (w), and prints out the word n number of times.","3, ""Hello""","def repeat(n, w):
    for i in range(n):
        print(w)

repeat(3, ""Hello"")  # Output: Hello Hello Hello","def repeat(n, w):
    for i in range(n):
        print(w)

repeat(3, ""Hello"")  # Output: Hello Hello Hello",correct,OOP
Design a function in Python to find the area of a circle from the given radius.,5,"def areaCircle(radius):
    pi = 3.14
    area = pi * (radius**2)
    return area

print(areaCircle(5)) # 78.5","def areaCircle(radius):
    pi = 3.14
    area = pi * (radius**2)
    return area

print(areaCircle(5)) # 78.5",correct,Loops
Write a Python script to print a multiplication table for all the numbers from 1 to 10.,,"for i in range(1, 11):
  for j in range(1, 11):
    print(i*j, end=""\t"")
  print()","for i in range(1, 11:
  for j in range(1, 11:
    print(i*j, end=""\t""
  print(",Syntax Error,String Manipulation
Write code in Python to generate all the possible permutations of a given list.,"list = [1,2,3]","import itertools

def permute(list):
    return list(itertools.permutations(list))","import itertools

def permute(list):
return list(itertools.permutations(list))",Syntax Error,File I/O
Classify the following Python code as syntactically correct or incorrect,"def add():
 a=1
    b=2
    c=a+b
    print(c)",incorrect,incorrect,correct,Recursion
Generate a piece of code to demonstrate the usage of for loop in python.,,"for i in range(10):
  print('The value of the variable i is: ', i)","for i in range(10):
  print('The value of the variable i is: ', i)",Syntax Error,File I/O
"Write a function in Python which takes in a string and an integer, n, as arguments and returns the last n characters of the string.",,"def last_n_chars(string, n):
    return string[len(string) - n:]","def last_n_chars(string, n:
    return string[len(string - n:]",Syntax Error,Recursion
Output a code in Python to find the second largest number in a list provided as input.,,"def second_largest(list): 
    first = second = float('-inf')
    for num in list:
        if num > first: 
            second = first 
            first = num 
        elif num > second and num != first: 
            second = num     
    return second","def second_largest(list): 
    first = second = float('-inf')
    for num in list:
        if num > first: 
            second = first 
            first = num 
        elif num > second and num != first: 
            second = num     
    return second",correct,OOP
Generate a code to convert a given name to its uppercase version.,john,"""""""
Python program to convert a name to uppercase
""""""

def to_uppercase(name):
 return name.upper()

name = ""john"" 
print(to_uppercase(name))","""""""
Python program to convert a name to uppercase
""""""

def to_uppercas",Incomplete Answer,File I/O
Create a Python function to shuffle a list of numbers.,"[1, 2, 3, 4, 5]","import random

def shuffle_list(nums):
 random.shuffle(nums)
 return nums

shuffled_list = shuffle_list([1, 2, 3, 4, 5])
print(shuffled_list) #[3, 5, 2, 4, 1]","import random

def shuffle_list(nums):
 random.shuffle(nums)
 return nums

shuffled_list = shuffle_list([1, 2, 3, 4, 5])
print(shuffled_list) #[3, 5, 2, 4, 1]",correct,File I/O
Write a function to find the intersection of two arrays using lambda function.,,"def intersection_array(array_nums1,array_nums2):
 result = list(filter(lambda x: x in array_nums1, array_nums2)) 
 return result","def intersection_array(array_nums1,array_nums2):
 result = list(",Incomplete Answer,String Manipulation
Create a web application that will store and display a user's contacts.,,"We can create a web application for storing and displaying a user's contacts. We can use HTML, CSS, and JavaScript for creating the front-end of the application. Then, we can use Python to create the backend of the application. We can also use a database like MongoDB to store the user's contacts.","We can create a web application for storing and displaying a user's contacts. We can use HTML, CSS, and JavaScript for creating the front-end of the application. Then, we can use Python to create the backend of the application. We can also use a database like MongoDB to store the user's contacts.",Syntax Error,OOP
"Using Regular Expressions, create a Python program that finds all the words in a given sentence that end with 'ing'.",This is a sentence containing a lot of words ending in 'ing'.,"import re
 
sentence = ""This is a sentence containing a lot of words ending in 'ing'.""
pattern = r""\w+ing\b""
 
words = re.findall(pattern, sentence)
 
print(words)
 
# Output: ['containing', 'ending']","import re
 
sentence = ""This is a sentence containing a lot of words ending in 'ing'.""
pattern = r""\",Incomplete Answer,Recursion
Create a Python lambda expression that prints out the square of each item in an input list.,"[1, 2, 3]","square = lambda nums: [x*x for x in nums]

squares = square([1,2,3])
print(squares)","square = lambda nums: [x*x for x in nums]

squares = square([1,2,3])
print(squares)",correct,Recursion
Write a Python program to calculate the sum of all even numbers less than or equal to n.,,"def sum_of_even_numbers(n):
 result = 0
 for i in range(2, n+1, 2):
 result += i
 return result","def sum_of_even_numbers(n)
 result = 0
 for i in range(2, n+1, 2)
 result += i
 return result",Syntax Error,OOP
"Create a Python function that takes in two parameters, a list of numbers and a number to be compared to the list. The function should return the number of elements in the list that are larger than the parameter number.","nums = [3,5,7,1,2]
num_to_compare = 3","def larger_than_num(nums, num_to_compare):
  count = 0
  for num in nums:
    if num > num_to_compare:
      count += 1
  
  return count

print(larger_than_num(nums, num_to_compare)) # 3","def larger_than_num(nums, num_to_compare):
  count = 0
  for num in nums:
    if num > num_to",Incomplete Answer,Recursion
Write a Python program to check if an item exists in a given list.,"mylist = [1,2,3,4,5]","def item_exists(mylist, element):
    if element in mylist:
        return True
    return False

result = item_exists([1,2,3,4,5], 3)
print(result)","def item_exists(mylist, element):
    if element in mylist:
        return",Incomplete Answer,OOP
Design a Python program to remove duplicates from a given array.,"[1, 3, 5, 1, 5, 9]","def remove_duplicates(arr): 
    final_list = [] 
    for num in arr: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list","def remove_duplicates(arr): 
    final_list = [] 
    for num in arr: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list",correct,String Manipulation
Generate a Python program to add a prefix and suffix to each elements of a list.,"[apple, banana, cherry]","def add_prefix_suffix(lst, prefix, suffix): 
	return [prefix + i + suffix for i in lst]","def add_prefix_suffix(lst, prefix, suffix):",Incomplete Answer,String Manipulation
Create a Python function that takes a string as an argument and returns the number of vowels present in the string.,,"def num_vowels(string):
 num_vowels = 0
 for char in string:
 if char in ""aeiouAEIOU"":
 num_vowels += 1
 return num_vowels","def num_vowels(string):
 num_vowels = 0
 for char in string:
",Incomplete Answer,OOP
"Using Python, build a dictionary containing the numbers from 1 to n as the key and the square of each number as the value.",n = 10,"my_dict = {}

for i in range(1,n+1):
 my_dict[i] = i**2

print(my_dict)","my_dict = {}

for i in range(1,n+1):
 my_dict[i] = i**2

print(my_dict)",correct,Recursion
Write a Python function to transpose a given matrix of size (m x n).,"[[1, 2], 
 [3, 4], 
 [5, 6]]","def transposeMatrix(matrix): 
 m = len(matrix) 
 n = len(matrix[0]) 
  
 # Create a new matrix 
 transpose = [[0 for x in range(m)] for y in range(n)] 
  
 # Iterate through the original matrix 
 for i in range(m): 
 for j in range(n): 
 transpose[j][i] = matrix[i][j] 
 return transpose","def transposeMatrix(matrix: 
 m = len(matrix 
 n = len(matrix[0] 
  
 # Create a new matrix 
 transpose = [[0 for x in range(m] for y in range(n] 
  
 # Iterate through the original matrix 
 for i in range(m: 
 for j in range(n: 
 transpose[j][i] = matrix[i][j] 
 return transpose",Syntax Error,OOP
Compile a Python script that prints out the squares of elements from 1 to a given number.,,"def print_squares(N):
    for x in range(1, N+1):
        print(x*x)","def print_squares(N):
    for x in",Incomplete Answer,Recursion
Edit this Python code to make the while loop break when the user inputs an empty string.,"user_input = input(""Please enter a word:"")
while user_input:
    print(user_input)
    user_input = input(""Please enter a word:"")","user_input = input(""Please enter a word:"")
while user_input != """":
    print(user_input)
    user_input = input(""Please enter a word:"")","user_input = input(""Please enter a word:""
while user_input != """":
    print(user_input
    user_input = input(""Please enter a word:""",Syntax Error,OOP
Write a function where a string will start with a specific number.,,"import re
def match_num(string):
    text = re.compile(r""^5"")
    if text.match(string):
        return True
    else:
        return False","import re
def match_num(string):
    text = re.compile(r""^5"")
    if text.match(string):
        return True
    else:
        return False",Syntax Error,String Manipulation
Create a Python program to generate a multiplication table.,,"def generate_table():
    for i in range(1, 11):
        for j in range(1, 11):
             print('{0} x {1} = {2}'.format(i, j, i*j))
        print('\n')","def generate_table():
    for i in range(1, 11):
        for j in range(1, 11):
             print('{0} x {1} = {2}'.format(i, j, i*j))
        print('\n')",correct,String Manipulation
Create a function in Python that takes a list of integers as an argument and then returns the maximum integer.,"[3, 5, 12, 20, 6, 4]","def find_max(a):
  max = a[0]
  for i in a:
    if i > max:
      max = i
  return max

print(find_max([3, 5, 12, 20, 6, 4]))
# 20","def find_max(a):
  max = a[0]
  for i in a:
    if i > max:
     ",Incomplete Answer,OOP
Write a Python program to format a number with a given number of decimal places.,"number = 123.4567
decimal_places = 3","def format_number(number, decimal_places):
 return f""{number:.{decimal_places}f}""","def format_number(number, decimal_places):
 return f""{number:.{decimal_places}f}""",correct,Recursion
"Create a hash function in Python that takes a string as input, and returns a fixed size integer output.",,"def calculate_hash(s):
    hash_value = 0
    for c in s:
        hash_value = (hash_value * 7 + ord(c)) % 8
    return hash_value","def calculate_hash(s):
    hash_value = 0
    for c in s:
       ",Incomplete Answer,Loops
"Create a python script that checks if all numbers in an array are greater than, equal to, or less than a given number.","[3, 5,7], 4","def checkNum(arr, num):
    response = []
    for element in arr: 
        if element > num: 
            response.append('greater than')
        elif element < num:
            response.append('less than')
        else:
            response.append('equal to')
    return response

nums = [3,5,7]
out = checkNum(nums, 4)
print(out)","def checkNum(arr, num):
    response = []
    for element in arr: 
        if element > num: 
            response.append('greater than')
        elif element < num:",Incomplete Answer,Recursion
"Using the comment as a guide, replace all the variables with their corresponding values in the given Python code.","a = 10
b = 25

# TODO: Replace the variables with their values
result = a + b","# TODO: Replace the variables with their values
result = 10 + 25",# TODO: Replace the variables wi,Incomplete Answer,File I/O
Generate a syntax to input random numbers into a python program,N = 10,"import random

# Generates N random numbers
numbers = [random.randint(0, N) for i in range(N)]","import random

# Generates N random numbers
numbers = [random.randint(0, N) for i in range(N)]",Syntax Error,File I/O
Complete the following Python function to sort a list of numbers in ascending order.,"[7, 1, 5, 4]","def sort_list(nums):
    for i in range(len(nums) - 1):
        for j in range(i + 1, len(nums)):
            if nums[i] > nums[j]:
                nums[i], nums[j] = nums[j], nums[i]
    return nums","def sort_list(nums)
    for i in range(len(nums) - 1)
        for j in range(i + 1, len(nums))
            if nums[i] > nums[j]
                nums[i], nums[j] = nums[j], nums[i]
    return nums",Syntax Error,String Manipulation
Write a function to extract specified size of strings from a give list of string values.,,"def extract_string(str, l):
    result = [e for e in str if len(e) == l] 
    return result","def extract_string(str, l):
    result = [e for e in str if len(e) == l] 
    return result",correct,Loops
Create a Python program to calculate the Fibonacci numbers up to a certain value.,The value is 50.,"def fib(n): 
 if n <= 1: 
  return n 
 else: 
  return(fib(n-1) + fib(n-2)) 

# Take input from the user 
n = int(input(""Enter a number: "")) 

# Print Fibonacci sequence up to n 
print(""Fibonacci sequence:"") 
for i in range(n): 
 print(fib(i))","def fib(n): 
 if n <= 1: 
  return n 
 else: 
  return(fib(n-1) + fib(n-2)) 

# Take input from the user 
n = int(input(""",Incomplete Answer,String Manipulation
Design a Python program to calculate the area of a triangle given three side lengths.,"3, 4, 5","def calculate_triangle_area(a, b, c):
    # Calculate the semi-perimeter
    s = (a + b + c) / 2
    # Calculate the area of the triangle
    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
    return area

a = 3
b = 4
c = 5

area = calculate_triangle_area(a, b, c)
print(""Area of the triangle is: {}"".format(area))","def calculate_triangle_area(a, b, c):
    # Calculate the semi-perimeter
    s = (a + b + c) / 2
    # Calculate the area of the triangle
    area = (s * (s ",Incomplete Answer,Recursion
Write a Python program to group a list of string elements into a dictionary of word counts.,"['hello', 'world', 'hello', 'world', 'this', 'is', 'a', 'test']","words = ['hello', 'world', 'hello', 'world', 'this', 'is', 'a', 'test']

word_counts = {word: words.count(word) for word in words}

print(word_counts)
# Output: {'hello': 2, 'world': 2, 'this': 1, 'is': 1, 'a': 1, 'test': 1}","words = ['hello', 'world', 'hello', 'world', 'this', 'is', 'a', 'test']

word_counts = {word: words.count(word) for word in words}

pritn(word_counts)
# Output: {'hello': 2, 'world': 2, 'this': 1, 'is': 1, 'a': 1, 'test': 1}",Syntax Error,OOP
Write a function to count repeated items of a tuple.,,"def count_tuplex(tuplex,value):  
  count = tuplex.count(value)
  return count","def count_tuplex(tuplex,value):  
  count = tuplex.count(value)
  return count",correct,Loops
Write a python function to calculate the product of the unique numbers of a given list.,,"def unique_product(list_data):
    temp = list(set(list_data))
    p = 1
    for i in temp:
        p *= i
    return p","def unique_product(list_data):
    temp = list(set(list_data)",Incomplete Answer,Loops
Create a Python program that takes in a list of numbers and outputs the sum of itself and all its previous numbers (including the number itself).,"[2, 3, 4, 5, 6]","def sum_of_all(nums):
    sum = 0
    for i in range(len(nums)):
        sum += sum(nums[:i+1])
    return sum

#Test
print(sum_of_all([2, 3, 4, 5, 6])) # Output: 20","def sum_of_all(nums):
    sum = 0
    for i in range(len(nums)):
        sum += sum(nums[:i+1])
    return sum

#Test
print(sum_of_all([2, 3, 4, 5, 6])) # Output: 20",correct,OOP
Construct an algorithm in Python to print out the first 20 perfect squares.,,"perfect_squares = []
i = 1
while len(perfect_squares) < 20:
 perfect_square = i * i 
 perfect_squares.append(perfect_square)
 i = i + 1

print(perfect_squares)","perfect_squares = []
i = 1
while len(perfect_squares) < 20:
 perfect_square = i",Incomplete Answer,Recursion
Create a program to find the smallest number in a given list using a for loop in Python.,"Example list: [12, 4, 16, 15]","def find_smallest_number(lst):
  smallest = lst[0]
  for number in lst:
    if number < smallest:
      smallest = number
  return smallest

print(find_smallest_number([12, 4, 16, 15]))
# Output: 4","def find_smallest_number(lst):
  smallest = lst[0]
  for number in lst:
    if number < smallest:
",Incomplete Answer,Recursion
Write a Python program to extract all the numbers from a specified string.,This is 3 string with 4 numbers,"def extract_numbers(s):
    numbers = []
    for char in s:
        if char.isdigit():
            numbers.append(int(char))
    return numbers

result = extract_numbers(""This is 3 string with 4 numbers"")
print(result)","def extract_numbers(s):
    numbers = []
    for char in s:
        if char.isdigit():
            numbers.ap",Incomplete Answer,OOP
Implement a search algorithm in Python that takes a list and a query as input and returns all matching elements.,"list = [1, 2, 3, 4, 5, 6]
query = 4","def search(list, query): 
    results = []
    for item in list:
        if item == query: 
            results.append(item) 
    return results

list = [1, 2, 3, 4, 5, 6]
query = 4

result = search(list, query)
print(result)","def search(list, query: 
    results = []
    for item in list:
        if item == query: 
            results.append(item 
    return results

list = [1, 2, 3, 4, 5, 6]
query = 4

result = search(list, query
print(result",Syntax Error,Loops
Write a function to check if a substring is present in a given list of string values.,,"def find_substring(str1, sub_str):
   if any(sub_str in s for s in str1):
       return True
   return False","def find_substring(str1, sub_str):
   if any(sub_str i",Incomplete Answer,OOP
Write a Python function to display the first and last elements of a list.,,"def display_first_last_elements(lst):
    print(""First element of the list:"", lst[0])
    print(""Last element of the list:"", lst[-1])","def display_first_last_elements(lst)
    print(""First element of the list"", lst[0])
    print(""Last element of the list"", lst[-1])",Syntax Error,String Manipulation
Modify the given Python program so that it checks the spelling of the given word using an external library.,"word = ""Hello""","import spellchecker

word = ""Hello""

correct_word = spellchecker.correction(word)
if word != correct_word:
 print(""Did you mean"", correct_word, ""?"")","import spellchecker

word = ""Hello""

correct_word = spellchecker.correctio",Incomplete Answer,String Manipulation
Write a Python program for finding the root of a given quadratic equation.,"a = 1, b = 5, c = 4","def quadratic(a, b, c):
    # calculate the discriminant
    d = (b**2) - (4*a*c)

    # find the two roots
    root1 = (-b-d**0.5)/(2*a)
    root2 = (-b+d**0.5)/(2*a)
    return root1, root2","def quadratic(a, b, c):
    # calculate the discriminant
    d = (b**2) - (4*a*c)

    # find the two roots
    root1 = (-b-d**0.5)/(2*a)
    root2 = (-b+d**0.5)/(2*a)
    return root1, root2",correct,String Manipulation
Optimize a Python code to minimize program execution time,"def sum_array(array):
    res = 0
    for i in range(len(array)):
        res += array[i]
    return res","def sum_array(array):
    return sum(array)","def sum_array(array):
return sum(array)",Syntax Error,OOP
Write code to generate a multidimensional array containing two lists of strings in Python.,"Two lists of strings

List 1: [""apple"", ""banana"", ""carrot""]
List 2: [""french fries"", ""rice"", ""salad""]","arr = [[""apple"", ""french fries""],
 [""banana"", ""rice""],
 [""carrot"", ""salad""]]","arr = [[""apple"", ""french fries""],
 [""banana"", ""rice""],
 [""carrot"", ""salad""]]",Syntax Error,Recursion
Edit the given Python code to calculate the Fibonacci sequence up to the 15th number.,"def fibonacci(n): 
   if n <= 1: 
       return n 
   else: 
       return(fibonacci(n-1) + fibonacci(n-2))","def fibonacci(n): 
   if n<= 0: 
      print(""Incorrect input"") 
   elif n==1: 
       return 0
   elif n==2: 
       return 1
   else: 
       return(fibonacci(n-1) + fibonacci(n-2)) 

# Function calls
fibonacci(15)","def fibonacci(n): 
   if n<= 0: 
      print(""Incorrect input"") 
   elif n==1: 
       return 0
   elif n==2",Incomplete Answer,String Manipulation
Write a Python function that takes in a list of strings and returns a new list with all duplicates removed.,"[""apple"",""apple"",""banana"",""orange"",""pear"",""banana""]","def remove_duplicates(lst):
    new_list = []
    for x in lst:
        if x not in new_list:
            new_list.append(x)
    return new_list

print(remove_duplicates([""apple"",""apple"",""banana"",""orange"",""pear"",""banana""]))","def remove_duplicates(lst):
    new_list = []
    for x in lst:
        if x not in new_list:
            new_l",Incomplete Answer,String Manipulation
Create a Python program to convert a given string from lower to upper case.,String: “hello world”,"def convert_to_upper_case(string):
    '''This function will take a string as input and convert it to upper case'''
    return string.upper()

converted_string = convert_to_upper_case(""hello world"")
print(converted_string)","def convert_to_upper_case(string):
    '''This function will take a string as input and convert it to upper cas",Incomplete Answer,String Manipulation
Develop a Python script to calculate the average of all the numbers present in a list.,"list_num = [1, 5, 9, 10, 6]","def avg(list_num):
    sum = 0
    
    for num in list_num:
        sum += num
    
    return sum / len(list_num)

print(""Average is:"", avg(list_num))","def avg(list_num):
    sum = 0
    
    for num in list_num:
        sum += num
    
    return sum / len(list_num)

print(""Average is:"", avg(list_num))",correct,Loops
Write a imperative command to print the first two characters of the given string 'Python'.,,print('Python'[:2]),print('Py,Incomplete Answer,Recursion
Create an API endpoint in Python that can accept a POST request containing a JSON object.,,"from flask import Flask, request, jsonify

app = Flask(name)

@app.route('/api/endpoint', methods=['POST'])
def endpoint():
 data = request.get_json()
 # Do something with data
 return jsonify({'message': 'Success'})

if name == 'main':
 app.run(debug=True)","from flask import Flask, request, jsonify

app = Flask(name)

@app.route('/api/endpoint', methods=['POST'])
def endpoint()
 data = request.get_json()
 # Do something with data
 return jsonify({'message' 'Success'})

if name == 'main'
 app.run(debug=True)",Syntax Error,File I/O
Write a function to find the maximum element of all the given tuple records.,,"def find_max(test_list):
  res = max(int(j) for i in test_list for j in i)
  return (res) ","def find_max(test_list):
  res = max(int(j) for i in test_list for j in i)
  return (res) ",Syntax Error,String Manipulation
Write a function to divide a number into two parts such that the sum of digits is maximum.,,"def sum_digits_single(x) : 
    ans = 0
    while x : 
        ans += x % 10
        x //= 10  
    return ans 
def closest(x) : 
    ans = 0
    while (ans * 10 + 9 <= x) : 
        ans = ans * 10 + 9  
    return ans   
def sum_digits_twoparts(N) : 
    A = closest(N)  
    return sum_digits_single(A) + sum_digits_single(N - A) ","def sum_digits_single(x) : 
    ans = 0
    while x : 
        ans += x % 10
        x //= 10  
    return ans 
def closest(x) : 
    ans = 0
    while (ans * 10 + ",Incomplete Answer,Loops
Create a Python script to build a dictionary from string to string of the given samples.,"Samples:
apple->red
banana->yellow
cherry->red","def build_dictionary(samples):
 dictionary = {}
 for sample in samples:
  key, value = sample.split(""->"")
  dictionary[key] = value
 return dictionary
 
samples = [""apple->red"", ""banana->yellow"", ""cherry->red""]
dictionary = build_dictionary(samples)

print(dictionary)","def build_dictionary(samples):
 dictionary = {}
 for sample in samples:
  key, value = sample.split(""->"")
  dictionary[key] = value
 return dictionary
 
samples = [""apple->red"", ""banana->yellow"", ""cherry->red""]
dictionary = build_dictionary(samples)

pritn(dictionary)",Syntax Error,File I/O
Create a python function which takes a list of string and converts each string to its uppercase equivalent.,"['Hello', 'World']","def to_uppercase(items):
    return [item.upper() for item in items]

result = to_uppercase(['Hello', 'World']) 
print(result)","def to_uppercase(items)
    return [item.upper() for item in items]

result = to_uppercase(['Hello', 'World']) 
print(result)",Syntax Error,Loops
"Express the following task using Python code: Calculate the area of a triangle, given the base and height.","base = 10
height = 8","def triangle_area(base, height):
    return 0.5 * base * height","def triangle_area(base, height)",Incomplete Answer,Recursion
Create a Python class which stores in a dictionary the ISBN and title of books.,,"class Book:
    def __init__(self):
        self.books = {}
        
    def add_book(self, isbn, title):
        self.books[isbn] = title
        
    def get_book(self, isbn):
        if isbn in self.books:
            return self.books[isbn]
        else:
            return None","class Book:
    def __init__(self):
        self.books = {}
        
    def add_book(self, isbn, title):
        self.books[isbn] = title
        
    def get_book(self, isbn):
        if isbn in self.books:
            return self.books[isbn]
        else:
            return None",correct,File I/O
Generate a code template for a class in Python.,,"class ClassName:
 def __init__(self, parameters):
	 # initialization code
 
 def some_method(self):
	 # method code
 
 # additional methods and class variables","class ClassName
 def __init__(self, parameters)
	 # initialization code
 
 def some_method(self)
	 # method code
 
 # additional methods and class variables",Syntax Error,String Manipulation
Construct a code to sum all the numbers in a list in Python.,"[3, 4, 7, 1]","sum = 0
for num in [3, 4, 7, 1]:
  sum += num

print(sum) # Output is 15","sum = 0
for num in [3, 4, 7, 1]
  sum += num

print(sum) # Output is 15",Syntax Error,String Manipulation
Write a Python program that generates a random password of length 10.,,"import random
import string

def generate_password():
    length = 10
    char_set = string.ascii_letters + string.digits + string.punctuation
    rand_pwd = ''.join(random.choice(char_set) for i in range(length))
    return rand_pwd

if __name__ == '__main__':
    print(generate_password())","import random
import string

def generate_password():
    length = 10
    char_set = string.ascii_letters + string.digits + string.punctuation
    rand_pwd = ''.join(random.choice(char_set) for i in range(length))
    return rand_pwd

if __name__ == '__main__':
    print(generate_password())",correct,File I/O
"Write a Python program that will ask the user to enter a word or phrase and then print out the individual characters, sorted alphabetically.",,"word = input('Enter a word or phrase: ')

characters = sorted(list(word))

for character in characters:
    print(character)","word = input('Enter a word or phrase: ')

characters = sorted(",Incomplete Answer,Recursion
Write a Python program to calculate the standard deviation of given data.,"[20, 10, 15, 25]","import statistics
def calculate_std_dev(arr):
	return statistics.stdev(arr)","import statistics
def calculate_std_dev(arr:
	return statistics.stdev(arr",Syntax Error,OOP
Generate a clickable GUI for a Python application.,Python functions,"# Imports
from tkinter import *

# Create window
root = Tk()

# Define functions
def func1(): 
    pass

def func2():
    pass

# Add elements to GUI
btn1 = Button(root, text=""Function 1"", command=func1)
btn2 = Button(root, text=""Function 2"", command=func2)

btn1.pack()
btn2.pack()

# Run the window 
root.mainloop()","# Imports
from tkinter import *

# Create window
root = Tk()

# Define functions
def func1(): 
    pass

def func2():
    pass

# Add elements to GUI
btn1 = B",Incomplete Answer,Recursion
"Construct a regular expression in Python to find all the occurrences of words that start with the letter ""A"" and end with a number.",,"regex = r""\bA\w*\d\b""","regex = r""\bA\w*\d\b""",Syntax Error,OOP
Optimize a given Python function to increase its performance.,"def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n-1)","def factorial(n):
    """"""Calculates the factorial of `n` using an optimized approach. """"""
    result = 1
    for i in range(2,n+1):
        result *= i
    return result

if __name__ == '__main__':
    print(factorial(4)) # 24","def factorial(n):
""""""Calculates the factorial of `n` using an optimized approach. """"""
result = 1
for i in range(2,n+1):
    result *= i
return result

if __name__ == '__main__':
print(factorial(4)) # 24",Syntax Error,File I/O
Compose a Python program that evaluates a given expression provided as a string and prints its result.,"""1+1""","def evaluate_expression(expression):
    try:
        result = eval(expression)
        print(result)
    except:
        print(""Error: invalid expression"")

evaluate_expression(""1+1"")","def evaluate_expression(expression):
    try:
        result = eval(expression)
        prin",Incomplete Answer,Recursion
Can you create a Python script that prints out a 10x10 multiplication table?,,"for i in range(1,11):
 for j in range(1,11):
  print(str(i*j)+'\t', end = '')
 print()","for i in range(1,11):
 for j in range(1,11)",Incomplete Answer,String Manipulation
"Create a python function that takes in a string, and returns the string with the first letter of each word capitalized.","string = ""hello there people""","def capitalize_string(string):
    words = string.split(' ')
    capitalized_words = []
    for word in words:
        capitalized_words.append(word.capitalize())
    
    return ' '.join(capitalized_words)","def capitalize_string(string:
    words = string.split(' '
    capitalized_words = []
    for word in words:
        capitalized_words.append(word.capitalize(
    
    return ' '.join(capitalized_words",Syntax Error,String Manipulation
Write a Python program to convert strings from upper case to lower case.,,"def convert_lowercase(string):
    return string.lower()","def convert_lowercase(string):
    return string.lower()",correct,OOP
Generate a python script to calculate the distance between two points in 3D space,,"def distance_three_d(p1,p2):
    a = (p2[0] - p1[0])**2
    b = (p2[1] - p1[1])**2
    c = (p2[2] - p1[2])**2
    return (a + b + c) **0.5","def distance_three_d(p1,p2)
    a = (p2[0] - p1[0])**2
    b = (p2[1] - p1[1])**2
    c = (p2[2] - p1[2])**2
    return (a + b + c) **0.5",Syntax Error,OOP
Create a Python script to sort the numbers in an array.,"[2, 4, 5, 1, 3]","def sort_array(array):
    array.sort()
    return array

result = sort_array([2, 4, 5, 1, 3])
print(result)","def sort_array(array):
    array.sort()
    return array

result = sort_array([2, 4, 5, 1, 3])
print(result)",correct,Recursion
Write a Python program to generate a random array of integers of length N with values between 1 and M (inclusive).,#NAME?,"import random 

N = 10
M = 100

random_array = [random.randint(1, M) for _ in range(N)] 
print(random_array) 
# Output: [3, 82, 83, 32, 45, 44, 6, 67, 25, 29]","import random 

N = 10
M = 100

random_array = [random.randint(1, M) for _ in range(N)] 
print(random_array) 
# Output: [3, 82, 83, 32, 45, 44, 6, 67, 25, 29]",correct,String Manipulation
Write a function to find the smallest integers from a given list of numbers using heap queue algorithm.,,"import heapq as hq
def heap_queue_smallest(nums,n):
  smallest_nums = hq.nsmallest(n, nums)
  return smallest_nums","import heapq as hq
def heap_queue_smallest(nums,n):
  smallest_nums = hq.nsmallest(n, nums)
  return smallest_nums",Syntax Error,File I/O
Generate code to perform principal component analysis in Python.,,"import numpy as np
from sklearn.decomposition import PCA


# Input array
X = np.array([[1,2,3],[4,5,6],[7,8,9]])

# Create and fit the PCA
pca = PCA(n_components=2)
pca.fit(X)

# Transform data into principal components
X_pca = pca.transform(X)

# Output the first principal component
print(X_pca[:,0])","import numpy as np
from sklearn.decomposition import PCA


# Input array
X = np.array([[1,2,3],[4,5,6],[7,8,9]])

# Create and fit the PCA
pca = PCA(n_components=2)
pca.fit(X)

# Transform data into principal components
X_pca = pca.transform(X)

# Output the first principal component
print(X_pca[:,0])",Syntax Error,OOP
Write a python script that sorts a list of strings by length.,"['the', 'quick', 'brown', 'fox', 'jumped', 'over', 'the', 'lazy', 'dog']","def sort_strings_by_length(strings):
    # Sort strings by length in ascending order
    strings.sort(key=len)
    return strings","def sort_strings_by_length(strings):
    # Sort strings by length in ascending order
    strings.sort(key=len)
    return strings",correct,Loops
Write a Python program to convert all the lower case letters in a string to upper case.,"""hello World""","print(''.join([i.upper() for i in ""hello World""])) # HELLO WORLD","print(''.join([i.upper() for i in ""hello World""])) # HELLO WORLD",Syntax Error,Loops
Create a Python program to parse a string for any numbers and calculate the sum.,"string = ""My age is 25 and my friend's age is 30.""","import re

# Input string
string = ""My age is 25 and my friend's age is 30.""

# Find all the numbers in the string
numbers = re.findall(""\d+"", string)

# Calculate the sum
sum = 0
for number in numbers:
 sum += int(number)

# Print the sum
print(""The sum of the numbers is:"", sum)","import re

# Input string
string = ""My age is 25 and my friend's age is 30.""

# Find all the numbers in the string
numbers = re.findall(""\d+"", string)

# Calculate the sum
sum = 0
for number in numbers
 sum += int(number)

# Print the sum
print(""The sum of the numbers is"", sum)",Syntax Error,Recursion
Write a python program to calculate the sum of the given numbers and return the result.,"[1, 2, 3, 4, 5]","def sum_numbers(arr):
    result = 0
    for num in arr:
        result += num
    return result","def sum_numbers(arr):
result = 0
for num in arr:
    result += num
return result",Syntax Error,File I/O
Write a Python program to concatenate all the elements in a given list of strings.,"list_of_strings = [""a"", ""b"", ""c"", ""d"", ""e""]","def concatenate_strings(list_of_strings):
    result = """"
    for string in list_of_strings:
        result += string
    return result","def concatenate_strings(list_of_strings)
    result = """"
    for string in list_of_strings
        result += string
    return result",Syntax Error,Loops
Create a function to invert a matrix in Python,,"def invert_matrix(matrix):
    return matrix.T # transpose matrix","def invert_matrix(matrix):
    return matrix.T # transpose matrix",correct,String Manipulation
"In this Python code, identify the type of data structure being used and write down advantages and disadvantages of using this type of data structure.","my_list = [""Apple"", ""Banana"", ""Orange"", ""Mango""]","A list is being used in this code snippet. Advantages of using a list are that it is mutable, can store duplicate data, and allows for indexing. Disadvantages of using a list are that it can be slow if the list is very long and operations take a long time.","A list is being used in this code snippet. Advantages of using a list are that it is mutable, can store duplicate data, and allo",Incomplete Answer,File I/O
"Create a web application usingPython and Flask that displays a simple ""Hello World"" page.",,"from flask import Flask

app = Flask(__name__)

@app.route(""/"")
def hello():
  return ""Hello World!""

if __name__ == '__main__':
    app.run()","from flask import Flask

app = Flask(__name__)

@app.route(""/"")
def hello():
  return ""Hello World!""

if __name__ == '__main__':
    app.run()",correct,File I/O
Edit the following Python program to handle user input as an integer,"num = input(""Enter an integer"")
print(""The number is: "" + num)","num = int(input(""Enter an integer: ""))
print(""The number is:"", num)","num = int(input(""Enter an integer ""))
print(""The number is"", num)",Syntax Error,OOP
Write a function to count number of unique lists within a list.,,"def unique_sublists(list1):
    result ={}
    for l in  list1: 
        result.setdefault(tuple(l), list()).append(1) 
    for a, b in result.items(): 
        result[a] = sum(b)
    return result","def unique_sublists(list1:
    result ={}
    for l in  list1: 
        result.setdefault(tuple(l, list(.append(1 
    for a, b in result.items(: 
        result[a] = sum(b
    return result",Syntax Error,OOP
Develop a Python code to generate the nth number in the Fibonacci series.,n = 8,"""""""
Develop a Python code to generate the nth number in the Fibonacci series.
""""""

def generate_fibonacci(n):
    if n == 1 or n == 2:
        return 1
    else:
        a = 1
        b = 1
        for i in range(2, n):
            a, b = b, a + b
        return b
    
if __name__ == '__main__':
    n = 8
    print(generate_fibonacci(n))","""""""
Develop a Python code to generate the nth number in the Fibonacci series.
""""""

def generate_fibonacci(n):
    if n == 1 or n == 2:
        return 1
    else:
        a = 1
        b = 1
        for i in range(2, n):
            a, b = b, a + b
        return b
    
if __name__ == '__main__':
    n = 8
    pritn(generate_fibonacci(n))",Syntax Error,File I/O
Optimize the following Python code for calculating the sum of an array.,"arr = [1, 2, 3, 4, 5, 6]
total = 0
for el in arr:
 total += el","arr = [1, 2, 3, 4, 5, 6]
total = sum(arr) # use sum() to sum up all elements of the array in one line","arr = [1, 2, 3, 4, 5, 6]
total = sum(arr) # use su",Incomplete Answer,OOP
"Create a Python program that takes a list and an integer, and returns whether the list contains a sublist with the given sum.","List: [2, 3, 4]
Integer: 8","def has_sublist_with_sum(list, n):
    for i in range(len(list) - 1):
        sum = 0
        for j in range(i + 1, len(list)):
            sum += list[j]
            if sum == n:
                return True
    
    return False

list = [2, 3, 4]
n = 8

print(has_sublist_with_sum(list, n)) # prints True","def has_sublist_with_sum(list, n)
    for i in range(len(list) - 1)
        sum = 0
        for j in range(i + 1, len(list))
            sum += list[j]
            if sum == n
                return True
    
    return False

list = [2, 3, 4]
n = 8

print(has_sublist_with_sum(list, n)) # prints True",Syntax Error,String Manipulation
Write a Python program that prints the nth prime number.,n=5,"def nth_prime_number(n):
    prime_numbers = [2]
    number = 3

    while len(prime_numbers) < n:
        is_prime = True
        for prime in prime_numbers:
            if number % prime == 0:
                is_prime = False
                break
        if is_prime:
            prime_numbers.append(number)
        number += 2
    return prime_numbers[-1]

print(nth_prime_number(5))","def nth_prime_number(n)
    prime_numbers = [2]
    number = 3

    while len(prime_numbers) < n
        is_prime = True
        for prime in prime_numbers
            if number % prime == 0
                is_prime = False
                break
        if is_prime
            prime_numbers.append(number)
        number += 2
    return prime_numbers[-1]

print(nth_prime_number(5))",Syntax Error,OOP
Write a Python program to classify a given text as having positive or negative sentiment.,The customer service was fantastic but the meal was terrible.,positive,positive,Syntax Error,Loops
Create a Python program to detect if the number is prime or not,,"def is_prime(number): 
    if number <= 1: 
        return False 

    for i in range(2, number): 
        if number % i == 0: 
            return False 

    return True","def is_prime(number): 
    if number <= 1: 
        return False 

    for i in range(2, number): 
        if number % i == 0: 
            return False 

    return True",correct,OOP
Create a Python script to detect when a song has ended.,Sample song length in seconds: 300,"import time
 
# Define a song length
song_length = 300

# Start the progress bar
progress_bar = 0
for x in range(0, song_length):
    # Update the progress bar
    progress_bar += 1
    # Sleep a second
    time.sleep(1)
    print(""Progress Bar: {}%"".format(progress_bar/song_length * 100))

# Song has ended
print(""Song Ended!"")","import time
 
# Define a song length
song_length = 300

# Start the progress bar
progress_bar = 0
for x in range(0, song_length):
    # Update the progress bar
    ",Incomplete Answer,Recursion
Write a Python script that counts the number of characters in a string.,,"def count_characters(my_string):
    count = 0
    for char in my_string:
        count += 1
    return count","def count_characters(my_string:
    count = 0
    for char in my_string:
        count += 1
    return count",Syntax Error,File I/O
Write a function in Python to calculate the greatest common divisor of two numbers n1 and n2.,,"def gcd(n1, n2):
if n2 == 0:
 return n1
 
return gcd(n2, n1 % n2)","def gcd(n1, n2):
if n2 == 0:
 re",Incomplete Answer,Recursion
Create a Python program to print out the multiples of 3 between 1 and 100.,,"for num in range(1, 101):
    if (num % 3 == 0):
        print(num)

Output: 3 6 9 12 15 18 21 24 27 30 33 36 39 42 45 48 51 54 57 60 63 66 69 72 75 78 81 84 87 90 93 96 99","for num in range(1, 101):
    if (num % 3 == 0):
        print(num)

Output: 3 6 9 12 15 18 21 24 27 30 33 36 39 42 45 48 51 54 57 60 63 66 69 72 75 78 81 84 87 90 93 96 99",correct,File I/O
Generate Python code to fetch an item from a dictionary based on a given key.,"dictionary = {
""name"": ""John"",
""age"": 40
}
key = ""name""","dictionary = {
""name"": ""John"",
""age"": 40
}
key = ""name""

for key, value in dictionary.items():
  if key == key:
    print(value)
    break","dictionary = {
""name"": ""John"",
""age"": 40
}
key = ""name""

for key, val",Incomplete Answer,OOP
"Create a function in Python that evaluates a given expression and returns the result. The function must be able to handle basic operations (e.g. +, -, /, *) and arbitrary number of input values.",,"def arithmetic_eval(expression):
 return eval(expression)
 
# Example
arithmetic_eval('2 + 3 * 5')
# Output: 17","def arithmetic_eval(expression):
 return eval(expressio",Incomplete Answer,OOP
Write a Python code to decode a JSON string.,"{
 ""name"": ""John"",
 ""age"": 30,
 ""is_married"": False
}","import json

json_string = '{""name"": ""John"", ""age"": 30, ""is_married"": false}'

data = json.loads(json_string)
name = data['name']
age = data['age']
is_married = data['is_married']

print('Name: ', name)
print('Age: ', age)
print('Is Married: ', is_married)","import json

json_string = '{""name"": ""John"", ""age"": 30, ""is_married"": false}'

data = json.loads(json_string)
name = data['name']
age = data['age']
is_married = data['is_married']

print('Name: ', name)
print('Age: ', age)
print('Is Married: ', is_married)",correct,Recursion
"Given a list of strings, write a Python program to classify each string in two categories, ""short"" and ""long"", based on their length.",,"def classify_strings(strings):
    result = {""short"": [], ""long"": []}
    for string in strings:
        if len(string) < 10:
            result[""short""].append(string)
        else:
            result[""long""].append(string)
    return result","def classify_strings(strings):
    result = {""short"": [], ""long"": []}
    for string in strings:
        if len(string) <",Incomplete Answer,OOP
Clone a remote Git repository using a Python program.,,"import git

# Clone a remote Git repository
repo = git.Repo.clone_from(""https://github.com/username/repo.git"")","import git

# Clone a remote Git repository
repo = git.",Incomplete Answer,Recursion
Generate a python program to read a integer of length 5 digits and split them into single digits.,12345,"def split_digits(num):
    '''This function takes an integer of length 5 and return a list of single digits'''
    result = []
    while num > 0:
        result.append(num%10)
        num = num//10
    return result[::-1]

num = int(input('Please enter a number of length 5 digits: '))

if len(str(num)) == 5:
    print(split_digits(num))
else:
    print('Invalid input!')","def split_digits(num):
    '''This function takes an integer of length 5 and return a list of single digits'''
    result = []
    while num > 0:
        result.append(num%10)
        num = num//10
    return result[::-1]

num = int(input('Please enter a number of length 5 digits: '))

if len(str(num)) == 5:
    print(split_digits(num))
else:
    print('Invalid input!')",correct,String Manipulation
Construct a Python program to recursively count down from a given number?,num = 5,"def countdown(num):
    if num == 0:
        return
    else:
        print(num)
        num -= 1
        countdown(num)

countdown(5)","def countdown(num):
    if num == 0:
        return
    else:
     ",Incomplete Answer,Recursion
Create a function to classify a given text into list of pre-defined categories.,"text = 'I'm writing a Python program now'
categories = ['Python', 'Java', 'HTML', 'C++']","text = 'I'm writing a Python program now'
categories = ['Python', 'Java', 'HTML', 'C++']

def classify(text, categories):
  for category in categories:
    if category in text:
      return category
  return ""Not found""

print(classify(text, categories))","text = 'I'm writing a Python program now'
categories = ['Python', 'Java', 'HTML', 'C++']

def classify(text, categories):
  for category in categories:
    if category in text:
      return category
  return ""Not found""

print(classify(text, categories))",correct,OOP
Generate a Python program that collects contact information from a given list of numbers.,"[917, 732, 514, 614, 461, 201]","def collect_contact_information(numbers):
    
    results = []
    
    for number in numbers:
        contact_info = {}
        contact_info[""number""] = number
        
        # collect rest of contact info from number
        # e.g. enter into database and look up address, etc.
        
        results.append(contact_info)
        
    return results","def collect_contact_information(numbers):
    
    results = []
    
    for number in numbers:
        contact_info = {}
        contact_info[""number""] = number
        
       ",Incomplete Answer,Loops
Create an algorithm in Python to find the largest element in an unsorted list of numbers.,"[10, 5, 20, 8, 9, 12]","def find_large_element(lst):
  largest_number = lst[0]
  for i in range(1, len(lst)):
    if lst[i] > largest_number:
      largest_number = lst[i]
  return largest_number

my_list = [10, 5, 20, 8, 9, 12]
print(find_large_element(my_list)) # 20","def find_large_element(lst):
  largest_number = lst[0]
  for i in range(1, len(lst)):
    if lst[i] > largest_number:
      largest_number = lst[i]
  return largest_number

my_list = [10, 5, 20, 8, 9, 12]
print(find_large_element(my_list)) # 20",correct,String Manipulation
Create a program that implements the following pseudocode and express it in Python,"for x in range(1, 10):
    if x < 4:
        print(""Low"")
    else:
        print(""High"")","for x in range(1, 10):
    if x < 4:
        print(""Low"")
    else:
        print(""High"")","for x in range(1, 10):
    if x < 4:
       ",Incomplete Answer,OOP
Generate a program in Python which will take a sentence and output its synonyms.,,"import nltk

def get_synonyms(sentence):
    output = []
    words = nltk.word_tokenize(sentence)
    for word in words:
        synonyms = []
        for syn in wordnet.synsets(word):
            for l in syn.lemmas():
                synonyms.append(l.name())
        output.append(list(set(synonyms)))
  return output","import nltk

def get_synonyms(sentence):
    output = []
    words = nltk.word_tokenize(sentence)
    for word in words:
        synonyms = []
        for syn in wordnet.synsets(word):
            for l in syn.lemmas():
                synonyms.append(l.name())
        output.append(list(set(synonyms)))
  return output",Syntax Error,OOP
"Write a code to detect if a given text contains the word ""python"".",This post is about programming in python.,"def contains_python(text):
    return ""python"" in text","def contains_python(text):
",Incomplete Answer,Recursion
"Create a Python function that takes an array of numbers and returns true if the array is sorted in increasing order, and false otherwise",,"def is_sorted(array):
    for i in range(len(array)-1):
        if array[i] > array[i+1]:
            return False
    return True","def is_sorted(array):
    for i in range(len(array)-1):
        if array[i] > array[i+1]:
            return False
    return True",correct,OOP
Create a Python class named “Employee” with the static method that calculates the number of employees in the company.,,"class Employee:
    count = 0

    def __init__(self):
        Employee.count += 1

    @staticmethod
    def get_employee_count():
        return Employee.count","class Employee:
    count = 0

    def __init__(self):
        Employee.count += 1

    @staticmethod
    def get_employee_count():
        return Employee.count",correct,Loops
Create a lists of objects using Python based on a provided list of identifiers.,"Identifiers: ['a', 'b', 'c']","objects = [
    {'name': 'a', 'value': None},
    {'name': 'b', 'value': None},
    {'name': 'c', 'value': None}
]","objects = [
    {'name' 'a', 'value' None},
    {'name' 'b', 'value' None},
    {'name' 'c', 'value' None}
]",Syntax Error,String Manipulation
Create a Python script to count and delete the duplicates from a given array of numbers.,,"def count_delete_duplicates(arr):
seen = set() 
unique = []
count = 0

for x in arr:
 if x not in seen:
  seen.add(x)
  unique.append(x)
 else:
  count += 1
return count, unique","def count_delete_duplicates(arr):
seen = set() 
unique = []
count = 0

for x in arr:
 if x not in seen:
  seen.add(x)
  unique.append(x)
 else:
  count += 1
return count, unique",correct,String Manipulation
Generate a Python program to reverse the order of words in a sentence but keep the order of the characters in each word the same.,,"def reverse_words(string):
  words = string.split("" "")
  reversed_words = []
  for word in words:
    reversed_words.insert(0, word)
  return ' '.join(reversed_words)

string = 'This is a sentence.'
reverse_words = reverse_words(string)
print(reverse_words)","def reverse_words(string):
  words = string.split("" "")
  reversed_words = []
  for word in words:
    reversed_words.insert(0, word)
  return ' '.join(reversed_words)

string = 'This is a sentence.'
reverse_words = reverse_words(string)
pritn(reverse_words)",Syntax Error,Recursion
Create a Python class to represent a point in the x-y plane and a method to calculate the distance from the origin.,,"import math 
 
class Point:
 def __init__(self, x, y):
 self.x = x 
 self.y = y 
 
 def distance_from_origin(self):
 return math.sqrt(self.x**2 + self.y**2)
 
 pt1 = Point(3, 4)
 print(pt1.distance_from_origin()) # prints 5.0","import math 
 
class Point:
 def __init__(self, x, y):
 self.x = x 
 self.y = y 
 
 def distance_from_origin(self):
 return math.sqrt(self.x**2 + self.y**2)
 
 pt1 = Point(3, 4)
 print(name, pt1.distance_from_origin()) # prints 5.0",Syntax Error,Loops
Write a function to find number of lists present in the given tuple.,,"def find_lists(Input): 
	if isinstance(Input, list): 
		return 1
	else: 
		return len(Input) ","def find_lists(Input): 
	if isinstance(Input, list): 
		return 1
	else: 
		return len(Input) ",correct,OOP
Write a Python program to return the greatest common divisor between two numbers.,"num1 = 15
num2 = 25","def gcd(num1, num2):
while num2 != 0:
   temp = num1
   num1 = num2
   num2 = temp % num2
return num1

print(gcd(num1,num2))","def gcd(num1, num2)
while num2 != 0
   temp = num1
   num1 = num2
   num2 = temp % num2
return num1

print(gcd(num1,num2))",Syntax Error,Recursion
Write a function to generate a sequence of numbers from 1 to 10 in Python.,,"def sequence():
    for i in range(1,11):
        print(i)","def sequence():
    for i in range(1,11):
        print(i)",correct,Recursion
"Write a Python program that takes a dictionary as an input, and prints the keys and values in alphabetical order.","{'a': 1, 'b': 2, 'c': 3}","def print_dict_alphabetically(d):
 sorted_dict = {k: d[k] for k in sorted(d)}
 for key, value in sorted_dict.items():
  print(key, value)

print_dict_alphabetically({'a': 1, 'b': 2, 'c': 3})","def print_dict_alphabetically(d):
 sorted_dict = {k: d[k] for k in sorted(d)}
 for key, value i",Incomplete Answer,OOP
Design an algorithm to check if a given number is prime in Python.,n = 19,"def is_prime(n):
    """"""Check if a given number is prime.""""""
    # Corner case
    if n <= 1:
        return False

    # Check for divisibility
    for i in range(2, n):
        if n % i == 0:
            return False
    # Return true if it is not divisible by any number
    return True

# Output
print(is_prime(n))","def is_prime(n):
    """"""Check if a given number is prime.""""""
    # Corner case
    if n <= 1:
        return False

    # Check for divisibility
    for i in r",Incomplete Answer,Recursion
Debug this Python function to find and correct any errors.,"def sumN(num): 
  response = 0
  for i in range(1, num + 1):
    response *= i
  return response","def sumN(num): 
  response = 0
  for i in range(1, num + 1):
    response += i
  return response","def sumN(num): 
  response = 0
  for i in range(",Incomplete Answer,OOP
"Create a class in Python with a single attribute named ""name"".",,"class MyClass:

    def __init__(self):
        self.name = None","class MyClass:

    def __init__(self):
        self.name = None",correct,File I/O
Develop a web scraper in Python that visits a website and retrieves the contents of the web page.,The URL of the website:  https://www.example.com,"import requests

url = ""https://www.example.com""

response = requests.get(url)
if response.status_code == 200:
 html = response.content
 print(html)","import requests

url = ""https://www.example.com""

response = requests.get(url)
if response.status_code == 200:
 html = response.content
 print(html)",correct,OOP
Create a Python function to print out a matrix of numbers.,,"def print_matrix(matrix):
    """"""
    Function to print out a matrix of numbers.
    """"""
    for row in matrix:
        for num in row:
            print(str(num).ljust(4), end="""")
        print()","def print_matrix(matrix):
    """"""
    Function to print out a matrix of numbers.
    """"""
    for r",Incomplete Answer,File I/O
Create a function in Python to check if a given string contains two of the same characters next to each other.,,"def check_for_two_same_chars(string):
    for i in range(len(string)-1):
        if string[i] == string[i+1]:
            return True
    return False","def check_for_two_same_chars(string):
    for i in range(len(string)-1):
        if string[i] == string[i+1]:
            return True
    return False",correct,Loops
Write a python function to access multiple elements of specified index from a given list.,,"def access_elements(nums, list_index):
    result = [nums[i] for i in list_index]
    return result","def access_elements(nums, list_index):
    result",Incomplete Answer,Recursion
Design a class in Python to calculate the area of a circle.,,"class Circle :
    def __init__(self, r):
        self.radius = r
    
    def area(self):
        return self.radius**2*3.14

#Example
circle = Circle(2)
circle.area()
# Output: 12.56","class Circle :
    def __init__(self, r):
        self.radius = r
    
    def area(self):
        return self.radius**2*3.14

#Example
circle = Circle(2)
circle.area()
# Output: 12.56",correct,String Manipulation
Write a Python program to print out the most common words in a given text.,,"import collections

def most_common_words(text):
    words = text.split()
    counts = collections.Counter(words)
    return counts.most_common(10)","import collections

def most_common_words(text):
    words = text.split()",Incomplete Answer,Recursion
Develop an algorithm to identify the occurrence of all the languages in a given text.,"""This model works in python, but also supports JavaScript and Go.""","def get_languages(text):
   
    languages = []
    words = text.split()
 
    for word in words:
        if word == ""python"" or word == ""JavaScript"" or word == ""Go"":
            languages.append(word)
 
    return languages","def get_languages(text):
   
    languages = []
    words = text.split()
 
    for word in words:
        if wor",Incomplete Answer,OOP
Can you write a code to securely hash a given string in Python?,,"import hashlib
 
def secure_hash(string):
 return hashlib.sha256(string.encode()).hexdigest()","import hashlib
 
def secure_hash(string):
 return hashlib.sha256(string.encode()).hexdigest()",Syntax Error,Recursion
Write a Python function to find the largest number in a given list.,,"def find_largest_number(numbers):
    largest = numbers[0]
    for number in numbers:
        if number > largest:
            largest = number

    return largest","def find_largest_number(numbers):
    largest = numbers[0]
    for number in numbers:
        if number > largest:
            largest = number

    return largest",Syntax Error,Recursion
Write a function to merge three dictionaries into a single expression.,,"import collections as ct
def merge_dictionaries_three(dict1,dict2, dict3):
    merged_dict = dict(ct.ChainMap({},dict1,dict2,dict3))
    return merged_dict","import collections as ct
def merge_dictionaries_three(dict1,dict2, dict3):
    merged_dict = dict(ct.ChainMap({},dict1,dict2,dict3))
    return merged_dict",Syntax Error,File I/O
Write a function in Python that takes a list of strings and returns all unique strings from the list.,"[""one"", ""two"", ""three"", ""two"", ""four"", ""five"", ""six""]","def find_unique_strings(strings):
 
    unique_strings = []
    for s in strings:
        if s not in unique_strings:
            unique_strings.append(s)
 
    return unique_strings","def find_unique_strings(strings):
 
unique_strings = []
for s in strings:
    if s not in unique_strings:
        unique_strings.append(s)
 
return unique_strings",Syntax Error,OOP
Generate Python code to perform a binary search on a given array.,"array = [1, 2, 3, 4, 5, 6, 7, 8, 9]","def binary_search(arr, item):
    start = 0
    end = len(arr)-1
    
    while start <= end:
        mid = (start + end) // 2
        guess = arr[mid]
        if guess == item:
            return mid
        else:
            if guess > item:
                end = end - 1
            else:
                start = start + 1
    return None","def binary_search(arr, item):
    start = 0
    end = len(arr)-1
    
    while start <= end:
        mid = (start + end) // 2
        guess = arr[mid]
        if guess =",Incomplete Answer,Loops
Generate a Python program to generate a list comprehension of a given set or range.,"words = [""tea"", ""eat"", ""apple""]",result = [i[::-1] for i in words],result = [i[::-1,Incomplete Answer,OOP
Can you generate a python program to reverse a given string?,Hello,"def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string

string = ""Hello""
reversed_string = reverse_string(string)
print(reversed_string)  # olleH","def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string

string = ""Hello""
reversed_string = reverse_string(string)
print(reversed_string)  # olleH",correct,String Manipulation
Write an example of a recursive function in Python.,,"def factorial(n):
if (n == 0):
  return 1
else:
  return n * factorial(n-1)

print(factorial(5))  # Should print 120","def factorial(n):
if (n == 0):
  return 1
else:
  return n",Incomplete Answer,File I/O
Generate a Python program to filter a list of numbers and return the numbers that are divisible by 7.,"[14, 21, 28, 35, 42]","def filter_by_seven(nums):
    filtered_nums = [num for num in nums if num % 7 == 0]
    return filtered_nums

result = filter_by_seven([14, 21, 28, 35, 42])
print(result)","def filter_by_seven(nums)
    filtered_nums = [num for num in nums if num % 7 == 0]
    return filtered_nums

result = filter_by_seven([14, 21, 28, 35, 42])
print(result)",Syntax Error,String Manipulation
Create unit tests for a Python function that adds two numbers.,,"import unittest

def add_two_numbers(a, b):
 return a + b

class TestAddTwoNumbers(unittest.TestCase):
 def test_add_two_numbers_positive(self):
  result = add_two_numbers(1, 2)
  self.assertEqual(result, 3)

 def test_add_two_numbers_negative(self):
  result = add_two_numbers(-1, -2)
  self.assertEqual(result, -3)

if __name__ == '__main__':
 unittest.main()","import unittest

def add_two_numbers(a, b):
 return a + b

class TestAddTwoNumbers(unittest.TestCase):
 def test_add_two_numbers_positive(self):
  result = add_two_numbers(1, 2)
  self.assertEqual(result, 3)

 def test_add_two_numbers_negative(self):
  result = add_two_numbers(-1, -2)
  self.assertEqual(result, -3)

if __name__ == '__main__':
 unittest.main()",Syntax Error,Loops
Write a python function to check whether the roots of a quadratic equation are numerically equal but opposite in sign or not.,,"def Check_Solution(a,b,c):  
    if b == 0:  
        return (""Yes"")  
    else: 
        return (""No"")  ","def Check_Solution(a,b,c:  
    if b == 0:  
        return (""Yes""  
    else: 
        return (""No""  ",Syntax Error,File I/O
Write a Python program that replaces all the occurrences of the letter ‘a’ with ‘$’ in a given string.,text = 'show me the money',"def replace_letter(text):
    result = ''
    for letter in text:
        if letter == 'a':
            result += '$'
        else:
            result += letter
    return result

text = 'show me the money'

print(replace_letter(text))","def replace_letter(text):
    result = ''
    for letter in text:
        if letter == 'a':
            result += '$'
        else:
            result += letter
    return result

text = 'show me the money'

print(replace_letter(text))",correct,File I/O
Write a Python program to sum all the items in a list.,"list = [1,2,3,4,5]","def sum_list_items(list):
    sum = 0
    for item in list:
        sum += item
    return sum

print(sum_list_items(list))","def sum_list_items(list):
    sum = 0
    for item in list:
        sum += item
    return sum

pritn(sum_list_items(list))",Syntax Error,String Manipulation
Write a Python program to extract the first 100 characters from a given string.,This is a test string,"def extract_first_100_chars(string):
    return string[:100]","def extract_first_100_chars(string):
    return string[:100]",Syntax Error,String Manipulation
Create a Python program to find the maximum profit of a stock given its maximum and minimum price.,The maximum and minimum price of the stock are 12 and 9 respectively,"def getMaxProfit(maxPrice, minPrice): 
    # Calculate the maximum profit 
    return maxPrice - minPrice 
  
# Driver code 
maxPrice = 12
minPrice = 9
  
print(getMaxProfit(maxPrice, minPrice))","def getMaxProfit(maxPrice, minPrice): 
# Calculate the maximum profit 
return maxPrice - minPrice 
  
# Driver code 
maxPrice = 12
minPrice = 9
  
print(getMaxProfit(maxPrice, minPrice))",Syntax Error,String Manipulation
Generate a code in Python for validating a given password,"Minimum length of 8 characters and must contain at least 1 uppercase letter, 1 lowercase letter, 1 special character and 1 number","import re

def validate_password(passwd):  
    Rule = re.compile(r""^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!#%*?&]{8,}$"")  
    return Rule.search(passwd)","import re

def validate_password(passwd):  
    Rule = re.compile(r""^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!#%*?&]{8,}$"")  
    return Rule.search(passwd)",Syntax Error,Recursion
Modify this Python code to insert the number 5 into a list at the 5th position.,"data = [1, 2, 3, 4]","data = [1, 2, 3, 4] 

# insert element '5' at 5th position 
data.insert(4, 5) 
print(""Modified list:"") 
print(data)","data = [1, 2, 3, 4] 

# insert element '5' at 5th positio",Incomplete Answer,Loops
Use an if-else statement in Python to determine if a number is even or odd.,n = 7,"if n % 2 == 0:
    print(n, 'is an even number')
else:
    print(n, 'is an odd number')","if n % 2 == 0:
    print(n, 'is an even num",Incomplete Answer,String Manipulation
"Write a Python program to differentiate the following equation:
y = 5*x^2 + 3*x + 1",,"def differentiate(x):
  return 10*x + 3;

# Test
x = 2 
print(""The derivative of y = 5*x^2 + 3*x + 1 at x = 2 is:"", differentiate(x)) # Output: 17","def differentiate(x):
  return 10*x + 3;

# Test
x = 2 
print(""The derivative of y = 5*x^2 + 3*x + 1 at x = 2 is:"", differentiate(x)) # Output: 17",correct,Recursion
Write a Python script for finding the maximum and minimum value in a given list.,"[1,5,6,8,7]","list = [1,5,6,8,7]
min_val = min(list)
max_val = max(list)

print(""Minimum value in list is: %d""%min_val)
print(""Maximum value in list is: %d""%max_val)","list = [1,5,6,8,7]
min_val = min(list)
max_val = max(list)

print(""Minimum ",Incomplete Answer,Loops
Write a Python program to print out the triangle pattern given an height n as input.,height = 4,"def print_triangle(n): 

    for i in range(n): 
        for j in range(i+1): 
            print(""*"",end="""") 
        print() 
  
n = 4
print_triangle(n)

# Output
# *
# **
# ***
# ****","def print_triangle(n): 

    for i in range(n): 
        for j in range(i+1): 
            print(name, ""*"",end="""") 
        print(name, ) 
  
n = 4
print_triangle(n)

# Output
# *
# **
# ***
# ****",Syntax Error,String Manipulation
Develop a function to classify a given set of text samples into two categories in Python.,,"def classify(samples):
 vectorizer = TfidfVectorizer(stop_words='english')
 documents = vectorizer.fit_transform(samples)
 
 classifier = SVC(C=1.0, kernel='linear', gamma='auto')
 classifier.fit(documents)
 
 classes = classifier.predict(documents)
 
 return classes","def classify(samples):
 vectorizer = TfidfVectorizer(stop_words='english')
 documents = vectorizer.fit_transform(samples)
 
 classifier = SVC(C=1.0, kernel='linear', gamma='auto')
 classifier.fit(documents)
 
 classes = classifier.predict(documents)
 
 return classes",Syntax Error,Loops
Design a function to tell if a number is even or odd using Python.,x = 5,"def isEven(x):
    if x % 2 == 0:
        return True
    else:
        return False

x = 5

if isEven(x):
    print(""It is even"")
else:
    print(""It is odd"")","def isEven(x):
    if x % 2 == 0:
        return True
    else:
        return False

x = 5

if isEven(x):
    print(name, ""It is even"")
else:
    print(name, ""It is odd"")",Syntax Error,Loops
Generate a Python function to optimize a given function using a Gradient Descent algorithm.,,"def optimize_function(f, learning_rate, iterations):
 weights = np.random.rand(f.shape[0])
 for _ in range(iterations):
 grads = estimate_gradient(f, weights)
 weights -= learning_rate * grads
 return weights","def optimize_function(f, learning_rate, iterations):
 weights = np.random.rand(f.shape[0])
 for _ in ran",Incomplete Answer,Recursion
Create a Python script that takes two inputs from the user: a list of numbers and an integer. The script should loop over the input list and check if any two numbers in the list add up to the input integer.,"list = [3, 5, 10, 15]
integer = 17","list = [3, 5, 10, 15]
integer = 17

total = 0

for i in list:
 for j in list:
 total = i + j
 if total == integer:
 print(""Two numbers that add up to"", integer, ""are"", i, ""and"", j)
 break","list = [3, 5, 10, 15]
integer = 17

total = 0

for i in list:
 for j in list:
 total = i + j
 if total == integer:
 print(""Two numbers that add up to"", integer, ""are"", i, ""and"", j)
 break",correct,String Manipulation
Create a function to reverse a string in Python.,Hello,"def reverse_string(string):
    result = """"
    for i in range(len(string) - 1, -1, -1):
        result += string[i]
    return result

reverse_string(""hello"")","def reverse_string(string)
    result = """"
    for i in range(len(string) - 1, -1, -1)
        result += string[i]
    return result

reverse_string(""hello"")",Syntax Error,File I/O
Write a Python function which takes an array as input and prints out all the even numbers in the array.,"[1, 4, 5, 8, 9, 11]","def print_even(nums):
  for num in nums:
    if num % 2 == 0:
      print(num)
      
print_even([1, 4, 5, 8, 9, 11])","def print_even(nums:
  for num in nums:
    if num % 2 == 0:
      print(num
      
print_even([1, 4, 5, 8, 9, 11]",Syntax Error,Recursion
Can you construct a Python program that takes a string of words and counts the occurrences of each word?,"""This is an example of a string of words""","words = ""This is an example of a string of words"".split()

word_freq = {}
for word in words:
    if word not in word_freq:
        word_freq[word] = 1
    else:
        word_freq[word] += 1

for key, value in word_freq.items():
    print(f""{key} : {value}"")","words = ""This is an example of a string of words"".split()

word_freq = {}
for word in words:
    if word not in word_freq:
        word_freq[word] = 1
    else:
        word_freq[word] += 1

for key, value in word_freq.items():
    pritn(f""{key} : {value}"")",Syntax Error,File I/O
Create a for loop with range up to 5 in python and print the values.,,"for num in range(5):
   print(num)",for num in range(,Incomplete Answer,String Manipulation
Create a Python program to sort and print out the elements of an array of integers.,"[17, 41, 5, 22, 54, 6, 29, 3, 13]","arr = [17, 41, 5, 22, 54, 6, 29, 3, 13]

arr.sort()

print(arr)

# Output: [3, 5, 6, 13, 17, 22, 29, 41, 54]","arr = [17, 41, 5, 22, 54, 6, 29, 3, 13]

arr.sort()

print(arr)

# Output: [3, 5, 6, 13, 17, 22, 29, 41, 54]",correct,File I/O
Create a mapping between the two objects in Python.,"object1 = [""a"", ""b"", ""c"", ""d"", ""e""]
object2 = [""apple"", ""banana"", ""carrot"", ""date"", ""eggplant""]","objectMap = {
""a"": ""apple"",
""b"": ""banana"",
""c"": ""carrot"",
""d"": ""date"",
""e"": ""eggplant""
}","objectMap = {
""a"": ""apple"",
""b"": ""banana"",
""",Incomplete Answer,Loops
Write a Python function that takes two lists as input and returns a new list containing the intersection of the two lists.,"[1, 2, 3, 4], [3, 4, 5, 6]","def intersection_of_lists(list1, list2):
    return [value for value in list1 if value in list2]

result = intersection_of_lists([1, 2, 3, 4], [3, 4, 5, 6])
print(result)
# [3, 4]","def intersection_of_lists(list1, list2):
return [value for value in list1 if value in list2]

result = intersection_of_lists([1, 2, 3, 4], [3, 4, 5, 6])
print(result)
# [3, 4]",Syntax Error,String Manipulation
Write a Python program to identify the longest line in a string.,"Sentence 1
Sentence 2
Sentence 3 (longest sentence)
Sentence 4","test_str = 'Sentence 1\nSentence 2\nSentence 3 (longest sentence)\nSentence 4'

# Get all lines in test_str into a list
str_lines = test_str.split('\n')

# Find the longest line in the list
longest_line = max(str_lines, key=len)

# Print the longest line
print(f'The longest line is: {longest_line}')","test_str = 'Sentence 1\nSentence 2\nSentence 3 (longest sentence)\nSentence 4'

# Get all lines in test_str into a list
str_lines = test_str.split('\n')

# Find the longest line in the list
longest_line = max(str_lines, key=len)

# Print the longest line
print(f'The longest line is: {longest_line}')",correct,OOP
Write a function to check whether the given amount has no profit and no loss,,"def noprofit_noloss(actual_cost,sale_amount): 
  if(sale_amount == actual_cost):
    return True
  else:
    return False","def noprofit_noloss(actual_cost,sale_amount): 
  if(sale_amount == actual_cost):
    return True
  else:
    return False",correct,OOP
How would you format a JSON string using Python?,"""{\""name\"":\""John Doe\"",\""age\"":30}""","import json

# Get json string
json_string = ""{\""name\"":\""John Doe\"",\""age\"":30}""

# Parse the json string
parsed_string = json.loads(json_string)

# Pretty print the parsed string
pretty_string = json.dumps(parsed_string, indent=4, sort_keys=True)

# Show output
print(pretty_string)
# Output:
{
    ""name"": ""John Doe"",
    ""age"": 30
}","import json

# Get json string
json_string = ""{\""name\"":\""John Doe\"",\""age\"":30}""

# Parse the json string
parsed_string = json.loads(json_string)

# Pretty print the p",Incomplete Answer,File I/O
Design a code generator in Python to generate content based on the provided input.,Create a program to generate retweets to a post.,"def generate_retweets(post_id):
    retweets = []
    for _ in range(10):
        # Retrieve post from API using post_id
        post = get_post(post_id)

        # Generate a random retweet of the post
        retweet = f'RT @{post['author']}: {post['message']}'
        retweets.append(retweet)
    
    return retweets","def generate_retweets(post_id):
    retweets = []
    for _ in range(10):
        # Retrieve post from API using post_id
        post = get_post(post_id)

        # Generate a random retweet of the post
        retweet = f'RT @{post['author']}: {post['message']}'
        retweets.append(retweet)
    
    return retweets",correct,String Manipulation
Generate a function in Python that takes in a dictionary (string → integer) and returns the sum of all values in the dictionary.,"my_dict = {
   ""a"": 5,
   ""b"": 10,
   ""c"": 15
}","def compute_dict_sum(input_dict):
    result = 0
    for val in input_dict.values():
        result += val
    return result

print(compute_dict_sum(my_dict))","def compute_dict_sum(input_dict):
    result = 0
    for val in input_dict.valu",Incomplete Answer,File I/O
Design a function  in Python to count the total number of prime numbers between the two given numbers (inclusive).,"Start = 10, End = 20","def count_primes(start, end):
    count = 0
    for i in range(start, end+1):
        if is_prime(i):
            count += 1
    return count

def is_prime(num):
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    return True","def count_primes(start, end):
    count = 0
    for i in range(start, end+1):
        if is_prime(i):
            count += 1
    retur",Incomplete Answer,String Manipulation
Create a Python program that takes a list of strings as parameters and returns a new list with the strings sorted in alphabetical order.,"[“Windows”, “MacOS”, “Unix”, “CentOS”, “RedHat”]","def sort_alphanumeric(items):
    return sorted(items, key=lambda item: item.lower())

def main():
    items = [“Windows”, “MacOS”, “Unix”, “CentOS”, “RedHat”]
    sorted_items = sort_alphanumeric(items)
    print(sorted_items)

if __name__ == “__main__”:
    main()","def sort_alphanumeric(items):
    return sorted(items, key=lambda item: item.lower())

def main():
    items = [“Windows”, “MacOS”, “Unix”, “CentOS”, “RedHat”]
    sorted_items = sort_alphanumeric(items)
    print(sorted_items)

if __name__ == “__main__”:
    main()",correct,File I/O
Implement a program in Python to find the average of an array of length n.,"Input: [2, 4, 6, 8, 10]","def findAverage(arr):
    # Initialize sum
    sum = 0
 
    # Iterate over the array to calculate sum
    for n in arr:
        sum += n
 
    # Calculate the average and return  
    return sum/len(arr)


# Driver code
arr = [2, 4, 6, 8, 10]
print(findAverage(arr))","def findAverage(arr):
    # Initialize sum
    sum = 0
 
    # Iterate over the array to calculate sum
    for n in arr:
        sum += n
 
    # Calculate the average and return  
    return sum/len(arr)


# Driver code
arr = [2, 4, 6, 8, 10]
print(findAverage(arr))",correct,Loops
Create a Python program that takes in a sentence as an input and prints out the same sentence in Pig Latin.,The quick brown fox,"def pig_latin(sentence):
 words = sentence.split()
 translated_words = []
 for word in words:
 translated_words.append(word[1:] + word[0] + ""ay"")
 return "" "".join(translated_words)
 
sentence = input(""Enter a sentence to translate: "")
print(pig_latin(sentence))","def pig_latin(sentence)
 words = sentence.split()
 translated_words = []
 for word in words
 translated_words.append(word[1] + word[0] + ""ay"")
 return "" "".join(translated_words)
 
sentence = input(""Enter a sentence to translate "")
print(pig_latin(sentence))",Syntax Error,String Manipulation
Write a function to find the median of three specific numbers.,,"def median_numbers(a,b,c):
 if a > b:
    if a < c:
        median = a
    elif b > c:
        median = b
    else:
        median = c
 else:
    if a > c:
        median = a
    elif b < c:
        median = b
    else:
        median = c
 return median","def median_numbers(a,b,c):
 if a > b:
    if a < c:
        median = a
    elif b > c:
        median = b
    else:
        median = c
 else:
    if a > c:
        median = a
    elif b < c:
        median = b
    else:
        median = c
 return median",correct,String Manipulation
Construct a Python program to split a string at a given character occurrence index.,"Input String: Hello World
Index: 6","def split_string(string, index):
  return string[:index] + "","" + string[index+1:]

s = ""Hello World""
index = 6

new_string = split_string(s, index)
print(new_string)

Output:
Hello,World","def split_string(string, index):
  return string[:index] + "","" + string[index+1:]

s = ""Hello World""
index = 6

new_string = split_string(s, index)
print(new_string)

Output:
Hello,World",correct,String Manipulation
Create an algorithm in Python to search an element from a given array of integers.,"arr = [3, 5, 6, 9, 11]","def searchElement(arr, element):
    for i in range(len(arr)):
        if arr[i] == element:
            return i
    return -1","def searchElement(arr, element)
    for i in range(len(arr))
        if arr[i] == element
            return i
    return -1",Syntax Error,OOP
Develop a python script that extracts the titles of all articles from a given website.,www.example.com,"import requests
from bs4 import BeautifulSoup

# specify url
url = 'www.example.com'

# fetch the page
response = requests.get(url)
html = response.content

# parse page content
soup = BeautifulSoup(html)

# extract titles
titles = []
for title in soup.find_all('title'):
 titles.append(title.text)

# print titles
print(titles)","import requests
from bs4 import BeautifulSoup

# specify url
url = 'www.example.com'

# fetch the page
response = requests.get(url)
html = response.content

# parse page content
soup = BeautifulSoup(html)

# extract titles
titles = []
for title in soup.find_all('title'):
 titles.append(title.text)

# print titles
print(titles)",correct,OOP
Create a Python program to tokenize a sentence and calculate the frequency of each word in the sentence.,The quick brown fox jumps over the lazy dog,"import nltk

sentence = ""The quick brown fox jumps over the lazy dog""

words = nltk.word_tokenize(sentence)

word_freq = {}

for word in words:
 if word in word_freq:
  word_freq[word] += 1
 else:
  word_freq[word] = 1

print(word_freq)","import nltk

sentence = ""The quick brown fox jumps over the lazy dog""

words = nltk.word_tokenize(sentence)

word_freq",Incomplete Answer,String Manipulation
Design a python script to convert a list of strings to a dictionary,"my_list = [""Apple"", ""Banana"", ""Cherry""]","my_list = [""Apple"", ""Banana"", ""Cherry""]

def list_to_dict(lst):
    dictionary = dict(zip(lst, range(len(lst))))
    return dictionary
    
dictionary = list_to_dict(my_list)
print(dictionary)","my_list = [""Apple"", ""Banana"", ""Cherry""]

def list_to_dict(lst):
    dictionary = dict(zip(lst, range(len(lst))))
    return dictionary
    
dictionary = list_to_dict(my_list)
print(dictionary)",correct,String Manipulation
Create a Python function that takes an array of strings and finds the longest string.,"[""Hello"", ""world"", ""Hi"", ""there""]","def find_longest_string(arr):
    longest_string = """"
    for s in arr:
        if len(s) > len(longest_string):
            longest_string = s
    return longest_string

string_array = [""Hello"", ""world"", ""Hi"", ""there""]
print(find_longest_string(string_array))","def find_longest_string(arr):
    longest_string = """"
    for s in arr:
        if len(s) > len(longest_string):
            longest_string = s
    return longest_string

string_array = [""Hello"", ""world"", ""Hi"", ""there""]
print(find_longest_string(string_array))",correct,String Manipulation
Create a vector of 10 random numbers using Python NumPy.,,"import numpy as np

np.random.seed(123)
vector = np.random.rand(10)
print(vector)

# Output:
# [0.69646919 0.28613933 0.22685145 0.55131477 0.71946897 0.42310646
#  0.9807642  0.68482974 0.4809319  0.39211752]","import numpy as np

np.random.seed(123)
vector = np.random.rand(10)
print(vector)

# Output:
# [0.696469",Incomplete Answer,String Manipulation
Design a game controller class that stores and updates game state in Python,,"class GameController:
    def __init__(self):
        self.state = {'lives': 3, 'score': 0, 'level': 1}
    
    def update_game_state(self, lives, score, level):
        self.state['lives'] = lives
        self.state['score'] = score
        self.state['level'] = level

    def get_game_state(self):
        return self.state","class GameController:
    def __init__(self:
        self.state = {'lives': 3, 'score': 0, 'level': 1}
    
    def update_game_state(self, lives, score, level:
        self.state['lives'] = lives
        self.state['score'] = score
        self.state['level'] = level

    def get_game_state(self:
        return self.state",Syntax Error,OOP
Create a Python program that converts degrees Celsius to Fahrenheit.,35,"def celsius_to_fahrenheit(celsius):
 return celsius * 9/5 + 32

celsius = 35
fahrenheit = celsius_to_fahrenheit(celsius)
print(""{} °C is {} °F"".format(celsius, fahrenheit))","def celsius_to_fahrenheit(celsius):
 return celsius * 9/5 + 32

celsius = 35
fahrenhei",Incomplete Answer,Loops
Create a class in Python with two methods.,,"class SomeClass:
    def __init__(self):
        pass
    
    def method1(self):
        pass

    def method2(self):
        pass","class SomeClass:
    def __init__(self):
        pass
    
    de",Incomplete Answer,File I/O
Generate a Python program to count the number of pairs with given sum x,X = 10,"def count_pairs(numbers, x):
    count = 0
    i, j = 0, len(numbers) - 1
    while i < j: 
        sum = numbers[i] + numbers[j]
        if sum == x: 
            count += 1
            i += 1
        elif sum < x: 
            i += 1 
        else: 
            j -= 1
    return count","def count_pairs(numbers, x):
    count = 0
    i, j = 0, len(numbers) - 1
    while i < j: 
        sum = numbers[i] + numbers[j]
        if sum == x: 
            count += 1
            i += 1
        elif sum < x: 
            i += 1 
        else: 
            j -= 1
    return count",correct,Recursion
Write a Python program to check if two given strings are an anagram of each other.,,"def is_anagram(str1, str2): 
 if sorted(str1) == sorted(str2): 
  return True
 else:
 return False

str1 = ""listen""
str2 = ""silent""
print(is_anagram(str1, str2))","def is_anagram(str1, str2): 
 if sorted(str1) == sorted(str2): 
  return True
 else:
 return False

str1 = ""listen""
str2 = ""silent""
print(is_anagram(str1, str2))",correct,Loops
Write a python function to count the pairs with xor as an odd number.,,"def find_Odd_Pair(A,N) : 
    oddPair = 0
    for i in range(0,N) :  
        for j in range(i+1,N) :  
            if ((A[i] ^ A[j]) % 2 != 0):  
                oddPair+=1  
    return oddPair  ","def find_Odd_Pair(A,N) : 
    oddPair = 0
    for i in range(0,N) :  
        for j in range(i+1,N) :  
            if ((A[i] ^ A[j]) % 2 != 0):  
                oddPair+=1  
    return oddPair  ",correct,String Manipulation
Generate a program to generate a random string of length 5 using the Python library 'random',,"import random

def random_string(length):
    chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    random_string = ''
    for i in range(length):
        random_string += random.choice(chars)
    return random_string
    
print(random_string(5))","import random

def random_string(length):
    chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    random_stri",Incomplete Answer,String Manipulation
Write a python script to remove all occurrences of a particular string from a given text.,"Text: “I like cats, cats and cats”, String: “cats”","text = ""I like cats, cats and cats""
string = ""cats""

# Replace all occurrences of the string with an empty string
modified_text = text.replace(string, """")
print(modified_text)
# Output: ""I like , and ""","text = ""I like cats, cats and cats""
string = ""cats""

# Replace all occurrences of the string with an empty string
modified_text = text.replace(string, """")
print(modified_text)
# Output: ""I like , and """,correct,Recursion
Create a python program to filter a list of numbers to include only the prime numbers,"[2, 3, 7, 11, 12, 15]","def isPrime(n): 
    for i in range(2,n): 
        if n % i == 0: 
            return False
    return True

numbers = [2, 3, 7, 11, 12, 15] 
primes = filter(isPrime, numbers)
print('Prime numbers are:') 
print(list(primes))","def isPrime(n): 
    for i in range(2,n): 
        if n % i == 0: 
            return False
    return True

numbers = [2, 3, 7, 11, 12, 15] 
primes = filter(isPrime, numbers)
print(name, 'Prime numbers are:') 
print(name, list(primes))",Syntax Error,Recursion
Suggest a completion for the following Python code to check if a given number is an Armstrong number.,def is_armstrong_number(num):,"def is_armstrong_number(num):
  order = len(str(num))
  sum = 0
  temp = num
  while temp > 0:
    digit = temp % 10
    sum += digit ** order
    temp //= 10
  if num == sum:
    return True  
  else:
    return False","def is_armstrong_number(num):
  order = len(str(num))
  sum = 0
  temp = num
  while temp > 0:
    digit = te",Incomplete Answer,String Manipulation
"Write a Python function that given a list of strings and an integer n, returns the strings that have a length greater than n.","['Cat', 'Dog', 'Rabbit', 'Elephant'], n = 5","def filter_strings(strings, n):
    return [s for s in strings if len(s) > n]","def filter_strings(strings, n):
    return [s for s in strings if len(s) > n]",correct,File I/O
Generate a script that parses a JSON string and prints out the corresponding Python dictionary.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","import json

json_string = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
parsed_json = json.loads(json_string)

print(parsed_json)","import json

json_string = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
parsed_json = json.loads(json_string)

pritn(parsed_json)",Syntax Error,File I/O
Create a program in Python that takes a number of words as input and prints out a poem.,"words: 'love', 'wings', 'stars', 'moon', 'ocean'","words = ['love', 'wings', 'stars', 'moon', 'ocean']
 
poem = """"
 
for word in words:
    poem += f""The {word} so strong and bright\nTurns shadows into light\n""

poem += f""The universe so vast and wide\nSurrounds us all with its pride\n""

print(poem)","words = ['love', 'wings', 'stars', 'moon', 'ocean']
 
poem = """"
 
for word in words:
    poem += f""The {word} so strong and bright\nTurns shadows into light\n""

poem += f""The universe so vast and wide\nSurrounds us all with its pride\n""

print(poem",Syntax Error,File I/O
"Can you provide a Python code snippet to generate a random integer between 1 and 10, inclusive?",,"import random

random_int = random.randint(1, 10)
print(random_int)","import random

random_int = rando",Incomplete Answer,String Manipulation
"Write a Python program to generate a random set of numbers, with each number ranging from 1 to 10",,"import random

def generate_random_numbers():
  results = []
  for i in range(10):
    results.append(random.randint(1, 10))

  return results
  
if __name__ == ""__main__"":
  print(generate_random_numbers())","import random

def generate_random_numbers(:
  results = []
  for i in range(10:
    results.append(random.randint(1, 10

  return results
  
if __name__ == ""__main__"":
  print(generate_random_numbers(",Syntax Error,String Manipulation
Write a Python script that sorts an array of strings in alphabetical order case insensitively.,"[""Apple"", ""Banana"", ""orange""]","def sort_array(arr): 
    arr.sort(key = lambda x: x.lower()) 
    return arr

# driver code 
arr = [""Apple"", ""Banana"", ""orange""] 
print(sort_array(arr)) 
# Output: ['Apple', 'Banana', 'orange']","def sort_array(arr): 
    arr.sort(key = lambda x: x.lower()) 
    return arr

# driver code 
arr",Incomplete Answer,String Manipulation
Create an algorithm in Python 3 to find the largest number in a list.,"Input list: [1, 7, 3, 4, 9, 2]","def find_largest(list): 
    n = len(list) 
    max = list[0] 
    for i in range(1,n): 
        if list[i] > max: 
            max = list[i] 
    return max 

list = [1, 7, 3, 4, 9, 2]
largest_number = find_largest(list) 
print(""Largest number in the given list is:"", largest_number)","def find_largest(list): 
    n = len(list) 
    max = list[0] 
    for i in range(1,n): 
        if list[i] > max: 
            max = list[i] ",Incomplete Answer,String Manipulation
Convert the given code from one programming language to another.,"//JavaScript code
function printHello(){
    console.log(""Hello World!"");
}","#Python code
def printHello():
    print(""Hello World!"")","#Python code
def printHello():
    print(""Hello World!"")",correct,Loops
Write a Python program that takes a number from the user and prints whether the number is prime or not.,,"def is_prime(n):
    if n <= 1:
        return False
    i = 2
    while i*i <= n:
        if n % i == 0:
            return False
        i += 1
    return True
    
if __name__ == ""__main__"":
    num = int(input(""Enter a number: ""))
    if is_prime(num):
        print(""The number is a prime number."")
    else:
        print(""The number is not a prime number."")","def is_prime(n):
    if n <= 1:
        return False
    i = 2
    while i*i <= n:
        if n % i == 0:
            return False
        i += 1
    return True
    
if __name__ == ",Incomplete Answer,Recursion
"Create a SQL query to find the names of all web pages that have the term ""Python"" in their title.",,"SELECT name 
FROM pages 
WHERE title LIKE '%Python%';","SELECT name 
FROM pages 
WHERE title LIKE '%Python%';",Syntax Error,Loops
Create an object-oriented programming model using python to represent a student in a classroom.,,"class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age
        
    def get_info(self):
        return ""Name: {}, Age: {}"".format(self.name, self.age)","class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = ag",Incomplete Answer,Loops
Design a class in Python that could represent a book.,,"class Book:
    def __init__(self, title, author, year):
        self.title = title
        self.author = author
        self.year = year

    # other methods, such as get_title(), set_title(), get_author(), set_author(), etc. could go here","class Book:
    def __init__(self, title, author, year):
        self.title = title
        self.author = author
       ",Incomplete Answer,Recursion
Write a function to sort the given array by using shell sort.,,"def shell_sort(my_list):
    gap = len(my_list) // 2
    while gap > 0:
        for i in range(gap, len(my_list)):
            current_item = my_list[i]
            j = i
            while j >= gap and my_list[j - gap] > current_item:
                my_list[j] = my_list[j - gap]
                j -= gap
            my_list[j] = current_item
        gap //= 2

    return my_list","def shell_sort(my_list)
    gap = len(my_list) // 2
    while gap > 0
        for i in range(gap, len(my_list))
            current_item = my_list[i]
            j = i
            while j >= gap and my_list[j - gap] > current_item
                my_list[j] = my_list[j - gap]
                j -= gap
            my_list[j] = current_item
        gap //= 2

    return my_list",Syntax Error,Loops
Create a Python program to remove punctuation from a block of text.,"Text: Wel,come to the wo,rld of 'programming'.","import string

def remove_punctuation(text):
    return text.translate(str.maketrans("""","""", string.punctuation))

text = ""Wel,come to the wo,rld of 'programming'.""
print(remove_punctuation(text))
Output:
Welcome to the world of programming","import string

def remove_punctuation(text):
    return text.translate(str.maketrans("""","""", string.punctuation))

text = ""Wel,come to the wo,rld of 'programming'.""
print(remove_punctuation(text))
Output:
Welcome to the world of programming",correct,Recursion
"Generate a Python program that prints out the pattern ""\    /\    /\  "".",,"for x in range(3):
    print('\\    /' * x + '\\  ')","for x in range(3)
    print('\\    /' * x + '\\  ')",Syntax Error,Recursion
Generate a program in Python for summing up the elements of an array.,"[1, 4, 6]","def sumArrayElements(arr):
    total = 0
    for num in arr:
        total += num
    return total

arr = [1, 4, 6]
result = sumArrayElements(arr)
print(result)","def sumArrayElements(arr):
total = 0
for num in arr:
    total += num
return total

arr = [1, 4, 6]
result = sumArrayElements(arr)
print(result)",Syntax Error,Recursion
Create a program in Python to compute and print the factorial of a given number.,Number: 5,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

num = 5

print(""The factorial of"", num, ""is"", factorial(num))","def factorial(n):
    if n == 0:
        return 1
    else:
        return n *",Incomplete Answer,Recursion
Create a program in Python to calculate the total marks of 5 students taking 5 different exams. The marks should be in the range 0-100.,,"def total_marks(marks):
    total = 0
    for student in marks:
        total += sum(student)
    return total

marks = [[75, 75, 76, 78, 80], [90, 88, 87, 85, 83], [68, 70, 79, 82, 76], [80, 79, 66, 77, 85], [90, 85, 83, 75, 73]]
total = total_marks(marks)
print(total)","def total_marks(marks):
    total = 0
    for student in marks:
        total += sum(student)
    return total

marks = [[75, 75, 76, 78, 80], [90, 88, 87, 85, 83], [68, 70, 79, 82, 76], [80, 79, 66, 77, 85], [90, 85, 83, 75, 73]]
total = total_marks(marks)
print(total)",correct,Recursion
Generate a function in Python to calculate the future value of an investment.,,"def calculate_future_value(principal, interest_rate, num_years):
    return principal * (1 + interest_rate)**num_years","def calculate_future_value(principal, interest_rate, num_ye",Incomplete Answer,File I/O
Create a Python program to search a list for the maximum value.,"list = [1, 2, 3, 9, 8, 4]","def findMax(list): 
    max = list[0] 
    for i in range(1, len(list)): 
        if list[i] > max: 
            max = list[i] 
    return max

list = [1, 2, 3, 9, 8, 4] 
print(""The maximum element in the list is:"", findMax(list))","def findMax(list): 
    max = list[0] 
    for i in range(1, len(list)): 
        if list[i] > max: 
            max = list[i] 
    return max

list = [1, 2, 3, 9, 8, 4] 
pritn(""The maximum element in the list is:"", findMax(list))",Syntax Error,OOP
Write a Python function to create a new list filled with the divided result of a given list and a specific number.,"numbers = [2, 8, 10]
divisor = 2","def divide_list(numbers, divisor):
 return [i/divisor for i in numbers]","def divide_list(numbers, divisor):
 return [i/divisor for i in numbers]",correct,OOP
"Rewrite the following code snippet from JavaScript to Python, taking into account any changes in syntax or function calls.

let array = [1, 2, 3, 4, 5];
console.log(array);",,"array = [1, 2, 3, 4, 5]
print(array)","array = [1, 2, 3, 4, 5]
print(name, array)",Syntax Error,OOP
Write an algorithm in Python to sort a given list of strings in alphabetical order.,"[‘cat’, ‘dog’, ‘apple’, ‘zebra’]","def sort_string_list(strings):
  strings.sort()
  return strings

my_list = ['cat', 'dog', 'apple', 'zebra']
print(sort_string_list(my_list))","def sort_string_list(strings):
  strings.sort()
  return strings

my_list = ['cat', 'dog', 'apple', 'zebra']
print(sort_string_list(my_list))",Syntax Error,Recursion
Edit the following code to apply the insert sorting algorithm in Python.,"def insertion_sort(list):
    pass","def insertion_sort(list):
    for i in range(1, len(list)):
        key = list[i]
        j = i - 1
        while j >= 0 and list[j] > key:
            list[j + 1] = list[j]
            j = j - 1
        list[j + 1] = key","def insertion_sort(list):
    for i in range(1, len(list)):
        key = list[i]
        j = i - 1
        while j >= 0 and list[j] > key:
            list[j + 1] = list[j]
            j = j - 1
        list[j + 1] = key",correct,Recursion
"Write a Python code to generate all possible strings of 3 characters using the characters a, b and c.",,"def generate_strings(characters, length):
    strings = []
    if length == 0:
        strings.append('')
    else:
        for c in characters:
            for s in generate_strings(characters, length-1):
                strings.append(c + s) 
    return strings

characters = ['a', 'b', 'c']
length = 3

print(generate_strings(characters, length))","def generate_strings(characters, length):
    strings = []
    if length == 0:
        strings.append('')
    else:
        for c in characters:
            for s in generate",Incomplete Answer,String Manipulation
Write a conditional statement in Python that checks if two lists have the same items.,"list1 = [9,8,7]
list2 = [7,8,9]","list1 = [9,8,7]
list2 = [7,8,9]

if list1 == list2:
    print(""The lists have the same items."")
else:
    print(""The lists do not have the same items."")","list1 = [9,8,7]
list2 = [7,8,9]

if list1 == list2:
    print(""The lists hav",Incomplete Answer,Recursion
Implement a sorting algorithm in Python that sorts a list of strings in descending order of length.,"arr = [""Apple"", ""Banana"", ""Cat"", ""Elephant""]","def sort_by_length(arr): 
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            if len(arr[i]) < len(arr[j]): 
                arr[i], arr[j] = arr[j], arr[i] 
    return arr
  
print(sort_by_length(arr))","def sort_by_length(arr): 
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            if len(",Incomplete Answer,Loops
Write a Python program to extract all the words from a given sentence that have more than 3 characters,,"sentence = 'This is an example sentence'
words = [word for word in sentence.split() if len(word) > 3]
print (words)
# Output: ['This', 'example', 'sentence']","sentence = 'This is an example sentence'
words = [word for word in sentence.sp",Incomplete Answer,Loops
Write a Python program to compute the average of the numbers in the list.,"numbers = [1, 3, 5, 7, 9]","def compute_average(numbers):
sum = 0
for num in numbers:
 sum += num
return sum/len(numbers)

numbers = [1, 3, 5, 7, 9]
average = compute_average(numbers)
print(""Average is "" + str(average))","def compute_average(numbers):
sum = 0
for num in numbers:
 sum += num
return sum/len(numbers)

",Incomplete Answer,String Manipulation
Create a program in Python to calculate the average word length in a given title.,"""The Cat in the Hat""","def calculate_average_word_length(title):
  words = title.split()
  total_length = 0
  for word in words:
    total_length += len(word)
  return total_length / len(words)

result = calculate_average_word_length(""The Cat in the Hat"")
print(result)","def calculate_average_word_length(title):
  words = title.split()
  total_length = 0
  for word in words:
total_length += len(word)
  return total_length / len(words)

result = calculate_average_word_length(""The Cat in the Hat"")
print(result)",Syntax Error,String Manipulation
Write a python function to find the sum of all odd length subarrays.,,"def Odd_Length_Sum(arr):
    Sum = 0
    l = len(arr)
    for i in range(l):
        Sum += ((((i + 1) *(l - i) + 1) // 2) * arr[i])
    return Sum","def Odd_Length_Sum(arr)
    Sum = 0
    l = len(arr)
    for i in range(l)
        Sum += ((((i + 1) *(l - i) + 1) // 2) * arr[i])
    return Sum",Syntax Error,OOP
Generate a code snippet to add two numbers in Python.,"x = 2, y = 4","result = x + y
print(result) # Prints 6","result = x + y
print(result) # Prints 6",Syntax Error,String Manipulation
Create a program that makes an HTTP request using Python and parses the response.,Request URL: https://www.example.com/userdata?query=example,"import requests

# make HTTP request
r = requests.get(""https://www.example.com/userdata?query=example"")
if r.status_code == 200:
    # parse response
    data = r.json()
    # do something with the data
    # ...","import requests

# make HTTP request
r = requests.get(""https://www.example.com/userdata?query=example"")
if",Incomplete Answer,File I/O
Create an application in Python that can encode a string into Base64.,The quick brown fox,"import base64

def encode_base64(string):
 encoded_string = base64.b64encode(string.encode('utf-8'))
 return encoded_string

string = ""The quick brown fox""
encoded_string = encode_base64(string)
print(encoded_string)
# Output: VGhlIHF1aWNrIGJyb3duIGZveA==","import base64

def encode_base64(string):
 encoded_string = base64.b64encode(string.encode('utf-8'))
 return encoded_string

string = ""The quick brown fox""
encoded_string = encode_base64(string)
print(encoded_string)
# Output: VGhlIHF1aWNrIGJyb3duIGZveA==",correct,String Manipulation
Design a function in Python to find an element in a given list.,"[3, 2, 4, 5, 6, 7], 4","def findElement(arr, element):
    for i in range(0, len(arr)):
        if arr[i] == element:
            return True
    return False","def findElement(arr, element):
    for i in range(0, len(arr)):
        if arr[i] == element:
            return True
    return False",Syntax Error,OOP
"Develop a Python class with private attributes, a public method to get the private attributes, and a public method to change the private attributes.",,"class MyClass:
    def __init__(self):
        self.__private_attr = 0
 
    def get_private_attr(self):
        return self.__private_attr
 
    def set_private_attr(self, value):
        self.__private_attr = value","class MyClass:
    def __init__(self):
        self.__private_attr = 0
 
    def get_private_attr(self):
        return self.__private_attr
 
    def set_private_attr(self, value):
        self.__private_attr = value",correct,OOP
Define a Python class to model an appointment.,,"class Appointment:
    def __init__(self, title, time, location):
        self.title = title
        self.time = time
        self.location = location

    def get_title(self):
        return self.title
    
    def get_time(self):
        return self.time
    
    def get_location(self):
        return self.location","class Appointment:
    def __init__(self, title, time, location):
        self.title = title
        self.time = time
        self.location = location

    def",Incomplete Answer,Recursion
Create a Python program which prints the calendar for a given year.,year = 2019,"import calendar

c = calendar.TextCalendar(calendar.SUNDAY)
str = c.formatyear(2019, 2, 1, 1, 3)
print (str)","import calendar

c = calendar.TextCalendar(calendar.SUNDAY)
str = c.formatyear(2019, 2, 1, 1, 3)
print (str)",Syntax Error,File I/O
Write a Python script to swap two variables.,,"x = 10
y = 20

#Swap the values
x, y = y, x

print(""After swapping: x ="", x, ""and y ="", y)","x = 10
y = 20

#Swap the values
x, y = y, x

print(""After swapping: x ="", x, ""and y ="", y)",correct,File I/O
Develop a python code to print a dictionary’s key-value pairs in sorted order of keys.,"{'a': 5, 'c': 10, 'b': 4}","my_dict = {'a': 5, 'c': 10, 'b': 4}

for key in sorted(my_dict):
    print(key, my_dict[key])

# Output:
# a 5
# b 4
# c 10","my_dict = {'a': 5, 'c': 10, 'b': 4}

for key in sorted(my_dict):
    print(key, my_dict[key])

# Output:
# a 5
# b 4
# c 10",correct,String Manipulation
Create an algorithm in Python that takes a string and returns a new string with all the consonants replaced with underscores.,"""Hello World""","def replace_consonants(string): 
    new_str = """" 
  
    VOWELS = (""a"", ""e"", ""i"", ""o"", ""u"") 
  
    for letter in string: 
        if letter.lower() in VOWELS: 
            new_str += letter 
        else: 
            new_str += ""_""
  
    return new_str
  
print(replace_consonants(""Hello World""))","def replace_consonants(string): 
    new_str = """" 
  
    VOWELS = (""a"", ""e"", ""i"", ""o"", ""u"") 
  
    for letter in string: 
        if letter.lower() ",Incomplete Answer,String Manipulation
Suggest an edit to the following Python program to improve its time complexity.,"my_list = [1, 2, 3, 4, 5, 6]
for i in range(len(my_list)-1):
        for j in range(1, len(my_list)):
                if my_list[i] < my_list[j]:
                        temp = my_list[i]
                        my_list[i] = my_list[j]
                        my_list[j] = temp",my_list.sort(reverse=True),my_list.sort(,Incomplete Answer,OOP
Optimize a function in Python.,"def sum_of_list(lst): 
    sum = 0
    for n in lst: 
        sum += n 
    return sum","def sum_of_list(lst): 
    return sum(lst)",def sum_of_list(lst):,Incomplete Answer,Recursion
Build a program in Python that calculates the area of a triangle.,"base = 10
height = 15","def calculate_triangle_area(base, height):
    return 0.5 * base * height

base = 10
height = 15

area = calculate_triangle_area(base, height)
print('Area of the triangle: ', area)","def calculate_triangle_area(base, height):
    return 0.5 * base * height

base = 10
heigh",Incomplete Answer,String Manipulation
Create a program in Python which prints out all possible combinations of a given string.,,"def generate_combinations(s):
    result = []
    for i in range(len(s)):
        for j in range(i+1, len(s)+1):
            result.append(s[i:j])
    return result","def generate_combinations(s):
    result = []
    for i in range(len(s)):
        for j in range(i+1, len(s)+1):
            result.append(s[i:j])
    return result",Syntax Error,File I/O
Create a Python function that takes a single argument and prints the Fibonacci sequence from 0 to the argument value.,Argument value: 9,"def print_fibonacci_sequence(num):
 a = 0
 b = 1
 
 print(a, end="" "")
 print(b, end="" "") 
 
 for i in range(2,num):
  c = a + b
  a = b
  b = c
  print(c, end="" "")

print_fibonacci_sequence(9) # prints 0 1 1 2 3 5 8 13 21","def print_fibonacci_sequence(num):
 a = 0
 b = 1
 
 print(name, a, end="" "")
 print(name, b, end="" "") 
 
 for i in range(2,num):
  c = a + b
  a = b
  b = c
  print(name, c, end="" "")

print_fibonacci_sequence(9) # prints 0 1 1 2 3 5 8 13 21",Syntax Error,Recursion
Modify the following Python code to use a loop instead of recursion.,"def GCD(x, y):
if y == 0:
 return x
 else:
 return GCD(y, x%y)","def GCD(x, y):
    while(y != 0):
        temp = y
        y = x % y
        x = temp
    return x","def GCD(x, y):
    while(y != 0):
        temp = y
        y = x % y
        x = temp
    return x",correct,Loops
Construct a regex pattern in Python to match any odd number.,,"import re

pattern = re.compile('[13579]') # matches any odd number","import re

pattern = re.compile('[13579]') # matches any odd number",Syntax Error,String Manipulation
Suggest a line of code to parse a JSON string.,,pythonObject = json.loads(jsonString),pythonObject = json.loads(jsonString,Syntax Error,File I/O
Write a Python program that takes a string input representing an arithmetic expression and calculates the result.,"""(20 * 8) + (2 * 4)""","def evaluate(expression):
    try:
        return eval(expression)
    except SyntaxError:
        print('Invalid expression.')

print(evaluate(""(20 * 8) + (2 * 4)""))

Output: 164.0","def evaluate(expression):
    try:
        return eval(expression)
    except SyntaxError:
        print('Invalid expression.')

print(evaluate(""(20 * 8) + (2 * 4)""))

Output: 164.0",correct,Loops
Create an object in Python that stores an employee's name and age.,"""John"" 28","employee = {
 'name': 'John',
 'age': 28
}","employee = {
 'name':",Incomplete Answer,Recursion
Create an algorithm in Python that implements Breadth-first search.,,"def breadth_first_search(graph, root):
    visited = []
    queue = []
    queue.append(root)

    while queue:
        node = queue.pop(0)
        if node not in visited:
            visited.append(node)
            queue.extend(graph[node])
    return visited","def breadth_first_search(graph, root):
    visited = []
    queue = []
    queue.append(root)

    while queue:
        node = queue.pop(0)
        if node not in visited:
            visited.append(node)
            queue.extend(graph[node])
    return visited",Syntax Error,File I/O
Write a function to count the same pair in three given lists.,,"def count_samepair(list1,list2,list3):
    result = sum(m == n == o for m, n, o in zip(list1,list2,list3))
    return result","def count_samepair(list1,list2,list3):
    result = sum(m == n",Incomplete Answer,Recursion
Write a code to extract data from a web page using python requests.,,"""""""
Extract data from a web page using python requests
""""""

import requests

# Define the url
url = 'https://example.com'

# Get the data from the url
response = requests.get(url)

# Extract the data
data = response.text # or response.json() for JSON data

# Print the data
print(data)","""""""
Extract data from a web page using python requests
""""""

import requests

# Define the url
url = 'https://example.com'

# Get the data from the url
response = requests.get(url)

# Extract the data
data = response.text # or response.json() for JSON data

# Print the data
pritn(data)",Syntax Error,File I/O
Extend a Python class to create another class with similar behavior.,"class Vehicle:
	def __init__(self):
		self.speed = 0
		self.odometer = 0
		self.time = 0","class Motorcycle(Vehicle):
    def __init__(self):
        super().__init__()
        self.num_wheels = 2
        self.type = 'motorcycle'

    def accelerate(self):
        self.speed += 10

    def brake(self):
        self.speed = max(self.speed - 7, 0)","class Motorcycle(Vehicle)
    def __init__(self)
        super().__init__()
        self.num_wheels = 2
        self.type = 'motorcycle'

    def accelerate(self)
        self.speed += 10

    def brake(self)
        self.speed = max(self.speed - 7, 0)",Syntax Error,String Manipulation
Develop a program in Python to generate random data with the same statistical properties as the input.,,"import numpy as np
from scipy.stats import describe

def generate_random_data(data):
    # Calculate the descriptor statistics
    desc = describe(data)
    
    # Generate random data from the same distribution
    random_data = np.random.normal(loc=desc.mean, scale=np.sqrt(desc.variance), size=desc.nobs)
    
    return random_data","import numpy as np
from scipy.stats import describe

def generate_random_data(data:
    # Calculate the descriptor statistics
    desc = describe(data
    
    # Generate random data from the same distribution
    random_data = np.random.normal(loc=desc.mean, scale=np.sqrt(desc.variance, size=desc.nobs
    
    return random_data",Syntax Error,Recursion
Create a Python function to normalize a list of strings by converting each string to lowercase and stripping any leading and trailing whitespaces.,"['  this  ', 'Is A TEST', 'WoRd']","def normalize(words):
    """"""Normalizes a list of strings by converting each to lowercase and stripping any leading or trailing whitespaces.""""""
    return [word.lower().strip() for word in words]","def normalize(words):
    """"""Normalizes a list of strings by converting each to lowercase and str",Incomplete Answer,Loops
Create a Python class that contains methods to calculate the area of a square and a rectangle.,,"class AreaCalculator:
    def __init__(self):
        pass
    
    def square_area(self, side_length):
        return side_length * side_length

    def rectangle_area(self, length, width):
        return length * width","class AreaCalculator:
    def __init__(self):
        pass
    
    def square_area(self, side_length):
        return side_length * side_length

    def rectangle_area(self, length, width):
        return length * width",Syntax Error,Loops
Write a python function to find the next perfect square greater than a given number.,,"import math  
def next_Perfect_Square(N): 
    nextN = math.floor(math.sqrt(N)) + 1
    return nextN * nextN ","import math  
def next_Perfect_Square(N): 
    nextN =",Incomplete Answer,OOP
Write a Python function to sort an array of numbers in descending order.,,"def sort_descending(nums):
  return sorted(nums, reverse=True)

print(sort_descending([5, 1, 8, 10, 0, 4]))","def sort_descending(nums):
  return sorted(nums, reverse=True)

print(name, sort_descending([5, 1, 8, 10, 0, 4]))",Syntax Error,Loops
Develop a Python algorithm to generate a Fibonacci sequence.,,"def generateFibonacciSequence(length):
    sequence = [1, 1]
    for i in range(2, length):
        sequence.append( sequence[i-1] + sequence[i-2] )
    return sequence

print(generateFibonacciSequence(10))","def generateFibonacciSequence(length:
    sequence = [1, 1]
    for i in range(2, length:
        sequence.append( sequence[i-1] + sequence[i-2] 
    return sequence

print(generateFibonacciSequence(10",Syntax Error,Recursion
Generate a list of letters in lowercase using Python.,,"import string 

print(list(string.ascii_lowercase))","import string 

print(list(string.ascii_lowercase))",correct,Recursion
Write a python function to set all even bits of a given number.,,"def even_bit_set_number(n): 
    count = 0;res = 0;temp = n 
    while(temp > 0): 
        if (count % 2 == 1): 
            res |= (1 << count)
        count+=1
        temp >>= 1
    return (n | res) ","def even_bit_set_number(n): 
    count = 0;res = 0;temp = n 
    while(temp > 0): 
        if (count % 2 == 1): 
            res |= (1 << count)
        count+=1
        temp >>= 1
    return (n | res) ",correct,OOP
Generate the Fibonacci sequence of length 8 (starting from 0) in Python.,,"def fibonacciSequence(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n+1): 
            c = a + b 
            a = b 
            b = c 
        return b 

fibonacciSequence(8) # Output:21","def fibonacciSequence(n): 
    a = 0
    b = 1
    if n < 0: 
        print(name, ""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n+1): 
            c = a + b 
            a = b 
            b = c 
        return b 

fibonacciSequence(8) # Output:21",Syntax Error,Loops
Write a Python program to compute the sum of the first 10 odd numbers.,,"total = 0
for number in range(1, 21, 2):
    total += number    
print(f""Sum of the first 10 odd numbers is {total}"")","total = 0
for number in range(1, 21, 2):
    total += number    
print(f""Sum of the first 10 odd numbers is {total}"")",correct,File I/O
Create a Python function that takes a list and an integer as inputs and returns a new list with every item in the original list multiplied by the integer.,"list = [3, 2, 1]
integer = 5","def multiply_list(lst, i):
  return [j * i for j in lst]

result = multiply_list(list, integer)
print(result) # [15, 10, 5]","def multiply_list(lst, i):
  return [j * i for j in lst]

res",Incomplete Answer,File I/O
Edit the following Python code to reverse the list.,"list1 = [1,2,3,4,5,6]","list1 = [1,2,3,4,5,6]

# Reversing the list
list1 = list1[::-1] # Output: [6, 5, 4, 3, 2, 1]","list1 = [1,2,3,4,5,6]

# Reversing the list
li",Incomplete Answer,String Manipulation
Create a Python program that takes an input of numbers and returns the maximum number.,"nums = [3, 6, 9, -3]","def find_max(nums):
    max_num = nums[0]
    for num in nums[1:]:
        if num > max_num:
            max_num = num 
    return max_num

max_num = find_max(nums)
print(max_num) # 9","def find_max(nums):
    max_num = nums[0]
    for num in nums[1:]:
        if num > max_num:
            max_num = num 
    return max_num

max_num = find_max(nums)
print(max_num) # 9",correct,String Manipulation
Create python code to implement a decision tree classifier.,,"import numpy as np
from sklearn import datasets

class DecisionTreeClassifier():

 def __init__(self):
 self.tree = None

 def fit(self, X, y):
 self.tree = self._build_tree(X, y)

 def predict(self, X):
 return [self._predict(x, self.tree) for x in X]

 def _build_tree(self, X, y):
# build decision tree
def _predict(self, x, node):
# predict class
return node.label","import numpy as np
from sklearn import datasets

class DecisionTreeClassifier():

 def __init__(self):
 self.tree = None

 def fit(self, X, y):
 self.tree = self._build_tree(X, y)

 de",Incomplete Answer,File I/O
Create a function in Python that takes two strings and checks if they are anagrams of each other.,"""apple"", ""pleap""","def is_anagram(str1, str2): 
    if len(str1)!= len(str2): 
        return False
    first_list = list(str1.lower())
    second_list = list(str2.lower())
    first_list.sort()
    second_list.sort()
    return first_list == second_list

print(is_anagram(""apple"",""pleap""))","def is_anagram(str1, str2): 
    if len(str1)!= len(str2): 
        return False
    first_list = list(str1.lower())
    second_list = ",Incomplete Answer,Loops
"Generate a new dataset which has both numeric and string columns, in Python.",,"import pandas as pd
data = {
    'Name':['Kim','John','Jack','Mark','Jane'],
    'Age':[26,25,23,25,24],
    'Score':[90,80,70,78, 89]
}
df = pd.DataFrame(data)","import pandas as pd
data = {
    'Name':['Kim','John','Jack','Mark','Jane'],
    'Age':[26,25,23,25,24],
    'Score':[90,80,70,78, 89]
}
df = pd.DataFrame(data)",Syntax Error,OOP
What is the most efficient way to reverse a linked list in Python?,,"def reverse(head):
    prev = None
    current = head
    while current:
        next = current.next
        current.next = prev
        prev = current
        current = next
    return prev","def reverse(head)
    prev = None
    current = head
    while current
        next = current.next
        current.next = prev
        prev = current
        current = next
    return prev",Syntax Error,String Manipulation
Write a loop in Python to traverse a given list of numbers in reverse order,"[1, 2, 3, 4, 5]","for i in range(len(numbers)-1, -1, -1):
    print(numbers[i])","for i in range(len(numbers)-1, -1, -1):
    print(numbers[i])",correct,File I/O
Implement a queue data structure in python,,"class Queue(object):

    def __init__(self):
        self.queue = []
 
    def enqueue(self, item):
        self.queue.insert(0, item)
 
    def dequeue(self):
        if len(self.queue)>0:
            return self.queue.pop()
        else:
            return None
 
    def size(self):
        return len(self.queue)","class Queue(object):

    def __init__(self):
        self.queue = []
 
    def enqueue(self, item):
        self.queue.insert(0, item)
 
    def dequeue(self):
        if len(self.queue)>0:
            return self.queue.pop()
        else:
            return None
 
    def size(self):
        return len(self.queue)",correct,String Manipulation
Write a Python program to calculate the roots of a quadratic equation.,"-2, 5, -3","import math

def quadratic_roots(a, b, c):
    d = (b ** 2) - (4 * a * c) 
    if d < 0:
        return None  # No real roots
    elif d == 0:
        return -b / (2 * a)  # One root 
    else:
        x1 = (-b + math.sqrt(d)) / (2 * a) 
        x2 = (-b - math.sqrt(d)) / (2 * a) 
        return (x1, x2)  # Two roots

print(quadratic_roots(-2, 5, -3))","import math

def quadratic_roots(a, b, c):
    d = (b ** 2) - (4 * a * c) 
    if d < 0:
        return None  # No real roots
    elif d == 0:
        return -b / (2 * a)  # One root 
    else:
        x1 = (-b + math.sqrt(d)) / (2 * a) 
        x2 = (-b - math.sqrt(d)) / (2 * a) 
        return (x1, x2)  # Two roots

print(quadratic_roots(-2, 5, -3))",correct,Recursion
Write a function to find minimum of three numbers.,,"def min_of_three(a,b,c): 
      if (a <= b) and (a <= c): 
        smallest = a 
      elif (b <= a) and (b <= c): 
        smallest = b 
      else: 
        smallest = c 
      return smallest ","def min_of_three(a,b,c): 
      if (a <= b) and (a <= c): 
        smallest = a 
      elif (b <= a) and (b <= c): 
        smallest = b 
      else: 
        smallest = c 
      return smallest ",correct,String Manipulation
Configure a web-server in Python using Flask.,,"from flask import Flask

app = Flask(__name__)

@app.route(""/"")
def hello():
    return ""Hello World!""

app.run()","from flask import Flask

app = Flask(__name__

@app.route(""/""
def hello(:
    return ""Hello World!""

app.run(",Syntax Error,OOP
Construct a Python program that will search for a given word in a web page and return the number of occurrences.,"word=""Python""
url=""www.example.com""","import requests

url = ""www.example.com""
word = ""Python""

html_content = requests.get(url).text

words = html_content.split()

occurrences = 0

for w in words:
    if w == word:
        occurrences += 1

print(""Found %d occurrences of '%s'"" % (occurrences, word))","import requests

url = ""www.example.com""
word = ""Python""

html_content = requests.get(url).text

words = html_content.split()

occu",Incomplete Answer,OOP
Create a function in Python that computes the sum of two distinct numbers.,,"def sumTwo(num1, num2):
    return num1 + num2

result = sumTwo(5, 6);
print(result);","def sumTwo(num1, num2):
    return num1 + num2

result = sumTwo(5, 6);
pritn(result);",Syntax Error,File I/O
"Generate a Python class for a Book with properties such as title, author, year, and genre.",,"class Book:
 def __init__(self, title, author, year, genre):
 self.title = title
 self.author = author
 self.year = year
 self.genre = genre

 def getTitle(self):
 return self.title

 def getAuthor(self):
 return self.author

 def getYear(self):
 return self.year

 def getGenre(self):
 return self.genre","class Book:
 def __init__(self, title, author, year, genre):
 self.title = title
 self.author = author
 self.year = year
 self.genre = genre

 def getTitle(self):
 return self.title

 def getAuthor(self):
 return self.author

 def getYear(self):
 return self.year

 def getGenre(self):
 return self.genre",Syntax Error,Recursion
Test a given object to see if it’s a member of a given class using Python.,,"#objects to test for membership
object1 = [1, 2, 3]
object2 = 4

#test if an object is a member of a given class
def is_member_of_class(obj, the_class):
    return isinstance(obj, the_class)

#test the objects
print(is_member_of_class(object1, list))
print(is_member_of_class(object2, int))","#objects to test for membership
object1 = [1, 2, 3]
object2 = 4

#test if an object is a member of a given class
def is_member_of_class(obj, the_class):
    return isinstance(obj, the_class)

#test the objects
print(is_member_of_class(object1, list))
print(is_member_of_class(object2, int))",correct,Loops
Write a Python program to find the common elements between two lists,"list1: [2, 4, 6, 8]
list2: [4, 6, 10, 12]","def common_elements(list1, list2):
    # Make a copy of list 
    list_copy = list2[:] 

    # Iterate the original list  
    for item in list1: 
        if item in list_copy: 
            list_copy.remove(item) 

    # Return the common elements  
    return list(set(list1) & set(list2))","def common_elements(list1, list2):
    # Make a copy of list 
    list_copy = list2[:] 

    # Iterate the original list  
    for item in list1: 
        if item in list_copy: 
            list_copy.remove(item) 

    # Return the common elements  
    return list(set(list1) & set(list2))",correct,File I/O
Provide a python program that computes the maximum value from a given set of values,"values = [13, 33, 45, 3, 5, 17, 19, 21]","# Create a list for our values
values = [13, 33, 45, 3, 5, 17, 19, 21]

# Initialize maximum value
max_val = 0

# Iterate over the list
for val in values:
    # Compare with current maximum value
    if val > max_val:
        # Update maximum value
        max_val = val

# Print the maximum value
print(""Maximum value:"", max_val)","# Create a list for our values
values = [13, 33, 45, 3, 5, 17, 19, 21]

# Initialize maximum value
max_val = 0

# Iterate over the list
for val in values:
# Compare with current maximum value
if val > max_val:
    # Update maximum value
    max_val = val

# Print the maximum value
print(""Maximum value:"", max_val)",Syntax Error,OOP
Write a function to trim each tuple by k in the given tuple list.,,"def trim_tuple(test_list, K):
  res = []
  for ele in test_list:
    N = len(ele)
    res.append(tuple(list(ele)[K: N - K]))
  return (str(res)) ","def trim_tuple(test_list, K):
  res = []
  for ele in test_list:
    N = len(ele)
    res.append(tuple(list(ele)[K: N - K]))
  return (str(res)) ",correct,File I/O
Create a list comprehension in python to extract all numbers from a string.,,num_list = [int(s) for s in string.split() if s.isdigit()],num_list = [int(s) for s in string.split() if s.isdigit()],correct,Loops
Create a search algorithm in Python that will search an array of strings for a given target string.,,"def search(target, array):
  for item in array:
    if target == item:
      return True
   
  return False","def search(target, array):
  for item in array:
    if target == item:
      return True
   
  return False",correct,String Manipulation
Implement a Pythong program to concatenate two strings.,,"string1 = ""Welcome""
string2 = ""to the world""
 
def concat(string1 , string2): 
	return string1 + string2
  
print(concat(string1, string2))","string1 = ""Welcome""
string2 = ""to the world""
 
def concat(string1 , s",Incomplete Answer,Loops
Generate a code to calculate the mean absolute difference of items in a list in Python.,"my_list = [1, 2, 3, 4, 5]","def mean_absolute_difference(my_list):
    diff = 0
    for i in range(len(my_list) - 1):
        diff += abs(my_list[i] - my_list[i + 1])
    return diff / (len(my_list) - 1)

if __name__ == ""__main__"":
    print(mean_absolute_difference(my_list))","def mean_absolute_difference(my_list):
    diff = 0
    for i in range(len(my_list) - 1):
        diff += abs(my_list[i] - m",Incomplete Answer,OOP
Write a python function to find even numbers from a mixed list.,,"def Split(list): 
    ev_li = [] 
    for i in list: 
        if (i % 2 == 0): 
            ev_li.append(i)  
    return ev_li","def Split(list): 
    ev_li = [] 
    for i in list: 
        if (i % 2 == 0): 
            ev_li.append(i)  
    return ev_li",correct,String Manipulation
"Write a Python program that combines two lists, eliminating duplicate entries.","list_1 = [1, 2, 3]
list_2 = [2, 3, 4]","list_1 = [1, 2, 3]
list_2 = [2, 3, 4]

final_list = []

for item in list_1:
 if item not in final_list:
 final_list.append(item)

for item in list_2:
 if item not in final_list:
 final_list.append(item)

print(final_list)","list_1 = [1, 2, 3]
list_2 = [2, 3, 4]

final_list = []

for item in list_1:
 if item not in final_list:
 final_list.append(item

for item in list_2:
 if item not in final_list:
 final_list.append(item

print(final_list",Syntax Error,File I/O
Generate an algorithm in Python to count the number of inversions in an array.,"[3, 5, 2, 1, 4]","def count_inversions(arr):
  inv_count = 0
  for i in range(len(arr)):
    for j in range(i + 1, len(arr)):
      if arr[i] > arr[j]:
        inv_count += 1
  return inv_count

arr = [3, 5, 2, 1, 4] 
print(count_inversions(arr))","def count_inversions(arr):
  inv_count = 0
  for i in range(len(arr)):
for j in range(i + 1, len(arr)):
  if arr[i] > arr[j]:
    inv_count += 1
  return inv_count

arr = [3, 5, 2, 1, 4] 
print(count_inversions(arr))",Syntax Error,Loops
Write a function to find if the given number is a keith number or not.,,"def is_num_keith(x): 
	terms = [] 
	temp = x 
	n = 0 
	while (temp > 0): 
		terms.append(temp % 10) 
		temp = int(temp / 10) 
		n+=1 
	terms.reverse() 
	next_term = 0 
	i = n 
	while (next_term < x): 
		next_term = 0 
		for j in range(1,n+1): 
			next_term += terms[i - j] 
		terms.append(next_term) 
		i+=1 
	return (next_term == x) ","def is_num_keith(x): 
	terms = [] 
	temp = x 
	n = 0 
	while (temp > 0): 
		terms.append(temp % 10) 
		temp = int(temp / 10) 
		n+=1 
	terms.reverse() 
	next_term = 0 
	i = n 
	while (next_term < x): 
		next_term = 0 
		for j in range(1,n+1): 
			next_term += terms[i - j] 
		terms.append(next_term) 
		i+=1 
	return (next_term == x) ",correct,OOP
Develop an artificial intelligence chatbot in Python. The chatbot should be able to respond to basic queries.,,"import random

def respond(message):
    # Check for a question mark
    if message.endswith(""?""):
        return random.choice([""I don't know :("", ""You tell me!""])

    # Return a random greeting
    return random.choice([""Hi there!"", ""Hello!"", ""Nice to meet you!""])","import random

def respond(message):
    # Check for a question mark
    if message.endswith(""?""):
        return random.choice([""I d",Incomplete Answer,Recursion
Create a Python program to check if a given string can be formed from a given set of words.,"String: ""justdoit""
Set of words: [""just"", ""do"", ""it""]","def word_set(string, words):
    words_set = set(words)
    string_set = set(string)
    
    if string_set.issubset(words_set):
        return True 
    else:
        return False

word_set(""justdoit"", [""just"", ""do"", ""it""])","def word_set(string, words):
    words_set = set(words)
    string_set = set(string)
    
    if string_set.issubset(words_set):
        return True 
    else:
        return False

word_set(""justdoit"", [""just"", ""do"", ""it""])",correct,String Manipulation
"Using the specified input, write a Python program that prints the numbers from 1 to 10 in order.",,"for i in range(1,11):
    print(i)","for i in range(1,11):
print(i)",Syntax Error,String Manipulation
Generate a Python program to generate random passwords of length n.,Length: 8,"import string
import random
 
def random_password(length):
 chars = string.ascii_uppercase + string.ascii_lowercase + string.digits
 random_password = ''.join(random.choice(chars) for i in range(length))
 return random_password
  
length = 8
print(random_password(length))","import string
import random
 
def random_password(length):
 chars = string.ascii_uppercase + string.ascii_lowercase + string.digits
 random_password = ''.join(random.choice(chars) for i in range(length))
 return random_password
  
length = 8
print(random_password(length))",Syntax Error,Loops
Generate a REST API in Python that checks if a given email is valid or not.,,"import re

from flask import Flask, jsonify

app = Flask(__name__)

@app.route(""/emailcheck/<string:email>"", methods=['GET'])
def validate_email(email):

 if re.match(r""^[A-Za-z0-9\.\+_-]+@[A-Za-z0-9\._-]+\.[a-zA-Z]*$"", email):
  return jsonify({'email': email, 'valid': True})
 else:
  return jsonify({'email': email, 'valid': False})

if __name__ == '__main__':
 app.run(debug=True)","import re

from flask import Flask, jsonify

app = Flask(__name__)

@app.route(""/emailcheck/<string:email>"", methods=['GET'])
def validate_email(email):

 if re.match(r""^[A-Za-z0-9\.\+_-]+@[A-Za-z0-9\._-]+\.[a-zA-Z]*$"", email):
  return jsonify({'email': email, 'valid': True})
 else:
  return jsonify({'email': email, 'valid': False})

if __name__ == '__main__':
 app.run(debug=True)",correct,Loops
Generate a Python program which multiplies all the numbers between two given numbers.,"start: 2
end: 10","def multiply_between(start, end):
    result = 1
    for i in range(start, end + 1):
        result *= i
    return result

print(multiply_between(2, 10))","def multiply_between(start, end):
    result = 1
    for i in range(start, en",Incomplete Answer,String Manipulation
Generate a program in Python to evaluate the following expression: (x*x) − (𝑦*𝑦),"x=10
y=5","x = 10
y = 5

result = (x*x) - (y*y)
print(result)","x = 10
y = 5

result = (x*x) - (y*y)
print(name, result)",Syntax Error,String Manipulation
Write a query to select the first four characters of a given string.,String: python_program,"SELECT SUBSTRING(string, 1, 4) 
FROM table 
WHERE string = 'python_program'","SELECT SUBSTRING(string, 1, 4) 
FROM table 
WHERE string = 'python_program'",Syntax Error,File I/O
Develop a Python program that takes two lists of numbers and returns all the common elements contained in both lists?,"list1 = [1, 2, 3, 4], list2 = [2, 3, 4, 5]","def find_common_elements(list1, list2):
    common_elements = []
    for element in list1:
        if element in list2:
            common_elements.append(element)
    
    return common_elements

list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]

result = find_common_elements(list1, list2)
print(result) # [2, 3, 4]","def find_common_elements(list1, list2):
    common_elements = []
    for element in list1:
        if element in list2:
            common_elements.append(element)
    
    return common_elements

list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]

result = find_common_elements(list1, list2)
print(result) # [2, 3, 4]",correct,String Manipulation
Create a data structure in Python to store employee names and their corresponding salaries.,"Michael $45000, Andrew $55000, Mark $70000","employee_data = {
    ""Michael"": 45000,
    ""Andrew"": 55000,
    ""Mark"": 70000
}","employee_data = {
    ""Michael"": 45000,
    ""Andrew"": 55000,
    ""Mark"": 70000
}",correct,Loops
Create a graphing program using the tkinter library in Python.,,"import tkinter as tk

# create the main GUI window
window = tk.Tk()
window.title(""Python Graphing Program"")
window.geometry(""500x500"")

# create a Canvas object
c = tk.Canvas(window, width=480, height=480)
c.pack()

# create the X and Y axes
c.create_line(10, 240, 470, 240)
c.create_line(240, 10, 240, 470)

# create the graph
...","import tkinter as tk

# create the main GUI window
window = tk.Tk()
window.title(""Python Graphing Program"")
window.geometry(""500x500"")

# create a Canvas object
c = ",Incomplete Answer,OOP
Generate a procedure in the form of a Python script to automate the process of downloading a list of websites.,"website_list: [""www.example.com"", ""www.google.com"", ""www.facebook.com""]","import requests

for website in website_list:
    response = requests.get(website)
    with open(website.split('.')[0]+'.html', 'wb') as file:
        file.write(response.content)","import requests

for website in website_list:
    response = requests.get(website)
    with open(website.split('.')[0]+'.html', 'wb') as file:
        file.write(response.content)",correct,Loops
Write a Python script to print the maximum number from a list.,,"def find_max(list):
    max_num = list[0]
    for i in list:
        if i > max_num: 
            max_num = i
    return max_num","def find_max(list:
    max_num = list[0]
    for i in list:
        if i > max_num: 
            max_num = i
    return max_num",Syntax Error,String Manipulation
Generate a python program to normalize a list of values in the range 0 and 1,"[-1, 0, 1, 2]","def normalize_list(input_list):
    min_val = min(input_list)
    max_val = max(input_list)
    output_list = []
    for value in input_list:
        normalized_value = (value - min_val) / (max_val - min_val)
        output_list.append(normalized_value)
    return output_list","def normalize_list(input_list):
min_val = min(input_list)
max_val = max(input_list)
output_list = []
for value in input_list:
    normalized_value = (value - min_val) / (max_val - min_val)
    output_list.append(normalized_value)
return output_list",Syntax Error,String Manipulation
Create a python script to print the following output with the help of list and dictionary.,"{
    ""Name"": ""Harry"",
    ""Age"": 23,
    ""Country"": ""India""
}","name = {
    ""Harry""
}
age = {
    23
}
country = {
    ""India""
}

data_list = [name, age, country]

for item in data_list:
    print(item)","name = {
    ""Harry""
}
age = {
    23
}
country = {
    ""India""
}

da",Incomplete Answer,Loops
Generate a web scraper using Python to extract all internal links from a website.,,"import requests
from bs4 import BeautifulSoup

def scrape_links(url):
 r = requests.get(url)
 soup = BeautifulSoup(r.content, 'html.parser') 
 links = [a.attrs.get('href') for a in soup.find_all('a')] 
 
 return [link for link in links if link is not None]

if __name__ == '__main__':
 url = 'https://example.com' 
 links = scrape_links(url)
 
 print(links)","import requests
from bs4 import BeautifulSoup

def scrape_links(url):
 r = requests.get(url)
 soup = BeautifulSoup(r.content, 'html.parser') 
 links = [a.attrs.get('href') for a in soup.find_all('a')] 
 
 return [link for link in links if link is not None]

if __name__ == '__main__':
 url = 'https://example.com' 
 links = scrape_links(url)
 
 print(links)",correct,Loops
Create a Python program to crop a list to a specific length,"list = [1, 2, 3, 4, 5, 6], length = 4","def crop_list(input_list, length):
    output_list = []
    for i in range(length):
        output_list.append(input_list[i])
    return output_list

my_list = [1, 2, 3, 4, 5, 6]
length = 4
result = crop_list(my_list, length)
print(result)","def crop_list(input_list, length):
    output_list = []
    for i in range(length):
        output_list.append(input_li",Incomplete Answer,Loops
Translate the following pseudo code into a Python program.,"for i in range(0, n-1):
  j = i + 1
  while j < n:
    swap(list[i],list[j])
    j = j + 1","def swap(list, i, j):
  temp = list[i]
  list[i] = list[j]
  list[j] = temp

def permutations(list, n):
  for i in range(0, n-1):
    j = i + 1
    while j < n:
      swap(list,i,j)
      j = j + 1

list = [10, 11, 12]
n = len(list)
permutations(list, n)","def swap(list, i, j)
  temp = list[i]
  list[i] = list[j]
  list[j] = temp

def permutations(list, n)
  for i in range(0, n-1)
    j = i + 1
    while j < n
      swap(list,i,j)
      j = j + 1

list = [10, 11, 12]
n = len(list)
permutations(list, n)",Syntax Error,OOP
Create a program in Python that has the following purpose: To determine if a given string is a palindrome,"""radar""","def check_palindrome(inputStr): 
     
    revStr = reversed(inputStr)
  
    if list(inputStr) == list(revStr): 
        return True
    else: 
        return False
      
userInput = ""radar""

if(check_palindrome(userInput)): 
    print(""Yes"") 
else: 
    print(""No"")","def check_palindrome(inputStr): 
     
    revStr = reversed(inputStr)
  
    if list(inputStr) == list(revStr): 
        return True
",Incomplete Answer,OOP
Create a program in Python to edit a given text by removing unwanted characters.,"text = ""Hello, World!""","def remove_unwanted_chars(text):
    return ''.join(c for c in text if c.isalnum() or c in [' ', ','])

text = ""Hello, World!""
print(""Text after removing unwanted characters:"", remove_unwanted_chars(text))","def remove_unwanted_chars(text):
    return ''.join(c for c in text if c.isalnum() or c in [' ', ','])

text = ""Hello, World!""
print(""Text after removing unwanted characters:"", remove_unwanted_chars(text))",correct,File I/O
Create a function in Python that takes a list of strings and count all occurrences of a particular word in the list.,"[""how"", ""how"", ""are"", ""you"", ""how"", ""are"", ""you""], ""how""","def countOccurrences(words, target):
    count = 0
    for word in words:
        if word == target:
            count += 1
    
    return count

print(countOccurrences([""how"", ""how"", ""are"", ""you"", ""how"", ""are"", ""you""], ""how""))","def countOccurrences(words, target):
    count = 0
    for word in words:
        if word == target:
            count += 1
    
    return count

print(countOccurrences([""how"", ""how"", ""are"", ""you"", ""how"", ""are"", ""you""], ""how""))",correct,String Manipulation
Generate python code to clean up a string.,This string includes non-letter characters. This includes %$#& etc.,"def clean_string(string):
    excluded_characters = ""*&#$@!""
    cleaned_string = ''
    for character in string:
        if character not in excluded_characters:
            cleaned_string += character
    return cleaned_string","def clean_string(string):
    excluded_characters = ""*&#$@!""
    cleaned_string = ''
    for character in string:
",Incomplete Answer,String Manipulation
Create an application in Python which will take an array of numbers and returns the median.,"[3, 4, 9, 6, 5]","def get_median(arr):
 arr.sort()
 n = len(arr)
 if n % 2 == 0:
 return (arr[n//2] + arr[n//2 - 1])/2
 else:
 return arr[n//2]

if name == ""main"":
 arr = [3, 4, 9, 6, 5]
 print(get_median(arr)) # Output -> 5.5","def get_median(arr)
 arr.sort()
 n = len(arr)
 if n % 2 == 0
 return (arr[n//2] + arr[n//2 - 1])/2
 else
 return arr[n//2]

if name == ""main""
 arr = [3, 4, 9, 6, 5]
 print(get_median(arr)) # Output -> 5.5",Syntax Error,File I/O
Compose a Python program for finding the median value of an unsorted array.,"[4, 5, 6, 7, 8, 1, 2]","def median(arr):
    # Sort the array
    arr.sort()

    # Calculate length
    n = len(arr)

    # Check if n is even
    if n % 2 == 0:
        median1 = arr[n // 2]
        median2 = arr[n // 2 - 1]
        median = (median1 + median2) / 2
    else:
        median = arr[n // 2]

    return median

arr = [4, 5, 6, 7, 8, 1, 2]
result = median(arr)
print(result) # 4.5","def median(arr):
# Sort the array
arr.sort()

# Calculate length
n = len(arr)

# Check if n is even
if n % 2 == 0:
    median1 = arr[n // 2]
    median2 = arr[n // 2 - 1]
    median = (median1 + median2) / 2
else:
    median = arr[n // 2]

return median

arr = [4, 5, 6, 7, 8, 1, 2]
result = median(arr)
print(result) # 4.5",Syntax Error,OOP
Find the maximum of three numbers using a Python function.,"a = 10, b = 5, c = 20","def maximumOfThreeNumbers(a, b, c):
   if (a >= b) and (a >= c):
     return a
   elif (b >= a) and (b >= c):
     return b
   else:
     return c

maximum = maximumOfThreeNumbers(10, 5, 20)
print(""The maximum number is:"", maximum)","def maximumOfThreeNumbers(a, b, c):
   if (a >= b) and (a >= c):
     return a
   elif (b >= a) and (b >= c):
     ",Incomplete Answer,Recursion
Create a program header to go at the beginning of every python program you complete.,,"""""""
Authors: <Your Name>
Filename: <file name>.py
Description: <A brief description of the program>
""""""","""""""
Authors: <Your Name>
Filename: <file name>.py
D",Incomplete Answer,Loops
Generate a Python script to convert cents to dollars.,,"def convert_cents_to_dollars(cents): 
    return cents / 100","def convert_cents_to_dollars(cents): 
    return cents / 100",correct,File I/O
"Create a class in Python to represent a Person with attributes: name, age, height, and weight.",,"class Person:
 def __init__(self, name, age, height, weight):
 self.name = name
 self.age = age
 self.height = height
 self.weight = weight

 def describe(self):
 return f'{self.name} is {self.age} years old, {self.height} cm tall and weighs {self.weight} kg.'","class Person:
 def __init__(self, name, age, height, weight):
 self.name = name
 self.age = age
 self.height = height
 self.weight = weight

 def describe(self):
 return f'{self.name} is {self.age} years old, {self.height} cm tall and weighs {self.weight} kg.'",Syntax Error,Recursion
Create a python module that finds the minimum and maximum values of a given list.,,"def min_max(list):
    min_val = max_val = list[0]
    for value in list[1:]:
        if value < min_val:
            min_val = value
        elif value > max_val:
            max_val = value
    return (min_val, max_val)","def min_max(list):
min_val = max_val = list[0]
for value in list[1:]:
    if value < min_val:
        min_val = value
    elif value > max_val:
        max_val = value
return (min_val, max_val)",Syntax Error,Recursion
Output a string of length 10 containing characters from 'A-Za-z' in random order using Python.,,"import string
from random import choice

''.join(choice(string.ascii_letters) for _ in range(10))","import string
from random import choice

''.join",Incomplete Answer,File I/O
Create an algorithm in Python that takes a list and returns the sum of the list items.,"[1, 2, 3]","def listSum(lst):
    s = 0
    for i in range (len(lst)):
        s += lst[i]
    return s

print (listSum([1,2,3])) # 6","def listSum(lst:
    s = 0
    for i in range (len(lst:
        s += lst[i]
    return s

print (listSum([1,2,3] # 6",Syntax Error,OOP
Design a class in Python that can be used to store the data of a book in a library.,,"class Book:
    def __init__(self, title, author, pages):
        self.title = title
        self.author = author
        self.pages = pages
        self.available = True
    
    def checkout(self):
        self.available = False
    
    def return_book(self):
        self.available = True","class Book:
    def __init__(self, title, author, pages):
        self.title = title
        self.author = author
        self.pages = pages
     ",Incomplete Answer,File I/O
Create a Python function to convert a list of strings into a dictionary of the form {string: count}.,"myList = [‘a’, ‘a’, ‘b’, ‘c’]","def list_to_dict(myList):
 dict = {}
 for val in myList:
  if val in dict:
   dict[val] += 1
  else:
   dict[val] = 1
 return dict

myList = ['a', 'a', 'b', 'c']
print(list_to_dict(myList))

# Output: 
# {'a': 2, 'b': 1, 'c': 1}","def list_to_dict(myList):
 dict = {}
 for val in myList:
  if val in dict:
   dict[val] += 1
  else:
   dict[val] ",Incomplete Answer,String Manipulation
Generate a Random Forest algorithm in Python to predict the class of a given data set.,,"from sklearn.ensemble import RandomForestClassifier

# Initialize the Random Forest model
model = RandomForestClassifier(n_estimators=100)

# Train the model using the training data
model.fit(train_x, train_y)

# Use the model to predict the class
predictions = model.predict(test_x)","from sklearn.ensemble import RandomForestClassifier

# Initialize the Random Forest model
model = RandomForestClassifier(n_estimators=100)

# Train the model using the training data
model.fit(train_x, train_y)

# Use the model to predict the class
predictions = model.predict(test_x)",correct,Recursion
"Generate a Python class for a basic To-Do list app.
The class should have four methods –  print, add, edit and delete.",,"class ToDoList:
 def __init__(self):
  self.tasks = []
 
 def print(self):
  for i in range(len(self.tasks)):
   print(f'{i+1}. {self.tasks[i]}')
 
 def add(self, task):
  self.tasks.append(task)
 
 def edit(self, index, new_task):
  self.tasks[index] = new_task
 
 def delete(self, index):
  del self.tasks[index]","class ToDoList:
 def __init__(self):
  self.tasks = []
 
 def print(self):
  for i in range(len(self.tasks)):
   print(f'{i+1}. {self.tasks[i]}')
 
 def add(self, task):
  self.tasks.append(task)
 
 def edit(self, index, new_task):
  self.tasks[index] = new_task
 
 def delete(self, index):
  del self.tasks[index]",Syntax Error,Loops
Create an algorithm in Python that takes a list of numbers and returns a new list with only the even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def get_even_numbers(nums_list):
  even_numbers = []
  for num in nums_list:
    if num % 2 == 0:
      even_numbers.append(num)
  return even_numbers

nums_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
even_numbers = get_even_numbers(nums_list)
print(even_number)","def get_even_numbers(nums_list):
  even_numbers = []
  for num in nums_list:
    if num % 2 == 0:
      even_numbers.append(num)",Incomplete Answer,String Manipulation
Design a recursive function to generate Fibonacci numbers using Python.,,"def Fibonacci_Generator(n): 
    if n<0: 
        print(""Incorrect input"") 
  
    # First and Second Fibonacci numbers are 0 and 1 respectively 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci_Generator(n-1)+Fibonacci_Generator(n-2)","def Fibonacci_Generator(n: 
    if n<0: 
        print(""Incorrect input"" 
  
    # First and Second Fibonacci numbers are 0 and 1 respectively 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci_Generator(n-1+Fibonacci_Generator(n-2",Syntax Error,OOP
Can you write a python program to detect whether the given sentence contains a palindrome or not?,"Sentence: ""Anna went to vote in the election.""","sentence = ""Anna went to vote in the election.""

def is_palindrome(sentence):
    clean_sentence = sentence.replace(' ', '').lower()
    reversed_sentence = clean_sentence[::-1]
    return clean_sentence == reversed_sentence

print is_palindrome(sentence)","sentence = ""Anna went to vote in the election.""

def is_palindrome(sentence):
    clean_sentence = sentence.replace(' ', '').lower()
    reversed_sentence = clean_sentence[::-1]
    return clean_sentence == reversed_sentence

print is_palindrome(sentence)",Syntax Error,Recursion
Design a program in Python that takes in a string and finds the characters that appear only once.,"String = ""This is a test""","def findUniqueChars(str):
    result = """"
    for char in str:
        if str.count(char) == 1:
            result += char

    return result 

result = findUniqueChars(""This is a test"")
print(result)","def findUniqueChars(str):
    result = """"
    for char in str:
        if str.count(char) == 1:
            result += char

    return result 

result = findUniqueChars(""This is a test"")
print(result)",correct,Loops
Generate a function in Python to print the sum of two integers.,,"def print_sum(a, b):
    """"""
    Print the sum of the two numbers
    """"""
    print(a+b)","def print_sum(a, b):
    """"""
    Print the sum of the two numbers
    """"""
    print(a+b)",correct,File I/O
Generate a Python algorithm to generate permuations.,,"def permute(nums):
  res = []
  generatePermutations(nums, 0, [], res)
  return res

def generatePermutations(nums, index, current, result):
  if index == len(nums):
    result.append(current[:])
  else:
    for i in range(index, len(nums)):
      current.append(nums[i])
      generatePermutations(nums, index+1, current, result)
      current.pop()","def permute(nums):
  res = []
  generatePermutations(nums, 0, [], res)
  return res

def generatePermutations(nums, index, current, result):
  if index == len(nums):
    result.append(current[:])
  else:
    for i in range(index, len(nums)):
      current.append(nums[i])
      generatePermutations(nums, index+1, current, result)
      current.pop()",Syntax Error,File I/O
Generate a function to add two matrices of the same size in Python.,"A = [[1,2],[3,4]] 
B = [[5,6],[7,8]]","def add_matrix(A, B):
    """"""Add two matrices of the same size.""""""
    n = len(A)
    m = len(A[0])
    result = [[0 for _ in range(m)] for _ in range(n)] 
    for i in range(n):
        for j in range(m):
            result[i][j] = A[i][j] + B[i][j]
            
    return result

# Output
print(add_matrix(A,B))","def add_matrix(A, B)
    """"""Add two matrices of the same size.""""""
    n = len(A)
    m = len(A[0])
    result = [[0 for _ in range(m)] for _ in range(n)] 
    for i in range(n)
        for j in range(m)
            result[i][j] = A[i][j] + B[i][j]
            
    return result

# Output
print(add_matrix(A,B))",Syntax Error,OOP
Generate a Python code snippet to convert a given Fahrenheit temperature to Celsius.,,"def fahrenheit_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) * (5 / 9)
    return celsius","def fahrenheit_to_celsius(fahrenheit)
    celsius = (fahrenheit - 32) * (5 / 9)
    return celsius",Syntax Error,Loops
Create a Python function that takes in one integer argument and returns an integer with the absolute value.,number = -3,"def getAbsoluteValue(number):
    if (number < 0):
        return number * -1
    else:
        return number

print(getAbsoluteValue(-3)) # Outputs 3","def getAbsoluteValue(number):
    if (number < 0):
        return number * ",Incomplete Answer,String Manipulation
Write a Python program to delete all characters in a string that matches a given pattern.,"string = ""The qick brown fox jumps over the lazy dog.""
pattern = ""q[a-z]ck""","import re
def delete_pattern_characters(string, pattern):
 return re.sub(pattern, """", string)","import re
def delete_pattern_characters(string",Incomplete Answer,File I/O
Create a script in Python to print the squares of all numbers in the given list.,"[1, 2, 3, 4, 5]","for n in [1, 2, 3, 4, 5]:
 print(n**2)","for n in [1, 2, 3, 4, 5]:
 print(name, n**2)",Syntax Error,Recursion
Implement quick sort in Python.,,"def quicksort(arr):
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[len(arr) // 2]
        left = [x for x in arr if x < pivot]
        middle = [x for x in arr if x == pivot]
        right = [x for x in arr if x > pivot]
        return quicksort(left) + middle + quicksort(right)","def quicksort(arr:
    if len(arr <= 1:
        return arr
    else:
        pivot = arr[len(arr // 2]
        left = [x for x in arr if x < pivot]
        middle = [x for x in arr if x == pivot]
        right = [x for x in arr if x > pivot]
        return quicksort(left + middle + quicksort(right",Syntax Error,OOP
Write a function in Python that takes three positive integers as arguments and returns the largest one.,,"def get_largest(a, b, c):
    largest = a 
    if b>largest:
        largest = b
    if c>largest:
        largest = c
    return largest

print(get_largest(10, 20, 15))","def get_largest(a, b, c):
    largest = a 
    if b>largest:
        largest = b
    if c>largest:
        largest = c
    return largest

print(get_largest(10, 20, 15))",correct,Recursion
Create a Python function that takes a list and returns a list of the unique elements of that list.,"myList = [1, 2, 3, 4, 5, 1, 2]","def uniqueList(myList):
    uniqueList = []
    for el in myList:
        if el not in uniqueList:
            uniqueList.append(el)
    return uniqueList","def uniqueList(myList):
    uniqueList = []
    for el in myList:
        if ",Incomplete Answer,Recursion
Develop a Python program to generate the Fibonacci sequence of a given number of terms.,terms = 10,"def Fibonacci(terms): 
  Fibonacci_num = [0, 1] 
  a = 0
  b = 1
  for i in range(2,terms): 
    c = a + b
    Fibonacci_num.append(c)
    a = b
    b = c
  return Fibonacci_num 
  
nterms = 10
print(""Fibonacci sequence:"")
print(Fibonacci(nterms))","def Fibonacci(terms): 
  Fibonacci_num = [0, 1] 
  a = 0
  b = 1
  for i in range(2,terms): 
    c = a + b
    Fibonacci_num.append(c)
    a = b
    b = c
  return Fibonacci_num 
  
nterms = 10
print(name, ""Fibonacci sequence:"")
print(name, Fibonacci(nterms))",Syntax Error,OOP
Build a function in Python to compute the Fibonacci numbers up to a given maximum.,maximum = 15,"def fibonacciGenerator(maximum):
    i1, i2 = 0, 1
    while i1 < maximum:
        yield i1
        i1, i2 = i2, i1 + i2

fibonacci = list(fibonacciGenerator(15))
print(fibonacci)","def fibonacciGenerator(maximum):
    i1, i2 = 0, 1
    while i1 < maximum:
        yield i1
        i1, i2 = i2, i1 + i2

fibonacci = list(fibonacciGenerator(15))
pritn(fibonacci)",Syntax Error,File I/O
Create a function to normalize a given string using Python.,"""Hello, World!""","def normalize_string(s):
    return s.lower().strip()","def normalize_string(s):
    return s.lower().strip()",correct,Recursion
Transform the following Python function into a list comprehension.,"numbers = [1, 2, 3, 4, 5]
result = []
for num in numbers:
    result.append(num * 2)","numbers = [1, 2, 3, 4, 5]
result = [num * 2 for num in numbers]","numbers = [1, 2, 3, 4, 5]
resul",Incomplete Answer,File I/O
Write a Python code that accepts an input string and returns a list of its capitalized words.,"""python is powerful""","string = ""python is powerful""
list_words = string.split()
output = [i.capitalize() for i in list_words]","string = ""python is powerful""
list_words = string.split()
output = [i.capitalize() for i in list_words]",correct,OOP
Write a function to find the area of a rectangle.,,"def rectangle_area(l,b):
  area=l*b
  return area","def rectangle_area(l,b):",Incomplete Answer,Recursion
Develop a Python Webscraper for collecting data from a given URL.,Example URL: http://example.com/data,"import requests
from bs4 import BeautifulSoup

URL = 'http://example.com/data'

# Send a request to the URL
page = requests.get(URL)

# Parse the page
soup = BeautifulSoup(page.content, 'html.parser')

# Get the data
data = soup.find_all('div', class_='data')

# Print the data
for item in data:
 print(item.text)","import requests
from bs4 import BeautifulSoup

URL = 'http://example.com/data'

# Send a request to the URL
page = requests.get(URL)

# Parse the page
soup = BeautifulSoup(page.content, 'html.parser')

# Get the data
data = soup.find_all('div', class_='data')

# Print the data
for item in data:
 print(item.text)",correct,OOP
Create a Python function that takes in an array-like data structure and returns the difference of its maximum and minimum values.,"[100, 45, 56, 30, 90, 100]","def get_difference(arr):
    return max(arr) - min(arr)

input_arr = [100, 45, 56, 30, 90, 100]
difference = get_difference(input_arr)
print(difference)  # Output: 70","def get_difference(arr):
    return max(arr) - min(arr)

input_arr = [100, 45, 56, 30, 90, 100]
difference = get_difference(input_arr)
print(difference)  # Output: 70",correct,Loops
Write a Python program to calculate the sum of two numbers (input in separate lines) and print it.,"2
3","num1 = int(input())
num2 = int(input())
sum_of_nums
print(sum_of_nums)","num1 = int(input())
num2 = int(input())
sum_of_nums
print(sum_of_nums)",Syntax Error,File I/O
Optimize a Python function to compute the maximum value in a list of integers.,"list = [1, 3, 2, 5, 6, 4]","def get_max(list): 
  
  # Initialize the maximum
  max_v = list[0]

  # Compute the maximum
  for i in range(1, len(list)):
    if list[i] > max_v:
      max_v = list[i]

  # Return the maximum
  return max_v","def get_max(list): 
  
  # Initialize the maximum
  max_v = list[0]

  # Compute the maximum
  for i in range(1, len(list)):
    if list[i] > max_v:
      max_v = list[i]

  # Return the maximum
  return max_v",correct,File I/O
Generate a structured array from a given dictionary in Python.,"dictionary = {
  ""name"": ""John"",
  ""age"": 24,
  ""nationality"": ""American""
}","import numpy as np
data = np.array(list(dictionary.values()),
      dtype=[('name','U20'),('age','i4'),('nationality','U10')]
)","import numpy as np
data = np.array(list(dictionary.values()),
      dtype=[('name','U20'),('age','i4'),('nationality','U10')]
)",Syntax Error,File I/O
Generate a two-dimensional array of ones using Python.,"r = 4, c = 5","import numpy as np 

arr = np.ones((r,c))","import numpy as np 

arr = np.ones((r,c",Syntax Error,OOP
Create a class in Python that will return the sum of two numbers.,,"class Summator:
    def __init__(self, num1, num2):
        self.num1 = num1
        self.num2 = num2

    def get_sum(self):
        return self.num1 + self.num2","class Summator:
    def __init__(self, num1, num2):
        self.num1 = num1
        self.num2 = num2

    def get_sum(self):
        return self.num1 + self.num2",correct,File I/O
Modify the given Python code to be more efficient.,"def my_function(N):
    list1 = []
    for i in range(N):
        list2 = []
        for j in range(N):
            list2.append(i+j)
        list1.append(list2)
    return","def my_function(N):
    list1 = [[i+j for j in range(N)] for i in range(N)]
    return list1","def my_function(N:
    list1 = [[i+j for j in range(N] for i in range(N]
    return list1",Syntax Error,String Manipulation
"Convert the following Algorithm into Python code.

Input: two numbers

Algorithm:
1. Check if the two numbers are equal.
2. If true, return 0.
3. Else check the which is higher.
4. Return 1 if the first number is higher than the second one.
5. Return -1 otherwise.","num1 : 5
num2 : 10","def compare_numbers(num1, num2):
 if num1 == num2:
  return 0
 elif num1 > num2:
  return 1
 else:
  return -1

num1 = 5
num2 = 10
result = compare_numbers(num1, num2)

print(result)","def compare_numbers(num1, num2):
 if num1 == num2:
  return 0
 elif num1 > num2:
  return 1
 else:
  return -1

num1 = 5
num2 = 10
result = compare_numbers(num1, num2)

print(result)",correct,Recursion
Use python to create a function to calculate the mean of three numbers.,,"def mean_of_three(num1, num2, num3):
    return (num1 + num2 + num3) / 3

if __name__ == '__main__':
    print(mean_of_three(2, 4, 6))","def mean_of_three(num1, num2, num3):
    return (num1 + num2 + num3) / 3

if __name__ == '__main__':
    print(mean_of_three(2, 4, 6))",correct,OOP
Create a Python program to find the sum of all the even elements in a given list.,,"def sum_even_elements(list):
  sum = 0 
  for item in list:
    if item % 2 == 0:
      sum += item
  return sum","def sum_even_elements(list):
  sum = 0 
  for item in list:
    if item % 2 == 0:
      sum += item
  return sum",Syntax Error,Recursion
Construct a python code that can convert any given integer into its binary representation.,,"def to_binary(n):
    binary_rep = """"
    while n > 0:
        binary_rep = str(n%2) + binary_rep
        n = int(n/2)
    return binary_rep","def to_binary(n)
    binary_rep = """"
    while n > 0
        binary_rep = str(n%2) + binary_rep
        n = int(n/2)
    return binary_rep",Syntax Error,Recursion
Write a Python function that takes a list of words and removes all words that are not equal to the given word.,"word = 'Hello'
words = ['Hi', 'there', 'Hello', 'Goodbye']","def remove_words(word, words):
    return [w for w in words if w == word]","def remove_words(word, words):
    return [w for w in words if w == word]",correct,String Manipulation
"Create a Google App Engine application in Python that greets users with a ""Hello World"" message.",,"# app.py 
import webapp2

class MainPage(webapp2.RequestHandler):
    def get(self):
        self.response.headers['Content-Type'] = 'text/plain'
        self.response.write('Hello, World!')

#app.yaml
runtime: python27
api_version: 1
threadsafe: true

handlers:
- url: /.*
  script: app.app","# app.py 
import webapp2

class MainPage(webapp2.RequestHandler):
    def get(self):
        self.response.headers['Content-Type'] = 'text/plain'
        self.response.write('Hello, World!')

#app.yaml
runtime: python27
api_version: 1
threadsafe: true

handlers:
- url: /.*
  script: app.app",Syntax Error,File I/O
Generate a Python script for sorting a list in ascending order.,"[3, 4, 8, 5, 10]","def sortList(list): 
    list.sort() 
    return list
    
unsorted_list = [3, 4, 8, 5, 10]
sorted_list = sortList(unsorted_list)

print(""Sorted list:"", sorted_list)","def sortList(list): 
    list.sort() 
    return list
    
unsorted_list = [3, 4, 8, 5, 10]
sorted_list = sortList(unsorted_list)

print(""Sorted list:"", sorted_list)",correct,File I/O
Write a function to count the most common words in a dictionary.,,"from collections import Counter
def count_common(words):
  word_counts = Counter(words)
  top_four = word_counts.most_common(4)
  return (top_four)
","from collections import Counter
def count_common(words):
  word_counts = Counter(words)
  top_four = word_counts.most_common(4)
  return (top_four)
",Syntax Error,OOP
Write a Python program to print a calendar of the given month and year,"month = 11
year = 2020","import calendar

c = calendar.TextCalendar(calendar.SUNDAY)
str = c.formatmonth(year, month)
print(str)","import calendar

c = calendar.TextCalendar(calendar.SUNDAY
str = c.formatmonth(year, month
print(str",Syntax Error,File I/O
Write a Python function to add two given numbers without using the '+' operator.,,"def add(num1, num2): 
    while num2 != 0: 
        carry = num1 & num2 
        num1 = num1 ^ num2 
        num2 = carry << 1
    return num1","def add(num1, num2): 
    while num2 != 0: 
        carry = num1 & num2",Incomplete Answer,OOP
Create a program in Python to print the numbers from 1 to 50 which are divisible by 3 and are even.,,"for num in range(2, 51):
    if num % 3 == 0 and num % 2 == 0:
        print(num)","for num in range(2, 51):
    if num % 3 ",Incomplete Answer,Recursion
Design an API in Python to compare two strings and provide an output/ match score.,"String1 = ""Hello World""
String2 = ""Hello Everyone""","import difflib

def compare_strings(string1, string2):
    # Convert strings to lowercase
    string1 = string1.lower()
    string2 = string2.lower()

    # Compute match score
    score = difflib.SequenceMatcher(None, string1, string2).ratio()

    # Return the match score
    return score","import difflib

def compare_strings(string1, string2):
    # Convert strings to lowercase
    string1 = string1.lower()
    string2 = string2.lower()

    # Compute match score
    score = difflib.SequenceMatcher(None, string1, string2).ratio()

    # Return the match score
    return score",correct,String Manipulation
Create a Python script that automates the process of filling out a web form.,,"import requests

url = 'https://example.com'

# Set the form data  
data = {
  'field1': 'value1',
  'field2': 'value2',
  'field3': 'value3',
  'field4': 'value4'
}

# Send a POST request to the URL with the form data  
r = requests.post(url, data=data)

# Check the response code 
if r.status_code == 200: 
  print('Form submitted successfully.') 
else:
  print('Error submitting form.')","import requests

url = 'https://example.com'

# Set the form data  
data = {
  'field1': 'value1',
  'field2': 'value2',
  'field3': 'value3',
  'field4': 'value4'
}

# Send a POST request to the URL with the form data  
r = requests.post(url, data=data)

# Check the response code 
if r.status_code == 200: 
  print('Form submitted successfully.') 
else:
  print('Error submitting form.')",correct,File I/O
"Write a python program to clean the text by removing extra spaces, punctuations and other special characters.",Hello  World!!!,"def remove_special_characters(text):
    cleaned_text = ''
    for char in text:
        if char.isalnum():
            cleaned_text = cleaned_text + char
    return cleaned_text

print(remove_special_characters('Hello  World!!!')) # Output = HelloWorld","def remove_special_characters(text):
    cleaned_text = ''
    for char in text:
        if char.isalnum():
            cleane",Incomplete Answer,Recursion
Create a Python code snippet to convert a given JSON string into a Python dictionary.,"'{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'","import json

json_string = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
python_dict = json.loads(json_string)

print(python_dict)","import json

json_string = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
python_dict = json.loads(json_string)

print(python_dict)",correct,OOP
Create a for loop in python to search for a word in a given list.,"The list is ['cat', 'dog', 'bird', 'tiger']","def find_word(my_list, word):
    for i in my_list:
        if i == word:
            return True
    return False","def find_word(my_list, word):
    for i in my_list:
     ",Incomplete Answer,File I/O
Write a function to get the word with most number of occurrences in the given strings list.,,"from collections import defaultdict 

def most_occurrences(test_list):
  temp = defaultdict(int)
  for sub in test_list:
    for wrd in sub.split():
      temp[wrd] += 1
  res = max(temp, key=temp.get)
  return (str(res)) ","from collections import defaultdict 

def most_occurrences(test_list):
  temp = defaultdict(int)
  for sub in t",Incomplete Answer,Recursion
Create a python program to filter a list of items by a condition,"Given a list of numbers example: [1,2,3,4,5] filter for items thats greater than or equal to 3.","def filter_list(list_input):
    filtered_list = [i for i in list_input if i >= 3]
    return filtered_list

list_input = [1,2,3,4,5]
filtered_list = filter_list(list_input)
print(filtered_list) # [3, 4, 5]","def filter_list(list_input):
    filtered_list = [i for i in list_input if i >= 3]
    return filtered_list

list_input = [1,2,3,4,5]
filtered_list = filter_list(list_input)
print(name, filtered_list) # [3, 4, 5]",Syntax Error,OOP
Design a function in Python to calculate the average of two numbers.,,"def mean(a, b):
    return (a + b)/2","def mean(a, b):
    return (a + b)/2",Syntax Error,File I/O
Create a class in Python named `Movie` that contains two parameters `title` and `rating`.,,"class Movie:
    def __init__(self, title, rating):
        self.title = title
        self.rating = rating","class Movie:
    def __init__(self, title, rating):
        self.title = title
        self.rating = rating",correct,Recursion
Write a Python program to find the smallest number using the given array of numbers.,"[13, 45, 7, 23]","def smallest_number(arr):
    min_number = arr[0]
    for num in arr[1:]:
        if num < min_number:
            min_number = num
    return min_number","def smallest_number(arr):
    min_number = arr[0]
    for num in arr[1:]:
        if num < min_number:
            min_number = num
    return min_number",correct,File I/O
Generate an algorithm in Python to calculate the GCD of two given integers,,"def computeGCD(a, b): 
	if(b == 0): 
		return a 
	else: 
		return computeGCD(b, a%b)","def computeGCD(a, b): 
	if(b == 0): 
		ret",Incomplete Answer,Recursion
Create a Python program that counts the number of occurrences of a character in a string,"String = 'Hello World', Character = 'o'","def count_char(string, char):
    count = 0
    for c in string:
        if c == char:
            count += 1
    return count","def count_char(string, char):
    count = 0
    for c in string:
        if c == char:
            count += 1
    return count",correct,File I/O
Write a Python program to take in a string and reverse the given string using a while loop.,,"def reverse_string(str):
    str_rev = ''
    i = len(str) - 1

    while i >= 0:
        str_rev += str[i]
        i -= 1

    return str_rev","def reverse_string(str):
    str_rev = ''
    i = len(str) - 1

    while i >= 0:
        str_rev += str[i]
        i -= 1

    return str_rev",correct,Loops
Implment a Python class to store data in a dictionary.,,"class DataStorage:
    def __init__(self):
        self._data = {}

    def store_data(self, key, value):
        self._data[key] = value

    def get_data(self, key):
        return self._data.get(key)","class DataStorage:
    def __init__(self):
        self._data = {}

    def store_data(self, key, val",Incomplete Answer,Loops
Generate a list of Python library names available in the Python standard library.,,"Built-in Python libraries:
1. ast
2. dis
3. math
4. fractions
5. datetime
6. hashlib
7. itertools
8. json
9. urllib
10. os
11. pickle
12. random
13. re
14. subprocess
15. sys
16. time
17. zlib","Built-in Python libraries:
1. ast
2. dis
3. math
4. fractions
5. datetime
6. hashlib
7. itertools
8. json
9. urllib
10. os
11. pickle
12. random
13. re
14. subprocess
15. sys
16. time
17. zlib",correct,String Manipulation
Design a process in Python for extracting information from a given database.,,"import sqlite3

# Connecting to the Database file
conn = sqlite3.connect('<database name>')

# Creating a cursor to work with database
cursor = conn.cursor()

# Executing a query
result = cursor.execute(""SELECT <column name> FROM <table name> WHERE <condition>"")

# Storing the results in a list while iterating over it
data = [row for row in result]

# Closing the connection
conn.close()","import sqlite3

# Connecting to the Database file
conn = sqlite3.connect('<database name>')

# Creating a cursor to work with database
cursor = conn.cursor()

# Executing a query
result = cursor",Incomplete Answer,OOP
Develop a Python program that takes in a date as an input and prints out the following day in a human-readable format.,,"from datetime import date, timedelta

def next_day(old_date):
 d = date.fromisoformat(old_date)       
 new_date = d + timedelta(1) 
 return new_date.isoformat() 

next_day(""2020-06-20"")","from datetime import date, timedelta

def next_day(old_date):
 d = date.fromisoformat(old_date)       
 new_date = d + timedelta(1) 
 return new_date.isoformat() 

next_day(""2020-06-20"")",correct,Recursion
Create a Python code to do text classification based on a provided dataset.,,"import pandas as pd
import numpy as np

def TextClassifier(x_train, y_train, x_test, y_test):
    from sklearn.naive_bayes import MultinomialNB
    model = MultinomialNB()
    model.fit(x_train, y_train)
    y_pred = model.predict(x_test)
    accuracy = np.mean(y_test == y_pred)
    return accuracy","import pandas as pd
import numpy as np

def TextClassifier(x_train, y_train, x_test, y_test):
    from sklearn.naive_bayes import MultinomialNB
    m",Incomplete Answer,Recursion
Optimize a piece of Python code that enumerates all substrings of a string.,"string = ""Supercalifragilisticexpialidocious""","def enumerate_substrings(string):
    substrings = set()
    for i in range(len(string)):
        for j in range(i, len(string)):
            substrings.add(string[i:j+1])
    return substrings

string = ""Supercalifragilisticexpialidocious""
substrings = enumerate_substrings(string)
print(substrings)","def enumerate_substrings(string):
    substrings = set()
    for i in range(len(string)):
        for j in range(i, len(string)):
            substrings.add(string[i:j+1])
    return substrings

string = ""Supercalifragilisticexpialidocious""
substrings = enumerate_substrings(string)
print(substrings)",correct,Recursion
Create an automatic speech recognition system in Python.,,"# Import modules
import speech_recognition as sr

# Record audio
r = sr.Recognizer()
with sr.Microphone() as source:
 print('Say something!')
 audio = r.listen(source)

# Transform the audio file into text
text = r.recognize_google(audio)

print('You said: ', text)","# Import modules
import speech_recognition as sr

# Record audio
r = sr.Recognizer()
with sr.Microphone() as source:
 print('Say som",Incomplete Answer,Loops
Optimize the following Python code for calculating the square of a number.,"def calculateSquare(x):
    return x * x","def calculateSquare(x):
    return x ** 2","def calculateSquare(x):
    return x ** 2",correct,String Manipulation
Make a program in Python to calculate the square of a number when the number is given as an input.,5,"num = int(input('Enter a number: '))
square = num**2
print(f'Square of {num} is {square}')","num = int(input('Enter a number: '))
square = num**2
print(f'Square of {num} is {square}')",Syntax Error,File I/O
Generate a python program to extract all the words from a given string and store them in a list.,,"def extract_words_from_string(s): 
    return s.split(' ')","def extract_words_from_string(s): 
    return s.split(' ')",correct,OOP
Convert an existing function from Python 3 to Python 2.,"def check_anagram(string1, string2):
    if(sorted(string1) == sorted(string2)):
        return True
    else:
        return False","def check_anagram(string1, string2):
    if(sorted(list(string1)) == sorted(list(string2))):
        return True
    else:
        return False","def check_anagram(string1, string2):
    if(sorted(list(string1)) == sorted(list(string2))):
        return True
    else:
        return False",correct,Recursion
Create a Python function that takes in two strings and returns True if they are anagrams (they contain the same letters).,"string1 = ""pizza""
string2 = ""appaiz""","def isAnagram(string1, string2):
 s1 = sorted(string1.lower())
 s2 = sorted(string2.lower())

 if s1 == s2:
 return True
 else:
 return False

string1 = ""pizza"";
string2 = ""appaiz"";

isAnagram(string1, string2); // True","def isAnagram(string1, string2):
 s1 = sorted(string1.lower())
 s2 = sorted(string2.lower())

 if s1 == s2:
 return True
 else:
 return False

string1 = ""pizza"";
string2 = ""appaiz"";

isAnagram(string1, string2); // True",correct,OOP
Write a Python program to check an array if it contains consecutive integers.,"[2, 3, 4, 5, 6]","def check_array_for_consecutive(arr):
    arr.sort()
    for i in range(len(arr)-1):
        if arr[i+1] - arr[i] != 1:
            return False
    return True

arr = [2, 3, 4, 5, 6]
print(check_array_for_consecutive(arr))","def check_array_for_consecutive(arr):
    arr.sort()
    for i in range(len(arr)-1):
        if arr[i+1] - arr[i] != 1:
            return False
    return True

arr = [2, 3, 4, 5, 6]
pritn(check_array_for_consecutive(arr))",Syntax Error,OOP
Generate a correctly formatted python program that sorts an array of integers,,"def sort_arr(arr):
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr","def sort_arr(arr):
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr",Syntax Error,Recursion
Create a Python program to print the current timestamp,,"from datetime import datetime

now = datetime.now()
print(now.strftime(""%Y-%m-%d %H:%M:%S""))","from datetime import datetime

now = datetime.now()
print(now.strftime(""%Y-%m-%d %H:%M:%S""))",correct,File I/O
Write a Python function make_float that converts a given string argument to a float.,"""25.42""","def make_float(string):
  return float(string)","def make_float(string:
  return float(string",Syntax Error,OOP
Create a Python script for crawling a website.,,"import requests
from bs4 import BeautifulSoup

page = requests.get('https://website.com/')
soup = BeautifulSoup(page.content, 'html.parser')

for link in soup.find_all('a', href=True):
    print(link['href'])","import requests
from bs4 import BeautifulSoup

page = requests.get('https://website.com/')
soup = Beauti",Incomplete Answer,OOP
Modify the the following python program so that it can be run in Python 3,"words = raw_input(""Enter words:"")
print words","words = input(""Enter words:"")
print(words)","words = input(""Enter words:"")
print(words)",correct,Loops
Create a Python script that checks whether a given word is a palindrome.,"""racecar""","def is_palindrome(word):
  rev_word = word[::-1]
  if rev_word == word:
    return True
  else:
    return False
  
word = ""racecar""
print(is_palindrome(word)) # True","def is_palindrome(word):
  rev_word = word[::-1]
  if rev_word == word:
    return True
  else:
    return False
  
word = ""racecar""
print(is_palindrome(word)) # True",correct,Recursion
Convert the following JSON object to Python dictionary.,"{""name"": ""John"", ""age"": ""25""}","import json

def convert_json_to_dict(json_object):
    return json.loads(json_object)","import json

def convert_json_to_dict(json_",Incomplete Answer,File I/O
Insert missing keyword in this Python statement.,for i in range():,for i in range(10):,for i in range(10):,correct,String Manipulation
Generate a random number from 1 to 10 in Python and assign it to the variable 'number'.,,"import random

number = random.randint(1, 10)","import random

number ",Incomplete Answer,OOP
Create a function in Python that takes in a list and sorts it in ascending order.,"[3, 5, 1, 2, 9]","def sortList(list):
 list.sort()
 return list

print(sortList([3, 5, 1, 2, 9])) # Output: [1, 2, 3, 5, 9]","def sortList(list):
 list.sort()
 return list

print",Incomplete Answer,File I/O
Create a function in Python to produce a ``new_list`` which contains substring elements from the given ``list``,"list = [""apple"",""banana"",""orange"",""carrot""]","def produce_new_list(list):
    '''This function will return a new list containing substrings from the given list'''
    new_list = []

    for item in list:
        for i in range(0, len(item)):
            new_list.append(item[0:i+1])  

    return new_list","def produce_new_list(list)
    '''This function will return a new list containing substrings from the given list'''
    new_list = []

    for item in list
        for i in range(0, len(item))
            new_list.append(item[0i+1])  

    return new_list",Syntax Error,OOP
Write a Python program to display a list of all the prime numbers between a given range.,,"def prime_nums_in_range(start, end): 
 prime_list = [] 
 for num in range(start, end + 1): 
 if num > 1: # check for cases greater than 1 
 for i in range(2, num): 
 if (num % i) == 0: 
 break 
 else: 
 prime_list.append(num) 
 return prime_list 

start = 2 
end = 20 
print(prime_nums_in_range(start, end)) 
# Output: [2, 3, 5, 7, 11, 13, 17, 19]","def prime_nums_in_range(start, end): 
 prime_list = [] 
 for num in range(start, end + 1): 
 if num > 1: # check for cases greater than 1 
 for i in range(2, num): 
 if (num % i) == 0: 
 break 
 else: 
 prime_list.append(num) 
 return prime_list 

start = 2 
end = 20 
print(prime_nums_in_range(start, end)) 
# Output: [2, 3, 5, 7, 11, 13, 17, 19]",correct,String Manipulation
Create a Python function to generate random numbers between a given range of numbers.,,"def random_number_generator(lhs, rhs):
    '''This function generates a random number between given range (lhs, rhs)'''
    import random
    return random.randint(lhs, rhs)","def random_number_generator(lhs, rhs):
    '''This function generates a random number between given range (lhs, rhs)'''
    import random
    return random.randint(lhs, rhs)",correct,Recursion
Optimize the following code and provide an algorithm to solve it in Python.,"def fibonacci(n):
    if n <= 1:
        return n
    return fibonacci(n-1) + fibonacci(n-2)","def fibonacci(n):
    # Store the Fibonacci numbers in an array 
    a = [0] * (n + 1)
    
    # Base cases 
    a[1] = 1
    for i in range(2, n + 1):
        a[i] = a[i - 1] + a[i - 2]
 
    return a[n]","def fibonacci(n):
    # Store the Fibonacci numbers in an array 
    a = [0] * (n + 1)
    
    # Base cases 
    a[1] = 1
    for i in range(2, n + 1):
        a[i] = a[i - 1] + a[i - 2]
 
    return a[n]",Syntax Error,Recursion
Generate the Python code that calculates the numbers of characters in a given string.,"""Hello, World!""","myString = ""Hello, World!""

charCount = 0
for char in myString:
    charCount += 1
    
print(""Number of characters:"", charCount)","myString = ""Hello, World!""

charCount = 0
for char in myString:
    charCount += 1
    
print(""Number of characters:"", charCount)",correct,Loops
Create a Python script to generate a random password with a length of 8 characters that includes both uppercase and lowercase letters.,,"import string
import random

length = 8

alphabet = string.ascii_letters + string.digits
password = ''.join(random.choice(alphabet) for i in range(length))

print(""Generated password:"", password)","import string
import random

length = 8

alphabet = string.ascii_letters + string.digits
password = ''.join(random.choice(alphabet) for i in range(length))

print(""Generated password:"", password)",Syntax Error,String Manipulation
Generate a list of prime numbers from 1 to 1000 using Python.,,"primes = []

for x in range(2, 1001):
    for i in range(2, x):
        if x % i == 0:
            break
    else:
        primes.append(x)

print(primes)","primes = []

for x in range(2, 1001):
    for i in range(2, x):
        if x ",Incomplete Answer,Recursion
Write a Python program to clean a given dataset for an AI system.,"Dataset:

{
   ""name"": ""John"",
   ""age"": 50,
   ""height"": ""180 cm"",
   ""weight"": ""75 kg""
}","def clean_dataset(dataset):
 cleaned_dataset = dataset.copy()
 cleaned_dataset['age'] = int(dataset['age'])
 cleaned_dataset['height'] = float(dataset['height'].split(' cm')[0])
 cleaned_dataset['weight'] = float(dataset['weight'].split(' kg')[0])
 return cleaned_dataset","def clean_dataset(dataset)
 cleaned_dataset = dataset.copy()
 cleaned_dataset['age'] = int(dataset['age'])
 cleaned_dataset['height'] = float(dataset['height'].split(' cm')[0])
 cleaned_dataset['weight'] = float(dataset['weight'].split(' kg')[0])
 return cleaned_dataset",Syntax Error,File I/O
Write a Python program that prints out the multiplication table of 9.,,"# Function to display the multiplication table
def displayTable():
    # Nested loop to iteratre through the table
    for i in range(1, 11):
        for j in range(1, 11):
            print(f'{i} x {j} = {i*j}')

# Call the Function
displayTable()","# Function to display the multiplication table
def displayTable(:
    # Nested loop to iteratre through the table
    for i in range(1, 11:
        for j in range(1, 11:
            print(f'{i} x {j} = {i*j}'

# Call the Function
displayTable(",Syntax Error,OOP
Write an algorithm in Python to detect the monotonic increasing pattern in a given array.,"[2, 3, 4, 5, 6, 7, 8, 1]","def increasingPattern(arr):
	status = False
	check = arr[0]
	for i in range(1,len(arr)): 
		if check < arr[i]:
			check = arr[i]
			status = True
		else:
			status = False
			break
	return status


# Test case
arr = [2, 3, 4, 5, 6, 7, 8, 1]
print(increasingPattern(arr))  # Output: False","def increasingPattern(arr):
	status = False
	check = arr[0]
	for i in range(1,len(arr)): 
		if check < arr[i]:
			check = arr[i]
			status = True
		else:
			status = False
			break
	return status


# Test case
arr = [2, 3, 4, 5, 6, 7, 8, 1]
pritn(increasingPattern(arr))  # Output: False",Syntax Error,Recursion
Write a function to shortlist words that are longer than n from a given list of words.,,"def long_words(n, str):
    word_len = []
    txt = str.split("" "")
    for x in txt:
        if len(x) > n:
            word_len.append(x)
    return word_len	","def long_words(n, str):
    word_len = []
    txt = str.split("" "")
    for x in txt:
        if len(x) > n:
            word_len.append(x)
    return word_len	",correct,OOP
Generate a Python program that automatically generates bar charts for given data,"[1, 2, 3, 6, 5, 4, 7]","import matplotlib.pyplot as plt 
 
# Data to plot
data = [1, 2, 3, 6, 5, 4, 7]
 
# Create the graph object
plt.bar(range(len(data)), data, align='center')
 
# Label the graph
plt.xticks(range(len(data)), range(1, len(data)+1))
plt.xlabel('x')
plt.ylabel('y')
plt.title('Bar Graph')
 
# Display the graph
plt.show()","import matplotlib.pyplot as plt 
 
# Data to plot
data = [1, 2, 3, 6, 5, 4, 7]
 
# Create the graph object
plt.bar(range(len(data)), data, align='center')
 
# Label the graph
plt.xticks(range(len(data)), range(1, len(data)+1))
plt.xlabel('x')
plt.ylabel('y')
plt.title('Bar Graph')
 
# Display the graph
plt.show()",Syntax Error,String Manipulation
Write a Python function to sort a dictionary of string keys by their length.,"d = {""three"": 3, ""four"": 4, ""five"": 5, ""one"": 1, ""two"": 2}","def sort_by_length(d):
    sorted_d = {}
    keys_list = list(d.keys())
    keys_list.sort(key=len)
 
    for key in keys_list:
        sorted_d[key] = d[key]
 
    return sorted_d","def sort_by_length(d):
    sorted_d = {}
    keys_list = list(d.keys())
    keys_list.sort(key=len)
 
    for key in keys_list:
        sorted_d[key] = d[key]
 
    return sorted_d",correct,Loops
"In Python, develop a function which reverses the order of elements in the given list.",,"def reverse_list(l): 
return list(reversed(l))","def reverse_list(l): 
r",Incomplete Answer,Loops
Write a Python program to find the sum of all odd numbers up to a given number.,,"def find_sum(n):
sum = 0

for i in range(1, n + 1):
    if i % 2 != 0:
        sum += i
return sum

n = 10
print(""Sum of odd numbers from 1 to"", n, ""is"", find_sum(n))","def find_sum(n):
sum = 0

for i in range(1, n + 1):
    if i % 2 != 0:
        sum ",Incomplete Answer,OOP
Generate a valid Python code for checking if a given string is a palindrome or not?,,"def is_palindrome(string):
  return string == string[::-1]","def is_palindrome(string):
  return string == string[::-1]",correct,String Manipulation
Create a script in Python to classify a given array of integers into even and odd numbers.,"[1, 2, 3, 4, 5]","def classify(arr):
    even = []
    odd = []
    for x in arr:
        if x % 2 == 0:
            even.append(x)
        else:
            odd.append(x)
    return even, odd

even, odd = classify([1, 2, 3, 4, 5])
print(""Even numbers: "", even)
print(""Odd numbers: "", odd)","def classify(arr):
    even = []
    odd = []
    for x in arr:
        if x % 2 == 0:
            even.append(x)
        else:
       ",Incomplete Answer,OOP
Optimize a given Python code snippet such that the running time is reduced.,"for x in range(1, 1000):
    for y in range(1, 1000):
        if x*y == 10:
            print(x,y)","for x in range(1, 11):
    y = 10//x
    if x*y == 10:
        print(x, y)","for x in range(1, 11):
    y = 10//x
    if x*y == 10:
        print(x, y)",correct,File I/O
Write a Python program to identify all sets of factors of a given number.,,"def get_factors(number):
    factors = []
    for i in range(1, number + 1):
        if number % i == 0:
            factors.append([i, int(number/i)])
    return factors

print(get_factors(45)) # Output: [[1, 45], [3, 15], [5, 9], [9, 5], [15, 3], [45, 1]]","def get_factors(number:
    factors = []
    for i in range(1, number + 1:
        if number % i == 0:
            factors.append([i, int(number/i]
    return factors

print(get_factors(45 # Output: [[1, 45], [3, 15], [5, 9], [9, 5], [15, 3], [45, 1]]",Syntax Error,OOP
Create an Elasticsearch algorithm to search for documents based on specific criteria.,Search for documents containing the term 'Python' in the body field.,"GET products/_search
{
 ""query"": {
  ""term"": {
   ""body"": ""Python""
  }
 }
}","GET products/_search
{
 ""query"": {
  ",Incomplete Answer,Loops
Create a Python program to generate a random IP address.,,"import random

def generateRandomIP():
    ip = ""."".join(str(random.randint(0,255)) for i in range(4))
    return ip

ip_address = generateRandomIP()
print(""Random IP address:"", ip_address)","import random

def generateRandomIP():
ip = ""."".join(str(random.randint(0,255)) for i in range(4))
return ip

ip_address = generateRandomIP()
print(""Random IP address:"", ip_address)",Syntax Error,String Manipulation
Write some Python code to detect bias in text using the Gender Bias Detection software?,The software requires a text string to query.,"from gender_bias_detection import detect_bias

text = ""The software requires a text string to query.""

bias_signal = detect_bias(text)

# Checking is the detected bias is positive
if bias_signal > 0:
  print(""The text contains gender bias."")
else:
  print(""The text does not contain gender bias."")","from gender_bias_detection import detect_bias

text = ""The software requires a text string to query.""

bias_signal = detect_bias(text)

# Checking is the detected bias is positive
if bias_signal > 0:
  print(""The text contains gender bias."")
else:
  print(""The text does not contain gender bias."")",correct,Loops
Create a class in Python with two attributes and one method,,"class MyClass:
  def __init__(self, attr1, attr2):
    self.attr1 = attr1
    self.attr2 = attr2

  def do_something(self):
    print(""Doing something!"")","class MyClass:
  def __init__(self, attr1, attr2):
    self.attr1 = attr1
    self.attr2 = attr2

  def do_something(self):
    print(""Doing something!"")",correct,String Manipulation
Write a python function to find the largest postive number from the given list.,,"def largest_pos(list1): 
    max = list1[0] 
    for x in list1: 
        if x > max : 
             max = x  
    return max","def largest_pos(list1): 
max = list1[0] 
for x in list1: 
    if x > max : 
         max = x  
return max",Syntax Error,Loops
Write a Python program to display the multiplication table of a given number.,,"def multiplication_table(n):
    print('Multiplication Table of ', n)
    for i in range(1, 11):
        product = i * n
        print('{0} x {1} = {2}'.format(i, n, product))","def multiplication_table(n):
    print(name, 'Multiplication Table of ', n)
    for i in range(1, 11):
        product = i * n
        print(name, '{0} x {1} = {2}'.format(i, n, product))",Syntax Error,OOP
Create a function in Python to compute the average of two numbers.,"8, 10","def average(a, b): 
    return (a + b)/2 
  
a = 8
b = 10
print(""Average of"", a, ""and"", b, ""is"", average(a, b))","def average(a, b): 
    return (a + b)/2 
  
a = 8
b = ",Incomplete Answer,Loops
Write a python function to find the maximum length of sublist.,,"def Find_Max_Length(lst):  
    maxLength = max(len(x) for x in lst )
    return maxLength ","def Find_Max_Length(lst):  
    maxLength = max(len(x) for x in lst )
    return maxLength ",correct,File I/O
Create a Python script to calculate the median of an array of integers.,"[3, 1, 4, 5, 2]","def median(arr): 
 # Sort the array 
 arr.sort() 
 n = len(arr) 
  
 # If number of elements is odd, 
 # return the middle element 
 if n % 2 != 0: 
  return arr[n//2] 
  
 # If number of elements is even, 
 # return the average of the middle 
 # two elements 
 else:
  return (arr[n//2] + arr[(n//2)-1]) / 2

# Driver code 
arr = [3, 1, 4, 5, 2] 
print(median(arr))","def median(arr): 
 # Sort the array 
 arr.sort() 
 n = len(arr) 
  
 # If number of elements is odd, 
 # return the middle element 
 if n % 2 != 0: 
  return arr[n//2] 
  
 # If numbe",Incomplete Answer,OOP
Write a Python program to classify a given list of numbers into three groups based on their range.,"[1, 2, 5, 9, 20]","def classify_list(list):
    result = {""low"": [], ""mid"": [], ""high"": []}
    for num in list:
        if num < 4:
            result[""low""].append(num)
        elif num < 10:
            result[""mid""].append(num)
        else:
            result[""high""].append(num)
    return result","def classify_list(list):
    result = {""low"": [], ""mid"": [], ""high"": []}
    for num in list:
        if num < 4:
            result[""low""].a",Incomplete Answer,OOP
Write a python script to detect duplicate words in a sentence.,"Sentence: ""She was driving, driving down the road.""","sentence = 'She was driving, driving down the road.'
list_words = sentence.split("" "")
duplicates = {i for i, x in enumerate(list_words) if list_words.count(x) > 1}
print(""Duplicate words in the sentence are: "", end="""")
for duplicate in duplicates:
    print(list_words[duplicate], end="" "")","sentence = 'She was driving, driving down the road.'
list_words = sentence.split("" "")
duplicates = {i for i, x in enumerate(list_words) if list_words.count(x) > 1}
pritn(""Duplicate words in the sentence are: "", end="""")
for duplicate in duplicates:
    pritn(list_words[duplicate], end="" "")",Syntax Error,Loops
Utilize ajax to send a request to a given web page and write a Python script to parse the response.,"url = ""www.example.com""","import requests

url = ""www.example.com""

try:
    request = requests.get(url)  # Send ajax request
    response = request.json()  # Get response in JSON
    for data in response['data']:
        # Do something with data  # Parse JSON response
except Exception as e:
    print(e)","import requests

url = ""www.example.com""

try:
    request = requests.get(url)  # Send ajax request
    response = request.json()  # Get re",Incomplete Answer,String Manipulation
Write a Python program to print out current month name and the previous month name.,,"from datetime import datetime, timedelta 

def month_names():
  today = datetime.today()
  last_month = today - timedelta(weeks=4)

  current_month = today.strftime(""%B"")
  prev_month = last_month.strftime(""%B"")

  print(""Current month: "", current_month)
  print(""Previous month: "", prev_month)","from datetime import datetime, timedelta 

def month_names():
  today = datetime.today()
  last_month = today - timedelta(weeks=4)

  current_month = today.strftime(""%B"")
  prev_month = last_month.strftime(""%B"")

  print(name, ""Current month: "", current_month)
  print(name, ""Previous month: "", prev_month)",Syntax Error,OOP
Embed a mathematical expression in Python and print the expression.,x**3 + 2*x**2 + 3,"expression = 'x**3 + 2*x**2 + 3'

print(eval(expression))",expression = 'x**3 + 2*x**2 ,Incomplete Answer,Loops
Create an algorithm in Python to find the GCD of two numbers.,"Number 1: 28
Number 2: 56","# function to calculate GCD 
def gcd(x, y): 
  
    # This function implements the Euclidian 
    # algorithm to find GCD 
    while(y): 
        x, y = y, x % y 
  
    return x 

# Driver program to test above function 
n1 = 28
n2 = 56
print(""GCD of"", n1, ""and"", n2, ""is"", gcd(n1, n2))","# function to calculate GCD 
def gcd(x, y): 
  
    # This function implements the Euclidian 
    # algorithm to find GCD 
    while(y): 
     ",Incomplete Answer,String Manipulation
Write a Python program to find the first non-repeated character of a given string.,"string = ""teststring""","def first_non_repeated_char(string):
    for ch in string:
        if string.count(ch) == 1:
            return ch","def first_non_repeated_char(string):
    for ch in string:
        if string.count(ch) == 1:
            return ch",Syntax Error,Loops
Generate a list comprehension in Python that prints the cubes of the first 5 numbers.,,"[x**3 for x in range(1, 6)]",[x**3 for x i,Incomplete Answer,OOP
Write a Python program to print the largest number from a given list.,"my_list = [1, 5, 10, 20, 8]","my_list = [1, 5, 10, 20, 8]

largest = max(my_list)
print(""The largest number from the given list is: "" + str(largest))","my_list = [1, 5, 10, 20, 8]

largest = max(my_list)
print(""",Incomplete Answer,Loops
Generate a python program to compute the cartesian product of two lists.,"list1 = [1,2,3]
list2 = [4,5]","def cartesian_product(list1, list2):
    result_list = []
    for i in list1:
        for j in list2:
            result_list.append([i,j])
    return result_list

list1 = [1,2,3]
list2 = [4,5]

cartesian_product_list = cartesian_product(list1, list2)

print(cartesian_product_list)  # [[1,4],[1,5],[2,4],[2,5],[3,4],[3,5]]","def cartesian_product(list1, list2):
    result_list = []
    for i in list1:
        for j in list2:
            result_list.append([i,j])
    return result_lis",Incomplete Answer,String Manipulation
Write a Python code to implement a list containing at least three dictionaries.,,"list_of_dicts = [ 
    {
        ""name"": ""John"",
        ""age"": 32,
        ""country"": ""USA""
    },
    {
        ""name"": ""Peter"",
        ""age"": 28,
        ""country"": ""Australia""
    },
    {
        ""name"": ""David"",
        ""age"": 30,
        ""country"": ""Canada""
    }
]","list_of_dicts = [ 
    {
        ""name"": ""John"",
        ""age"": 32,
        ""country"": ""USA""
    },
    {
        ""name"": ""Peter"",
        ""age"": 28,
        ""country"": ""Australia""
    },
    {
        ""name"": ""David"",
        ""age"": 30,
        ""country"": ""Canada""
    }
]",Syntax Error,String Manipulation
Design a Python program to sort a list of dictionaries by a given field.,"[
	{
		""name"": ""A"",
		""age"": 25,
		""salary"": 100
	},
	{
		""name"": ""B"",
		""age"": 35,
		""salary"": 200
	},
	{
		""name"": ""C"",
		""age"": 15,
		""salary"": 50
	},
]","def sort_dicts_by_field(dict_list, field):
    sorted_list = sorted(dict_list, key=lambda k: k[field])
    return sorted_list","def sort_dicts_by_field(dict_list, field):
    sorted_list = sorted(dict_list, key=lambda k: k[field])
    return sorted_list",correct,String Manipulation
"Write a Python function that takes two lists as arguments, and calculates their dot product.","list1 = [1,2,3]
list2 = [4,5,6]","def dot_product(list1, list2):
  if len(list1) != len(list2):
    raise ValueError('List lengths must be the same.')
  dot_product = 0
  for i, val in enumerate(list1):
    dot_product += val * list2[i]
  return dot_product

list1 = [1,2,3]
list2 = [4,5,6]

dot_product_result = dot_product(list1, list2)
print(dot_product_result) # 32","def dot_product(list1, list2):
  if len(list1) != len(list2):
raise ValueError('List lengths must be the same.')
  dot_product = 0
  for i, val in enumerate(list1):
dot_product += val * list2[i]
  return dot_product

list1 = [1,2,3]
list2 = [4,5,6]

dot_product_result = dot_product(list1, list2)
print(dot_product_result) # 32",Syntax Error,OOP
"Write a function to add two integers. however, if the sum is between the given range it will return 20.",,"def sum_nums(x, y,m,n):
    sum_nums= x + y
    if sum_nums in range(m, n):
        return 20
    else:
        return sum_nums","def sum_nums(x, y,m,n)
    sum_nums= x + y
    if sum_nums in range(m, n)
        return 20
    else
        return sum_nums",Syntax Error,Recursion
Construct a python program that takes a positive integer as input and outputs its factorial,Input Number: 5,"def factorial(inp):
    if inp == 0:
        return 1
    else:
        return inp*factorial(inp-1)","def factorial(inp):
    if inp == 0:
        retu",Incomplete Answer,File I/O
Create a Python script to merge all the elements in a given list of lists.,"[[1, 2, 3], [4, 5], [6]]","def merge_lists(l):
    result = []
    for sublist in l:
        for item in sublist:
            result.append(item)
    return result

print(merge_lists([[1, 2, 3], [4, 5], [6]]))","def merge_lists(l):
    result = []
    for sublist in l:
        for item in sublist:
            result.append(item)
    return result

print(merge_lists([[1, 2, 3], [4, 5], [6]]))",correct,OOP
Generate a Python function that takes an integer array as input and returns the number of unique elements in the array.,"[1, 2, 3, 2, 1, 4, 7, 8, 9, 8]","def num_unique_elements(arr):
    unique_arr = set(arr)
    return len(unique_arr)

print(num_unique_elements([1, 2, 3, 2, 1, 4, 7, 8, 9, 8]))","def num_unique_elements(arr):
    unique_arr = set(arr)
    return len(",Incomplete Answer,OOP
Write a Python function to sum up elements in a given array.,"[1, 2, 3, 4, 5]","def sum_array(arr):
 result = 0
 for item in arr:
 result += item
 return result","def sum_array(arr):
 result = 0
 for item in arr:
 result += item
 return result",correct,OOP
Write a Python program to arrange two dictionaries in order of their keys.,"dct1 = {'a':1, 'b':2, 'c':3}
dct2 = {'e':4, 'd':5, 'f':6}","def sort_dicts_by_keys(dct1, dct2):
    result = {}
    keys = sorted(list(dct1.keys()) + list(dct2.keys()))
    for key in keys:
        if key in dct1:
            result[key] = dct1[key]
        else:
            result[key] = dct2[key]
        
    return result","def sort_dicts_by_keys(dct1, dct2)
    result = {}
    keys = sorted(list(dct1.keys()) + list(dct2.keys()))
    for key in keys
        if key in dct1
            result[key] = dct1[key]
        else
            result[key] = dct2[key]
        
    return result",Syntax Error,Loops
Make a class that processes payments using Python.,,"class PaymentProcessor:
    def __init__(self):
        self.transactions = []

    def process_payment(self, amount, account_no, currency):
        self.transactions.append({
            'amount': amount,
            'account_no': account_no,
            'currency': currency
        })
    
    def get_transaction_count(self):
        return len(self.transactions)","class PaymentProcessor:
    def __init__(self):
        self.transactions = []

    def process_payment(self, amount, account_no, currency):
        self.transactions.append({
            'amount': amount,
            'account_no': account_no,
            'currency': currency
        })
    
    def get_transaction_count(self):
        return len(self.transactions)",correct,Loops
Create a Python script that will generate a random four digit number,,"import random

number = random.randint(1000, 9999)
print(number) # e.g. 3874","import random

number = random.randint(1000, 9999)
print(number) # e.g. 3874",correct,OOP
Write a Python program to generate a series of random numbers ranging from 0 to 9.,,"import random

for i in range(10):
    print(random.randint(0, 9))","import random

for i in range(10)",Incomplete Answer,Recursion
Create a 3-layer artificial neural network using Python and print the outcome.,,"import numpy as np

# define the 3 layers #
input_layer = np.array([2, 3])
hidden_layer = np.array([[0.1, 0.4],
                         [0.8, 0.6],
                         [0.3, 0.9]])
output_layer = np.array([0.3, 0.7])

# compute the output of the 3-layer network #
hidden_layer_output = np.dot(input_layer, hidden_layer)
output = np.dot(hidden_layer_output, output_layer)

print(output)","import numpy as np

# define the 3 layers #
input_layer = np.array([2, 3])
hidden_layer = np.array([[0.1, 0.4],
                         [0.8, 0.6],
                         [0.3, 0.9]])
output_layer = np.array([0.3, 0.7])

# compute the output of the 3-layer network #
hidden_layer_output = np.dot(input_layer, hidden_layer)
output = np.dot(hidden_layer_output, output_layer)

print(output)",Syntax Error,Loops
Write a regex to identify all the words starting with 't' and ending with 'e' in a given string.,"str1=""this is a python program""","import re

def identify_words(str1):
    regex = ""\w*t\w*e\b""
    words = re.findall(regex, str1)
    return words

print(identify_words(""this is a python program""))","import re

def identify_words(str1):
    regex = ""\w*t\w*e\b""
    words = re.findall(regex, str1)
    return words

print(identify_words(""this is a python program""))",correct,File I/O
Develop an algorithm in Python to reverse the order of words in a sentence.,Sentence: I love programming,"def reverse(sentence):
 words = sentence.split(' ')
 words.reverse()
 
 return ' '.join(words)

print(reverse(""I love programming""))  // Output: ""programming love I""","def reverse(sentence):
 words = sentence.split(' ')
 words.reverse()
 
 return ' '",Incomplete Answer,OOP
Write a function to find the maximum total path sum in the given triangle.,,"def max_path_sum(tri, m, n): 
	for i in range(m-1, -1, -1): 
		for j in range(i+1): 
			if (tri[i+1][j] > tri[i+1][j+1]): 
				tri[i][j] += tri[i+1][j] 
			else: 
				tri[i][j] += tri[i+1][j+1] 
	return tri[0][0]","def max_path_sum(tri, m, n): 
	for i in range(m-1, -1, -1): 
		for j in range(i+1): 
			if (tri[i+1][j] > ",Incomplete Answer,String Manipulation
Create an HTML table with a two columns using Python.,,"from lxml import etree
 
# Create the root element
root = etree.Element('table')
 
# Create two columns
table_elem = etree.SubElement(root, 'column')
table_elem.set('name', 'FirstName')
table_elem = etree.SubElement(root, 'column')
table_elem.set('name', 'LastName')
 
# Print the whole XML
print(etree.tostring(root, pretty_print=True).decode())","from lxml import etree
 
# Create the root element
root = etree.Element('table')
 
# Create two columns
table_elem = etree.SubElement(root, 'column')
table_elem.set('name', 'FirstName')
table_elem = etree.SubElement(root, 'column')
table_elem.set('name', 'LastName')
 
# Print the whole XML
print(etree.tostring(root, pretty_print=True).decode())",Syntax Error,String Manipulation
Generate a Python program to search for a specific string in a list.,"lst = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]
str = ""test""","def search_string(lst, str):
    for item in lst:
        if item == str:
            return True
    return False

lst = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]
str = ""test""
print(search_string(lst, str))","def search_string(lst, str):
    for item in lst:
        if item == str:
            return True
    return False

lst = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]
str = ""test""
print(search_string(lst, str))",correct,Recursion
Create a python list comprehension to print the square of each odd number in a given list.,"[1, 2, 3, 4, 5, 6]","[x**2 for x in [1, 2, 3, 4, 5, 6] if x % 2 != 0]","[x**2 for x in [1, 2, 3,",Incomplete Answer,File I/O
Create a Neural Network class in Python that takes in two arguments (input size and number of outputs).,,"class NeuralNetwork:
    def __init__(self, input_size, num_outputs):
        self.input_size = input_size
        self.num_outputs = num_outputs

        self.weights = np.random.rand(input_size, num_outputs)

    def forward(self, x):
        z = np.dot(x, self.weights)
        return z","class NeuralNetwork:
def __init__(self, input_size, num_outputs):
    self.input_size = input_size
    self.num_outputs = num_outputs

    self.weights = np.random.rand(input_size, num_outputs)

def forward(self, x):
    z = np.dot(x, self.weights)
    return z",Syntax Error,String Manipulation
Create a Python script to automate the process of generating passwords.,,"import string
import random

def generate_password(num_chars):
    chars = string.ascii_uppercase + string.ascii_lowercase + string.digits
    return ''.join(random.choice(chars) for x in range(num_chars))","import string
import random

def generate_password(num_chars):
    chars = string.ascii_uppercase + st",Incomplete Answer,File I/O
Write a function to search some literals strings in a string by using regex.,,"import re
def check_literals(text, patterns):
  for pattern in patterns:
    if re.search(pattern,  text):
        return ('Matched!')
    else:
        return ('Not Matched!')","import re
def check_literals(text, patterns):
  for pattern in patterns:
    if re.search(pattern,  text):
        return ('Matched!')
    else:
        return ('Not Matched!')",Syntax Error,Loops
Create a class in Python that can be used to store data about a movie.,,"class Movie: 
 
    def __init__(self, title, year, rating): 
        self.title = title 
        self.year = year
        self.rating = rating 
  
    def print_data(self):
        print('The movie %s released in %d had a rating of %.1f.' 
        % (self.title, self.year, self.rating))","class Movie: 
 
    def __init__(self, title, year, rating): 
        self.title = title 
        self.year = year
        self.rating = rating ",Incomplete Answer,File I/O
Write a python function to check whether the two numbers differ at one bit position only or not.,,"def is_Power_Of_Two (x): 
    return x and (not(x & (x - 1))) 
def differ_At_One_Bit_Pos(a,b): 
    return is_Power_Of_Two(a ^ b)","def is_Power_Of_Two (x): 
    return x and (not(x & (x - 1))) 
def differ_At_One_Bit_Pos(a,b): 
    return is_Power_Of_Two(a ^ b)",correct,OOP
Create an algorithm for sorting a list of integers in descending order in Python.,"[6, 2, 12, 5]","def sortDescending(numbers):
    for i in range(len(numbers)): 
        for j in range(i):
            if numbers[j] < numbers[j+1]:
                temp = numbers[j] 
                numbers[j] = numbers[j+1] 
                numbers[j+1] = temp 
  
    return numbers

print(sortDescending([6,2,12,5]))","def sortDescending(numbers):
for i in range(len(numbers)): 
    for j in range(i):
        if numbers[j] < numbers[j+1]:
            temp = numbers[j] 
            numbers[j] = numbers[j+1] 
            numbers[j+1] = temp 
  
return numbers

print(sortDescending([6,2,12,5]))",Syntax Error,File I/O
Write a Python program to convert a given Roman number to its integer numerical equivalent.,,"def romanToInt(s):
    values = {
    'I': 1,
    'V': 5,
    'X': 10,
    'L': 50,
    'C': 100,
    'D': 500,
    'M': 1000
    }

    number = 0
    for i in range(len(s)):
        if i == 0 or values[s[i]] <= values[s[i-1]]:
            number += values[s[i]]
        else:
            number += values[s[i]] - 2*values[s[i-1]]

    return number","def romanToInt(s):
    values = {
    'I': 1,
    'V': 5,
    'X': 10,
    'L': 50,
    'C': 100,
    'D': 500,
    'M': 1000
    }

    number = 0
    for i in range(len(s)):
        if i == 0 or values[s[i]] <= values[s[i-1]]:
            number += values[s[i]]
        else:
            number += values[s[i]] - 2*values[s[i-1]]

    return number",correct,String Manipulation
Generate a Python function to generate prime numbers in a given range of numbers.,,"def generate_primes(start, end):
    # A list to store prime numbers
    primes = []
 
    # Iterate from start to end and
    # check if number is prime or not
    for num in range(start, end + 1):
        isPrime = True
        for i in range(2, num):
            if (num % i == 0):
                isPrime = False
        if isPrime:
            primes.append(num)
 
    return primes","def generate_primes(start, end):
    # A list to store prime numbers
    primes = []
 
    # Iterate from start to end and
    # check if number is prime or not
    for num in range(start, end ",Incomplete Answer,File I/O
Write a Python program to generate random numbers between 5 and 15 inclusively.,,"import random

for x in range(5):
 print(random.randint(5, 15))","import random

for x in range(5",Incomplete Answer,File I/O
Create a web scraper in Python to extract information from a website. The scraper should find all the links in the given webpage and store them in a list.,https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
response = requests.get(url)
html = response.content
soup = BeautifulSoup(html, 'html5lib')

links = []
for link in soup.find_all('a', href=True):
 links.append(link['href'])
 
print(links)","import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
response = requests.get(url)
html = response.content
soup = BeautifulSoup(html, 'html5lib')

links = []
for link in soup.find_all('a', href=True):
 links.append(link['href'])
 
print(links)",Syntax Error,File I/O
Write a function in Python to predict a label for a given input.,"[5, -2, 4]","def predict(x):
    if x[0] > 0:
        return 'positive'
    if x[1] < 0:
        return 'negative'
    if x[2] > 0:
        return 'positive'
    return 'neutral'","def predict(x):
    if x[0] > 0:
        return 'positive'
    if x[1] < 0:
        return 'negative'
    if x[2] > 0:
        return 'positive'
    return 'neutral'",correct,Loops
"Given a string, write a Python program to check if the characters in the string form a palindrome.","string = ""racecar""","def is_palindrome(string):
 return string == string[::-1]
 
result = is_palindrome(string)
print(result) # True","def is_palindrome(string):
 return string == string[::-",Incomplete Answer,Loops
Write a function to convert the given tuples into set.,,"def tuple_to_set(t):
  s = set(t)
  return (s) ","def tuple_to_set(t):
  s = set(t)
  return (s) ",correct,String Manipulation
Develop a Python code to print the pairs of the numbers in the given list which adds up to the given target number.,"[1, 5, 9, 4], 10","def pairs_adding_to_target(nums, target): 
 
	result = [] 
	for i in range(0, len(nums)): 
		for j in range(i+1, len(nums))	: 
			if nums[i] + nums[j] == target:	 
				result.append([nums[i], nums[j]]) 
	return result 

result = pairs_adding_to_target([1, 5, 9, 4], 10)
print(result)","def pairs_adding_to_target(nums, target): 
 
	result = [] 
	for i in range(0, len(nums)): 
		for j in range(i+1, len(nums))	: 
			if nums[i] + nums[j] == target:	 
				result.append([nums[i], nums[j]]) 
	return result 

result = pairs_adding_to_target([1, 5, 9, 4], 10)
print(result)",correct,Recursion
Generate a Python function to print the Fibonacci series up to a given number.,,"def print_fibonacci(num): 
    a = 0
    b = 1
    print(a, end =' ') 
    print(b, end =' ') 
    for i in range(2,num): 
        c = a + b 
        a = b 
        b = c 
        print(c, end =' ')","def print_fibonacci(num): 
    a = 0
    b = 1
    print(a, end =' ') 
    print(b, end =' ') 
    for i in range(2,num): 
        c = a + b 
        a = b 
        b = c 
        print(c, end =' ')",correct,Loops
Generate a python function to detect whether all elements in a given array are equal.,"arr = [1, 1, 1, 1]","def all_equal(arr):
    return len(set(arr)) == 1","def all_equal(arr):
    return len(set(arr)) == 1",Syntax Error,Loops
Write a python program to compute the GCD of two numbers.,,"def gcd(a,b): 
    if b == 0:
        return a 
    else: 
        return gcd(b, a % b) 

a = 10
b = 15

print(gcd(a, b))","def gcd(a,b): 
if b == 0:
    return a 
else: 
    return gcd(b, a % b) 

a = 10
b = 15

print(gcd(a, b))",Syntax Error,Recursion
Create an algorithm in Python that takes an integer as input and returns a boolean output of whether the number is prime or not.,17,"def is_prime(num):
    if num <= 1:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

print(is_prime(17))","def is_prime(num):
    if num <= 1:
        return False
    for i in range(2, num):
",Incomplete Answer,Recursion
Calculate the computational complexity of this Python code.,"def find_max(list):
    max_num = -1
    for item in list:
        if item > max_num:
            max_num = item
    return max_num","The computational complexity of this code is O(n) because the code iterates through each element in the list only once. Therefore, the complexity is directly proportional to the length of the list, n.",The computational complexity of this code is O(n) because the code iterates through each element in ,Incomplete Answer,File I/O
Create a function to sort a list of strings alphabetically in Python.,"[""zzz"",""ccc"",""aaa"",""rrr"",""bbb""]","def sort_strings(string_list): 
    return sorted(string_list)",def sort_strings(string_list): ,Incomplete Answer,Loops
Write a Python program to calculate the value of the expression 2x^2 + 5x + 3 for x = 3.,,"x = 3
result = 2*(x**2) + 5*x + 3

print(result)

# Outputs: 34","x = 3
result = 2*(x**2) + 5*x + 3

print(result)

# Outputs: 34",Syntax Error,Recursion
Write a line of code to print the first five elements in a given list in Python.,,print(list[:5]),print(l,Incomplete Answer,File I/O
Generate a graphical representation of a network using Python and matplotlib.,Number of nodes = 10,"import matplotlib.pyplot as plt

node_list = []
for i in range(10):
    node_list.append(i)

G = nx.Graph()
G.add_nodes_from(node_list)

nx.draw(G, with_labels=True)
plt.show()","import matplotlib.pyplot as plt

node_list = []
for i in range(10):
    node_list.append(i)

G = nx.Graph()
G.add_nodes_from(node_list)

nx.draw(G, with_labels=True)
plt.show()",correct,Loops
Generate a Python script to calculate the factorial of a number.,,"def factorial(n):
 if n == 0:
   return 1
 else:
   return n * factorial(n-1)

num = int(input(""Enter a number: ""))

factorial = factorial(num)

print(""The factorial of"",num,""is"",factorial)","def factorial(n):
 if n == 0:
   return 1
 else:
   return n * factorial(n-1)

num = int(input(""Enter a number: ""))

factorial = factorial(num)

print(""The factorial of"",num,""is"",factorial)",correct,File I/O
Construct a python program to find the maximum element in a list using divide and conquer approach.,,"def max_list_div_conq(lst): 
    if len(lst) == 1: 
        return lst[0] 
  
    mid = len(lst)//2
    left_max = max_list_div_conq(lst[:mid]) 
    right_max = max_list_div_conq(lst[mid:]) 
    return max(left_max, right_max)","def max_list_div_conq(lst): 
    if len(lst) == 1: 
        return lst[0] 
  
    mid = len(lst)//2
    left_max ",Incomplete Answer,File I/O
Create a function that takes a key and value as 1 pair to add to a Python dictionary.,"key: age, value: 23","def add_key_value_pair(dict, key, value): 
    dict[key] = value
    return dict

my_dict = {}
my_dict = add_key_value_pair(my_dict, 'age', 23)
print(my_dict)","def add_key_value_pair(dict, key, value): 
    dict[key] = value
    return dic",Incomplete Answer,Loops
Design a program in Python that accepts a string as input and checks whether or not it is palindrome.,madam,"def isPalindrome(str): 
    for i in range(0, int(len(str)/2)):  
        if str[i] != str[len(str)-i-1]: 
            return False
    return True

inputStr = 'madam'

if (isPalindrome(inputStr)): 
    print(""Yes"")
else: 
    print(""No"")","def isPalindrome(str): 
    for i in range(0, int(len(str)/2)):  
        if str[i] != str[len(str)-i-1]: 
            ",Incomplete Answer,Loops
Construct a function in Python to remove all the vowels from a given sentence.,,"def remove_vowels(phrase): 
  vowels = ['a','e','i','o','u'] 
  return ''.join([c for c in phrase if c not in vowels])","def remove_vowels(phrase: 
  vowels = ['a','e','i','o','u'] 
  return ''.join([c for c in phrase if c not in vowels]",Syntax Error,OOP
Develop an algorithm in Python to identify prime numbers in a given range of numbers.,,"def prime_numbers(lower_limit, upper_limit): 
    prime_numbers = [] 
    while lower_limit <= upper_limit:
        if all(lower_limit % i != 0 for i in range(2, lower_limit)):
            prime_numbers.append(lower_limit)
        lower_limit += 1
    return prime_numbers

print(prime_numbers(2, 10))","def prime_numbers(lower_limit, upper_limit): 
    prime_numbers = [] 
    while lower_limit <= upper_limit:
        if all(lower_limit % i != 0 for i ",Incomplete Answer,Loops
Write a Python program to calculate the sum of the squares of all numbers from 0 to 10.,,"sum = 0
for i in range(11):
  sum += i**2
  
print(sum)","sum = 0
for i in range(11):
  sum += i**2
  
print(sum)",correct,Recursion
Write a command line program in Python that prints out the Fibonacci numbers up to n.,5,"# Program to print the Fibonacci numbers up to n

# Function to return the nth Fibonacci number
def fibonacci(n):
 # Base case
 if n == 0:
  return 0
 elif n == 1 or n == 2:
  return 1
 else:
  return fibonacci(n-1) + fibonacci(n-2)
 
# Main function
num = int(input(""Enter a number: ""))
for i in range(num + 1):
 print(fibonacci(i))","# Program to print the Fibonacci numbers up to n

# Function to return the nth Fibonacci number
def fibonacci(n):
 # Base case
 if n == 0:
  return 0
 elif n == 1 or n == 2:
  return 1
 else:
  return fibonacci(n-1) + fibonacci(n-2)
 
# Main function
num = int(input(""Enter a number: ""))
for i in range(num + 1):
 print(fibonacci(i))",correct,Recursion
Write an algorithm in Python to find the maximum and minimum of two given numbers.,"a = 10, b = 12","def max_and_min(a,b):
    """"""Function to find the maximum and minimum of two given numbers.""""""
    max = a if a > b else b
    min = a if a < b else b
    return max, min

#Example:
print(""Maximum is: "",max_and_min(a,b)[0])
print(""Minimum is: "",max_and_min(a,b)[1])","def max_and_min(a,b):
    """"""Function to find the maximum and minimum of two given numbers.""""""
    max = a if a > b else b
    min = a if a < b else b
    return max, min

#Example:
print(""Maximum is: "",max_and_min(a,b)[0])
print(""Minimum is: "",max_and_min(a,b)[1])",correct,Recursion
Create a method in Python which takes a string as input and outputs all distinct words in the string.,"String: ""Hello, there! How are you?""","def getDistinctWords(string):
    wordlist = string.split()
    lst = []
    for word in wordlist: 
        if word not in lst:
            lst.append(word)
    return lst

print(getDistinctWords(""Hello, there! How are you?""))
# Output: ['Hello,', 'there!', 'How', 'are', 'you?']","def getDistinctWords(string:
    wordlist = string.split(
    lst = []
    for word in wordlist: 
        if word not in lst:
            lst.append(word
    return lst

print(getDistinctWords(""Hello, there! How are you?""
# Output: ['Hello,', 'there!', 'How', 'are', 'you?']",Syntax Error,Recursion
Write Python code to remove all duplicates from a given list,"[1,2,3,4,4,4,5]","def remove_duplicates(input_list):
    output_list = []
    for i in input_list:
        if i not in output_list:
            output_list.append(i)
    return output_list

result = remove_duplicates([1, 2, 3, 4, 4, 4, 5])
print(result)","def remove_duplicates(input_list):
    output_list = []
    for i in input_list:
        if i not in output_list:
            output_list.append(i)
    return output_list

result = remove_duplicates([1, 2, 3, 4, 4, 4, 5])
print(result)",correct,Recursion
"Create a Python class named Student that stores the name, age, and grades of a student.",,"class Student:
    def __init__(self, name, age, grades):
        self.name = name 
        self.age = age
        self.grades = grades

    def get_grade_average(self):
        total = 0
        for grade in self.grades:
            total += grade
        return total/len(self.grades)","class Student:
    def __init__(self, name, age, grades):
        self.name = name 
        self.age = age
        self.grades = grades

    def get_grade_average(self):
        total = 0
        for grade in self.grades:
            total += grade
        return total/len(self.grades)",Syntax Error,Recursion
Write a Python program to create a stack using two queues.,,"class Stack:
 def __init__(self):
 self.queue1 = []
 self.queue2 = []
 
 def push(self, value):
 self.queue1.append(value)
 
 def pop(self):
 if self.queue1:
 while len(self.queue1) > 1:
 self.queue2.append(self.queue1.pop(0))

 return self.queue1.pop(0)
 
 else:
 while len(self.queue2) > 1:
 self.queue1.append(self.queue2.pop(0))

 return self.queue2.pop(0)","class Stack:
 def __init__(self):
 self.queue1 = []
 self.queue2 = []
 
 def push(self, value):
 self.queue1.append(value)
 
 def pop(self):
 if self.queue1:
 while len(self.queue1) > 1:
 self.queue2.append(self.queue1.pop(0))

 return self.queue1.pop(0)
 
 else:
 while len(self.queue2) > 1:
 self.queue1.append(self.queue2.pop(0))

 return self.queue2.pop(0)",Syntax Error,OOP
Create a Python function that takes a number as input and returns the Fibonacci number at the same position in the sequence.,3,"def fibonacciNum(n): 
  a = 0
  b = 1
  if n < 0: 
    print(""Incorrect input"") 
  elif n == 0: 
    return a 
  elif n == 1: 
    return b 
  else: 
    for i in range(2,n+1): 
        c = a + b 
        a = b 
        b = c 
    return b 

fibonacciNum(3)","def fibonacciNum(n): 
  a = 0
  b = 1
  if n < 0: 
    print(""Incorrect input"") 
  elif n == 0: 
    return a 
  elif n == 1: 
 ",Incomplete Answer,Loops
Write a python function to find the sum of the three lowest positive numbers from a given list of numbers.,,"def sum_three_smallest_nums(lst):
	return sum(sorted([x for x in lst if x > 0])[:3])","def sum_three_smallest_nums(lst):
	return sum(sorted([x for x in lst if x > 0])[:3])",correct,File I/O
"Write a function in Python that takes a set of numbers and prints the sum, mean and standard deviation of the numbers.","[1, 2, 3, 4, 5]","def print_stats(numbers):
    sum = 0
    for i in numbers:
        sum = sum + i
    mean = sum / len(numbers) 

    ssd = 0
    for i in numbers:
        ssd = ssd + (i-mean)**2
    ssd = ssd / len(numbers)
    standard_dev = sqrt(ssd)
    
    print(""Sum = "", sum)
    print(""Mean = "", mean)
    print(""Standard Deviation = "", standard_dev)","def print_stats(numbers):
    sum = 0
    for i in numbers:
        sum = sum + i
    mean = sum / len(numbers) 

    ssd = 0
    for i in numbers:
        ssd = ssd + (i-",Incomplete Answer,Recursion
Modify the following Python code to add a few lines of logic.,"def calculate_discount(price, discount):
    '''This function takes price and discount as input and returns the discounted price'''
    return price * (1 - discount)","def calculate_discount(price, discount):
    '''This function takes price and discount as input and returns the discounted price'''
    discount = min(max(0, discount), 1)
    return round(price * (1 - discount), 2)","def calculate_discount(price, discount):
    '''This function takes price and discount as input and returns the discounted price'''
    discount = min(max(0, discount), 1)
    return round(price * (1 - discount), 2)",correct,Loops
Write a Python script to iteratively apply a function to all the elements in a list.,"list = [1, 2, 3, 4]","""""""
Write a Python script to iteratively apply a function to all the elements in a list.
""""""

def applyFunc(list_data, func):
    result = []
    for item in list_data:
        result.append(func(item))
    return result

list_data = [1, 2, 3, 4]

def square(x):
    return x**2

squares = applyFunc(list_data, square)
print(squares)","""""""
Write a Python script to iteratively apply a function to all the elements in a list.
""""""

def applyFunc(list_data, func):
    result = []
    for item in list_dat",Incomplete Answer,Recursion
Create a function in Python to construct the following pattern,The maximum number of lines is 10,"def construct_pattern(n):
    for i in range(1,n+1):
        for j in range(i):
            print(""*"",end="""")
        print("""")
    for i in range(n-1,0,-1):
        for j in range(i):
            print(""*"",end="""")
        print("""")","def construct_pattern(n):
    for i in range(1,n+1):
        for j in range(i):
            print(""*"",end="""")
        print("""")
    for i in range(n-1,0,-1):
        for j in range(i):
            print(""*"",end="""")
        print("""")",correct,File I/O
Write a Python program to create a new string that is the reverse of the given one.,,"def reverse_string(string): 
    string = string[::-1] 
    return string 
  
# Driver code 
string = ""Python Programming""
print(reverse_string(string))","def reverse_string(string): 
    string = string[::-1] 
    return string 
  
# Driver code 
string = ""Python Programming""
print(reverse_string(string))",correct,String Manipulation
Generate a list of integers in Python with no duplicates.,,"def generate_unique_list(n): 
    res = [] 
  
    for i in range(n): 
        res.append(random.randint(1, n)) 
  
        # ensure no duplicates occur
        while len(res) != len(set(res)): 
            res.pop() 
            res.append(random.randint(1, n)) 
  
    return res","def generate_unique_list(n): 
    res = [] 
  
    for i in range(n): 
        res.append(random.randint(1, n)) 
  
        # ensure no duplicates occur
        while len(res) != len(set(res)): 
            res.pop() 
            res.append(random.randint(1, n)) 
  
    return res",correct,File I/O
Create an algorithm in Python to generate random numbers between 1 and 10 without repetition.,Number of random numbers needed is 5,"import random

def generate_random_numbers(n):
 result = random.sample(range(1, 11), n)
 return result

random_numbers = generate_random_numbers(5)
print(random_numbers) # Example output: [4, 9, 2, 6, 8]","import random

def generate_random_numbers(n):
 result = random.sample(range(1, 11), n)
 return result

random_numbers = generate_random_numbers(5)
print(name, random_numbers) # Example output: [4, 9, 2, 6, 8]",Syntax Error,Recursion
Write a function to convert polar coordinates to rectangular coordinates.,,"import cmath
def polar_rect(x,y):
 cn = complex(x,y)
 cn=cmath.polar(cn)
 cn1 = cmath.rect(2, cmath.pi)
 return (cn,cn1)","import cmath
def polar_rect(x,y:
 cn = complex(x,y
 cn=cmath.polar(cn
 cn1 = cmath.rect(2, cmath.pi
 return (cn,cn1",Syntax Error,File I/O
Generate a function in Python to create a list of the nth prime number.,n=3,"def get_nth_prime(n): 
    prime_nums = [2] 
    check_num = 3 
    while len(prime_nums) < n: 
        is_prime = True 
        for i in prime_nums: 
            if check_num % i == 0: 
                is_prime = False 
                break 
        if is_prime: 
            prime_nums.append(check_num) 
        check_num += 2 
    return prime_nums[-1]","def get_nth_prime(n): 
    prime_nums = [2] 
    check_num = 3 
    while len(prime_nums) < n: 
        is_prime = True 
        for i in prime_nums: 
            if check_num % i == 0: 
                is_prime = False 
                break 
        if is_prime: 
            prime_nums.append(check_num) 
        check_num += 2 
    return prime_nums[-1]",Syntax Error,Recursion
Construct a Python program to find a missing number in an array of n distinct numbers.,"[1, 3, 8, 5, 6]","def find_missing_num(arr):
    n = len(arr)+1
    sum_of_n = int(n*(n+1)/2)
    sum_of_arr = 0
    for i in arr:
        sum_of_arr += i
    return sum_of_n - sum_of_arr","def find_missing_num(arr):
    n = len(arr)+1
    sum_of_n = int(n*(n+1)/2)
    sum_",Incomplete Answer,File I/O
"Create a Python function to count the number of strings that contain the substring ""cat"".","[""cat keeper"", ""cat lover"", ""lizard wrangler"", ""cat wrangler""]","def count_substring_cat(string_list):
    count = 0
    for string in string_list:
        if ""cat"" in string:
            count += 1
    return count

string_list = [""cat keeper"", ""cat lover"", ""lizard wrangler"", ""cat wrangler""]
result = count_substring_cat(string_list)

print(result)","def count_substring_cat(string_list):
count = 0
for string in string_list:
    if ""cat"" in string:
        count += 1
return count

string_list = [""cat keeper"", ""cat lover"", ""lizard wrangler"", ""cat wrangler""]
result = count_substring_cat(string_list)

print(result)",Syntax Error,String Manipulation
Create a Python script to filter out elements in a list that are divisible by 3.,"[9, 8, 10, 27, 12, 15]","numbers = [9, 8, 10, 27, 12, 15]

def filter_div_by_3(numbers):
    return [num for num in numbers if num % 3 != 0]

filtered_numbers = filter_div_by_3(numbers)
print(filtered_numbers)","numbers = [9, 8, 10, 27, 12, 15]

def filter_div_by_3(numbers):
    return [num for num in n",Incomplete Answer,Recursion
Write a Python program to classify a given data set using a trained model.,,"def classify_data(data, model):
    predictions = model.predict(data)
    return predictions","def classify_data(data, model)
    predictions = model.predict(data)
    return predictions",Syntax Error,OOP
Write a Python script that prints all the prime numbers between 0 and the given number.,10,"def prime_numbers(num):
    primes = []
    for n in range(2, num + 1):
        is_prime = True
        for i in range(2, n):
            if n % i == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(n)
    return primes

print(prime_numbers(10)) # Outputs: [2, 3, 5, 7]","def prime_numbers(num):
    primes = []
    for n in range(2, num + 1):
        is_prime = True
        for i in range(2, n):
            if n % i == 0:
         ",Incomplete Answer,String Manipulation
Create a Python program to search for a particular string in an array of strings and return the indices of the matches.,"[""hello"", ""world"", ""hello"", ""world""], ""world""","def find_string(arr, query):
 indices = []
 for i in range(len(arr)):
  if arr[i] == query:
    indices.append(i)
 return indices

print(find_string([""hello"", ""world"", ""hello"", ""world""], ""world""))","def find_string(arr, query):
 indices = []
 for i in range(len(arr)):
  if arr[i] == query:
    in",Incomplete Answer,String Manipulation
Create a Python web scraper that will fetch the news headlines from a given website.,,"import requests 
from bs4 import BeautifulSoup 
  
URL = ""http://example.com/""
r = requests.get(URL) 
  
soup = BeautifulSoup(r.content, 'html5lib') 
  
headlines = soup.find_all('h2') 
  
for headline in headlines: 
 print(headline.text)","import requests 
from bs4 import BeautifulSoup 
  
URL = ""http//example.com/""
r = requests.get(URL) 
  
soup = BeautifulSoup(r.content, 'html5lib') 
  
headlines = soup.find_all('h2') 
  
for headline in headlines 
 print(headline.text)",Syntax Error,Recursion
Write a Python program that creates a list with 10 random numbers between 1 and 10.,,"import random

def random_list():
    random_list = []
    for _ in range(10):
        num = random.randint(1, 10)
        random_list.append(num)
    return random_list

list = random_list()
print(list)","import random

def random_list():
    random_list = []
    for _ in range(10):
        num = random.randint(1, 10)
        random_list.append(num)
    return random_list

list = random_list()
pritn(list)",Syntax Error,OOP
Generate code to read data from an Excel spreadsheet.,,"Generate code to read data from an Excel spreadsheet using Python's xlrd library. The code should read in the spreadsheet, open the first sheet, and then iterate over each row, reading the data and storing it in a data structure, such as a list. The code should also handle any errors that may arise.","Generate code to read data from an Excel spreadsheet using Python's xlrd library. The code should read in the spreadsheet, open the first sheet, and t",Incomplete Answer,String Manipulation
Write a Python program which prints the index of the given value in a list.,"my_list = [2, 4, 6, 8]
value = 4","def find_index(my_list, value):
    for i in range(len(my_list)):
        if my_list[i] == value:
            return i","def find_index(my_list, value:
    for i in range(len(my_list:
        if my_list[i] == value:
            return i",Syntax Error,File I/O
"Define a class Person in Python that has properties gender, age and name.",,"class Person:
  def __init__(self, gender, age, name):
    self.gender = gender
    self.age = age
    self.name = name","class Person:
  def __init__(self, gender, age, name):
    ",Incomplete Answer,OOP
Implement a Python program to recursively reverse a string.,String: Python,"def reverse(string): 
	if len(string) == 0: 
		return string 
	else: 
		return reverse(string[1:]) + string[0] 

# Driver code 
string = ""Python""

print (reverse(string))","def reverse(string): 
	if len(string) == 0: 
		return string 
	else: 
		return revers",Incomplete Answer,File I/O
Optimize a Python code to search for an item in a list efficiently using binary search.,,"def binary_search(lst, target):
    left = 0
    right  = len(lst) - 1

    while left <= right:
        mid = (right + left) // 2
        if lst[mid] == target:
            return mid
        elif lst[mid] < target:
            left = mid + 1
        else:
            right = mid - 1
    return -1","def binary_search(lst, target):
    left = 0
    right  = len(lst) - 1

    while left <= right:
        mid = (right + left) // 2
        if lst[mid] == target:
            return mid
        elif lst[mid] < target:
            left = mid + 1
        else:
            right = mid - 1
    return -1",correct,OOP
Create a program in Python to generate a 12x12 multiplication table.,,"# Function to print multiplication table
def print_multiplication_table(n):
    # For loop to iterate multiplies from 1 to 12
    for i in range(1,13):
        print(f""{n} * {i} = {n*i}"")
 
# Iterate through the numbers from 1 to 12
for n in range(1,13):
    # print the multiplication tables for each of the numbers from 1 to 12
    print_multiplication_table(n)
    print()","# Function to print multiplication table
def print_multiplication_table(n):
    # For loop to iterate multiplies from 1 to 12
    for i in range(1,13):
        print(f""{n} * {i} = {n*i}"")",Incomplete Answer,String Manipulation
Merge two dictionaries into one using Python.,"dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}","def merge_dictionaries(dict1, dict2):
    res = {**dict1, **dict2} 
    return res

print(merge_dictionaries(dict1, dict2)) # Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4}","def merge_dictionaries(dict1, dict2):
    res = {**dict1, **dict2} 
    return res
",Incomplete Answer,File I/O
Write a function to find the equilibrium index of the given array.,,"def equilibrium_index(arr):
  total_sum = sum(arr)
  left_sum=0
  for i, num in enumerate(arr):
    total_sum -= num
    if left_sum == total_sum:
      return i
    left_sum += num
  return -1","def equilibrium_index(arr):
  total_sum = sum(arr)
  left_sum=0
  for i, num in enumerate(arr):
    total_sum -= num
    if left_sum == total_sum:
      return i
    left_sum += num
  return -1",correct,File I/O
Generate a Python program to compare two given strings to check if they are identical or not.,,"def is_identical(str1, str2): 
    if str1 == str2: 
        return True
    else: 
        return False","def is_identical(str1, str2: 
    if str1 == str2: 
        return True
    else: 
        return False",Syntax Error,String Manipulation
"Generate a data structure in Python that stores a list of flagged emails, and that provides a method to unflag them all.",,"class FlaggedEmails:
    def __init__(self):
        self.flagged_emails = []
  
    def add_email(self, email):
        self.flagged_emails.append(email)
  
    def unflag_all(self):
        while self.flagged_emails:
            self.flagged_emails.pop()","class FlaggedEmails:
    def __init__(self):
        self.flagged_emails = []
  
    def add_email(self, email):
        self.flagged_emails.append(email)
  
    def unflag_all(self):
        while self.flagged_emails:
            self.flagged_emails.pop()",correct,Recursion
Create a Python script to make a GET request to a given URL and extract all the hyperlinks from the page.,,"import requests
from bs4 import BeautifulSoup

# Make the request
r = requests.get('https://www.example.com/')

# Parse the response
soup = BeautifulSoup(r.text, 'html.parser')

# Get all hyperlinks from the page
links = []
for link in soup.findAll('a'):
 links.append(link.get('href'))

print(links)","import requests
from bs4 import BeautifulSoup

# Make the request
r = requests.get('https//www.example.com/')

# Parse the response
soup = BeautifulSoup(r.text, 'html.parser')

# Get all hyperlinks from the page
links = []
for link in soup.findAll('a')
 links.append(link.get('href'))

print(links)",Syntax Error,Recursion
Write a Python function to check if a given number is an Armstrong number or not. An Armstrong number is a number that is equal to the sum of its own digits each raised to the power of the number of digits.,,"def is_armstrong_number(num):
  n = len(str(num))
  sum = 0
  temp = num
  while temp > 0:
    digit = temp % 10
    sum += digit**n
    temp //= 10
  return sum == num","def is_armstrong_number(num):
  n = len(str(num))
  sum = 0
  temp = num
  while temp > 0:
digit = temp % 10
sum += digit**n
temp //= 10
  return sum == num",Syntax Error,Loops
Generate Python code to format a given string as a Float number with 2 decimal places.,,"def format_string(string): 
    return '{:.2f}'.format(float(string))

// Usage:
string = '3.14159'
formatted_string = format_string(string)
print(formatted_string) // prints 3.14","def format_string(string): 
    return '{:.2f}'.format(float(string))

// Usage:
string = '3.14159'
formatted_string = format_string(string)
pritn(formatted_string) // pritns 3.14",Syntax Error,String Manipulation
Write a function to find the perimeter of a pentagon.,,"import math
def perimeter_pentagon(a):
  perimeter=(5*a)
  return perimeter","import math
def perimeter_pentagon(a)
  perimeter=(5*a)
  return perimeter",Syntax Error,String Manipulation
"Write a function to find out, if the given number is abundant.",,"def is_abundant(n):
    fctrsum = sum([fctr for fctr in range(1, n) if n % fctr == 0])
    return fctrsum > n","def is_abundant(n):
    fctrsum = sum([fctr for fctr in range(1, n) if n % fctr == 0])
    return fctrsum > n",correct,OOP
Design and program a Python function to find the maximum number from an array of integers,"[10, 2, 4, 6, 8, 9]","def max_num(arr):
    max_num = arr[0]
    for i in arr:
        if i > max_num:
            max_num = i
    return max_num

if __name__ == '__main__':
    arr = [10, 2, 4, 6, 8, 9]
    print('The maximum number in array is', max_num(arr))","def max_num(arr):
    max_num = arr[0]
    for i in arr:
        if i > max_num:
            max_num = i
    return max",Incomplete Answer,String Manipulation
Write a Python program to print out the first n numbers of the Fibonacci sequence.,,"def fibonacci_sequence(n):
    if n == 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]
    else:
        fib_numbers = [0, 1]
        for i in range(2, n):
            fib_numbers.append(fib_numbers[i-2] + fib_numbers[i-1])
        return fib_numbers","def fibonacci_sequence(n):
    if n == 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]
    else:
        fib_numbers = [0, 1]
        for i in range(2, n):
            fib_numbers.append(fib_numbers[i-2] + fib_numbers[i-1])
        return fib_numbers",correct,OOP
Modify the Python program to calculate the sum of an array so that it finds the largest number in the array.,"array = [1, 2, 3, 4, 5]","def array_sum(arr):
 largest = 0
 for num in arr:
 largest = max(largest, num)
 return largest

print(array_sum([1, 2, 3, 4, 5]))","def array_sum(arr):
 largest = 0
 for num in arr:
 largest = max",Incomplete Answer,OOP
Edit the given Python code to sort a list of words by their length.,"lst = ['bar','bird','cat']","lst = sorted(lst, key=len)",lst = sorted(,Incomplete Answer,File I/O
Write a python function to find the largest triangle that can be inscribed in the semicircle.,,"def triangle_area(r) :  
    if r < 0 : 
        return -1
    return r * r ","def triangle_area(r) :  
if r < 0 : 
    return -1
return r * r ",Syntax Error,OOP
Create a python function that takes a string of characters as input and checks if it is a valid identifier.,"name = ""myVar""","import string

def isValidIdentifier(name):
    validChar = string.ascii_letters + ""_""
    if name[0] not in string.ascii_letters:
        return False
    for char in name[1:]:
        if char not in validChar:
            return False
            
    return True

validResult = isValidIdentifier(name)
print(validResult)","import string

def isValidIdentifier(name):
    validChar = string.ascii_letters + ""_""
    if name[0] not in string.ascii_letters:
        return False
    for char in name[1:]:
        if char not in validChar:
            return False
            
    return True

validResult = isValidIdentifier(name)
pritn(validResult)",Syntax Error,String Manipulation
Write a Python program to identify strings with all unique characters,,"def is_unique_string(s):
    d = {} 
    for i in s:
        if i in d:
            return False
        d[i] =1
    return True","def is_unique_string(s):
    d = {} 
    for i in s:
        if i in d:
            return False
        d[i] =1
    return True",Syntax Error,OOP
Identify the best algorithm to find the maximum sum of a subarray in a given array and write a Python code snippet accordingly.,"arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4]","def maxSubarraySum(arr): 
    max_so_far = 0
    max_ending_here = 0
  
    for i in range(0, len(arr)): 
        max_ending_here += arr[i] 
        if max_ending_here < 0: 
            max_ending_here = 0
        if (max_so_far < max_ending_here): 
            max_so_far = max_ending_here 
    return max_so_far","def maxSubarraySum(arr): 
    max_so_far = 0
    max_ending_here = 0
  
    for i in range(0, len(arr)): 
        max_ending_here += arr[i] 
        if max_ending_here < 0: 
            max_ending_here = 0
        if (max_so_far < max_ending_here): 
            max_so_far = max_ending_here 
    return max_so_far",correct,String Manipulation
Create a function in Python to check if a number is greater than a given threshold.,,"def is_greater(num, threshold):
    if num > threshold:
        return True
    else:
        return False","def is_greater(num, threshold):
    if num > threshol",Incomplete Answer,Loops
Develop a Python script that receives two lists and returns a new list that contains a unique combination of all elements in the two lists.,"list1 = [1, 2, 3], list2 = [2, 3, 4]","def combine_lists(list1, list2):
 result = list1 + list2
 return list(set(result))

list1 = [1, 2, 3]
list2 = [2, 3, 4]

print(combine_lists(list1, list2)) # [1, 2, 3, 4]","def combine_lists(list1, list2:
 result = list1 + list2
 return list(set(result

list1 = [1, 2, 3]
list2 = [2, 3, 4]

print(combine_lists(list1, list2 # [1, 2, 3, 4]",Syntax Error,Loops
Develop a function in Python to convert a given word into its Pig Latin form.,"""Hello""","def pig_latin(word):
    first_letter = word[0]

    # check if the word starts with a vowel 
    if first_letter in ""aeiou"":
        latin_word = word + ""ay""
    else:
        latin_word = word[1:] + first_letter + ""ay""

    return latin_word","def pig_latin(word):
    first_letter = word[0]

    # check if the word starts with a vowel 
    if first_letter in ""aeiou"":
        latin_word = word + ""ay""
    else:
        latin_word = word[1:] + first_letter + ""ay""

    return latin_word",correct,Recursion
Write a Python program to display the most commonly occurring item in a list.,"list_items = [1, 7, 3, 8, 2, 9, 3, 5, 5, 8, 7, 3]","from collections import Counter

list_items = [1, 7, 3, 8, 2, 9, 3, 5, 5, 8, 7, 3]

counter = Counter(list_items)
most_common_item = counter.most_common()[0][0]

print(f'The most commonly occuring item in the list is {most_common_item}.')","from collections import Counter

list_items = [1, 7, 3, 8, 2, 9, 3, 5, 5, 8, 7, 3]

counter = Counter(list_items
most_common_item = counter.most_common([0][0]

print(f'The most commonly occuring item in the list is {most_common_item}.'",Syntax Error,Recursion
Write a python function to check whether every odd index contains odd numbers of a given list.,,"def odd_position(nums):
	return all(nums[i]%2==i%2 for i in range(len(nums)))","def odd_position(nums):
	return all(nu",Incomplete Answer,Recursion
Build a web crawler in Python.,,"import requests
from bs4 import BeautifulSoup

def web_crawler(url):
    page=requests.get(url)
    soup=BeautifulSoup(page.content, 'html.parser')
    for link in soup.findAll('a'):
        print(link.get('href'))","import requests
from bs4 import BeautifulSoup

def web_crawler(url):
    page=requests.get(url)
    soup=BeautifulSoup(page.content, 'html.parser')
    for link in soup.findAll('a'):
        print(link.get('href'))",correct,Recursion
Develop a python function which replaces all whitespaces in a given string with a different character.,,"def replace_whitespaces(string, character):
    return string.replace("" "", character)","def replace_whitespaces(string, character)",Incomplete Answer,Loops
Write a regular expression in Python to match valid IP addresses.,,"import re

ip_regex = re.compile(r'^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$')","import re

ip_regex = re.compile(r'^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$')",Syntax Error,File I/O
Design a Python program for converting a given string of characters into its corresponding ASCII code.,"String: ""Hello""","def getAscii(string):
    result = []
    for char in string:
        result.append(ord(char))
    return result

print(getAscii('Hello'))
# Output: [72, 101, 108, 108, 111]","def getAscii(string):
    result = []
    for char in string:
        result.append(or",Incomplete Answer,Recursion
Implement a Python module that converts a given date to ISO format,25-Dec-24,"import datetime

def convertToISO(dateString):
 date = datetime.datetime.strptime(dateString, ""%d %B %Y"").isoformat()
 return date

# test
dateString = '25 December 2024'
print(convertToISO(dateString))

# Output: 2024-12-25T00:00:00","import datetime

def convertToISO(dateString):
 date = datetime.datetime.strptime(dateString, ""%d %B %Y"").isoformat()
 return date

# test
dateString = '25 December 2024'
pritn(convertToISO(dateString))

# Output: 2024-12-25T00:00:00",Syntax Error,OOP
"Design a Python class that can store employee records, including name, job title, and salary.",,"class Employee:
    def __init__(self, name, job_title, salary):
        self.name = name
        self.job_title = job_title
        self.salary = salary

    def get_name(self):
        return self.name

    def get_job_title(self):
        return self.job_title

    def get_salary(self):
        return self.salary","class Employee:
def __init__(self, name, job_title, salary):
    self.name = name
    self.job_title = job_title
    self.salary = salary

def get_name(self):
    return self.name

def get_job_title(self):
    return self.job_title

def get_salary(self):
    return self.salary",Syntax Error,Loops
Write a Python function to calculate the average of two given numbers.,,"def average(a, b):
    return (a+b)/2

print(average(4, 8))","def average(a, b):
    return (a+b)/2

print(average(4, 8))",correct,Recursion
Design a function in Python that takes in a string and returns a list of words from the string in reverse order.,The quick brown fox.,"def reverseString(userString):
 wordList = userString.split("" "")
 reversedStringList = list(reversed(wordList))

 return reversedStringList

print(reverseString(""The quick brown fox.""))","def reverseString(userString):
 wordList = userString.split("" "")
 reversedStringList = list(reversed(wordList))

 return reversedStringList

print(reverseString(""The quick brown fox.""))",correct,String Manipulation
Write a Python program to identify common characters between two given strings.,,"def common_characters(str1, str2):
    common_chars = set(str1).intersection(set(str2))
    return list(common_chars)","def common_characters(str1, str2):
    common_chars = set(str1).intersection(set(str2))
    return list(common_chars)",correct,File I/O
Write a function to convert radians to degrees.,,"import math
def degree_radian(radian):
 degree = radian*(180/math.pi)
 return degree","import math
def degree_radian(radian):
 d",Incomplete Answer,Loops
Design an algorithm in Python that reads an unordered array of integers and prints the integers in sorted order.,"[98, 45, 21, 99, 74, 44]","def sortArray(arr): 
    for i in range(len(arr)): 
        if (arr[i] > arr[i+1]):
            temp = arr[i] 
            arr[i] = arr[i+1] 
            arr[i+1] = temp 
    return arr

print(sortArray([98, 45, 21, 99, 74, 44])) # Output: [21, 44, 45, 74, 98, 99]","def sortArray(arr): 
    for i in range(len(arr)): 
        if (arr[i] > arr[i+1]):
            temp = arr[i] 
            arr[i] = arr[i+1] 
            arr[i+1] = temp 
    return arr

print(sortArray([98, 45, 21, 99, 74, 44])) # Output: [21, 44, 45, 74, 98, 99]",correct,String Manipulation
"Write a single line of python code that prints ""Hello, World!"".",,"print(""Hello, World!"")","print(""Hell",Incomplete Answer,File I/O
Write a python program that sums up all the values from a list of dictionaries,"data = [{'key1':1, 'key2':2}, {'key1':2, 'key2':5}]","def sum_dictionaries(data):
  total = 0
  for dic in data:
    total += sum(dic.values())
  return total","def sum_dictionaries(data):
  total = 0
  for dic in",Incomplete Answer,String Manipulation
How would you add a new element to the beginning of a linked list in Python?,,"class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None
 
    def push(self, new_data):
        new_node = Node(new_data)
        new_node.next = self.head
        self.head = new_node","class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        s",Incomplete Answer,String Manipulation
Modify a given Python function to accept additional arguments.,"def divide(a, b):
    return a / b","def divide(a, b, c=1, d=1):
    return (a / b) / (c / d)","def divide(a, b, c=1, d=1):
    return (a / b) / (c / d)",Syntax Error,Loops
Create an object-oriented Python program to calculate the area of a triangle given the lengths of its three sides.,,"class Triangle:
 def __init__(self, a, b, c):
 self.a = a
 self.b = b
 self.c = c

 def area(self):
 # Heron's Formula
 s = (self.a + self.b + self.c) / 2
 return (s*(s-self.a)*(s-self.b)*(s-self.c)) ** 0.5

triangle = Triangle(3, 4, 5)
print(triangle.area())
# Output: 6.0","class Triangle:
 def __init__(self, a, b, c):
 self.a = a
 self.b = b
 self.c = c

 def area(self):
 # Heron's Formula
 s = (self.a + self.b + self.c) / 2
 return (s*(s-self.a)*(s-self.b)*(s-self.c)) ** 0.5

triangle = Triangle(3, 4, 5)
print(triangle.area())
# Output: 6.0",correct,OOP
Create a function in Python that takes a list of numbers and returns the sum of all of the squared elements in the list.,"[1, 2, 3, 4]","def sum_squares(nums): 
  total = 0
  for num in nums:
    total += num**2
  return total

print(sum_squares([1, 2, 3, 4])) 
# Output: 30","def sum_squares(nums: 
  total = 0
  for num in nums:
    total += num**2
  return total

print(sum_squares([1, 2, 3, 4] 
# Output: 30",Syntax Error,String Manipulation
"Design a function in Python that takes a string, replaces all occurrences of the word ""dog"" with ""cat"" and returns the modified string.","""I love my dog""","def replace_word(string):
    modified_string = string.replace(""dog"", ""cat"")
    return modified_string

result = replace_word(""I love my dog"")
print(result)","def replace_word(string):
    modified_string = string.replace(""dog"", ""cat"")
    return modified_string

result = replace_word(""I love my dog"")
print(result)",correct,OOP
Create a program in Python that takes two integer values and finds the greatest common divisor (GCD).,Integer values: 18 and 54,"# function to find the GCD of two numbers using Euclidean algorithm
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)
 
# take input from the user
a = 18
b = 54

# find GCD
gcd = gcd(a,b) 

# display result
print(""The GCD of {} and {} is {}"".format(a, b, gcd))","# function to find the GCD of two numbers using Euclidean algorithm
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)
 ",Incomplete Answer,File I/O
Write a python function to find the first element occurring k times in a given array.,,"def first_Element(arr,n,k): 
    count_map = {}; 
    for i in range(0, n): 
        if(arr[i] in count_map.keys()): 
            count_map[arr[i]] += 1
        else: 
            count_map[arr[i]] = 1
        i += 1
    for i in range(0, n):  
        if (count_map[arr[i]] == k): 
            return arr[i] 
        i += 1 
    return -1","def first_Element(arr,n,k): 
    count_map = {}; 
    for i in range(0, n): 
        if(arr[i] in count_map.keys()): 
            count_map[arr[i]] += 1
        else: 
            count_map[arr[i]] = 1
        i += 1
    for i in range(0, n):  
        if (count_map[arr[i]] == k): 
            return arr[i] 
        i += 1 
    return -1",correct,String Manipulation
Generate a Python program to convert an array from the cartesian to the polar coordinate system.,"[1, 2]","def cartesian_to_polar(arr):
    x = arr[0]
    y = arr[1]
 
    radius = (x**2 + y**2)**0.5
    theta = math.atan2(y,x)
 
    return [radius, theta]
    
arr = [1, 2]
result = cartesian_to_polar(arr)
print(result)","def cartesian_to_polar(arr):
    x = arr[0]
    y = arr[1]
 
    radius = (x**2 + y**2)**0.5
    theta = math.atan2(y,x)
 
    return [radius, theta]
    
arr = [1, 2]
result = cartesian_to_polar(arr)
print(result)",correct,Loops
Generate a random number between 5 and 10 using Python.,,"import random
rand_num = random.randint(5,10)
print(rand_num)","import random
rand_num = rando",Incomplete Answer,OOP
Create a python function to generate 10 random numbers between 1 to 10.,,"import random

def generate_random_numbers():
    numbers = []
    for _ in range(10):
      numbers.append(random.randint(1,10)) 
    return numbers

random_numbers = generate_random_numbers()
print(random_numbers)","import random

def generate_random_numbers():
    numbers = []
    for _ in range(10):
      numbers.append",Incomplete Answer,Recursion
Create a python script to display a grid pattern.,,"def printgrid(rows, columns): 
    for i in range(1, rows+1): 
        for j in range(1, columns+1): 
            print(""*"", end="" "") 
        print(""\r"") 
  
printgrid(4, 4)","def printgrid(rows, columns): 
    for i in range(1, rows+1): 
        for j in range(1, columns+1): 
            print(""*"", end="" "") 
        print(""\r"") 
  
printgrid(4, 4)",correct,Recursion
Create a python function to normalize a given matrix.,"[[1, 2, 3],
[4, 5, 6],
[7, 8, 9]]","def norm(mat):
  result = [[0 for row in range(len(mat[0]))] for col in range(len(mat))] 
  for i in range(0, len(mat)):
    for j in range(0, len(mat[0])):
        result[i][j] = mat[i][j] / sum(mat[i])
  return result

print(norm([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))","def norm(mat):
  result = [[0 for row in range(len(mat[0]))] for col in range(len(mat))] 
  for i in range(0, len(mat)):
    for j in range(0, len(mat[0])):
        result[i][j] = mat[i][j] / sum(mat[i])
  return result

print(norm([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))",correct,Recursion
Generate a Python program to check if any element of a given list is palindrome or not.,"list1 = [12, 121, 3]","list1 = [12, 121, 3]

# Iterate through the list
for element in list1:
    # Convert the element to a string
    element = str(element)
    
    # Check if the element is a palindrome
    if element == element[::-1]:
        print(element + "" is a palindrome"")
    else:
        print(element + "" is not a palindrome"")","list1 = [12, 121, 3]

# Iterate through the list
for element in list1:
    # Convert the element to a string
    element = str(element)
    
    # Check if the element is a palindrome
    if element == element[::-1]:
        print(element + "" is a palindrome"")
    else:
        print(element + "" is not a palindrome"")",correct,OOP
"Suggest a Python code to print the following text in the output: ""This is a example sentence"".",,"print(""This is an example sentence"")","print(""This is an example sentence"")",Syntax Error,File I/O
Write a Python program to generate a list of prime numbers within a specified range.,,"def prime_range(lower, upper):
    prime_list = []
    for num in range(lower, upper +1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.append(num)

    return prime_list

lower = 1
upper = 20
print(prime_range(lower, upper))","def prime_range(lower, upper):
    prime_list = []
    for num in range(lower, upper +1):
        if num > 1:
            for i in range(2, num):
                if (num ",Incomplete Answer,Recursion
Design a program in python to generate a random string consisting of only lowercase a-z characters.,,"import random
import string

def generate_random_string():
    return ''.join(random.choices(string.ascii_lowercase, k=10))

print(generate_random_string())","import random
import string

def generate_random_string():
    return ''.join(random.choices(string.ascii_lowercase, k=10))

print(generate_random_string())",correct,Recursion
Can you write a Python code that can sort dictionaries based on the values,,"def sort_dict_by_values(dict):
  return sorted(dict.items(), key=lambda kv: kv[1])","def sort_dict_by_values(dict):
  return s",Incomplete Answer,OOP
Design a Python function that takes a string as a parameter and returns a string with extra spaces in between each character.,"my_string = ""Hello World""","def add_spaces(string):
 new_string = """"
 for char in string:
 new_string += char + "" ""
 return new_string

my_string = add_spaces(""Hello World"")
print(my_string)
# H e l l o   W o r l d","def add_spaces(string):
 new_string = """"
 for char in string:
 new_string += char + "" ""
 return new_string

my_string = add_spaces(""Hello World"")
print(my_string)
# H e l l o   W o r l d",correct,Recursion
Build a Python function to generate a random sample from standard normal distribution,,"import numpy as np

def get_normal_sample(size):
    """"""
    This function will generate a random sample from standard normal distribution 
    with length size
    """"""
    return np.random.normal(size=size)

if __name__ == '__main__':
    print(get_normal_sample(10))","import numpy as np

def get_normal_sample(size):
    """"""
    This function will generate a random sample from standard normal distribution 
    with length size
    """"""
    return np.random.normal(size=size)

if __name__ == '__main__':
    print(get_normal_sample(10))",correct,Recursion
Convert the following Python code from imperative to functional style.,"nums = [1, 2, 3]
sum = 0
for n in nums:
 sum += n","sum = reduce(lambda x, y: x + y, nums)","sum = reduce(lambda x, y: x + y, nums)",correct,Loops
Write Python code to create a new list from the given list based on a condition,"Given list : [1,2,3,4,5], condition: only include elements whose corresponding index is divisible by 2.","new_list = []
for i, v in enumerate(list):
    if (i+1) % 2 == 0: # +1 since your list is 0 indexed
        new_list.append(v)
print(new_list) # prints [2,4]","new_list = []
for i, v in enumerate(list):
    if (i+1) % 2 == 0: # +1 since y",Incomplete Answer,String Manipulation
Build a decision tree classifier in Python using the scikit-learn library.,,"from sklearn import tree
X = [[0, 0], [1, 1]]
y = [0, 1]
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)","from sklearn import tree
X = [[0, 0], [1, 1]]
y = [0, 1]
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)",correct,OOP
Can you provide a Python program to produce the following output?,,"def print_sequence():
    for i in range(1, 7):
        for j in range (1, i+1):
            print(j, end="""")
        print()

print_sequence()","def print_sequence():
for i in range(1, 7):
    for j in range (1, i+1):
        print(j, end="""")
    print()

print_sequence()",Syntax Error,File I/O
Write a Python program to print a frequency table for the given data.,"data = [2, 4, 7, 1, 6, 4, 7, 2, 6, 3]","from collections import Counter

data = [2, 4, 7, 1, 6, 4, 7, 2, 6, 3]

counts = Counter(data)

for item, count in counts.items():
    print(f'{item} : {count}')

# Output
# 2 : 2
# 4 : 2
# 7 : 2
# 1 : 1
# 6 : 2
# 3 : 1","from collections import Counter

data = [2, 4, 7, 1, 6, 4, 7, 2, 6, 3]

counts = Counter(data)

for item, cou",Incomplete Answer,String Manipulation
Write a python function to check whether the product of numbers is even or not.,,"def is_Product_Even(arr,n): 
    for i in range(0,n): 
        if ((arr[i] & 1) == 0): 
            return True
    return False","def is_Product_Even(arr,n): 
    for i in range(0,n): 
        i",Incomplete Answer,File I/O
Write a PYTHON program to find the profit or loss after selling a product.,"cost_price = 10
selling_price = 15","def find_profit(cost_price, selling_price):
    profit = selling_price - cost_price
    return profit","def find_profit(cost_price, selling_price):
    profit = selling_price - cost_price
    return profit",correct,Recursion
Create a while loop in Python to print the numbers from 1 to 10.,,"i = 1
while i <= 10:
  print(i)
  i += 1","i = 1
while i <= 10:
  print(name, i)
  i += 1",Syntax Error,File I/O
Generate a Python class that implements a queue data structure.,,"class Queue:
    def __init__(self):
        self.queue = []
    
    def enqueue(self, item):
        self.queue.append(item)
    
    def dequeue(self):
        if len(self.queue) > 0:
            return self.queue.pop(0)
        else:
            return None
    
    def peek(self):
        if len(self.queue) > 0:
            return self.queue[0]
        else:
            return None","class Queue:
    def __init__(self):
        self.queue = []
    
    def enqueue(self, item):
        self.queue.append(item)
    
    def dequeue(self):
        if len(self.queue) > 0:
            return self.queue.pop(0)
        else:
            return None
    
    def peek(self):
        if len(self.queue) > 0:
            return self.queue[0]
        else:
            return None",correct,File I/O
Optimise the Python program to reduce the time complexity for finding the maximum element in an array.,"[5, 10, 15, 20]","def findMax(arr):
    max = arr[0]
    curr_max = arr[0]
    for i in arr[1:]:
        curr_max = max = max if max > i else i 
    return curr_max

print(findMax([5, 10, 15, 20]))","def findMax(arr):
    max = arr[0]
    curr_max = arr[0]
    for i in arr[1:]:
        curr_max = max = max if max > i else i 
    return curr_max

print(findMax([5, 10, 15, 20]))",correct,String Manipulation
Write a Python function that takes a string and an integer as an argument and returns a string containing the string repeated the specified number of times.,"""Hello!"", 3","def repeat_string(string, num_times):
    return string*num_times

result = repeat_string(""Hello!"", 3)
print(result)","def repeat_string(string, num_times):
    return string*num_times

result = repeat_string(""Hello!"", 3)
print(result)",correct,String Manipulation
Develop an algorithm in Python to determine the greatest common divisor (GCD) of two numbers.,"8, 12","def gcd(a, b): 
    # base case 
    if (a == 0):  
        return b 
    if (b == 0):  
        return a 
  
    # a is greater 
    if (a > b): 
        return gcd(a%b, b) 
          
    return gcd(a, b%a) 

print(gcd(8, 12)) # 4","def gcd(a, b): 
    # base case 
    if (a == 0):  
        return b 
    if (b == 0):  
        return a 
  
    # a is greater 
    if (a > b): 
        return gcd(a%b, b) 
          
    return gcd(a, b%a) 

print(gcd(8, 12)) # 4",correct,Loops
Write a function to perfom the rear element extraction from list of tuples records.,,"def rear_extract(test_list):
  res = [lis[-1] for lis in test_list]
  return (res) ","def rear_extract(test_list):
  res = [lis[-1] for lis in test_list]
  return (res) ",correct,String Manipulation
"In Python, build a program that can remove all vowels from a given string.",,"def remove_vowels(string):
    vowels = ['a','e','i','o','u']
    new_string = ''
    for char in string:
        if char.lower() not in vowels:
            new_string += char
    return new_string","def remove_vowels(string):
    vowels = ['a','e','i','o','u']
    new_string = ''
    for char in string:
        if char.lower() not in vowels:
            new_string += char
    return new_string",correct,Loops
Construct a Python program to detect pattern,"Given an array of numbers, detect all the consecutive numbers in the array.","def detect_pattern(arr):
    consec_nums = []

    for i in range(1, len(arr)):
        if arr[i] == arr[i-1] + 1:
            # if consecutive numbers are detected 
            # add the number to the list
            consec_nums.append(arr[i - 1])
            consec_nums.append(arr[i])
    
    return consec_nums","def detect_pattern(arr):
    consec_nums = []

    for i in range(1, len(arr)):
        if arr[i] == arr[i-1] + 1:
            # if consecutive numbers are de",Incomplete Answer,Recursion
Write a python function to check for even parity of a given number.,,"def check_Even_Parity(x): 
    parity = 0
    while (x != 0): 
        x = x & (x - 1) 
        parity += 1
    if (parity % 2 == 0): 
        return True
    else: 
        return False","def check_Even_Parity(x): 
    parity = 0
    while (x != 0): 
        x = x & (x - 1) 
        parity += 1
    if (parity % 2 == 0): 
        return True
    else: 
        return False",correct,OOP
"Write a Python class that can be used to store information about a given patient, including their name and condition.",,"class Patient:
 def __init__(self, name, condition):
  self.name = name
  self.condition = condition
 
 def get_name(self):
  return self.name
 
 def get_condition(self):
  return self.condition","class Patient:
 def __init__(self, name, condition):
  self.name = name
  self.condition = condit",Incomplete Answer,Recursion
Write Python code to remove all the vowels from a given string.,string = 'Hello World!',"def remove_vowels(string):
    # Replace all the vowels with empty string
    without_vowels = string.replace('a', '').replace('e', '').replace('i', '').replace('o', '').replace('u', '') 
    return without_vowels

if __name__ == '__main__':
    print(remove_vowels('Hello World!'))","def remove_vowels(string):
    # Replace all the vowels with empty string
    without_vowels = string.replace('a', '').replace('e', '').replace('i', '').replace('o', '').replace('u', '') 
    return without_vowels

if __name__ == '__main__':
    print(name, remove_vowels('Hello World!'))",Syntax Error,String Manipulation
Generate a code in Python to measure the loading time of a website.,,"import time  
import urllib.request  
  
def loadUrl(url): 
    start = time.time() 
    response = urllib.request.urlopen(url) 
    end = time.time()
    total_time = end - start
    print(total_time)
  
url = input(""Enter website url: "")
loadUrl(url)","import time  
import urllib.request  
  
def loadUrl(url): 
    start = time.time() 
    response = urllib.request.urlopen(url) 
    end = time.time()
    total_time = end - start
    print(total_time)
  
url = input(""Enter website url: "")
loadUrl(url)",correct,String Manipulation
Find and fix a bug in this piece of Python code,"def sum_list(list_of_numbers):
    # calculates the sum of a list of numbers
    result = 0
    for number in list_of_numbers:
        result += number
    return result","def sum_list(list_of_numbers):
    # calculates the sum of a list of numbers
    result = 0
    for number in list_of_numbers:
        result += number
    return int(result) # convert to an integer before returning the result","def sum_list(list_of_numbers):
    # calculates the sum of a list of numbers
    result = 0
    for number in list_of_numbers:
        result += number
    return int(result) # convert to an integer before returning the result",correct,OOP
Create a Python script to sort the given integers in descending order.,"[3, 7, 2, 8, 10]","input_list = [3, 7, 2, 8, 10]
input_list.sort(reverse=True)
print(input_list)","input_list = [3, 7, 2, 8, 10]
input_list.sort(reverse=True)
print(input_list)",correct,File I/O
Write a Python program which converts feet to centimeters.,,"def convert_ft_to_cm(ft):
    return ft * 30.48","def convert_ft_to_cm(ft):
    return ft * 30.48",correct,Loops
Create a Python program to print the multiplication table from 1 to 10,,"def table(n): 
    for i in range(1, 11): # for 1 to 10
        print(n,'x',i,'=',n*i) 
  
# Driver Code 
n = 5
table(n)","def table(n): 
    for i in range(1, 11): # for 1 to 10
        print(n,'x',i,'=',n*i) 
  
# Driver Code 
n = 5
table(n)",correct,String Manipulation
Create a Python program to check if a given date is valid or not.,"The date to be checked is ""2019/02/29"".","from datetime import datetime
 
date_string = '2019/02/29'
try:
 date = datetime.strptime(date_string, '%Y/%m/%d')
 
 if date.year % 4 == 0 and date.month == 2 and date.day == 29:
 print('Valid Date')
 else:
 print('Invalid Date')
except ValueError:
 print('Invalid Date')","from datetime import datetime
 
date_string = '2019/02/29'
try:
 date = datetime.strptime(date_string, '%Y/%m/%d'
 
 if date.year % 4 == 0 and date.month == 2 and date.day == 29:
 print('Valid Date'
 else:
 print('Invalid Date'
except ValueError:
 print('Invalid Date'",Syntax Error,String Manipulation
Create a Python script that takes an input string and reverses its letters.,"""Hello Python!""","def reverse_string(string):
 result = []
 
 for i in string:
 result.insert(0,i)
 
 return ''.join(result)
 
if __name__ == ""__main__"":
string = ""Hello Python!""
print(reverse_string(string))  # Output: !nohtyP olleH","def reverse_string(string):
 result = []
 
 for i in string:
 result.insert(0,i)
 
 return ''.join(result)
 
if __name__ == ""__main__"":
string = ""Hello Python!""
print(reverse_string(string))  # Output: !nohtyP olleH",correct,Loops
Create an automated speech recognition algorithm on Python.,,"import speech_recognition as sr 

# create an instance of the speech recognition engine
r = sr.Recognizer()

# obtain an audio source
with sr.Microphone() as source:
    # capture input audio
    audio = r.listen(source)

# recognize the speech input
try:
    text = r.recognize_google(audio)
    print(text)
except Exception as e:
    print(e)","import speech_recognition as sr 

# create an instance of the speech recognition engine
r = sr.Recognizer()

# obtain an audio source
with sr.Microphone() as source:
    # capture input audio
    audio = r.listen(source)

# recognize the speech input
try:
    text = r.recognize_google(audio)
    print(text)
except Exception as e:
    print(e)",correct,Loops
Translate this code from Python to Java.,"# Python
def find_max(nums):
  max_num = nums[0]
  for num in nums:
    if num > max_num:
      max_num = num
  
  return max_num","// Java
public static int findMax(int[] nums) {
    int maxNum = nums[0];
    for (int num : nums) {
        if (num > maxNum) {
            maxNum = num;
        }
    }
    
    return maxNum;
}","// Java
public static int findMax(int[] nums) {
    int maxNum = nums[0];
    for (int num : nums) {
        if (num > maxNum) {
            maxNum = num;
        }
    }
    
    return maxNum;
}",correct,Loops
Consider the following statement and write a code for it in Python,A list of integers of length 5 is given. Calculate its sum and average.,"my_list = [1,2,3,4,5]
total_sum = 0

for x in my_list:
    total_sum = total_sum + x 
  
average = total_sum / len(my_list)

print(""Sum of all elements in given list: "" + str(total_sum))
print(""Average of all elements in given list: "" + str(average))","my_list = [1,2,3,4,5]
total_sum = 0

for x in my_list:
    total_sum = total_sum + x 
  
average = total_sum / len(my_list)

print(""Sum of all elements in given list: "" + str(total_sum))
print(""Average of all elements in given list: "" + str(average))",correct,Recursion
Write a Python program to sort a given list of dictionaries based on a given key.,"list = [{'name': 'Alice', 'age': 24}, {'name': 'Bob', 'age': 27}, {'name': 'David', 'age': 29}]","def sort_dictionaries(list, key):
 return sorted(list, key=lambda i: i[key])","def sort_dictionaries(list, key):
 return sorted(list, key=lambda i: i[key])",correct,OOP
Create a function to compute the maximum of two numbers in Python.,,"def maximum(x, y):
    if x > y:
        return x
    else:
        return y","def maximum(x, y):
    if x > y:
        return x
    else:
        return y",correct,Loops
Create a script in Python to determine whether a word is a palindrome or not.,,"def is_palindrome(word): 
    # get length of the word
    n = len(word) 

    # loop from left and right
    for i in range(n//2): 
        if word[i] != word[n - i - 1]:
            return False 
    return True","def is_palindrome(word): 
    # get length of the word
    n = len(word) 

    # loop from left and right
    for i in range(n//2): 
        if word[i] != word[n - i - 1]:
            return False 
    return True",correct,Recursion
Write a python function to find nth bell number.,,"def bell_Number(n): 
    bell = [[0 for i in range(n+1)] for j in range(n+1)] 
    bell[0][0] = 1
    for i in range(1, n+1):
        bell[i][0] = bell[i-1][i-1]
        for j in range(1, i+1): 
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1] 
    return bell[n][0] ","def bell_Number(n): 
    bell = [[0 for i in range(n+1)] for j in range(n+1)] 
    bell[0][0] = 1
    for i in range(1, n+1):
        bell[i][0] = bell[i-1][i-1]
        for j in range(1, i+1): 
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1] 
    return bell[n][0] ",correct,String Manipulation
Design a Python algorithm to identify all the prime numbers up to a given integer.,,"def identify_primes(num):
    '''This function will identify all the prime numbers up to a given integer.'''
    primes = []
    for x in range(2, num):
        if all(x%i!=0 for i in range(2, int(x**0.5)+1)):
            primes.append(x)
    return primes","def identify_primes(num):
    '''This function will identify all the prime numbers up to a given integer.'''
    primes = []
    for x in range(2, num):
        if all(x%i!=0 for i in range(2, int(x**0.5)+1)):
            primes.append(x)
    return primes",correct,Loops
Generate a single Python line to create a list that contains elements from another list.,"given_list = [1, 2, 3, 4, 5]",new_list = [element for element in given_list],new_list = [element for element in given_list],correct,File I/O
Develop a web service in Python that listens to HTTP requests.,,"import http.server
import socketserver

PORT = 8000

#Create an instance of the server
Handler = http.server.SimpleHTTPRequestHandler

#Enable the server to listen on port 8000
with socketserver.TCPServer(("""", PORT), Handler) as httpd:
    print(""serving at port"", PORT)
    httpd.serve_forever()","import http.server
import socketserver

PORT = 8000

#Create an instance of the server
Handler = http.server.SimpleHTTPRequestHandler

#Enable the server to listen on port 8000
with socketserver.TCPServer(("""", PORT), Handler) as httpd:
    print(""serving at port"", PORT)
    httpd.serve_forever()",correct,String Manipulation
"Using the input provided, write a Python script to store the words in a dictionary and get the count of each word.","words= [""Hello"", ""World"", ""Hello"" , ""again""]","word_count = {}

for word in words:
    if word not in word_count:
        word_count[word] = 1
    else:
        word_count[word] += 1

print(word_count) # output: {'Hello': 2, 'World': 1, 'again': 1}","word_count = {}

for word in words
    if word not in word_count
        word_count[word] = 1
    else
        word_count[word] += 1

print(word_count) # output {'Hello' 2, 'World' 1, 'again' 1}",Syntax Error,Recursion
Develop a python program to obtain the sum of items in an array,,"def sum_array(arr):
    sum = 0
    for elem in arr:
         sum += elem
    return sum","def sum_array(arr):
    sum = 0
    for elem in arr:
         sum += elem
    return sum",Syntax Error,Recursion
Design a python program to find the sample standard deviation of a given list of numbers.,,"def sample_standard_deviation(nums):
    n = len(nums)
    mean = sum(nums) / n
    squared_sum = 0
    for num in nums:
        squared_sum += (num - mean)**2
 
    return (squared_sum / (n - 1)) ** 0.5","def sample_standard_deviation(nums):
n = len(nums)
mean = sum(nums) / n
squared_sum = 0
for num in nums:
    squared_sum += (num - mean)**2
 
return (squared_sum / (n - 1)) ** 0.5",Syntax Error,Recursion
Create a function in Python that takes two strings as input and returns their concatenated string.,"""Hello"", ""World""","def concat_strings(str1, str2):
  return str1 + str2

result = concat_strings(""Hello"", ""World"")
print(result)","def concat_strings(str1, str2):
  return str1 + str2

result = concat_strings(""Hello"", ""World"")
print(result)",correct,File I/O
Write a Python program that takes in a list and outputs the sum of the elements in the list.,"[1, 2, 3, 4, 5]","sum = 0
for x in [1,2,3,4,5]:
 sum += x
print(sum)","sum = 0
for x in [1,2,3,4,5]
 sum += x
print(sum)",Syntax Error,Loops
Write a function to remove similar rows from the given tuple matrix.,,"def remove_similar_row(test_list):
  res = set(sorted([tuple(sorted(set(sub))) for sub in test_list]))
  return (res) ","def remove_similar_row(test_list:
  res = set(sorted([tuple(sorted(set(sub for sub in test_list]
  return (res ",Syntax Error,Loops
"Using Python, write a program to calculate the sum (full addition) of two decimal numbers.","3.4, 2.6","def addDecimals(a, b):
    return a + b

x = 3.4
y = 2.6
print (addDecimals(x, y)) # 6.0","def addDecimals(a, b:
    return a + b

x = 3.4
y = 2.6
print (addDecimals(x, y # 6.0",Syntax Error,File I/O
Create a program in Python that takes a string as an input and removes all the characters whose ASCII value is odd.,"str = ""Hello world!""","def remove_odd_ascii_chars(str):
    new_str = """"
    for ch in str:
        if ord(ch) % 2 == 0:
            new_str += ch
    return new_str

str = ""Hello world!""
new_str = remove_odd_ascii_chars(str)
print(new_str)","def remove_odd_ascii_chars(str):
    new_str = """"
    for ch in str:
        if ord(ch) % 2 == 0:
            new_str += ch
    return new_str

str = ""Hello world!""
new_str = remove_odd_ascii_chars(str)
print(new_str)",correct,OOP
Create a functional programming program to calculate the value of the Fibonacci number up to the n-th number in Python.,The number should be 9.,"def fibonacci(n):
 if n < 0:
 raise ValueError(""Negative number"")
 if n == 0 or n == 1:
 return n
 return fibonacci(n-1) + fibonacci(n-2)
 
# calculate 9th Fibonacci number
print(fibonacci(9))","def fibonacci(n):
 if n < 0:
 raise ValueError(""Negative number"")
 if n == 0 or n == 1:
 return ",Incomplete Answer,Recursion
Write a function to find the longest palindromic subsequence in the given string.,,"def lps(str): 
	n = len(str) 
	L = [[0 for x in range(n)] for x in range(n)] 
	for i in range(n): 
		L[i][i] = 1
	for cl in range(2, n+1): 
		for i in range(n-cl+1): 
			j = i+cl-1
			if str[i] == str[j] and cl == 2: 
				L[i][j] = 2
			elif str[i] == str[j]: 
				L[i][j] = L[i+1][j-1] + 2
			else: 
				L[i][j] = max(L[i][j-1], L[i+1][j]); 
	return L[0][n-1]","def lps(str): 
	n = len(str) 
	L = [[0 for x in range(n)] for x in range(n)] 
	for i in range(n): 
		L[i][i] = 1
	for cl in range(2, n+1): 
		for i in range(n-cl+1): 
			j = i+cl-1
			if str[i] == str[j] and cl == 2: 
				L[i][j] = 2
			elif str[i] == str[j]: 
				L[i][j] = L[i+1][j-1] + 2
			else: 
				L[i][j] = max(L[i][j-1], L[i+1][j]); 
	return L[0][n-1]",correct,String Manipulation
Create a Python program to calculate the customer's total purchase amount from a list of items and amounts.,"The list of items and amounts:

item1: 10
item2: 20
item3: 30","items = [
 {'name': 'item1', 'amount': 10},
 {'name': 'item2', 'amount': 20},
 {'name': 'item3', 'amount': 30},
]

total = 0

for item in items:
 total += item['amount']

print(f""Total: {total}"") # Output: Total: 60","items = [
 {'name': 'item1', 'amount': 10},
 {'name': 'item2', 'amount': 20},
 {'name': 'item3', 'amount': 30},
]

total = 0

for item in items:
 total += item['amount']

print(f""Total: {total}"") # Output: Total: 60",Syntax Error,Recursion
Write a Python program to find the first non-repeating character in a given list.,"lst = [1, 2, 3, 4, 4, 3, 2, 1]","def first_non_repeating_char(lst):
    dct = {}
    
    for l in lst:
        if l in dct:
            dct[l] += 1
        else:
            dct[l] = 1
            
    for l in lst:
        if dct[l] == 1:
            return l
            
    return None

lst = [1, 2, 3, 4, 4, 3, 2, 1]
print(first_non_repeating_char(lst))","def first_non_repeating_char(lst):
    dct = {}
    
    for l in lst:
        if l in dct:
            dct[l] += 1
        else:
            dct[l] = 1
            
    for l in lst:
        if dct[l] == 1:
            return l
            
    return None

lst = [1, 2, 3, 4, 4, 3, 2, 1]
print(first_non_repeating_char(lst))",correct,OOP
Create a python program to read an integer from the keyboard and print a message saying whether the number is even or odd?,,"def read_int_even_odd():
    number = int(input(""Enter an integer: ""))
    if number % 2 == 0:
        print(""The number is even"")
    else:
        print(""The number is odd"")
    
read_int_even_odd()","def read_int_even_odd():
    number = int(input(""Enter an integer: ""))
    if number % 2 == 0:
     ",Incomplete Answer,Loops
"Using the data provided, write a Python program to find and print the root of the quadratic equation ax2 + bx + c = 0","a = 1, b = 5, c = 6","import math

a = 1
b = 5
c = 6

# calculate the discriminant
d = (b**2) - (4*a*c)

# find the two solutions 
sol1 = (-b-math.sqrt(d))/(2*a)
sol2 = (-b+math.sqrt(d))/(2*a)

print('The solutions are {0} and {1}'.format(sol1, sol2))","import math

a = 1
b = 5
c = 6

# calculate the discriminant
d = (b**2 - (4*a*c

# find the two solutions 
sol1 = (-b-math.sqrt(d/(2*a
sol2 = (-b+math.sqrt(d/(2*a

print('The solutions are {0} and {1}'.format(sol1, sol2",Syntax Error,Loops
Write a function to get the n smallest items from a dataset.,,"import heapq
def small_nnum(list1,n):
  smallest=heapq.nsmallest(n,list1)
  return smallest","import heapq
def small_nnum(list1,n):
  smallest=heapq.nsmallest(n,list1)
  return smallest",Syntax Error,Recursion
Write a Python script to classify a sentence as positive or negative.,,"import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

def classify_sentiment(sentence):
    sid = SentimentIntensityAnalyzer()
    score = sid.polarity_scores(sentence)
    if score['compound'] >= 0.05:
        return 'positive'
    elif score['compound'] <= -0.05:
        return 'negative'
    else:
        return 'neutral'","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

def classify_sentiment(sentence):
    sid = SentimentIntensityAnalyzer()
    score = sid.polarity_s",Incomplete Answer,Recursion
Create a Python script to open a web browser and navigate to www.google.com.,,"import webbrowser

# open web browser and navigate to google
webbrowser.open(""https://www.google.com"")","import webbrowser

# open web browser and navigate to google
webbrowser.open(""https//www.google.com"")",Syntax Error,String Manipulation
Write a Python program to remove duplicate characters from an input string.,,"def remove_duplicates(input_string):
  characters = set()
  output_string = """"
  for character in input_string:
    if character not in characters:
      output_string += character
      characters.add(character)

  return output_string","def remove_duplicates(input_string):
  characters = set()
  output_string = """"
  for character in input_string:
    if character not in characters:
      output_string += character
      characters.add(character)

  return output_string",correct,Recursion
Design a function in Python that takes a list of numbers as a parameter and returns the largest number in the list.,,"def getLargestNum(nums):
    largestNum = nums[0]
    
    for num in nums[1:]:
        if num > largestNum:
            largestNum = num

    return largestNum","def getLargestNum(nums:
    largestNum = nums[0]
    
    for num in nums[1:]:
        if num > largestNum:
            largestNum = num

    return largestNum",Syntax Error,String Manipulation
Develop a Python script to rank an array of integers in ascending order.,,"def sort_array(array):
    for i in range(len(array)):
        min_val = min(array[i:])
        min_index = array.index(min_val)
        array[i], array[min_index] = array[min_index], array[i]
    return array

array = [3, 5, 1, 9, 6, 4]
res = sort_array(array)
print(res)","def sort_array(array)
    for i in range(len(array))
        min_val = min(array[i])
        min_index = array.index(min_val)
        array[i], array[min_index] = array[min_index], array[i]
    return array

array = [3, 5, 1, 9, 6, 4]
res = sort_array(array)
print(res)",Syntax Error,OOP
Create a Python program to generate a random subsample of a given list of items.,"List: [1,2,3,4,5,6,7,8,9]
Sample Size: 4","import random

def random_sample(items, sample_size):
    sample = random.sample(items, sample_size)
    return sample

result = random_sample([1,2,3,4,5,6,7,8,9], 4)
print(result)","import random

def random_sample(items, sample_size)
    sample = random.sample(items, sample_size)
    return sample

result = random_sample([1,2,3,4,5,6,7,8,9], 4)
print(result)",Syntax Error,Recursion
Write a python function to check whether the given two arrays are equal or not.,,"def are_Equal(arr1,arr2,n,m):
    if (n != m):
        return False
    arr1.sort()
    arr2.sort()
    for i in range(0,n - 1):
        if (arr1[i] != arr2[i]):
            return False
    return True","def are_Equal(arr1,arr2,n,m):
    if (n != m):
        return False
    arr1.sort()
    arr2.sort()
    for i in range(0,n - 1):
        if (arr1[i] != arr2[i]):
            return False
    return True",correct,String Manipulation
Sort a given list of strings into alphabetical order.,"my_list = [""Python"", ""JavaScript"", ""Java"", ""C++""]","def sort_alphabetically(my_list):
    return sorted(my_list)

print(sort_alphabetically(my_list)) # ['C++', 'Java', 'JavaScript', 'Python']","def sort_alphabetically(my_list):
    return sorted(my_list)

print(s",Incomplete Answer,Recursion
Develop a program in Python to check whether a string contains only digits.,"""0123""","def is_digit_only(string):
    for char in string:
        if not char.isdigit():
            return False
    return True

print(is_digit_only(""0123""))","def is_digit_only(string):
for char in string:
    if not char.isdigit():
        return False
return True

print(is_digit_only(""0123""))",Syntax Error,Loops
"Create a function in Python to classify a given data according to two classes, class 0 or class 1.",,"def classify_data(data):
    """"""Classify given data into either class 0 or class 1.""""""
    if condition # Replace the condition with specific criteria for classification
        return 0
    else:
        return 1","def classify_data(data):
    """"""Classify given data into either class 0 or class 1.""""""
    if condition # Replace the condition with specific criteria for classification
        return 0
    else:
        return 1",correct,Recursion
Write a Python program that would take a string and return the length of its longest word.,,"def longest_word_length(string):
    words = string.split(' ')
    max_length = 0
    for word in words:
        if len(word) > max_length:
            max_length = len(word)
    return max_length","def longest_word_length(string):
    words = string.split(' ')
    max_length = 0
    for word in ",Incomplete Answer,String Manipulation
"Given a Python dictionary, convert it into a list of tuples.","test_dict = {‘A’: 1, ‘B’: 2, ‘C’: 3}",list(test_dict.items()),list(test_d,Incomplete Answer,Recursion
Produce an algorithm in Python to determine the maximum difference between any two elements in an array.,"[2, 7, 9, 5, 1, 3, 5]","def max_diff(array):
    max_diff = -float('inf')
    for i in range(1, len(array)):
        for j in range(i):
            diff = array[i]-array[j]
            if diff > max_diff:
                max_diff = diff
    return max_diff","def max_diff(array:
    max_diff = -float('inf'
    for i in range(1, len(array:
        for j in range(i:
            diff = array[i]-array[j]
            if diff > max_diff:
                max_diff = diff
    return max_diff",Syntax Error,File I/O
Create a function in Python using Pandas to recode a column in the following dataframe.,"name,age,city
John,30,New York
Mary,25,London
Mike,38,Paris

Recode age such that every age greater than 30 is ""Above 30"" and every age below 30 is ""Below 30"".","import pandas as pd
 
def recode_age(data):
    data['age_recoded'] = data['age'].apply(
        lambda x: 'Above 30' if x > 30 else 'Below 30'
    )
 
df = pd.read_csv('data.csv')
recode_age(df)
print(df)","import pandas as pd
 
def recode_age(data):
    data['age_recoded'] = data['age'].apply(
        lambda x: 'Above 30' if x > 30 else 'Below 30'
    )
 
df = pd.read_csv('data.csv')
recode_age(df)
pritn(df)",Syntax Error,Recursion
Can you design a Python program that evaluates the following formula?,"""2*x + 4*y - z = 10""","def evaluate_formula(x, y, z):
 return 2*x + 4*y - z == 10","def evaluate_formula(x, y, z)",Incomplete Answer,Loops
Code an algorithm in Python for generating a random password.,,"import string
import random

def generate_password(length):
    chars = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(chars) for _ in range(length))
    return password","import string
import random

def generate_password(length):
    chars = string.ascii_letters + string.digits",Incomplete Answer,OOP
Write an algorithm to find the intersection of two sorted arrays in Python.,"a = [1, 5, 8, 9, 10], b = [2, 3, 5, 8, 9, 10]","def intersection(a, b): 
intersection_list = []
for item1 in a:
    if item1 in b:
        intersection_list.append(item1)
return intersection_list

a = [1, 5, 8, 9, 10], b = [2, 3, 5, 8, 9, 10]
print(intersection(a,b))
# Output: [5, 8, 9, 10]","def intersection(a, b): 
intersection_list = []
for item1 in a:
    if item1 in b:
        intersection_list.append(item1)
return intersection_list

a = [1, 5, 8, 9, 10], b = [2, 3, 5, 8, 9, 10]
print(intersection(a,b))
# Output: [5, 8, 9, 10]",correct,Recursion
Construct a loop in Python to identify the numbers divisible by 7 between 15 and 40.,,"for i in range(15, 41):
    if i % 7 == 0:
        print(i)","for i in range(15, 41):
    i",Incomplete Answer,Recursion
Create a function in Python to calculate the sum of squares of all numbers up to a given value n.,n = 10,"def sumOfSquares(n):
  sum = 0
  for i in range(n + 1):
    sum += (i ** 2)
  return sum

print(sumOfSquares(10))","def sumOfSquares(n):
  sum = 0
  for i in range(n + 1):
    sum += (i ** 2)
  return sum

print(sumOfSquares(10))",correct,Loops
create a Python program to create a chart of the average temperatures in Celsius for the current year.,,"import matplotlib.pyplot as plt
 
# Create lists of data to plot
# Current year's temperatures
temperatures = [10, 12, 14, 13, 14, 14, 15]
 
# Create a chart of average temperatures
plt.plot(temperatures)
 
# Label the chart
plt.title('Average Temperatures in Celcius')
plt.xlabel('Month')
plt.ylabel('Temperature (Celsius)')
 
# Show the chart
plt.show()","import matplotlib.pyplot as plt
 
# Create lists of data to plot
# Current year's temperatures
temperatures = [10, 12, 14, 13, 14, 14, 15]
 
# Create a chart of average temperatures
plt.plot(temperatures)
 
# Label the chart
plt.title('Average Temperatures in Celcius')
plt.xlabel('Month')
plt.ylabel('Temperature (Celsius)')
 
# Show the chart
plt.show()",correct,String Manipulation
Create a function to generate a unique 6 digit number.,,"# Python program to generate 
# a unique 6 digit number 
import random 
def generate_number(): 
      
    # Choose a random number 
    # between 10000 and 99999 
    random_number = random.randint(10000, 99999) 
  
    # Return the random number 
    return random_number 
  
# Driver Code 
if __name__ == ""__main__"": 
    print(generate_number())","# Python program to generate 
# a unique 6 digit number 
import random 
def generate_number(): 
      
    # Choose a random number 
    # between 10000 and 99999 
    random_number = random.randint(10000, 99999) 
  
    # Return the random number 
    return random_number 
  
# Driver Code 
if __name__ == ""__main__"": 
    print(generate_number())",correct,Loops
Implement the quick sort algorithm in Python.,,"def quick_sort(array):
    if len(array) == 0 or len(array) == 1:
        return array
    
    pivot = array[0]
    left = []
    right = []
    
    for i in range(1, len(array)):
        if array[i] <= pivot:
            left.append(array[i])
        else:
            right.append(array[i])
    
    left = quick_sort(left)
    right = quick_sort(right)
    
    return left + [pivot] + right","def quick_sort(array):
if len(array) == 0 or len(array) == 1:
    return array

pivot = array[0]
left = []
right = []

for i in range(1, len(array)):
    if array[i] <= pivot:
        left.append(array[i])
    else:
        right.append(array[i])

left = quick_sort(left)
right = quick_sort(right)

return left + [pivot] + right",Syntax Error,Loops
Generate a Python program to produce text output with given conditions.,"Condition 1: Print ""Hello World""
Condition 2: Print ""Goodbye World""","def print_conditions():
    print(""Hello World"")
    print(""Goodbye World"")

print_conditions()","def print_conditions():
    print(""Hello World"")
    print(""Goodbye World"")

print_conditions()",correct,String Manipulation
Write a function in Python to parse a JSON object.,"{""movie"": ""Star Wars"", ""genre"": ""Action""}","import json

def parse_json(json_string):
 obj = json.loads(json_string)
 return obj

parsed_json = parse_json('{""movie"": ""Star Wars"",""genre"": ""Action""}')
print(parsed_json)
# Outputs {'movie': 'Star Wars', 'genre': 'Action'}","import json

def parse_json(json_string):
 obj = json.loads(json_string)
 return obj

parsed_json = parse_json('{""movie"": ""Star Wars"",""genre"": ""Action""}')
pritn(parsed_json)
# Outputs {'movie': 'Star Wars', 'genre': 'Action'}",Syntax Error,OOP
Create a Python program to reverse a number without using any additional memory.,12345,"def reverseNumber(num):
    reverse = 0
    while num > 0:
        remainder = num % 10
        reverse = (reverse * 10) + remainder
        num = num // 10
    return reverse

print(reverseNumber(12345)) # 54321","def reverseNumber(num):
    reverse = 0
    while num > 0:
        remainder = num % 10
        reverse = (reverse * 10) + remainder
        num = num // 10
    return reverse

print(reverseNumber(12345)) # 54321",correct,File I/O
Design and implement a Bubble Sort algorithm for sorting an array of numbers in Python.,"[64, 34, 25, 12, 22, 11, 90]","def bubble_sort(l):
    for i in range(len(l)):
        for j in range(0, len(l)-i-1):
            if l[j] > l[j+1]:
                l[j], l[j+1] = l[j+1], l[j]

# Test code
l = [64, 34, 25, 12, 22, 11, 90]
bubble_sort(l)
print(l)","def bubble_sort(l:
    for i in range(len(l:
        for j in range(0, len(l-i-1:
            if l[j] > l[j+1]:
                l[j], l[j+1] = l[j+1], l[j]

# Test code
l = [64, 34, 25, 12, 22, 11, 90]
bubble_sort(l
print(l",Syntax Error,File I/O
"Create a program in Python that takes a list of strings as input, sorts the strings in alphabetical order, and prints out the list in reverse alphabetical order.","Sample List: [""cat"",""bird"",""dog"",""zebra"",""ant""]","# create a list
sample_list = [""cat"", ""bird"", ""dog"", ""zebra"", ""ant""]
 
# sort the list
sample_list.sort()
 
# reverse the list
sample_list.reverse()
 
# print the reversed list
print(sample_list)
# ['zebra', 'dog', 'cat', 'bird', 'ant']","# create a list
sample_list = [""cat"", ""bird"", ""dog"", ""zebra"", ""ant""]
 
# sort the list
sample_list.sort()
 
# reverse the list
sample_list.reverse()
 
# print the reversed list
print(name, sample_list)
# ['zebra', 'dog', 'cat', 'bird', 'ant']",Syntax Error,Recursion
Write a Python program to modify a given string by filling blank spaces with periods.,,"def fill_blanks(string): 
    return string.replace("" "", ""."") 
  
# Driver code 
string = ""Python Programming""
print(fill_blanks(string))","def fill_blanks(string): 
    return string.replace("" "", ""."") 
  
# Driver code 
string = ""Python Programming""
print(fill_blanks(string))",correct,Recursion
Can you build a program in Python to calculate the median of a given list of integers?,"[4, 9, 12, 8, 1]","def median(list): 
	list.sort() 
	length = len(list) 
	if length % 2 == 0: 
		return sum(list[int(length / 2) - 1:int(length / 2) + 1]) / 2
	else: 
		return list[int(length / 2)] 

median_of_list = median([4, 9, 12, 8, 1]) 
print(""Median of the list is: "" + str(median_of_list)) 
# Output: 8","def median(list): 
	list.sort() 
	length = len(list) 
	if length % 2 == 0: 
		return sum(list[int(length / 2) - 1:int(length / 2) + 1]) / 2
	else",Incomplete Answer,File I/O
Create a Python decorator that returns the decorated function with some additional information related to its runtime.,,"import time

def timed(func):
    def get_runtime(*args, **kwargs):
        start_time = time.time()
        result = func(*args, **kwargs)
        end_time = time.time()
        total_time = end_time - start_time
        return result, total_time
    return get_runtime","import time

def timed(func):
    def get_runtime(*args, **kwargs):
        start_time = time.time()
        result = func(*args, **kwa",Incomplete Answer,Recursion
Formulate a program in python that will print out the first ten values of p Fibonacci sequence.,,"a, b = 0, 1
for i in range(10):
    print(a)
    a, b = b, a + b","a, b = 0, 1
for i in range(10)
    print(a)
    a, b = b, a + b",Syntax Error,Loops
Write a function to check a decimal with a precision of 2.,,"def is_decimal(num):
    import re
    dnumre = re.compile(r""""""^[0-9]+(\.[0-9]{1,2})?$"""""")
    result = dnumre.search(num)
    return bool(result)","def is_decimal(num)
    import re
    dnumre = re.compile(r""""""^[0-9]+(\.[0-9]{1,2})?$"""""")
    result = dnumre.search(num)
    return bool(result)",Syntax Error,OOP
"Create a dictionary in Python storing customer information which contains the name, address, and email.",,"customer = {
 'name': '',
 'address': '',
 'email': ''
}","customer = {
 'name' '',
 'address' '',
 'email' ''
}",Syntax Error,OOP
Design a Python function to automatically generate the next BST level based on the given level.,"Given level = [1,2,3]","def generateNextLevel(level):
  next_level = []
  for node in level:
    if node.left != None:
      next_level.append(node.left)
    if node.right != None:
      next_level.append(node.right)
  
  return next_level","def generateNextLevel(level):
  next_level = []
  for node in level:
    if node.left != None:
      next_l",Incomplete Answer,String Manipulation
Write a Python script to perform linear regression on a given dataset.,"[[5, 6], [3, 4], [7, 9], [4, 5]]","import numpy as np
from sklearn.linear_model import LinearRegression

x = np.array([[5, 6], [3, 4], [7, 9], [4, 5]])
y = np.array([7, 5, 11, 7])

model = LinearRegression().fit(x, y)

print(model.coef_)
print(model.intercept_)","import numpy as np
from sklearn.linear_model import LinearRegression

x = np.array([[5, 6], [3, 4], [7, 9], [4, 5]])
y = np.array([7, 5, 11, 7])

model = LinearRegression().fit(x, y)

print(model.coef_)
print(model.intercept_)",Syntax Error,File I/O
"Create a function that takes a Python list of numbers as input, and returns the list sorted by the sum of its digits.","[ 135, 590, 69, 127 ]","def sortBySumOfDigits(lst):
    return sorted(lst, key=lambda x: sum(map(int, str(x))))

lst = [ 135, 590, 69, 127]
sorted_list = sortBySumOfDigits(lst)
print(sorted_list)","def sortBySumOfDigits(lst):
    return sorted(lst, key=lambda x: sum(map(int, str(x))))

lst = [ 135, 590, 69, 127]
sorted_list = sortBySumOfDigits(lst)
print(sorted_list)",correct,String Manipulation
Implement a priority queue in python with the given operations.,No Input,"class PriorityQueue:

    def __init__(self):
        self.queue = []
    
    def is_empty(self):
        return len(self.queue) == 0
    
    def insert(self, key):
        self.queue.append(key)
        self.queue.sort(reverse=True)
    
    def pop(self):
        if not self.is_empty():
            return self.queue.pop(0)
        return None","class PriorityQueue:

    def __init__(self):
        self.queue = []
    
    def is_empty(self):
        return len(self.queue) == 0
    
    def insert(self, key):
        self.queue.append(key)
        self.queue.sort(reverse=True)
    
    def pop(self):
        if not self.is_empty():
            return self.queue.pop(0)
        return None",correct,File I/O
Create a function in Python for computing the average of elements in a given list.,"[15, 16, 5, 20, 6, 8]","def calculate_average(nums):
    total = 0
    for i in range(len(nums)):
        total += nums[i]
    return total / len(nums)","def calculate_average(nums):
    total = 0
    for i in range(l",Incomplete Answer,Loops
Construct an algorithm in Python to find the longest substring in a string which does not have any repeating characters.,string = 'abcaac',"def findLongestSubstring(string):
 
 # Initialize the result
 max_length = 0
 
 # Initialize substrings
 curr = ''
 
 for char in string:
  if char not in curr:
   curr += char
   max_length = max(max_length, len(curr))
  else:
   curr = char
 
 return max_length

string = 'abcaac'
print(findLongestSubstring(string))","def findLongestSubstring(string):
 
 # Initialize the result
 max_length = 0
 
 # Initialize substrings
 curr = ''
 
 for char in string:
  if char not in curr:
   curr += char
   max_length = max(max_length, len(curr))
  else:
   curr = char
 
 return max_length

string = 'abcaac'
print(name, findLongestSubstring(string))",Syntax Error,File I/O
Generate a Python program to search for a given number in an array of integers and print out its index if it exsits.,"my_array = [2, 3, 5, 7, 11]
number = 3","def search_in_array(my_array, number):
  for i, val in enumerate(my_array):
    if val == number:
      return i
  return -1","def search_in_array(my_array, number):
  for i, val in enumerate(my_array):
if val == number:
  return i
  return -1",Syntax Error,String Manipulation
Generate a python program to print a Roman Numeral for any number between 1 and 5.,,"def print_roman_numeral(num):
    if num == 1:
        return ""I""
    elif num == 2:
        return ""II""
    elif num == 3:
        return ""III""
    elif num == 4:
        return ""IV""
    elif num == 5:
        return ""V""
    else:
        return ""invalid number""

number = int(input(""Enter a number between 1 and 5: ""))
print(print_roman_numeral(number))","def print_roman_numeral(num):
    if num == 1:
        return ""I""
    elif num == 2:
        return ""II""
    elif num == 3:
        return ""III""
    elif num == 4:
        retur",Incomplete Answer,OOP
Create a Python module to perform basic encryption of a given text.,,"def basic_encryption(s):
 encrypted = """"
 for c in s:
 encrypted += chr(ord(c) + 1)
 return encrypted","def basic_encryption(s):
 encrypted = """"
 for c in s:
 encrypted += chr(ord(c) + 1)
 return encrypted",correct,OOP
Create a program in Python to generate random passwords of 8 characters.,,"import random
import string
  
# Random password generator 
def randomString(stringLength=8):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(stringLength))
  
print (""Random Password is:"", randomString())","import random
import string
  
# Random password generator 
def randomString(stringLength=8):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(stringLength))
  
print (""Random Password is:"", randomString())",correct,String Manipulation
Develop a Python program to generate the first N Fibonacci numbers.,N = 10,"def fibonacci_numbers(n):
 result = []
 a, b = 0, 1
 while a < n:
 result.append(a)
 a, b = b, a+b
 return result

n = 10
fibonacci = fibonacci_numbers(n)

print(fibonacci)

# Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]","def fibonacci_numbers(n):
 result = []
 a, b = 0, 1
 while a < n:
 result.append(a)
 a, b = b, a+b
 return result

n = 10
fibonacci = fibonacci_numbers(n)

print(fibonacci)

# Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]",correct,OOP
Generate a Python algorithm that takes an unsorted array and returns a sorted one.,"[5, 8, 1, 4, 9]","def sort_array(arr):
    sorted_arr = sorted(arr) 
    # use the built-in sorted() method 
    return sorted_arr

result = sort_array([5, 8, 1, 4, 9])
print(result)","def sort_array(arr):
    sorted_arr = sorted(arr) 
    # use the built-in sorted()",Incomplete Answer,File I/O
"Given a list of numbers and a target number, write a Python program to find a pair of numbers from the given list that add up to the given target.","Input List: [1, 2, 3, 4, 4, 5, 6]
Target: 8","def find_pair(lst, target):
    for i in range(len(lst)):
        if (target - lst[i]) in lst[i+1:]:
            return [lst[i], target-lst[i]]

find_pair([1,2,3,4,4,5,6], 8)","def find_pair(lst, target:
    for i in range(len(lst:
        if (target - lst[i] in lst[i+1:]:
            return [lst[i], target-lst[i]]

find_pair([1,2,3,4,4,5,6], 8",Syntax Error,Loops
Suggest a completion for the following Python code so that it prints the characters in a string in reverse order.,"my_str = ""Hello World""

for i in","my_str = ""Hello World""

for i in range(len(my_str)-1, -1, -1):
    print(my_str[i], end="""")","my_str = ""Hello World""

for i in range(len(my_str-1, -1, -1:
    print(my_str[i], end=""""",Syntax Error,Loops
Create a Python program to sort a list of tuples based on the second element in each tuple.,"[(1, 2), (4, 1), (9, 10), (13, -3)]","def sort_tuples(a):
    return sorted(a, key = lambda x: x[1])

a = [(1, 2), (4, 1), (9, 10), (13, -3)]
print(sort_tuples(a))

# Output: [(13, -3), (4, 1), (1, 2), (9, 10)]","def sort_tuples(a):
    return sorted(a, key = lambda x: x[1])

a = [(1, 2), (4, 1), (",Incomplete Answer,Recursion
"Convert the following pseudocode to a program in Python:

If price > 50
  Print ""Expensive""
Else
  Print ""Cheap""",,"price = 45

if price > 50:
 print(""Expensive"")
else:
 print(""Cheap"")","price = 45

if price > 50:
 pritn(""Expensive"")
else:
 pritn(""Cheap"")",Syntax Error,Recursion
Write a piece of code in Python to reverse a given string.,abcdef,"string = 'abcdef'

print(string[::-1])","string = 'abcdef'

",Incomplete Answer,String Manipulation
Create a web service in Python that takes in a temperature value as input in Celsius and returns the equivalent value in Fahrenheit.,celsius = 21,"import flask

app = flask.Flask(__name__)

@app.route('/celsius-to-fahrenheit/<int:celsius>', methods=['GET'])
def celsius_to_fahrenheit(celsius):
 fahrenheit = celsius * 9/5 + 32
 return flask.jsonify({'celsius': celsius, 'fahrenheit': fahrenheit})
 
if __name__ == '__main__':
 app.run()","import flask

app = flask.Flask(__name__)

@app.route('/celsius-to-fahrenheit/<int:celsius>', methods=['GET'])
def celsius_to_fahrenheit(celsius):
 fahrenheit = celsius * 9/5 + 32
 return flask.jsonify({'celsius': celsius, 'fahrenheit': fahrenheit})
 
if __name__ == '__main__':
 app.run()",correct,String Manipulation
Write a Python program to replace all occurrences of a given string with an alternate string.,"""Hello World!"", ""World"", ""Python""","def replace_string(input_string, target_string, replacement_string):
    return input_string.replace(target_string, replacement_string)

print(replace_string(""Hello World!"", ""World"", ""Python""))","def replace_string(input_string, target_string, replacement_string):
    return input_string.replace(target_string, replacement_string)

pritn(replace_string(""Hello World!"", ""World"", ""Python""))",Syntax Error,OOP
Develop a Python program to check if a given string contains any special characters.,,"import re
def hasSpecialChar(str):
    return bool(re.search(r'[^A-Za-z0-9]', str))","import re
def hasSpecialChar(str):
    re",Incomplete Answer,String Manipulation
"Can you create a function in Python that takes two strings as input, and returns the number of common characters between them?","""computer"", ""science""","def countCommonChars(string1, string2):
    count = 0
    for i in string1: 
    	if i in string2: 
    		count += 1
    return count

input1 = ""computer""
input2 = ""science""
print(countCommonChars(input1, input2))","def countCommonChars(string1, string2:
    count = 0
    for i in string1: 
    	if i in string2: 
    		count += 1
    return count

input1 = ""computer""
input2 = ""science""
print(countCommonChars(input1, input2",Syntax Error,Recursion
Design a function in Python that takes a number as input and returns the factorial of the number.,,"def factorial(num):
	if num == 1 or num == 0:
		return 1
	else:
		return num * factorial(num-1)","def factorial(num):
	if num == 1 or num == 0:
		return 1
	else:
		return num * factorial(num-1)",Syntax Error,Recursion
Create a Python script to calculate the running sum of an array.,"[1, 2, 3, 4, 5]","# Create a function to compute running sum
def running_sum(lst):
    running_sum = 0
    running_lst = []
    for num in lst:
        running_sum += num
        running_lst.append(running_sum)
    return running_lst

# Test array
test = [1, 2, 3, 4, 5]

# Print the result
print(running_sum(test))","# Create a function to compute running sum
def running_sum(lst):
    running_sum = 0
    running_lst = []
    for num in lst:
        running_sum +=",Incomplete Answer,String Manipulation
Build a program to remove all duplicate words from a given list of strings,"[""Python"", ""Python"", ""programming"", ""language"", ""language""]","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    return new_list

print(remove_duplicates([""Python"", ""Python"", ""programming"", ""language"", ""language""]))","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    return new_list

print(remove_duplicates([""Python"", ""Python"", ""programming"", ""language"", ""language""]))",correct,OOP
Generate a Python dictionary from two given lists. The dictionary should contain a list of keys and the corresponding value for each key should be the element from the second list.,"keys = [""apple"", ""orange"", ""pear""] 
values = [1, 2, 3]","my_dictionary = dict(zip(keys, values))","my_dictionary = dict(zip(keys, values))",Syntax Error,Loops
Modify the following Python code to select and print out the negative elements from an array.,"[3,4,1,-6,9,10,-2,-8,-4]","my_list = [3,4,1,-6,9,10,-2,-8,-4]

def select_negative_elements(my_list):
    negative_elements = []

    for x in my_list:
        if x < 0:
            negative_elements.append(x)

    return negative_elements

print(select_negative_elements(my_list))","my_list = [3,4,1,-6,9,10,-2,-8,-4]

def select_negative_elements(my_list):
    negative_elements = []

    for x in my_list:
        if x < 0:
            negative_elements.append(x)

    return negative_elements

print(select_negative_elements(my_list))",correct,File I/O
Create a python script that will take in a JSON string as input and output a copied version of the same string,"{""name"": ""John Doe"", ""address"": ""123 Main Street""}","import json

jsonString = '{""name"": ""John Doe"", ""address"": ""123 Main Street""}'
jsonObject = json.loads(jsonString)
copiedString = json.dumps(jsonObject)

print(copiedString)","import json

jsonString = '{""name"": ""John Doe"", ""address"": ""123 Main Street""}'
jsonObject = json.loads(jsonString)
copiedString = json.dumps(jsonObject)

print(copiedString)",correct,Recursion
Write an enable or disable function in Python that toggles an LED depending on the input given.,,"def LED_toggle(state):
    if state == ""on"":
        GPIO.output(4,1)
    else:
        GPIO.output(4,0)","def LED_toggle(state):
    if state == ""on"":
        GPIO.output(4,1)
    else:
        GPIO.output(4,0)",correct,Recursion
Create a Python script to open a web page.,,"import webbrowser

url = ""www.example.com""

# open the web page in a new browser tab
webbrowser.open_new_tab(url)","import webbrowser

url = ""www.example.com""

# open the web page in a new browser tab
webbrowser.open_new_tab(url)",Syntax Error,Loops
"Convert the following JavaScript program into a Python program that does the same things:

let a = 5;
let b = 10;
let c = a + b;",,"a = 5
b = 10
c = a + b
print(c)","a = 5
b = 10
c = a + b
print(c)",Syntax Error,Loops
Write a script in Python to evaluate an expression with multiple operators.,"expression = ""2 + 3 - 5 * 4 + 7 / 6""","# Initialize the expression
expression = ""2 + 3 - 5 * 4 + 7 / 6""

# Evaluate the expression
result = eval(expression)

# Print the result
print(""Result of the expression:"", result)","# Initialize the expression
expression = ""2 + 3 - 5 * 4 + 7 / 6""

# Evaluate the expression
result = eval(expression)

# Print the result
print(""Result of the expression:"", result)",correct,Loops
Generate a heatmap using Python to visualize the correlation between two variables.,,"import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt

# data
data = {'var1': [1, 0, 1, 0, 2, 1],
        'var2': [0, 1, 0, 1, 0, 1]}
# dataframe
df = pd.DataFrame(data=data)

# Create the heatmap
sns.heatmap(df.corr(), annot=True, cmap='coolwarm', vmin=-1, vmax=1)

# Show the plot
plt.show()","import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt

# data
data = {'var1': [1, 0, 1, 0, 2, 1],
        'var2': [0, 1, 0, 1, 0, 1]}
# dataframe
df = pd.DataFrame(data=data)

# Create the heatmap
sns.heatmap(df.corr(), annot=True, cmap='coolwarm', vmin=-1, vmax=1)

# Show the plot
plt.show()",correct,File I/O
Can you write a Python program to list all the prime numbers between 1 to 50?,,"def prime_numbers(n):
 
    prime_numbers_list = []
    for num in range(2, n + 1):
        if all(num % i != 0 for i in range(2, num)):
            prime_numbers_list.append(num)
 
    return prime_numbers_list
 
print(prime_numbers(50))","def prime_numbers(n):
 
    prime_numbers_list = []
    for num in range(2, n + 1):
        if all(num % i != 0 for i in range(2, num)):
            prime_numbers_list.append(num)
 
    return prime_numbers_list
 
print(prime_numbers(50))",correct,OOP
Write a Python code that finds the sum of the two largest numbers in a given list.,"[1,2,3,4,5]","def find_largest_sum(list):
    largestNum = max(list)
    list.remove(largestNum)
    secondLargestNum = max(list)
    return largestNum+secondLargestNum

print(find_largest_sum([1,2,3,4,5])) # 9","def find_largest_sum(list):
    largestNum = max(list)
    list.remove(largestNum)
    secondLargestNum = max(list)
    return largestNum+secondLargestNum

pritn(find_largest_sum([1,2,3,4,5])) # 9",Syntax Error,OOP
Create a Python program to normalize an input string. The input string should be a paragraph of text and the output should be lowercase text with no punctuation.,Welcome to the GPT Normalization Task!,"import re

def normalize_text(text):
 text = text.lower()
 text = re.sub(r'\W+', ' ', text)
 return text

input_text= 'Welcome to the GPT Normalization Task!'
output_text = normalize_text(input_text)
print(output_text)

# Output: welcome to the gpt normalization task","import re

def normalize_text(text):
 text = text.lower()
 text = re.sub(r'\W+', ' ', text)
 return text

input_text= 'Welcome to the GPT Normalization Task!'
output_text = normalize_text(input_text)
print(output_text)

# Output: welcome to the gpt normalization task",Syntax Error,File I/O
Create a Python script for generating a random string of a desired length.,length of 10,"import random

def generate_random_string(length):
  chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$%&*'
  output_str = ''
  for _ in range(length):
    output_str += random.choice(chars)
  return output_str

result = generate_random_string(10)
print(result)","import random

def generate_random_string(length):
  chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$%&*'
  output_st",Incomplete Answer,OOP
Optimize the following code written in Python to remove any redundant or inefficient code.,"def factorial(n):
  if n == 0:
    return 1
  else:
    return n * factorial(n-1)","def factorial(n):
  if n == 0 or n == 1:
    return 1
  else:
    return n * factorial(n-1)","def factorial(n):
  if n == 0 or n == 1:
    ",Incomplete Answer,OOP
"Implement a basic linear search algorithm in Python that searches a list of numbers for a given target value and returns the index of the target value if it is present, otherwise it returns -1.","arr = [1, 3, 5, 6, 9, 17],
target = 6","def linear_search(arr, target):
 for i in range(len(arr)):
 if arr[i] == target:
 return i
 return -1

print(linear_search(arr, target)) # 3 (index of 6)","def linear_search(arr, target):
 for i in range(len(arr)):
 if arr[i] == tar",Incomplete Answer,Recursion
Write a function to find the smallest multiple of the first n numbers.,,"def smallest_multiple(n):
    if (n<=2):
      return n
    i = n * 2
    factors = [number  for number in range(n, 1, -1) if number * 2 > n]
    while True:
        for a in factors:
            if i % a != 0:
                i += n
                break
            if (a == factors[-1] and i % a == 0):
                return i","def smallest_multiple(n):
    if (n<=2):
      return n
    i = n * 2
    factors = [number  for number in range(n, 1, -1) if number * 2 > n]
    while True:
      ",Incomplete Answer,String Manipulation
Develop a Python program to check whether two given strings are anagrams of each other.,"s1 = ""listen"", s2 = ""silent""","def is_anagram(s1, s2):
    s1 = s1.lower().replace("" "", """")
    s2 = s2.lower().replace("" "", """")

    #check if both strings have exact letters
    if sorted(s1) == sorted(s2):
        print(""The strings are anagrams."")
    else:
        print(""The strings are not anagrams."")

# Driver program to check the above function
is_anagram(""listen"", ""silent"")","def is_anagram(s1, s2):
    s1 = s1.lower().replace("" "", """")
    s2 = s2.lower().replace("" "", """")

    #check if both strings have exact letters
    if sorted(s1) == sorted(s2):",Incomplete Answer,File I/O
Add code in python to the given argument to iterate over a list of numbers and print the even numbers.,"[1,2,3,4,5]","# Iterate over numbers
for num in [1,2,3,4,5]:
  # Check for even
  if(num % 2 == 0):
    # Print the even numbers
    print(num)","# Iterate over numbers
for num in [1,2,3,4,5]:
  # Check for even
  if(num % 2 == 0):
    # Print the even numbers
    print(num)",correct,Loops
Generate a Python script that checks a list for duplicate elements.,,"def contains_duplicates(lst):
    seen = set()
    for x in lst:
        if x in seen:
            return True
        seen.add(x)
    return False","def contains_duplicates(lst):
    seen = set()
    for x in lst:
        if x in seen:
            return True
        seen.add(x)
    return False",correct,Loops
Generate a valid Python code that will print the given message,Hello World!,"print(""Hello World!"")","print(""Hel",Incomplete Answer,File I/O
Can you generate Python code that prints the larger of two input numbers?,"37, 22","# Define the two numbers
num1 = 37
num2 = 22

# Print the larger number
if num1 > num2:
    print(num1)
else:
    print(num2)","# Define the two numbers
num1 = 37
num2 = 22

# Print the larger number
if num1 > num2:
    print(num1)
else:
    print(num2)",correct,OOP
Develop a code in Python to compare two lists and remove the common elements,"list1 = [10, 15, 20, 25, 30, 35, 40]
list2 = [25, 40, 35]","list1 = [10, 15, 20, 25, 30, 35, 40]
list2 = [25, 40, 35]

def remove_common_elements(list1, list2):
    list1_unique = []
    
    for i in list1:
        if i not in list2:
            list1_unique.append(i)
    
    return list1_unique

print(remove_common_elements(list1, list2))","list1 = [10, 15, 20, 25, 30, 35, 40]
list2 = [25, 40, 35]

def remove_common_elements(list1, list2):
    list1_unique = []
    
    for i in list1:
        if i not in list2:
            list1_unique.append(i)
    
    return list1_unique

print(remove_common_elements(list1, list2))",correct,Recursion
Encode a given URL using percent-encoding.,https://www.example.com/search?q=python,"String url = ""https://www.example.com/search?q=python"";
String encodedUrl = URLEncoder.encode(url, ""UTF-8"");
System.out.println(encodedUrl);  // https%3A%2F%2Fwww.example.com%2Fsearch%3Fq%3Dpython","String url = ""https://www.example.com/search?q=python"";
String encodedUrl = URLEncoder.encode(url, ""UTF-8"");
System.out.println(encodedUrl);  // https%3A%2F%2Fwww.example.com%2Fsearch%3Fq%3Dpython",correct,Loops
Produce a Python script to convert a given Unix timestamp into human readable date format.,1545732721,"import time

# Unix timestamp in seconds
unix_timestamp = 1545732721

# Convert to readable date format
timestamp = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(unix_timestamp))

print('Human readable date format:', timestamp)","import time

# Unix timestamp in seconds
unix_timestamp = 1545732721

# Convert to readable date format
timestamp =",Incomplete Answer,OOP
"Create a Python class called ""Car"" that has two instance variables, ""year"" and ""make"".",,"class Car:
    def __init__(self, year, make):
        self.year = year
        self.make = make","class Car:
    def __init__(self, year, make):
 ",Incomplete Answer,String Manipulation
Generate a Python program to delete an item from a given list.,"Item: 5 
List: [8, 4, 5, 9, 2]","def remove_item(item, list): 
    list.remove(item) 
    return list
  
list_org = [8, 4, 5, 9, 2]
  
result = remove_item(5, list_org)
print(result)","def remove_item(item, list): 
    list.remove(item) 
    return list
  
list_org = [8, 4, 5, 9, 2]
  
result = remove_item(5, list_org)
print(result)",correct,OOP
"Write a Python script that can clean noisy text data, by removing special characters and translating text to lowercase.",,"import re

# Read in the data
text = open('noisy.txt').read()

# Clean the data by removing special characters and translating to lowercase
clean_text = re.sub(r""[^a-zA-Z0-9\s]"", """", text).lower()

# Print the cleaned text
print(clean_text)","import re

# Read in the data
text = open('noisy.txt').read()

# Clean the data by removing special characters and trans",Incomplete Answer,OOP
Generate a Python 3 program that creates a list of 10 random numbers between 0 and 100.,,"import random

# Create a list of 10 random numbers between 0 and 100
random_list = []
for i in range(10):
    random_list.append(random.randint(0,100))

# Print the list
print(random_list)","import random

# Create a list of 10 random numbers between 0 and 100
random_list = []
for i in range(10)
    random_list.append(random.randint(0,100))

# Print the list
print(random_list)",Syntax Error,Recursion
Write a Python program to solve the below puzzle.,"Given a list of integers and a number ‘X’, find two numbers in the list whose sum is equal to ‘X’","def find_sum_pair(arr, X):
  for i in range(0, len(arr)):
    for j in range(i+1, len(arr)):
      if arr[i] + arr[j] == X:
        return [arr[i], arr[j]]
  return []","def find_sum_pair(arr, X):
  for i in range(0, len(arr)):
    for j in range(i+1, l",Incomplete Answer,String Manipulation
Provide an example of how to use a decorator to debug a function in Python,Noinput,"import time

def time_it(func): 
    def wrapper(*args, **kwargs): 
        start = time.time() 
        result = func(*args, **kwargs) 
        end = time.time() 
        print(""Execution time: {}"".format(end - start)) 
        return result 
  
    return wrapper 

@time_it
def my_function(arg1, arg2):
        # Some logic code..
        return 10

my_function(10, 20)","import time

def time_it(func): 
    def wrapper(*args, **kwargs): 
        start = time.time() 
        result = func(*args, **kwargs) 
        end = time.time() 
        print(""Execution time: {}"".format(end - start)) 
        return result 
  
    return wrapper 

@time_it
def my_function(arg1, arg2):
        # Some logic code..
        return 10

my_function(10, 20)",correct,Loops
Create a Python program to generate random 9x9 Sudoku puzzles.,,"import random

def generate_sudoku():
    sudoku = [[0 for x in range(9)] for x in range(9)]
    for i in range(9):
        for j in range(9):
            sudoku[i][j] = random.randint(1, 9)
    return sudoku

sudoku = generate_sudoku()
for i in range(9):
    for j in range(9):
        print(sudoku[i][j], end="" "")
    print()","import random

def generate_sudoku():
    sudoku = [[0 for x in range(9)] for x in range(9)]
    for i in range(9):
        for j in range(9):
            sudoku[i",Incomplete Answer,File I/O
Modify the given Python loop to also multiply the numbers by 2 at the same time.,"numbers = [1, 2, 3 , 4]

for num in numbers:
  print(num)","numbers = [1, 2, 3 , 4]

for num in numbers:
  print(num*2)","numbers = [1, 2, 3 , 4]

for num in numbers:
  print(num*2)",correct,File I/O
What is the best way to query a MySQL database in Python?,,"The best way to query a MySQL database in Python is by using the MySQL Connector/Python library. It is an official Oracle-supported driver that allows you to easily connect with MySQL databases and execute queries. It provides a Python Database API that complies with the Python Database API Specification v2.0. The library also has support for prepared statements, transactions, and more.","The best way to query a MySQL database in Python is by using the MySQL Connector/Python library. It is an official Oracle-supported driver that allows you to easily connect with MySQL databases and execute queries. It provides a Python Database API that complies with the Python Database API Specification v2.0. The library also has support for prepared statements, transactions, and more.",correct,String Manipulation
Write a Python function to print prime numbers between two given numbers.,"low = 5, high = 10","def print_prime_numbers_between_two_numbers(low, high): 
    for numb in range(low,high + 1): 
        if numb > 1: 
            for i in range(2,numb): 
                if (numb % i) == 0: 
                    break
            else: 
                print(numb) 

#calling the function
print_prime_numbers_between_two_numbers(5, 10)","def print_prime_numbers_between_two_numbers(low, high): 
    for numb in range(low,high + 1): 
        if numb > 1: 
            for i in range(2,numb): 
                if (numb % i) == 0: 
                    break
            else: 
                print(numb) 

#calling the function
print_prime_numbers_between_two_numbers(5, 10)",correct,File I/O
Develop a Python program to generate all the even numbers between two given numbers.,,"def generateEvenNumber(start, end):
  for num in range(start, end+ 1):
    if num % 2 == 0:
      yield num
 
evens = []
start = 1
end = 10
for even in generateEvenNumber(start, end):
  evens.append(even)
 
print(evens)","def generateEvenNumber(start, end):
  for num in range(start, end+ 1):
    if num % 2 == 0:
      yield num
 ",Incomplete Answer,String Manipulation
Create a custom function in Python to change the values of a list.,"[2, 3, 1, 4]","def custom_function(input_list): 
  transformed_list = [] 

  for value in input_list: 
    transformed_value = value + 1 
    transformed_list.append(transformed_value) 
  
  return transformed_list 

input_list = [2, 3, 1, 4]
print(custom_function(input_list))","def custom_function(input_list): 
  transformed_list = [] 

  for value in input_list: 
    transformed_value = value + 1 
    transformed_list.append(transformed_value) 
  
  return transformed_list 

input_list = [2, 3, 1, 4]
print(custom_function(input_list))",correct,String Manipulation
Create a python script to detect a palindrome from a given string.,,"def is_palindrome(s):
    s = s.lower()
    return s == s[::-1]","def is_palindrome(s):
    s = s.lower()
    return s == s[::-1]",correct,String Manipulation
Implement a function in Python to find the length of a given string without using the len() built-in function.,"""Hello World!""","def getStringLength(my_string): 
    # Initialize counter  
    count = 0
  
    for s in my_string: 
        count+= 1
  
    return count","def getStringLength(my_string): 
    # Initialize counter  
    count = 0
  
    for s in my_string: 
        count+= 1
  
    return count",Syntax Error,Recursion
Write a Python Function that receives two strings and checks to see if one of them is an anagram of the other one.,,"def is_anagram(s1, s2):
    s1 = s1.replace("" "","""").lower()
    s2 = s2.replace("" "","""").lower()
    return sorted(s1) == sorted(s2)","def is_anagram(s1, s2):
s1 = s1.replace("" "","""").lower()
s2 = s2.replace("" "","""").lower()
return sorted(s1) == sorted(s2)",Syntax Error,File I/O
Write a python function to find the frequency of a number in a given array.,,"def frequency(a,x): 
    count = 0  
    for i in a: 
        if i == x: count += 1
    return count ","def frequency(a,x): 
    count = 0  
    for i in a: 
        if i == x: count += 1
    return count ",Syntax Error,Recursion
Create a loop in Python to print out every even number until 10.,,"for i in range(2, 11, 2):
    print(i)","for i in range(2, 11, 2:
    print(i",Syntax Error,File I/O
Write a Python script to filter out the given list and create a new reduced list.,"[-1, -2, 5, 0, 6, 8, 4, 9]","original = [-1, -2, 5, 0, 6, 8, 4, 9]
filtered = [x for x in original if x > 0]
print(filtered)","original = [-1, -2, 5, 0, 6, 8, 4, 9]
filtered ",Incomplete Answer,OOP
"Write a Python program to assess a patient's current state based on their temperature, pulse rate and respiratory rate.","temperature = 98.6
breathing_rate = 18
pulse_rate = 70","def assess_patient(temperature, breathing_rate, pulse_rate):
 if temperature > 100:
  print('Fever present')
 if breathing_rate < 12 or breathing_rate > 20:
  print('Respiratory distress')
 if pulse_rate < 60 or pulse_rate > 100:
  print('Heart rate issue')","def assess_patient(temperature, breathing_rate, pulse_rate:
 if temperature > 100:
  print('Fever present'
 if breathing_rate < 12 or breathing_rate > 20:
  print('Respiratory distress'
 if pulse_rate < 60 or pulse_rate > 100:
  print('Heart rate issue'",Syntax Error,OOP
Create a function in Python 3 which takes two arguments and prints their sum.,"a = 5
b = 6","def add(a, b):
    print('Sum =', a + b)
    
add(5, 6)","def add(a, b):
    print('Sum =', a + b)
    
add(5, 6)",correct,String Manipulation
Write a function to locate the left insertion point for a specified value in sorted order.,,"import bisect
def left_insertion(a, x):
    i = bisect.bisect_left(a, x)
    return i","import bisect
def left_insertion(a, x):
  ",Incomplete Answer,OOP
Convert a Python threading program to JavaScript.,"import threading

def show_message(message):
   print(message)

thread = threading.Thread(target=show_message, args=('Hello World!',))
thread.start()","const showMessage = (message) => console.log(message);

const thread = new Worker('./thread.js');
thread.postMessage({message: 'Hello World!'});

// thread.js
onmessage = (msg) => postMessage(showMessage(msg.data.message));","const showMessage = (message) => console.log(message);

const thread = new Worker('./thread.js');
thread.postMe",Incomplete Answer,Recursion
Create a function in Python to read specified properties from a list.,"props = ['name', 'age', 'gender']","def read_props(props):
    """"""
    Read listed properties from a list.
    
    Args:
        props (list): The list containing properties to be read.
    
    Returns:
        tuple: Returns a tuple with values of the specified properties.
    """"""
    data = list()
    for prop in props:
        data.append(input(""Enter {}: "".format(prop)))
    return tuple(data)","def read_props(props):
    """"""
    Read listed properties from a list.
    
    Args:
        props (list): The list containing properties to be read.
    
    Returns:
        tuple: Returns a tuple with values of the specified properties.
    """"""
    data = list()
    for prop in props:
        data.append(input(""Enter {}: "".format(prop)))
    return tuple(data)",Syntax Error,File I/O
Create a function in Python which calculates the number of days between two dates.,,"def days_between_dates(date1, date2):
    delta = date2 - date1
    return delta.days","def days_between_dates(date1, date2)
    delta = date2 - date1
    return delta.days",Syntax Error,OOP
Create a python program to implement random forest algorithm.,,"import numpy as np 

from sklearn.ensemble import RandomForestClassifier

#data 
X =  np.array([[1,2,3], [1,2,3], [4,5,6], [4,5,6]])
y = np.array([1,1,2,2])

#Create a Random Forest Classifier
clf = RandomForestClassifier(max_depth=2, random_state=0)

#Training the model
clf.fit(X,y)","import numpy as np 

from sklearn.ensemble import RandomForestClassifier

#data 
X =  np.array([[1,2,3], [1,2,3], [4,5,6], [4,5,6]])
y = np.ar",Incomplete Answer,Loops
Write a Python function to sort a list of tuples based on their third elements.,"list = [('a', 1, 3), ('e', 5, 8), ('b', 6, 9), ('d', 2, 4)]","def sort_by_third_element(list):
  return sorted(list, key=lambda x: x[2])

list = [('a', 1, 3), ('e', 5, 8), ('b', 6, 9), ('d', 2, 4)]

res = sort_by_third_element(list) 

# The result is
[('a', 1, 3), ('d', 2, 4), ('e', 5, 8), ('b', 6, 9)]","def sort_by_third_element(list):
  return sorted(list, key=lambda x: x[2])

list = [('a', 1, 3), ('e', 5, 8), ('b', 6, 9), ('d', 2, 4)]

res = sort_by_third_element(list) 

# The result is
[('a', 1, 3), ('d', 2, 4), ('e', 5, 8), ('b', 6, 9)]",Syntax Error,File I/O
Generate a python program to assign each row of a 2D array to a variable.,<No input>,"def assign_variables(matrix):
    # Create an empty list to contain all the row variables
    variables = []
    
    # Iterate over the matrix
    for row in matrix:
        # Assign each row to a variable
        rowVar = row
        # Add the row variable to the list
        variables.append(rowVar)
        
    # Return the list of row variables
    return variables","def assign_variables(matrix):
# Create an empty list to contain all the row variables
variables = []

# Iterate over the matrix
for row in matrix:
    # Assign each row to a variable
    rowVar = row
    # Add the row variable to the list
    variables.append(rowVar)
    
# Return the list of row variables
return variables",Syntax Error,File I/O
Generate a random string in Python of length 8 containing only digits and lowercase characters.,,"import string, random

length = 8
chars = string.ascii_letters + string.digits
random_str = ''.join(random.choice(chars) for _ in range(length))
print(random_str)","import string, random

length = 8
chars = string.ascii_letters + string.digits
ra",Incomplete Answer,OOP
Write Python code to select values greater than 2 in a given list.,"[1, 2, 3, 4, 5]","list = [1, 2, 3, 4, 5]
 
result = [value for value in list if value > 2]
 
print(result)","list = [1, 2, 3, 4, 5]
 
result = [value for value in list if value > 2]
 
print(result)",correct,File I/O
Generate a program to search for a given pattern in a string.,,"def search_pattern(string, pattern):
  index = string.find(pattern)
  if index == -1:
    return False
  else:
    return (index, index + len(pattern))

result = search_pattern(""i love python!"", ""love"")
print(result) # (2, 6)","def search_pattern(string, pattern):
  index = string.find(pattern)
  if index == -1:
    return False
  else:
    return (index, index + len(pattern))

result = search_pattern(""i love python!"", ""love"")
pritn(result) # (2, 6)",Syntax Error,String Manipulation
Write a python function to find the largest product of the pair of adjacent elements from a given list of integers.,,"def adjacent_num_product(list_nums):
    return max(a*b for a, b in zip(list_nums, list_nums[1:]))","def adjacent_num_product(list_nums):
    return ",Incomplete Answer,OOP
Create a python program to calculate the average of three numbers.,,"def average(a,b,c):
    return (a + b + c) / 3","def average(a,b,c):
   ",Incomplete Answer,Recursion
Create a Python program to print out the prime numbers between the given input range.,"min = 1
max = 10","def print_primes(min, max):
  for num in range(min, max+1):
    if num > 1:
      for i in range(2, num):
        if (num % i) == 0:
          break
      else:
        print(num)
  
# Driver Code
min = 1
max = 10

print_primes(min, max)

# Output:
# 2
# 3
# 5
# 7","def print_primes(min, max):
  for num in range(min, max+1):
    if num > 1:
      for i in range(2, num):
        if (num % i) == 0:
          break
      else:
        print(num)
  
# Driver Code
min = 1
max = 10

print_primes(min, max)

# Output:
# 2
# 3
# 5
# 7",correct,Recursion
Create a code snippet to sort a given array of strings in descending order based on their lengths in Python.,"arr = [""Python"", ""Javascript"", ""Ruby"", ""Java""]","arr.sort(key=lambda x: len(x), reverse=True)
print(arr)","arr.sort(key=lambda x: len(x), reverse=True)
print(arr)",correct,Loops
Develop a class in Python that tracks the number of objects created.,,"class Counter:
    count = 0

    def __init__(self):
        Counter.count += 1
    
    @classmethod
    def get_count(cls):
        return cls.count","class Counter:
    count = 0

    def __init__(self):
        Counter.count += 1
    
    @classmethod
    def get_count(cls):
        return cls.count",correct,OOP
Find the 5 most frequent words in the given text.,Text: Python is a high-level programming language.,"from collections import Counter

text = "" Python is a high-level programming language.""
words = text.split()

frequencies = Counter(words)

# printing five most frequent words 
frequent_words = frequencies.most_common(5)

print(frequent_words)","from collections import Counter

text = "" Python is a high-level programming language.""
words = text.split()

frequencies",Incomplete Answer,Loops
Write a Python program that finds all numbers in a given string and prints their sum?,"""15 apples, 4 bananas and 6 oranges""","import re

def find_numbers(s):
    numbers = re.findall('\\d+', s)
    ints = list(map(int, numbers))
    return sum(ints)

s = ""15 apples, 4 bananas and 6 oranges""

print(find_numbers(s)) # output: 25","import re

def find_numbers(s):
    numbers = re.findall('\\d+', s)
    ints = list(map(int, numbers))
    return sum(ints)

s = ""15 apples, 4 bananas and 6 oranges""

print(find_numbers(s)) # output: 25",correct,Loops
Rewrite the following code from Java to Python:,"public class Main {
 public static void main(String[] args) {
 int a = 5;
 int b = 10;
 int c = a + b;
 
 System.out.println(c);
 }
}","a = 5
b = 10
c = a + b

print(c)","a = 5
b = 10
c = a + b

print(c",Syntax Error,OOP
Write a code to create a dictionary from given list of words.,"words = ['Python', 'is', 'an', 'interpreted', 'high-level', 'programming', 'language', 'for', 'general-purpose', 'programming']","word_dict = {'Python': 1, 'is': 2, 'an': 3, 'interpreted': 4, 'high-level': 5, 'programming': 6, 'language': 7, 'for': 8, 'general-purpose': 9, 'programming': 10 }","word_dict = {'Python': 1, 'is': 2, 'an': 3, 'interpreted': 4, 'high-level': 5, 'programming': 6, 'language': 7, 'for': 8, 'general-purpose': 9, 'programming': 10 }",Syntax Error,String Manipulation
Write a function in Python to print all the prime numbers between 0 and 100.,,"def print_prime_numbers():
 for num in range(0, 101):
 if num > 1:
 for i in range(2, num):
 if (num % i) == 0:
 break
 else:
 print(num)

print_prime_numbers()","def print_prime_numbers(:
 for num in range(0, 101:
 if num > 1:
 for i in range(2, num:
 if (num % i == 0:
 break
 else:
 print(num

print_prime_numbers(",Syntax Error,String Manipulation
Write a python function to find the number of divisors of a given integer.,,"def divisor(n):
  for i in range(n):
    x = len([i for i in range(1,n+1) if not n % i])
  return x","def divisor(n):
  for i in range(n):
    x = len([i for i in range(1,n+1) if not n % i])
  return x",correct,OOP
Write a Python code to edit the given sentence by replacing all the '@' symbols with '#' symbols.,"Sentence: ""This is a sentence with @ symbols.""","sentence = ""This is a sentence with @ symbols.""
sentence = sentence.replace('@', '#')
print(sentence) # This is a sentence with # symbols.","sentence = ""This is a sentence with @ symbols.""
sentence = sentence.replace('@', '#')
print(sentence) # This is a sentence with # symbols.",Syntax Error,Loops
Write a function to sort dictionary items by tuple product of keys for the given dictionary with tuple keys.,,"def sort_dict_item(test_dict):
  res = {key: test_dict[key] for key in sorted(test_dict.keys(), key = lambda ele: ele[1] * ele[0])}
  return  (res) 
","def sort_dict_item(test_dict):
  res = {key: test_dict[key] for key in sorted(test_dict.keys(), key = lambda ele: ele[1] * ele[0])}
  return  (res) 
",correct,OOP
"Design a class in Python 3 called ""Animal"" which will contain the following methods:",,"class Animal:
    def __init__(self, name):
        self.name = name
    
    def move(self):
        print(f""{self.name} is moving"")
    
    def eat(self):
        print(f""{self.name} is eating"")
    
    def sleep(self):
        print(f""{self.name} is sleeping"")","class Animal:
    def __init__(self, name):
        self.name = name
    
    def move(self):
        print(f""{self.name} is moving"")
    
    def eat(self):
        print(f""{self.name} is eating"")
    
    def sleep(self):
        print(f""{self.name} is sleeping"")",correct,OOP
Write a python function to find binomial co-efficient.,,"def binomial_Coeff(n,k): 
    if k > n : 
       return 0
    if k==0 or k ==n : 
        return 1 
    return binomial_Coeff(n-1,k-1) + binomial_Coeff(n-1,k) ","def binomial_Coeff(n,k): 
    if k > n : 
       return 0
    if k==0 or k ==n ",Incomplete Answer,Loops
Produce a data structure in Python to model a simple grocery store.,,"class GroceryStore:
  def __init__(self):
    self.items = {}

  def add_item(self, item, price):
    self.items[item] = price

  def get_price(self, item):
    return self.items.get(item)","class GroceryStore:
  def __init__(self):
    self.items = {}

  def add_item(self, item, price):
    self.items[item] = price

  def get_price(self, item):
    return self.items.get(item)",Syntax Error,Loops
Design a Python program to read numbers from a given array and determine if all numbers are divisible by 5.,"array = [10, 15, 20, 25, 30]","def checkDivisible(array):
  for num in array:
    if num % 5 != 0:
      return False
  return True

array = [10, 15, 20, 25, 30]

if checkDivisible(array):
  print('All numbers are divisible by 5')
else:
  print('Not all numbers are divisible by 5')","def checkDivisible(array):
  for num in array:
    if num % 5 != 0:
      return False
  return True

array = [10, 15, 20, 25, 30]

if checkDivisible(array):
  print('All numbers are divisible by 5')
else:
  print('Not all numbers are divisible by 5')",correct,String Manipulation
Write a function to remove duplicate words from a given list of strings.,,"def remove_duplic_list(l):
    temp = []
    for x in l:
        if x not in temp:
            temp.append(x)
    return temp","def remove_duplic_list(l):
    temp = []
    for x in l:
        if x not in temp:
            temp.append(x)
    return temp",correct,OOP
Write a Python program to find the prime numbers between 0 and 10.,,"def find_prime_numbers(start, end): 
    prime_nums = []
    for num in range(start, end + 1): 
        if num > 1:
            for i in range(2, num): 
                if num % i == 0: 
                    break
            else: 
                prime_nums.append(num)
    return prime_nums
    
print(find_prime_numbers(0, 10))","def find_prime_numbers(start, end): 
    prime_nums = []
    for num in range(start, end + 1): 
        if num > 1:
            for i in range(2, num): 
                if num % i == 0: 
                    break
            else: 
                prime_nums.append(num)
    return prime_nums
    
pritn(find_prime_numbers(0, 10))",Syntax Error,Loops
Design an algorithm in Python to calculate the Fibonacci numbers up to N.,5,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n+1): 
            c = a + b 
            a = b 
            b = c 
        return b 

print(fibonacci(5)) # 5","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n+1): 
            c = a + b 
            a = b 
            b = c 
        return b 

print(fibonacci(5)) # 5",correct,Recursion
Create a Python function that calculates the area of a circle.,radius=3,"import math

def area_circle(radius):
    return math.pi * (radius ** 2)
    
print(area_circle(3))","import math

def area_circle(radius):
    return ",Incomplete Answer,Recursion
Generate a python code that returns all distinct values of a given list.,"my_list = [2,2,4,4,6,2]","def get_distinct_elements(list):
    distinct_list = []
    for item in list:
        if item not in distinct_list:
            distinct_list.append(item)
    return distinct_list

distinct_list = get_distinct_elements(my_list)","def get_distinct_elements(list):
    distinct_list = []
    for item in list:
        if item not in distinct_list:
            distinct_list.append(item)
    return distinct_list

distinct_list = get_distinct_elements(my_list)",correct,Recursion
Develop a Python script which extracts data from a given website.,URL: https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')

# Extract all Anchor Tags
links = soup.find_all('a')

# Extract all the contents of Anchors
for link in links:
    print(link.text, link.get('href'))","import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')

# Extract all Anchor Tags
links = soup.find_all('a')

# Extract all the contents of Anchors
for link in links:
    print(link.text, link.get('href'))",correct,Loops
Generate a random 5x5 matrix consisting of numerical entries in Python.,,"import numpy as np

random_matrix = np.random.randint(1, 100, size=(5, 5))
print(random_matrix)","import numpy as np

random_matrix = np.random.r",Incomplete Answer,String Manipulation
Write a Python code to filter out the strings containing two or more words in a given list.,"string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]","def filter_words(string_list):
  result = []
  for string in string_list:
    if len(string.split()) < 2:
      result.append(string)
  return result

string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]
print(filter_words(string_list))

#Output
['Hello', 'Hi']","def filter_words(string_list):
  result = []
  for string in string_list:
    if len(string.split()) < 2:
      result.append(string)
  return result

string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]
print(name, filter_words(string_list))

#Output
['Hello', 'Hi']",Syntax Error,OOP
Create a Python function that takes in two sets and returns a set containing the items that are in the first set but not in the second.,"set_A = {1, 2, 3, 4}, set_B = {2, 3, 5}","def diff(set_A, set_B):
  res= set_A.difference(set_B)
  return res

set_A={1, 2, 3, 4}
set_B={2, 3, 5}

result = diff(set_A, set_B)
print(result)","def diff(set_A, set_B):
  res= set_A.difference(set_B)
  return res

set_A={1, 2, 3, 4}
set_B={2, 3, 5}

result = diff(set_A, set_B)
print(name, result)",Syntax Error,Loops
"Create a program in Python to identify whether a character is uppercase, lowercase or a digit.",char = 'A',"def char_type(char):
    # check if character is uppercase 
    if char.isupper(): 
        print('Uppercase') 
 
    # check if character is lowercase  
    elif char.islower(): 
        print('Lowercase') 
 
    # check if character is digit 
    elif char.isdigit(): 
        print('Digit') 
    else: 
        print('Special Character') 

char_type('A')","def char_type(char):
    # check if character is uppercase 
    if char.isupper(): 
        print('Uppercase') 
 
    # check if character is lowercase  
    elif char.islower():",Incomplete Answer,Recursion
Implement a sorting algorithm in Python that sorts a given array of numbers.,"array = [2, 7, 4, 1, 5, 3]","def sort_array(array):
    for i in range(len(array)): 
        min_idx = i 
        for j in range(i+1, len(array)): 
            if array[min_idx] > array[j]: 
                min_idx = j       
        array[i], array[min_idx] = array[min_idx], array[i]
    return array
result = sort_array(array)
print(result) // Output: [1, 2, 3, 4, 5, 7]","def sort_array(array):
for i in range(len(array)): 
    min_idx = i 
    for j in range(i+1, len(array)): 
        if array[min_idx] > array[j]: 
            min_idx = j       
    array[i], array[min_idx] = array[min_idx], array[i]
return array
result = sort_array(array)
print(result) // Output: [1, 2, 3, 4, 5, 7]",Syntax Error,String Manipulation
"Given the following JSON string, write a program in Python to parse it.",,"import json

json_string = '{""name"": ""John"", ""age"": 20, ""courses"": [""English"", ""Maths""]}'

data = json.loads(json_string)
name = data['name']
age = data['age']
courses = data['courses']

print('Name:', name)
print('Age:', age)
print('Courses:', courses)","import json

json_string = '{""name"": ""John"", ""age"": 20, ""courses"": [""English"", ""Maths""]}'

data = json.loads(json_string
name = data['name']
age = data['age']
courses = data['courses']

print('Name:', name
print('Age:', age
print('Courses:', courses",Syntax Error,File I/O
Write a Python program to automatically submit a form when a user fills out all fields.,,"import requests

# Create a form
form_data = {
 'name': 'John Doe',
 'email': 'john@example.com'
 }

# Send request
r = requests.post('http://example.com/form-submit', data=form_data)

# Check status code
if r.status_code == 200:
 print('Form submitted successfully!')
else:
 print('Failed to submit form!')","import requests

# Create a form
form_data = {
 'name': 'John Doe',
 'email': 'john@example.com'
 }

# Send request
r = requests.post('http://example.com",Incomplete Answer,OOP
Create a Python program that takes two integers as inputs and prints the largest number of them.,"First Integer: 12
Second Integer: 44","num1 = 12
num2 = 44

if (num1 > num2):
    print(num1)
elif (num2 > num1):
    print(num2)
else:
    print(""Both numbers are equal"")","num1 = 12
num2 = 44

if (num1 > num2):
    print(num1)
elif (num2 ",Incomplete Answer,Recursion
Create a Python program to interpret a user command from a given set of instructions and execute it.,Taking a break,"command = input(""Please enter your command: "")
 
if command == ""Taking a break"":
 print(""Taking a five minute break"")
 # code to execute the taking a break command
else:
 print(""Invalid command"")","command = input(""Please enter your command: "")
 
if command == ""Taking a break"":
 print(""Taking a",Incomplete Answer,String Manipulation
"Translate the following sentence into Python language using Loops: ""Print all the numbers from 0 to 20"".",,"for i in range(0, 21):
  print(i)","for i in range(0, 21):
  print(name, i)",Syntax Error,Loops
Write a code to check how many consecutive elements are equal in a given Python list.,"[1, 2, 3, 4, 4, 4, 5]","def check_consecutive_equal(lst): 
    count = 1
    max_count = 0
    
    for i in range(1, len(lst)):
        if lst[i] == lst[i-1]: 
            count+=1
        else:
            if max_count < count:
                max_count = count
            count = 1
  
    return max(max_count, count)","def check_consecutive_equal(lst): 
    count = 1
    max_count = 0
    
    for i in range(1, len(lst)):
        if lst[i] == lst[i-1]: 
           ",Incomplete Answer,File I/O
"Define a class in Python to represent a person with first name, last name, age, and a method to greet them.",,"class Person:
 def __init__(self, first_name, last_name, age):
 self.first_name = first_name
 self.last_name = last_name
 self.age = age

 def greet(self):
 return f""Hello, my name is {self.first_name} {self.last_name} and I am {self.age} years old.""","class Person:
 def __init__(self, first_name, last_name, age):
 self.first_name = first_name
 self.last_name = last_name
 self.age = age

 def greet(self):
 return f""Hello, my name is {self.first_name} {self.last_name} and I am {self.age} years old.""",correct,Recursion
Write a Python program to classify the following data into classes.,"Student 1: {Name: Peter, Age: 34, Marks: 69}
Student 2: {Name:Alice, Age: 20, Marks: 89}","def classify_data(students):
    for student in students:
        if student['Marks'] < 70:
            student['Class'] = 'Average'
        elif student['Marks'] >= 70 and student['Marks'] < 90:
            student['Class'] = 'Good'
        elif student['Marks'] >= 90:
            student['Class'] = 'Excellent'","def classify_data(students):
    for student in students:
        if student['Marks'] < 70:
            student['Class'] = 'Average'
        elif student['M",Incomplete Answer,Recursion
Rewrite a Python program from imperative to functional style.,"def find_even_numbers(numbers):
  even_numbers = []
  for num in numbers:
    if num % 2 == 0:
      even_numbers.append(num)
  return even_numbers","def find_even_numbers(numbers):
    even_numbers = filter(lambda num: num % 2 == 0, numbers)
    return list(even_numbers)","def find_even_numbers(numbers):
even_numbers = filter(lambda num: num % 2 == 0, numbers)
return list(even_numbers)",Syntax Error,Recursion
Write a function to search an element in the given array by using sequential search.,,"def sequential_search(dlist, item):
    pos = 0
    found = False
    while pos < len(dlist) and not found:
        if dlist[pos] == item:
            found = True
        else:
            pos = pos + 1
    return found, pos","def sequential_search(dlist, item):
    pos = 0
    found = False
    while pos < len(dlist) and not found:
    ",Incomplete Answer,OOP
"Write a Python script to generate random numbers between 0 and 100, inclusive, that are divisible by 5.",,"def genRandomFive():
    n = 100
    divisor = 5

    random_number = random.randint(0,n) 
    while (random_number % divisor != 0): 
        random_number = random.randint(0,n) 
    return random_number 

for i in range(5): 
    print(genRandomFive())","def genRandomFive():
    n = 100
    divisor = 5

    random_number = random.randint(0,n) 
    while (random_number % divisor != 0): 
        random_number = random.randint(0,n) 
    return random_number 

for i in range(5): 
    print(genRandomFive())",correct,Recursion
Write code to establish a connection between a Python backend and a MySQL database.,"Host = 'localhost'
Username = 'root'
Password = '123456'
Database = 'sample_database'","import mysql.connector 
  
#Create MySQL Connection 
connection = mysql.connector.connect(host = Host, database = Database, user = Username, password = Password) 

#Check whether connection is established or not
if connection.is_connected(): 
    print(""Connection established successfully"")","import mysql.connector 
  
#Create MySQL Connection 
connection = mysql.connector.connect(host = Host, database = Database, user = Username, pass",Incomplete Answer,String Manipulation
Rewrite the given Python code to use list comprehension.,"numbers = [1, 2, 3, 4, 5]

new_numbers = []
for n in numbers:
    new_numbers.append(n * 2)","numbers = [1, 2, 3, 4, 5]

new_numbers = [n * 2 for n in numbers]","numbers = [1, 2, 3, 4, 5]

new_n",Incomplete Answer,Recursion
Generate a Python program that identifies all the words with more than five characters in a given list.,"words = [""red"", ""green"", ""blue"", ""yellow"", ""orange""]","def more_than_five_characters(words):
    result = []
    for word in words:
        if len(word) > 5:
            result.append(word)
    return result

words = [""red"", ""green"", ""blue"", ""yellow"", ""orange""]
print(more_than_five_characters(words))","def more_than_five_characters(words):
    result = []
    for word in words:
        if len(word) > 5:
            result.append(word)
    return result

words = [""red"", ""green"", ""blue"", ""yellow"", ""orange""]
pritn(more_than_five_characters(words))",Syntax Error,String Manipulation
Generate a Python program that takes a positive integer as input and returns a boolean indicating whether it is a prime number or not.,,"def is_prime(n):
    if n < 2:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True","def is_prime(n):
    if n < 2:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True",correct,String Manipulation
Replace the given SQL query with a Python program to calculate the sum of all the column values.,SELECT SUM(column) FROM table;,"import pandas as pd

data = pd.read_sql

  query = ""SELECT * FROM table""

df = pd.read_sql(query, conn)

sum_column = df['column'].sum()

print(sum_column)","import pandas as pd

data = pd.read_sql

  query = ""SELECT * FROM table""

df = pd.read_sql(query, conn)

sum_column = df['column'].sum()

print(name, sum_column)",Syntax Error,OOP
Write a python function to remove two duplicate numbers from a given number of lists.,,"def two_unique_nums(nums):
  return [i for i in nums if nums.count(i)==1]","def two_unique_nums(nums):
  return [i for i in nums if nums.count(i)==1]",correct,OOP
Construct a Python script to filter the elements of a given list which are divisible by 3.,"[1,2,3,4,5,6,7,8,9]","my_list = [1,2,3,4,5,6,7,8,9]

filtered_list = list(filter(lambda x: x % 3 == 0, my_list))
print(filtered_list)","my_list = [1,2,3,4,5,6,7,8,9]

filtered_list = list(filter(lambda x: x % 3 == 0, my_list))
print(filtered_list)",correct,Recursion
Write a Python program to generate N random numbers.,5,"import random

random_numbers = []

for _ in range(5):
  random_numbers.append(random.random()) 

print(random_numbers)","import random

random_numbers = []

for _ in range(5):
  random_numbers.append(random.random()) 

print(random_numbers)",correct,OOP
Create a function in Python that prints all prime numbers from 1 to 100.,,"def print_primes():
    for num in range(1, 101):
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            print(num) 

print_primes()","def print_primes(:
    for num in range(1, 101:
        for i in range(2, num:
            if (num % i == 0:
                break
        else:
            print(num 

print_primes(",Syntax Error,Recursion
Create a Python script that takes in a string and returns a dictionary of the number of times each character appears in the string.,,"def character_count(str):
    d = dict()
    for c in str:
        if c in d:
            d[c] += 1
        else:
            d[c] = 1
    return d","def character_count(str):
    d = dict()
    for c in str:
        if c in d:
            d[c] += 1
        else:
            d[c] = 1
    return d",correct,Loops
Create a python program that calculates the total cost of an item given the quantity and price.,"Quantity: 5, Price: 10","def calcTotalCost(quantity, price):
    totalCost = quantity * price
    return totalCost

result = calcTotalCost(5, 10)
print(result)","def calcTotalCost(quantity, price):
    totalCost = quantity * price
    return totalCost

result = calcTotalCost(5, 10)
print(result)",correct,Recursion
Generate an optimized python code for finding the maximum element in a list of numbers.,,"def find_max(l):
    max_elmt = l[0]
    for x in l:
        if x > max_elmt:
            max_elmt = x
    return max_elmt","def find_max(l):
    max_elmt = l[0]
    for x in l:
        if x > max_elmt:
            max_elmt = x
    return max_elmt",correct,String Manipulation
Write a python function to find the sum of fifth power of n natural numbers.,,"def fifth_Power_Sum(n) : 
    sm = 0 
    for i in range(1,n+1) : 
        sm = sm + (i*i*i*i*i) 
    return sm ","def fifth_Power_Sum(n) : 
    sm = 0 
    for i in range",Incomplete Answer,String Manipulation
Write a Python program to find all possible subsets of a given set.,"s = {1,2,3}","def find_subsets(s):
    subsets = []

    for i in range(len(s)+1):
        for subset in itertools.combinations(s, i):
            subsets.append(subset)

    return subsets

s = {1,2,3}
result = find_subsets(s)
print(result)","def find_subsets(s):
    subsets = []

    for i in range(len(s)+1):
        for subset in itertools.combinations(s, i):
            subsets.append(subset)

    return subsets

s = {1,2,3}
result = find_subsets(s)
pritn(result)",Syntax Error,OOP
Transform the following algorithm description into a working python function.,"Given a list of numbers, find the sum of the elements in the list.","def sum_list(nums_list):
    total = 0
    for num in nums_list:
        total += num
    return total","def sum_list(nums_list):
    total = 0
    for num ",Incomplete Answer,Recursion
Create a web API with Python and Flask to give the current date and time.,,"from flask import Flask
import datetime

app = Flask(__name__)

@app.route('/datetime')
def get_datetime():
    return datetime.datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")

if __name__ == '__main__':
    app.run()","from flask import Flask
import datetime

app = Flask(__name__)

@app.route('/datetime')
def get_datetime():
    return datetime.datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")

if __name__ == '__main__':
    app.run()",correct,String Manipulation
Create code to multiply two matrices in Python.,"A = [[1, 2],
     [3, 4]]
B = [[4, 3],
     [2, 1]]","def matrixMultiplication(A, B):
	N = len(A)
	C = [[0 for x in range(N)] for y in range(N)]

	for i in range(N):
		for j in range(N):
			for k in range(N):
				C[i][j] += A[i][k] * B[k][j]

	return C

A = [[1,2],
     [3,4]]
B = [[4,3],
     [2,1]]

print(matrixMultiplication(A, B))

#output: [[8, 5], [20, 13]]","def matrixMultiplication(A, B):
	N = len(A)
	C = [[0 for x in range(N)] for y in range(N)]

	for i in range(N):
		for j in range(N):
			for k in range(N):
				C[i][j] += A[i][k] * B[k][j]

	return C

A = [[1,2],
     [3,4]]
B = [[4,3],
     [2,1]]

print(matrixMultiplication(A, B))

#output: [[8, 5], [20, 13]]",correct,File I/O
Construct a function in Python to calculate the volume of a sphere.,,"def sphere_volume(radius): 
    return (4/3) * 3.14 * (radius*radius*radius) 

# Program to test above function
radius = 3
volume = sphere_volume(radius)
print(""Volume of a sphere with radius %d = %.2f"" %(radius, volume))","def sphere_volume(radius): 
    return (4/3) * 3.14 * (radius*radius*radius) 

# Program to test above function
radius = 3
volume = sphere_volume(radius)
print(""Volume of a sphere with radius %d = %.2f"" %(radius, volume))",correct,OOP
Create a python program to calculate the sum of two numbers and show the result in the console.,"12, 7","# Calculate the sum of two numbers
num1 = 12
num2 = 7
sum = num1 + num2

# Print the result
print('The sum of two numbers is ', sum)","# Calculate the sum of two numbers
num1 = 12
num2 = 7
sum = num1 +",Incomplete Answer,File I/O
Combine multiple lists using Python and preserve duplicates.,"list1 = [1, 2, 3]
list2 = [2, 3, 4]","combined_list = list1 + list2

# preserves duplicates
print(list(set(combined_list)))","combined_list = list1 + list2

# preserves",Incomplete Answer,File I/O
Create a Python script to calculate the total number of visitors on a Web page.,"Number of visitors per day (example: 2000, 1500, 2500, 1800)","visitors_per_day = [2000, 1500, 2500, 1800]
total_visitors = sum(visitors_per_day)

print(""Total number of visitors:"", total_visitors)","visitors_per_day = [2000, 1500, 2500, 1800]
total_visitors = sum(visitors_per_day)

print(""Total number of visitors:"", total_visitors)",correct,Loops
Generate the syntax tree for a given Python expression.,"expression = ""(A + B) * (C + D)""","import ast

tree = ast.parse(expression)","import ast

tree = ast.parse(expression)",correct,String Manipulation
Create a recursive Python program to find the sum of all the odd numbers between a given number x and 0.,x = 4,"def sum_odd_recurse(num):
    if num == 0:
        return 0
    elif num % 2 != 0:
        return num + sum_odd_recurse(num - 1)
    else:
        return sum_odd_recurse(num - 1)

# driver code
x = 4
print(sum_odd_recurse(x)) # Output: 9 (1+3+5)","def sum_odd_recurse(num):
    if num == 0:
        return 0
    elif num % 2 != 0:
        return num + sum_odd_recurse(num - 1)
    else:
        return sum_odd_recurse(num - 1)

# driver code
x = 4
print(sum_odd_recurse(x)) # Output: 9 (1+3+5)",correct,Recursion
Suggest a completion for the following Python code that finds the median of a list of numbers.,"def median(nums):
    nums.sort()","def median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        left = len(nums) // 2 - 1
        right = len(nums) // 2
        return (nums[left] + nums[right]) / 2
    else:
        middle = len(nums) // 2
        return nums[middle]","def median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        left = len(nums) // 2 - 1
        right = len(nums)",Incomplete Answer,String Manipulation
Create a for loop in Python to reverse a given string.,Text,"text = ""Text""
rev_text = """" 
  
for i in range(len(text) - 1, -1, -1): 
    rev_text = rev_text + text[i] 
  
print(rev_text)","text = ""Text""
rev_text = """" 
  
for i in range(len(text) - 1, ",Incomplete Answer,Loops
Create a Python program to count the occurrence of each character in a given string and return a dictionary object.,,"def count_characters(string):
    chars = {}
    for char in string:
        if char in chars:
            chars[char] += 1
        else:
            chars[char] = 1
    return chars","def count_characters(string):
    chars = {}
    for char in string:
        if char in cha",Incomplete Answer,String Manipulation
Create an algorithm in Python to rotate an array of numbers by k elements.,"Array: [1,2,3,4,5], k=2","def rotate_array(arr, k):
 n = len(arr)
 
 for i in range(k):
  temp = arr[n-1]
  for i in range(n-1,0,-1):
   arr[i] = arr[i-1]
  arr[0] = temp
  
 return arr
 
print(rotate_array([1,2,3,4,5],2)) # prints [4,5,1,2,3]","def rotate_array(arr, k):
 n = len(arr)
 
 for i in range(k):
  temp = arr[n-1]
  for i in range(n-1,0,-1):
",Incomplete Answer,OOP
Create a Python program which takes a series of integers as input and returns the largest.,"ins = [1, 5, 8, 3]","def get_max(ins):
    return max(ins)","def get_max(ins):
",Incomplete Answer,String Manipulation
Design an algorithm in Python to replace an element in a given list of numbers at a given position with another number.,"list: [1, 2, 3, 4, 5],  element: 8,  position: 3","def replace_elem(lst, val, pos):
    lst[pos] = val
    return lst

list = [1, 2, 3, 4, 5]
element = 8
position = 3

result = replace_elem(list, element, position)
print('After replacing element: ', result)","def replace_elem(lst, val, pos):
    lst[pos] = val
    return lst

list = [1, 2, 3, 4, 5]
element = 8
position = 3

result = replace_elem(list, element, position)
print(name, 'After replacing element: ', result)",Syntax Error,File I/O
Re-structure the following code so that it can be written using a for loop in Python.,"i = 1
while i < 5:
 print(i)
 i += 1","for i in range(1, 5):
    print(i)","for i in range(1, 5)
    print(i)",Syntax Error,Loops
Design an algorithm in Python that finds all the elements of an array that sum to a given number.,,"def findElements(arr, sum): 
    result = [] 
    for i in range(0,len(arr)-1): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == sum: 
                result.append([arr[i], arr[j]]) 
    return result 

arr = [3, 5, 2, -4, 8, 11] 
sum = 7

print(findElements(arr, sum))","def findElements(arr, sum) 
    result = [] 
    for i in range(0,len(arr)-1) 
        for j in range(i + 1, len(arr)) 
            if arr[i] + arr[j] == sum 
                result.append([arr[i], arr[j]]) 
    return result 

arr = [3, 5, 2, -4, 8, 11] 
sum = 7

print(findElements(arr, sum))",Syntax Error,String Manipulation
Write a python function to check whether all the characters in a given string are unique.,,"def unique_Characters(str):
    for i in range(len(str)):
        for j in range(i + 1,len(str)): 
            if (str[i] == str[j]):
                return False;
    return True;","def unique_Characters(str:
    for i in range(len(str:
        for j in range(i + 1,len(str: 
            if (str[i] == str[j]:
                return False;
    return True;",Syntax Error,File I/O
Create an array of length 5 in Python and print the contents.,,"myArray = [1,2,3,4,5]
print(myArray)","myArray = [1,2,3,4,5]
print(myArray)",correct,File I/O
Write a Python function to insert a list of elements into a given list according to the given index.,"list = [1, 2, 3] 
index = 1 
elements = [4,5]","def insert_list(list, index, elements): 
    return (list[0:index] + elements + list[index:])","def insert_list(list, index, elements: 
    return (list[0:index] + elements + list[index:]",Syntax Error,File I/O
Optimize the following Python code for faster runtime performance,"for i in range(5):
    print(""Hello"")","for i in range(5):
    print(""Hello"", end=""\n"")","for i in range(5):
    ",Incomplete Answer,String Manipulation
"Create a function in Python to normalize an array of integers to range [0,1].","[3, 4, 6, 8, 10]","def normalize(arr):
    minVal = min(arr)
    maxVal = max(arr)
    normalizedArr = [(x - minVal) / (maxVal - minVal) for x in arr]
    return normalizedArr

result = normalize([3, 4, 6, 8, 10])
print(result)  // [0.0, 0.2, 0.4, 0.6, 0.8]","def normalize(arr):
    minVal = min(arr)
    maxVal = max(arr)
    normalizedArr = [(x - minVal) / (maxVal - minVal) f",Incomplete Answer,OOP
Can you develop a Python program to implement a stack data structure?,,"class Stack:
    def __init__(self):
        self.items = []

    def isEmpty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def peek(self):
        return self.items[len(self.items)-1]

    def size(self):
        return len(self.items)","class Stack:
    def __init__(self):
        self.items = []

    def isEmpty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def peek(self):
        return self.items[len(self.items)-1]

    def size(self):
        return len(self.items)",correct,Recursion
"Create a JSON object for an employee. The employee should have a unique ID, name, email address, date of birth, and list of skills.",,"{
  ""id"": 1,
  ""name"": ""John Smith"",
  ""email"": ""john@example.com"",
  ""dob"": ""1996-02-28"",
  ""skills"": [
    ""JavaScript"",
    ""HTML"",
    ""CSS"",
    ""Python""
  ]
}","{
  ""id"": 1,
  ""name"": ""John Smith"",
  ""email"": ""john@example.com"",
  ""dob"": ""1996-02-28"",
  ""skills"": [
    ""JavaScript"",
    ""HTML"",
    ""CSS"",
    ""Python""
  ]
}",correct,String Manipulation
Construct a for loop in Python to print the characters in a string.,"""Hello World""","for char in ""Hello World"":
    print(char)","for char in ""Hello World"":
    print(char)",correct,String Manipulation
Create a for loop in Python to print out all numbers from 0 to 10 (inclusive).,,"for i in range(11):
    print(i)","for i in range(11):
    print(i)",correct,OOP
"Consult the documentation and write python code to create a thread that prints ""Hello World"".",,"import threading
 
def print_message():
    print(""Hello World"")
 
# create thread object
thread_obj = threading.Thread(target=print_message)
 
# start thread
thread_obj.start()","import threading
 
def print_message():
    print(""Hello World"")
 
# create thread object
thread_obj = threading.Thread(target=print_message)
 
# start thread
thread_obj.start()",correct,String Manipulation
"Given a list of numbers, write a Python program to calculate the mean.","=[5,2,10,3,7]","def calculate_mean(nums):
    return sum(nums) / len(nums)

nums = [5,2,10,3,7]
mean = calculate_mean(nums)
print(mean)  # Output: 5.6","def calculate_mean(nums):
    return sum(nums) / len(nums)

nums = ",Incomplete Answer,Loops
Optimize the given Python code so that it runs more efficiently.,"def calculateSum(a, b): 
    total = 0 
    
    for i in range(a,b+1): 
        total += i 
 
    return total","def calculateSum(a, b): 
    return int((b - a + 1) * (a + b) / 2)","def calculateSum(a, b): 
    return int((b - a + 1) * (a + b) / 2)",correct,Loops
"Generate a Python function that takes a list as input, and returns the number of values in the list that are greater than the average of the values in the list.","input_list = [4, 8, 6, 3, 10]","def count_above_average(input_list): 
 average = sum(input_list)/len(input_list)
 count = 0
 for value in input_list: 
  if value > average:  
   count += 1
 return count","def count_above_average(input_list): 
 average = sum(input_list)/len(input_list)
 count = 0
 for value in input_list: 
  if value > average:  
   count += 1
 return count",correct,File I/O
Rewrite the following Python program using the try/except approach.,"a = 3
b = 0
c = a / b","try:
    c = a / b
except ZeroDivisionError:
   print(""Division by zero error!"")","try:
    c = a / b
except ZeroDivisionEr",Incomplete Answer,File I/O
Rewrite a Python function given a few specific requirements.,"def is_prime(n):
 if n < 2:
 return False
 for i in range(2, n):
 if n % i == 0:
 return False
 return True","def is_prime(n):
 if n < 2:
 return False
 elif n == 2:
 return True
 elif n > 2 and n % 2 == 0:
 return False
 for i in range(3, int(n**0.5)+1, 2):
 if n % i == 0:
 return False
 return True","def is_prime(n):
 if n < 2:
 return False
 elif n == 2:
 return True
 elif n > 2 and n % 2 == 0",Incomplete Answer,OOP
Generate a Python program to print out square numbers up to 10.,,"for i in range(1,11):
    print(i**2)","for i in range(1,11):
    pritn(i**2)",Syntax Error,File I/O
Write a Python function that takes a list of words as input and capitalizes the first character of each element in the list.,"[""apple"", ""banana"", ""strawberry""]","def capitalize(words):
  return [word.capitalize() for word in words]

input_words = [""apple"", ""banana"", ""strawberry""]
capitalized_words = capitalize(input_words)
print(capitalized_words)","def capitalize(words):
  return [word.capitalize() for word in words]

input_words = [""apple""",Incomplete Answer,File I/O
"Write a code for sorting the words within a sentence, alphabetically.",Python is a great language,"""""""
Write a code for sorting the words within a sentence, alphabetically.
""""""

def sort_words_alphabetically(sentence):
    words = sentence.split()
    words.sort()
    return ' '.join(words)

if __name__ == '__main__':
    sentence = 'Python is a great language'
    print(sort_words_alphabetically(sentence))","""""""
Write a code for sorting the words within a sentence, alphabetically.
""""""

def sort_words_alphabetically(sentence:
    words = sentence.split(
    words.sort(
    return ' '.join(words

if __name__ == '__main__':
    sentence = 'Python is a great language'
    print(sort_words_alphabetically(sentence",Syntax Error,Recursion
Create a Python program that multiplies two input numbers and prints the result.,"a = 3
b = 4","def multiply(a, b):
    result = a * b
    print(result)

multiply(a, b)","def multiply(a, b):
result = a * b
print(result)

multiply(a, b)",Syntax Error,String Manipulation
Create a Python program that uses the NumPy library to generate a series of random numbers.,,"import numpy as np

# Generate random integers within a specified range
x = np.random.randint(0, 10, size=(3, 3))

# Generate random floats within a specified range
y = np.random.uniform(low=0.0, high=10.0, size=(3, 3))

# Generate random numbers with numpy
z = np.random.rand(3,3)

print('Random integers:', x, '\n') 
print('Random floats:', y, '\n') 
print('Random numbers:', z)","import numpy as np

# Generate random integers within a specified range
x = np.random.randint(0, 10, size=(3, 3))

# Generate random floats within a specified range
y = np.random.uniform(low",Incomplete Answer,String Manipulation
Write a python program to calculate the absolute differences between corresponding elements of two arrays of the same size.,"arr1 = [1, 4, 5]
arr2 = [3, 2, 1]","def calc_diff(arr1, arr2):
    # Initialize difference array
    diff = []

    # Iterate through arrays
    for i in range(len(arr1)):
        # Calculate the difference between two elements
        diff.append(abs(arr1[i] - arr2[i]))
        
    return diff","def calc_diff(arr1, arr2):
    # Initialize difference array
    diff = []

    # Iterate through arrays
    for i in range(len(arr1)):
        # Calculate the difference between two elements
        diff.append(abs(arr1[i] - arr2[i]))
        
    return diff",correct,File I/O
Write a function in Python to convert a given date in the format mm-dd-yyyy to the format dd-mm-yyyy.,,"def convertDateFormat(inputDate):
    dateList = inputDate.split('-')
    newFormat = dateList[1] + ""-"" + dateList[0] + ""-"" + dateList[2]
    return newFormat","def convertDateFormat(inputDate):
    dateList = inputDate.split('-')
    newFormat = dateList[1] + ""-"" + dateList[0] + ""-"" + dateList[2]
    return newFormat",Syntax Error,Recursion
"Create a Python program that receives a list of numbers, and generates two new lists: one containing the even elements from the original list, and one containing the odd elements.","[1, 2, 3, 4, 5, 6]","def find_even_odd(nums):
  even_list = []
  odd_list = []
  for num in nums:
    if num % 2 == 0:
      even_list.append(num)
    else:
      odd_list.append(num)
  
  return even_list, odd_list
  
print(find_even_odd([1, 2, 3, 4, 5, 6]))","def find_even_odd(nums):
  even_list = []
  odd_list = []
  for num in nums:
if num % 2 == 0:
  even_list.append(num)
else:
  odd_list.append(num)
  
  return even_list, odd_list
  
print(find_even_odd([1, 2, 3, 4, 5, 6]))",Syntax Error,String Manipulation
Implement a Python program to find the length of a given string.,"string = ""Hello World""","def stringLength(string):
    return len(string)

result = stringLength(""Hello World"")
print(result)","def stringLength(string):
    return len(string)

",Incomplete Answer,String Manipulation
Write a function to extract all the adjacent coordinates of the given coordinate tuple.,,"def adjac(ele, sub = []): 
  if not ele: 
     yield sub 
  else: 
     yield from [idx for j in range(ele[0] - 1, ele[0] + 2) 
                for idx in adjac(ele[1:], sub + [j])] 
def get_coordinates(test_tup):
  res = list(adjac(test_tup))
  return (res) ","def adjac(ele, sub = []): 
  if not ele: 
     yield sub 
  else: 
     yield from [idx for j in range(ele[0] - 1, ele[0] + 2) 
",Incomplete Answer,Loops
Write a Python function to find the sum of a series of numbers.,"[1, 2, 3, 4, 5]","def sumSeries(arr):
  total = 0
  for num in arr:
    total += num
  return total

result = sumSeries([1, 2, 3, 4, 5])
print(result)","def sumSeries(arr:
  total = 0
  for num in arr:
    total += num
  return total

result = sumSeries([1, 2, 3, 4, 5]
print(result",Syntax Error,OOP
Rewrite the javascript code with python code.,"// This program prints the values 1 to 10
for (var i = 1; i <= 10; i++) {
  console.log(""The number is "" + i);
}","# This function prints the values 1 to 10
def print_numbers(): 
    for i in range(1,11): 
        print(""The number is "" + str(i)) 
          
print_numbers()","# This function prints the values 1 to 10
def print_numbers(): 
    for i in ra",Incomplete Answer,Loops
Write a Python program that takes a word as input and prints out the word in pig latin.,,"def pig_latin(word):
    if len(word) > 0 and word.isalpha():
        first_letter = word[0]
        pig_word = word[1:] + first_letter + ""ay""
    else:
        pig_word = ""Please enter a valid word!""
    return pig_word

result = pig_latin(""word"")
print(result)","def pig_latin(word):
    if len(word) > 0 and word.isalpha():
        first_letter = word[0]
        pig_word = word[1:] + first_letter + ""ay""
    else:
        pig_word = ""Please enter a valid word!""
    return pig_word

result = pig_latin(""word"")
print(name, result)",Syntax Error,String Manipulation
"Given an array of strings, you need to write a Python program to move the elements that contain a certain letter to the end of the array.","strings = [""abcd"", ""efgh"", ""ijkl"", ""mnop"", ""qrst""]
letter = ""m""","def move_letter(strings, letter):
 new_list = []
 for s in strings:
  if letter not in s:
   new_list.append(s)
  else:
   new_list.append(s)
 return new_list","def move_letter(strings, letter):
 new_list = []
 for s in strings:
  if letter not in s:
   new_list.append(s)
  else:
   new_list.append(s)
 return new_list",correct,Loops
Design a class in Python to store the customer information.,,"class Customer:
 def __init__(self, customer_id, customer_name, customer_address):
 self.customer_id= customer_id
 self.customer_name = customer_name
 self.customer_address = customer_address","class Customer:
 def __init__(self, customer_id, customer_name, customer_address):
 self.custom",Incomplete Answer,Loops
Optimize a Python program that processes a 2d array and stores the transpose output in a new array.,,"def transpose(A):
 n = len(A)
 m = len(A[0])

 B = [[0 for x in range(n)] for x in range(m)]

 for i in range(n):
 for j in range(m):
 B[j][i] = A[i][j]

 return B","def transpose(A):
 n = len(A)
 m = len(A[0])

 B = [[0 for x in range(n)] for x i",Incomplete Answer,Recursion
Write a python function to count all the substrings starting and ending with same characters.,,"def check_Equality(s): 
    return (ord(s[0]) == ord(s[len(s) - 1])); 
def count_Substring_With_Equal_Ends(s): 
    result = 0; 
    n = len(s); 
    for i in range(n): 
        for j in range(1,n-i+1):  
            if (check_Equality(s[i:i+j])): 
                result+=1; 
    return result; ","def check_Equality(s): 
    return (ord(s[0]) == ord(s[len(s) - 1])); 
def count_Substring_With_Equal_Ends(s): 
    result = 0; 
    n = len(s); 
 ",Incomplete Answer,Recursion
Write a python function to find sum of inverse of divisors.,,"def Sum_of_Inverse_Divisors(N,Sum): 
    ans = float(Sum)*1.0 /float(N);  
    return round(ans,2); ","def Sum_of_Inverse_Divisors(N,Sum): 
    ans = flo",Incomplete Answer,Loops
Write a Python program to generate a bar chart with labels using matplotlib from a given list of numbers.,"list = [1, 2, 3, 4, 5]","import matplotlib.pyplot as plt

list = [1, 2, 3, 4, 5]

plt.bar(range(len(list)), list)
plt.xlabel('Index')
plt.ylabel('Value')
plt.title('My Bar Chart')

plt.show()","import matplotlib.pyplot as plt

list = [1, 2, 3, 4, 5]

plt.bar(range(len(list)), ",Incomplete Answer,String Manipulation
Write a Python program to take the input of two numbers and output the larger one.,,"def max_num(a, b):
    if a > b:
        return a
    else:
        return b

a = int(input(""Enter a number: ""))
b = int(input(""Enter another number: ""))

print(max_num(a, b))","def max_num(a, b):
if a > b:
    return a
else:
    return b

a = int(input(""Enter a number: ""))
b = int(input(""Enter another number: ""))

print(max_num(a, b))",Syntax Error,File I/O
Write a Python program to take a string as input and to create an object that contains all unique characters in the string as keys and the number of occurrences of the character as values.,"string = ""This is a string""","def char_freq(string):
 freq_dict = {}
 
 for char in string:
 if char in freq_dict:
 freq_dict[char] += 1
 else: 
 freq_dict[char] = 1
 
 return freq_dict","def char_freq(string):
 freq_dict = {}
 
 for char in string:
 if char in freq_dict:
 freq_dict[char] += 1
 else: 
 freq_dict[char] = 1
 
 return freq_dict",correct,String Manipulation
Create a REST API endpoint in Python with a GET route to query a database. The route should accept a 'name' as a query parameter and return a list of results from the query.,name= 'John',"@app.route('/api/search', methods=['GET'])
def search():
name = request.args.get('name')
query = _db.execute(""SELECT * FROM users WHERE name=?"", [name]).fetchall()
return jsonify(query)","@app.route('/api/search', methods=['GET'])
def search():
name = request.args.get('name')
query = _db.execute(""SELECT * FROM users WHERE name=?"", [name]).fetchall()
return jsonify(query)",Syntax Error,OOP
Propose a series of Python commands for downloading the content of a web page.,,"import requests

page_url = 'https://www.example.com'  
page = requests.get(page_url)

content = page.content","import requests

page_url = 'https://www.example.com' ",Incomplete Answer,Recursion
Write a python function to find the first repeated character in a given string.,,"def first_repeated_char(str1):
  for index,c in enumerate(str1):
    if str1[:index+1].count(c) > 1:
      return c 
  return ""None""","def first_repeated_char(str1):
  for index,c in enumerate(str1):
 ",Incomplete Answer,Loops
Create a python program to print out the top 10 coins listed on CoinMarketCap.,,"import requests

url = ""https://api.coinmarketcap.com/v2/ticker/""

response = requests.get(url)

data = response.json()

print(data['data'][0]['name'], data['data'][0]['quotes']['USD']['price'])
for i in range(1, 10):
    print(data['data'][i]['name'], data['data'][i]['quotes']['USD']['price'])","import requests

url = ""https://api.coinmarketcap.com/v2/ticker/""

response = requests.get(url)

data = response.json()

print(name, data['data'][0]['name'], data['data'][0]['quotes']['USD']['price'])
for i in range(1, 10):
    print(name, data['data'][i]['name'], data['data'][i]['quotes']['USD']['price'])",Syntax Error,String Manipulation
Write a python program to print the elements in a list which are not repeated more than once.,"[1, 2, 3, 2, 4, 2, 3]","result = []
for ele in list:
    if list.count(ele) == 1:
        result.append(ele)
print(result) # Output: [1, 4]","result = []
for ele in list:
    if list.count(ele) == 1:",Incomplete Answer,Loops
Write a Python script that finds the most common element of a given list.,"list = [3, 5, 6, 3, 7, 8, 3, 4]","def find_most_frequent_element(list):
 count_map = {}
 max_element= list[0]
 max_count = 1
 for num in list:
  if num in count_map:
   count_map[num] += 1
  else:
   count_map[num] = 1
 for num in count_map:
  if count_map[num] > max_count:
   max_element = num
   max_count = count_map[num]
 return max_element","def find_most_frequent_element(list):
 count_map = {}
 max_element= list[0]
 max_count = 1
 for num in list:
  if num in count_map:
   count_map[num] += 1
  else:
   count_map[num] = 1
 for num in count_map:
  if count_map[num] > max_count:
   max_element = num
   max_count = count_map[num]
 return max_element",correct,Loops
"Create a class in Python that represents a Tree node with the following attributes - name, value, left, right.",,"class TreeNode:
    def __init__(self, name, value, left=None, right=None):
        self.name = name
        self.value = value
        self.left = left
        self.right = right","class TreeNode:
def __init__(self, name, value, left=None, right=None):
    self.name = name
    self.value = value
    self.left = left
    self.right = right",Syntax Error,File I/O
Generate a Python program to calculate the square root of a given number using Newton’s Method.,x = 36,"def square_root(x):
    guess = x/2
    while True:
        next_guess = 0.5 * (guess + (x/guess))
        if abs(guess - next_guess) < 0.0001:
            break
            guess = next_guess
    return guess

print(square_root(36)) # prints 6.0","def square_root(x):
    guess = x/2
    while True:
        next_guess = 0.5 * (guess + (x/guess))
        if abs(guess - n",Incomplete Answer,Recursion
Develop a Python script to identify duplicate characters in a string.,,"def find_duplicates(text):
  n = len(text)
  duplicates = []

  for i in range(n):
    for j in range(i+1, n):
      if text[i] == text[j]:
        duplicates.append(text[i])

  return duplicates","def find_duplicates(text):
  n = len(text)
  duplicates = []

  for i in range(n):
    for j in range(i+1, n):
      if text[i] == text[j]:
        duplicates.append(text[i])

  return duplicates",correct,File I/O
Create a Python function to sum all the middle elements of a given list.,"numbers = [5, 10, 15, 20]","def middle_sum(numbers):
    if len(numbers) == 0:
        return None
    
    if len(numbers) % 2 == 1:
        return numbers[len(numbers) // 2]
    else:
        return numbers[len(numbers) // 2 - 1] + numbers[len(numbers) // 2]","def middle_sum(numbers):
    if len(numbers) == 0:
        return None
    
    if len(numbers) % 2 == 1:
        re",Incomplete Answer,OOP
Generate a Python code snippet to find the minimum value of a list of integers.,,"def find_min(list):
    min_value = list[0]

    for value in list:
        if value < min_value:
            min_value = value

    return min_value","def find_min(list):
    min_value = list[0]

    for value in list:
        if value < min_value:
            min_value = value

    return min_value",correct,String Manipulation
Generate a Python program that searches a list of given integers for a given target value and returns its index if found.,"list = [2, 3, 4, 5, 6], target = 4","def search(list, target):
  for i in range(len(list)):
    if list[i] == target:
      return i
  return -1

list = [2, 3, 4, 5, 6]
target = 4

index = search(list, target)
if index == -1:
  print(""The target was not found."")
else:
  print(""The target was found at index %d."" % index)","def search(list, target):
  for i in range(len(list)):
    if list[i] == target:
      return i
  return -1

list = [2, 3, 4, 5, 6]
target = 4",Incomplete Answer,String Manipulation
"Create a program in Python that takes a list of integers, and prints the sum of the even numbers and the sum of the odd numbers.","list=[2,4,5,7,1,3]","list=[2,4,5,7,1,3]

even_sum= 6
odd_sum= 15

def sum_even_odd(list):
    even_sum=0
    odd_sum=0
    
    for num in list:
        if num % 2 == 0:
            even_sum+=num
        else:
            odd_sum+=num 
    
    print(""even_sum="",even_sum)
    print(""odd_sum="",odd_sum)
    
sum_even_odd(list)","list=[2,4,5,7,1,3]

even_sum= 6
odd_sum= 15

def sum_even_odd(list):
even_sum=0
odd_sum=0

for num in list:
    if num % 2 == 0:
        even_sum+=num
    else:
        odd_sum+=num 

print(""even_sum="",even_sum)
print(""odd_sum="",odd_sum)

sum_even_odd(list)",Syntax Error,String Manipulation
Trace the recursive Fibonacci algorithm in Python and test its execution time for different values of n.,num = 10,"import time 

def fib(n): 
 if n<0: 
  print(""Incorrect input"") 
 elif n==1: 
  return 0
 elif n==2: 
  return 1
 else: 
  return fib(n-1)+fib(n-2) 

start = time.time() 

num = 10 
print(fib(num))

print(""Time taken:"", time.time()-start)","import time 

def fib(n): 
 if n<0: 
  print(""Incorrect input"") 
 elif n==1: 
  return 0
 elif n==2: 
  return 1
 else: 
  return fib(n-1)+fib(n-2) 

start = time.time() 

num = 10 
print(fib(num))

print(""Time taken:"", time.time()-start)",correct,File I/O
Create a Python 3 program that takes an integer input from the user and prints its cube.,,"number = int(input(""Please enter a number: ""))
cube = number**3
print(""The cube of the number is: "" + str(cube))","number = int(input(""Please enter a number: ""))
cube = number**3
print(""The cube of the number is: "" + str(cube))",Syntax Error,File I/O
Develop an algorithm to check if a string S is a palindrome in Python.,"String S = ""racecar""","def is_palindrome(s):
    # Convert strings to lowercase
    s = s.lower()
 
    # Iterate through middle of string with indices 
    for i in range(len(s) // 2):
        if s[i] != s[len(s) - i - 1]:
            return False
    return True","def is_palindrome(s):
    # Convert strings to lowercase
    s = s.lower()
 
    # Iterate through middle of string with indices 
    for i in range(len(s) // 2):
        if s[i] != s[len(s) - i - 1]:
            return False
    return True",correct,Loops
Generate a code snippet to reverse a string in Python.,,"def reverse(s): 
	return s[::-1]","def reverse(s): 
	return s[::-1]",correct,Recursion
Write a python function to set all odd bits of a given number.,,"def odd_bit_set_number(n):
    count = 0;res = 0;temp = n
    while temp > 0:
        if count % 2 == 0:
            res |= (1 << count)
        count += 1
        temp >>= 1
    return (n | res)","def odd_bit_set_number(n):
    count = 0;res = 0;temp = n
    while temp > 0:
        if count % 2 == 0:
            res |= (1 << count)
        count += 1
        temp >>= 1
    return (n | res)",Syntax Error,Recursion
Can you write a python program to produce the intersection of two given lists?,"list 1: [2, 3, 4] 
list 2: [3, 5, 6, 4]","list1 = [2, 3, 4] 
list2 = [3, 5, 6, 4]

# create a set of elements in list1
s1 = set(list1)

# create a set of elements in list2
s2 = set(list2)

# find the intersection 
intersection = s1.intersection(s2)

# print the intersection 
print(intersection) 
# prints {3, 4}","list1 = [2, 3, 4] 
list2 = [3, 5, 6, 4]

# create a set of elements in list1
s1 = set(list1)

# create a set of elements in list2
s2 = set(list2)

# find the intersection 
intersection = s1.intersection(s2)

# print the intersection 
print(intersection) 
# prints {3, 4}",Syntax Error,OOP
Create a Python program to convert a comma-separated string into a list.,"""1,2,3,4,5""","string = ""1,2,3,4,5""
list = string.split("","")
print(list)","string = ""1,2,3,4,5""
list = string.split("","")
pritn(list)",Syntax Error,Loops
"Create a Python program which takes a list of words as input, and prints out the frequent words.","Words: [""python"", ""is"", ""a"", ""programming"", ""language""]","from collections import Counter

words = [""python"", ""is"", ""a"", ""programming"", ""language""]

word_count = Counter(words) 

for k,v in word_count.items(): 
    print(k,v) 

# To get the most frequent word 
most_freq_word = max(word_count, key=word_count.get) 

print(""Most frequent word is:"", most_freq_word)","from collections import Counter

words = [""python"", ""is"", ""a"", ""programming"", ""language""]

word_count = Counter(words) 

for k,v in word_count.items(): ",Incomplete Answer,Recursion
Optimize the following Python code to maximize performance.,"for row in records:
    for key, value in row.items():
        do_something(key, value)","for row in records:
    for key, value in row.items():
        try:
            do_something(key, value)
        except Exception:
            pass","for row in records:
    for key, value in row.items():
        try:
            do_something(key, value)
        except Exception:
            pass",correct,String Manipulation
"In Python, create a lambda function to input two numbers, and return their product.",,"product = lambda x, y : x * y",product = lamb,Incomplete Answer,OOP
Create a Python method to get the index of the largest element in an array.,"[1,2,3,4,5]","def find_largest_index(arr):
    largest = float('-inf')
    largest_index = 0
    for i in range(len(arr)):
        num = arr[i]
        if num > largest:
            largest = num
            largest_index = i
    return largest_index 

print(find_largest_index([1,2,3,4,5])) # 4","def find_largest_index(arr):
    largest = float('-inf')
    largest_index = 0
    for i in range(len(arr)):
        num = arr[i]
        if num > largest:
            largest = num
            largest_index = i
    return largest_index 

print(find_largest_index([1,2,3,4,5])) # 4",correct,String Manipulation
Write a Python program to convert a given time in 12 hour format to 24 hour format.,12:05 PM,"def convert_to_24(time):
    if time[-2:] == ""PM"" and time[:2] != ""12"":
        return str(int(time[:2])+12)+time[2:-2]
    elif time[-2:] == ""AM"" and time[:2] == ""12"":
        return ""00""+time[2:-2]
    else:
        return time[:-2]","def convert_to_24(time):
    if time[-2:] == ""PM"" and time[:2] != ""12"":
        return str(int(time[:2])+12)+time[2:-",Incomplete Answer,Loops
Create an algorithm in Python to sort an array of numbers.,"[9, 3, 5, 1, 6]","def sortArray(arr):
    for i in range(len(arr)):
        for j in range(i+1,len(arr)):
            if arr[i] > arr[j]:
                temp = arr[i]
                arr[i] = arr[j]
                arr[j] = temp
    return arr

arr = [9, 3, 5, 1, 6]
print(sortArray(arr))","def sortArray(arr):
for i in range(len(arr)):
    for j in range(i+1,len(arr)):
        if arr[i] > arr[j]:
            temp = arr[i]
            arr[i] = arr[j]
            arr[j] = temp
return arr

arr = [9, 3, 5, 1, 6]
print(sortArray(arr))",Syntax Error,Recursion
Translate this code from JavaScript to Python,"const helloWorld = () =>  console.log(""Hello World!"")","def hello_world():
    print(""Hello World!"")","def hello_world():
    print(""Hello World!"")",correct,OOP
Edit the following Python program to count the occurrence of the word “apple” in a given sentence.,"sentence = ""I have an apple, and the apple is delicious.""","sentence = ""I have an apple, and the apple is delicious.""

word = ""apple""

count = 0

for word in sentence.split():
    if(word == ""apple""):
        count = count + 1

print(""The no. of occurrences of the word 'apple' is:"", count)","sentence = ""I have an apple, and the apple is delicious.""

word = ""apple""

count = 0

for word in sentence.split():
    if(word == ""apple""):
        count = count + 1

pritn(""The no. of occurrences of the word 'apple' is:"", count)",Syntax Error,File I/O
Generate a Python program to find all the common elements of two given lists.,"[1, 2, 3], [3, 4, 5]","def find_common_elements(list1, list2):
 return list(set(list1).intersection(set(list2)))

result = find_common_elements([1, 2, 3], [3, 4, 5])
print(result)","def find_common_elements(list1, list2):
 return list(set(list1).intersection(s",Incomplete Answer,String Manipulation
Generate a python program to help a user create a custom greframe to quickly generate a simple part-of-speech tagged dataset.,,"import spacy

def generate_grammar_based_dataset(sentences):
    nlp = spacy.load('en_core_web_sm')
    dataset = []
    for sentence in sentences:
        doc = nlp(sentence)
        grammarTaggedSentence = [(token.text, token.pos_) for token in doc]
        dataset.append(grammarTaggedSentence)
    return dataset","import spacy

def generate_grammar_based_dataset(sentences):
    nlp = spacy.load('en_core_web_sm')
    dataset = []
    for sentence in sentences:
        doc = nlp(sentence)
        grammarTaggedSentence = [(token.text, token.pos_) for token in doc]
        dataset.append(grammarTaggedSentence)
    return dataset",Syntax Error,Loops
"Write a Python program that prints out the day number of the week (1-7) from the input date given in the format ""yyyy-mm-dd"".",,"#!/usr/bin/env python

import datetime

def get_day_of_week(date):
    day, month, year = [int(d) for d in date.split('-')]
    day_of_week = datetime.date(year, month, day).weekday()
    return day_of_week+1

print get_day_of_week(""2020-05-15"") # Outputs 6 (Friday)","#!/usr/bin/env python

import datetime

def get_day_of_week(date):
    day, month, year = [int(d) for d in date.split('-')]
    day_of_week = datetime.date(year, month, day).weekday()
    return day_of_week+1

print get_day_of_week(""2020-05-15"") # Outputs 6 (Friday)",correct,OOP
Implement a program in Python to separate odd and even numbers in separate arrays.,,"def separate_odd_even(arr):
    odd = []
    even = []
    for num in arr:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return odd, even","def separate_odd_even(arr):
    odd = []
    even = []
    for num in arr:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return odd, even",correct,OOP
Write a Python program to display the first and last colors from the following list.,"Colors: ['Red', 'Green', 'White', 'Black']","# List of colors
colors = ['Red', 'Green', 'White', 'Black']

# First color
print(colors[0])

# Last color
print(colors[-1])","# List of colors
colors = ['Red', 'Green', 'White', 'Black']

# First color
print(colors[0])

# Last color
print(colors[-1])",correct,String Manipulation
"Write a function in Python that takes an input list, multiplies each item in the list by two, and returns the resulting list.",,"def double_list(lst):
    return [x * 2 for x in lst]","def double_list(lst):
    ",Incomplete Answer,Loops
Create a python script that prints out a list of names in alphabetical order.,"Robert, Asher, Aster, Athena","list_of_names= [""Asher"", ""Aster"", ""Athena"", ""Robert""]
list_of_names.sort()

print(list_of_names)","list_of_names= [""Asher"", ""Aster"", ""Athena"", ""Rob",Incomplete Answer,OOP
What is the output of the following Python code?,"def foo(x): 
  if x > 5: 
    return 1
  elif x < 0: 
    return -1
  else: 
    return 0
  
foo(3)",0,0,Incomplete Answer,Recursion
Write a function to find the surface area of a cone.,,"import math
def surfacearea_cone(r,h):
  l = math.sqrt(r * r + h * h)
  SA = math.pi * r * (r + l)
  return SA","import math
def surfacearea_cone(r,h):
  l = math.sqrt(",Incomplete Answer,String Manipulation
Construct a program in Python to prompt the user for their age and display the appropriate greeting.,,"name = input(""What's your name: "")
age = int(input(""How old are you: ""))
 
if age < 18:
  print(""Hello, ""+ name + "", welcome to our website."")
elif age < 60:
  print(""Greetings, ""+ name + "", how can we help you today?"")
else:
  print(""Welcome, ""+ name + "", thanks for visiting us."")","name = input(""What's your name: ""
age = int(input(""How old are you: ""
 
if age < 18:
  print(""Hello, ""+ name + "", welcome to our website.""
elif age < 60:
  print(""Greetings, ""+ name + "", how can we help you today?""
else:
  print(""Welcome, ""+ name + "", thanks for visiting us.""",Syntax Error,Loops
Author a Python program to check if a number is a palindrome.,1991,"def isPalindrome(num):
  numStr = str(num)
  for i in range(0, len(numStr)//2):
    if numStr[i] != numStr[len(numStr)-i-1]:
      return False
  return True

print(isPalindrome(1991)) # Output: True","def isPalindrome(num):
  numStr = str(num)
  for i in range(0, len(numStr)//2):
    if numStr[i] !=",Incomplete Answer,OOP
Write a python function to count the number of squares in a rectangle.,,"def count_Squares(m,n):
    if(n < m):
        temp = m
        m = n
        n = temp
    return ((m * (m + 1) * (2 * m + 1) / 6 + (n - m) * m * (m + 1) / 2))","def count_Squares(m,n):
if(n < m):
    temp = m
    m = n
    n = temp
return ((m * (m + 1) * (2 * m + 1) / 6 + (n - m) * m * (m + 1) / 2))",Syntax Error,Recursion
Write a function to convert the given string of integers into a tuple.,,"def str_to_tuple(test_str):
  res = tuple(map(int, test_str.split(', ')))
  return (res) ","def str_to_tuple(test_str:
  res = tuple(map(int, test_str.split(', '
  return (res ",Syntax Error,OOP
Construct a Python function to redesign a given list to meet a given sorting criteria.,"my_list = [31, 5, 42, 69, 20]","def sort_list(my_list):
    return sorted(my_list)","def sort_list(my_list:
    return sorted(my_list",Syntax Error,File I/O
Develop a Python program that takes a text string as input and displays only those words which contain the letter ‘a’.,"""This is an example of a string to test.""","input_text = 'This is an example of a string to test.'

words = input_text.split()

for word in words:
  if 'a' in word:
    print(word)

# Output: 
an
example
a
string
test.","input_text = 'This is an example of a string to test.'

words = input_text.split()

for word in words:
  if 'a' in word:
    print(name, word)

# Output: 
an
example
a
string
test.",Syntax Error,Loops
Construct a Python program to find all substrings of a given string,String : Python,"def get_all_substrings(input_string): 
	length = len(input_string) 
	return [input_string[i:j+1] for i in range(length)  
							for j in range(i,length)] 

output = get_all_substrings('Python') 
print(output)","def get_all_substrings(input_string): 
	length = len(input_string) 
	return [input_string[i:j+1] for i in range(length)  
							for j in range(i,length)] 

output = get_all_substrings('Python') 
print(output)",correct,Recursion
Generate a Python Class which takes one input 'name' and has two methods 'showName' and 'hideName'.,,"class Name:
    def __init__(self, name):
        self.name = name

    def showName(self):
        print(self.name)

    def hideName(self):
        self.name = '*****'
        print(self.name)","class Name:
    def __init__(self, name):
        self.name = name

    def showName(self):
        print(self.name)

    def hideName(self):
        self.name = '*****'
        print(self.name)",correct,File I/O
Generate a code snippet that implements the linear search algorithm in Python,,"def linear_search(array, element):
    for i in range(len(array)):
        if array[i] == element:
            return i
    return -1","def linear_search(array, element):
    for i in range(len(array)):",Incomplete Answer,OOP
Write code to find the median of an array of integers using Python.,"[2, 4, 5, 7, 8, 9, 11]","def get_median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        return (nums[int(len(nums)/2)] + nums[int((len(nums)/2) - 1)] )/ 2
    else:
        return nums[int(len(nums) / 2)]

nums = [2, 4, 5, 7, 8, 9, 11]
median = get_median(nums)
print(""Median is: "",median)","def get_median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        return (nums[int(len(nums)/2)] + nums[int((len(nums)/2) - 1)] )/",Incomplete Answer,Recursion
Write a python function to reverse the words in a given sentence.,"sentence = ""hello world how are you""","def reverseWords(sentence): 
    words = sentence.split(' ') 
    words = words[::-1] 
    return ' '.join(words) 
      
print(reverseWords(sentence))","def reverseWords(sentence): 
    words = sentence.split(' ') 
    words = w",Incomplete Answer,Loops
Write a Python function that returns the second-largest number from an input list of integers.,,"def second_largest_num(numbers):
    largest_num = max(numbers)
    second_largest = 0
    for num in numbers:
        if (num > second_largest and num < largest_num):
            second_largest = num
    return second_largest

result = second_largest_num([2, 1, 4, 5])
print(result)","def second_largest_num(numbers):
    largest_num = max(numbers)
    second_largest = 0
    for num in numbers:
        if (num > second_large",Incomplete Answer,Recursion
Create a program in Python to evaluate a strinf expression and solve it.,exp = '4+2/3',"def solve_expression(exp):
 # Solve the expression
 return eval(exp)

exp = '4+2/3'
res = solve_expression(exp)
print(res) # Output: 4.666666666666667","def solve_expression(exp:
 # Solve the expression
 return eval(exp

exp = '4+2/3'
res = solve_expression(exp
print(res # Output: 4.666666666666667",Syntax Error,File I/O
Create a class in Python that inherits properties from a parent class named 'Animal'.,,"class Animal:
    def __init__(self, name):
        self.name = name

class Dog(Animal):
    def __init__(self, name, breed):
        super().__init__(name)
        self.breed = breed","class Animal:
    def __init__(self, name):
        self.name = name

class Dog(Animal):
  ",Incomplete Answer,OOP
"Using a machine learning library of your choice, write a program in Python to detect the sentiment of a sentence.",,"import nltk
nltk.download('vader_lexicon')

from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentences = [
 ""This is a great movie!"",
 ""This movie was terrible.""
]

analyzer = SentimentIntensityAnalyzer()

for sentence in sentences:
 scores = analyzer.polarity_scores(sentence)
 print(""{:-<40} {}"".format(sentence, str(scores)))","import nltk
nltk.download('vader_lexicon')

from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentences = [
 ""This is a great movie!"",
 ""This movie was terrible.""
]

analyzer = SentimentIntensityAnalyzer()

for sentence in sentences
 scores = analyzer.polarity_scores(sentence)
 print(""{-<40} {}"".format(sentence, str(scores)))",Syntax Error,Loops
Create a function in Python which takes a string and returns the reversed string,,"def reverseString(string):
    reversedString = """"
    for i in range(len(string) - 1, -1, -1):
        reversedString += string[i]
    return reversedString","def reverseString(string):
    reversedString = """"
    for i in range(len(string) - 1, -1, -1):
        reversedString += string[i]
    return reversedString",Syntax Error,Recursion
Write a Python program that calculates the distance between two points on a two-dimensional plane.,"Point1 (x1: 3, y1: 4); Point2 (x2: -9, y2: -2)","#include <iostream>
#include <math.h>

int main() 
{ 
    int x1 = 3; 
    int y1 = 4; 

    int x2 = -9; 
    int y2 = -2;

    float distance = sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2)); 

    std::cout << ""Distance between the two points is: "" << distance << std::endl; 

    return 0; 
}","#include <iostream>
#include <math.h>

int main() 
{ 
    int x1 = 3; 
    int y1 = 4; 

    int x2 = -9; 
    int y2 = -2;

    float distance ",Incomplete Answer,Recursion
"Using Python, create a function to calculate the volume of a cube with the side length as a parameter.",,"def cube_volume(side):
    # calculate the volume of a cube
    return side**3

volume = cube_volume(5) # volume = 125
print(volume)","def cube_volume(side:
    # calculate the volume of a cube
    return side**3

volume = cube_volume(5 # volume = 125
print(volume",Syntax Error,OOP
Refactor the following Python code to make use of list comprehensions.,"result = []
for x in range(10):
  for y in range(10):
    result.append(x * y)",result = [x * y for x in range(10) for y in range(10)],result = [x * y for x in range(10) for y in range(10)],Syntax Error,Loops
Create a for loop statement in Python to iterate over a list and print the each item in the list.,"[1,2,3,4,5]","for i in [1,2,3,4,5]:
    print(i)","for i in [1,2,3,4,5]:
    pritn(i)",Syntax Error,OOP
Create a Python function which takes an integer and returns True or False depending on whether it is a prime number or not respectively.,,"def is_prime(n):
 if n <= 1:
 return False

 for i in range(2, n):

 if n % i == 0:
 return False

 return True","def is_prime(n)
 if n <= 1
 return False

 for i in range(2, n)

 if n % i == 0
 return False

 return True",Syntax Error,String Manipulation
Generate a 3x3 matrix with random integers in Python.,,"import random
 
def generate_matrix(length):
    matrix = []
    for _ in range(length):
        row = []
        for _ in range(length):
            row.append(random.randint(0,100))
        matrix.append(row)
    return matrix
 
print(generate_matrix(3))","import random
 
def generate_matrix(length):
    matrix = []
    for _ in range(length):
        row = []
        for _ in range(length):
            row.append(random.randint(0,100))
        matrix.append(row)
    return matrix
 
print(name, generate_matrix(3))",Syntax Error,Recursion
"Make a class in Python for a car with these attributes: color, year, make, model.",,"class Car:
    def __init__(self, color, year, make, model):
        self.color = color
        self.year = year
        self.make = make
        self.model = model","class Car:
    def __init__(self, color, year, make, model):
        self.color = ",Incomplete Answer,File I/O
Develop a Python solution to identify parts of speech of a given sentence.,"Sentence: ""I like apples.""","import nltk

sentence = ""I like apples.""
words = nltk.word_tokenize(sentence)
tagged_words = nltk.pos_tag(words)

parts_of_speech = dict()
for word, tag in tagged_words:
  parts_of_speech[word] = tag

print(parts_of_speech)
# Output: {'I': 'PRP', 'like': 'VBP', 'apples': 'NNS'}","import nltk

sentence = ""I like apples.""
words = nltk.word_tokenize(sentence)
tagged_words = nltk.pos_tag(words)

parts_of_speech = dict()
for word, tag in tagged_words:
  parts_of_speech[word] = tag

print(parts_of_speech)
# Output: {'I': 'PRP', 'like': 'VBP', 'apples': 'NNS'}",correct,File I/O
"Write a Python program to optimize an equation of the form ax3 + bx2 + cx + d = 0, where a,b,c and d are given constants and x is a variable.","a = 1, b = -10, c = 32, d = -30","def optimize_equation(a, b, c, d):
    # calculate the discriminant
    discriminant = b**2 - 4*a*c
    x1 = (2*c)/(-b + (discriminant**0.5))
    x2 = (-b - (discriminant**0.5))/(2*a)
    
    # return the optimized values
    return (x1, x2)","def optimize_equation(a, b, c, d:
    # calculate the discriminant
    discriminant = b**2 - 4*a*c
    x1 = (2*c/(-b + (discriminant**0.5
    x2 = (-b - (discriminant**0.5/(2*a
    
    # return the optimized values
    return (x1, x2",Syntax Error,Recursion
Write a function to create a list containing the power of said number in bases raised to the corresponding number in the index using map function.,,"def basesnum_coresspondingnum(bases_num,index):
  result = list(map(pow, bases_num, index))
  return result","def basesnum_coresspondingnum(bases_num,index):
  result = list(map(pow, bases_num, index))
  return result",correct,Recursion
Write a Python program to analyze the given user input sentences regarding sentiment.,Given sentence: I am so excited to start this project,"def analyze_sentiment(sentence):
    sentiment = TextBlob(sentence)
    if sentiment.polarity > 0:
        print(""Sentence is Positive"")
    elif sentiment.polarity == 0:
        print(""Sentence is Neutral"")
    else:
        print(""Sentence is Negative"")

sentence = ""I am so excited to start this project""
analyze_sentiment(sentence)","def analyze_sentiment(sentence):
    sentiment = TextBlob(sentence)
    if sentiment.polarity > 0:
        print(""Sentence is Positive"")
    elif sentiment.polarity ==",Incomplete Answer,OOP
generate valid python statements to check if the string contains a particular character,Check if a string contains 'a',"""""""
Check if a string contains 'a'
""""""

if 'a' in my_string:
    #string contains 'a'
else:
    #string does not contain 'a'","""""""
Check if a string contains 'a'
""""""

if 'a' in my_string:
    #string contains 'a'
else:
    #string does not contain 'a'",correct,Loops
"Rewrite the following function from Java to Python:

int findMax(int[] arr) { 
   int max = arr[0]; 
   for (int i = 0; i < arr.length; i ++) {
     if (arr[i] > max) {
        max = arr[i]; 
     }
   }
   return max;
}",,"def find_max(arr):
 max = arr[0]
 for i in range(len(arr)):
 if arr[i] > max:
 max = arr[i]
 return max","def find_max(arr)
 max = arr[0]
 for i in range(len(arr))
 if arr[i] > max
 max = arr[i]
 return max",Syntax Error,Recursion
"Create a function in Python that takes two lists of equal length, and returns the sum of the elements in the same index in each list.","[2, 3, 4], [2, 5, 6]","def sum_elements_in_lists(list1, list2):
    if len(list1) != len(list2):
        return None
    
    result = []
    for i in range(len(list1)):
        result.append(list1[i] + list2[i])
    
    return result

result = sum_elements_in_lists([2, 3, 4], [2, 5, 6])
print(result)","def sum_elements_in_lists(list1, list2):
    if len(list1) != len(list2):
        return None
    
    result = []
    for i in range(len(list1)):
        result.append(list1[i] + list2[i])
    
    return result

result = sum_elements_in_lists([2, 3, 4], [2, 5, 6])
print(result)",correct,Recursion
Can you develop a program using Python to check if number is prime?,13,"def is_prime(n):
    if (n <= 1): 
        return False
    elif (n <= 3): 
        return True
    elif (n % 2 == 0 or n % 3 == 0): 
        return False 

    i = 5
    while(i * i <= n): 
        if (n % i == 0 or n % (i + 2) == 0): 
            return False
        i = i + 6
  
    return True

print(is_prime(13))","def is_prime(n):
    if (n <= 1): 
        return False
    elif (n <= 3): 
        return True
    elif (n % 2 == 0 or n % 3 == 0): 
        return False 

    i = 5
    while(i * i <= n): 
        if (n % i == 0 or n % (i + 2) == 0): 
            return False
        i = i + 6
  
    return True

print(is_prime(13))",correct,Loops
Write a Python function that takes an array of integers and finds the maximum difference between any two elements in the array,"[2, 3, 10, 6, 4, 8, 1]","def max_difference(arr):
  if len(arr) < 2:
    return 0
  curr_max = arr[1]-arr[0]
  min_elem = min(arr[0], arr[1])
  for i in range(2, len(arr)):
    curr_max = max(curr_max, arr[i] - min_elem)
    min_elem = min(min_elem, arr[i])
  return curr_max
  
print(max_difference([2, 3, 10, 6, 4, 8, 1]))","def max_difference(arr):
  if len(arr) < 2:
    return 0
  curr_max = arr[1]-arr[0]
  min_elem = min(arr[0], arr[1])
  for i in range(2, len(arr)):
    curr_max = max(curr_max, arr[i] - min_elem)
    min_elem = min(min_elem, arr[i])
  return curr_max
  
print(max_difference([2, 3, 10, 6, 4, 8, 1]))",correct,Recursion
Design a python program which takes a word string as an argument and returns the number of vowels in the string.,"""Hello""","def count_vowels(string):
    count = 0
    for ch in string:
        if ch in 'aeiouAEIOU':
            count += 1
    return count","def count_vowels(string):
    count = 0
    for ch in string:
    ",Incomplete Answer,Recursion
Write a Python script to extract all the values for a given key from a dictionary.,"dictionary = {
    'key1': 'val1',
    'key2': 'val2',
    'key3': 'val3',
    'key4': 'val4',
}","def get_key_values(dictionary, key):
    return [value for key, value in dictionary.items() if key == key]","def get_key_values(dictionary, key:
    return [value for key, value in dictionary.items( if key == key]",Syntax Error,File I/O
"Create a function in Python that takes two arguments, x and y, and returns the sum of x and y.",,"def add(x, y):
    return x + y","def add(x, y)
    return x + y",Syntax Error,String Manipulation
Create a python program which reads a string from the user and prints out its length.,,"user_str = input(""Please enter a string: "")
print(""The length of the string is"", len(user_str))","user_str = input(""Please enter a string: "")
print(""The length of the string is"", len(user_str))",correct,Loops
Write a short Python program to generate the Fibonacci sequence up to the given number n.,,"def fibonacci(n): 
    a = 0
    b = 1
 
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
if __name__ == '__main__':
    n = int(input('Enter a number: '))
    print(fibonacci(n))","def fibonacci(n) 
    a = 0
    b = 1
 
    if n < 0 
        print(""Incorrect input"") 
    elif n == 0 
        return a 
    elif n == 1 
        return b 
    else 
        for i in range(2,n) 
            c = a + b 
            a = b 
            b = c 
        return b 
  
if __name__ == '__main__'
    n = int(input('Enter a number '))
    print(fibonacci(n))",Syntax Error,OOP
Design an algorithm in Python to Merge two lists.,"[1, 3, 5], [2, 4, 6]","def merge(list1, list2):
 merged_list = []
 
 while list1 and list2:
  if list1[0] < list2[0]:
   merged_list.append(list1[0])
   list1.pop(0)
  else:
   merged_list.append(list2[0])
   list2.pop(0)

 merged_list += list1
 merged_list += list2
 return merged_list

list1 = [1, 3, 5]
list2 = [2, 4, 6]

merged_list = merge(list1, list2)

print(""Merged list:"") 
print(merged_list)","def merge(list1, list2):
 merged_list = []
 
 while list1 and list2:
  if list1[0] < list2[0]:
   merged_list.append(list1[0])
   list1.pop(0)
  else:
   merged_list.append(list2[0])
   lis",Incomplete Answer,OOP
Write a Python program that reads in a list of numbers and sorts them in the ascending order.,"[2, 3, 4, 5, 1]","def sort_list(lst):
    lst.sort()
    return lst

result = sort_list([2, 3, 4, 5, 1])
print(result)","def sort_list(lst):
    lst.sort()
    return lst
",Incomplete Answer,File I/O
Rewrite the given Python script to remove all punctuation from a given string.,This is a sample string with punctuation marks .,"def remove_punctuation(string): 
 new_string = """" 
 for char in string: 
 if char not in "",.?!;:"": 
 new_string += char 
 return new_string","def remove_punctuation(string): 
 new_string = """" 
 for char in string: 
 if char not in "",.?!;:"": 
 new_string += char 
 return new_string",correct,Recursion
Write a function in Python that takes two integers as arguments and returns the number of common divisors between the two.,"350, 400","def countCommonDivisors(a,b): 
   
    divisors = [] 
   
    for i in range(1, min(a,b)+1): 
        if (a % i == 0 and b % i == 0): 
            divisors.append(i) 
              
    return len(divisors) 

num1 = 350
num2 = 400

print (countCommonDivisors(num1, num2)) 
# Output: 5","def countCommonDivisors(a,b): 
   
    divisors = [] 
   
    for i in range(1, min(a,b)+1): 
        if (a % i == 0 and b % i == 0): 
       ",Incomplete Answer,Recursion
"Edit the given Python program so that it prints the current date, in the format YYYY-mm-dd.","print(""Hello!"")","from datetime import date

print(""Hello!"")

current_date = date.today().strftime(""%Y-%m-%d"")
print(""Today's date is"", current_date)","from datetime import date

pritn(""Hello!"")

current_date = date.today().strftime(""%Y-%m-%d"")
pritn(""Today's date is"", current_date)",Syntax Error,Loops
Create a function in Python that takes a value and inserts it into an already sorted list.,"[1, 5, 8], 6","# Python 
def insertInSortedList(sorted_list, value):
    left = 0
    right = len(sorted_list) - 1

    while left <= right:
        mid = left + (right - left) // 2
        if value < sorted_list[mid]:
            right = mid - 1
        else:
            left = mid + 1

    sorted_list.insert(left, value)
    return sorted_list","# Python 
def insertInSortedList(sorted_list, value):
    left = 0
    right = len(sorted_list) - 1

    while left <= right:
        mid = left + (right - left) // 2
        if value < sorted_list[mid]:
            right = mid - 1
        else:
            left = mid + 1

    sorted_list.insert(left, value)
    return sorted_list",Syntax Error,String Manipulation
Write a python function to find the perimeter of a cylinder.,,"def perimeter(diameter,height) : 
    return 2*(diameter+height)  ","def perimeter(diameter,height) : ",Incomplete Answer,String Manipulation
Develop a program in Python to find the GCD of two numbers.,"a = 30, b = 15","def gcd(a, b): 
    if a == 0 : 
        return b  
  
    return gcd(b % a, a)  
  
# Driver program  
print(gcd(30,15))","def gcd(a, b): 
    if a == 0 : 
        return b  
  
    r",Incomplete Answer,Recursion
Create a Python program to filter a list of strings and return only the strings that contain a given substring.,"The list [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""] and the substring ""ra"".","def filter_list(lst, sub):
 filtered = [s for s in lst if sub in s]
 return filtered

lst = [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""]
sub = ""ra""

result = filter_list(lst, sub)
print(result)

# Output: ['rabbit']","def filter_list(lst, sub:
 filtered = [s for s in lst if sub in s]
 return filtered

lst = [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""]
sub = ""ra""

result = filter_list(lst, sub
print(result

# Output: ['rabbit']",Syntax Error,Recursion
Rewrite this better Python program to calculate the square root of a given number.,"def squareRoot(number):
  root = number/2    
  for k in range(20):
    root = (1/2)*(root + (number / root))
  return root","def square_root(number): 
    """""" 
    Calculate the square root of a number 
    """""" 
    root = number # Initial guess 
    for i in range(20): # Iterative approach to refine guess 
        root = (1/2) * (root + (number/root)) 
    return root","def square_root(number): 
    """""" 
    Calculate the square root of a number 
    """""" 
    root = number # Initial guess 
    for i in range(20): # Iterative approach to refine guess 
        root = (1/2) * (root + (number/root)) 
    return root",correct,Recursion
Create a program in Python for performing a linear search on a given list.,"[1, 2, 3, 4, 5, 6], 5","def linear_search(list, n): 
  
    for i in range(len(list)): 
  
        if list[i] == n: 
            return i 

list = [1, 2, 3, 4, 5, 6] 
n = 5

x = linear_search(list, n) 

if x == None: 
    print(""Element is not present in the list"") 
else: 
    print(""Element is present at index"", x)","def linear_search(list, n): 
  
    for i in range(len(list)): 
  
        if list[i] == n: 
            return i 

list = [1, 2, 3, 4, 5, 6] 
n =",Incomplete Answer,Loops
Create a random number generator in Python.,,"import random

def random_num_generator():
    return random.randint(0, 9)

# Print a number
print(random_num_generator())","import random

def random_num_generator(:
    return random.randint(0, 9

# Print a number
print(random_num_generator(",Syntax Error,File I/O
Write a Python script to print the size and color of shoes in a list.,"shoes = [('size', 10), ('color', 'blue'), ('size', 8), ('color', 'green')]","def print_size_color(shoes):
    for size, color in shoes:
        print('size:', size, 'color:', color)

print_size_color(shoes)","def print_size_color(shoes:
    for size, color in shoes:
        print('size:', size, 'color:', color

print_size_color(shoes",Syntax Error,OOP
Write a python function that takes in two positive integer numbers and generate a random number between them.,"min_range = 3
max_range = 7","import random

def generate_random_number(min_range, max_range):
    return random.randint(min_range, max_range)

min_range = 3
max_range = 7
random_number = generate_random_number(min_range, max_range)
print(random_number)","import random

def generate_random_number(min_range, max_range):
    return random.randint(min_range, max_range)

min_range = 3
max_range = 7
random_number = generate_random_number(min_range, max_range)
print(random_number)",correct,Loops
Create a program to print the multiplication table for a given number in Python.,,"""""""
Create a program to print the multiplication table for a given number in Python
""""""

def multiplication_table(n):
    for i in range(1, 11):
        print(n, 'x', i, '=', n*i)

if __name__==""__main__"":
    multiplication_table(5)","""""""
Create a program to print the multiplication table for a given number in Python
""""""

def multiplication_table(n)",Incomplete Answer,String Manipulation
Write a Python program to retrieve the URLs of all links within a web page.,,"import re 
import urllib.request 

#Enter the url to scrape
url = ""http://example.com/""

# Get the source code of the webpage
response = urllib.request.urlopen(url)
html = response.read()

# Extract all the links from the source code
links = re.findall('""((http|ftp)s?://.*?)""', str(html))

#Print the extracted links
for link in links:
 print(link[0])","import re 
import urllib.request 

#Enter the url to scrape
url = ""http://example.com/""

# Get the source code of the webpage
response = urllib.request.urlopen(url)
html = response.read()

# Extract all the links from the source code
links = re.findall('""((http|ftp)s?://.*?)""', str(html))

#Print the extracted links
for link in links:
 print(link[0])",correct,String Manipulation
Develop a python program to convert a given temperature value from Fahrenheit to Celsius.,,"def fahrenheit_to_celsius(temp):
    celsius = (temp - 32) * 5/9 
    return round(celsius, 2)","def fahrenheit_to_celsius(temp):
    celsius = ",Incomplete Answer,Loops
Write a function to replace the last element of the list with another list.,,"def replace_list(list1,list2):
 list1[-1:] = list2
 replace_list=list1
 return replace_list
","def replace_list(list1,list2):
 list1[-1:] = li",Incomplete Answer,OOP
Rewrite the following code to use list comprehension in Python.,"big_list = []
 for value in list:
   if value % 2 == 0:
     big_list.append(value)",big_list = [value for value in list if value % 2 == 0],big_list = [value for value in list if value % 2 == 0],correct,String Manipulation
Write a function to sort counter by value.,,"from collections import Counter
def sort_counter(dict1):
 x = Counter(dict1)
 sort_counter=x.most_common()
 return sort_counter","from collections import Counter
def sort_counter(dict1):
 x = Counter(dict1)
 sort_counter=x.most_common()
 return sort_counter",correct,Recursion
Write a function in Python that constructs a URL based on user input. The function should take a string and an integer as arguments and should construct a URL with the string as the base followed by sequential numbers starting from the number provided in the integer argument.,"base = ""https://www.example.com/""
start_num = 10","def construct_url(base, start_num):
 num = start_num
 while True:
 url = base + str(num)
 yield url
 num += 1","def construct_url(base, start_num):
 num = start_num
 ",Incomplete Answer,OOP
Modify a given Python list by adding a certain value to each element.,"list = [1, 2, 3, 4, 5] 
value = 10","# Modifying the list by adding 'value' to each element
for i in range(len(list)):
    list[i] = list[i] + value

# Print the modified list
print(list)
# [11, 12, 13, 14, 15]","# Modifying the list by adding 'value' to each element
for i in range(len(list)):
    ",Incomplete Answer,Recursion
Create a Python function to generate a histogram given a set of data.,"[ 1, 2, 4, 5, 7, 10]","import matplotlib.pyplot as plt

def histogram (data): 
    plt.hist(data)
    plt.title(""Frequency Histogram"")
    plt.xlabel('Data')
    plt.ylabel('Frequency')
    plt.show()","import matplotlib.pyplot as plt

def histogram (data): 
    plt.hist(data)
    plt.title(""Frequency Histogram"")
    plt.xlabel('Data')
    plt.ylabel('Frequency')
    plt.show()",Syntax Error,String Manipulation
Write a Python function to sort this dictionary by its keys in descending order.,"{
    1: 'one',
    2: 'two',
    3: 'three',
    4: 'four',
    5: 'five'
}","def sort_dictionary_keys(d):
  return {k: d[k] for k in sorted(d, reverse=True)}","def sort_dictionary_keys(d):
  return {k",Incomplete Answer,Loops
Re-write the following code snippet in Python:,"let nums = [1, 2, 3, 4, 5];
let squaredNums = nums.map(num => num * num);","nums = [1, 2, 3, 4, 5]
squared_nums = list(map(lambda num: num * num, nums))","nums = [1, 2, 3, 4, 5]
squared_nums = list(map(lambda num: num * num, nums))",correct,Recursion
Write a python function to count occurences of a character in a repeated string.,,"def count_Char(str,x): 
    count = 0
    for i in range(len(str)):  
        if (str[i] == x) : 
            count += 1
    n = 10
    repititions = n // len(str)  
    count = count * repititions  
    l = n % len(str)  
    for i in range(l): 
        if (str[i] == x):  
            count += 1
    return count  ","def count_Char(str,x): 
    count = 0
    for i in range(len(str)):  
        if (str[i] == x) : 
            count += 1
    n = 10
    repititions = n // len(str)  
    count = count * repititions  
    l = n % len(str)  
    for i in range(l): 
        if (str[i] == x):  
            count += 1
    return count  ",correct,File I/O
Create an object in Python that has two properties: name and year.,,"class Person:
  def __init__(self, name, year):
    self.name = name
    self.year = year

person = Person(""Jane"", 1998)","class Person:
  def __init__(self, name, year):
    self.name = name
    self.year = year

person = Person(""Jane"", 1998)",Syntax Error,File I/O
Write a Python script that takes a paragraph as input and prints the unique words in it.,This is a sample paragraph.,"paragraph = ""This is a sample paragraph.""

# split the string into words
words = paragraph.split()

# sort the words alphabetically
words.sort()

# remove duplicates
unique_words = []
for word in words:
    if word not in unique_words:
        unique_words.append(word)

# print the unique words
print("", "".join(unique_words))","paragraph = ""This is a sample paragraph.""

# split the string into words
words = paragraph.split()

# sort the words alphabetically
words.sort()

# remove duplicat",Incomplete Answer,Recursion
Write a Python script to find the longest word in an array.,"arr_of_words = ['cat', 'elephant', 'dog', 'bird']","def find_longest_word(arr):
 longest = ''
 for word in arr:
 if len(word) > len(longest):
 longest = word
 return longest

word = find_longest_word(arr_of_words)
print(word)  # Output: elephant","def find_longest_word(arr):
 longest = ''
 for word in arr:
 if len(word) > len(longest):
 longest = word
 return longest

word = find_longest_word(arr_of_words)
print(word)  # Output: elephant",Syntax Error,Loops
Create a python program to convert a date from one format to another.,"""May 14, 2020"" -> ""14-05-2020""","import datetime

def convert_date_format(date_str, old_format, new_format): 
  dt_obj = datetime.datetime.strptime(date_str, old_format) 
  return dt_obj.strftime(new_format) 

print(convert_date_format(""May 14, 2020"", ""%b %d, %Y"", "" %d-%m-%Y""))","import datetime

def convert_date_format(date_str, old_format, new_format): 
  dt_obj = datetime.datetime.strptime(date_st",Incomplete Answer,Recursion
Write a function in Python that merges two string and removes the duplicates.,"string_1 = 'one'
string_2 = 'two'","def merge_strings(string_1, string_2):
    s = set(string_1 + string_2)
    merged_string = ''.join(s)
    return merged_string

merged_string = merge_strings(string_1, string_2)
print(merged_string)

'''
Output:
onetwo
'''","def merge_strings(string_1, string_2):
    s = set(string_1 + string_2)
    merged_string = ''.join(s)
    retu",Incomplete Answer,Loops
Write a python program to create a list containing the first 6 powers of 3.,,"powers_list = [] 
for i in range(0,6): 
    powers_list.append(3**i) 
  
print(powers_list)","powers_list = [] 
for i in range(0,6): 
    powers_list.append(3**i) 
  
print(name, powers_list)",Syntax Error,Loops
"Given two lists A and B, write a python program to find the intersection of those two lists.","A = [1, 5, 10, 15, 20]
B = [3, 4, 5, 6, 15]","def intersection(A,B):
    result = [] 
    for element in A: 
        if element in B: 
            result.append(element)
    return result","def intersection(A,B):
    result = [] 
    for element in A: 
        if element in B: 
            result.append(element)
    return result",Syntax Error,String Manipulation
Generate a Python program that creates a list of five random integers between 1 and 100.,,"import random

my_list = []
for i in range(5):
 my_list.append(random.randint(1,100))

print(my_list)","import random

my_list = []
for i in range(5):
 my_list.append(random.randint(1,100))

print(my_list)",correct,String Manipulation
Write a function to create a new tuple from the given string and list.,,"def new_tuple(test_list, test_str):
  res = tuple(test_list + [test_str])
  return (res) ","def new_tuple(test_list, test_str):
  res = tuple(test_list + [test_str])
  return (res) ",correct,String Manipulation
Build a Python script to multiply two integer values.,,"def multiply(a, b):
    return a * b

print(multiply(2, 3))","def multiply(a, b):
    return a * b

print(multiply(2, 3))",correct,String Manipulation
Design a Flask application in Python to create an API endpoint for user registration.,,"from flask import Flask, request

app = Flask(name)

@app.route('/users', methods=['POST'])
def create_user():
 data = request.json
 # Create the user
 # ...
 return {'status': 'user created'}

if name == 'main':
 app.run(debug=True)","from flask import Flask, request

app = Flask(name)

@app.route('/users', methods=['POST'])
def create_user()
 data = request.json
 # Create the user
 # ...
 return {'status' 'user created'}

if name == 'main'
 app.run(debug=True)",Syntax Error,Loops
Write a Python program to split a list into two halves.,"[14, 8, 3, 7, 5]","def split_list(lst):
    half = len(lst) // 2
    return lst[:half], lst[half:]

left, right = split_list([14, 8, 3, 7, 5])
print (""Left list : "", left)
print (""Right list : "", right)","def split_list(lst):
    half = len(lst) // 2
    return lst[:half], lst[half:]

left, right = split_list([14, 8, 3, 7, 5])
print (""Left list : "", left)
print (""Right list : "", right)",Syntax Error,String Manipulation
"Generating natural language from a database in Python,","db= { ""Name"": ""John"", ""Age"": 30, ""Occupation"": ""Engineer"" }","def generateNaturalLanguage(db): 
    sentence = ""The person is "" 
    sentence += db[""Name""] + "", "" 
    sentence += ""who is "" + str(db[""Age""]) + "" years old, "" 
    sentence += ""and works as a "" + db[""Occupation""] + "".""

    return sentence","def generateNaturalLanguage(db): 
    sentence = ""The person is "" 
    sentence += db[""Name""] + "", "" 
    sentence += ""who is "" + str(db[""Age""]) + "" years old, "" 
    sentence += ""and works as a "" + db[""Occupation""] + "".""

    return sentence",Syntax Error,Loops
Generate a Python object literal from a dictionary.,"my_dict = {'a':1, 'b':2, 'c':3}","my_obj = {
    'a': 1,
    'b': 2,
    'c': 3
}","my_obj = {
    'a': 1,
",Incomplete Answer,String Manipulation
Suggest a completion for the following method to reverse an array in python,"arr = [1, 2, 3, 4, 5]
def reverse_array(arr):
    for","def reverse_array(arr):
    for i in range(len(arr)//2):
        arr[i], arr[len(arr)-i-1] = arr[len(arr)-i-1], arr[i]","def reverse_array(arr):
    for i in range(len(arr)//2):
  ",Incomplete Answer,File I/O
Optimize the following code using functional programming in Python.,"def add_odds(list):
  odd_list = []
  for num in list:
    if num % 2 == 1:
      odd_list.append(num)
  return odd_list","def add_odds(list):
  odd_list = filter(lambda num: num%2==1, list)
  return list(odd_list)","def add_odds(list):
  odd_list = filter(lambda num: num%2==1, list)
  return list(odd_list)",correct,Recursion
Create a Python function that takes a list of strings and returns a dictionary with the strings as keys and their frequencies as values.,"[""hello"", ""world"", ""hello"", ""goodbye"", ""world"", ""hello""]","def frequency(lst):
 result = {}
 for el in lst:
 if el in result:
 result[el] += 1
 else:
 result[el] = 1
 return result

print(frequency([""hello"", ""world"", ""hello"", ""goodbye"", ""world"", ""hello""]))
# Output: {'hello': 3, 'world': 2, 'goodbye': 1}","def frequency(lst):
 result = {}
 for el in lst:
 if el in result:
 result[el] += 1
 else:
 result[el] = 1
 return result

print(name, frequency([""hello"", ""world"", ""hello"", ""goodbye"", ""world"", ""hello""]))
# Output: {'hello': 3, 'world': 2, 'goodbye': 1}",Syntax Error,Recursion
Write a Python program to input three integers and determine their sum.,"5, 8, 10","def three_integers(x, y, z):
  return x + y + z

x = 5
y = 8
z = 10

print(three_integers(x, y, z))","def three_integers(x, y, z)
  return x + y + z

x = 5
y = 8
z = 10

print(three_integers(x, y, z))",Syntax Error,Recursion
Write a python program to create a frequency table for the following list.,"[1, 8, 9, 11, 2, 10, 1, 5, 6, 8]","from collections import Counter

data = [1, 8, 9, 11, 2, 10, 1, 5, 6, 8]
counter = Counter(data)

# print the frequency table
print('Frequency Table:')
for item in counter.most_common():
    print(item)","from collections import Counter

data = [1, 8, 9, 11, 2, 10, 1, 5, 6, 8]
counter = Counter(data)

# print the frequency table
print('Frequency Table:')
for item in counter.most_common():
    print(item)",correct,OOP
Create a Python program to provide the sum of all numbers from 0 to N,,"def sum_n(n):
    total = 0
    for i in range(n+1):
        total += i
    return total","def sum_n(n):
    total = 0
    for i in ran",Incomplete Answer,File I/O
"Write a function in Python to generate an N by N matrix, filled with random integers between 0 and 9",N = 5,"import random

def generate_matrix(N):
    matrix = []
    for i in range(N):
        row = []
        for j in range(N):
            row.append(random.randint(0, 9))
        matrix.append(row)
    return matrix","import random

def generate_matrix(N):
    matrix = []
    for i in range(N):
        row = []
        for j in range(N):
            row.append(random.randint(0, 9))
        matrix.append(row)
    return matrix",correct,Loops
Compute the sum of list integers using Python.,"Target list: [3, 5, 7, 9]","mylist = [3, 5, 7, 9]
total = 0

for item in mylist:
   total = total + item

print(""The sum of list items is:"", total)","mylist = [3, 5, 7, 9]
total = 0

for item in mylist:
   tot",Incomplete Answer,OOP
Improve the following Python code by making it faster and more efficient.,"def multiply(a, b):
    result = 0
    for x in range(a):
        result += b
    return result","def multiply(a, b):
    result = 0
    while a != 0:
        if a & 1:
            result += b
        a >>= 1
        b <<= 1
    return result","def multiply(a, b):
    result = 0
    while a != 0:
        if a & 1:
            result += b
        a >>= 1
        b <<= 1
    return result",correct,File I/O
Write a python program to generate a new list of numbers based on existing list which increase sequence by 5,"[10, 20, 30, 40]","def generate_numbers(list):
    new_list = [] 
    for number in list:
        new_list.append(number + 5) 
    return new_list","def generate_numbers(list):
    new_list = [] 
    for number in list:
        new_list.append(number + 5) 
    return new_list",Syntax Error,File I/O
Develop a Python script to scrape all HTML elements from a given website.,Input URL: https://www.example.com/,"import requests
from bs4 import BeautifulSoup

# Request the HTML page
url = 'https://www.example.com/'
page = requests.get(url)

# Create the Beautiful Soup object
soup = BeautifulSoup(page.content, 'html.parser')

# Fetch all HTML elements
elements = soup.find_all()

# Output elements
for element in elements:
    print(element)","import requests
from bs4 import BeautifulSoup

# Request the HTML page
url = 'https://www.example.com/'
page = requests.get(url)

# Create the Beautiful Soup object
",Incomplete Answer,Loops
Write a Python program to generate a password with a given length and characters.,"length = 10
characters = alphanumeric","import random

def generate_password(length, characters):
    password = ''
    for i in range(length):
        password += random.choice(characters)
    return password

print(generate_password(10, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'))","import random

def generate_password(length, characters):
    password = ''
    for i in range(length):
        password += random.choice(characters)
    return password

pritn(generate_password(10, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'))",Syntax Error,Recursion
"Compute the Fibonacci sequence in Python, storing each value in a list.",,"def fibonacci(num):
   fib_list = [0, 1]
   if num == 1:
      return fib_list[:1]
   elif num == 2:
      return fib_list
   else:
      for i in range(2, num):
         fib_list.append(fib_list[i-1] + fib_list[i-2])
      return fib_list
 
print(fibonacci(7))","def fibonacci(num):
   fib_list = [0, 1]
   if num == 1:
      return fib_list[:1]
   elif num == 2:
      return fib_list
   else:
      for i in range(2, num):
         fib_list.append(fib_list[i-1] + fib_list[i-2])
      return fib_list
 
print(fibonacci(7))",correct,String Manipulation
Create a Python function for computing the Fibonacci sequence up to the nth number.,Number n: 10,"def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return a

print(fibonacci(10)) # outputs 55","def fibonacci(n):
a, b = 0, 1
for _ in range(n):
    a, b = b, a + b
return a

print(fibonacci(10)) # outputs 55",Syntax Error,File I/O
Develop a Python program to print out the multiplication table of a given number.,,"def print_multiplication_table(num):
    for i in range(1, 11):
        print(f""{num} x {i} = {num*i}"")","def print_multiplication_table(num):
    for i in r",Incomplete Answer,String Manipulation
Create a Python program to optimize the running time of a program using memoization.,"# k: as an input parameter
# f: a recursive function","def memoize(f, k):
    memo = dict()
 
    def helper(x):
        if x not in memo:            
            memo[x] = f(x)
        return memo[x]
 
    return helper(k)","def memoize(f, k):
    memo = dict()
 
    def helper(x):
        if x not in memo:            
            memo[x] = f(x)
        return memo[x]
 
    return helper(k)",Syntax Error,Recursion
Create a Python script that simulates an 8-sided dice roll.,,"import random

def roll_dice():
    dice = random.randint(1, 8)
    return dice

dice = roll_dice()
print(f""You rolled a {dice}"")","import random

def roll_dice(:
    dice = random.randint(1, 8
    return dice

dice = roll_dice(
print(f""You rolled a {dice}""",Syntax Error,OOP
Construct a function in Python that sorts a list of tuples by the second element of the tuple in ascending order.,"tuples = [(6, 2), (5, 4), (7, 3), (2, 8), (1, 5)]","def sort_tuples(tuples):
    return sorted(tuples, key=lambda x: x[1])

print(sort_tuples(tuples))
# Output:  [(6, 2), (7, 3), (1, 5), (5, 4), (2, 8)]","def sort_tuples(tuples):
    return sorted(tuples, key=lambda x: x[1])

print(sort_tuples(tuples))
# Output:  [(6, 2), (7, 3), (1, 5), (5, 4), (2, 8)]",correct,OOP
"Given a string, write a python program to print the next largest palindrome.","""1234""","def next_largest_palindrome(num):
    # convert string to a number
    num = int(num)
    # increment number by 1
    num += 1
    while not is_palindrome(str(num)):
        # increment number by 1
        num += 1

    return num

def is_palindrome(num):
    return num == num[::-1]

print(next_largest_palindrome(""1234""))

# Output: 1331","def next_largest_palindrome(num):
    # convert string to a number
    num = int(num)
    # increment number by 1
    num += 1
    while not is_palindrome(str(num)):
   ",Incomplete Answer,String Manipulation
"In Python, write a function to create a dictionary using the given two lists.","keys = [""name"", ""age"", ""number""]
values = [""John"", 32, 258]","def create_dict(keys, values):
    return {key: val for key, val in zip(keys, values)}","def create_dict(keys, values):
    return {key: val for key, val in zip(keys, values)}",correct,Recursion
"Write a Python class to represent a Dog with the following attributes: breed, weight and age.",,"class Dog:
  # Initialize the attributes 
  def __init__(self, breed='', weight=0, age=0):
    self.breed = breed
    self.weight = weight
    self.age = age
    
  # Print the object values
  def __str__(self):
    return f""{self.breed}, {self.weight}, {self.age}""

# Creating a new object
my_dog = Dog(""Labrador"", 30, 5)
print(my_dog)","class Dog:
  # Initialize the attributes 
  def __init__(self, breed='', weight=0, age=0):
    self.breed = breed
    self.weight = weight
    self.age = age
    
  # P",Incomplete Answer,String Manipulation
Create a function in Python to calculate the distance between two points.,"point1 (x1, y1): (2, 7)
point2 (x2, y2): (4, 9)","import math

def distance_between_points(x1, y1, x2, y2):
    return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
    
# Call the function
distance = distance_between_points(2, 7, 4, 9)
print(""The distance between the two points is"", distance)","import math

def distance_between_points(x1, y1, x2, y2):
    return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
    
# Cal",Incomplete Answer,String Manipulation
Write an app in any language that takes two integers as input and returns the greatest common divisor of the two numbers.,"24, 18","JavaScript:

function gcd(a, b) {
 if (b === 0) return a;
 return gcd(b, a % b);
}

console.log(gcd(24,18)) // 6

Python:

def gcd(a, b): 
 if(b == 0): 
 return a
 else: 
 return gcd(b, a%b) 

print(gcd(24,18)) # 6","JavaScript:

function gcd(a, b) {
 if (b === 0) return a;
 return gcd(b, a % b);
}

console.log(gcd(24,18)) // 6

Python:

def gcd(a, b): 
 if(b == 0): 
 return a
 else: 
 return gcd(b, a%b) 

pritn(gcd(24,18)) # 6",Syntax Error,String Manipulation
Write a Python script that receives a string from the command line and prints out the string in reverse order.,"""This is my string.""","import sys

input_string = sys.argv[1]
print(input_string[::-1])","import sys

input_string = sys.argv[1]
print(name, input_string[::-1])",Syntax Error,File I/O
Write a method in Python to display the contents of a dictionary.,,"def display_dict(dictionary):
    for key, value in dictionary.items():
        print(f'{key}: {value}')","def display_dict(dictionary):
    for key, value in dictionary.items():
        print(f'{key}: {value}')",correct,String Manipulation
Generate an edit script for transforming an input text.,"Text 1: He went to the store
Text 2: She visited the store","#!/usr/bin/env python

text1 = ""He went to the store""
text2 = ""She visited the store""

edited_text = text1[:2] + text2[2:]

print edited_text","#!/usr/bin/env python

text1 = ""He went to the store""
text2 = ""She vis",Incomplete Answer,OOP
Write a function in Python to search a string for a specific pattern.,"Search for ""abc"" in ""abcxyzabc","def search_for_pattern(s, pattern):
    if pattern in s:
        return True
    else:
        return False

result = search_for_pattern(""abcxyzabc"", ""abc"")
print(result)","def search_for_pattern(s, pattern):
    if pattern in s:
        return True
    else:
        return False

result = search_for_pattern(""abcxyzabc"", ""abc"")
pritn(result)",Syntax Error,File I/O
Implement a decision tree model in Python to classify given data.,"[0, 1, 0, 1, 0], [1, 0, 1, 0, 1]","#importing necessary libraries
from sklearn import tree
import numpy as np

#data
X = np.array([[0, 1, 0, 1, 0], [1, 0, 1, 0, 1]])
y = np.array([0, 1])

#model
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)

#predicting
x_test = np.array([[1, 0, 0, 0, 1]])
prediction = clf.predict(x_test)

#result
print(prediction)","#importing necessary libraries
from sklearn import tree
import numpy as np

#data
X = np.array([[0, 1, 0, 1, 0], [1, 0, 1, 0, 1]])
y = np.array([0, 1])

#model
cl",Incomplete Answer,OOP
Write a correct Python program to find the sum of all the digits of an integer.,,"def sum_of_digits(n):
   """"""Find the sum of all the digits of an integer n""""""
   s = 0
   while n:
       s += n % 10
       n //= 10
   return s","def sum_of_digits(n):
   """"""Find the sum of all the digits of an integer",Incomplete Answer,File I/O
Create a Python function that checks if a given string consists of all unique characters.,,"def isUnique(s):
    # Create a list that contains all characters
    chars = []
    # Iterate through the string
    for char in s:
        # Check if the character is already in the list
        if char in chars:
            return False
        # Add character to the list
        chars.append(char)
    # Return True when the loop is finished
    return True","def isUnique(s):
    # Create a list that contains all characters
    chars = []
    # Iterate through the string
    for char in s:
        # Check if the character is already in the list
        if char in chars:
            return False
        # Add character to the list
        chars.append(char)
    # Return True when the loop is finished
    return True",correct,String Manipulation
Generate a code to implement a linear search algorithm in python.,,"def linear_search(list_of_items, item_to_search):
    for items in list_of_items: 
        if items == item_to_search: 
            return list_of_items.index(item_to_search) 
    return -1","def linear_search(list_of_items, item_to_search):
    for items in list_of_items: 
        if ",Incomplete Answer,Loops
"Design a class in Python for storing information about books. The class should contain fields for the book title, author, and year of publication.",,"class Book:
  
 def __init__(self, title, author, year):
 self.title = title
 self.author = author
 self.year = year
 
 def __str__(self):
  return f""{self.title} by {self.author} ({self.year})""","class Book:
  
 def __init__(self, title, author, year):
 self.title = title
 self.author = autho",Incomplete Answer,File I/O
"Using Python, create a dictionary with the list of elements in ""a"" and as the value, the list of elements in ""b"".","a = [1, 2, 3, 4]
b = [5, 6, 7, 8]","dict_1 = {1: [5, 6, 7, 8], 2: [5, 6, 7, 8], 3: [5, 6, 7, 8], 4: [5, 6, 7, 8]}","dict_1 = {1 [5, 6, 7, 8], 2 [5, 6, 7, 8], 3 [5, 6, 7, 8], 4 [5, 6, 7, 8]}",Syntax Error,Loops
"Given the following data, adjust the Python code so that it outputs a JSON representation of the data.","data = [
  {
    ""id"": 5,
    ""name"": ""John""
  },
  {
    ""id"": 7,
    ""name"": ""Jack""
  },
  {
    ""id"": 9,
    ""name"": ""James""
  }
]","import json

data = [
  {
    ""id"": 5,
    ""name"": ""John""
  },
  {
    ""id"": 7,
    ""name"": ""Jack""
  },
  {
    ""id"": 9,
    ""name"": ""James""
  }
]

data_json = json.dumps(data, indent=4)
print(data_json)","import json

data = [
  {
    ""id"": 5,
    ""name"": ""John""
  },
  {
    ""id"": 7,
    ""name"": ""Jack""
  },
  {
    ""id"": 9,
    ""name"": ""James""
  }
]

data_json = json.dumps(data, indent=4)
print(data_json)",correct,Loops
Implement a bubble sort algorithm in Python to sort a list of numbers from lowest to highest.,"[5, 3, 1, 4, 7]","def bubble_sort(array):
    for i in range(len(array)):
        for j in range(i + 1, len(array)):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]
    return array

arr = [5, 3, 1, 4, 7]
sorted_arr = bubble_sort(arr)
print(sorted_arr)","def bubble_sort(array):
    for i in range(len(array)):
        for j in range(i + 1, len(array)):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]
    return array

arr = [5, 3, 1, 4, 7]
sorted_arr = bubble_sort(arr)
print(name, sorted_arr)",Syntax Error,File I/O
Write a code in Python to print the following string:,"""Welcome to the amazing world of programming!""","print(""Welcome to the amazing world of programming!"")","print(""Welcome to the amazing world of programming!"")",correct,File I/O
Generate a Python code snippet to make a copy of a given list.,"list_a = [1, 2, 3, 4, 5]",list_b = list_a[:],list_b = list_a[],Syntax Error,Loops
Create a Python script to resolve a given web address.,,"import socket

def resolve_domain(domain):
    try:
        addr = socket.gethostbyname(domain) # Resolve the address by DNS
        return addr
    except socket.gaierror: # Raise when the domain name not found
        return None","import socket

def resolve_domain(domain):
    try:
        addr = socket.gethostbyname(domain) # Resolve the address by DNS
        return addr
    except socket.gaierror: # Raise when the domain name not found
        return None",Syntax Error,Loops
Create a Python class for representing a vector as a list of three numbers.,,"class Vector3D:
  def __init__(self, x, y, z):
    self.x = x
    self.y = y
    self.z = z","class Vector3D:
  def __init__(self, x, y, z:
    self.x = x
    self.y = y
    self.z = z",Syntax Error,OOP
Create a Python program to print out the given string in all uppercase.,"""This is a test string""","string = ""This is a test string""

print(string.upper())","string = ""This is a test string""

pritn(string.upper())",Syntax Error,File I/O
Create a python program that computes the sum of all the prime numbers lower than a given number,,"def sum_prime_numbers(n):
    if n <= 1:
        return 0
        
    prime_sum = 0
    for i in range(2, n):
        is_prime = True
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            prime_sum += i
            
    return prime_sum","def sum_prime_numbers(n):
    if n <= 1:
        return 0
        
    prime_sum = 0
    for i in range(2, n):
        is_prime = True
        for j in range(2, i):",Incomplete Answer,Loops
Generate a program in Python to calculate the factorial of an integer.,,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)","def factorial(n):
if n == 0:
    return 1
else:
    return n * factorial(n-1)",Syntax Error,Recursion
Compose a program in Python to generate a list of prime numbers in the range of 2-50.,,"def generate_prime_list(max_num):
    prime_list = []
    for number in range(2, max_num + 1):
        for divider in range(2, number):
            if number % divider == 0:
                break
        else:
            prime_list.append(number)
    return prime_list

prime_list = generate_prime_list(50)
print(prime_list)","def generate_prime_list(max_num):
    prime_list = []
    for number in range(2, max_num + 1):
        for divider in range(2, number):
            if number % divider == 0:
                break
        else:
            prime_list.append(number)
    return prime_list

prime_list = generate_prime_list(50)
print(name, prime_list)",Syntax Error,Loops
Write a python program to compute the edit distance between two strings.,,"def edit_distance(str1, str2): 
	m=len(str1) 
	n=len(str2) 
	dp= [[0 for x in range(n+1)] for x in range(m+1)] 
	
	for i in range(m+1): 
		for j in range(n+1): 
			if i==0: 
				dp[i][j] = j
			elif j==0: 
				dp[i][j] = i
			elif str1[i-1]==str2[j-1]: 
				dp[i][j] = dp[i-1][j-1] 
			else: 
				dp[i][j] = 1 + min(dp[i][j-1], dp[i-1][j], dp[i-1][j-1]) 
	return dp[m][n]","def edit_distance(str1, str2): 
	m=len(str1) 
	n=len(str2) 
	dp= [[0 for x in range(n+1)] for x in range(m+1)] 
	
	for i in range(m+1): 
		for j in range(n+1): 
			if i==0: 
				dp[i][j] = j
			elif j==0: 
				dp[i][j] = i
			elif str1[i-1]==str2[j-1]: 
				dp[i][j] = dp[i-1][j-1] 
			else: 
				dp[i][j] = 1 + min(dp[i][j-1], dp[i-1][j], dp[i-1][j-1]) 
	return dp[m][n]",Syntax Error,Loops
Write a function to find the item with maximum occurrences in a given list.,,"def max_occurrences(list1):
    max_val = 0
    result = list1[0] 
    for i in list1:
        occu = list1.count(i)
        if occu > max_val:
            max_val = occu
            result = i 
    return result","def max_occurrences(list1):
    max_val = 0
    result = list1[0] 
    for i in list1:
        occu = list1.count(i)
        if occu > max_val:
            max_val = occu
            result = i 
    return result",correct,OOP
Edit this Python program to make the output more accurate,"def calculate_average(numbers):
    total = 0
    for n in numbers:
        total += n
    return float(total) / len(numbers)","def calculate_average(numbers):
    total = 0
    for n in numbers:
        total += n
    return float(total) / len(numbers) if len(numbers) > 0 else 0","def calculate_average(numbers):
    total = 0
    for n in numbers:
        total += n
    return float(total) / len(numbers) if len(numbers) > 0 else 0",correct,Loops
Construct a Python script to normalize a given vector.,"[2, 3, 4]","def normalize_vector(v):
  norm = 0
  for x in v:
    norm += x**2
  norm = norm**0.5
  for i in range(len(v)):
    v[i] = v[i] / norm
  return v

result = normalize_vector([2, 3, 4])
print(result) # [0.37139068, 0.55708601, 0.74278135]","def normalize_vector(v)
  norm = 0
  for x in v
    norm += x**2
  norm = norm**0.5
  for i in range(len(v))
    v[i] = v[i] / norm
  return v

result = normalize_vector([2, 3, 4])
print(result) # [0.37139068, 0.55708601, 0.74278135]",Syntax Error,String Manipulation
Write a python function to count the number of digits of a given number.,,"def count_Digit(n):
    count = 0
    while n != 0:
        n //= 10
        count += 1
    return count","def count_Digit(n):
    count = 0
    while n != 0:",Incomplete Answer,String Manipulation
Create a python program to print the total number of vowels in a given string,"string = ""This is a sample string ""","def count_vowels(string):
    count = 0
    for character in string:
        if character in 'aeiouAEIOU':
            count += 1
    return count","def count_vowels(string):
    count = 0
    for character in string:
        if character in 'aeiouAEIOU':
            count += 1
    return count",Syntax Error,Recursion
Generate an algorithm in Python to measure the time taken by a function to execute.,,"import time

def measure_time(): 
    start_time = time.time() 
    # run your code 
    end_time = time.time() 
    time_taken = end_time - start_time
  
    return time_taken

time_taken = measure_time() 
print (""Time taken in seconds: "",time_taken)","import time

def measure_time(): 
    start_time = time.time() 
    # run your code 
    end_time = time.time() 
    time_taken = end_time - start_time
  
    return time_taken

time_taken = measure_time() 
print (""Time taken in seconds: "",time_taken)",correct,Recursion
Write a Python function to find the sublist with the maximum sum in a given list.,"list_a = [-2, 3, 5, 4, -3, 7, -2]","def max_sum_sublist(list_a):
 start = 0
 end = 0
 max_sum = 0
 
 current_sum = 0
 for i in range(len(list_a)):
  current_sum += list_a[i]
  if current_sum < 0:
   current_sum = 0
   start = i + 1
  if current_sum > max_sum:
   max_sum = current_sum
   end = i
 
 return list_a[start:end+1]
 
max_sum_sublist(list_a)","def max_sum_sublist(list_a):
 start = 0
 end = 0
 max_sum = 0
 
 current_sum = 0
 for i in range(len(list_a)):
  current_sum += list_a[i]
  if current_sum < 0:
   current_sum = 0
   start = i + 1
  if current_sum > max_sum:
   max_sum = current_sum
   end = i
 
 return list_a[start:end+1]
 
max_sum_sublist(list_a)",Syntax Error,String Manipulation
Create a program in Python to calculate the factorial of any given non-negative number n.,,"def factorial(n):
  factorial = 1
  while n > 0:
    factorial *= n
    n -= 1
  return factorial","def factorial(n):
  factorial = 1
  while n > 0:
    factorial *= n
    n -= 1
  return factorial",correct,Recursion
Create a program in Python that takes a given string and returns a dictionary whose keys are the words in the string and values are the number of occurances of each word.,"String = ""Hello world, This is me""","def word_count(string):
 count = {}
 string = string.split()

 for word in string:
 if word in count:
 count[word] += 1
 else:
 count[word] = 1

 return count

print(word_count(""Hello world, This is me""))","def word_count(string)
 count = {}
 string = string.split()

 for word in string
 if word in count
 count[word] += 1
 else
 count[word] = 1

 return count

print(word_count(""Hello world, This is me""))",Syntax Error,String Manipulation
Create a class in Python that has five methods:,,"class MyClass:
    def __init__(self):
        pass

    def method1(self):
        pass

    def method2(self):
        pass

    def method3(self):
        pass

    def method4(self):
        pass

    def method5(self):
        pass","class MyClass:
    def __init__(self):
        pass

    def method1(self):
        pass

    def method2(self):
        pass

    def method3(self):
        pass

    def method4(self):
        pass

    def method5(self):
        pass",correct,String Manipulation
Create a basic REST API endpoint with Python's Flask-Restful library that returns the sum of two numbers when the endpoint is visited.,,"from flask import Flask
from flask_restful import Resource, Api

app = Flask(__name__)
api = Api(app)

class Sum(Resource):
 def get(self, a, b):
 return {'sum': a + b}

api.add_resource(Sum, '/sum/<int:a>/<int:b>')

if __name__ == '__main__':
 app.run()","from flask import Flask
from flask_restful import Resource, Api

app = Flask(__name__)
api = Api(app)

class Sum(Resource)
 def get(self, a, b)
 return {'sum' a + b}

api.add_resource(Sum, '/sum/<inta>/<intb>')

if __name__ == '__main__'
 app.run()",Syntax Error,String Manipulation
Create a for-loop in Python to print out all the characters in the string “Hello World!”,,"myString = ""Hello World!""
for x in myString:
  print(x)","myString = ""Hello World!""
for x in myString:
  print(x)",correct,String Manipulation
Develop a Python script that automates a set of shell commands.,,"import subprocess

# Define list of shell commands
commands = [
    ""./ls -l"",
    ""./cd project"",
    ""./mkdir test"",
    ""./ls -l""
]

# Execute each shell commands
for command in commands:
    subprocess.run(command, shell=True)","import subprocess

# Define list of shell commands
commands = [
    ""./ls -l"",
    ""./cd project"",
    ""./mkdir test"",
    ""./ls -l""
]

# Execute each shell commands
for command in commands:
    subprocess.run(command, shell=True)",correct,Recursion
Establish a Python program to replace all the words in a given sentence by the first letter of the respective words.,Sentence: Hello World,"def replace_with_first_letter(sentence):
    words = sentence.split()
    result = [word[0] for word in words]
    return ''.join(result)

print(replace_with_first_letter(""Hello World"")) # Output: HW","def replace_with_first_letter(sentence):
    words = sentence.split()
    result = [word[0] for wor",Incomplete Answer,File I/O
Define a Python list containing the numbers from 0 to 10.,,"numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",Syntax Error,String Manipulation
Generate a program to extract the substring from a given string,"string = 'Python is fun'
start = 7
end = 11","def extract_substring(string, start, end):
    substr = string[start : end]
    return substr

string = 'Python is fun'
start = 7
end = 11

print(extract_substring(string, start, end))","def extract_substring(string, start, end):
    substr = string[start : end]
    return subst",Incomplete Answer,Recursion
Create a class in Python to represent a Person.,,"class Person:
    # constructor
    def __init__(self, name, age, gender):
        self.name = name
        self.age = age
        self.gender = gender

# creating a person
person1 = Person(""John Doe"", 35, ""Male"")

# printing the details
print(""Name:"", person1.name)
print(""Age:"", person1.age)
print(""Gender:"", person1.gender)","class Person:
    # constructor
    def __init__(self, name, age, gender):
        self.name = name
        self.age = age
        self.gender = gender

# creating a person
person1 = Person(""John Doe"", 35, ""Male"")

# printing the details
print(""Name:"", person1.name)
print(""Age:"", person1.age)
print(""Gender:"", person1.gender)",correct,Loops
Implement a Python function for finding the difference between two lists.,"list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]","def difference(list1, list2):
    difference_set = set(list1) - set(list2)
    return list(difference_set)

list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]

difference = difference(list1, list2)
print(difference)

# Output:
# [1]","def difference(list1, list2):
    difference_set = set(list1) - set(list2)
    return list(difference_set)

lis",Incomplete Answer,Loops
Implement a function in Python that takes a list of strings and returns a new list of strings containing all words that start with an uppercase letter.,"list = [""Apple"", ""banana"", ""Pineapple"", ""Grapes""]","def upper_words(list):
    result = []
    for word in list:
        if word[0].isupper():
            result.append(word)
    return result","def upper_words(list):
    result = []
    for word in list:
        if word[0].isupper():
            result.append(word)
    return result",correct,Recursion
"Edit the program in Python, so it prints out the sum of the list of numbers and the average","[10, 15, 20, 25]","arr = [10, 15, 20, 25]

totalSum = 0
for x in arr:
    totalSum += x

print(""Sum of the list: ""+str(totalSum)) 
print(""Average of the list: ""+str(totalSum/len(arr)))

Output:
Sum of the list: 70
Average of the list: 17.5","arr = [10, 15, 20, 25]

totalSum = 0
for x in arr:
    totalSum += x

pritn(""Sum of the list: ""+str(totalSum)) 
pritn(""Average of the list: ""+str(totalSum/len(arr)))

Output:
Sum of the list: 70
Average of the list: 17.5",Syntax Error,Loops
Write a Bash script to install the latest version of Python 3.,,"# update package manager
sudo apt-get update

# install latest version of Python 3
sudo apt-get install python3

# check version of python installed
python3 --version","# update package manager
sudo apt-get update

# install latest version of Python 3
",Incomplete Answer,Recursion
Create a Python method that takes in an array of strings and returns a string that includes all the strings in the array combined into a single string.,"[""This"", ""is"", ""a"", ""sentence""]","def combine_strings(strings): 
    return ' '.join(strings)","def combine_strings(strings): 
return ' '.join(strings)",Syntax Error,OOP
Edit the following python code to prompt the user to enter the value of radius to calculate the area of a circle.,,"# Calculate area of a circle

Pi = 3.14

# Get radius from user
radius = float(input(""Please enter the radius of the circle: ""))

# Calculate the circle area
area = Pi*radius**2

# Print the area
print(""The area of the circle is:"", area)","# Calculate area of a circle

Pi = 3.14

# Get radius from user
radius = float(input(""Please enter the radius of the circle: ""))

# Calculate the circle area
area = Pi*radius**2

# Print the area
pritn(""The area of the circle is:"", area)",Syntax Error,File I/O
Create a simple web server using Flask in Python.,,"from flask import Flask 

app = Flask(__name__) 

@app.route('/') 
def hello(): 
  return 'Hello World!'

if __name__ == '__main__': 
    app.run()","from flask import Flask 

app = Flask(__name__) 

@app.route('/') 
def hello(): 
  return 'Hello World!'

if __name__ == '__main__': 
    app.run()",Syntax Error,Recursion
"Using the input provided, build a Python dictionary with the number as the key and its square as the value.","numbers = [2, 3, 4]",square_dict = {number:number**2 for number in numbers},square_dict = {number:number**2 for number in numbers},correct,Loops
Generate a Python program that prompts the user to enter a three-digit integer.,,"number = int(input(""Please enter a 3-digit integer: ""))","number = int(input(""Please enter a 3-digit integer: ""))",Syntax Error,File I/O
Create a program in Python to check if a given list is a subsequence of another given list,"[1,2,3,4], [1,2,5,6,7,3,4]","def is_subsequence(sub_list, main_list):
    i, j = 0, 0
    n1, n2 = len(sub_list), len(main_list)
    while i < n1 and j < n2:
        if sub_list[i] == main_list[j]:
            i += 1
        j += 1
    return i == n1","def is_subsequence(sub_list, main_list):
    i, j = 0, 0
    n1, n2 = len(sub_list), len(main_list)
    while i < n1 and j < n2:
        if sub_list[i] == main_list[j]:
            i += 1
        j += 1
    return i == n1",correct,Loops
Develop a python program to filter a provided array of strings and return only those strings that are longer than 3 characters.,"['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']","def filter_long_words(words):
 filtered_words = []
 
 for word in words:
  if len(word) > 3:
   filtered_words.append(word)
   
 return filtered_words
 
words = ['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']
long_words = filter_long_words(words)
 
print(long_words) # Output: ['Bird', 'Fish', 'Turtle']","def filter_long_words(words):
 filtered_words = []
 
 for word in words:
  if len(word) > 3:
   filtered_words.append(word)
   
 return filtered_words
 
words = ['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']
long_words = filter_long_words(words)
 
print(long_words) # Output: ['Bird', 'Fish', 'Turtle']",correct,String Manipulation
Create a Python program to take two numbers as input and list their lowest common multiple?,"a = 15, b = 20","def LCM(x, y):
   if x > y:
       z = x
   else:
       z = y

   while(True):
       if((z % x == 0) and (z % y == 0)):
           lcm = z
           break
       z += 1

   return lcm

a = 15
b = 20
print(LCM(a, b))","def LCM(x, y):
   if x > y:
       z = x
   else:
       z = y

   while(True):
       if((z % x == 0) and (z % y == 0)):
           lcm = z
           break
       z += 1

   return lcm

a = 15
b = 20
print(LCM(a, b))",correct,Recursion
"Write a function to remove sublists from a given list of lists, which are outside a given range.",,"def remove_list_range(list1, leftrange, rigthrange):
   result = [i for i in list1 if (min(i)>=leftrange and max(i)<=rigthrange)]
   return result","def remove_list_range(list1, leftrange, rigthrange):
   result = [i for i in list1 if (min(i)>=leftrange and max(i)<=rigthrange)]
   return result",correct,Loops
Create a program in Python to generate and print all possible permutations of a given set of characters.,"[A, B, C]","import itertools
 
def permutations(characters):
 permut = itertools.permutations(characters)

 for p in list(permut): 
 print("""".join(p))

# Usage
characters = ['A', 'B', 'C']
permutations(characters)

# Output
ABC
ACB
BAC
BCA
CAB
CBA","import itertools
 
def permutations(characters):
 permut = itertools.permutations(characters)

 for p in list(permut)",Incomplete Answer,Recursion
Create a class in Python which calculates the area of a rectangle.,,"class Rectangle: 
    # constructor 
    def __init__(self, length, width): 
        self.length = length 
        self.width = width 

    # member function 
    def calculate_area(self): 
        return self.length * self.width 

# creating an instance 
rect1 = Rectangle(5, 6) 

# call member function of the class 
print(""Area of rectangle is:"", rect1.calculate_area())","class Rectangle: 
    # constructor 
    def __init__(self, length, width): 
        self.length = length 
        self.width = width 

    # member function 
    def calculate_area(self",Incomplete Answer,Loops
Write an algorithm in Python that takes an array of integers as input and checks if it is a palindrome.,"[1, 2, 3, 4, 3, 2, 1]","def is_palindrome(arr):
    mid = len(arr) // 2 
    for i in range(mid):
        if arr[i] != arr[-i - 1]:
            return False
    return True

result = is_palindrome([1, 2, 3, 4, 3, 2, 1])
print(result) # True","def is_palindrome(arr):
    mid = len(arr) // 2 
    for i in range(mid):
        if arr[i] != arr[-i - 1]:
",Incomplete Answer,Recursion
Create a program in Python that will find all the prime factors of a number,120,"def prime_factors(n):
    factors = []
    i = 2
    while n > 1:
        while n % i == 0:
            factors.append(i)
            n /= i
        i += 1
    return factors","def prime_factors(n):
    factors = []
    i = 2
    while n > 1:
        while n % i == 0:
            factors.append(i)
            n /= i
        i += 1
    return factors",correct,OOP
Write a Python function that joins two lists of different sizes in an alternating fashion.,"list1 = [1, 3, 5, 7, 9]
list2 = [2, 4, 6, 8]","def joinLists(list1, list2):
 mergedList = []
 
 for i in range(max(len(list1), len(list2))):
  if i < len(list1):
   mergedList.append(list1[i])
  if i < len(list2):
   mergedList.append(list2[i])
 
 return mergedList","def joinLists(list1, list2):
 mergedList = []
 
 for i in range(max(len(list1), len(list2))):
  if i < len(list1):
   mergedList.append(list1[i])
  if i < len(list2):
   mergedList.append(list2[i])
 
 return mergedList",correct,String Manipulation
Write a Python program to apply a function to all the elements of a given list and return the mapped list.,"[1, 2, 3, 4, 5]","def applyFunc(lst, func):
    mapped_list = []
    for el in lst:
        mapped_list.append(func(el))
    return mapped_list

def square(x):
    return x*x

lst = [1, 2, 3, 4, 5]

print(applyFunc(lst, square))","def applyFunc(lst, func):
    mapped_list = []
    for el in lst:
        mapped_list.append(func(el))
    return mapped_list

def square(x):
    return x*x

lst = [1, 2, 3, 4, 5]

pritn(applyFunc(lst, square))",Syntax Error,Loops
Create a Python function that takes a string and outputs the count of the number of uppercase letters in the string.,‘Hello World’,"def countUppercase(myStr):
    uppercaseCount = 0
    for l in myStr:
        if l.isupper():
            uppercaseCount+=1
    return uppercaseCount

print(countUppercase('Hello World'))","def countUppercase(myStr):
    uppercaseCount = 0
    for l in myStr:
        if l.isupper():
            uppercaseCount+=1
    return uppercaseCount

print(countUppercase('Hello World'))",correct,String Manipulation
Create a class in Python to store and manage a customer's orders.,,"class Order:
    def __init__(self):
        self.id = None
        self.items = []
        self.quantities = []
        self.total_amount = 0
    
    def add_item(self, item, quantity):
        self.items.append(item)
        self.quantities.append(quantity)
        self.total_amount += item.price * quantity 
    
    def get_total_amount(self):
        return self.total_amount","class Order:
    def __init__(self):
        self.id = None
        self.items = []
        self.quantities = []
        self.total_amount = 0
    
    def add_item(self, item, quantity):
   ",Incomplete Answer,Loops
Upload a python program on GitHub which will print the total number of vowels in a given string.,"String = ""Hello World!""","import re

def count_vowels(string):
    vowels = re.findall(r'[aeiou]', string, re.I)
    return len(vowels)

if __name__ == '__main__':
    string = ""Hello World!""
    print(""Number of vowels in the given string:"", count_vowels(string))","import re

def count_vowels(string:
    vowels = re.findall(r'[aeiou]', string, re.I
    return len(vowels

if __name__ == '__main__':
    string = ""Hello World!""
    print(""Number of vowels in the given string:"", count_vowels(string",Syntax Error,File I/O
Reverse an input string using Python.,Hello World!,"def rev_string(s): 
   return s[::-1] 
  
s = ""Hello World!""
print(rev_string(s))","def rev_string(s): 
   return s[::-1] 
  
s = ""Hello World!""
print(rev_string(s))",correct,Recursion
Write a python function to check whether the given number can be represented as difference of two squares or not.,,"def dif_Square(n): 
    if (n % 4 != 2): 
        return True
    return False","def dif_Square(n): 
    if (n % 4 != 2): 
        return True
    return False",correct,Loops
Can you provide a Python script to print the largest and smallest number from a given list?,"[1, 6, 4, -3, 7, 8, 11]","def largest_smallest(arr):
    max_num = arr[0]
    min_num = arr[0]

    for i in arr:
        if i > max_num:
            max_num = i
        if i < min_num:
            min_num = i

    print(""The largest number is"", max_num, ""and the smallest number is"", min_num)","def largest_smallest(arr):
    max_num = arr[0]
    min_num = arr[0]

    for i in arr:
        if i > max_num:
            max_num =",Incomplete Answer,OOP
Write a function to check the occurrences of records which occur similar times in the given tuples.,,"from collections import Counter 
def check_occurences(test_list):
  res = dict(Counter(tuple(ele) for ele in map(sorted, test_list)))
  return  (res) ","from collections import Counter 
def check_occurences(test_list):
  res = ",Incomplete Answer,File I/O
Find a way to swap two values without using a temporary variable in Python.,"a = 2
b = 5","a, b = b, a","a, b ",Incomplete Answer,Recursion
"Write a Python program to calculate the sum of two given integers, but only if both of them are even.","num1 = 6
num2 = 8","def sum_of_two_ints(a,b): 
    if (a % 2 == 0 and b % 2 == 0): 
        return a+b 
    else: 
        return ""Wrong input""

print(sum_of_two_ints(num1,num2))","def sum_of_two_ints(a,b): 
    if (a % 2 == 0 and b % 2 == 0): 
        return ",Incomplete Answer,Loops
Create a Python program that uses the Coinmarketcap API to track the prices of top 10 cryptocurrencies over a period of time.,,"import requests
import pandas as pd

url = 'https://api.coinmarketcap.com/v1/ticker/?limit=10'
data = requests.get(url).json()

df = pd.DataFrame(data)
# select required column
df = df[['name', 'price_usd']]

# print the dataframe
print(df)","import requests
import pandas as pd

url = 'https://api.coinmarketcap.com/v1/ticker/?limit=10'
data = requests.get(url).json()

df = pd.DataFrame(data)
# select required column
df = df[['name', 'price_usd']]

# print the dataframe
print(df)",correct,String Manipulation
Write a script in python that can take a magnitude and corresponding angle (in degrees) and convert it to vectors in three-dimensional space.,"magnitude: 5
angle: 90","import math

def magnitude_to_vector(magnitude, angle):
    x = magnitude * math.cos(math.radians(angle))
    y = magnitude * math.sin(math.radians(angle))
    z = 0
    
    return (x, y, z)

result = magnitude_to_vector(5, 90)

print(f""The vector is {result}"")","import math

def magnitude_to_vector(magnitude, angle)
    x = magnitude * math.cos(math.radians(angle))
    y = magnitude * math.sin(math.radians(angle))
    z = 0
    
    return (x, y, z)

result = magnitude_to_vector(5, 90)

print(f""The vector is {result}"")",Syntax Error,String Manipulation
Write a Python program to display a calendar showing the current month.,,"import calendar
from datetime import date

today = date.today()

cal = calendar.month(today.year, today.month)
print(cal)","import calendar
from datetime import date

today = date.today()

cal = calendar.month(today.year, today.month)
print(cal)",correct,File I/O
Create a python program that splits a sentence into individual words and prints out the words in reverse order.,,"s = 'This is an example sentence'

words = s.split(' ')
words.reverse()

for word in words:
    print(word)","s = 'This is an example sentence'

words = s.split(' ')
words.reverse()

for word in words:
    print(name, word)",Syntax Error,File I/O
"Write a function that matches a string that has an 'a' followed by anything, ending in 'b' by using regex.",,"import re
def text_match(text):
  patterns = 'a.*?b$'
  if re.search(patterns,  text):
    return ('Found a match!')
  else:
    return ('Not matched!')","import re
def text_match(text:
  patterns = 'a.*?b$'
  if re.search(patterns,  text:
    return ('Found a match!'
  else:
    return ('Not matched!'",Syntax Error,File I/O
Code a function in Python to find the Fibonacci number at a given index.,index = 5,"def fibonacci_at_index(index): 
    if index < 0: 
        return -1
    if index == 0 or index == 1: 
        return index 
    return fibonacci_at_index(index - 1) + fibonacci_at_index(index - 2) 

print(fibonacci_at_index(index)) # 5","def fibonacci_at_index(index): 
    if index < 0: 
        return -1
    if index == 0 or index == 1: 
        return index 
    return fibonacci_at_index(index - 1) + fibonacci_at_index(index - 2) 

print(fibonacci_at_index(index)) # 5",correct,OOP
"Use Python to optimize a function f(x, y) so that it attains its maximum for any given set of x and y.","f(x,y) = 3x^2 + 2xy + 5y^2","from scipy.optimize import fmin

def f(x, y):
 return 3*x**2 + 2*x*y + 5*y**2

x, y = fmin(f, 0, 0)

print(f'The maximum of f(x,y) is {f(x, y)} at (x, y) = ({x:0.5f}, {y:0.5f})')","from scipy.optimize import fmin

def f(x, y):
 return 3*x**2 + 2*x*y + 5*y**2

x, y = fmin(f, 0, 0)

print(f'The maximum of f(x,y) is {f(x, y)} at (x, y) = ({x:0.5f}, {y:0.5f})')",correct,File I/O
Consider the following python code. Write a code to modify this such that it generates the output shown.,"def get_year_from_date(date):
    year = date.split('-')[0]
    return int(year)","def get_year_from_date(date):
    """"""
    This function takes a string date in the form of a yyyy-mm-dd and returns the year as an integer
    """"""
    year = date.split('-')[0]
    return int(year)","def get_year_from_date(date):
    """"""
    This function takes a string date in the form of a yyyy-mm-dd and returns the year as an integer
    """"""
    year = date.split('-')[0]
    return int(year)",correct,String Manipulation
Create a Python program that shuffles the elements of an array.,"arr = [""A"", ""B"", ""C"", ""D""]","import random

def shuffleArray(arr):
    n = len(arr)

    for i in range(n-1, 0, -1):
        j = random.randint(0, i)
        arr[i], arr[j] = arr[j], arr[i] 
    
    return arr

arr = [""A"", ""B"", ""C"", ""D""]
shuffleArray(arr)
print(arr)","import random

def shuffleArray(arr):
    n = len(arr)

    for i in range(n-1, 0, -1):
        j = random.randint(0, i",Incomplete Answer,File I/O
"Develop an algorithm in Python for given an array containing n distinct numbers taken from 0, 1, 2, …, n, find the one that is missing from the array.","Array : [2, 3, 1, 5, 4]","def missingNumber(arr): 
    n = len(arr) 
    total = (n + 1)*(n + 2)/2
    sum_of_arr = sum(arr) 
    return total - sum_of_arr 

arr = [2, 3, 1, 5, 4]
missing = missingNumber(arr) 
print(missing)","def missingNumber(arr): 
    n = len(arr) 
    total = (n + 1)*(n + 2)/2
    sum_of_arr = sum(arr) 
    return total - sum_of_arr 

arr = [2, 3, 1, 5, 4]
missing = missingNumber(arr) 
print(missing)",correct,File I/O
Design a Python method to find the largest number in an array of integers.,"[-10, 10, 1, -100]","def find_largest_number(nums):
    biggest = nums[0]
    for num in nums:
        if num > biggest:
            biggest = num
    return biggest

nums = [-10, 10, 1, -100]
print(find_largest_number(nums))","def find_largest_number(nums):
    biggest = nums[0]
    for num in nums:
        if num > biggest:
            biggest = num
    return biggest

nums = [-10, 10, 1, -100]
pritn(find_largest_number(nums))",Syntax Error,File I/O
Design a Python program which sorts a list of integers from lowest to highest.,"[5, 2, 4, 1, 3]","def sort_list(list):
     for i in range(0, len(list)): 
          for j in range(0, len(list) - 1 - i): 
               if list[j] > list[j + 1]: 
                    list[j], list[j + 1] = list[j + 1], list[j]
     return list

list = [5, 2, 4, 1, 3]

sorted_list = sort_list(list)

print(sorted_list)","def sort_list(list):
     for i in range(0, len(list)): 
          for j in range(0, len(list) - 1 - i): 
               if list[j] > list[j + 1]: 
                    list[j], list[j + 1] = list[j + 1], list[j]
     return list

list = [5, 2, 4, 1, 3]

sorted_list = sort_list(list)

print(sorted_list)",correct,OOP
Write a Python program to split a string on the first occurrence of a given substring.,"string = ""www.example.com""
substring = "".""","string_list = string.split(substring,1)
print(string_list)","string_list = string.split(substring,1
print(string_list",Syntax Error,String Manipulation
Write a Python code to detect the Odd or Even numbers in a given list.,"list = [1, 2, 3, 4, 5]","for num in list: 
    if num % 2 == 0: 
        print(num, ""is an even number"") 
    else: 
        print(num, ""is an odd number"")","for num in list: 
    if num % 2 == 0: 
        print(num, ""is an even number"") 
    else: 
        print(num, ""is an odd number"")",correct,Loops
Optimize the given code in Python to reduce its complexity,"my_list = [1, 2, 3, 4, 5]
total = 0

for x in my_list:
    total = total + x","my_list = [1, 2, 3, 4, 5]
total = sum(my_list)

print(""Sum of all elements in given list:"", total)","my_list = [1, 2, 3, 4, 5]
total = sum(my_list)

print(""Sum of all elements in given list:"", total)",correct,Recursion
Create a Python program to calculate the total price of 5 items where each item has a price of $10 and a tax rate of 5%.,,"total_price = 0
price_of_item = 10
tax_rate = 0.05

for i in range(5):
 total_price += price_of_item

total_price = total_price + (total_price * tax_rate)

print(total_price)","total_price = 0
price_of_item = 10
tax_rate = 0.05

for i in range(5):
 total_price += ",Incomplete Answer,File I/O
Can you write a python program to identify the last index of a given element in a list?,"The list [2, 5, 9, 2, 4] and the element 2","# Define the list
list_ = [2, 5, 9, 2, 4]
  
# Find the last index of element 2
last_index = len(list_) - list_[::-1].index(2) - 1
  
# Print the result
print(last_index)","# Define the list
list_ = [2, 5, 9, 2, 4]
  
# Find the last index of element 2
last_index = len(list_) - list_[::-1].index(2) - 1
  
# Print the result
print(last_index)",correct,Loops
Classify the variable x in Python given the following: x = 2 + 4.,,x is an integer.,x is an integer.,Syntax Error,File I/O
Construct a program in Python to filter a list of stocks by price,"stocks = [{‘ticker’:’AAPL’,‘price’: 233.5}, {‘ticker’:’MSFT’,‘price’: 115.8}, {‘ticker’:’GOOGL’, ‘price’: 1234.5}] , price_limit = 100","stocks = [{‘ticker’:’AAPL’,‘price’: 233.5}, {‘ticker’:’MSFT’,‘price’: 115.8}, {‘ticker’:’GOOGL’, ‘price’: 1234.5}]
price_limit = 100

filtered_stocks = [stock for stock in stocks if stock[""price""] > price_limit]

print(filtered_stocks)","stocks = [{‘ticker’:’AAPL’,‘price’: 233.5}, {‘ticker’:’MSFT’,‘price’: 115.8}, {‘ticker’:’GOOGL’, ‘price’: 1234.5}]
price_limit = 100

filtered_stocks = [stock for stock in stocks if stock[""price""] > price_limit]

print(filtered_stocks)",correct,Loops
Create and display a multiplication table of 7 using a Python program.,,"#Create and display a multiplication table of 7
 
#print table header
print(' 7 x Table')
  
#print table column header
print('  7  |  14  |  21  |  28  |  35  |  42  |  49  |  56  |')
  
#print table row
for num in range(1,10):
    row_num = 7 * num
    print(f'{row_num:4}  |', end=' ')
    
print()","#Create and display a multiplication table of 7
 
#print table header
print(' 7 x Table')
  
#print table column header
print('  7  |  14  |  21  |  2",Incomplete Answer,Loops
Generate a Python program to classify a given feature set into two classes,"features = [[9, 3], [7, 2], [4, 1], [0, 5]]
class_labels = ['good', 'bad']","def classify(features, class_labels):
    decision_boundary = 5 
    predictions = []
    for feature in features:
        if feature[0] > decision_boundary:
            predictions.append(class_labels[0])
        else:
            predictions.append(class_labels[1])
    return predictions","def classify(features, class_labels):
    decision_boundary = 5 
    predictions = []
    for feature in features:
        if feature[0] > decision_boundary:
            predictions.append(class_labels[0])
        else:
            predictions.append(class_labels[1])
    return predictions",correct,File I/O
Generate Python code to perform an action based on a given condition.,"Condition: If the user input is an integer, print ""You have entered an integer""","user_input = input(""Enter a number:"")
if user_input.isdigit():
   print(""You have entered an integer."")","user_input = input(""Enter a number:"")
if user_input.isdigit():
   print(""You have entered an integer."")",correct,Loops
Write a function in Python to evaluate an algebraic expression,"exp= ""((x+y)^2)*(x+1)""
x=2
y=3","def evaluate_expr(expr,x,y):
    x = float(x)
    y = float(y)

    def eval_expr(expr):
        return eval(expr)

    evaluation = eval_expr(expr.replace(""x"", str(x)).replace(""y"", str(y)))
    return evaluation
 
exp = ""((x+y)^2)*(x+1)""
x = 2
y = 3
print(evaluate_expr(exp,x,y))","def evaluate_expr(expr,x,y):
    x = float(x)
    y = float(y)

    def eval_expr(expr):
        return eval(expr)

    evaluation = eval_ex",Incomplete Answer,Recursion
Develop an algorithm to sort a list of numbers from low to high inPython.,"[5, 7, 1, 6, 10, 4, 2]","def sort_numbers(nums):
    for i in range(len(nums)):
        for j in range(i+1, len(nums)):
            if nums[i] > nums[j]:
                temp = nums[j]
                nums[j] = nums[i]
                nums[i] = temp
    return nums

print(sort_numbers([5, 7, 1, 6, 10, 4, 2]))","def sort_numbers(nums:
    for i in range(len(nums:
        for j in range(i+1, len(nums:
            if nums[i] > nums[j]:
                temp = nums[j]
                nums[j] = nums[i]
                nums[i] = temp
    return nums

print(sort_numbers([5, 7, 1, 6, 10, 4, 2]",Syntax Error,Loops
Edit the following Python function to return a sorted list of the words in the given string.,"def get_words(text):
    words = text.split()
    return words","def get_words(text):
    words = text.split()
    return sorted(words)","def get_words(text):
    words = text.split()
    return sorted(words)",Syntax Error,Loops
Write a Python code snippet to count the number of occurrences of a given letter in a string.,"string = ""Mississippi"",
letter = ""s""","letter = 's'
string = ""Mississippi""
count = 0
for char in string:
   if char == letter:
       count += 1
print(count)","letter = 's'
string = ""Mississippi""
count = 0
for char in string:
   if char == letter:
       count += 1
print(name, count)",Syntax Error,Loops
Edit the Python code given to detect errors.,"def add(x, y):
    z = x / y
    return z","def add(x, y):
    # assert y is not zero
    assert y != 0, "" y must not be zero!""
    z = x + y
    return z","def add(x, y):
    # assert y is not zero
    assert y ",Incomplete Answer,Loops
Optimize the following Python code to minimize memory consumption and maximize speed.,"def setup_list():
    my_list = []
    for i in range(10000):
        my_list.append([0] * 10000)
    return my_list","def setup_list():
    my_list = [[0] * 10000 for _ in range(10000)]
    return my_list","def setup_list():
    my_list = [[0] * 1000",Incomplete Answer,String Manipulation
Understand the meaning of the given data and create a classification model in Python.,"x1 = [1 ,2 ,3, 4, 5]
y = [1, 2, 1, 2, 1]","# Import necessary library 
from sklearn import svm

# Create a feature and label array 
X = [[1], [2], [3], [4], [5]] 
Y = [1,2,1,2,1]

# Set up the svm model 
clf = svm.SVC(kernel='linear')

# Train the model 
clf.fit(X, Y)

# Test the model 
predictions = clf.predict([[3]])
print(predictions)","# Import necessary library 
from sklearn import svm

# Create a feature and label array 
X = [[1], [2], [3], [4], [5]] 
Y = [1,2,1,2,1]

# Set up the svm model 
clf = svm.SVC(kernel='linear')

# Train the model 
clf.fit(X, Y)

# Test the model 
predictions = clf.predict([[3]])
print(name, predictions)",Syntax Error,String Manipulation
Design an algorithm in Python to check if a number is divisible by three.,,"def is_divisible_by_three(num):
  if num % 3 == 0:
    return True
  return False","def is_divisible_by_three(num):
  if num % 3 == 0:
    return True
  return False",correct,Recursion
Create a class in Python that can calculate the total price of items.,,"class TotalPriceCalculator():
    def __init__(self):
        self.total_price = 0
    
    def add_item(self,price):
        self.total_price+=price
    
    def get_total_price(self):
        return self.total_price","class TotalPriceCalculator():
    def __init__(self):
        self.total_price = 0
    
    def add_item(self,price):
        self.total_price+=price
    
    def get_total_price(self):
        return self.total_price",correct,Loops
Design a Python script that prints out all the even numbers in a given list of numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","# given list of numbers
nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# empty list for even numbers
even_list = []

# iterate over the list
for num in nums:
    # check if number is even
    if num % 2 == 0:
        # append number to even list
        even_list.append(num)

# print even numbers
print(even_list)","# given list of numbers
nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# empty list for even numbers
even_list = []

# iterate over the list
for num in nums:
  ",Incomplete Answer,OOP
Develop a Python code that takes in an array of integers and outputs the array sorted in descending order.,"[9, 2, 7, 1]","def sort_descending(arr):
    arr.sort(reverse=True)
    return arr

arr = [9, 2, 7, 1]
res = sort_descending(arr) 
print (str(res))","def sort_descending(arr):
    arr.sort(reverse=True)
    return arr

arr = [9, 2, 7, 1]
res = sort_descending(arr) 
print (str(res))",correct,OOP
Write a Python program to find the index of the first occurrence of the given element in the given list.,"inputlist = [1, 2, 5, 8, 10, 9]
element = 8","def find_element(inputlist, element):
    for i, num in enumerate(inputlist):
        if element == num:
            return i","def find_element(inputlist, element:
    for i, num in enumerate(inputlist:
        if element == num:
            return i",Syntax Error,OOP
"Generate a Python program to compute the sum of the numbers in an array, after mapping each element to its square.","myList = [2, 3, 4, 5, 6]","def sum_of_squares(myList):
    result = 0
    for num in myList:
        result += num**2
    return result

total = sum_of_squares(myList)
print(""Sum of Squares:"", total)","def sum_of_squares(myList):
    result = 0
    for num in myList:
        result += num**2
    return result

total = sum_of_squares(myList)
print(""Sum of Squares:"", total)",correct,String Manipulation
Convert the following SQL query into a python pandas dataframe.,SELECT * from books WHERE author LIKE '%Rowling%';,"import pandas as pd

# read the books table
df = pd.read_sql(""SELECT * from books"", connection)

# filter for rows with matching author
df_filtered = df[df['author'].str.contains(""Rowling"")]

# print the results
print(df_filtered)","import pandas as pd

# read the books table
df = pd.read_sql(""SELECT * from books"", connection)

# filter for rows with matching author
df_filtered = df[df['author'].str.contains(""Rowling"")]

# print the results
print(name, df_filtered)",Syntax Error,String Manipulation
Develop a Python program which will take a string and print out the total number of characters in it.,,"def num_chars(string):
    char_count = 0
    for i in string:
        char_count += 1
    print(""The number of characters in the string is"", char_count)","def num_chars(string):
    char_count = 0
    for i in string:
        char_count += 1
    print(""The number of characters in the string is"", char_count)",correct,Recursion
Write a python program that takes a list and return a new list with even numbers.,,"def get_even_numbers(list):
    # Write a python program that takes a list and return a new list with only even numbers.
    return [x for x in list if x % 2 == 0]
  
if __name__ == '__main__':
    list = [2, 3, 5, 7, 9, 10]
    print(get_even_numbers(list))
    # Output: [2, 10]","def get_even_numbers(list):
    # Write a python program that takes a list and return a new list with only even numbers.
    return [x for x",Incomplete Answer,Loops
Generate a code to optimize the following program for better performance in Python.,"random_list = []
for i in range(0, 10):
    random_list.append(random.randint(0, 10))

unique_list = []
for i in random_list:
    if i not in unique_list:
        unique_list.append(i)","import random

random_list = [random.randint(0, 10) for _ in range(10)]
unique_list = list(set(random_list))","import random

random_list = [random.randint(0, 10) fo",Incomplete Answer,Loops
Generate a Python function to generate a sequence of numbers based on a given interval.,"Start: 2, End: 5","def generate_sequence(start, end):
    return list(range(start, end + 1))","def generate_sequence(start, end):
return list(range(start, end + 1))",Syntax Error,String Manipulation
Generate a voltage signal with random noise using a Python script.,A signal of frequency 250 Hz and amplitude 1 V.,"import numpy as np 

freq = 250 
amplitude = 1 

t= np.linspace(0, 1, 1000) 
voltage_signal = np.sin(2*np.pi*freq*t) + np.random.normal(0, 0.1, 1000)","import numpy as np 

freq = 250 
amplitude = 1 

t= np.linspace(0, 1, 1000) 
voltage_signal = np.sin(2*np.pi*freq*t) + np.random.normal(0, 0.1, 1000)",Syntax Error,String Manipulation
Write a Python program to combine two nested dictionaries into one.,"dict1 = {'x': 10, 'y': 20}
dict2 = {'a': 5, 'b': 10}","combined_dict = {**dict1, **dict2}","combined_dict = {**dict1, **dict2}",correct,OOP
Construct a python program to separate even and odd numbers from an array.,"[1, 2, 3, 4, 5, 6]","def separate_even_odd(arr):
    even = []
    odd = []
    for num in arr:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return even, odd
 
even, odd = separate_even_odd([1, 2, 3, 4, 5, 6])
print('Even numbers:', even)
print('Odd numbers:', odd)","def separate_even_odd(arr):
    even = []
    odd = []
    for num in arr:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return even, odd
 
even, odd = separate_even_odd([1, 2, 3, 4, 5, 6])
print('Even numbers:', even)
print('Odd numbers:', odd)",correct,OOP
"Write a Python program to generate a list containing all the linear combinations of `x` and `y`, where `x` and `y` are given as input.","x = [1, 2, 3]
y = [4, 5, 6]","x = [1, 2, 3]
y = [4, 5, 6]

combinations = [[i, j] for i in x for j in y]
print(combinations)","x = [1, 2, 3]
y = [4, 5, 6]

combinations = [[i",Incomplete Answer,Loops
Construct a program in Python to search for a given number in an array.,"array = [1, 2, 3, 4, 5]
number = 3","def search(array, x):
	for i in range(len(array)):
		if array[i] == x:
			return i
	return -1","def search(array, x):
	for i in range(len(array)):
		if array[i] == x:
			return i
	return -1",Syntax Error,String Manipulation
Generate a Python function to find all anagrams of a given string in a given list of strings.,,"def find_anagrams(string, words):
 anagrams = []
 for word in words:
  if sorted(word) == sorted(string):
   anagrams.append(word)
 return anagrams","def find_anagrams(string, words):
 anagrams = []
 for word in words:
  if sorted(word) == sorted(string):
   anagrams.append(word)
 return anagrams",correct,OOP
Edit this python code to reverse the function’s argument order.,"def multiply(x,y):
  return x*y","def multiply(y, x):
  return x*y","def multiply(y, x):
  return x*y",correct,String Manipulation
Implement a function in Python for finding the maximum element in an array.,"list = [18, 25, 1, 12, 37]","def find_max(list):
    max_element = list[0]
    for element in list:
        if element > max_element:
            max_element = element
    return max_element

max = find_max(list)
print(max)","def find_max(list:
    max_element = list[0]
    for element in list:
        if element > max_element:
            max_element = element
    return max_element

max = find_max(list
print(max",Syntax Error,String Manipulation
Write a function that generates a random password of 8 characters in Python.,,"import random 
  
def generate_password(): 
    password = """"
    characters = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+""
    for i in range(0,8):
        password += random.choice(characters)
    return password","import random 
  
def generate_password(): 
    password = """"
    characters = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+""
    for i in range(0,8):
        password += random.choice(characters)
    return password",Syntax Error,File I/O
Create a python script for calculating the mode of a given sequence of numbers,,"def calculate_mode(sequence):
 counts = {}
 for num in sequence:
 if num in counts:
 counts[num] += 1
 else:
 counts[num] = 1
 
 max_count = 0
 mode_num = 0
 for key, value in counts.items():
 if value > max_count:
 max_count = value
 mode_num = key
 
 return mode_num","def calculate_mode(sequence):
 counts = {}
 for num in sequence:
 if num in counts:
 counts[num] += 1
 else:
 counts[num] = 1
 
 max_count = 0
 mode_num = 0
 for key, value in counts.items():
 if value > max_count:
 max_count = value
 mode_num = key
 
 return mode_num",Syntax Error,OOP
Generate a Python code to execute the following logic,"Given a string, take all the characters and add them up, then store the result in a variable.","def add_string(string):
    result = 0
    for char in string:
        result += ord(char)
    return result","def add_string(string):
    result = 0
    for char in string:
        result += ord(char)
    return result",correct,Loops
Generate a function in Python which takes two parameters and determines the greatest common divisor between the two numbers.,,"def find_gcd(a, b): 
    if a == 0: 
        return b 
    if b == 0: 
        return a 
    if a == b: 
        return a 
    if a > b: 
        return find_gcd(a-b, b) 
    return find_gcd(a, b-a)","def find_gcd(a, b): 
    if a == 0: 
        return b 
    if b == 0: 
        return a 
    if a == b: 
        return a 
    if a > b: 
        return find_gcd(a-b, b) 
    return find_gcd(a, b-a)",correct,Recursion
Write a Python program that creates a new database and a new table in it.,,"import mysql.connector

# Create a database connection
connection = mysql.connector.connect(
  host=""localhost"",
  user=""root"",
  passwd=""""
)

# Create a new database
cursor = connection.cursor()
cursor.execute(""CREATE DATABASE mydatabase"")

# Create a new table in the database
cursor.execute(""USE mydatabase"")
cursor.execute(""CREATE TABLE mytable (id INT, name VARCHAR(255), age INT)"")","import mysql.connector

# Create a database connection
connection = mysql.connector.connect(
  host=""localhost"",
  user=""root"",
  passwd=""""
)

# Create a new database
cursor = connection.cursor()
cursor.execute(""CREATE DATABASE mydatabase"")

# Create a new table in the database
cursor.execute(""USE mydatabase"")
cursor.execute(""CREATE TABLE mytable (id INT, name VARCHAR(255), age INT)"")",Syntax Error,Recursion
Generate a Python program to calculate the Gross Domestic Product (GDP) of a country.,,"def calculate_GDP(consumption, investment, government_spending, export, import_):
    gdp = consumption + investment + government_spending + (export - import_)
    return gdp

consumption = 100
investment = 50
government_spending = 25
export = 20
import_ = 10

print(f""The GDP of the country is {calculate_GDP(consumption, investment, government_spending, export, import_)}."")","def calculate_GDP(consumption, investment, government_spending, export, import_):
    gdp = consumption + investment + government_spending + (export - import_)
    return gdp

consumption ",Incomplete Answer,OOP
Create a Python script to sort the following list in ABC order,"list = [3, 6, 9, 1, 4, 8]","list = [3, 6, 9, 1, 4, 8]

list.sort()

print(list)","list = [3, 6, 9, 1, 4, 8]",Incomplete Answer,String Manipulation
Write a Python program to compare two unordered lists to see if they are equal.,"list1 = [3, 4, 5]
list2 = [4, 5, 3]","def compare_lists(list1, list2):
    if len(list1) != len(list2):
        return False
    if sorted(list1) == sorted(list2):
        return True
    return False","def compare_lists(list1, list2):
    if len(list1) != len(list2):
        return False
    if sorted(list1) == sorted(list2):
        return True
    return False",correct,File I/O
Write a function to count number of lists in a given list of lists and square the count.,,"def count_list(input_list): 
    return (len(input_list))**2","def count_list(input_list): 
    return (len(input_list))**2",Syntax Error,String Manipulation
Edit the following Python code to calculate the sum of all the elements in a two-dimensional array.,"arr = [[1,2,3], [4,5,6], [7,8,9]]","arr = [[1,2,3], [4,5,6], [7,8,9]]

sum = 0

for row in arr:
 for col in row:
  sum = sum + col

print(""Sum:"", sum)","arr = [[1,2,3], [4,5,6], [7,8,9]]

sum = 0

for row in ar",Incomplete Answer,OOP
Create a Python program to calculate the sum of natural numbers below a certain number.,n=100,"def sumNaturalNumbers(n): 
  sum = 0
  for i in range(1, n+1): 
    sum+=i 
  return sum
    
print(sumNaturalNumbers(100))","def sumNaturalNumbers(n): 
  sum = 0
  for i in range(1, n+1): 
    sum+=i 
  return sum
    
print(sumNaturalNumbers(100))",correct,Loops
Edit the following Python code so that it prints the sum of the list elements.,"list = [10, 20, 30, 40]","list = [10, 20, 30, 40]

sum = 0
for i in list:
 sum += i

print(""The sum is"", sum)","list = [10, 20, 30, 40]

sum = 0
for i in",Incomplete Answer,File I/O
Write a Python program to display the powers of 2 up to the given power.,8,"# This code will display the powers of 2 up to a given power

# Get the input
power = 8

# Calculate the powers of 2 
for i in range(power+1):
    print(2**i, end=' ')

# Print a newline
print("""")","# This code will display the powers of 2 up to a given power

# Get the input
power = 8

# Calculate the powers of 2 
for i in range(power+1):
    pritn(2**i, end=' ')

# Print a newline
pritn("""")",Syntax Error,Recursion
Provide a Python program to generate the number of days in a given year.,,"def days_in_year(year): 
    if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0): 
        return 366 
    else: 
        return 365","def days_in_year(year): 
    if (year % 4 == 0 and year % 100 != 0) or",Incomplete Answer,File I/O
"Create a SQLite table in Python to store information about books in a library. The table should include fields for title, author, year of publication, and number of copies.",,"import sqlite3

# connect to the database
conn = sqlite3.connect('library.db')
c = conn.cursor()

#create table
c.execute(""CREATE TABLE books (title TEXT, author TEXT, year INT, copies INT)"")

# save the changes
conn.commit()

# close the database connection
conn.close()","import sqlite3

# connect to the database
conn = sqlite3.connect('library.db')
c = conn.cursor()

#create table
c.execute(""CREATE TABLE books (title TEXT, author TEXT, year INT, copies INT)"")

# save the changes
conn.commit()

# close the database connection
conn.close()",Syntax Error,Loops
Write a Python program to create a new list that contains all the elements of the given list multiplied by each other.,"nums = [1, 2, 3, 4]","def multiply(nums):
    result = []
    for i in range(len(nums)):
        for j in range(i+1, len(nums)):
            result.append(nums[i] * nums[j]) 
    return result","def multiply(nums):
    result = []
    for i in range(len(nums)):
        for j in r",Incomplete Answer,String Manipulation
Write a python function to find the average of cubes of first n natural numbers.,,"def find_Average_Of_Cube(n):  
    sum = 0
    for i in range(1, n + 1): 
        sum += i * i * i  
    return round(sum / n, 6) ","def find_Average_Of_Cube(n):  
    sum = 0
    for i in range(1, n + 1): 
        sum += i * i * i  
    return round(sum / n, 6) ",Syntax Error,OOP
"Write a function in Python that will take a string as input, reverse the order of the words, and return the new string.","string = ""Hello World""","def reverseString(string):
  words = string.split(' ')
  reversedString = []
  for i in range(len(words)-1, -1, -1):
    reversedString.append(words[i])
  return ' '.join(reversedString)
  
print(reverseString(""Hello World"")) # Output: World Hello","def reverseString(string:
  words = string.split(' '
  reversedString = []
  for i in range(len(words-1, -1, -1:
    reversedString.append(words[i]
  return ' '.join(reversedString
  
print(reverseString(""Hello World"" # Output: World Hello",Syntax Error,File I/O
Write a python code to calculate the total cost of a grocery bill.,"items=[(""apple"", 2.50), (""banana"", 3.00), (""avocado"", 1.80)]","def total_cost(items):
    total = 0
    for item, price in items:
        total += price
    return total

if __name__ == '__main__':
    output = total_cost([(""apple"", 2.50), (""banana"", 3.00), (""avocado"", 1.80)])
    print(output)","def total_cost(items):
    total = 0
    for item, price in items:
        total += price
    return total

if __name__ == '__main__':
    output = total_cost([(""apple"", 2.50), (""banana"", 3.00), (""avocado"", 1.80)])
    print(output)",correct,String Manipulation
Write a python program to print out the numbers from 1 to 10.,,"for i in range(1, 11):
    print (i)","for i in range(1, 11)
    print (i)",Syntax Error,String Manipulation
Program a python method to add a given number to each element of a given list.,,"def add_number(numbers, number):
 result = []
 for x in numbers:
 result.append(x + number)
 return result","def add_number(numbers, number):
 result = []
 for x in numbers:
 result.append(x + number)
 return result",Syntax Error,OOP
Create a Python program to generate random passwords of 8 alphanumeric characters.,,"import string
import random

def generate_password():
    letters = string.ascii_letters + string.digits
    return ''.join(random.choice(letters) for i in range(8))","import string
import random

def generate_password():
    letters = string.ascii_letters + string.digits
    return ''.join(random.choice(letters) for i in range(8))",correct,String Manipulation
Implement a recursive function in Python that takes a (string) as input and returns a reversed version of the input string.,,"def rev_string(input_str):
    if len(input_str) == 0:
        return input_str
    else:
        return rev_string(input_str[1:]) + input_str[0]","def rev_string(input_str):
    if len(input_str) == 0:
        return input_str
    else:
        return rev_string(input_str[1:]) + input_str[0]",correct,File I/O
Write a Python program to find the number of occurrences of a given element in an array.,"list = [1, 2, 5, 4, 1, 5]","def countOccurrences(list, element):
    count = 0
    for i in range(len(list)):
        if list[i] == element:
            count += 1
    return count

if __name__ == '__main__':
    list = [1, 2, 5, 4, 1, 5]
    element = 5
    print(countOccurrences(list, element))","def countOccurrences(list, element):
count = 0
for i in range(len(list)):
    if list[i] == element:
        count += 1
return count

if __name__ == '__main__':
list = [1, 2, 5, 4, 1, 5]
element = 5
print(countOccurrences(list, element))",Syntax Error,Loops
Use the following data and create a python program to find the minimum value in the list.,"nums = [7, 8, 5, 1, 9, 4]","# find the minimum value using the min function
min_value = min(nums)

# print the minimum value
print(""The minimum value is: "",min_value)","# find the minimum value using the min function
min_value = min(nums)

# print the minimum value
print(""The minimum value is: "",min_value)",correct,String Manipulation
Use Python to modify a JSON object for specific key-value pairs.,"Object: {name: Tom, age: 25, occupation: Data Scientist, hobbies: [Reading, Badminton]}","# Modify a JSON object

import json

object = {'name': 'Tom', 'age': 25, 'occupation': 'Data Scientist', 'hobbies': ['Reading', 'Badminton']}

if 'occupation' in object:
    object['occupation'] = 'AI Engineer'

if 'hobbies' in object:
    object['hobbies'].append('Cycling')

print(json.dumps(object,indent=2))","# Modify a JSON object

import json

object = {'name': 'Tom', 'age': 25, 'occupation': 'Data Scientist', 'hobbies': ['Reading', 'Badminton']}

if 'occupation' in object:
object['occupation'] = 'AI Engineer'

if 'hobbies' in object:
object['hobbies'].append('Cycling')

print(json.dumps(object,indent=2))",Syntax Error,File I/O
Create a Python program to sort a list of numbers from lowest to highest.,"[3, 7, 2, 1, 19]","def sort_list(nums):
    for i in range(len(nums)):
        min_index = i
        
        for j in range(i+1, len(nums)):
            if nums[min_index] > nums[j]:
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
        
    return nums
    
print(sort_list([3, 7, 2, 1, 19]))

# Output: [1, 2, 3, 7, 19]","def sort_list(nums):
for i in range(len(nums)):
    min_index = i
    
    for j in range(i+1, len(nums)):
        if nums[min_index] > nums[j]:
            min_index = j
    
    nums[i], nums[min_index] = nums[min_index], nums[i]
    
return nums

print(sort_list([3, 7, 2, 1, 19]))

# Output: [1, 2, 3, 7, 19]",Syntax Error,Loops
Create a Python function to delete the last character of a given string.,"""Hello World!""","def delete_last_char(string):
    """"""Delete the last character of a given string.

    Args:
        string (str): The string to remove the last character from. 

    Returns:
        str: The string with the last character removed.
    """"""
    return string[:-1]

if __name__ == '__main__':
    string = ""Hello World!""
    result = delete_last_char(string)
    print(result)","def delete_last_char(string):
    """"""Delete the last character of a given string.

    Args:
        string (str): The string to remove the last character from. 

    Returns:
        str: The string with the last character removed.
    """"""
    return string[:-1]

if __name__ == '__main__':
    string = ""Hello World!""
    result = delete_last_char(string)
    print(result)",correct,Loops
Write a python program for binary search,"[2, 5, 7, 9, 11, 15]","def binarySearch(arr, target):
    left = 0
    right = len(arr) - 1

    while left <= right:
        mid = (left + right) // 2

        if arr[mid] == target:
            return mid
        elif arr[mid] > target:
            right = mid - 1
        else:
            left = mid + 1
    return -1","def binarySearch(arr, target):
    left = 0
    right = len(arr) - 1

    while left <= right:
        mid = (left + right) // 2

        if arr[mid] == target:
            return mid
        elif arr[mid] > target:
            right = mid - 1
        else:
            left = mid + 1
    return -1",Syntax Error,Recursion
Generate a Python dictionary that stores objects with unique values.,"['alec', 'bob', 'sara', 'john', 'elon']","unique_dict = {
  'alec' : 'alec',
  'bob'  : 'bob',
  'sara' : 'sara',
  'john' : 'john',
  'elon' : 'elon'
}","unique_dict = {
  'alec' : 'alec',
  'bob'  : 'bob',
  'sara' : 'sara',
  'john' : 'john',
  'elon' : 'elon'
}",correct,Recursion
"Given a list of numbers, write a Python program to find the element in the list having the highest value.",,"def find_max(list):
    max_value = list[0]
    for num in list:
        if num > max_value:
            max_value = num
    return max_value","def find_max(list):
    max_value = list[0]
    for num in list:
        if num > max_value:
            max_value = num
    return max_value",correct,OOP
Create a web application in Python with Flask that has a homepage and a page that displays the current time.,,"from datetime import datetime

from flask import Flask

app = Flask(__name__)

@app.route('/')
def index():
 return 'Homepage'

@app.route('/time')
def time():
 time = datetime.now().strftime('%H:%M:%S')
 return f'The current time is {time}.'

if __name__ == '__main__':
 app.run()","from datetime import datetime

from flask import Flask

app = Flask(__name__)

@app.route('/')
def index():
 return 'Homepage'

@app.route('/time')
def time():
 time = datetime.now().strftime('%H:%M:%S')
 return f'The current time is {time}.'

if __name__ == '__main__':
 app.run()",correct,String Manipulation
Create a Python code to display the multiplication table for a number between,Number: 4,"for i in range(1, 11):
    print(""4 x"", i, ""="", 4*i)","for i in range(1, 11):
   ",Incomplete Answer,Loops
Write a Python program that performs linear regression. The program should generate a prediction given an input and a list of parameters.,"Input: 5 
Parameters: [0.5, 1.2, 3.1]","import numpy as np
 
def predict(x, params):
 x = np.array(x)
 params = np.array(params)
 
 y = 0
 for i in range(params.shape[0]):
 y += params[i] * x ** i
 
 return y
 
x = 5
params = [0.5, 1.2, 3.1]
 
y = predict(x, params)
print(y) # Output: 35.4","import numpy as np
 
def predict(x, params):
 x = np.array(x)
 params = np.array(params)
 
 y = 0
 for i in range(params.shap",Incomplete Answer,String Manipulation
Filter a string in Python by removing all alphabets and keeping only the numbers.,"my_string = ""hey3this5is4my2string1""","def filter_string(str):
    str = ''.join(x for x in str if x.isdigit())
    return str  

my_string = ""hey3this5is4my2string1""
print(filter_string(my_string))","def filter_string(str):
    str = ''.join(x for x in str if x.isdigit())
    re",Incomplete Answer,OOP
Write a Python script to download the source code of a website.,URL: example.com,"import requests

# send the request 
response = requests.get(""http://example.com"")

# get the source code of the website
data = response.text 

# write the source code into a file
with open('example_source.txt', 'w') as file:
 file.write(data)","import requests

# send the request 
response = requests.get(""http://example.com"")

# get the source code of the website
",Incomplete Answer,Recursion
Create a program in Python that takes an input string and removes all duplicate characters.,"let str = ""abracadabra""","def removeDuplicates(str): 
 s = """"
for i in range(len(str)): 
 if str[i] not in s: 
  s += str[i] 
 return s

str = ""abracadabra""
print(""The output string is:"", removeDuplicates(str))","def removeDuplicates(str): 
 s = """"
for i in range(len(str)): 
 if str[i] not in s: 
  s += str[i] 
 return s

str = ""abracadabra""
print(""The output string is:"", removeDuplicates(str))",correct,OOP
Compute the Fibonacci sequence of numbers up to 10 terms using a recursive function in Python.,,Function in Python to compute the Fibonacci sequence of numbers up to 10 terms using a recursive method.,Function in Python to compute the Fibonacci sequence of numbers up to 10 terms using a recursive method.,correct,String Manipulation
Create a Python script that takes two string variables as inputs and prints out the shorter of the two.,"a = ""Hello world""
b = ""Goodbye world""","if len(a) < len(b):
    print(a)
else:
    print(b)","if len(a) < len(b):
    print(name, a)
else:
    print(name, b)",Syntax Error,File I/O
Create a function in Python that takes a two-dimensional array with n rows and m columns and returns the transposed array.,"[ [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9] ]","def transpose(matrix):
    num_rows = len(matrix)
    num_cols = len(matrix[0])
    transposed = [ [0 for j in range(num_rows)] for i in range(num_cols) ]
    for i in range(num_rows):
        for j in range(num_cols):
            transposed[j][i] = matrix[i][j]
    return transposed","def transpose(matrix)
    num_rows = len(matrix)
    num_cols = len(matrix[0])
    transposed = [ [0 for j in range(num_rows)] for i in range(num_cols) ]
    for i in range(num_rows)
        for j in range(num_cols)
            transposed[j][i] = matrix[i][j]
    return transposed",Syntax Error,File I/O
"For an existing Python program, write a function to sort a given list of numbers in ascending order.","[4, 3, 2, 5, 1]","def sort_list(numbers): 
 numbers.sort()
 return numbers

print(sort_list([4, 3, 2, 5, 1]))","def sort_list(numbers): 
 numbers.sort()
 ret",Incomplete Answer,File I/O
Create a Python function to establish a connection to a SQL database.,,"import mysql.connector

def establish_connection(hostname, user, password):
    db = mysql.connector.connect(
        host=hostname,
        user=user,
        passwd=password
    )

    return db","import mysql.connector

def establish_connection(hostname, user, password):
    db = mysql.connect",Incomplete Answer,Loops
"Generate a piece of code, using Python, which would generate a random password string that contains only lowercase, uppercase, numerical and special characters.",,"import string
import random

def generate_password():
    chars = string.ascii_uppercase + string.ascii_lowercase + string.digits + string.punctuation
    return ''.join(random.choice(chars) for _ in range(8))

print(generate_password())","import string
import random

def generate_password():
    chars = string.ascii_uppercase + string.ascii_lowercase + st",Incomplete Answer,Recursion
Generate an HTML page using web scraping.,,"One approach to generating an HTML page using web scraping is to use the BeautifulSoup library. BeautifulSoup is a Python library that can be used to parse HTML documents. After parsing the document, the parsed elements can be extracted and a new HTML page can be generated. The new HTML page can contain the same elements as the original page, or the elements can be formatted to create a new page with a different format.","One approach to generating an HTML page using web scraping is to use the BeautifulSoup library. BeautifulSoup is a Python library that can be used to parse HTML documents. After parsing the document, the parsed elements can be extracted and a new HTML page can be generated. The new HTML page can contain the same elements as the original page, or the elements can be formatted to create a new page with a different format.",correct,String Manipulation
Create an algorithm in Python to search a given list for a specific value.,"[1, 4, 6, 8, 10], 8","def search(lst, target):
 for i in range(len(lst)):
  if lst[i] == target:
   return i
 return -1

search([1, 4, 6, 8, 10], 8)  # Output: 3","def search(lst, target):
 for i in range(len(lst)):
  if lst[i] == target:
   return i
 return -1

search([1, 4, 6, 8, 10], 8)  # Output: 3",Syntax Error,File I/O
Create a Python function that takes a string as an input and returns the substring between the first and the last character.,thequickbrownfox,"def get_substring(string):
  return string[1:-1]",def get_substring(string,Incomplete Answer,String Manipulation
Create a Python script that prints out the sum of the first n even numbers.,n = 5,"def sumOfEvenNumbers(n):
    sum = 0
    for i in range(1, (n * 2) + 1):
        if i % 2 == 0:
           sum += i
    return sum

print(sumOfEvenNumbers(5))","def sumOfEvenNumbers(n):
    sum = 0
    for i in range(1, (n * 2) + 1):
        if i % 2 == 0:
           sum += i
    return sum

print(sumOfEvenNumbers(5))",correct,OOP
Create a Python function that takes an integer as an input and returns all positive integers less than the input number.,Integer: 10,"def get_pos_int(num):
    pos_ints = []
    for i in range(num):
        if i > 0:
            pos_ints.append(i)
    return pos_ints

pos_ints = get_pos_int(10)
print(pos_ints)","def get_pos_int(num):
    pos_ints = []
    for i in range(num):
        if i > 0:
            pos_ints.append(i)
    return pos_ints

pos_ints = get_pos_int(10)
print(pos_ints)",correct,OOP
Write a Python code to count the number of matching elements between two lists,"list1 = [1,2,3,4,5]
list2 = [1,3,4,7,9]","def count_matches(list1, list2):
    count = 0
    for elem in list1:
        if elem in list2:
            count += 1 
    return count","def count_matches(list1, list2):
count = 0
for elem in list1:
    if elem in list2:
        count += 1 
return count",Syntax Error,OOP
Optimize a Python function to get the smallest execution time possible.,"def func(a, b, c): 
    return a + b + c","def func(a, b, c):
    return a*b + a*c + b*c    # Use an optimized expression for lowest execution time","def func(a, b, c):
    return a*b + a*c + b*c    # Use an optimized expression for lowest execution time",correct,String Manipulation
Write a function to find the nth jacobsthal-lucas number.,,"def jacobsthal_lucas(n): 
	dp=[0] * (n + 1) 
	dp[0] = 2
	dp[1] = 1
	for i in range(2, n+1): 
		dp[i] = dp[i - 1] + 2 * dp[i - 2]; 
	return dp[n]","def jacobsthal_lucas(n: 
	dp=[0] * (n + 1 
	dp[0] = 2
	dp[1] = 1
	for i in range(2, n+1: 
		dp[i] = dp[i - 1] + 2 * dp[i - 2]; 
	return dp[n]",Syntax Error,String Manipulation
Write a Python program that takes the following dictionary as an argument and returns the count of each item,"{""apples"": 5, ""oranges"": 6, ""bananas"": 7}","def item_counts(fruits):
    counts = {}
    for k, v in fruits.items():
        counts[k] = v
    return counts","def item_counts(fruits):
    counts = {}
    for k, v in fruits.items():
        counts[k] = v
    return counts",correct,OOP
Create a class in Python that optimizes its fit by using the L1 regularization method.,,"import numpy as np

class L1Model:
    def __init__(self):
        self.coef_ = None
        
    def fit(self, X, y):
        n, m = X.shape
        w = np.random.randn(m)
        lr = 10e-5
        for t in range(1000):
            p = np.dot(X, w)
            grad = 2 * np.dot(X.T, p - y) + lr * np.sign(w)
            w = w - lr * grad
        self.coef_ = w","import numpy as np

class L1Model:
    def __init__(self):
        self.coef_ = None
        
    def fit(self, X, y):
        n, m = X.shape
        w = np.random.randn(m)
        ",Incomplete Answer,Loops
Create a python program to capitalize words in a string.,"String: ""enter the dragon""","def capitalize_words(string):
    words = string.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    return ' '.join(capitalized_words)

print(capitalize_words('enter the dragon'))","def capitalize_words(string):
    words = string.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    return ' '.join(capitalized_words)

pritn(capitalize_words('enter the dragon'))",Syntax Error,OOP
Generate a Python program that takes in a string and replaces all vowels with underscores.,,"def replace_vowels(string): 
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    new_string = """"
    for letter in string:
        if letter.lower() in vowels:
            new_string += ""_""
        else:
            new_string += letter
    return new_string

result = replace_vowels(""Hello World"")
print(result)","def replace_vowels(string): 
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    new_string = """"
    for letter in string:
        if letter.lower() in vowels:
            new_string += ""_""
        else:
            new_string += letter
    return new_string

result = replace_vowels(""Hello World"")
pritn(result)",Syntax Error,Recursion
Create a list in Python containing odd integers from 1 to 30.,,"odd_nums = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29]","odd_nums = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29]",correct,OOP
Create a program in Python that prints out a list of all items located within a specified directory.,,"import os

for item in os.listdir():
    print(item)","import os

for item in os.listdir():
    print(name, item)",Syntax Error,Recursion
Identify the most used programming language in the following data.,"Java: 30%, Python: 40%, C++: 20%, JavaScript: 10%","most_used_language = ""Python""","most_used_language = ""Python""",Syntax Error,String Manipulation
Program a python code to convert Celsius to Fahrenheit.,,"def celsiusToFahrenheit(temp):
    return round((temp * 9/5) + 32, 2)","def celsiusToFahrenheit(temp):
    return round((temp * 9/5) + 32, 2)",correct,File I/O
Create a Python program to check if a triangle is valid or not with the given values for its three sides.,"a = 2
b = 2
c = 3","def is_valid_triangle(a, b, c): 
  
    # triangle should have 3 sides 
    if a + b <= c or a + c <= b or b + c <= a: 
        return False
  
    # sum of any two side should always be greater than third side 
    if a + b > c and a + c > b and b + c > a: 
        return True
    return False

is_valid_triangle(2, 2, 3)","def is_valid_triangle(a, b, c): 
  
# triangle should have 3 sides 
if a + b <= c or a + c <= b or b + c <= a: 
    return False
  
# sum of any two side should always be greater than third side 
if a + b > c and a + c > b and b + c > a: 
    return True
return False

is_valid_triangle(2, 2, 3)",Syntax Error,Loops
Edit the following Python program to print out the key-value pair of a dictionary.,"d = {'Name': 'John', 'Age': 30, 'City': 'New York'}","d = {'Name': 'John', 'Age': 30, 'City': 'New York'}
 
for key, value in d.items():
    print(f'{key}: {value}')","d = {'Name': 'John', 'Age': 30, 'City': 'New York'}
 
for key, value in d.items():
    print(f'{key}: {value}')",correct,OOP
Write a python program to print the least common multiple of two integers,"6, 8","def lcm(x, y):
  if x > y:
    greater = x
  else:
    greater = y
  while(True):
    if((greater % x == 0) and (greater % y == 0)):
      lcm = greater
      break
    greater += 1
  return lcm","def lcm(x, y):
  if x > y:
    greater = x
  else:
    greater = y
  while(True):
    if((greater",Incomplete Answer,Recursion
Write a Python program that can accept an arbitrary number of parameters and print them all out together.,,"def print_params(*args):
 print(args)",def print_params(*,Incomplete Answer,OOP
Find the maximum value from a given list of numbers in Python.,"[12, 34, 23, 45, 13, 65, 66]","def find_max(nums):
    max = nums[0]
    for num in nums[1:]:
        if num > max: 
            max = num
    return max

print(find_max([12, 34, 23, 45, 13, 65, 66]))","def find_max(nums):
    max = nums[0]
    for num in nums[1:]:
        if num > max:",Incomplete Answer,Loops
Write a Python program to validate the given password according to the given criteria.,"The given criteria are: minimum 8 characters, should contain one uppercase letter, should contain one numeric digit","def validate_password(password):
    if len(password) < 8:
        return False
    if not any(c.isupper() for c in password):
        return False
    if not any(c.isdigit() for c in password):
        return False
    return True","def validate_password(password):
    if len(password) < 8:
        return False
    if not any(c.isupper() for c in password):
        return False
    if not any(c.isdigit() for c in password):
        return False
    return True",correct,Recursion
Write a function to concatenate the given two tuples to a nested tuple.,,"def concatenate_nested(test_tup1, test_tup2):
  res = test_tup1 + test_tup2
  return (res) ","def concatenate_nested(test_tup1, test_tup2):
  res = test_tup1 + test_tup2
  return (res) ",correct,String Manipulation
Create a Python program to print a table of numbers (1-10) and their squares.,,"# Print a table of numbers 1 to 10
for i in range(1, 11):
 print('{0:2d} {1:3d} {2:4d}'.format(i, i**2, i**3))

# Output:
 1   1    1
 2   4    8
 3   9   27
 4  16   64
 5  25  125
 6  36  216
 7  49  343
 8  64  512
 9  81  729
10 100 1000","# Print a table of numbers 1 to 10
for i in range(1, 11):
 print(name, '{0:2d} {1:3d} {2:4d}'.format(i, i**2, i**3))

# Output:
 1   1    1
 2   4    8
 3   9   27
 4  16   64
 5  25  125
 6  36  216
 7  49  343
 8  64  512
 9  81  729
10 100 1000",Syntax Error,Loops
Write a python function to find the minimum difference between any two elements in a given array.,,"def find_Min_Diff(arr,n): 
    arr = sorted(arr) 
    diff = 10**20 
    for i in range(n-1): 
        if arr[i+1] - arr[i] < diff: 
            diff = arr[i+1] - arr[i]  
    return diff ","def find_Min_Diff(arr,n): 
    arr = sorted(arr) 
    diff = 10**20 
    for i in range(n-1): 
        if arr[i+1] - arr[i] < diff: 
            diff = arr[i+1] - arr[i]  
    return diff ",correct,File I/O
Generate code in Python to remove a given element from a given list.,"List: [2, 3, 4, 5, 6]
Element to remove: 5","list = [2, 3, 4, 5, 6]

list.remove(5)","list = [2, 3, 4, 5, 6]

list.remove(5)",correct,OOP
Edit the following line of code in Python to print out the result.,print(3 + 5 x 2),print(3 + (5 * 2)),print(3 +,Incomplete Answer,Loops
Write a Python program to replace each character of a given string with the next letter in the alphabet.,,"def replace_letter(string):
 result = ''
 for c in string:
 if c == 'z':
 result += 'a'
 else:
 result += chr(ord(c)+1)
 return result","def replace_letter(string):
 result = ''
 for c in string:
 if c == 'z':
 result += 'a'
 else:
 result += chr(ord(c)+1)
 return result",correct,Loops
Can you create a Python program to sort the values in a dictionary by their keys?,"{'Shiva': 23, 'Rohan': 12, 'Amit': 79}","d = {'Shiva': 23, 'Rohan': 12, 'Amit': 79} 

sorted_dict = dict(sorted(d.items(), key = lambda x : x[0])) 

print(""Sorted Dictionary :"", sorted_dict)","d = {'Shiva': 23, 'Rohan': 12, 'Amit': 79} 

sorted_dict = dict(sorted(d.items(), key = lambda x : x[0])) 

print(""Sorted Dictionary :"", sorted_dict)",Syntax Error,Recursion
"Create a Python class called Employee that represents an employee in an organization. The Employee class should have instance attributes for the employee’s name, job title, and job number.",,"class Employee:
    def __init__(self, name, job_title, job_number):
        self.name = name
        self.job_title = job_title
        self.job_number = job_number","class Employee:
    def __init__(self, name, job_title, job_number):
        self.name = name
        self.job_title = job_title
        self.job_number = job_number",correct,Loops
Optimize a given Python program by remove any code that causes unnecessary performance reduction.,"for i in range(10000000):
    dig = 0
    num = i
    while num > 0:
          dig = dig + (num % 10)
          num = num // 10","cumulative_sum = 0
while i > 0:
    cumulative_sum += (i % 10) # add the last digit of the number to the cumulative sum
    i //= 10 # truncate the last digit of the number

# Output 
#cumulative_sum will hold the sum of all the digits in the number","cumulative_sum = 0
while i > 0:
    cumulative_sum += (i % 10) # add the last digit of the number to the cumulative sum
    ",Incomplete Answer,Recursion
Develop an algorithm in Python for inserting an element into a given sorted array.,"sortedArray = [1, 5, 9, 12, 15]
x = 7","def insertSort(sortedArray, x): 
    n = len(sortedArray) 
    sortedArray.append(x) 
    for i in range(n-1, -1, -1): 
        if sortedArray[i] > x: 
            sortedArray[i + 1] = sortedArray[i] 
            sortedArray[i] = x 
    return sortedArray

print(insertSort(sortedArray, x))","def insertSort(sortedArray, x) 
    n = len(sortedArray) 
    sortedArray.append(x) 
    for i in range(n-1, -1, -1) 
        if sortedArray[i] > x 
            sortedArray[i + 1] = sortedArray[i] 
            sortedArray[i] = x 
    return sortedArray

print(insertSort(sortedArray, x))",Syntax Error,String Manipulation
Generate a Python program to print out all divisible numbers between 0 and a given number,,"def print_divisible_numbers(n):
    for i in range(1, n + 1):
        if i % 3 == 0 or i % 5 == 0:
            print(i)","def pritn_divisible_numbers(n):
    for i in range(1, n + 1):
        if i % 3 == 0 or i % 5 == 0:
            pritn(i)",Syntax Error,Recursion
Create a Python program that uses regular expression to find and extract certain information from a text.,"Text: ""The customer's address is 123 Main Street, Anytown, USA.""","import re

text = ""The customer's address is 123 Main Street, Anytown, USA.""

address_pattern = re.compile(r'(\d+\s*(?:[A-Za-z]+\s*)+),\s*([A-Za-z\s]+),\s*([A-Z]{2})')

match = address_pattern.search(text)

if match:
 street = match[1]
 city = match[2]
 state = match[3]

print(f'{street}, {city}, {state}')","import re

text = ""The customer's address is 123 Main Street, Anytown, USA.""

address_pattern = re.compile(r'(\d+\s*(?:[A-Za-z]+\s*)+),\s*([A-Za-z\s]+),\s*([A-Z]{2})')

match = address_pattern.search(text)

if match:
 street = match[1]
 city = match[2]
 state = match[3]

print(name, f'{street}, {city}, {state}')",Syntax Error,File I/O
"Write a function in Python that will take two inputs, an array of strings and a letter, and returns the number of elements in the array that contain the given letter.","['cat', 'dog', 'fish','apple']
letter: 'a'","def count_elements_with_letter(arr,letter):
   count = 0
   for a in arr:
      if letter in a:
         count += 1 
   
   return count 

count_elements_with_letter(['cat','dog','fish','apple'], 'a')
# output: 3","def count_elements_with_letter(arr,letter):
   count = 0
   for a in arr:
      if letter in a:
         count += 1 
   
   return count 

count_elements_with_letter(['cat','dog','fish','apple'], 'a')
# output: 3",Syntax Error,Loops
"Create a web scraper in Python that scrapes the website ""example.com"" and prints out the content of all the h1 tags.",,"import requests
from bs4 import BeautifulSoup

response = requests.get('https://example.com/')
soup = BeautifulSoup(response.text, 'html.parser')

for h1 in soup.find_all('h1'):
 print(h1.text)","import requests
from bs4 import BeautifulSoup

response = requests.get('https://example.com/')
s",Incomplete Answer,Loops
Use Python to create an encryption program that swaps out one character with another character.,,"def encrypt(message):
    chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    encrypted = ''

    for char in message:
        if char in chars:
            char_index = chars.find(char)
            new_char_index = (char_index + 13) % 26
            encrypted += chars[new_char_index]
        else:
            encrypted += char
    return encrypted

# test
print(encrypt('HELLO'))","def encrypt(message):
    chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    encrypted = ''

    for char in message:
        if char in chars:
            char_index = chars.find(char)
         ",Incomplete Answer,Recursion
Write a Python algorithm to print out all prime numbers between 2 and a given number.,,"def print_prime_numbers(n):
    primes = []
    for i in range(2, n + 1):
        prime = True
        for j in range(2, i):
            if i % j == 0:
                prime = False
                break
        if prime:
            primes.append(i)
    return primes

if __name__ == '__main__':
    result = print_prime_numbers(20)
    print(result)","def print_prime_numbers(n):
    primes = []
    for i in range(2, n + 1):
        prime = True
        for j in range(2, i):
            if i % j == 0:
                prime = False
                break
        if prime:
            primes.append(i)
    return primes

if __name__ == '__main__':
    result = print_prime_numbers(20)
    print(result)",correct,File I/O
"Generate sample data for a web application using Python's faker library. The output should contain three columns of data: name, email, and age.",,"from faker import Faker

fake = Faker()
for _ in range(10):
 print(fake.name(), fake.email(), fake.random_int(min=18, max=60))","from faker import Faker

fake = Faker()
for _ in range(10):
 pritn(fake.name(), fake.email(), fake.random_int(min=18, max=60))",Syntax Error,String Manipulation
Write a Python function for calculating factorials.,4,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

number = 4
result = factorial(number)
print(result)","def factorial(n):
    if n == 0:
        return 1
    else:
        retur",Incomplete Answer,Recursion
Create a Python program that finds the prime factors of a given number.,,"def prime_factors(n):
    factors = []
    divisor = 2 
    while n > 1:
        if n % divisor == 0:
            factors.append(divisor)
            n = n/divisor
        else:
            divisor += 1
    return factors","def prime_factors(n):
    factors = []
    divisor = 2 
    while n > 1:
        if n % divisor == 0:
            factors.append(divisor)
            n = n/divisor
        else:
            divisor += 1
    return factors",correct,OOP
Write a Python program to extract the first letter of each word in a sentence and print it as an acronym.,This is a sample sentence.,SIS,SIS,Syntax Error,File I/O
Write a method in Python to calculate the sum of two numbers without using any built-in functions.,"3, 5","def sum_two_numbers(a, b):
    result = 0

    for i in range(b):
        result += a

    return result

a = 3
b = 5

print(sum_two_numbers(a, b))","def sum_two_numbers(a, b):
    result = 0

    for i in range(b):
        result += a

    return result

a = 3
b = 5

print(sum_two_numbers(a, b))",correct,Loops
"Given a set of numbers, construct a Python program to calculate the sum of all prime numbers in the set.","[2, 3, 9, 14]","def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True
 
def sum_primes(nums):
    prime_sum = 0
    for num in nums:
        if is_prime(num):
            prime_sum += num
    return prime_sum
 
nums = [2, 3, 9, 14]
 
result = sum_primes(nums)
print(result)","def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True
 
def sum_primes(nums):
    prime_sum = 0
    for num in nums:
        if is_prime(num):
            prime_sum += num
    return prime_sum
 
nums = [2, 3, 9, 14]
 
result = sum_primes(nums)
print(name, result)",Syntax Error,Loops
Create a Python script to generate 10 random hexadecimal numbers.,,"import random

def generate_hex_numbers(n): 
    hex_numbers = [format(random.randint(0, 16**8 - 1), 'x') for _ in range(n)] 
    return hex_numbers

print(generate_hex_numbers(10))","import random

def generate_hex_numbers(n): 
    hex_numbers = [format(random.randint(0, 16**8 - 1), 'x') for _ in range(n)] 
    return hex_numbers

print(generate_hex_numbers(10))",correct,Recursion
Design a web application using python and Flask to save user data submitted via a form.,,"from flask import Flask
from flask import render_template
from flask import request

@app.route('/')
def form():
    return render_template('form.html')

@app.route('/', methods=['POST']
def save_data():
   name = request.form['name']
   age = request.form['age']
   # Save user data to database 
   return render_template('success.html')","from flask import Flask
from flask import render_template
from flask import request

@app.route('/')
def form()
    return render_template('form.html')

@app.route('/', methods=['POST']
def save_data()
   name = request.form['name']
   age = request.form['age']
   # Save user data to database 
   return render_template('success.html')",Syntax Error,Recursion
Create a function in Python to compute the factorial of a number.,,"def factorial(n):
    if n == 1:
        return 1
    else:
        return n * factorial(n-1)","def factorial(n):
    if n == 1:
        return 1
    else:
        return n * factorial(n-1)",correct,Loops
"Using Python, make a program which will generate a random password of a given length.",7,"import string
import random

def get_password(length):
    alphabet = string.ascii_letters + string.digits
    password = ''.join(random.choice(alphabet) for i in range(length))
    print (password)

get_password(7)","import string
import random

def get_password(length:
    alphabet = string.ascii_letters + string.digits
    password = ''.join(random.choice(alphabet for i in range(length
    print (password

get_password(7",Syntax Error,String Manipulation
Consume a REST API and return the response in Python.,,"import requests

#specify the base URL of the API
base_url = 'http://example.com/api/'
 
#make the request and receive the response
response = requests.get(base_url)
 
#parse the response JSON
data = response.json()","import requests

#specify the base URL of the API
base_url = 'http://example.com/api/'
 
#make the request and receive the response
response = requests.get(base_url)
 
#parse the response JSON
data = response.json()",Syntax Error,Loops
Write a Python program to remove all elements of a given list except largest and smallest element.,"numbers = [3, 4, 6, 2, 8, 9, 1]","def get_min_max(numbers):
 max_num = max(numbers)
 min_num = min(numbers)
 new_list = []
 for i in numbers:
  if i == max_num or i == min_num:
   new_list.append(i)
 return new_list","def get_min_max(numbers):
 max_num = max(numbers)
 min_num = min(numbers)
 new_list = []
 ",Incomplete Answer,Loops
Generate a Python script using Scikit-Learn for performing k-means clustering on a given dataset.,"Dataset: The dataset consists of three features x1, x2 and x3.","import numpy as np
from sklearn.cluster import KMeans

data = np.array([[x1, x2, x3]]) #replace x1, x2 and x3 with the features in the dataset

kmeans = KMeans(n_clusters=3).fit(data)
clusters = kmeans.predict(data)","import numpy as np
from sklearn.cluster import KMeans

data = np.array([[x1, x2, x3]]) #replace x1, x2 and x3 with the features in the dataset

kmeans = KMeans(n_clusters=3).fit(data)
clusters = kmeans.predict(data)",Syntax Error,String Manipulation
Translate the following SQL query into Python code.,"SELECT Customer_Name, COUNT(Order_Id) AS Number_of_Orders 
FROM Orders 
GROUP BY Customer_Name","import pandas as pd

df = pd.read_sql_query(""SELECT Customer_Name, COUNT(Order_Id) AS Number_of_Orders FROM Orders GROUP BY Customer_Name"", con)
result = df.to_dict('records')","import pandas as pd

df = pd.read_sql_query(""SELECT Customer_Name, COUNT(Order_Id) AS N",Incomplete Answer,Loops
Design a function in Python to convert a given temperature in Celsius to Fahrenheit.,,"def celsius_to_fahrenheit(degrees_c):
    return (degrees_c * 9/5) + 32","def celsius_to_fahrenheit(degrees_c):
    return (degrees_c * 9/5) + 32",Syntax Error,File I/O
"Generate a Python program to calculate the amount of time the user has been working on a specific task, given the start time and the current time.","start time=4:30pm, current time= 5:07pm","import datetime

def get_time_difference(start_time, current_time):
    start_time = datetime.datetime.strptime(start_time, ""%H:%M%p"")
    current_time = datetime.datetime.strptime(current_time, ""%H:%M%p"")
    return current_time - start_time","import datetime

def get_time_difference(start_time, current_time):
    start_time = datetime.datetime.strptime(start_time, ""%H:%M%p"")
    current_time = datetime.datetime.strptime(current_time, ""%H:%M%p"")
    return current_time - start_time",Syntax Error,Recursion
Generate a random number between 0 and 1 in Python.,,"import random

randomNumber = random.random()
print(randomNumber)","import random

randomNumber = random.random(
print(randomNumber",Syntax Error,Loops
Design a program in Python which can generate unique alphanumeric IDs.,,"import string
import random

def generate_alphanumeric_id(stringLength=8):
 """"""Generate a random string of letters and digits """"""
 lettersAndDigits = string.ascii_letters + string.digits
 return ''.join(random.choice(lettersAndDigits) for i in range(stringLength))

print (""Random ID is: "", generate_alphanumeric_id() )","import string
import random

def generate_alphanumeric_id(stringLength=8):
 """"""Generate a random string of letters and digits """"""
 lettersAndDigits = string.ascii_letters + string.digits
 return ''.join(random.choice(lettersAndDigits) for i in range(stringLength))

pritn (""Random ID is: "", generate_alphanumeric_id() )",Syntax Error,File I/O
Create a function to calculate the dot product of two vectors in Python.,,"def dot_product(v1, v2):
    return sum(x1*x2 for x1, x2 in zip(v1, v2))","def dot_product(v1, v2):
    return sum(x1*x2 for x1, x2 in zip(v1, v2))",correct,Loops
Use a regular expression to find all emails in a given string in Python.,"myString = ""my name is Joe and my email is joe@example.com""","import re 

pattern = ""[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+""

result = re.findall(pattern, myString)

print(result) # Output will be [""joe@example.com""]","import re 

pattern = ""[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+""

result = re.findall(pattern, myString)

print(result) # Output will be [""joe@example.com""]",correct,OOP
"Create a Python function which takes a list, and prints out the third item of the list.","mylist = [1, 2, 3, 4, 5]","def thirdElement(mylist):
    """""" Print out the third element of the list. """"""
    print(mylist[2])

thirdElement(mylist)","def thirdElement(mylist):
    """""" Print out the third element of the list. """"""
    pritn(mylist[2])

thirdElement(mylist)",Syntax Error,OOP
"Create a Python script to generate a random password with a mix of alphabets, numbers and symbols at least 8 characters long.",,"import string
import random

def generate_password(length):
    password_characters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(password_characters) for i in range(length))
    return password

password = generate_password(8)
print(password)","import string
import random

def generate_password(length):
    password_characters = string.ascii_letters + string.digits + string.punctuation
   ",Incomplete Answer,String Manipulation
Create a for loop in python to print all the items in the given list.,"List = [1, 2, 3, 4]","for item in List:
    print(item)","for item in List:
    print(item)",correct,File I/O
Construct a Python application to compare the values of two given dictionary.,"dict1 = {
  ""A"": 1,
  ""B"": 2
}
dict2 = {
  ""A"": 1,
  ""B"": 4
}","def compare_dicts(dict1, dict2):
    if len(dict1) != len(dict2):
        return False
    
    for key, value in dict1.items():
        if key not in dict2 or dict2[key] != value:
            return False
    
    return True","def compare_dicts(dict1, dict2:
    if len(dict1 != len(dict2:
        return False
    
    for key, value in dict1.items(:
        if key not in dict2 or dict2[key] != value:
            return False
    
    return True",Syntax Error,File I/O
How would you improve the following Python code to make it more efficient?,"def calculate_square(numbers):
    square_list = []
    for number in numbers:
        square_list.append(number * number)
	
    return square_list","def calculate_square(numbers):
    return [number * number for number in numbers]","def calculate_square(numbers):
return [number * number for number in numbers]",Syntax Error,Recursion
Complete this Python code to to generate a random password using a given length.,length = 10,"import string
import random

def generate_password(length):
    password_characters = string.ascii_letters + string.digits + string.punctuation 
    password = ''.join(random.choice(password_characters) for i in range(length))
    return password

print(generate_password(length))","import string
import random

def generate_password(length):
    password_characters = string.ascii_letters + string.digits + string.punctuat",Incomplete Answer,Recursion
Create a Python function that takes a string of text as the input and returns a dictionary containing count of each character in the text.,,"def char_count(text):
  chars = {}
  for char in text:
    if char in chars:
      chars[char] += 1
    else:
      chars[char] = 1
  return chars","def char_count(text):
  chars = {}
  for char in text:
if char in chars:
  chars[char] += 1
else:
  chars[char] = 1
  return chars",Syntax Error,OOP
Write two Python functions. The first function should take in a list of strings and return the most common string. The second function should take in a list of integers and return the most common integer.,"words = ['cat', 'dog', 'fish', 'cat', 'mouse', 'dog']
numbers = [1, 2, 3, 4, 5, 6, 7, 3, 3, 4]","def most_common_string(word_list):
    return max(set(word_list), key=word_list.count)

def most_common_integer(int_list):
    return max(set(int_list), key=int_list.count)","def most_common_string(word_list):
    return max(set(word_list), key=word_list.count)

def most_common_integer(int_list):
    return max(set(int_list), key=int_list.count)",Syntax Error,OOP
"Design a class in Python to store a student's name, age and subject of interest.",,"class Student:
    def __init__(self, name, age, subject):
        self.name = name
        self.age = age
        self.subject = subject","class Student:
def __init__(self, name, age, subject):
    self.name = name
    self.age = age
    self.subject = subject",Syntax Error,Recursion
Create a Python program that can generate a wide variety of random passwords.,,"import random
import string

# password length
length = int(input(""Enter password length: ""))

# alphabets & numbers
alphaNum = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'

# generate password
password = """".join([random.choice(alphaNum) for _ in range(length)])

print(""Password: "", password)","import random
import string

# password length
length = int(input(""Enter password length: ""))

# alphabets & numbers
alphaNum = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'

# generate password
password = """".join([random.choice(alphaNum) for _ in range(length)])

print(name, ""Password: "", password)",Syntax Error,OOP
Create a Python program to generate an array of all possible unique combinations of 3 elements from a given array.,"[1, 2, 3, 4]","def combinations(arr):
 sol = []
 
 for i in range(len(arr)):
 for j in range(len(arr)):
 for k in range(len(arr)):
 if i != j and j != k and k != i:
 sol.append([arr[i], arr[j], arr[k]])
 
 return sol

print(combinations([1, 2, 3, 4])) # Outputs [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]]","def combinations(arr):
 sol = []
 
 for i in range(len(arr)):
 for j in range(len(arr)):
 for k in range(len(arr)):
 if i != j and j != k and k != i:
 sol.append([arr[i], arr[j], arr[k]])
 
 return sol

print(combinations([1, 2, 3, 4])) # Outputs [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]]",correct,OOP
Create a Python script to calculate the average age of a list of people.,"people = [
 { 'name': 'John', 'age': 25 },
 { 'name': 'Jane', 'age': 34 },
 { 'name': 'Dave', 'age': 19 },
 { 'name': 'Sarah', 'age': 21 },
 { 'name': 'Henry', 'age': 29 }
]","total = 0
for person in people:
 total += person['age']

average = total / len(people)

print(f'Average age is {average}') // 24.4","total = 0
for person in people:
 total += person['age']

average = total / len(people)

print(f'Average age is {average}') // 24.4",correct,String Manipulation
Write a Python script to calculate the perimeter of a triangle given 3 sides.,"side_1 = 10
side_2 = 12 
side_3 = 14","def calculate_perimeter(side1, side2, side3):
 perimeter = side1 + side2 + side3
 return perimeter

side1 = 10
side2 = 12
side3 = 14

perimeter = calculate_perimeter(side1, side2, side3)
print(""The perimeter of the triangle is:"", perimeter) # Output: 36","def calculate_perimeter(side1, side2, side3):
 perimeter = side1 + side2 + side3
 return perimeter

side1 = 10
side2 = 12
side3 = 14

perimeter = calculate_perimeter(side1, side2, side3)
print(""The perimeter of the triangle is:"", perimeter) # Output: 36",correct,Loops
Create an algorithm using Python to detect plagiarism between two given text documents.,,"def detect_plagiarism(text1, text2):
    # your code goes here
    
    return is_plagiarized","def detect_plagiarism(text1, text2):
    # your code goes here
    
    return is_plagiarized",correct,String Manipulation
Edit the given Python code to format the output as a table using tabulate.,"fruits = [""apple"", ""orange"", ""pineapple"", ""melon""]
for fruit in fruits:
    print(fruit)","import tabulate

fruits = [""apple"", ""orange"", ""pineapple"", ""melon""] 
table = [(fruit,) for fruit in fruits] 
print(tabulate.tabulate(table, headers=[""Fruits""])) 
# Output: 
# Fruits
# apple
# orange
# pineapple
# melon","import tabulate

fruits = [""apple"", ""orange"", ""pineapple"", ""melon""] 
table = [(fruit,) for fruit in fruits] 
print(tabulate.tabulate(table, headers=[""Fruits""])) 
# Output: 
# Fruits
# apple
# orange
# pineapple
# melon",correct,Loops
Create a web crawler in Python to extract all the links from a given website.,,"import urllib 
import re

#Extracting Links from a given website
def extract_links(url):
  website = urllib.urlopen(url)
  html = website.read()
  links = re.findall('""((http|ftp)s?://.*?)""', html)
 
  #Loop through links and print
  for link in links:
    print (link[0])

url = 'http://www.example.com/'
extract_links(url)","import urllib 
import re

#Extracting Links from a given website
def extract_links(url):
  website = urllib.urlopen(url)
  html = website.read()
  links = re.find",Incomplete Answer,OOP
Create a function that implements a linear search algorithm in Python.,"x = 20
arr = [10, 8, 6, 4 2, 20]","def linearSearch(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1","def linearSearch(arr, x): 
    for i in range(len(arr)): 
 ",Incomplete Answer,File I/O
Generate all possible permutations of a given string in Python.,,"import itertools

def permutations(string): 
    return list(itertools.permutations(string))","import itertools

def permutations(string): 
return list(itertools.permutations(string))",Syntax Error,Loops
"Design a Python program that asks for a string, then creates a new string that is the reverse of the original, and then prints the new string.",,"value = input(""Please enter a string:"")
print(""The reversed value is:"", value[::-1])","value = input(""Please enter a string:"")
print(""The reversed value is:"", value[::-1])",Syntax Error,Loops
Create a Python function to calculate the Fibonacci sequence with a given number as the input.,6,"def fibonacci_sequence(num): 
 
    a = 0
    b = 1
 
    if num < 0: 
        print(""Incorrect input"") 
    elif num == 0: 
        return a 
    elif num == 1: 
        return b 
    else: 
        for i in range(2,num): 
            c = a + b 
            a = b 
            b = c 
        return b 
 
print(fibonacci_sequence(num))","def fibonacci_sequence(num): 
 
    a = 0
    b = 1
 
    if num < 0: 
        print(""Incorrect input"") 
    elif num == 0: 
        return a 
    elif num == 1: 
        return b 
    else: 
        for i in range(2,num): 
            c = a + b 
            a = b 
            b = c 
        return b 
 
print(fibonacci_sequence(num))",correct,String Manipulation
Write a Python script that takes two strings as input and prints the string which is obtained by combining the two strings in lexical order.,"String1 = ""Hello"" 
String2 = ""World""","def combine_strings(s1, s2):
 if s1 < s2:
 print(s1+s2)
 else:
 print(s2+s1)

combine_strings(""Hello"", ""World"")
# Output: HelloWorld","def combine_strings(s1, s2):
 if s1 < s2:
 print(s1+s2)
 else:
 print(s2+s1)

combine_strings(""Hello"", ""World"")
# Output: HelloWorld",correct,String Manipulation
"Create a Python class named Person with private variables for first name, last name, age, and gender. The class should also have a method called ""say_hello"" that prints the person's name.",,"class Person:
 def __init__(self, first_name, last_name, age, gender):
 self.__first_name = first_name
 self.__last_name = last_name
 self.__age = age
 self.__gender = gender

 def say_hello(self):
 print(""Hello, my name is %s %s."" % (self.__first_name, self.__last_name))","class Person:
 def __init__(self, first_name, last_name, age, gender):
 self.__first_name = first_name
 self.__last_name = last_name
 self.__age = age
 self.__gender = gender

 def say_hello(self):
 print(""Hello, my name is %s %s."" % (self.__first_name, self.__last_name))",correct,OOP
Create a program in Python to delete all duplicates from a given list.,"list = [1, 2, 3, 1, 3, 4]","def remove_duplicates(list):
    new_list = []
    for e in list:
        if e not in new_list:
            new_list.append(e)
    return new_list

list = [1, 2, 3, 1, 3, 4]
list = remove_duplicates(list)
print(list)","def remove_duplicates(list):
    new_list = []
    for e in list:
        if e not in new_list:
            ",Incomplete Answer,File I/O
Identify the language used to write the following program:,"def hello_world(): 
    print(""Hello World!"")",Python.,Python.,correct,File I/O
Optimize this given Python code using list comprehension.,"word_list = ['hello', 'world', 'good', 'morning']

for i in range(len(word_list)): 
    word_list[i] = word_list[i].upper()","word_list = ['hello', 'world', 'good', 'morning']

word_list = [word.upper() for word in word_list]","word_list = ['hello', 'world', 'good', 'morning']

word_list = [word.upper() for word in word_list]",Syntax Error,OOP
"Given a list of integers, write a Python program to find the largest and second largest numbers in the list.","[10, 20, 5, 45, 25]","def find_largest_and_second_largest(nums):
    max1 = float('-inf')
    max2 = float('-inf')
    for n in nums:
        if n > max1:
            max2 = max1
            max1 = n
        elif n > max2 and n != max1:
            max2 = n
    return max1, max2","def find_largest_and_second_largest(nums):
    max1 = float('-inf')
    max2 = float('-inf')
    for n in nums:
        if n > max1:
            max2 = max1
            max1 = n
        elif n > max2 and n != max1:
            max2 = n
    return max1, max2",correct,String Manipulation
Write a function to find the first duplicate element in a given array of integers.,,"def find_first_duplicate(nums):
    num_set = set()
    no_duplicate = -1

    for i in range(len(nums)):

        if nums[i] in num_set:
            return nums[i]
        else:
            num_set.add(nums[i])

    return no_duplicate","def find_first_duplicate(nums):
    num_set = set()
    no_duplicate = -1

    for i in range(len(nums)):

        if",Incomplete Answer,Loops
"Using Python, construct an algorithm that creates a dictionary with the numbers 1-5 as keys and the square of each number as its value.",,"numbers_dictionary = {}
for i in range(1,6): 
 numbers_dictionary[i] = i*i

print(numbers_dictionary)","numbers_dictionary = {}
for i in range(1,6: 
 numbers_dictionary[i] = i*i

print(numbers_dictionary",Syntax Error,OOP
Rewrite a Python code snippet to take advantage of vectorization.,"# Compute list of squared values
my_list = [1,2,3,4,5]
out_list = []

for element in my_list:
    out_list.append(pow(element,2))","# Compute list of squared values using vectorization
my_list = [1,2,3,4,5]

out_list = [pow(element,2) for element in my_list]","# Compute list of squared values using vectorization
my_list = [1,2,3,4,5]

out_list = [pow(element,2) for element in my_list]",correct,OOP
"What is the Python code to display the top five random numbers in the range [1, 15]",,"import random

for _ in range(5):
    print(random.randint(1, 15))","import random

for _ in range(5):
    print(random.randint(1, 15))",correct,OOP
Write a Python program that calculates the greatest common divisor of two numbers and displays the result.,10 and 20,"def gcd(a, b):
    if b == 0: 
        return a 
    return gcd(b, a % b) 
  
num1 = 10
num2 = 20

gcd_value = gcd(num1, num2)

print(f'The greatest common divisor of {num1} and {num2} is {gcd_value}')","def gcd(a, b:
    if b == 0: 
        return a 
    return gcd(b, a % b 
  
num1 = 10
num2 = 20

gcd_value = gcd(num1, num2

print(f'The greatest common divisor of {num1} and {num2} is {gcd_value}'",Syntax Error,Recursion
Write a Python function to compute the maximum product of two elements in an array.,,"def max_product_of_two(arr):
    n = len(arr)
    if n == 0:
        return None

    max_val1 = arr[0]
    for i in range(1, n):
        if arr[i] > max_val1:
            max_val1 = arr[i]

    max_val2 = arr[0]
    for i in range(1, n):
        if arr[i] > max_val2 and arr[i] != max_val1:
            max_val2 = arr[i]

    return max_val1 * max_val2","def max_product_of_two(arr)
    n = len(arr)
    if n == 0
        return None

    max_val1 = arr[0]
    for i in range(1, n)
        if arr[i] > max_val1
            max_val1 = arr[i]

    max_val2 = arr[0]
    for i in range(1, n)
        if arr[i] > max_val2 and arr[i] != max_val1
            max_val2 = arr[i]

    return max_val1 * max_val2",Syntax Error,String Manipulation
Create a model in Python using Linear Regression that can predict the housing prices given the living area and number of rooms.,"data = [[2000, 3], [1600, 2.5], [2400, 3.5], [1400, 2], [3000, 4]]","import numpy as np
from sklearn import linear_model

X = np.array([[2000, 3], [1600, 2.5], [2400, 3.5], [1400, 2], [3000, 4]])
y = np.array([75000, 43000, 59000, 32000, 85000])

model = linear_model.LinearRegression()
model.fit(X, y)

prediction = model.predict([[2200, 3]])","import numpy as np
from sklearn import linear_model

X = np.array([[2000, 3], [1600, 2.5], [2400, 3.5], [1400, 2], [3000, 4]])
y = np.array([75000, 43000, 59000, 32000, 85000])

model = linear_model.LinearRegression()
model.fit(X, y)

prediction = model.predict([[2200, 3]])",Syntax Error,Loops
Generate a Python program to append a given element to the end of the list.,"[2, 3, 4], 6","arr = [2, 3, 4] 
arr.append(6)
print(arr)","arr = [2, 3, 4] 
arr.append(6)
print(arr)",Syntax Error,Recursion
Construct a Python code to combine the elements of two given list and return a sorted union list.,"input_list_1: [4, 10, 2]
input_list_2: [10, 2, 15]","def union_list(list1, list2): 
    list3 = list1 + list2 
    list3.sort() 
    return list3 
    
union_list(input_list_1, input_list_2)","def union_list(list1, list2): 
    list3 = list1 + list2 
    list3.sort() 
    return list3 
    
union_list(input_list_1, input_list_2)",correct,OOP
Write a function to check if the given array represents min heap or not.,,"def check_min_heap(arr, i):
    if 2 * i + 2 > len(arr):
        return True
    left_child = (arr[i] <= arr[2 * i + 1]) and check_min_heap(arr, 2 * i + 1)
    right_child = (2 * i + 2 == len(arr)) or (arr[i] <= arr[2 * i + 2] 
                                      and check_min_heap(arr, 2 * i + 2))
    return left_child and right_child","def check_min_heap(arr, i):
    if 2 * i + 2 > len(arr):
        return True
    left_child = (arr[i] <= arr[2 * i + 1]) and check_min_heap(arr, 2 * i + 1)
    right_child = (2 * i + 2 == len(arr)) or (arr[i] <= arr[2 * i + 2] 
                                      and check_min_heap(arr, 2 * i + 2))
    return left_child and right_child",correct,OOP
Design an algorithm in Python and write a function to reverse an array.,"[1,2,3,4]","def reverse_array(arr):
    start = 0
    end = len(arr) - 1
    while(start < end):
        arr[start], arr[end] = arr[end], arr[start]
        start += 1
        end -= 1
    return arr","def reverse_array(arr):
    start = 0
    end = len(arr) - 1
    while(start < end):
        ",Incomplete Answer,File I/O
Design a Python algorithm for checking whether a given string contains only unique characters.,,"def string_unique(string):
    if len(string) > 256:
        return False
    else:
        my_set = set()
        for character in string:
            if character in my_set:
                return False
            else:
                my_set.add(character)
    return True","def string_unique(string):
    if len(string) > 256:
        return False
    else:
        my_set = set()
        for character in string:
            if character in my_set:
                return False
            else:
                my_set.add(character)
    return True",correct,File I/O
Create a script in Python that reads an integer from the user and counts from one to that number.,,"user_num = int(input(""Enter an integer: ""))
for i in range(1, user_num+1):
 print(i)","user_num = int(input(""Enter an integer: "")",Incomplete Answer,Loops
Use Python to create a list of numbers from 1 to 10 and print the list.,,"my_list = list(range(1, 11))
print(my_list)",my_list = list(range(,Incomplete Answer,Loops
Edit the following Python class such that it can accept a variable number of parameters.,"class Person:
    def __init__(self, name, age, weight):
        self.name = name
        self.age = age
        self.weight = weight","class Person:
    def __init__(self, *args):
        self.name = args[0]
        self.age = args[1]
        self.weight = args[2]","class Person:
    def __init__(self, *args):
        self.name =",Incomplete Answer,Recursion
Construct a Python program that takes a list of words and checks if the list is in alphabetical order.,"['cat', 'dog', 'hippo', 'horse']","def check_if_list_is_in_alphabetical_order(words_list):
    for i in range(len(words_list)-1):
        if words_list[i] > words_list[i+1]:
            return False
    return True
 
words_list = ['cat', 'dog', 'hippo', 'horse']
result = check_if_list_is_in_alphabetical_order(words_list)
print (result)","def check_if_list_is_in_alphabetical_order(words_list):
    for i in range(len(words_list)-1):
        if words_list[i] > words_list[i+1]:
            return False
    return True
 
words_list = ['cat', 'dog', 'hippo', 'horse']
result = check_if_list_is_in_alphabetical_order(words_list)
print (result)",correct,OOP
Debug the following Python program which raises a SyntaxError.,,"def func(a, b): 
  c = a + b 
  return c 

a = 4 
b = 5 

res = func(a, b) 
print(res)","def func(a, b): 
  c = a + b 
  return c 

",Incomplete Answer,File I/O
Complete the Python program to automatically add 3 months to a date.,"import datetime
date_str = '2020-01-31'
def add_three_months","import datetime
date_str = '2020-01-31'

def add_three_months(date_str):
    d = datetime.datetime.strptime(date_str, '%Y-%m-%d')
    d = d + datetime.timedelta(days=90)
    date_str = d.strftime('%Y-%m-%d')
    return date_str","import datetime
date_str = '2020-01-31'

def add_three_months(date_str):
    d = datetime.datetime.strptime(date_str, '%Y-%m-%d')
    d = d + datetime.timedelta(days=90)
    date_str = d.strftime('%Y-%m-%d')
    return date_str",correct,Recursion
Write a Python program to generate a linked list of numbers from 0 to n.,,"def generateLinkedList(n): 
	head = Node(0) 
	prev = head 
	for i in range(1, n + 1): 
		node = Node(i) 
		prev.next = node 
		prev = node 
	return head","def generateLinkedList(n): 
	head = Node(0) 
	prev = head 
	for i in range(1",Incomplete Answer,Recursion
Create a Python program to parse and modify the following input string.,"""ABC 123 XYZ 456""","input_string = ""ABC 123 XYZ 456""
output_string = """"

for char in input_string:
    if char.isalpha():
        output_string += char.lower()
    else:
        output_string += char

print(output_string)","input_string = ""ABC 123 XYZ 456""
output_string = """"

for char in input_string:
    if char.isalpha()",Incomplete Answer,File I/O
Write a Python class to represent a five sided polygon.,,"class Polygon:
    def __init__(self, sides):
        self.sides = sides

    def calc_perimeter(self):
        return (self.sides * 5)

# create a Polygon instance
polygon = Polygon(5)

# calculate the perimeter
print(polygon.calc_perimeter())","class Polygon:
    def __init__(self, sides):
        self.sides = sides

    def calc_perimeter(self):
        return (self.sides * 5)

# create a Polygon instance
polygon = Polygon(5)

# calculate the perimeter
print(polygon.calc_perimeter())",correct,Loops
Write a machine learning algorithm in Python to find the nearest neighbors of a given point.,"point = [3, 4]","from sklearn.neighbors import NearestNeighbors

def nearest_neighbors(point):
    neighbors = NearestNeighbors(n_neighbors=1).fit(point) 
    return neighbors.kneighbors([point], return_distance=False)[0]","from sklearn.neighbors import NearestNeighbors

def nearest_neighbors(point):
    neighbors = NearestNeighbors(n_neighbors=1).fit(point) 
    return neighbors.kneighbors([point], return_distance=False)[0]",Syntax Error,Recursion
"Given a list of integers, write a Python program to detect whether or not the list contains an even number.","[1, 3, 5, 7, 9]","def check_even(numbers):
  for num in numbers:
    if num % 2 == 0:
      return True
  return False","def check_even(numbers):
  for num in numbers:
   ",Incomplete Answer,Loops
Develop a Python program to find out all the perfect numbers between 1 and n.,n = 30,"def perfect_numbers(n):
    perfect_nums = []
    for num in range(1, n+1):
        sum = 0
        for i in range(1, num):
            if num % i == 0:
                sum += i
        if sum == num:
            perfect_nums.append(num)
    return perfect_nums

n = 30
print(perfect_numbers(n))","def perfect_numbers(n)
    perfect_nums = []
    for num in range(1, n+1)
        sum = 0
        for i in range(1, num)
            if num % i == 0
                sum += i
        if sum == num
            perfect_nums.append(num)
    return perfect_nums

n = 30
print(perfect_numbers(n))",Syntax Error,Loops
Create a Python program to optimize a given function using the Nelder-Mead method.,"def f(x):
 return x[0]**2 + 4*x[1]**2
[3, -2]","from scipy.optimize import minimize
def f(x):
    return x[0]**2 + 4*x[1]**2

res = minimize(f, [3, -2], method='nelder-mead')

print(res.x)","from scipy.optimize import minimize
def f(x):
    return x[0]**2 + 4*x[1]**2

res = minimize(f, [3, -2], method='nelder-mead')

print(res.x)",correct,File I/O
Create a Python code to output the following text:,,"print(""Hello, World!"")","print(""Hello, World!"")",Syntax Error,Loops
Create a Python program to parse a CSV string and print each row in a readable format.,"CSVString = ""John Doe, 22, ABC Street, 07777\nMary Smith, 26, XYZ Street, 02222""","import csv 
  
csvString = ""John Doe, 22, ABC Street, 07777\nMary Smith, 26, XYZ Street, 02222""
  
# Convert CSV String to List
csvList = csvString.split('\n')
  
# Print each Row of CSV 
for row in csvList: 
    print(row)","import csv 
  
csvString = ""John Doe, 22, ABC Street, 07777\nMary Smith, 26, XYZ Street, 02222""
  
# Convert CSV String to List
csvList = csvString.split('\n')
  
# Print each Row of CSV 
for row in csvList: 
print(row)",Syntax Error,File I/O
Write a function to find the last occurrence of a character in a string.,,"def last_occurence_char(string,char):
 flag = -1
 for i in range(len(string)):
     if(string[i] == char):
         flag = i
 if(flag == -1):
    return None
 else:
    return flag + 1","def last_occurence_char(string,char):
 flag = -1
 for i in range(len(string)):
     if(string",Incomplete Answer,Loops
Write a function to check if one tuple is a subset of another tuple.,,"def check_subset(test_tup1, test_tup2):
  res = set(test_tup2).issubset(test_tup1)
  return (res) ","def check_subset(test_tup1, test_tup2):
  res = set(test_tup2).issubset(test_tup1)
  return (res) ",correct,Recursion
Write a function in Python that takes a list of integers as an input and returns a new list with every even number doubled and every odd number quadrupled.,"[2, 5, 6, 8]","def multiply_values(lst):
 return [x * 2 if x % 2 == 0 else x * 4 for x in lst]

# Example
lst = [2, 5, 6, 8]
print(multiply_values(lst))
# [4, 20, 12, 16]","def multiply_values(lst):
 return [x * 2 if x % 2 == 0 else x * 4 for x in lst]

# Example
lst = [2, 5, 6, 8]
print(multiply_values(lst))
# [4, 20, 12, 16]",Syntax Error,OOP
Create a program in Python which will print the names of the top 3 numbers in a given list.,"[1, 43, 124, 87, 92]","""""""
Print the names of the top 3 numbers in a given list 
""""""
 
my_list = [1, 43, 124, 87, 92]

# Sort the list
my_list.sort(reverse=True)

# Print the top 3 numbers
print(my_list[0], ""is the first biggest number"")
print(my_list[1], ""is the second biggest number"")
print(my_list[2], ""is the third biggest number"")","""""""
Print the names of the top 3 numbers in a given list 
""""""
 
my_list = [1, 43, 124, 87, 92]

# Sort the list
my_list.sort(reverse=True)

# Print the top ",Incomplete Answer,OOP
Design a Python program for implementing a stack with the following methods.,"pop(), push(x), and is_empty().","class Stack:
    def __init__(self):
        self.items = []

    def push(self, x): 
        self.items.append(x) 

    def pop(self): 
        if not self.is_empty():
            return self.items.pop()
        else:
            return None
        
    def is_empty(self): 
        return len(self.items) == 0","class Stack:
    def __init__(self):
        self.items = []

    def push(self, x): 
        self.items.append(x) 

    def pop(self): 
        if not self.is_empty():
            return self.items.pop()
        else:
            return None
        
    def is_empty(self): 
        return len(self.items) == 0",correct,Recursion
"Create a Python program that takes an array of strings and returns an array of all strings that start with the letter ""A"".","[""Apple"", ""Grape"", ""Banana"", ""Aeroplane""]","def filter_array_elements(arr): 
    result = [] 
    for string in arr: 
        if string[0] == 'A': 
            result.append(string) 
    return result

output = filter_array_elements([""Apple"", ""Grape"", ""Banana"", ""Aeroplane""])
print(output)","def filter_array_elements(arr): 
    result = [] 
    for string in arr: 
        if string[0] == 'A': 
            result",Incomplete Answer,File I/O
Can you provide a piece of code in Python to split a string on a certain delimiter?,"string = ""Hello,how,are,you""","my_list = string.split("","")","my_list = string.split("","")",Syntax Error,File I/O
Build an algorithm in Python to concatenate two binary strings.,"str1 = ""10101""
str2 = ""101""","def concatTwoBinStrings(str1, str2):
    str = """"
    for i in (str1 + str2):
        if i == '0':
            str += '0'
        else:
            str += '1'
    return str

str1 = ""10101""
str2 = ""101""

print(concatTwoBinStrings(str1, str2))","def concatTwoBinStrings(str1, str2):
    str = """"
    for i in (str1 + str2):
        if i == '0':
            str += '0'",Incomplete Answer,File I/O
Compose a python program that can search a text document for a given word.,"text_file=""text.txt""
query_word=""apple""","def search_for_word(text_file, query_word):
    words = []

    with open(text_file, ""r"") as file:
        for line in file:
            words.extend(line.split())

    if query_word in words:
        return True
    else:
        return False","def search_for_word(text_file, query_word):
    words = []

    with open(text_file, ""r"") as file:
        for line in fi",Incomplete Answer,Loops
Generate a Python program to classify a given list of numbers using try and except block.,"list_of_numbers = [16, 5, 9, 21, 17]","def classify_numbers(list_of_numbers):
    for number in list_of_numbers:
        try:
            if number % 3 == 0:
                print('Number {} is divisible by 3'.format(number))
        except ZeroDivisionError:
            print('Number {} cannot be divided by 3: division by zero bug'.format(number))","def classify_numbers(list_of_numbers):
    for number in list_of_numbers:
        try:
            if number % 3 == 0:
                print('Number {} is divisible by 3'.format(number))
        except ZeroDivisionError:
            print('Number {} cannot be divided by 3: division by zero bug'.format(number))",correct,File I/O
Create a WebSocket server in Python.,,"import asyncio
import websockets

async def hello(websocket, path):
 greeting = await websocket.recv()
 print(f""< {greeting}"")

async def hello_server():
 server = await websockets.serve(hello, '127.0.0.1', 8765)
 await server.wait_closed()

asyncio.get_event_loop().run_until_complete(hello_server())
asyncio.get_event_loop().run_forever()","import asyncio
import websockets

async def hello(websocket, path):
 greeting = await websocket.recv()
 print(f""< {greeting}"")

async def hello_server():
 server = await websockets.serve(hello, '127.0.0.1', 8765)
 await server.wait_closed()

asyncio.get_event_loop().run_until_complete(hello_server())
asyncio.get_event_loop().run_forever()",correct,Loops
Develop an algorithm in Python to find the number of words in a given text string.,"""Hello world, this is a test.""","def get_word_count(text):
    words = text.split()
    return len(words)

word_count = get_word_count(""Hello world, this is a test."")
print(word_count)","def get_word_count(text):
    words = text.split()
    return len(words)

word_count = get_word_count(""Hello world, this is a test."")
pritn(word_count)",Syntax Error,Loops
You need to create a function in Python to get the factorial of a number.,,"def getFactorial(num):
    if num == 0:
        return 1
    else:
        return num * getFactorial(num - 1)","def getFactorial(num:
    if num == 0:
        return 1
    else:
        return num * getFactorial(num - 1",Syntax Error,Loops
Create a web service to fetch data from a database.,,"A web service can be created using programming languages such as Python, JavaScript, etc. It will contain code to connect to the database, fetch the data, and return it in the appropriate format.","A web service can be created using programming languages such as Python, JavaScript, etc. It will",Incomplete Answer,OOP
Construct a Python class for calculating the area and perimeter of a square.,,"class Square:
 def __init__(self, side):
 self.side = side

 def calculate_area(self):
 return self.side * self.side

 def calculate_perimeter(self):
 return self.side * 4","class Square:
 def __init__(self, side:
 self.side = side

 def calculate_area(self:
 return self.side * self.side

 def calculate_perimeter(self:
 return self.side * 4",Syntax Error,OOP
Generate a Python code to get the min and max elements of an array.,,"def min_and_max(array):
    min_element = array[0]
    max_element = array[0]
    for element in array:
        if element < min_element:
            min_element = element
        elif element > max_element:
            max_element = element 
    return (min_element, max_element)","def min_and_max(array):
    min_element = array[0]
    max_element = array[0]
    for element in array:
        if element < min_element:
            min_element = element
        elif element > max_element:
            max_element = element 
    return (min_element, max_element)",correct,OOP
Generate python code to implement a linear search algorithm to find a particular value in an array.,"array = [5, 10, 15, 20]","def linear_search(array, value):
    length = len(array)
    
    for i in range(length):
        if array[i] == value:
            return i
            
    return -1

print(linear_search(array, 15))","def linear_search(array, value):
    length = len(array)
    
    for i in range(length):
        if",Incomplete Answer,String Manipulation
Create a Python program that checks if two numbers are equal or not.,,"def is_equal(num1, num2):
 return num1 == num2","def is_equal(num1, num2",Incomplete Answer,String Manipulation
Write a python program to sort a list of strings based on their lengths.,"['test', 'sample', 'hello', 'world']","list_of_strings = ['test', 'sample', 'hello', 'world']

list_of_strings.sort(key=len)

print(list_of_strings)","list_of_strings = ['test', 'sample', 'hello', 'world']

list_of_strings.sort(key=len)

print(list_of_strings)",correct,Loops
"Create a Python program that computes the average of the numbers in the list [3, 5, 7, 9].","[3, 5, 7, 9]","def get_average(numbers):
 sum = 0
 for num in numbers:
  sum = sum + num
 return sum / len(numbers)
 
numbers = [3, 5, 7, 9]
average = get_average(numbers)
print(average) # Outputs 6.5","def get_average(numbers):
 sum = 0
 for num in numbers:
  sum = sum + num
 return sum / len(",Incomplete Answer,String Manipulation
Compute the length of a string in Python,"str = ""Hello, World!""","str = ""Hello, World!""
length = len(str)
print('Length of string is:',length) # Length of string is: 13","str = ""Hello, World!""
length = len(str)
print('Leng",Incomplete Answer,OOP
Write a Python program to create a bar chart from a given dataset.,"dataset = [5, 8, 10, 12, 3, 6]","import matplotlib.pyplot as plt 

# Data to plot 
data = [5, 8, 10, 12, 3, 6] 

# Plot the data 
plt.bar(data, data) 

# Set labels 
plt.xlabel('Data') 
plt.ylabel('Values') 

# Title 
plt.title('Bar Chart of Data Set') 

# Show the plot 
plt.show()","import matplotlib.pyplot as plt 

# Data to plot 
data = [5, 8, 10, 12, 3, 6] 

# Plot the data 
plt.bar(data, data) 

# Set labels 
plt.xlabel('Data') 
plt.ylabel('Values') 

# Title 
plt.title('Bar Chart of Data Set') 

# Show the plot 
plt.show()",correct,Loops
Write a python script which takes two numbers and returns the sum of the two numbers.,,"def addNums(num1, num2):
  return num1+num2","def addNums(num1, num2):
  return num1+num2",Syntax Error,Loops
"Starting from given list of numbers, use Python to generate a new list of integers containing the square root of each number in original list.","[4, 9, 16, 25]","import math 
def get_sqrt_list(lst): 
    sqrt_list = [] 
    for el in lst: 
        sqrt_list.append(math.sqrt(el)) 
    return sqrt_list 
print(get_sqrt_list([4, 9, 16, 25]))","import math 
def get_sqrt_list(lst): 
    sqrt_list = [] 
    for el in lst: 
        sq",Incomplete Answer,OOP
Create a function in Python that takes two parameters and prints out the larger of them.,"parameter_1 = 7
parameter_2 = 9","def printMax(parameter_1, parameter_2):
    if parameter_1 > parameter_2:
        print(parameter_1)
    else:
      print(parameter_2)","def printMax(parameter_1, parameter_2:
    if parameter_1 > parameter_2:
        print(parameter_1
    else:
      print(parameter_2",Syntax Error,File I/O
Create a program in Python that takes two numbers as an input and returns the sum of the two numbers.,,"def sum_nums(a, b):
    """"""Returns the sum of two numbers a and b.""""""
    return a + b","def sum_nums(a, b)
    """"""Returns the sum of two numbers a and b.""""""
    return a + b",Syntax Error,String Manipulation
Develop a Python code to encode text into base64.,,"import base64

# Encode a text into base64
def encode_base64(text):
  # convert the text to bytes object
  text_bytes = text.encode('ascii')
  # encode it into base64
  base64_bytes = base64.b64encode(text_bytes)
  # convert it back to a string
  base64_encoded_text = base64_bytes.decode('ascii')

  return base64_encoded_text

print(encode_base64('This is a test'))","import base64

# Encode a text into base64
def encode_base64(text):
  # convert the text to bytes object
  text_bytes = text.encode('ascii')
  # encode it into base64
  base64_bytes = base64.b64encode(text_bytes)
  # convert it back to a string
  base64_encoded_text = base64_bytes.decode('ascii')

  return base64_encoded_text

print(encode_base64('This is a test'))",Syntax Error,String Manipulation
Write a Python program that takes the two numbers and creates a generator expression to give you the sum of the numbers.,"5, 10","sum = sum(x for x in range(5,11))
print(sum)","sum = sum(x for x in range(5,11))
print(sum)",Syntax Error,OOP
Write a python function to check for odd parity of a given number.,,"def check_Odd_Parity(x): 
    parity = 0
    while (x != 0): 
        x = x & (x - 1) 
        parity += 1
    if (parity % 2 == 1): 
        return True
    else: 
        return False","def check_Odd_Parity(x): 
    parity = 0
    while (x != 0): 
        x = x & (x - 1) 
        parity += 1
    if (parity % 2 == 1): 
        return True
    else: 
        return False",correct,String Manipulation
Write a Python script to extract all the URLs from a given HTML page.,,"import re
from bs4 import BeautifulSoup

def extract_urls(html):
  soup = BeautifulSoup(html, 'html.parser')
  urls = []
  for link in soup.find_all('a'):
    url = link.get('href')
    if url:
      urls.append(url)
  return urls","import re
from bs4 import BeautifulSoup

def extract_urls(html):
  soup = BeautifulSoup(html, 'html.parser')
  urls",Incomplete Answer,Loops
"Create a Python program that takes a list of carbohydrates [glucose, fructose, galactose] and calculates the net energy charge.","[glucose, fructose, galactose]","net_energy_charge = 0

for carbohydrate in list_of_carbohydrates:
 if carbohydrate == 'glucose':
  net_energy_charge += -2.3
 elif carbohydrate == 'fructose':
  net_energy_charge += -2.5
 elif carbohydrate == 'galactose':
  net_energy_charge += -3

print(net_energy_charge)","net_energy_charge = 0

for carbohydrate in list_of_carbohydrates:
 if carbohydrate == 'glucose':
  net_energy_charge += -2.3
 elif carbohydrate == 'fructose':
  net_energy_charge += -2.5
 elif carbohydrate == 'galactose':
  net_energy_charge += -3

print(net_energy_charge",Syntax Error,File I/O
Construct a while loop in Python to print the first 10 numbers.,,"num = 1
while num <= 10:
    print(num)
    num += 1","num = 1
while num <= 10:
    print(num)
    num += 1",correct,Loops
Write a function that matches a string that has an a followed by zero or more b's by using regex.,,"import re
def text_match(text):
        patterns = 'ab*?'
        if re.search(patterns,  text):
                return ('Found a match!')
        else:
                return ('Not matched!')","import re
def text_match(text):
        patterns = 'ab*?'
        if re.search(patterns,  text):",Incomplete Answer,Loops
Rewrite the following bash script using Python.,"#!/bin/bash
echo ""Enter a name: ""
read name
echo ""Hello $name""","name = input('Enter a name: ')
print(f'Hello {name}')","name = input('Enter a name: ')
print(f'Hello {name}')",correct,OOP
Create a Python Program to implement the Monte Carlo method for calculating the value of pi.,,"import random
 
def MonteCarlo(n):
    inside = 0
    for i in range(n):
        x = random.random()
        y = random.random()
        if x*x + y*y <= 1:
            inside += 1
 
    return 4*inside/n
 
if __name__ == '__main__':
    n = int(input(""Input the number of points: ""))
    print(""Pi is approximately {}!"".format(MonteCarlo(n)))","import random
 
def MonteCarlo(n):
    inside = 0
    for i in range(n):
        x = random.random()
        y = random.random()
        if x*x + y*y <= 1:
            inside += 1
 
    return 4*inside/n
 
if __name__ == '__main__':
    n = int(input(""Input the number of points: ""))
    print(name, ""Pi is approximately {}!"".format(MonteCarlo(n)))",Syntax Error,OOP
Construct a code that identifies the sum of elements of an array in Python.,"[4, 6, 8, 2]","def sum_elements(arr):
    summ = 0
    for i in arr: 
        summ += i
    return summ

summ = sum_elements([4, 6, 8, 2])
print(summ)","def sum_elements(arr):
    summ = 0
    for i in arr: 
        summ += i
    return summ

summ = sum_elements([4, 6, 8, 2])
print(summ)",correct,String Manipulation
Implement a program in Python to get the sum of all even numbers in a list of integers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def sum_of_even_numbers(lst): 
  sum = 0
  for i in lst: 
    if i%2 == 0: 
      sum = sum + i 
  return sum 
  
print(sum_of_even_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))","def sum_of_even_numbers(lst) 
  sum = 0
  for i in lst 
    if i%2 == 0 
      sum = sum + i 
  return sum 
  
print(sum_of_even_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",Syntax Error,Loops
Write a Python program to split a string into a list of substrings.,"String: hello world
Delimiter: "" ""","words = str.split("" "")",words = str,Incomplete Answer,Recursion
"Create a Python program to generate a random password of 8 characters including uppercase, lowercase, numeric digits, and special characters.",,"import random
import string

def generate_password():
 chars = string.ascii_uppercase + string.ascii_lowercase + string.digits + '$#@'
 random.shuffle(list(chars))
 return ''.join(random.sample(chars, 8))

print(generate_password()) #nH3@r4y6","import random
import string

def generate_password():
 chars = string.ascii_uppercase + string.ascii_lowercase + string.digits + '$#@'
 random.shuffle(list(chars))
 return ''.join(random.sample(chars, 8))

print(generate_password()) #nH3@r4y6",correct,OOP
Write a Python function to split a given string in two parts which are separated by a space.,,"def split_string(string):
  parts = string.split(' ')
  return parts[0], parts[1]","def split_string(string):
  parts = string.split(' ')
  return parts[0], parts[1]",Syntax Error,File I/O
Write a function to count the pairs of reverse strings in the given string list.,,"def count_reverse_pairs(test_list):
  res = sum([1 for idx in range(0, len(test_list)) for idxn in range(idx, len( 
	test_list)) if test_list[idxn] == str(''.join(list(reversed(test_list[idx]))))]) 
  return str(res)","def count_reverse_pairs(test_list):
  res = sum([1 for idx in range(0, len(test_list)) for idxn in range(idx, len( 
	test_list)) if test_list[idxn] == str(''.join(list(reversed(test_list[idx]))))]) 
  return str(res)",correct,OOP
Write an algorithm in Python that calculates the maximum subarray of a given array.,"[-2,1,-3,4,-1,2,1,-5,4]","def max_subarray(arr):
 max_so_far = arr[0] 
 max_ending_here = arr[0] 
   
 for i in range(1, len(arr)): 
  max_ending_here = max(arr[i], max_ending_here + arr[i]) 
  max_so_far = max(max_so_far, max_ending_here)  
   
 return max_so_far","def max_subarray(arr):
 max_so_far = arr[0] 
 max_ending_here = arr[0] 
   
 for i in range(1, len(arr)): 
  max_ending",Incomplete Answer,OOP
Create a python dictionary to store the following details,"Name = John
Age = 27
Gender = Male","person_details = {
    'Name': 'John',
    'Age': 27,
    'Gender': 'Male'
}","person_details = {
    'Name': 'John',
    'Age': 27,
    'Gender': 'Male'
}",correct,String Manipulation
Write a function to convert a list of multiple integers into a single integer.,,"def multiple_to_single(L):
  x = int("""".join(map(str, L)))
  return x","def multiple_to_single(L):
  x = int("""".join(map(str, L)))
  return x",correct,Loops
Develop a Python program that calculates the sum of positive integers up to and including a given number 'n'.,n = 10,"def sum_of_first_n_numbers(n): 
	sum = 0
	
	# iterate over all numbers 
	# from 0 to n 
	for num in range(0, n+1): 
		sum += num 
	
	return sum

n = 10
print(sum_of_first_n_numbers(n)) 

# Output: 55","def sum_of_first_n_numbers(n): 
	sum = 0
	
	# iterate over all numbers 
	# from 0 to n 
	for num in range(0, n+1): 
		sum += num 
	
	return sum

n = 10
print(sum_of_first_n_numbers(n)) 

# Output: 55",correct,File I/O
Design an algorithm to find out the top 5 characters with the highest occurrence from a string in Python.,This is a test sentence to use for the example.,"from collections import Counter

def top_characters(string):
    counter = Counter(string).most_common(5)
    return counter
    
string = ""This is a test sentence to use for the example.""
print(top_characters(string))
# Output: [('e', 5), ('s', 4), ('t', 4), ('o', 3), ('i', 3)]","from collections import Counter

def top_characters(string):
    counter = Counter(string).most_common(5)
    return counter
    
string = ""This is a test sentence to use for the example.""
print(name, top_characters(string))
# Output: [('e', 5), ('s', 4), ('t', 4), ('o', 3), ('i', 3)]",Syntax Error,String Manipulation
Develop a Python program to compact a given list of integers by removing its duplicate elements.,"[1, 1, 2, 2, 3, 4, 4, 5]","def compact_list(array):
    return list(set(array))","def compact_list(array):
    return list(set(array))",correct,File I/O
Create a function in Python to create a dictionary with keys as numbers and each key corresponding to the natural number to its right.,,"def create_dictionary(n):
  # Create an empty dictionary
  dictionary = {}
  
  # Loop through each number
  for i in range(1, n + 1):
    # For each number, add an entry to the dictionary
    dictionary[i] = i + 1
    
  # Return the dictionary
  return dictionary","def create_dictionary(n):
  # Create an empty dictionary
  dictionary = {}
  
  # Loop through each number
  for i in range(1, n + 1):
    # For each number, add an entry to the dictionary
    dictionary[i] = i + 1
    
  # Return the dictionary
  return dictionary",correct,OOP
Generate a program to generate encryption keys from a string using Python.,,"import hashlib

# define the input string
input_string = 'ExampleString'

# generate a key
key = hashlib.sha256(input_string.encode()).hexdigest()

# output the key
print('Encryption key:', key)","import hashlib

# define the input string
input_string = 'ExampleString'

# generate a key
key = ",Incomplete Answer,Loops
"Write a Python program to build an SQL query that creates a table based on the following fields: name (string), age (integer), and weight (float).",,"sql_query = """"""
 CREATE TABLE Person (
 name VARCHAR(255),
 age INTEGER,
 weight FLOAT
 );
""""""

print(sql_query)","sql_query = """"""
 CREATE TABLE Person (
 name VARCHAR(255",Incomplete Answer,File I/O
Write a Python program to insert an item at a given position into a list,"lst = [""Red"", ""Orange"", ""Yellow""]
item = ""Black""
pos = 2","def insert_item(lst, item, pos):
    lst.insert(pos, item)
    return lst

lst = [""Red"", ""Orange"", ""Yellow""]
item = ""Black""
pos = 2

print(insert_item(lst, item, pos))","def insert_item(lst, item, pos):
    lst.insert(pos, item)
    return lst

lst = [""Red"", ""Orange"", ""Yellow""]
item = ""Black""
pos = 2

print(insert_item(lst, item, pos))",correct,String Manipulation
Use regex to match a valid email address in python,,"import re

EMAIL_REGEX = re.compile(r""(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)"")

def is_email_valid(email):
  return EMAIL_REGEX.match(email) != None","import re

EMAIL_REGEX = re.compile(r""(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)"")

def is_email_valid(email):
  return EMAIL_REGEX.match(email) != None",correct,Loops
Write a Python program to read a given string and sort it alphabetically.,"""Hello, World!""","def sort_alphabetically(input_string):
    chars = list(input_string)
    chars.sort()
    print("""".join(chars))

sort_alphabetically(""Hello, World!"")","def sort_alphabetically(input_string)
    chars = list(input_string)
    chars.sort()
    print("""".join(chars))

sort_alphabetically(""Hello, World!"")",Syntax Error,File I/O
Write a python function to remove the characters which have odd index values of a given string.,,"def odd_values_string(str):
  result = """" 
  for i in range(len(str)):
    if i % 2 == 0:
      result = result + str[i]
  return result","def odd_values_string(str):
  result = """" 
  for i in range(len(str)",Incomplete Answer,OOP
Transform the JSON string below into a Python dictionary.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","import json
data = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
my_dict = json.loads(data)","import json
data = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
my_dict = json.loads(data)",correct,OOP
Rewrite the following python program using list comprehension,"list = ['apple', 'banana', 'cat', 'dog', 'elephant']
new_list = []
for x in list:
    new_list.append(x.upper())","list = ['apple', 'banana', 'cat', 'dog', 'elephant']
new_list = [x.upper() for x in list]","list = ['apple', 'banana', 'cat', 'dog', 'elephant']
new_list = [x.upper() for x in list]",correct,String Manipulation
Write a Python program that will determine the maximum number of unique paths a person can take from one point to another in a two-dimensional grid.,"grid = [
[0,1],
[1,1]
]","def unique_paths(grid):
 rows = len(grid)
 cols = len(grid[0])
 
 dp = [[0 for i in range(cols)] for j in range(rows)]
 
 for i in range(rows):
 for j in range(cols):
 if i == 0 or j == 0:
 dp[i][j] = 1
 else:
 dp[i][j] = dp[i][j-1] + dp[i-1][j]
 
 return dp[-1][-1]
 
print(unique_paths(grid))
# Output: 2","def unique_paths(grid):
 rows = len(grid)
 cols = len(grid[0])
 
 dp = [[0 for i in range(cols)] for j in range(rows)]
 
 for i in range(rows):
 for j in range(cols):
 if i == 0 or j == 0:
 dp[i][j] = 1
 else:
 dp[i][j] = dp[i][j-1] + dp[i-1][j]
 
 return dp[-1][-1]
 
print(name, unique_paths(grid))
# Output: 2",Syntax Error,OOP
Write a script in Python to detect the sentiment of a given text.,,"import textblob

def detect_sentiment(text):
    analysis = textblob.TextBlob(text)
    if analysis.sentiment.polarity > 0:
        return 'positive'
    elif analysis.sentiment.polarity == 0:
        return 'neutral'
    else:
        return 'negative'","import textblob

def detect_sentiment(text):
    analysis = textblob.TextBlob(text)
    if analysis.sentiment.polarity > 0:
        return 'positive'
    elif analysis.sentiment.polarity == 0:
        return 'neutral'
    else:
        return 'negative'",Syntax Error,String Manipulation
Modify the given Python code to improve its performance.,"def find_sum(n):
    total = 0
    for i in range(n+1):
        total += i
    return total","def find_sum(n):
    # base case
    if n == 0:
        return 0
    # recursive case
    else:
        return n + find_sum(n-1)","def find_sum(n):
    # base case
    if n == 0:
        return 0
    # recursive case
    else:
        return n + find_sum(n-1)",correct,String Manipulation
Optimize a given Python program to calculate the Fibonacci series.,,"def Fibonacci(n):
 if n<0:
  print(""Incorrect input"")
 elif n==1:
  return 0
 elif n==2:
  return 1
 else:
  a = [0] * (n+1)
  a[0] = 0
  a[1] = 1
 
  for i in range(2, n+1):
   a[i] = a[i-1] + a[i-2]
  return a[n]","def Fibonacci(n):
 if n<0:
  print(""Incorrect input"")
 elif n==1:
  return 0
 elif n==2:
  return 1
 else:
  a = [0] * (n+1)
  a[0] = 0
  a[1] = 1
 
  for i in range(2, n+1):
   a[i] = a[i-1] + a[i-2]
  return a[n]",correct,String Manipulation
Generate an optimized version of the following Python program.,"def calculate_sum(a,b):
    result = 0
    for x in range(a, b+1):
        result += x
    return result

sum = calculate_sum(1, 10)
print(sum)","def calculate_sum(a,b):
    return (b*(b+1))//2 - ((a-1)*a)//2

sum = calculate_sum(1, 10)
print(sum)","def calculate_sum(a,b):
    return (b*(b+1))//2 - ((a-1)*a)//2

sum = calculate_sum(1, 10)
print(sum)",correct,File I/O
Make a function to print out all substrings of a given string in Python,"str = ""coding""","def print_substrings(str):
    for i in range(len(str)):
        for j in range(i+1, len(str)+1):
            print(str[i:j])

if __name__ == ""__main__"":
    str = ""coding""
    print_substrings(str)","def print_substrings(str):
    for i in range(len(str)):
        for j in range(i+1, len(str)+1):
            print(str[i:j])

if __name__ == ""__main__"":
    str = ""coding""
    print_substrings(str)",correct,String Manipulation
"Create a class in Python to represent a Person which contains attributes like name, age, height and address.",,"class Person:
    def __init__(self, name, age, height, address):
        self.name = name
        self.age = age
        self.height = height
        self.address = address
    
    def describe(self):
        print('Name:', self.name)
        print('Age:', self.age)
        print('Height:', self.height)
        print('Address:', self.address)","class Person
    def __init__(self, name, age, height, address)
        self.name = name
        self.age = age
        self.height = height
        self.address = address
    
    def describe(self)
        print('Name', self.name)
        print('Age', self.age)
        print('Height', self.height)
        print('Address', self.address)",Syntax Error,OOP
Code an algorithm in Python to solve the following: Find the two largest numbers in a set of numbers.,,"def findLargest(nums):
  largest1 = float('-inf')
  largest2 = float('-inf')
  
  for num in nums:
    if num > largest2:
      if num > largest1:
        largest2 = largest1
        largest1 = num
      else:
        largest2 = num
  
  return largest1, largest2

findLargest([1, 5, 2, 9, 6, 8]) // 9,8","def findLargest(nums):
  largest1 = float('-inf')
  largest2 = float('-inf')
  
  for num in nums:
    if num > largest2:
      if num > largest1:
    ",Incomplete Answer,File I/O
Refactor the following Python code to use list comprehension instead of for-loops.,"my_list = [1, 2, 3, 4, 5] 
new_list = []

for item in my_list:
 if item % 2 == 0:
 new_list.append(item**2)","my_list = [1, 2, 3, 4, 5] 
new_list = [x**2 for x in my_list if x % 2 == 0]","my_list = [1, 2, 3, 4, 5] 
new_list = [x**2 for x in my_list if x % 2 == 0]",correct,File I/O
Code a python class that accepts a list of names as input and prints them on a separate line.,"List:[""John"", ""James"", ""Jenny"", ""Frank""]","class Person: 
  def __init__(self, names): 
    self.names = names
    
  def print_names(self): 
    for name in self.names: 
      print(name) 
      
person = Person([""John"", ""James"", ""Jenny"", ""Frank""])
person.print_names()","class Person: 
  def __init__(self, names): 
    self.names = names
    
  def print_names(self): 
    for name i",Incomplete Answer,String Manipulation
Generate a program to recognize the sentence 'Good morning' in Python.,,"import speech_recognition as sr

r = sr.Recognizer()

with sr.Microphone() as source:
    print(""Say something!"")
    audio = r.listen(source)

try:
    print(""You said: "" + r.recognize_google(audio))
    if r.recognize_google(audio) == 'Good morning':
        print('correct')
    else:
        print('incorrect')
except:
    pass","import speech_recognition as sr

r = sr.Recognizer()

with sr.Microphone() as source:
    print(name, ""Say something!"")
    audio = r.listen(source)

try:
    print(name, ""You said: "" + r.recognize_google(audio))
    if r.recognize_google(audio) == 'Good morning':
        print(name, 'correct')
    else:
        print(name, 'incorrect')
except:
    pass",Syntax Error,Recursion
Update the given Python code such that the output will be printed in ascending order.,"lst = [3, 1, 4, 5, 2]

for number in lst:
    print(number)","lst = [3, 1, 4, 5, 2]

for number in sorted(lst):
    print(number)","lst = [3, 1, 4, 5, 2]

for number in sorted(lst):
    print(number)",correct,OOP
Create an algorithm in Python to reverse an array in place.,,"def reverse_in_place(arr): 
  
    # Initializing start and end 
    start = 0
    end = len(arr) - 1
  
    while start < end: 
        # swapping the elements 
        arr[start], arr[end] = arr[end], arr[start] 
        start += 1
        end -= 1
    return arr 
  
arr = [1, 2, 3, 4, 5, 6] 
print(reverse_in_place(arr))","def reverse_in_place(arr): 
  
    # Initializing start and end 
    start = 0
    end = len(arr) - 1
  
    while start < end: 
        # swapping the elements 
        arr[start], arr[end] = arr[end], arr[start] 
        start += 1
        end -= 1
    return arr 
  
arr = [1, 2, 3, 4, 5, 6] 
print(reverse_in_place(arr))",correct,File I/O
Generate a correct python algorithm to delete a given element from list.,,"def delete_element(numbers, element):
 result = []
 for x in numbers:
 if x != element:
 result.append(x)
 return result","def delete_element(numbers, element):
 result = []
 for x in numbers:
 if x != element:
 result.append(x)
 return result",correct,String Manipulation
Create a web scraper in Python to scrape product prices from a given URL.,URL: https://example.com/product-list,"import requests
from bs4 import BeautifulSoup

# make the request
URL = ""https://example.com/product-list""
response = requests.get(URL)

# parse the HTML
soup = BeautifulSoup(response.content, 'html.parser')

# find all product prices on the page
prices = soup.find_all('span', class_=""price"")

# print out all the prices
for price in prices:
 print(price.text)","import requests
from bs4 import BeautifulSoup

# make the request
URL = ""https://example.com/product-list""
response = requests.get(URL)

# parse the HTML
soup = BeautifulSoup(response.content, 'html.parser')

# find all product prices on the page
prices = soup.find_all('span', class_=""price"")

# print out all the prices
for price in prices:
 print(price.text)",correct,Loops
"Create a basic Python script that generates a random password of 12 characters with at least 1 number, 1 special character, and 1 uppercase letter.",,"import random
import string

def generate_password():
 chars = string.ascii_letters + string.digits + string.punctuation
 password = ''.join(random.choice(chars) for i in range(12))
 return password

if name == 'main':
 password = generate_password()
 print(password)","import random
import string

def generate_password():
 chars = string.ascii_letters + string.digits + string.punctuation
 password = ",Incomplete Answer,String Manipulation
Develop a function in Python to concatenate two lists,"list1 = [1,2,3]
list2 = [4,5,6]","def concatenateLists(list1, list2): 
    list3 = list1 + list2 
    return list3","def concatenateLists(list1, list2): 
    list3 = list1 + list2 
    return list3",correct,Loops
Write a function to perfom the modulo of tuple elements in the given two tuples.,,"def tuple_modulo(test_tup1, test_tup2):
  res = tuple(ele1 % ele2 for ele1, ele2 in zip(test_tup1, test_tup2)) 
  return (res) ","def tuple_modulo(test_tup1, test_tup2):
  res = tuple(ele1 % ele2 for ele1, ele2 in zip(test_tup1, test_tup2)) 
  return (res) ",correct,Recursion
Create a python program that creates a random password with 8 characters.,,"import random
import string

def create_password():
    chars = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(chars) for _ in range(8))
    return password

print(create_password())","import random
import string

def create_password():
    chars = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(chars) for _ in range(8))
    return password

print(create_password())",correct,File I/O
Write Python code to find the sum of products of respective array elements,"[1, 2, 3, 4]
[5, 10, 15, 20]","def sum_product_array(arr1, arr2):
    total = 0
    for i in range(len(arr1)):
        total += arr1[i] * arr2[i]
    return total","def sum_product_array(arr1, arr2):
    total = 0
    for i in range(len(arr1)):
        total += arr1[i] * arr2[i]
    return total",correct,Loops
Write a Python program to generate multiplication tables from 1 to 10.,,"for num in range(1,11):
 for i in range(1,11):
  print(num,""X"",i,""="",num*i)
  print("""")","for num in range(1,11):
 for i in range(1,11):
  print(num,""X"",i,""="",num*i)
  print("""")",correct,Loops
Write a Python program to generate a random matrix of size mXn where all numbers are greater than k.,,"import numpy as np

def generate_matrix(m, n, k):
    matrix = np.random.randint(k + 1, high=9, size=(m, n))
    return matrix

m = 5
n = 5
k = 6
matrix = generate_matrix(m, n, k)
print(matrix)","import numpy as np

def generate_matrix(m, n, k):
    matrix = np.random.randint(k + 1, high=9, size=(m, n))
    return matrix

m = 5
n = 5
k = 6
matrix = generate_matrix(m, n, k)
pritn(matrix)",Syntax Error,Loops
Write a python script that takes a list of strings as input and reverse the order of each sentence.,"sentences = [""Hello world!"", ""I am learning Python!"", ""How are you?""]","sentences = [""Hello world!"", ""I am learning Python!"", ""How are you?""]

reversed_sentences = [sentence[::-1] for sentence in sentences]
 
print(reversed_sentences)
# Output: [""!dlrow olleH"", ""!nohtyP gninrael m'I"", ""?uoy era woH""]","sentences = [""Hello world!"", ""I am learning Python!"", ""How are you?""]

reversed_sentences = [sentence[::-1] for se",Incomplete Answer,OOP
Create a program in Python that implements bubble sort.,,"def bubble_sort(nums):
    for i in range(len(nums)-1):
        for j in range(len(nums)-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
    return nums","def bubble_sort(nums):
    for i in range(len(nums)-1):
        for j in range(len(nums)-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
    return nums",correct,String Manipulation
Generate a Python program to generate a random number within a given range.,,"def random_num(start, end):
  return random.randint(start, end)","def random_num(start, end)
  return random.randint(start, end)",Syntax Error,Recursion
Create a Python script that extracts a 3x3 submatrix from a 3x5 matrix.,"[[1, 2, 3, 4, 5],
[6, 7, 8, 9, 0],
[1, 2, 3, 4, 5]]","matrix = [[1, 2, 3, 4, 5],
         [6, 7, 8, 9, 0],
         [1, 2, 3, 4, 5]]

submatrix = [[matrix[0][0], matrix[0][1], matrix[0][2]],
             [matrix[1][0], matrix[1][1], matrix[1][2]],
             [matrix[2][0], matrix[2][1], matrix[2][2]]]

print(submatrix)","matrix = [[1, 2, 3, 4, 5],
     [6, 7, 8, 9, 0],
     [1, 2, 3, 4, 5]]

submatrix = [[matrix[0][0], matrix[0][1], matrix[0][2]],
         [matrix[1][0], matrix[1][1], matrix[1][2]],
         [matrix[2][0], matrix[2][1], matrix[2][2]]]

print(submatrix)",Syntax Error,String Manipulation
Design a Python code solution to reverse a string with a given input.,"string = ""Hello world!""","def reverse_string(string):
    return string[::-1]

string = ""Hello world!""
print(reverse_string(string))","def reverse_string(string):
    return string[::-1]

string = ""Hello world!""
print(reverse_string(string))",correct,OOP
Design a Python program to print out the nth triangle number.,,"def triangle_num(n):
    if n == 1:
        return 1
    else: 
        return n + triangle_num(n-1)","def triangle_num(n):
    if n == 1:
        return",Incomplete Answer,Loops
Create a Python program to consume an API and print the data it receives.,,"import requests

url = 'https://jsonplaceholder.typicode.com/posts'
response = requests.get(url)

if response.status_code == 200:
  posts = response.json()
  for post in posts:
    print(post['title'])","import requests

url = 'https://jsonplaceholder.typicode.com/posts'
response = requests.get(url)

if response.status_code == 200:
  posts = response.json()
  for post in posts:
    print(name, post['title'])",Syntax Error,Loops
Convert the following JSON string into a Python dictionary.,"{""a"":1, ""b"": ""Hello"", ""c"": {""d"": [34, 56]}}","import json

json_string = '{""a"":1, ""b"": ""Hello"", ""c"": {""d"": [34, 56]}}'
parsed_json = json.loads(json_string)

print(parsed_json)  # Output: {'a': 1, 'b': 'Hello', 'c': {'d': [34, 56]}}","import json

json_string = '{""a"":1, ""b"": ""Hello"", ""c"": {""d"": [34, 56]}}'
parsed_json = json.l",Incomplete Answer,OOP
Create a Python class called 'Points' to store three dimensional points.,,"class Points:
    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z
        
    def __str__(self):
        return ""x={}, y={}, z={}"".format(self.x, self.y, self.z)","class Points:
    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z ",Incomplete Answer,Loops
Generate a Python program to calculate the sum from 0 to 10.,,"def calculate_sum(n):
 sum_total = 0
 for i in range(n+1):
  sum_total += i
 return sum_total

print(calculate_sum(10)) # Output: 55","def calculate_sum(n):
 sum_total = 0
 for i in range(n+1):
  sum_total += i
 return sum_total

print(calculate_sum(10)) # Output: 55",correct,OOP
Write a function in Python that takes a list of numbers as input and returns the product of all the numbers.,"[1, 2, 3, 4]","def product(lst):
    product = 1
    for num in lst:
        product *= num
    return product

print(product([1, 2, 3, 4]))","def product(lst):
    product = 1
    for num in lst:
        product *= num
    return product

print(product([1, 2, 3, 4]))",correct,String Manipulation
Develop a program in Python that reverses a given string.,"""Hello World!""","def reverse_string(string):
    reversed_string = string[::-1] 
    return reversed_string

reversed_string = reverse_string(""Hello World!"")
print(reversed_string)","def reverse_string(string):
    reversed_string = string[::-1] 
    return reversed_string

reversed_string = reverse_string(""Hello World!"")
print(reversed_string)",correct,File I/O
"Define and create a class in Python to represent a student. The student should have properties for first name, last name, student ID and a GPA.",,"class Student:
  def __init__(self, first_name, last_name, student_id, gpa):
    self.first_name = first_name
    self.last_name = last_name
    self.student_id = student_id
    self.gpa = gpa

student = Student('John', 'Doe', '12345', 3.5)","class Student:
  def __init__(self, first_name, last_name, student_id, gpa):
    self.first_name = first_name
    self.l",Incomplete Answer,Recursion
Design a Python function that takes a string and returns its length.,,"def find_string_length(string): 
    length = 0
    for char in string: 
        length += 1
    return length

result = find_string_length('Hello World!')
print(result)","def find_string_length(string): 
    length = 0
    for char in string: 
        len",Incomplete Answer,String Manipulation
Take the list of people below and create a Python dictionary with the names as keys and the ages as values.,"John (20), Jane (40), Alex (18), Peter (45)","people_dict = {'John': 20, 'Jane': 40, 'Alex': 18, 'Peter': 45}","people_dict = {'John': 20, 'Jane': 40, 'Alex': 18, 'Peter': 45}",correct,File I/O
Write a function in Python to check if two strings are anagrams of each other.,,"def is_anagram(str1, str2): 
    # Create lists of characters in each string
    list1 = list(str1)
    list2 = list(str2)

    # Sort both lists
    list1.sort()
    list2.sort()
    
    # Compare the two lists 
    if list1 == list2:
        return True
    else:
        return False","def is_anagram(str1, str2): 
# Create lists of characters in each string
list1 = list(str1)
list2 = list(str2)

# Sort both lists
list1.sort()
list2.sort()

# Compare the two lists 
if list1 == list2:
    return True
else:
    return False",Syntax Error,Loops
Write a Python function that finds the smallest number among three numbers,,"def find_smallest(num1, num2, num3):
    return min(num1, num2, num3)

# Example
print(find_smallest(2, 5, 8))  # Prints 2","def find_smallest(num1, num2, num3):
    return min(num1, num2, num3)

# Example
print(name, find_smallest(2, 5, 8))  # Prints 2",Syntax Error,Loops
Write a Python program to sort a dictionary by key,,"def sort_dict_by_key(sample):
    # Create a sorted list of keys
    sorted_keys = sorted(sample.keys())
    # Iterate over the sorted sequence
    for key in sorted_keys:
        # Generate key-value pair
        print (key, sample[key])

sample = {'c':10, 'a':8, 'b':12, 'e':3, 'd':4}
sort_dict_by_key(sample)","def sort_dict_by_key(sample):
    # Create a sorted list of keys
    sorted_keys = sorted(sample.keys())
    # Iterate over the sorted sequence
    for key",Incomplete Answer,File I/O
Design a program in Python to compute the Nth power of a given number.,"Number: 6
Power: 4","def pow(num, pow):
    result = 1
    for i in range(pow):
        result *= num
    return result","def pow(num, pow:
    result = 1
    for i in range(pow:
        result *= num
    return result",Syntax Error,Recursion
Write a Python program to scrape the top 5 trending tweets from Twitter.,,"import requests
from bs4 import BeautifulSoup

url = 'https://twitter.com/trends'
r = requests.get(url)

soup = BeautifulSoup(r.text, 'html.parser')
trending_tweets = soup.find_all('a', {'class': 'trend-details'})

for tweet in trending_tweets[:5]:
 print(tweet.text)","import requests
from bs4 import BeautifulSoup

url = 'https://twitter.com/trends'
r = requests.get(url)

soup = BeautifulSoup(r.text,",Incomplete Answer,String Manipulation
Modify this python code to increase the speed of the program.,"def divide(a, b):
    return a/b

a = 5
b = 2
number = divide(a, b)
print(number)","def divide(a, b):
    return a // b

a = 5
b = 2
number = divide(a, b)
print(number)","def divide(a, b)
    return a // b

a = 5
b = 2
number = divide(a, b)
print(number)",Syntax Error,String Manipulation
Modify the following Python program to explore and retrieve data from a dataset using Pandas.,"import pandas as pd

df = pd.read_csv('data.csv')

print(df)","import pandas as pd

df = pd.read_csv('data.csv')

print(df.head())
print(df.info())
print(""Average age of passengers:"", df['Age'].mean())
print(""Number of female passengers:"", df[df['Sex'] == 'female'].shape[0])
print(""Oldest passenger:"", df.loc[df['Age'].idxmax()])","import pandas as pd

df = pd.read_csv('data.csv')

print(df.head())
print(df.info())
print(""Average age of passengers:"", df['Age'].me",Incomplete Answer,Recursion
Sort an array of strings in descending order according to their length.,"['coding', 'algorithm', 'programming', 'python']","['programming', 'algorithm', 'python', 'coding']","['programming', 'algorit",Incomplete Answer,String Manipulation
can you provide a python for loop that prints out the product of two lists?,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","list1 = [1, 2, 3]
list2 = [4, 5, 6]

for i in range(len(list1)):
    product = list1[i] * list2[i]
    print(product)","list1 = [1, 2, 3]
list2 = [4, 5, 6]

for i in range(len(list1)):
    product = list1[i] * list2[i]
    print(name, product)",Syntax Error,Recursion
Create a Python 3 program to sort a list of numbers in ascending order.,"[5, 7 ,1 ,3, 4]","def sort_list(lst):
  lst.sort()
  return lst

lst = [5, 7 ,1 ,3, 4]
sorted_list = sort_list(lst)
print(sorted_list)","def sort_list(lst):
  lst.sort()
  return lst

lst = [5, 7 ,1 ,3, 4]
sorted_list = sort_list(lst)
pritn(sorted_list)",Syntax Error,File I/O
Convert the given string from Upper Camel Case notation to lower snake case notation in Python.,UpperCamelCase,"lower_snake_case = ''.join(w.lower() for w in UpperCamelCase.split()).replace('', '_')[1:]","lower_snake_case = ''.join(w.lower() for w in UpperCamelCase.split()).replace('', '_')[1:]",correct,String Manipulation
Construct a Python program that can extract the name of an author from a given book title.,title = 'Harry Potter and the Sorcerer's Stone',"def extract_author(title):
    title_words = title.split()
    for word in title_words[::-1]:
        if word[0].isupper():
            return word

print(extract_author(title)) # Potter","def extract_author(title):
    title_words = title.split()
    for word in title_words[::-1]:
        if word[0].isupper():
            return word

print(extract_author(title)) # Potter",correct,String Manipulation
Create a simple Python program to calculate the sum of two numbers and print out the result.,"Number 1: 3
Number 2: 5","num1 = 3
num2 = 5

result = num1 + num2

print(f'The sum of {num1} and {num2} is {result}')","num1 = 3
num2 = 5

result = num1 + num2

print(f'The sum of {num1} and {num2} is {result}'",Syntax Error,Recursion
Create a python function that accepts two lists as arguments and returns true if the first list is contained within the second,"list_a = [1,2,3,4]
list_b = [1,2,3,4,5,6,7]","def is_contained(list_a, list_b):
    for x in list_b: 
        if x not in list_a: 
            return False 
  
    return True","def is_contained(list_a, list_b):
    for x in list_b: 
        if x not in list_a: 
            return False 
  
    return True",Syntax Error,Loops
"Make a program in Python that takes a list of integers as input and prints the average, maximum, and minimum.","[1, 7, 4, 6]","def calculate_avg_max_min(list_of_int):
    avg = sum(list_of_int) / len(list_of_int)
    maximum = max(list_of_int)
    minimum = min(list_of_int)
    return avg, maximum, minimum

list_of_int = [1, 7, 4, 6]
avg, max_int, min_int = calculate_avg_max_min(list_of_int)
print(""Average ="", avg)
print(""Maximum ="", max_int)
print(""Minimum ="", min_int)","def calculate_avg_max_min(list_of_int):
    avg = sum(list_of_int) / len(list_of_int)
    maximum = max(list_of_int)
    minimum = min(list_of_int)
    return avg, maximum, ",Incomplete Answer,Recursion
Write a Python class that has a method that encrypts a given string using Caesar’s Cypher.,"Key = 3
String = “Hello World”","class Encrypter:
    def ceaserCypherEncryptor(self, key, string):
        encStr = """"
        for ch in string:
            encStr += chr(ord(ch)+key)
        return encStr
        
e = Encrypter()
encStr = e.ceaserCypherEncryptor(3, ""Hello World"") 
print(encStr) 
# Output 
Khoor#Zruog","class Encrypter:
    def ceaserCypherEncryptor(self, key, string):
        encStr = """"
        for ch in string:
            encStr += chr(ord(ch)+key)
        return encStr
        
e = Encrypter()
encStr = e.ceaserCypherEncryptor(3, ""Hello World"") 
print(encStr) 
# Output 
Khoor#Zruog",correct,String Manipulation
Remove all the commented code from Python program.,"# This code will print ""Hello World!""
print(""Hello World!"")
# This code can be used to increment i
i=i+1","print(""Hello World!"")
i=i+1","print(name, ""Hello World!"")
i=i+1",Syntax Error,String Manipulation
Create a Python function to calculate the area of a triangle given the lengths of its three sides.,"5, 6, 7","import math

def get_area(a, b, c):
    s = (a + b + c) / 2
    area = math.sqrt(s*(s-a)*(s-b)*(s-c))
    return area

input_data = 5, 6, 7
area = get_area(*input_data)
print(area)  # Output: 14.696938456699069","import math

def get_area(a, b, c):
    s = (a + b + c) / 2
    area = math.sqrt(s*(s-a)*(s-b)*(s-c))
   ",Incomplete Answer,File I/O
Create a WebScraper in Python that extracts the titles and links from a given URL.,The web page https://www.example.com,"from bs4 import BeautifulSoup
import requests

url = 'https://www.example.com'
r = requests.get(url)

soup = BeautifulSoup(r.content, 'html.parser')

# Extract titles and links
titles = []
links = []
for link in soup.find_all('a'):
 titles.append(link.get('title'))
 links.append(link.get('href'))

print(titles, links)","from bs4 import BeautifulSoup
import requests

url = 'https://www.example.com'
r = requests.get(url)

soup = BeautifulSoup(r.content, 'html.parser')

# Extract titles and links
titles = []
links = []
for link in soup.find_all('a'):
 titles.append(link.get('title'))
 links.append(link.get('href'))

print(titles, links)",correct,Loops
"Generate a shell script that can start a web server. The script should take a single argument, the name of the directory where the web server should be started.",app_dir: path/to/application/dir,"#!/bin/bash

if [ -z ""$1"" ]; then
 echo ""Usage: $0 [dir]""
 exit 1
fi

DIR=""""$1""""

if [ ! -d ""$DIR"" ]; then
 echo ""Error: Directory \""$DIR\"" does not exist""
 exit 1
fi

cd ""$DIR""
python -m SimpleHTTPServer 8080","#!/bin/bash

if [ -z ""$1"" ]; then
 echo ""Usage $0 [dir]""
 exit 1
fi

DIR=""""$1""""

if [ ! -d ""$DIR"" ]; then
 echo ""Error Directory \""$DIR\"" does not exist""
 exit 1
fi

cd ""$DIR""
python -m SimpleHTTPServer 8080",Syntax Error,OOP
Construct a function to compute the area of a triangle in Python,,"def area_of_triangle(base, height):
    """"""Compute the area of a triangle in Python
    
    Parameters
    --------------
    base: float
        The length of the triangle's base
    height: float
        The measure of the triangle's height

    Returns
    --------------
    float
        The area of the triangle
    """"""
    return 0.5 * base * height","def area_of_triangle(base, height):
    """"""Compute the area of a triangle in Python
    
    Parameters
    --------------
    base: float
        The length of the triangle's ba",Incomplete Answer,Recursion
Write a function to calculate the nth pell number.,,"def get_pell(n): 
	if (n <= 2): 
		return n 
	a = 1
	b = 2
	for i in range(3, n+1): 
		c = 2 * b + a 
		a = b 
		b = c 
	return b ","def get_pell(n) 
	if (n <= 2) 
		return n 
	a = 1
	b = 2
	for i in range(3, n+1) 
		c = 2 * b + a 
		a = b 
		b = c 
	return b ",Syntax Error,String Manipulation
Create a command-line interface with Python that gets a user's name and prints out a welcome message.,,"import sys

# Get user's name
name = input('What is your name? ')

# Print out a welcome message
print('Welcome', name, 'to the CLI')","import sys

# Get user's name
name = input('What is your name? ')

# Print out a welcome message
print('Welcome', name, 'to the CLI')",correct,Loops
Create a Python script that outputs a random integer between 1 and 10.,,"import random

random_int = random.randint(1, 10)
print(random_int)","import random

random_int = rando",Incomplete Answer,String Manipulation
Create a python code to extract the first name from a given full name.,full_name = 'John Smith',"def extractFirstName(full_name):
    first_name = full_name.split()[0]
    return first_name

# Input
full_name = 'John Smith'

# Output
result = extractFirstName(full_name)
print(result)","def extractFirstName(full_name):
    first_name = full_name.split()[0]
    return first_name
",Incomplete Answer,File I/O
"Create a class that inherits from the Python list object, and adds a new method called ""reverse_list"".",,"class ReverseList(list):
    def reverse_list(self):
    	return self[::-1]","class ReverseList(list):
    def reve",Incomplete Answer,String Manipulation
Suggest a Python program to create a list filled with random numbers,"Length = 10
Lower bound = 0
Upper bound = 1000","import random

def create_random_number_list(length, lower_bound, upper_bound):
    output_list = []
    for i in range(length):
        output_list.append(random.randint(lower_bound, upper_bound))
    return output_list

length = 10
lower_bound = 0
upper_bound = 1000

result = create_random_number_list(length, lower_bound, upper_bound)
print(result)","import random

def create_random_number_list(length, lower_bound, upper_bound):
    output_list = []
    for i in range(length):
        output_list.append(random.randint(lower",Incomplete Answer,String Manipulation
Generate a function in Python that takes an array of numbers and returns an array of the squares of the numbers.,"[1,2,3]","""""""
A function to return the squares of an array in Python 
""""""

def square_array(input_array): 
  squared_array = []
  for i in input_array: 
    squared_array.append(i*i)
  return squared_array","""""""
A function to return the squares of an array in Python 
""""""

def square_array(input_array): 
  squared_array = []
  for i in input_array: 
    squared_array.append(i*i)
  return squared_array",correct,String Manipulation
Change the following Python code to work with python 3 and print output “My name is Mary”.,print 'My name is Mary',print('My name is Mary'),print('My na,Incomplete Answer,Loops
Generate Python code to print the first ‘n’ elements of the Fibonacci series.,7,"def print_fibonacci_series(n):
    a, b = 0, 1
    for i in range(n):
        print(a)
        a, b = b, a + b

print_fibonacci_series(7)","def print_fibonacci_series(n):
    a, b = 0, 1
    for i in range(n):
        print(name, a)
        a, b = b, a + b

print_fibonacci_series(7)",Syntax Error,OOP
Create a class in Python to store customer information.,,"class Customer:
    def __init__(self, name, email, phone):
        self.name = name
        self.email = email
        self.phone = phone","class Customer:
    def __init__(self, name, email, phone):
        s",Incomplete Answer,Loops
Define a Python function to calculate the factorial of an integer number.,,"def factorial(n):
    if n == 0:
        return 1
    else: 
        return n * factorial(n-1)","def factorial(n):
    if n == 0:
        return 1
    else: 
        return n * factorial(n-1)",correct,OOP
Write a function to perform chunking of tuples each of size n.,,"def chunk_tuples(test_tup, N):
  res = [test_tup[i : i + N] for i in range(0, len(test_tup), N)]
  return (res) ","def chunk_tuples(test_tup, N):
  res = [test_tup[i : i + N] for i in range(0, len(test_tup), N)]
  return (res) ",Syntax Error,OOP
Edit a Python program to output the maximum value,"def find_max(lst):
    max = lst[0]
    for i in lst:
        if i > max:
            max = i","def find_max(lst):
    max = lst[0]
    for i in lst:
        if i > max:
            max = i
    return max","def find_max(lst):
    max = lst[0]
    for i in lst:
        if i > max:
            max = i
    return max",correct,Loops
Build a program in Python to find the factorial of a given number using recursion.,,"def factorial(n): 
    if n == 0: 
        return 1
    else: 
        return n * factorial(n-1) 
  
# Driver Code 
num = 5
print(factorial(num))","def factorial(n): 
    if n == 0: 
        return 1
    else: 
        return n * factorial(n-1) 
  
# Driver Code 
num = 5
print(name, factorial(num))",Syntax Error,Loops
Edit the following Python Program to count the occurrences of a specific number.,"arr = [1, 2, 2, 3, 4]
num = 2

count = 0

for i in arr:","arr = [1, 2, 2, 3, 4]
num = 2

count = 0

for i in arr:
    if i == num:
        count += 1

print(count) #outputs 2","arr = [1, 2, 2, 3, 4]
num = 2

count = 0

for i in arr:
    if i == num:
        count += 1

print(count) #outputs 2",correct,String Manipulation
Generate a Python script to print the Fibonacci sequence.,,"def Fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Driver Program 
print(Fibonacci(9))","def Fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
",Incomplete Answer,Loops
Design a function in Python that reverses a string.,"string = ""Hello World""","def reverse_string(str): 
    return str[::-1]  
  
reverse = reverse_string(string) 
print(""The reversed string is : "",reverse)","def reverse_string(str): 
    return str[::-1]  
  
reverse = re",Incomplete Answer,Recursion
Write a function to get the frequency of the elements in a list.,,"import collections
def freq_count(list1):
  freq_count= collections.Counter(list1)
  return freq_count","import collections
def freq_count(list1):
  freq_c",Incomplete Answer,File I/O
Create a Python object-oriented program to model a 2D coordinate system.,,"class CoordinateSystem:
  
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    def magnitude(self):
        # Returns the magnitude of the coordinate 
        return (self.x**2 + self.y**2)**(1/2)
    
    def add(self, other):
        # Returns the added coordinates
        x = self.x + other.x
        y = self.y + other.y
        return CoordinateSystem(x, y)","class CoordinateSystem:
  
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    def magnitude(self):
        # Returns the magnitude of the coordinate 
        return (self.x**2 + self.y**2)**(1/2)
    
    def add(self, other):
        # Returns the added coordinates
        x = self.x + other.x
        y = self.y + other.y
        return CoordinateSystem(x, y)",correct,Loops
Generate a Python program that calculates standard deviation of a set of numbers.,"[20, 25, 30, 35, 40]","def std_dev(data_set):
    mean = sum(data_set) / len(data_set)
    total_sum = 0
    for i in data_set:
        total_sum += (i - mean) ** 2
    variance = total_sum / len(data_set)
    std_dev = variance ** (1/2)
    return std_dev

data_set = [20, 25, 30, 35, 40]
print(""Standard Deviation: "" + str(std_dev(data_set)))","def std_dev(data_set):
    mean = sum(data_set) / len(data_set)
    total_sum = 0
    for i in data_set:
        total_sum += (i - mean) ** 2
    variance = tot",Incomplete Answer,OOP
Generate a function in Python that prints an argument specified by the user.,,"def print_user_value(x):
    print(x)","def print_user_value(x):
    print(name, x)",Syntax Error,OOP
"Create a Python program which creates two thread, each printing the numbers 1 to 10 with a delay of 1 second.",,"import threading 
import time 
  
def printNumbers(): 
    for x in range(1, 11): 
        print(x) 
        time.sleep(1) 
  
t1 = threading.Thread(target=printNumbers) 
t2 = threading.Thread(target=printNumbers) 
  
t1.start() 
t2.start() 
  
t1.join() 
t2.join()","import threading 
import time 
  
def printNumbers(): 
    for x in range(1, 11): 
        print(name, x) 
        time.sleep(1) 
  
t1 = threading.Thread(target=printNumbers) 
t2 = threading.Thread(target=printNumbers) 
  
t1.start() 
t2.start() 
  
t1.join() 
t2.join()",Syntax Error,OOP
"Write a function to extract specified number of elements from a given list, which follow each other continuously.",,"from itertools import groupby 
def extract_elements(numbers, n):
    result = [i for i, j in groupby(numbers) if len(list(j)) == n] 
    return result","from itertools import groupby 
def extract_elements(numbers, n):
    result = [i for i, j in groupby(numbers) if len(list(j)) == n] 
    return result",correct,File I/O
Create a Python program to implement the triangle numbers.,n = 5,"def triangle_numbers(n):
    res = 0
    for i in range(n):
        res += i+1
    return res

result = triangle_numbers(n)
print(result) # output: 15","def triangle_numbers(n:
    res = 0
    for i in range(n:
        res += i+1
    return res

result = triangle_numbers(n
print(result # output: 15",Syntax Error,String Manipulation
How can a user enter 5 numbers in Python and save them in a list?,,"# create an empty list
my_nums = []

# loop to enter and append numbers to the list
for i in range(5):
    num = int(input(f'Enter number {i+1}: '))
    my_nums.append(num)

# printing the list
print(my_nums)","# create an empty list
my_nums = []

# loop to enter and append numbers to the list
for i in range(5)
    num = int(input(f'Enter number {i+1} '))
    my_nums.append(num)

# printing the list
print(my_nums)",Syntax Error,File I/O
Write a Python program to generate a SQL query for selecting rows that contain a given value in a given column.,"Column name: age
Value: 25",SELECT * FROM table_name WHERE age=25;,SELECT * FROM table_name WHERE age=25;,Syntax Error,Recursion
Construct a program to create a class in Python which will store the user data.,,"class User:
    def __init__(self, name, age, email):
        self.name = name
        self.age = age
        self.email = email

    def display(self):
        print(f""""""
            Name: {self.name}
            Age: {self.age}
            Email: {self.email}
            """""")","class User:
    def __init__(self, name, age, email):
        self.name = name
        self.age = age
        self.email = email

    def display(self):
        pritn(f""""""
            Name: {self.name}
            Age: {self.age}
            Email: {self.email}
            """""")",Syntax Error,Recursion
"Given a list of numbers, write a Python program to find the frequency of each number in the list.","my_list = [1, 2, 3, 4, 1, 2, 3]","from collections import Counter

def find_frequency(list): 
    return Counter(list) 

my_list = [1, 2, 3, 4, 1, 2, 3]
freq = find_frequency(my_list)
print(freq)","from collections import Counter

def find_frequency(list): 
    return Counter(l",Incomplete Answer,String Manipulation
Create a Python script to reverse a string using recursion.,,"def reverse_string(s): 
  if len(s) == 0: 
    return s 
  else: 
    return reverse_string(s[1:]) + s[0] 

# Test
string = ""test string""
print(reverse_string(string)) # Output: ""gnirts tset""","def reverse_string(s): 
  if len(s) == 0: 
    return s 
  else: 
    return reverse_string(s[1:]) + s[0] 

# Test
string = ""test string""
print(name, reverse_string(string)) # Output: ""gnirts tset""",Syntax Error,Recursion
Create a program in Python to generate a random integer between 1 and 10.,,"import random

def random_int():
    return random.randint(1, 10)","import random

def random_int():
    return random.randint(1, 10)",Syntax Error,File I/O
Generate a Python function to multiply two given positive integers without using the * operator.,,"def multiply(x, y):
    # Base case
    if y == 0:
        return 0
 
    # Recursive case
    else:
        return (x + multiply(x, y-1))","def multiply(x, y):
    # Base case
    if y == 0:
        return 0
 
    # Recursive case
    else:
        return (x + multiply(x, y-1))",correct,OOP
Write a python function to find nth number in a sequence which is not a multiple of a given number.,,"def count_no (A,N,L,R): 
    count = 0
    for i in range (L,R + 1): 
        if (i % A != 0): 
            count += 1
        if (count == N): 
            break
    return (i) ","def count_no (A,N,L,R): 
    count = 0
    for i in range (L,R + 1): 
        if (i % A !",Incomplete Answer,Loops
Propose a solution to fetch an online catalog of products and display them in a tabular format using Python.,Catalog consisting of 1000 products,"import requests
import pandas as pd

# Set the request URL
url = ""http://example.com/products""

# Send the request and retrieve the data
data = requests.get(url).json()

# Convert the data into a pandas DataFrame
df = pd.DataFrame(data)

# Print the resulting table
print(df)","import requests
import pandas as pd

# Set the request URL
url = ""http://example.com/products""

# Send the request and retrieve the data
data = requests.get(url).json()

# Convert the data into a pandas DataFrame
df = pd.DataFrame(data)

# Print the resulting table
print(df)",correct,OOP
Write a code in Python to find the area of a circle using its radius.,,"import math

def circle_area(radius):
  """"""
  Returns the area of a circle based on its radius
  """"""
  return math.pi * (radius**2)

if __name__ == '__main__':
    print(circle_area(4))","import math

def circle_area(radius):
  """"""
  Returns the area of a circle based on its radius
  """"""
  return math.pi * (radius**2)

if __name__ == '__main__':
    print(name, circle_area(4))",Syntax Error,Recursion
Write a Python program that calculates the nth Fibonacci number where n is a positive integer given by the user.,8,"# Fibonacci Sequence

def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 

    elif n==1: 
        return 0
    
    elif n==2: 
        return 1 
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

n = int(input(""Enter the value of n: ""))
print(Fibonacci(n))","# Fibonacci Sequence

def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 

    elif n==1: 
        return 0
    
    elif n==",Incomplete Answer,Loops
Generate a Python program that takes a numerical list and finds the index of the largest value.,"[3, 5, 9, 10]","# list of numbers 
list = [3, 5, 9, 10] 

# maximum number 
MaxNum = max(list) 

# index of the maximum number 
index = list.index(MaxNum) 

print(""Maximum number is:"", MaxNum) 
print(""Index of maximum number is:"", index)","# list of numbers 
list = [3, 5, 9, 10] 

# maximum number 
MaxNum = max(list) 

# index of the maximum number",Incomplete Answer,Loops
Make a code in Python to find the mode of the given set of values.,"1, 2, 3, 2, 4, 2","def find_mode(list):
  max_count = 0
  mode = list[0]
  count = {}
  for item in list:
    if (item in count):
      count[item] += 1
    else:
      count[item] = 1
    if (count[item] > max_count):
      max_count = count[item]
      mode = item
  return mode","def find_mode(list):
  max_count = 0
  mode = list[0]
  count = {}
  for item in list:
    if (item in count):
      count[item] += 1
    else:
      count[item] = 1
    if (count[item] > max_count):
      max_count = count[item]
      mode = item
  return mode",Syntax Error,Loops
Create a Python function that takes in a list and prints a dictionary with the elements and the product of each element.,"list = [7, 8, 5]","def product_of_list(list):
    output = {}
    for element in list:
        output[element] = element * element
    return output

print(product_of_list([7, 8, 5]))","def product_of_list(list):
    output = {}
    for element in list:
        output",Incomplete Answer,Loops
Write a function to find the ration of negative numbers in an array of integers.,,"from array import array
def negative_count(nums):
    n = len(nums)
    n1 = 0
    for x in nums:
        if x < 0:
            n1 += 1
        else:
          None
    return round(n1/n,2)","from array import array
def negative_count(nums):
n = len(nums)
n1 = 0
for x in nums:
    if x < 0:
        n1 += 1
    else:
      None
return round(n1/n,2)",Syntax Error,Recursion
Write a function to find the longest common subsequence for the given two sequences.,,"def longest_common_subsequence(X, Y, m, n): 
    if m == 0 or n == 0: 
       return 0 
    elif X[m-1] == Y[n-1]: 
       return 1 + longest_common_subsequence(X, Y, m-1, n-1) 
    else: 
       return max(longest_common_subsequence(X, Y, m, n-1), longest_common_subsequence(X, Y, m-1, n))","def longest_common_subsequence(X, Y, m, n): 
    if m == 0 or n == 0: 
       return 0 
    elif X[m-1] == Y[n-1]: 
       return 1 + longest_common_subsequence(X, Y, m-1, n-1) 
    else: 
       return max(longest_common_subsequence(X, Y, m, n-1), longest_common_subsequence(X, Y, m-1, n))",correct,String Manipulation
"Create three classes 'ClassA', 'Cars', and 'Sports' in Python and define a method 'print_info' in each class.",,"class ClassA:
    def print_info(self):
        print(""This class is ClassA"")
        
class Cars:
    def print_info(self):
        print(""This class is for Cars"")
        
class Sports:
    def print_info(self):
        print(""This class is for Sports"")","class ClassA:
    def print_info(self):
        print(""This class is ClassA"")
        
class Cars:
    def print_info(self):
        print(""This class is for Cars"")
        
class Sports:
    def print_info(self):
        print(""This class is for Sports"")",correct,Recursion
Optimize a Python program to reverse a string with a lower time complexity.,"string = ""Hello World!""","def reverse_string(string): 
    return string[::-1] 
    
# Time Complexity: O(n)
# Space Complexity: O(1)","def reverse_string(string): 
    return string[::-1] 
    
# Time Complexity: O(n)
# Space Complexity: O(1)",Syntax Error,File I/O
Generate a Python program that searches for a given key in a dictionary.,key: 'name',"my_dict = {
 'name': 'John',
 'age': 26,
 'salary': 5000
}

find_key = 'name'

if find_key in my_dict:
 print(my_dict[find_key])","my_dict = {
 'name': 'John',
 'age': 26,
 'salary': 5000
}

find_key = 'name'

if find_key in my_dict:
 print(my_dict[find_key]",Syntax Error,Recursion
Create a Python program to delete all characters at odd index in a given string.,"Hello, World!","def deleteAtOddIndex(s):
    output = """"
    for i in range(len(s)):
        # delete the character at an odd index
        if i % 2 != 0:
            pass
        else:
            output += s[i]
    return output","def deleteAtOddIndex(s)
    output = """"
    for i in range(len(s))
        # delete the character at an odd index
        if i % 2 != 0
            pass
        else
            output += s[i]
    return output",Syntax Error,Loops
Compile a function to calculate the difference of two date objects in Python.,,"import datetime

def date_diff(date1, date2):
    """"""Returns the difference between two date objects in days""""""
    diff_date = date2 - date1
    return diff_date.days","import datetime

def date_diff(date1, date2):
    """"""Returns the difference between two date objects in days""""""
    diff_date = date2 - date1
    return diff_date.days",correct,Recursion
Create a class in Python which calculates simple interest.,,"class SimpleInterest:
 def __init__(self, principal, rate, time):
  self.principal = principal
  self.rate = rate
  self.time = time

 def calculate(self):
  return self.principal * (1 + self.rate * self.time)

si = SimpleInterest(20000, 0.10, 2)
print('Simple Interest =', si.calculate())","class SimpleInterest:
 def __init__(self, principal, rate, time):
  self.principal = principal
  self.rate = rate
  self.time = time

 def calculate(self):
  return self.principal * (1 + self.rate * self.time)

si = SimpleInterest(20000, 0.10, 2)
print('Simple Interest =', si.calculate())",correct,File I/O
Write a Python program to implement K-means clustering algorithm.,,"from sklearn.cluster import KMeans

# create KMeans object
kmeans = KMeans(n_clusters=3)

# fit the data
kmeans.fit(data)

# predict the clusters
predicted_clusters = kmeans.predict(data)","from sklearn.cluster import KMeans

# create KMeans object
kmeans = KMeans(n_clusters=3)

# fit the data
kmeans.fit(data)

# predict the clusters
predicted_clusters = kmeans.predict(data)",correct,String Manipulation
"Create a function in Python that takes a name and age and prints a greeting like ""Hi, my name is <name> and I'm <age> years old.""","""John"", 28","def greeting(name, age):
    print(""Hi, my name is "", name, ""and I'm"", age, ""years old."")

greeting(""John"", 28)","def greeting(name, age):
    pritn(""Hi, my name is "", name, ""and I'm"", age, ""years old."")

greeting(""John"", 28)",Syntax Error,Loops
Write a code to display prime numbers between two given numbers using python.,"start = 1
end = 10","def displayPrime(start, end): 
    for i in range(start, end + 1): 
        if isPrime(i): 
            print(i)
          
def isPrime(n): 
    if n <= 1: 
        return False
    for i in range(2, n): 
        if n % i == 0: 
            return False  
    return True
    
if __name__ == '__main__': 
    start = 1
    end = 10
    displayPrime(start, end) # 2, 3, 5, 7","def displayPrime(start, end): 
    for i in range(start, end + 1): 
        if isPrime(i): 
            print(i)
          
def isPrime(n): 
    if n <= 1: 
        return False
    for i in range(2, n): 
        if n % i == 0: 
            return False  
    return True
    
if __name__ == '__main__': 
    start = 1
    end = 10
    displayPrime(start, end) # 2, 3, 5, 7",correct,OOP
Generate a Python program to filter a list of strings to only return words that have 7 or more characters.,"words = ['Apple', 'Banana', 'Cabbage', 'Cucumber']","words = ['Apple', 'Banana', 'Cabbage', 'Cucumber']

def filter_list(words):
  filtered_list = []

  for word in words:
    if len(word) >= 7:
      filtered_list.append(word)

  return filtered_list","words = ['Apple', 'Banana', 'Cabbage', 'Cucumber']

def filter_list(words):
  filtered_list = []

  for word in words:
    if len(word) >= 7:
      filtered_list.append(word)

  return filtered_list",correct,File I/O
Generate a Python program to find the number of words with distinct letters in a given string,string = 'hello world',"def count_distinct_letters(string):
   distinct_letters = set()
   for word in string.split(' '):
        distinct_letters.update(set(word))
   return len(distinct_letters)

# example
string = 'hello world'
print(count_distinct_letters(string)) # 6","def count_distinct_letters(string):
   distinct_letters = set()
   for word in string.split(' '):
        distinct_letters.u",Incomplete Answer,OOP
Create a Python program to reverse a given stack without recursion.,"stack = [1, 2, 3]","def reverse_stack(stack):
    rev_stack = []

    while(stack):
        rev_stack.append(stack.pop())

    return rev_stack

# Usage
stack = [1, 2, 3]
print(reverse_stack(stack)) # => [3, 2, 1]","def reverse_stack(stack):
    rev_stack = []

    while(stack):
        rev_stack.append(stack.pop())

    return rev_stack

# Usage
stack = [1, 2, 3]
pritn(reverse_stack(stack)) # => [3, 2, 1]",Syntax Error,OOP
Design a Python program to convert all the characters of a string to upper case.,This is a sample sentence.,"def to_upper(s):
    return s.upper()

result = to_upper(""This is a sample sentence."")
print(result)","def to_upper(s):
return s.upper()

result = to_upper(""This is a sample sentence."")
print(result)",Syntax Error,String Manipulation
Create a Python class that will store a list of integers and calculate the sum of all the elements in the list.,"[2, 3, 5, 7]","class CalcListSum:
  def __init__(self, numbers):
    self.numbers = numbers

  def get_sum(self):
    sum = 0
    for num in self.numbers:
      sum += num
    return sum 

nums = [2, 3, 5, 7]
calc_sum = CalcListSum(nums)
sum_of_nums = calc_sum.get_sum()
print(sum_of_nums)","class CalcListSum
  def __init__(self, numbers)
    self.numbers = numbers

  def get_sum(self)
    sum = 0
    for num in self.numbers
      sum += num
    return sum 

nums = [2, 3, 5, 7]
calc_sum = CalcListSum(nums)
sum_of_nums = calc_sum.get_sum()
print(sum_of_nums)",Syntax Error,File I/O
Write a Python program to extract the email address from a given string.,,"import re

def extract_email(string):
    emails = re.findall(r""[\w\.-]+@[\w\.-]+"", string)
    return emails

string = ""My email is abc@gmail.com""
extract_email(string)  # ['abc@gmail.com']","import re

def extract_email(string):
    emails = re.findall(r""[\w\.-]+@[\w\.-]+"", string)
    return emails

string = ""My email is abc@gmail.com""
extract_email(string)  # ['abc@gmail.com']",Syntax Error,OOP
Write a function to find number of odd elements in the given list using lambda function.,,"def count_odd(array_nums):
   count_odd = len(list(filter(lambda x: (x%2 != 0) , array_nums)))
   return count_odd","def count_odd(array_nums):
   count_odd = len(list(filter",Incomplete Answer,Loops
Generate a python script that plans a route from point A to point B.,"Point A = (1.2, -2.6)
Point B = (7.9, 5.3)","# import modules
import math

# function to calculate the distance
def route_distance(A, B):
    dX = B[0] - A[0]
    dY = B[1] - A[1]
    return math.sqrt(dX * dX + dY * dY)

# Driver code 
A = (1.2, -2.6) 
B = (7.9, 5.3)

dist = route_distance(A, B)

print(""Distance from A to B is:"", dist)","# import modules
import math

# function to calculate the distance
def route_distance(A, B):
    dX = B[0] - A[0]
    dY = B[1] - A[1]
    return ",Incomplete Answer,File I/O
Create an algorithm in Python toimplement quick sort.,"[8, 2, 6, 4, 5, 1]","def quick_sort(arr):
    if len(arr) < 2:
        return arr
    else:
        pivot = arr[0]
        less_than_pivot = [i for i in arr[1:] if i <= pivot]
        greater_than_pivot = [i for i in arr[1:] if i > pivot]
 
        return quick_sort(less_than_pivot) + [pivot] + quick_sort(greater_than_pivot)","def quick_sort(arr:
    if len(arr < 2:
        return arr
    else:
        pivot = arr[0]
        less_than_pivot = [i for i in arr[1:] if i <= pivot]
        greater_than_pivot = [i for i in arr[1:] if i > pivot]
 
        return quick_sort(less_than_pivot + [pivot] + quick_sort(greater_than_pivot",Syntax Error,File I/O
Write a Python program to determine the maximum value in a dictionary.,"{
  ""Potato"": 1,
  ""Onion"": 3,
  ""Carrot"": 2
}","def get_max_value(dictionary):
    max_value = 0
    for k, v in dictionary.items():
        if v > max_value:
            max_value = v
    return max_value

print(get_max_value({
  ""Potato"": 1,
  ""Onion"": 3,
  ""Carrot"": 2
})) 
#prints 3","def get_max_value(dictionary):
    max_value = 0
    for k, v in dictionary.items():
        if v > max_value:
        ",Incomplete Answer,File I/O
Create a Python program to print all numbers which are divisible by 5 and 6 between 300 to 500.,,"for i in range(300, 501):
    if i % 5 == 0 and i % 6 == 0:
        print(i)","for i in range(300, 501):
    if i % 5 == 0 and i % 6 == 0:
        print(name, i)",Syntax Error,Loops
Create a Python program that converts a given Fahrenheit temperature into Celsius.,98.6,"def fahrenheit_to_celsius(f):
    celsius = (f - 32.0) * (5.0/9.0)
    return celsius

fahrenheit = 98.6
celsius = fahrenheit_to_celsius(fahrenheit)
print(""The temperature in celsius is: "", celsius)","def fahrenheit_to_celsius(f):
celsius = (f - 32.0) * (5.0/9.0)
return celsius

fahrenheit = 98.6
celsius = fahrenheit_to_celsius(fahrenheit)
print(""The temperature in celsius is: "", celsius)",Syntax Error,Recursion
Create a socket client in Python that can connect to a local web server.,,"import socket

# Create a socket object
s = socket.socket()

# Connect to local host
host = '127.0.0.1'
port = 8888
s.connect((host, port))

# Receive data from server
data = s.recv(1024)
print(data)

# Close the socket connection
s.close()","import socket

# Create a socket object
s = socket.socket()

# Connect to local host
host = '127.0.0.1'
port = 8888
s.connect((host, port))

# Receive data from server
data = s.recv(1024)
print(data)

# Close the socket connection
s.close()",correct,Recursion
Write a Python function that takes in a set of numbers and returns their median,,"def median(nums):
    nums.sort()
    length = len(nums)
    is_even = length % 2 == 0
    if is_even:
        mid = length // 2
        return (nums[mid] + nums[mid-1]) / 2
    else:
        return nums[length//2]","def median(nums):
    nums.sort()
    length = len(nums)
    is_even = length % 2 == 0
    if is_even:
    ",Incomplete Answer,OOP
Write a function to count bidirectional tuple pairs.,,"def count_bidirectional(test_list):
  res = 0
  for idx in range(0, len(test_list)):
    for iidx in range(idx + 1, len(test_list)):
      if test_list[iidx][0] == test_list[idx][1] and test_list[idx][1] == test_list[iidx][0]:
        res += 1
  return (str(res)) ","def count_bidirectional(test_list):
  res = 0
  for idx in range(0, len(test_list)):
    for iidx in range(idx + 1, len(test_list)):",Incomplete Answer,Recursion
Refactor the following code to be more pythonic,"def print_all(sequences):
    for sequence in sequences:
        print(sequence)","def print_all(sequences):
    [print(sequence) for sequence in sequences]","def print_all(sequences):
    [print",Incomplete Answer,Recursion
Generate a Python program which reads a string as input and removes all vowels present in the string and print out the revised string.,apple,"def removeVowels(string): 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    revised_string = """"
    for letter in string:
        if letter.lower() not in vowels:
            revised_string += letter 
    return revised_string
    
string = ""apple""
reviseString = removeVowels(string)
print(""Revised string ="", reviseString)","def removeVowels(string): 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    revised_string = """"
    for letter in string:
        if letter.lower() not in vowels:
 ",Incomplete Answer,String Manipulation
Create a function in Python for finding the maximum of two numbers.,,"def max_of_two_numbers(x, y):
    if x > y:
        larger_number = x
    else:
        larger_number = y

    return larger_number","def max_of_two_numbers(x, y):
    if x > y:
        larger_number = x
    else:
        larger_number = y

    return larger_number",Syntax Error,String Manipulation
Write a Python class to represent a 2-Dimensional point.,,"class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    def get_point(self):
        return (self.x, self.y)","class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    def get_point(self):
        return (self.x, self.y)",correct,OOP
Create a Python program for visualizing a given dataset using matplotlib.,"x = [1, 2, 3, 4, 5]
y = [1, 4, 9, 16, 25]","import matplotlib.pyplot as plt 

x = [1, 2, 3, 4, 5] 
y = [1, 4, 9, 16, 25] 
  
# plotting the points  
plt.plot(x, y) 

# naming the x axis 
plt.xlabel('x - axis') 
# naming the y axis 
plt.ylabel('y - axis') 
  
# giving a title to my graph 
plt.title('My first graph!') 
  
# function to show the plot 
plt.show()","import matplotlib.pyplot as plt 

x = [1, 2, 3, 4, 5] 
y = [1, 4, 9, 16, 25] 
  
# plotting the points  
plt.plot(x, y) 

# naming the x axis 
plt.xlabel('x -",Incomplete Answer,File I/O
Write a Python program to classify the given input according to different categories.,salary = 30000,"category = ""medium""

def classify(salary):
 if salary <= 10000:
 return ""low""
 elif salary <=30000:
 return ""medium""
 else:
 return ""high""

result = classify(30000)
print(result)","category = ""medium""

def classify(salary):
 if salary <= 10000:
 return ""low""
 elif salar",Incomplete Answer,String Manipulation
Write a code snippet in Python to create a Pandas Dataframe with three columns containing random numbers in the range 1-1000.,,"import pandas as pd
import numpy as np

# Create a Dataframe with 3 Columns and 10 Rows
df = pd.DataFrame(np.random.randint(1,1000,size=(10, 3)),
 columns=['col1', 'col2','col3'])
 
print(df)","import pandas as pd
import numpy as np

# Create a Dataframe with 3 Columns and 10 Rows
df = pd",Incomplete Answer,File I/O
Create a code generator that takes a Python program and reduces its memory footprint by using less memory to store data.,"x = 20
y = 50
z = x + y
print(z)","num1 = 20
num2 = 50
result = num1 + num2
print(result)","num1 = 20
num2 = 50
result ",Incomplete Answer,Recursion
Create a basic Python program to classify a list of positive and negative integer numbers.,"List of numbers: [2, 4, -3, 6, -7, 0]","positive_numbers = []
negative_numbers = []

for num in numbers:
 if num > 0:
  positive_numbers.append(num)
 else:
  negative_numbers.append(num)

print('Positive numbers:', positive_numbers)
print('Negative numbers:', negative_numbers)","positive_numbers = []
negative_numbers = []

for num in numbers:
 if num > 0:
  positive_numbers.append(num
 else:
  negative_numbers.append(num

print('Positive numbers:', positive_numbers
print('Negative numbers:', negative_numbers",Syntax Error,Recursion
Develop a Python script to extract the specific keyword from the given URL.,"URL: https://www.test.com/where-is-the-key
Keyword: key","import re

url = ""https://www.test.com/where-is-the-key""
keyword = ""key""

match = re.search(f'{keyword}', url)
if match:
    print(f'{keyword} found at starting index: {match.start()}')
else:
    print(f'{keyword} not found')","import re

url = ""https://www.test.com/where-is-the-key""
keyword = ""key""

match = re.search(f'{keyword}', url)
i",Incomplete Answer,OOP
"Suggest a completion for the following python code, such that it prints all the elements of a list.",def print_list_elements(lst):,"def print_list_elements(lst):
    for elem in lst:
        print(elem)","def print_list_elements(lst:
    for elem in lst:
        print(elem",Syntax Error,File I/O
Design a python program to return the n-th element of a given list.,"list_input = [1, 3, 5, 7, 9]
n = 3","def get_nth_element(list_input, n):
    return list_input[n]

print(get_nth_element(list_input, n))","def get_nth_element(list_input, n):
    return list_input[n]

print(name, get_nth_element(list_input, n))",Syntax Error,Loops
Creat a Python program to find the sum of the digits of an arbitrary number.,345,"def sum_of_digits(num):
    total = 0
    while num > 0:
        total += num % 10
        num = num // 10
    return total

total = sum_of_digits(345)
print(f'Sum of the digits of the number is {total}')","def sum_of_digits(num):
    total = 0
    while num > 0:
        total += num % 10
        num = num /",Incomplete Answer,Recursion
Create a Python program that can convert temperatures between celsius and fahrenheit.,,"def celsius_to_fahrenheit(temp):
    fahrenheit = temp * 9/5 + 32
    return fahrenheit

def fahrenheit_to_celsius(temp):
    celsius = (temp - 32) * 5/9
    return celsius

print(""Fahrenheit to Celsius:"", fahrenheit_to_celsius(59))
print(""Celsius to Fahrenheit:"", celsius_to_fahrenheit(15))","def celsius_to_fahrenheit(temp):
    fahrenheit = temp * 9/5 + 32
    return fahrenheit

def fahrenheit_to_celsius(temp):
    celsius = (temp - 3",Incomplete Answer,File I/O
Develop a python program that targets a specific element in a dictionary.,"target_key = ""age""
my_dict = {
    ""name"": ""John Smith"",
    ""age"": 27,
    ""location"": ""New York""
    }","target_key = ""age""
my_dict = {
    ""name"": ""John Smith"",
    ""age"": 27,
    ""location"": ""New York""
    }

value = my_dict[target_key]
print(""The value of {} is {}."".format(target_key, value))","target_key = ""age""
my_dict = {
    ""name"": ""John Smith"",
    ""age"": 27,
    ""location"": ""New Yo",Incomplete Answer,OOP
Create a class in Python that has a single method which takes a string as an input and returns the reversed version of the string.,,"class ReverseString:
 def __init__(self, string):
 self.string = string

 def reverse(self):
 return self.string[::-1]

string_object = ReverseString('hello')
reversed_string = string_object.reverse()

print(reversed_string) # olleh","class ReverseString:
 def __init__(self, string):
 self.string = string

 def reverse(self):
 return self.string[::-",Incomplete Answer,OOP
Write a Python script to find the longest word in a given text.,,"def find_longest_word(text):
    words = text.split(' ')
    longest_word = ''
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    return longest_word

longest_word = find_longest_word('The quick brown fox jumps over the lazy dog')
print(longest_word)","def find_longest_word(text):
    words = text.split(' ')
    longest_word = ''
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    return longest_word

longest_word = find_longest_word('The quick brown fox jumps over the lazy dog')
print(name, longest_word)",Syntax Error,File I/O
Can you create a program in Python which reverses a number?,Number = 12345,"# Using Python

def reverseNumber(number):
    reversed = 0
    while(number > 0):
        digit = number%10
        reversed = reversed*10 + digit
        number = number//10
    
    return reversed

number = 12345
reverse = reverseNumber(number)
print(reverse) 
# Output: 54321","# Using Python

def reverseNumber(number):
    reversed = 0
    while(number > 0):
        digit = number%10
        reversed = reversed*10 ",Incomplete Answer,Loops
Create a Python script that takes a text and replaces all occurrences of a given word to its upper-case version.,"Text: ""The quick brown fox jumps over the lazy dog"" and the word to replace: ""quick""","import re
 
text = ""The quick brown fox jumps over the lazy dog""
 
replaced = re.sub(r'quick', ""QUICK"", text) 
 
print(replaced) #prints ""The QUICK brown fox jumps over the lazy dog""","import re
 
text = ""The quick brown fox jumps over the lazy dog""
 
replaced = re.sub(r'quic",Incomplete Answer,Recursion
Optimize the given Python code to improve the runtime.,"def sum_list(nums):
 sum_total = 0
 for n in nums:
  sum_total += n 
 return sum_total

nums = [1, 2, 3, 4, 5]","def sum_list(nums):
 return sum(nums)

nums = [1, 2, 3, 4, 5]","def sum_list(nums):
 return sum(nums)

nums = [1, 2, 3, 4, 5]",correct,OOP
Generate a program in Python that implements the bubble sort algorithm to sort an unsorted array of integers.,"[5,3,2,4]","def bubble_sort(nums):
 for i in range(len(nums)-1):
 for j in range(i+1, len(nums)):
 if nums[i] > nums[j]:
 nums[i], nums[j] = nums[j], nums[i]

nums = [5,3,2,4]
bubble_sort(nums)
print(nums)

# Output
[2,3,4,5]","def bubble_sort(nums):
 for i in range(len(nums)-1):
 for j in range(i+1, len(nums)):
 if nums[i] > nums[j]:
 nums[i], nums[j] = nums[j], nums[i]

nums = [5,3,2,4]
bubble_sort(nums)
print(nums)

# Output
[2,3,4,5]",correct,File I/O
Develop a Python program to fetch the website users of an online store.,Website URL: www.example.com,"import requests

url = 'https://www.example.com/users'
response = requests.get(url)
data = response.json()

for user in data:
    print(user['name'])","import requests

url = 'https://www.example.com/users'
response = requests",Incomplete Answer,String Manipulation
Automatically refactor a subsection of Python code that uses two for-loops.,"for x in range(3):
    for y in range(4):
        print(x, '-', y)","for x, y in itertools.product(range(3), range(4)):
    print(x, ""-"", y)","for x, y in itertools.product(range(3), range(4)):
    print(x, ""-"", y)",correct,Loops
Write a python function to check whether a string has atleast one letter and one number.,,"def check_String(str): 
    flag_l = False
    flag_n = False
    for i in str: 
        if i.isalpha(): 
            flag_l = True  
        if i.isdigit(): 
            flag_n = True
    return flag_l and flag_n ","def check_String(str): 
    flag_l = False
    flag_n = False
    for i in str: 
        if i.isalpha(): 
            flag_l = True  
        if i.isdigit(): 
            flag_n = True
    return flag_l and flag_n ",correct,String Manipulation
Suggest a way to display a calendar for the current month in python.,,"import calendar

date = calendar.month( 2020, 8 )
print(date)","import calendar

date = calendar.month( 2020, 8 )
print(date)",correct,OOP
Write a python function to count equal element pairs from the given array.,,"def count_Pairs(arr,n): 
    cnt = 0; 
    for i in range(n): 
        for j in range(i + 1,n): 
            if (arr[i] == arr[j]): 
                cnt += 1; 
    return cnt; ","def count_Pairs(arr,n): 
    cnt = 0; 
    for i in range(n): 
        for j in range(i + 1,n): 
            if (arr[i] == arr[j]): 
                cnt += 1; 
    return cnt; ",Syntax Error,Recursion
"Given a list of strings, write a Python function to remove all the whitespaces from each string.","['Hello  World  ', 'Hi  there', 'Good  Morning']","def remove_whitespace(word_list):
    return [word.strip() for word in word_list]

stripped_list = remove_whitespace(['Hello  World  ', 'Hi  there', 'Good  Morning'])
print(stripped_list)","def remove_whitespace(word_list)
    return [word.strip() for word in word_list]

stripped_list = remove_whitespace(['Hello  World  ', 'Hi  there', 'Good  Morning'])
print(stripped_list)",Syntax Error,String Manipulation
Write a python program to generate a dictionary object from a list containing key-value tuples.,"my_list = [('key1', 'value1'), ('key2', 'value2')]",my_dict = dict(my_list),my_dict = d,Incomplete Answer,Recursion
Create a python program that takes a sentence and returns a list of words in alphabetical order.,Sentence:  The quick brown fox jumped over the lazy dog.,"sentence = ""The quick brown fox jumped over the lazy dog.""

# Split sentence into words
words = sentence.split()

# Sort list of words alphabetically
words.sort()

# Print sorted list of words
print(words)

# Output: ['brown', 'dog.', 'fox', 'The', 'jumped', 'lazy', 'over', 'quick', 'the']","sentence = ""The quick brown fox jumped over the lazy dog.""

# Split sentence into words
words = sentence.split()

# Sort list of words alphabetic",Incomplete Answer,File I/O
Rewrite a given Python program to be more efficient.,"my_list = [1,2,3,4,5,6]
count = 0

for number in my_list:
    count += number

print(count)","my_list = [1,2,3,4,5,6]

# Use the sum() function to get the sum of a given list
count = sum(my_list)

print(count)","my_list = [1,2,3,4,5,6]

# Use the sum() function to get the sum of a given list
count = sum(my_list)

print(name, count)",Syntax Error,Loops
Program a function in Python that will recognize if a given number is even.,,"def is_even(num):
    if num % 2 == 0:
        return True
    else:
        return False","def is_even(num):
    if num % 2 == 0:
        return True
    else:
        return False",Syntax Error,String Manipulation
Generate a valid Python program that finds all the prime numbers in a given range,"2, 20","def find_primes(start, end):
    result = []
    for number in range(start, end + 1):
       if number > 1:
           for i in range(2, number):
               if (number % i) == 0:
                   break
           else:
               result.append(number)
    return result

result = find_primes(2, 20)
print(result)","def find_primes(start, end):
    result = []
    for number in range(start, end + 1):
       if number > 1:
           for i in range(2, number):
               ",Incomplete Answer,OOP
Write a Python program to sort a dictionary based on its values.,"Dictionary: {'Apple':1, 'Strawberry':4, 'Banana':3, 'Grapes':2}","my_dict = {'Apple':1, 'Strawberry':4, 'Banana':3, 'Grapes':2}

sorted_dict = {k: v for k, v in sorted(my_dict.items(), key=lambda item: item[1])}

print(sorted_dict)

# Output: {'Apple': 1, 'Grapes': 2, 'Banana': 3, 'Strawberry': 4}","my_dict = {'Apple':1, 'Strawberry':4, 'Banana':3, 'Grapes':2}

sorted_dict = {k: v for k, v in sorted(my_dict.items(), key=lambda item: item[1])}

pritn(sorted_dict)

# Output: {'Apple': 1, 'Grapes': 2, 'Banana': 3, 'Strawberry': 4}",Syntax Error,Loops
Write a function to check whether the given month number contains 28 days or not.,,"def check_monthnum_number(monthnum1):
  if monthnum1 == 2:
    return True
  else:
    return False","def check_monthnum_number(monthnum1):
  if monthnum1 == 2:
    return True
  else:
    return False",correct,Loops
Design an algorithm in Python that accepts a list of integers as an input and returns true if the list contains duplicates.,"arr = [1, 4, 9, 6, 2, 5, 9, 7]","def is_duplicate(arr):
    return len(arr) != len(set(arr))

is_duplicate(arr) # returns True","def is_duplicate(arr):
    return len(arr) != len(set(arr))

is_duplicate(arr) # returns True",correct,OOP
Write a Python Function to check if a given string contains all the letters of the alphabet,,"def check_alphabet(string):
    alphabet = ""abcdefghijklmnopqrstuvwxyz"" 
    if set(string.lower()) >= set(alphabet): 
        return True 
    else: 
        return False","def check_alphabet(string):
    alphabet = ""abcdefghijklmnopqrstuvwxyz"" 
    if set(string.lower()) >= set(alphabet): 
        return True 
    else: 
        return False",Syntax Error,Recursion
"Using Python, create a function that calculates the factorial of any given number.",,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)","def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)",correct,Loops
Design a function in Python to calculate the average of given numbers.,,"def calculate_average(numbers):
    total = 0
    for number in numbers:
        total = total + number
    return total / len(numbers)","def calculate_average(numbers):
total = 0
for number in numbers:
    total = total + number
return total / len(numbers)",Syntax Error,OOP
Build an algorithm in Python to identify if a given number is a perfect square.,25,"import math

def is_perfect_square(num):
    sqrt = int(math.sqrt(num))
    return sqrt * sqrt == num

result = is_perfect_square(25)
print(result)","import math

def is_perfect_square(num):
    sqrt = int(math.sqrt(num))
 ",Incomplete Answer,Recursion
Design an object-oriented Python class to represent a vehicle.,,"class Vehicle:
    def __init__(self, make, model, year):
        self.make = make
        self.model = model
        self.year = year
    
    def getMake(self):
        return self.make
    
    def getModel(self):
        return self.model
    
    def getYear(self):
        return self.year","class Vehicle:
    def __init__(self, make, model, year):
        self.make = make
        self.model = model
        self.year = year
    
    def getMake(self):
        return self.make
    
    def getModel(self):
        return self.model
    
    def getYear(self):
        return self.year",correct,File I/O
"Generate a Python function that, given two strings, will return the number of matches between the strings.",,"def string_matches(string1, string2): 
    matches = 0
    for i in range(len(string1)): 
        if string1[i] == string2[i]: 
            matches += 1
    return matches","def string_matches(string1, string2): 
    matches = 0
    for i in range(len(string1)): 
        if string1[i] == string2[i]: 
            matches += 1
    return matches",correct,Recursion
Generate a Python program to create a dictionary from two given lists.,"list1 = [""apple"", ""banana"", ""orange""]
list2 = [""fruit"", ""fruit"", ""fruit""]","list1 = [""apple"", ""banana"", ""orange""]
list2 = [""fruit"", ""fruit"", ""fruit""] 

dictionary = dict(zip(list1, list2))

print(dictionary)","list1 = [""apple"", ""banana"", ""orange""]
list2 = [""fruit"", ""fruit"", ",Incomplete Answer,File I/O
Write a Python script that prints the numbers 1 to 10 and their squares.,,"def print_squares():
    for i in range(1, 11):
        print(f'{i} : {i*i}')

print_squares()","def print_squares():
    for i in range(1, 11):",Incomplete Answer,File I/O
Write a Python program to separate a specified string into characters and numbers.,"str = ""ab12cd3""","def separate_charnum(str):
    chars = []
    nums = []
    for char in str:
        if char.isalpha():
            chars.append(char)
        else:
            nums.append(int(char))
    return chars, nums

str = ""ab12cd3""

chars, nums = separate_charnum(str)
print(chars)
print(nums)","def separate_charnum(str):
    chars = []
    nums = []
    for char in str:
        if char.isalpha():
            chars.append(char)
        else:
            nums.append(int(char))
    return chars, nums

str = ""ab12cd3""

chars, nums = separate_charnum(str)
print(chars)
print(nums)",correct,OOP
"In Python, create a loop that takes a user input and appends it to a list until the user types ""stop"".",,"my_list = []

while True:
    user_input = input('Type something: ')
    if user_input == 'stop':
        break
    my_list.append(user_input)

print(my_list)","my_list = []

while True:
user_input = input('Type something: ')
if user_input == 'stop':
    break
my_list.append(user_input)

print(my_list)",Syntax Error,Recursion
Construct a python program that analyzes the occurrence of different words in a text,The quick brown fox jumps over the lazy dog,"words = 'The quick brown fox jumps over the lazy dog'.split()
word_frequency = {}

for word in words:
    if word not in word_frequency:
        word_frequency[word] = 1
    else:
        word_frequency[word] += 1

print('Word Frequency:', word_frequency)","words = 'The quick brown fox jumps over the lazy dog'.split()
word_frequency = {}

for word in words:
    if word not in word_f",Incomplete Answer,String Manipulation
Write a python function to find quotient of two numbers.,,"def find(n,m):  
    q = n//m 
    return (q)","def find(n,m):  
    q",Incomplete Answer,String Manipulation
Create a command-line program in Python which takes in three command-line arguments. The program should add the three arguments and print the result in the console.,1 6 3,"import sys

if __name__ == '__main__':
 args = sys.argv[1:]
 if len(args) != 3:
 print('Error: Not enough arguments provided')
 else:
 result = int(args[0]) + int(args[1]) + int(args[2])
 print('Result: ' + str(result))","import sys

if __name__ == '__main__':
 args = sys.argv[1:]
 if len(args) != 3:
 print('Error: Not enough arguments provided')
 else:
 result = int(args[0]) + int(args[1]) + int(args[2])
 print('Result: ' + str(result))",correct,String Manipulation
Write a function in Python to remove duplicate entries from a list.,"[1,2,2,3,3,4]","def removeDuplicates(input): 
    final_list = [] 
    for num in input: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 

lst = [1,2,2,3,3,4]
print(removeDuplicates(lst))","def removeDuplicates(input): 
    final_list = [] 
    for num in input: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 

lst = [1,2,2,3,3,4]
print(removeDuplicates(lst))",correct,Loops
Write a Python script to parse a JSON string and convert it into an array of strings.,,"import json

def parse_json(json_string):
  json_data = json.loads(json_string)

  result = []
  for key, value in json_data.items():
    result.append(f'{key}: {value}')

  return result","import json

def parse_json(json_string):
  json_data = json.loads(json_string)

  result = [",Incomplete Answer,Recursion
Write a Python script for scraping text from a webpage.,,"import requests
from bs4 import BeautifulSoup

url = ""http://example.com""
page = requests.get(url)

soup = BeautifulSoup(page.content, 'html.parser')
text = soup.find_all(text=True)

for t in text:
	print(t)","import requests
from bs4 import BeautifulSoup

url = ""http://example.com""
page = requests.get(url)

sou",Incomplete Answer,String Manipulation
Create a vector in Python and insert 3 elements.,,"vector = [] 
vector.append(1) 
vector.append(2) 
vector.append(3)","vector = [] 
vector.append(1) 
v",Incomplete Answer,Recursion
Write a Python function that the user can call to pseudorandomly shuffle a given list,,"import random 
def shuffle_list(lst):
    if len(lst) > 1:
        random.shuffle(lst)
    return lst","import random 
def shuffle_list(lst):
if len(lst) > 1:
    random.shuffle(lst)
return lst",Syntax Error,OOP
Write Python code to implement a class like this.,"class Employee: 
    def __init__(self, name, age): 
        self.name = name 
        self.age = age","class Employee: 
    def __init__(self, name, age):
        self.name = name 
        self.age = age 
    
     def __str__(self): 
        return ""Employee({0}, {1})"".format(self.name,self.age) 
 
emp = Employee(""John"", 24) 
print(emp)","class Employee: 
    def __init__(self, name, age):
        self.name = name 
        self.age = age 
    
     def __",Incomplete Answer,File I/O
Design an algorithm in Python for linear search on an array of integers.,,"def linearSearch(arr, x): 
  
    for i in range(len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1","def linearSearch(arr, x: 
  
    for i in range(len(arr: 
  
        if arr[i] == x: 
            return i 
  
    return -1",Syntax Error,String Manipulation
Create a Python program that multiplies a list of numbers together,"[3, 6, 5, 4]","def multiply_list(nums):
    product = 1
    for num in nums:
        product *= num
    return product

print(multiply_list([3, 6, 5, 4]))","def multiply_list(nums):
    product = 1
    for num in nums:
        product *= num
    return product

print(multiply_list([3, 6, 5, 4]))",correct,Recursion
Create a Python program to print an encrypted message using a given cipher key.,"message = ""hellohello""
cipher_key = 3","#Input
message = ""hellohello""
cipher_key = 3

#Solution
alphabet = ""abcdefghijklmnopqrstuvwxyz"";
cipher = alphabet[cipher_key:] + alphabet[:cipher_key]

encoded_message = """"
for char in message:
 encoded_message += cipher[alphabet.find(char)]

print(encoded_message) # khoorkhoor","#Input
message = ""hellohello""
cipher_key = 3

#Solution
alphabet = ""abcdefghijklmnopqrstuvwxyz"";
cipher = alphabet[cipher_key:] + alphabet[:cipher_key]

encoded_message = """"
for char in message:
 encoded_message += cipher[alphabet.find(char)]

print(name, encoded_message) # khoorkhoor",Syntax Error,File I/O
Implement a method in Python that takes two strings as input and returns true if one string is a rotation of the other.,"s1='abc' 
s2='cab'","def isRotation(s1, s2): 
    if (len(s1) != len(s2)): 
        return False
  
    temp = s1 + s1 
    if (s2 in temp): 
        return True
    return False

result = isRotation('abc', 'cab')
print(result)","def isRotation(s1, s2): 
    if (len(s1) != len(s2)): 
        return False
  
    temp = s1 + s1 
    ",Incomplete Answer,File I/O
Write a function in Python to get the intersection of two sorted lists.,"list1 = [5, 7, 9, 11, 13]
list2 = [7, 8, 10, 11, 12]","def intersection(list1, list2):
 result = []
 i = 0
 j = 0
 while i < len(list1) and j < len(list2):
 if list1[i] == list2[j]:
 result.append(list1[i])
 i += 1
 j += 1
 elif list1[i] < list2[j]:
 i += 1
 else:
 j += 1
 return result

print(intersection(list1, list2))
# Output: [7, 11]","def intersection(list1, list2):
 result = []
 i = 0
 j = 0
 while i < len(list1) and j < len(list2):
 if list1[i] == list2[j]:
 result.append(list1[i])
 i += 1
 j += 1
 elif list1[i] < list2[j]:
 i += 1
 else:
 j += 1
 return result

print(intersection(list1, list2))
# Output: [7, 11]",correct,OOP
Edit the Python script to make sure the program will run correctly,"# This program prints out the numbers from 1 to 10
for x in range(9):
    print(x + 1)","# This program prints out the numbers from 1 to 10
for x in range(10):
    print(x + 1)","# This program prints out the numbers from 1 to 10
for x in range(10)
    print(x + 1)",Syntax Error,OOP
"Formulate a script in Python that takes as input an array of integers, and returns the highest number in the array.","[1, 2, 5, 3, 7, 4]","def highest_number(arr):
    '''
    Function to get the highest number in an array of integers
    
    Parameters
    arr: list of integers
    
    Returns
    highest number in the array
    '''
    highest_num = arr[0]
    for num in arr:
        if num > highest_num:
            highest_num = num
    return highest_num","def highest_number(arr):
    '''
    Function to get the highest number in an array of integers
    
    Parameters
    arr: list of integers
    
    Returns
    highest number in the array
    '''
    highest_num = arr[0]
    for num in arr:
        if num > highest_num:
            highest_num = num
    return highest_num",correct,Recursion
Create a Python script that displays the current date and the upcoming weekend.,,"from datetime import date
from datetime import timedelta
import datetime

today = datetime.date.today()
# Current date
print(""Today's date is:"", today)

# Coming weekend
weekend = today + timedelta(days=4-today.weekday())
# Weekend date
print(""The upcoming Weekend date is:"", weekend)","from datetime import date
from datetime import timedelta
import datetime

today = datetime.date.today()
# Current date
pritn(""Today's date is:"", today)

# Coming weekend
weekend = today + timedelta(days=4-today.weekday())
# Weekend date
pritn(""The upcoming Weekend date is:"", weekend)",Syntax Error,OOP
Generate a correct python program to create a function to determine whether or not a given word is a palindrome.,,"def is_palindrome(word):
    reversed_word = word[::-1]
    if word == reversed_word:
        return True
    else:
        return False","def is_palindrome(word):
    reversed_word = word[::-1]
    if word ",Incomplete Answer,String Manipulation
Design a Python script to insert a given string at the beginning and end of a given array.,"[""hello"", ""world""], ""***""","def insertBeginningAndEnd(arr, str):
    result = []
    for element in arr:
        result.append(str + element + str)

    return result

result = insertBeginningAndEnd([""hello"", ""world""], ""***"")
print(result)","def insertBeginningAndEnd(arr, str)
    result = []
    for element in arr
        result.append(str + element + str)

    return result

result = insertBeginningAndEnd([""hello"", ""world""], ""***"")
print(result)",Syntax Error,String Manipulation
Is it possible to write a function in Python to convert a given list of lists into a CMOV instruction?,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def listoflists_to_cmov(listoflists): 
    # Initialise CMOV array
    cmov = [0]*9
  
    # Fill CMOV array with given list of lists
    for i, list_ in enumerate(listoflists): 
        cmov[i*3:(i+1)*3] = list_

    # Return CMOV array 
    return cmov","def listoflists_to_cmov(listoflists) 
    # Initialise CMOV array
    cmov = [0]*9
  
    # Fill CMOV array with given list of lists
    for i, list_ in enumerate(listoflists) 
        cmov[i*3(i+1)*3] = list_

    # Return CMOV array 
    return cmov",Syntax Error,String Manipulation
Generate a random four-digit number in Python.,,"import random
rand_num = random.randint(1000, 9999)","import random
rand_num = random.randint(1000, 9999)",correct,Recursion
Write a Python program to take a list of words as input and print all of the words with at least 4 letters.,"['apple', 'cat', 'elephant', 'banana', 'dog']","words = ['apple', 'cat', 'elephant', 'banana', 'dog']

filtered_words = []

for word in words:
    if len(word) >= 4:
        filtered_words.append(word)

print(filtered_words)","words = ['apple', 'cat', 'elephant', 'banana', 'dog']

filtered_words = []

for word in words:
    if len(word) >= 4:
        filtered_words.append(word)

print(filtered_words)",correct,Loops
Can you write a Python program to extract the list of email addresses from a given webpage?,,"import re
import requests

def extract_email_addresses(url):
    r = requests.get(url)
    emails = re.findall(r""[a-z0-9\.\-+_]+@[a-z0-9\.\-+_]+\.[a-z]+"", r.text)
    return emails

email_list = extract_email_addresses('https://example.org')

for email in email_list:
    print(email)","import re
import requests

def extract_email_addresses(url):
    r = requests.get(url)
    emails = re.findall(r""[a-z0-9\.\-+_]+@[a-z0-9\.\-+_]+\.[a-z]+"", r.text)
    return emails

email_list = extract_email_addresses('https://example.org')

for email in email_list:
    print(name, email)",Syntax Error,Recursion
Write a Python program to convert a given string to all uppercase.,"""hello World""","def to_uppercase(string):
    return string.upper()

print(to_uppercase(""hello World""))

# Outputs:
# HELLO WORLD","def to_uppercase(string):
    return string.upper()

pritn(to_uppercase(""hello World""))

# Outputs:
# HELLO WORLD",Syntax Error,File I/O
Create a Python Program to perform a linear search on given data and print the index of the found element.,"data = [7, 4, 3, 11, 9]","def linear_search(data, target):
    for i in range(len(data)):
        if (data[i] == target):
            return i
    return -1

data = [7, 4, 3, 11, 9]
target = 11

index = linear_search(data, target)
if index != -1:
    print(""Element"", target, ""is present at index"", index)
else:
    print(""Element is not present in the given array"")","def linear_search(data, target):
    for i in range(len(data)):
        if (data[i] == target):
            return i
    return -1

data = [7, 4, 3, 11, 9]
target = 11

index = linear_search(data, target)
if index != -1:
    print(""Element"", target, ""is present at index"", index)
else:
    print(""Element is not present in the given array"")",correct,Recursion
"Using Python, implement a Pig Latin translator. The translator should accept a word as input and return its Pig Latin equivalent.","word = ""Python""","def pig_latin(word):
 vowels = ""aeiou""
 if word[0] in vowels: 
 return word + 'way'
 else:
 return word[1:] + word[0] + 'ay'

pig_latin_word = pig_latin(word)
print(pig_latin_word) # Output: ythonPay","def pig_latin(word:
 vowels = ""aeiou""
 if word[0] in vowels: 
 return word + 'way'
 else:
 return word[1:] + word[0] + 'ay'

pig_latin_word = pig_latin(word
print(pig_latin_word # Output: ythonPay",Syntax Error,OOP
"Given a Python dictionary, write a function to invert the keys and values of the dictionary.","my_dict = {'A':1, 'B':2, 'C':3}","def invert_dict(dictionary):
    inverted_dict = {}
    for key, value in dictionary.items():
        inverted_dict[value] = key
    return inverted_dict

inverted_dict = invert_dict(my_dict)
print(inverted_dict)","def invert_dict(dictionary):
    inverted_dict = {}
    for key, value in dictionary.items():
        inverted_dict[value] = key
    return inverted_dict

inverted_dict = invert_dict(my_dict)
print(inverted_dict)",correct,OOP
Build a Python program to find the maximum element in a list of numbers.,"[4, 9, 10, 11, 12]","def maxNum(numsList):
    maxNum = numsList[0]
    for num in numsList:
        if num > maxNum:
            maxNum = num
    return maxNum

numList = [4, 9, 10, 11, 12]
print(""The maximum number in the list is:"", maxNum(numList))","def maxNum(numsList):
    maxNum = numsList[0]
    for num in numsList:
        if num > maxNum:
            maxNum = num
    return maxNum

numList = [4, 9, 10, 11, 12]
print(""The maximum number in the list is:"", maxNum(numList))",correct,Loops
Create a GUI application in Python that displays a greeting message when opened.,,"import tkinter as tk
 
root = tk.Tk()

# Create greeting label
greeting = tk.Label(text='Hello World!')
greeting.pack()

tk.mainloop()","import tkinter as tk
 
root = tk.Tk()

# Create greeting label
greeting = tk.Label(text='Hello World!')
greeting.pack()

tk.mainloop()",Syntax Error,OOP
"Create a function in Python that takes two parameters: a list and a number. The function should return the list sorted in ascending order, based on the result of each element in the list multiplied by the input number.","[3, 1, 5, 4, 2],  5","def sortList(arr, num): 
    arr.sort(key = lambda x: x*num) 
    return arr 
  
arr = [3, 1, 5, 4, 2] 
num = 5
print(sortList(arr, num))","def sortList(arr, num): 
    arr.sort(key = lambda x: x*num) 
    return arr 
  
arr = [3, 1, 5, 4, 2] 
num = 5
pritn(sortList(arr, num))",Syntax Error,OOP
Write a python function to accept the strings which contains all vowels.,,"def check(string): 
  if len(set(string).intersection(""AEIOUaeiou""))>=5: 
    return ('accepted') 
  else: 
    return (""not accepted"") ","def check(string): 
  if len(set(string).intersection(""AEIOUaeiou""))>",Incomplete Answer,OOP
Perform an optimization algorithm in Python to find the maximum value of a function given a set of initial conditions.,"def f(x):
  return 3*x**2 + 2*x + 7

initial_conditions = [-3.2, -1.5, 2.4]","from scipy.optimize import minimize

def f(x):
  return 3*x**2 + 2*x + 7

initial_conditions = [-3.2, -1.5, 2.4]

result = minimize(f, initial_conditions, method='nelder-mead')
max_val = result.fun","from scipy.optimize import minimize

def f(x):
  return 3*x**2 + 2*x + 7

initial_conditions = [-3.2, -1.5, 2.4]

result = minimize(f, initial_conditions, method='nelder-mead')
max_val = result.fun",correct,Loops
Create a Python program to convert a binary string into its equivalent decimal value.,binary_num = '10101',"def binary_to_decimal(binary_num):
    decimal_num = 0
    n = 0

    for i in range(len(binary_num)-1, -1, -1):
        if binary_num[i] == '1':
            decimal_num += 2**n
        
        n += 1
    
    return decimal_num","def binary_to_decimal(binary_num):
decimal_num = 0
n = 0

for i in range(len(binary_num)-1, -1, -1):
    if binary_num[i] == '1':
        decimal_num += 2**n
    
    n += 1

return decimal_num",Syntax Error,File I/O
Can you provide a Python code snippet to count the number of words in the given text?,Text: Today it is a beautiful day.,"text = ""Today it is a beautiful day.""
words = text.split()
print(""Number of words in the given text:"", len(words))","text = ""Today it is a beautiful day.""
words = text.split()
print(""Number of words in the given text:"", len(words))",correct,Loops
Design a data structure in Python to store integer values.,,"class IntList:
    def __init__(self):
        self.values = []
   
    def add_value(self, value):
        self.values.append(value)
    
    def find_min(self):
        return min(self.values)","class IntList:
    def __init__(self):
        self.values = []
   
    def add_value(self, value",Incomplete Answer,OOP
Implement a search algorithm to quickly identify a specific character in a given string using Python.,"string = ""helloworld""
character = ""o""","def search(s, ch):
    for i, c in enumerate(s):
        if c == ch:
            return i
    return -1

string = ""helloworld""
character = ""o""

index = search(string, character)
if index == -1:
    print(""Character not found"")
else:
    print(""Index of the character is"", index)","def search(s, ch):
    for i, c in enumerate(s):
        if c == ch:
            return i
    return -1

string = ""helloworld""
character = ""o""

index = search(string, character)
if index == -1:
    pritn(""Character not found"")
else:
    pritn(""Index of the character is"", index)",Syntax Error,Loops
Can you write a function in Python to find the maximum number from a given list?,"List of Numbers: [9, 4, 2, 7, 5]","def find_max(lst):
  max_val = lst[0]
  for num in lst:
    if num > max_val:
      max_val = num
  return max_val

list_of_numbers = [9, 4, 2, 7, 5]
print(find_max(list_of_numbers))","def find_max(lst):
  max_val = lst[0]
  for num in lst:
    if num > max_val:
      max_val",Incomplete Answer,File I/O
Construct a parser in Python to identify the parts of speech in a given sentence.,This is a great day.,"import spacy

nlp = spacy.load('en_core_web_sm')

# Define the sentence to be parsed
sentence = 'This is a great day.'

# Create a Doc object
doc = nlp(sentence)

# Print the parts of speech
for token in doc:
    print(token.text, token.pos_)

# Output:
# This DET
# is VERB
# a DET
# great ADJ
# day NOUN
# . PUNCT","import spacy

nlp = spacy.load('en_core_web_sm')

# Define the sentence to be parsed
sentence = 'This is a great day.'

# Create a Doc object
doc = nlp(sentence)

# Print the parts of speech
for token in doc
    print(token.text, token.pos_)

# Output
# This DET
# is VERB
# a DET
# great ADJ
# day NOUN
# . PUNCT",Syntax Error,Recursion
Generate a Python script to assign grades to a set of test scores.,"[90, 80, 75, 70, 65]","def assignGrades(scores):
    grades = []
    for score in scores:
        if score >= 90:
            grades.append(""A"")
        elif score >= 80:
            grades.append(""B"")
        elif score >= 70:
            grades.append(""C"")
        elif score >= 65:
            grades.append(""D"")
        else:
            grades.append(""F"")
            
    return grades","def assignGrades(scores):
    grades = []
    for score in scores:
        if score >= 90:
            grades.append(""A"")
        elif score >= 80:
            grades.append(""B"")
     ",Incomplete Answer,Loops
Write a function to find the list in a list of lists whose sum of elements is the highest.,,"def max_sum_list(lists):
 return max(lists, key=sum)","def max_sum_list(lists):
 return max(lists, key=sum)",correct,String Manipulation
Create a Python program that prints the sum of all integers that are divisible by 3 and 5 from 0 to a given number.,Max number: 10,"def sum_divisible_by_3_and_5(n):
 s = 0
 for i in range(n + 1):
 if i % 3 == 0 or i % 5 == 0:
 s += i
 return s

print(sum_divisible_by_3_and_5(10)) # 33","def sum_divisible_by_3_and_5(n):
 s = 0
 for i in range(n + 1):
 if i % 3 ==",Incomplete Answer,String Manipulation
"Design a Python class named ""Animal"" that has three instance variables: species, color and age.",,"class Animal:
    def __init__(self, species, color, age):
        self.species = species
        self.color = color
        self.age = age","class Animal:
    def __init__(self, species, color, age):
        self.species = species
        self.color = color
        self.age = age",correct,OOP
Modify the following Python funciton to return the second largest element in the list.,"x = [1, 2, 3, 4, 5]","def second_largest(x):
    x.sort()
    return x[-2]","def second_largest(x):
   ",Incomplete Answer,File I/O
Design a Python program which takes two lists and returns their intersection.,"list1 = [1, 2, 3, 4, 5, 6]
list2 = [3, 6, 8, 9, 10]","def intersection(list1, list2): 
    return list(set(list1) & set(list2)) 

# Output: [3, 6]","def intersection(list1, list2: 
    return list(set(list1 & set(list2 

# Output: [3, 6]",Syntax Error,File I/O
Write a Python program to retrieve binary data from a given URL.,"url = ""https://example.com/sample.txt""","import requests 
  
def getFileData(url):
  # Get binary data
  r = requests.get(url)
  return r.content

url = ""https://example.com/sample.txt""
data = getFileData(url)

print(data)","import requests 
  
def getFileData(url):
  # Get binary data
  r = requests.get(url)
  return r.content

url = ""https://example.com/sample.txt""
data = getFileData(url)

print(data)",correct,String Manipulation
Write a Python program to quickly search for a substring in a larger string.,"string = ""hello world"" substring = ""or""","def search_substring(string, substring):
    index = string.find(substring)
    return index 

result = search_substring(""hello world"", ""or"")
print(result)","def search_substring(string, substring:
    index = string.find(substring
    return index 

result = search_substring(""hello world"", ""or""
print(result",Syntax Error,Recursion
Can you generate a greedy algorithm in Python for solving the coin change problem?,"Coins = [1, 6, 10], Change = 8","def get_coins(coins, change):
	min_coins = change
	if change in coins:
		return [change]

	for i in [c for c in coins if c <= change]:
		num_coins = 1 + get_coins(coins, change-i)
		if len(num_coins) < min_coins:
			min_coins = num_coins
	return min_coins

# Test 
coins = [1, 6, 10]
change = 8
print(get_coins(coins, change)) # [1, 6, 1]","def get_coins(coins, change):
	min_coins = change
	if change in coins:
		return [change]

	for i in [c for c in coins if c <= change]:
		num_coins = 1 + get_coins(coins, change-i)
		if len(num_coins) < min_coins:
			min_coins = num_coins
	return min_coins

# Test 
coins = [1, 6, 10]
change = 8
print(get_coins(coins, change)) # [1, 6, 1]",Syntax Error,Recursion
Write a function to find the maximum of nth column from the given tuple list.,,"def max_of_nth(test_list, N):
  res = max([sub[N] for sub in test_list])
  return (res) ","def max_of_nth(test_list, N):
  res = max([sub[N] for sub in test_list])
  return (res) ",Syntax Error,Loops
Implement a function in Python that generates a random password with a minimum length of 10 characters.,No input,"import random
import string

def generate_random_password(n=10):
    chars = string.ascii_uppercase + string.ascii_lowercase + string.digits
    return ''.join(random.choice(chars) for _ in range(n))","import random
import string

def generate_random_password(n=10):
    chars = string.ascii_uppercase",Incomplete Answer,String Manipulation
Create a Python Code Snippet to retrieve the last two elements from a list.,"[1, 2, 3, 4, 5]","lastTwoElements = [1, 2, 3, 4, 5][-2:]

print(lastTwoElements)
#Output: [4, 5]","lastTwoElements = [1, 2, 3, 4, 5][-2:]
",Incomplete Answer,String Manipulation
Write a function to find the perimeter of a rectangle.,,"def rectangle_perimeter(l,b):
  perimeter=2*(l+b)
  return perimeter","def rectangle_perimeter(l,b):
  pe",Incomplete Answer,OOP
Create a Python function that reverses every other word in a given string.,This is a test,"def reverseWords(sentence):
  words = sentence.split()
  reversed_sentence = []
  for i in range(len(words)):
    if (i % 2 == 0):
      reversed_sentence.append(words[i])
    else:
      reversed_sentence.append(words[i][::-1])
  return "" "".join(reversed_sentence)

print(reverseWords(""This is a test""))","def reverseWords(sentence):
  words = sentence.split()
  reversed_sentence = []
  for i in range(len(words)):
    if (i % 2 == 0):
      reversed_sentence.append(words[i])
    else:
      reversed_sentence.append(words[i][::-1])
  return "" "".join(reversed_sentence)

print(reverseWords(""This is a test""))",correct,String Manipulation
Write an object-oriented program in Python to create a calculator.,,"class Calculator:
 def __init__(self):
 pass

 def add(self, num1, num2):
 return num1 + num2

def subtract(self, num1, num2):
 return num1 - num2 

def multiply(self, num1, num2):
 return num1 * num2

def divide(self, num1, num2):
 return num1 / num2","class Calculator
 def __init__(self)
 pass

 def add(self, num1, num2)
 return num1 + num2

def subtract(self, num1, num2)
 return num1 - num2 

def multiply(self, num1, num2)
 return num1 * num2

def divide(self, num1, num2)
 return num1 / num2",Syntax Error,String Manipulation
Create a script in Python for classifying the sentiment of a text. The script should be able to handle input of various lengths and should return a sentiment score (on a scale from -1 to +1) for the text.,positive,"import nltk

def sentiment_analysis(text):
 tokens = nltk.word_tokenize(text)
 score = 0
 for token in tokens:
 tag = nltk.pos_tag(token)[0]
 if tag[1] == 'positive':
 score += 1
 else:
 score -= 1
 return score / len(tokens)","import nltk

def sentiment_analysis(text):
 tokens = nltk.word_tokenize(text)
 score = 0
 for token in tokens:
 tag = nltk.pos_tag(token)[0]
 if tag[1] == 'positive':
 score += 1
 else:
 score -= 1
 return score / len(tokens)",correct,String Manipulation
Create an array using Python containing the numbers 0 to 9.,,"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",correct,Recursion
Write a script in Python to generate a histogram of a given data set.,"data = [3, 5, 4, 6, 7, 8, 9, 3, 8, 5]","import matplotlib.pyplot as plt
plt.hist(data, 10)
plt.title(""Frequency Histogram"")
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")
plt.show()","import matplotlib.pyplot as plt
plt.hist(data, 10)
plt.title(""Frequency Histogram"")
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")
plt.show()",Syntax Error,OOP
Implement a sorting algorithm in Python.,"array = [10,7,8,9,1,5]","def bubbleSort(array):
    n = len(array)
    for i in range(n): 
        for j in range(0, n-i-1): 
            if array[j] > array[j+1] : 
                array[j], array[j+1] = array[j+1], array[j] 
    return array

print(bubbleSort(array))","def bubbleSort(array):
    n = len(array)
    for i in range(n): 
        for j in range(0, n-i-1): 
            if array[j] > array[j+1] : 
                array[j], array[j+1] = array[j+1], array[j] 
    return array

pritn(bubbleSort(array))",Syntax Error,String Manipulation
Generate a Python code snippet that prints out a list with the square of each number in the range from 1 to 10.,,"for i in range(1,11):
    print(i**2)","for i in range(1,1",Incomplete Answer,Loops
Create a function in Python that takes an array of strings and returns a new array of strings with all the vowels removed from each string.,"[""hello"", ""world"", ""how""]","def remove_vowels(strings):
 vowels = ['a', 'e', 'i', 'o', 'u']
 result = []
 for string in strings:
 result.append(''.join(c for c in string if c not in vowels))
 return result","def remove_vowels(strings):
 vowels = ['a', 'e', 'i', 'o', 'u']
 result = []
 for string in strings:
 result.append(''.join(c for c in string if c not in vowels))
 return result",correct,String Manipulation
"Create a Python program to store the strings ""Hello"" and ""World"" and print them in the same line.",,"string1 = ""Hello""
string2 = ""World""

print(string1 + "" "" + string2)","string1 = ""Hello""
string2 = ""Worl",Incomplete Answer,String Manipulation
Write a Python function to find the maximum and minimum number from a list of numbers.,"list = [1, 4, 5, 6, 7, 8]","def find_max_min(list):
  max_number = max(list)
  min_number = min(list)
  return max_number, min_number

max_number, min_number = find_max_min(list)
print(""Max number: "", max_number)
print(""Min number: "", min_number)","def find_max_min(list):
  max_number = max(list)
  min_number = min(list)
  return max_number, min_number

max_number, min_number = find_max_min(list)
print(name, ""Max number: "", max_number)
print(name, ""Min number: "", min_number)",Syntax Error,OOP
Omit any incomplete code from a given Python program by supplying correct expressions and indentation.,"if 
  a<20:
  b = c 
   c = b","if a < 20:
    b = c
    c = b","if a < 20:
    b = c
    c = b",correct,OOP
Create a Python program to print out the largest palindrome number from a list of numbers.,"Example list of numbers [4, 12, 25, 98, 9989]","def is_palindrome(n):
 return str(n) == str(n)[::-1]

def largest_palindrome(nums):
 largest = 0
 for n in nums:
 if is_palindrome(n):
 largest = max(n, largest)
 return largest

nums = [4, 12, 25, 98, 9989]
largest = largest_palindrome(nums)
print(f'Largest palindrome from the list is {largest}')","def is_palindrome(n)
 return str(n) == str(n)[-1]

def largest_palindrome(nums)
 largest = 0
 for n in nums
 if is_palindrome(n)
 largest = max(n, largest)
 return largest

nums = [4, 12, 25, 98, 9989]
largest = largest_palindrome(nums)
print(f'Largest palindrome from the list is {largest}')",Syntax Error,OOP
Create a program in Python that calculates the median of an array of integers without using the built-in function.,"[1, 2, 3, 4, 5]","def median(arr): 
 n = len(arr) 
 arr.sort() 

 # check for even case 
 if n % 2 == 0: 
 return (arr[int((n - 1)/2)] +
 arr[int(n/2)]) / 2

else: 
 return arr[int(n/2)] 

# test
arr = [1, 2, 3, 4, 5] 
print(""Median ="", median(arr)) 

# Output: Median = 3.0","def median(arr): 
 n = len(arr) 
 arr.sort() 

 # check for even case 
 if n % 2 == 0: 
 return (arr[int((n - 1)/2)] +
 arr[int(n/2)]) / 2

else: 
 return arr[int(n/2)] 

# test
arr = [1, 2, 3, 4, 5] 
print(""Median ="", median(arr)) 

# Output: Median = 3.0",correct,Recursion
Generate a random list of numbers in Python of size n and output their sum.,n = 10,"import random

n = 10
lst = [random.randrange(1, 101) for _ in range(n)]
sum_lst = sum(lst)

print(""Random list: "", lst)
print(""Sum of the list: "", sum_lst)","import random

n = 10
lst = [random.randrange(1, 101) for _ in range(n)]
sum_lst = sum(lst)

pritn(""Random list: "", lst)
pritn(""Sum of the list: "", sum_lst)",Syntax Error,File I/O
Generate an algorithm in Python that calculates the sum of all even numbers between 1 and a given upper limit.,100,"def sum_of_even_numbers(n):
    sum = 0
    for i in range(2, n+1, 2):
        sum += i
 
    return sum","def sum_of_even_numbers(n):
    sum = 0
    for i in range(2, n+1, 2):
        sum += i
 
    return sum",correct,String Manipulation
Develop a function in Python that takes a string as input and finds a pattern in it and replaces it with a given set of characters.,"""abcabcabc"", ""abc"", ""xyz""","def replacePattern(string, pattern, replacement):
    return string.replace(pattern, replacement)

result = replacePattern(""abcabcabc"", ""abc"", ""xyz"")
print(result)","def replacePattern(string, pattern, replacement):
    return string.replace(pattern, replacement)

result = replacePattern(""abcabcabc"", ""abc"", ""xyz"")
print(result)",correct,Recursion
Write a function to solve tiling problem.,,"def get_noOfways(n):
    if (n == 0):
        return 0;
    if (n == 1):
        return 1; 
    return get_noOfways(n - 1) + get_noOfways(n - 2);","def get_noOfways(n):
    if (n == 0):
        return 0;
    if (n == 1):
        return 1; 
    return get_noOfways(n - 1) + get_noOfways(n - 2);",correct,OOP
Write a Python program that generates a multiplication table of a given size.,5,"def multiplication_table(n):
 for i in range(1, n+1):
   for j in range(1, n+1):
     print(str(i*j).rjust(4), end="" "")
   print()

multiplication_table(5)

# Output:
 1   2   3   4   5
 2   4   6   8  10
 3   6   9  12  15
 4   8  12  16  20
 5  10  15  20  25","def multiplication_table(n)
 for i in range(1, n+1)
   for j in range(1, n+1)
     print(str(i*j).rjust(4), end="" "")
   print()

multiplication_table(5)

# Output
 1   2   3   4   5
 2   4   6   8  10
 3   6   9  12  15
 4   8  12  16  20
 5  10  15  20  25",Syntax Error,Loops
Write a Python function to find two numbers in an array with the largest sum.,"[3, 10, -3, -2, 5]","def max_sum(arr):
    max_val = float('-inf')
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            max_val = max(max_val, arr[i] + arr[j])
    return max_val

result = max_sum([3, 10, -3, -2, 5])
print(result)","def max_sum(arr):
    max_val = float('-inf')
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
  ",Incomplete Answer,OOP
Generate a Python script that computes the area of an ellipse given its semi-major axis and semi-minor axis as inputs.,"Semi-major axis = 5
Semi-minor axis = 3","import math

# Semi-Major Axis
a = 5

# Semi-Minor Axis
b = 3

# Calculate the area of an ellipse
area = math.pi * a * b

print(""The area of the ellipse is"", area)","import math

# Semi-Major Axis
a = 5

# Semi-Minor Axis
b = 3

# Calculate the ar",Incomplete Answer,String Manipulation
Construct a python dictionary from the following data.,"fruit, apple
animal, cat
city, London","mydict = {
    'fruit': 'apple',
    'animal': 'cat',
    'city': 'London'
}","mydict = {
    'fruit': 'apple',
    'animal': 'cat',
    'city': 'London'
}",Syntax Error,Loops
Create a Python program which takes a list of numbers and adds them together.,"[1, 2, 3, 4, 5]","def sum_list(nums): 
	total = 0
	for num in nums: 
		total += num 
	return total 

nums = [1, 2, 3, 4, 5] 
print(sum_list(nums)) # 15","def sum_list(nums): 
	total = 0
	for num in nums: 
		total += num ",Incomplete Answer,Recursion
Write a Python program to parse an XML document.,"<?xml version=""1.0"" encoding="" UTF-8""?>
<note>
    <to>John Doe</to>
    <from>Jane Doe</from>
    <heading>Greeting</heading>
    <body>Hello World!</body>
</note>","""""""
Parse an XML document
""""""

import xml.etree.ElementTree as ET

# Parse the XML file
root = ET.parse('note.xml').getroot()

# Print out the XML elements
for item in root:
    print(f""{item.tag}: {item.text}"")","""""""
Parse an XML document
""""""

import xml.etree.ElementTree as ET

# Parse the XML file
root = ET.parse('note.xml'.getroot(

# Print out the XML elements
for item in root:
    print(f""{item.tag}: {item.text}""",Syntax Error,OOP
Write a Python script to find the second largest number in a given list of numbers.,"arr = [4, 6, 10, -1, 3, 15]","def second_largest(arr):
  max_ = max(arr)
  new_arr = list(filter(lambda x: x != max_, arr))
  return max(new_arr)","def second_largest(arr):
  max_ = max(arr)
  new_arr = list(filter(lambda x: x != max_, arr))
  return max(new_arr)",Syntax Error,Loops
Generate a Python program to perform string matching.,,"def string_match(str1, str2):
    if len(str1) > len(str2):
        longer, shorter = str1, str2
    else:
        longer, shorter = str2, str1

    # Check if strings are the same for all possible shifts
    for i in range(len(longer)-len(shorter)+1):
        if longer[i:len(shorter)+i] == shorter:
            return True

    return False","def string_match(str1, str2):
    if len(str1) > len(str2):
        longer, shorter = str1, str2
    else:
        longer, shorter = str2, str1

    # Check if strings are",Incomplete Answer,String Manipulation
"Given a list of strings, write a Python code snippet to print all strings that begin with a letter 'a'.","[""apple"", ""banana"", ""orange"", ""avocado""]","for item in [""apple"", ""banana"", ""orange"", ""avocado""]:
 if item.startswith('a'):
 print(item)

# Output:
apple
avocado","for item in [""apple"", ""banana"", ""orange"", ""avocado""]:
 if item.startswith('a'):
 print(item)

# Output:
apple
avocado",Syntax Error,OOP
Write a function to find the focus of a parabola.,,"def parabola_focus(a, b, c): 
  focus= (((-b / (2 * a)),(((4 * a * c) - (b * b) + 1) / (4 * a))))
  return focus","def parabola_focus(a, b, c: 
  focus= (((-b / (2 * a,(((4 * a * c - (b * b + 1 / (4 * a
  return focus",Syntax Error,File I/O
Develop a Python function that takes a list of strings and returns a new list with the strings sorted in alphabetical order.,"['Elephant', 'Cat', 'Dog']","def sort_list(words):
    return sorted(words)

sorted_list = sort_list(['Elephant', 'Cat', 'Dog'])
print(sorted_list)","def sort_list(words):
    return sorted(words)

sorted_list = sort_list(['Elephant', 'Cat', 'Dog'])
print(sorted_list)",correct,File I/O
Develop a function in Python that takes an individual name as an input and output its acronym.,"""Oscar Thomas""","def make_acronym(name):
    acronym = """".join([word[0] for word in name.split()]).upper()
    return acronym

result = make_acronym(""Oscar Thomas"")
print(result)","def make_acronym(name):
    acronym = """".join([word[0] for word in name.split()]",Incomplete Answer,Loops
Write a Python program to convert a list into a tuple.,"[3, 4, 5, 6]","list = [3, 4, 5, 6]
tuple = tuple(list)
print(""Tuple:"", tuple)","list = [3, 4, 5, 6]
tuple = tuple(list)
print(name, ""Tuple:"", tuple)",Syntax Error,File I/O
Create a Python program to classify emails into two categories: spam and ham.,,"import re

def is_spam(email):
    pattern = r'viagra|cialis|pharmacy'
    if re.search(pattern, email):
        return True
    else:
        return False","import re

def is_spam(email):
    pattern = r'viagra|cialis|pharmacy'
    if",Incomplete Answer,Recursion
Implement a Python program to encrypt a given message with a given key.,"message = ""Hello, World!""
key = ""abc""","def encrypt_message(message, key): 
    encrypted_message = """" 
      
    for i in range(len(message)): 
        x = (ord(message[i]) + 
             ord(key[i % len(key)])) % 26
        x += ord('A') 
        encrypted_message += chr(x) 
          
    return encrypted_message","def encrypt_message(message, key): 
    encrypted_message = """" 
      
    for i in range(len(message)): 
        x = (ord(message[i]) + 
             ord(key[i % len(key)])) % 26
        x += ord('A') 
        encrypted_message += chr(x) 
          
    return encrypted_message",Syntax Error,File I/O
Create a program in Python that implements a sorting algorithm of your choice to sort a given array of integers in ascending order.,"A = [9, 4, 5, 1, 3]","def sort_array(A):
    if len(A) <= 1:
        return A

    pivot = A[0]
    left = [item for item in A if item < pivot]
    right = [item for item in A if item > pivot]

    return sort_array(left) + [pivot] + sort_array(right)","def sort_array(A):
    if len(A) <= 1:
        return A

    pivot = A[0]
    left = [item for item in A if item < pivot]
    right = [item for item in A if item > pivot]

    return sort_array(left) + [pivot] + sort_array(right)",correct,String Manipulation
Return a Python generator expression that prints all even numbers from 1 to 10 except 7.,,"evens = (x for x in range(1, 11) if x % 2 == 0 and x != 7)
for x in evens:
    print(x)","evens = (x for x in range(1, 11) if x % 2 =",Incomplete Answer,Recursion
Write a Python program that takes two sets of strings and creates a list of strings that are present in both.,,"def find_common(set_a, set_b):
  return [item for item in set_a if item in set_b]","def find_common(set_a, set_b):
  return ",Incomplete Answer,Loops
Write a Python program to construct a parser to detect an input has errors or not.,"Input Code:
# include <stdio.h>
void main()
 {
 printf(""Hello World"")
 }","def detect_errors(input_code):
 error_tokens = [""!"", ""@"", ""#"", ""$""]
 counter = 0
 for line in input_code.splitlines():
 tokens = line.strip().split()
 if any(x in tokens for x in error_tokens):
 counter += 1
 if counter > 0:
 return True
 else:
 return False","def detect_errors(input_code):
 error_tokens = [""!"", ""@"", ""#"", ""$""]
 counter = 0
 for line in input_code.splitlines():
 tokens = ",Incomplete Answer,Recursion
Write a Python program which randomly selects 3 items from a list of 5 items and prints them to the console.,"list = [""apple"", ""banana"", ""orange"", ""strawberry"", ""grape""]","import random

list = [""apple"", ""banana"", ""orange"", ""strawberry"", ""grape""]
random.shuffle(list)

for item in list[:3]:
 print(item)","import random

list = [""apple"", ""banana"", ""orange"", ""strawberry"", ""grape""]
random.shuffle(list)

for item in list[3]
 print(item)",Syntax Error,String Manipulation
Generate a Python program to fetch data from a website.,,"import requests

def main():
    url = 'https://www.example.com'
    
    r = requests.get(url)
    if r.status_code == 200:
        content = r.content
        print(content)
    else:
        print(""Failed to fetch data."")

if __name__ == ""__main__"":
    main()","import requests

def main():
    url = 'https://www.example.com'
    
    r = requests.get(url)
    if r.status_code == 200:
        content = r.content
        print(content)
    else:
        print(""Failed to fetch data."")

if __name__ == ""__main__"":
    main()",correct,OOP
Write Python code to generate a random set of 10 IP addresses in the range of 192.168.1.0 to 192.168.1.255.,,"import random

for i in range(10):
 ip_address = ""192.168.1."" + str(random.randrange(0, 255))
 print(ip_address)","import random

for i in range(10):
 ip_address = ""192.16",Incomplete Answer,OOP
Create a web crawler in Python to extract text from web pages.,,"import requests
from bs4 import BeautifulSoup

def web_crawler(url):
    response = requests.get(url)
    if response.status_code == 200:
        html = response.text
        soup = BeautifulSoup(html, ""lxml"")
        text = soup.findAll(text=True)
        return text","import requests
from bs4 import BeautifulSoup

def web_crawler(url):
    response = requests.get(url)
    if response.status_code == 2",Incomplete Answer,Loops
Create a python script to generate the product of all elements in a sequence.,"[2,4,6]","def product_of_sequence(sequence):
    product = 1
    for num in sequence:
        product *= num
    return product

seq = [2,4,6]
print(product_of_sequence(seq))","def product_of_sequence(sequence):
    product = 1
    for num in sequence:
      ",Incomplete Answer,Loops
Create a Python program to decide whether a given string is a valid JSON or an invalid one.,,"import json

def is_valid_json(string):
    try:
        json.loads(string)
        return True
    except:
        return False","import json

def is_valid_json(string):
    try:
        json.loads(string)
        return True
    except:
        return False",correct,OOP
Write a Python program that finds the average of three numbers.,"21, 15, 10","def avg(a, b, c): 
  return (a + b + c)/3 
  
a = 21
b = 15
c = 10
  
average = avg(a, b, c) 
  
print(""Average of three numbers is:"", average)","def avg(a, b, c: 
  return (a + b + c/3 
  
a = 21
b = 15
c = 10
  
average = avg(a, b, c 
  
print(""Average of three numbers is:"", average",Syntax Error,OOP
Develop a Python program to check if a given number is a power of two.,Number = 16,"def is_power_of_two(x):
  while x % 2 == 0 and x > 1:
    x = x / 2
  return x == 1

num = 16

print(is_power_of_two(num))","def is_power_of_two(x):
  while x % 2 == 0 and x > 1:
    x =",Incomplete Answer,String Manipulation
Generate a Python code for replicating an output after switching the contents of two strings.,"Given two strings, ‘str1’ and ‘str2’, swap the contents of the two strings.

For example, if the two strings are ‘Hello’ and ‘World’, the output after swtiching the contents should be ‘Worlh’ and ‘Hello’","str1, str2 = 'Hello', 'World'
str1, str2 = str2, str1

print(""After swapping: str1 ="", str1, ""and str2 ="", str2)","str1, str2 = 'Hello', 'World'
str1, str2 = str2, str1

p",Incomplete Answer,OOP
Create a Python script to print all prime numbers between 1 to 1000.,,"def print_prime_numbers():
    for num in range(2, 1001):

        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            print(num)
print_prime_numbers()","def print_prime_numbers():
    for num in range(2, 1001):

        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            print(num)
print_prime_numbers()",correct,Loops
Write a Python program to filter out the words containing in a list that are 6 characters long.,"words = ['banana', 'apple', 'jacket', 'house', 'turtle']",filtered_words = [ word for word in words if len(word) == 6 ],filtered_words = [ word for wo,Incomplete Answer,Recursion
Write a Python code snippet to display a formatted date and time.,,"import datetime

dateandtime = datetime.datetime.now()
# print date and time string
print(dateandtime.strftime(""%d/%m/%Y %H:%M:%S""))","import datetime

dateandtime = datetime.datetime.now()
# print date and time string
print(dateandtime.strftime(""%d/%m/%Y %H:%M:%S""))",correct,Loops
"Create a python function that finds the median value of a list of integers, where the length of the list is greater than two.",,"def find_median(lst):
	lst.sort() 
	if len(lst) % 2 != 0: 
		return lst[len(lst)//2]
	return (lst[len(lst)//2] + lst[len(lst)//2 - 1]) / 2.0","def find_median(lst:
	lst.sort( 
	if len(lst % 2 != 0: 
		return lst[len(lst//2]
	return (lst[len(lst//2] + lst[len(lst//2 - 1] / 2.0",Syntax Error,Loops
Generate Python code to generate a histogram from a given data set.,"data = [1, 3, 5, 3, 2, 6, 8, 1, 2]","import matplotlib.pyplot as plt 

def generate_histogram(data):
    plt.hist(data)
    plt.xlabel(""Data"")
    plt.ylabel(""Frequency"")
    plt.title(""Histogram of Data"")
    plt.show()
    
generate_histogram(data)","import matplotlib.pyplot as plt 

def generate_histogram(data):
    plt.hist(data)
    plt.xlabel(""Data"")
    plt.ylabel(""Frequency"")
    plt.title(""Histogram of Data"")
    plt.show()
    
generate_histogram(data)",correct,Loops
Create a program in Python to implement linear search.,,"def linear_search(data, target):
    for i in range(len(data)): 
        if data[i] == target: 
            return i
    return -1","def linear_search(data, target):
    for i in range(len(data)): 
        if data[i] == target: 
            return i
    return -1",Syntax Error,OOP
Create a Python code snippet to print the current time in the format `hh:mm:ss`.,,"# Import datetime module
import datetime

# Get the current time
now = datetime.datetime.now()

# Print the current time in the format hh:mm:ss
print(now.strftime(""%H:%M:%S""))","# Import datetime module
import datetime

# Get the current time
now = datetime.datetime.now()

# Print the current time in the format hh:mm:ss
pritn(now.strftime(""%H:%M:%S""))",Syntax Error,File I/O
Write a function that matches a string that has an a followed by one or more b's.,,"import re
def text_match_one(text):
        patterns = 'ab+?'
        if re.search(patterns,  text):
                return 'Found a match!'
        else:
                return('Not matched!')
","import re
def text_match_one(text):
        patterns = 'ab+?'
        if re.search(patterns,  text):
                return 'Found a match!'
        else:
                return('Not matched!')
",Syntax Error,Recursion
Develop a Python program to count the total characters from a given list of words.,"[""Apple"", ""Banana"", ""Orange""]","words = [""Apple"", ""Banana"", ""Orange""]
total_chars = 0

for word in words:
    total_chars += len(word)

print(total_chars) # Output: 15","words = [""Apple"", ""Banana"", ""Orange""]
total_chars = 0

for word in words:
    total_chars += len(word)

print(total_chars) # Output: 15",correct,File I/O
Create a Python script for a web-based chatbot which takes the user's name and responds with a greeting,,"name = input(""What is your name? "")

# greeting the user
print(f""Hello {name}, nice to meet you!"")","name = input(""What is your name? "")

# greeting t",Incomplete Answer,File I/O
Edit the following python code to print all the elements of a list that are divisible by 7.,"my_list = [14, 35, 42, 49, 56, 63, 70]","my_list = [14, 35, 42, 49, 56, 63, 70]

for element in my_list:
 if element % 7 == 0:
 print(element) 
  
# Output:
14
 
42
 
49
 
56
 
63
 
70","my_list = [14, 35, 42, 49, 56, 63, 70]

for element in my_list:
 if element % 7 == 0:
 print(element) 
  
# Output:
14
 
42
 
49
 
56
 
63
 
70",correct,Recursion
Create a Python script that reads two integers from the user and prints out their sum.,,"# Taking two numbers from the user
num1 = int(input(""Enter first number: ""))
num2 = int(input(""Enter second number: ""))

# Calculating the sum of two numbers
sum = num1 + num2

# Printing out the sum
print(""The sum of the two numbers is:"", sum)","# Taking two numbers from the user
num1 = int(input(""Enter first number: ""))
num2 = int(input(""Enter second number: ""))

#",Incomplete Answer,Recursion
Develop a Python program to find the sum of first n even numbers.,7,"def find_sum(n):
    sum = 0
    for i in range(1, n+1):
        if i % 2 == 0:
            sum += i
    return sum

n = 7
print(""The sum of first n even numbers is:"", find_sum(n))","def find_sum(n):
    sum = 0
    for i in range(1, n+1):
        if i % 2 == 0:
            sum += i
    return sum

n = 7
pritn(""The sum of first n even numbers is:"", find_sum(n))",Syntax Error,File I/O
Create regular expression in Python to check for a valid hex color.,,"import re

HEX_COLOR_REGEX = re.compile(r'^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')","import re

HEX_COLOR_REGEX = re.compile(r'^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')",Syntax Error,File I/O
Construct a while-loop in Python that prints all the even numbers between 0 and 20,,"i = 0

while i <= 20:
    if i % 2 == 0:
        print(i)
    i += 1","i = 0

while i <= 20:
    if i % 2",Incomplete Answer,Loops
Create a python program to print the square root of an integer.,,"def square_root(n):
    """"""This function takes an integer n and prints its square root.
    
    Args:
        n (int): The integer to calculate the square root of.
    
    Returns:
        None
    """"""
    import math
    print(math.sqrt(n))","def square_root(n:
    """"""This function takes an integer n and prints its square root.
    
    Args:
        n (int: The integer to calculate the square root of.
    
    Returns:
        None
    """"""
    import math
    print(math.sqrt(n",Syntax Error,OOP
Create a Python program that sorts a list of tuples by the second item.,"list_of_tuples = [('Apple', 2), ('Orange', 1), ('Banana', 3), ('Grape', 4)]","def sort_by_second_item(list_of_tuples):
  return sorted(list_of_tuples, key=lambda item: item[1])

sorted_list = sort_by_second_item(list_of_tuples)
print(sorted_list)

# Output: [('Orange', 1), ('Apple', 2), ('Banana', 3), ('Grape', 4)]","def sort_by_second_item(list_of_tuples):
  return sorted(list_of_tuples, key=lambda item: item[1])

sorted_list = sort_by_second_item(list_of_tuples)
print(sorted_list)

# Output: [('Orange', 1), ('Apple', 2), ('Banana', 3), ('Grape', 4)]",correct,Recursion
Write a Python program to search for an item in a list.,,"def search_list(lst, elem):
  for i in range(len(lst)): 
    if lst[i] == elem: 
      return i 
  return -1","def search_list(lst, elem):
  for i in range(len(lst))",Incomplete Answer,Recursion
Write a python function to find the position of the last removed element from the given array.,,"import math as mt 
def get_Position(a,n,m): 
    for i in range(n): 
        a[i] = (a[i] // m + (a[i] % m != 0))  
    result,maxx = -1,-1
    for i in range(n - 1,-1,-1): 
        if (maxx < a[i]): 
            maxx = a[i] 
            result = i 
    return result + 1","import math as mt 
def get_Position(a,n,m): 
    for i in range(n): 
        a[i] = (a[i] // m + (a[i] % m != 0))  
    result,maxx = -1",Incomplete Answer,File I/O
Create a class in Python for representing a Stack data structure. The class should support two methods: push and pop.,,"class Stack:
 def __init__(self):
  self._items = []

 def push(self, item):
  self._items.append(item)

 def pop(self):
  return self._items.pop()","class Stack:
 def __init__(self:
  self._items = []

 def push(self, item:
  self._items.append(item

 def pop(self:
  return self._items.pop(",Syntax Error,Recursion
Write a Python program to generate a HTML table with a list of employees.,"Employee list: John, Kate, Mark","employee_list = [""John"", ""Kate"", ""Mark""]

html = ""<table>\n<tr>"";
for employee in employee_list:
  html += ""<td>""+employee+""</td>\n"";
html += ""</tr>\n</table>""

print(html)","employee_list = [""John"", ""Kate"", ""Mark""]

html = ""<table>\n<tr>"";
for employee in employee_list
  html += ""<td>""+employee+""</td>\n"";
html += ""</tr>\n</table>""

print(html)",Syntax Error,String Manipulation
"Generate a class in Python that represents a data record. The class should have three fields: name (string), age (integer) and gender (string).",,"class DataRecord:
 def __init__(self, name, age, gender):
 self.name = name
 self.age = age
 self.gender = gender","class DataRecord:
 def __init__(self, name, age, gender):
 self.name = name
 self.age = age
 self.gender = gender",correct,String Manipulation
Create a Python program to compute the value of the Fibonacci number at a specified position,,"def fibonacci(n):
    if n == 0 or n == 1:
        return n
    else:
        return fibonacci(n-1) + fibonacci(n-2)","def fibonacci(n):
    if n == 0 or n == 1:
        return n
    else:
        return fibonacci(n-1) + fibonacci(n-2)",correct,String Manipulation
Write some python code that prints out the following information,"Student marks in a class: [{'name': 'John', 'mark': 75}, {'name': 'Alex', 'mark': 92}, {'name': 'Tiffany', 'mark': 83}, {'name': 'Eddie', 'mark': 67}]","student_scores = [{'name': 'John', 'mark': 75}, {'name': 'Alex', 'mark': 92}, {'name': 'Tiffany', 'mark': 83}, {'name': 'Eddie', 'mark': 67}]

for student in student_scores:
    print(f'Name: {student[""name""]}, Mark: {student[""mark""]}')","student_scores = [{'name': 'John', 'mark': 75}, {'name': 'Alex', 'mark': 92}, {'name': 'Tiffany', 'mark': 83}, {'name': 'Eddie', 'mark': 67}]

for student in student_scores:
    pritn(f'Name: {student[""name""]}, Mark: {student[""mark""]}')",Syntax Error,Loops
Write a Python program to detect and remove the duplicates in a list.,"The list is [1, 20, 4, 6, 20, 4, 1, 6].","def remove_duplicates(lst): 
    return list(dict.fromkeys(lst)) 
  
lst = [1, 20, 4, 6, 20, 4, 1, 6] 
print(remove_duplicates(lst))","def remove_duplicates(lst): 
    return list(dict.fromkeys(lst)) 
",Incomplete Answer,OOP
Write a function to zip two given lists of lists.,,"def zip_list(list1,list2):  
 result = list(map(list.__add__, list1, list2)) 
 return result","def zip_list(list1,list2:  
 result = list(map(list.__add__, list1, list2 
 return result",Syntax Error,Recursion
Provide a function in Python for squaring all elements of a given array.,"list = [1, 2, 3, 4]","def square_elements(arr):
    return [num**2 for num in arr]","def square_elements(arr):
    return [num**2 for num in arr]",correct,File I/O
Create a program in Python to calculate the Euclidean distance between two points.,"x1 = 2
y1 = 3
x2 = 6
y2 = 8","import math

x1 = 2
y1 = 3
x2 = 6
y2 = 8
distance = math.sqrt( (x2 - x1)**2 + (y2 - y1)**2 )

print(distance)","import math

x1 = 2
y1 = 3
x2 = 6
y2 = 8
distance = math.sqrt( (x2 - x1)**2 + (y2 - y1)**2 )

print(distance)",correct,OOP
Develop a Python program that accepts a list of numbers and prints the 2nd largest and the 3rd smallest elements from the list.,"[3, 5, 2, 4, 9, 7]","def main():
 numbers = [3, 5, 2, 4, 9, 7]
 numbers.sort()
 
 print('The 2nd largest number is', numbers[-2])
 print('The 3rd smallest number is', numbers[2])
 
if __name__ == '__main__':
 main()","def main():
 numbers = [3, 5, 2, 4, 9, 7]
 numbers.sort()
 
 print('The 2nd largest number is', numbers[-2])
 print('The 3rd smallest number is', numbers[2])
 
if __name__ == '__main__':
 main()",correct,File I/O
Write a python program that displays all prime numbers up to 100,,"# Print all prime numbers up to 100

for num in range(2,101):  
   if all(num%i!=0 for i in range(2,num)):
      print(num)","# Print all prime numbers up to 100

for num in range(2,101):  
   if all(num%i!=0 for i in range(2,num)):
      print(name, num)",Syntax Error,Recursion
Generate a for loop to iterate over a list of numbers and write the output using python.,"[1, 2, 3, 4, 5]","for num in [1, 2, 3, 4, 5]:
    print(num)","for num in [1, 2, 3, 4, 5]:
    pritn(num)",Syntax Error,OOP
Create an optimization problem in Python and finds the solution using a numerical solver.,,"from scipy.optimize import minimize

def objFun(x):
  return (x[0] - 1)**2 + (x[1] - 4)**2

x0 = [0,0]

opt = minimize(objFun, x0)

print(opt)

# Output is a OptimizeResult object
# x: array([1., 4.])","from scipy.optimize import minimize

def objFun(x):
  return (x[0] - 1)**2 + (x[1] - 4)**2

x0 = [0,0]

opt = minimize(objFun, x0)

print(opt)

# Output is a OptimizeResult object
# x: array([1., 4.])",correct,Loops
Implement Bubble Sort using Python.,"[6, 2, 5, 1, 8]","def bubble_sort(arr):
    for i in range(len(arr)):
		for j in range(len(arr)-1-i):
			if arr[j] > arr[j+1]:
				temp = arr[j]
				arr[j] = arr[j+1]
				arr[j+1] = temp
				
arr = [6, 2, 5, 1, 8]

bubble_sort(arr)

print(arr)","def bubble_sort(arr):
    for i in range(len(arr)):
		for j in range(len(arr)-1-i):
			if arr[j] > arr[j+1]:
				temp = arr[j]
				arr[j] = arr[j+1]
				arr[j+1] = temp
				
arr = [6, 2, 5, 1, 8]

bubble_sort(arr)

pritn(arr)",Syntax Error,Recursion
"Change the following Pythoncode to display ""Hello, World!"" on the web page:","print(""Hello, World!"")","from flask import Flask
app = Flask(__name__)

@app.route(""/"")
def hello():
	return ""Hello, World!""

if __name__ == ""__main__"":
	app.run()","from flask import Flask
app = Flask(__name__

@app.route(""/""
def hello(:
	return ""Hello, World!""

if __name__ == ""__main__"":
	app.run(",Syntax Error,String Manipulation
Write a function to remove duplicates from a list of lists.,,"import itertools
def remove_duplicate(list1):
 list.sort(list1)
 remove_duplicate = list(list1 for list1,_ in itertools.groupby(list1))
 return remove_duplicate","import itertools
def remove_duplicate(list1):
 list.sort(list1)
 remove_duplica",Incomplete Answer,File I/O
Create a Python function to format a string with the proper case and punctuation,"string=""hello, world""","def format_string(string):
    """"""Function to format a string with the proper case and punctuation""""""
    return string.lower().capitalize() + "".""","def format_string(string):
    """"""Function to format a string with the pr",Incomplete Answer,Loops
Design a linear regression algorithm in Python,,"def linear_regression(X,Y):
    n = len(X)
    sumx = sum([x**2 for x in X])
    sumy = sum([y**2 for y in Y])
    sumxy = sum([x*y for x,y in zip(X,Y)])
    # calculate slope 
    m = (n*sumxy - sum(X)*sum(Y))/(n*sumx - sum(X)**2) 
    # calculate intercept  
    c = sum(Y)/n - (m*sum(X))/n 
  
    return m, c","def linear_regression(X,Y):
    n = len(X)
    sumx = sum([x**2 for x in X])
    sumy = sum([y**2 for y in Y])
    sumxy = sum([x*y for x,y in zip(X,Y)])
    # calculate slope 
    m = (n*sumxy - sum(X)*sum(Y))/(n*sumx - sum(X)**2) 
    # calculate intercept  
    c = sum(Y)/n - (m*sum(X))/n 
  
    return m, c",correct,String Manipulation
Create a program in Python to sum the multiples of 3 or 5 between 1 and 1000,,"total = 0

for i in range(1,1000):
    if i % 3 == 0 or i % 5 == 0:
        total += i

print(total)","total = 0

for i in range(1,1000):
    if i % 3 ==",Incomplete Answer,File I/O
Write a Python function to find the difference between two given dates in days.,,"from datetime import datetime

def find_difference_in_days(date1, date2):
    date1 = datetime.strptime(date1, '%Y-%m-%d')
    date2 = datetime.strptime(date2, '%Y-%m-%d')
    return abs((date2 - date1).days)","from datetime import datetime

def find_difference_in_days(date1, date2):
    date1 = datetime.strptime(date1, '%Y-%m-%d')
    date2 = datetime.strptime(date2, '%Y-%m-%d')
    return abs((date2 - date1).days)",correct,File I/O
"Create a function in Python to calculate the sum of squares for all numbers within a range given two integers, n and m.","n = 4
m = 6","def sum_of_squares(n, m):
    result = 0
    for i in range(n, m+1):
        result += i*i
    return result
  
print(sum_of_squares(n, m))","def sum_of_squares(n, m):
    result = 0
    for i in range(n, m+1):
        result += i*i
    return result
  
print(sum_of_squares(n, m))",correct,String Manipulation
Create a Python program to print a given string with each character's ASCII code.,Hello world!,"def print_ascii(text):
    '''This function will print a given string with each character's ASCII code.'''
    for ch in text:
        print(f'{ch} : {ord(ch)}')

print_ascii('Hello world!')

# Output:
# H : 72
# e : 101
# l : 108
# l : 108
# o : 111
#  : 32
# w : 119
# o : 111
# r : 114
# l : 108
# d : 100
# ! : 33","def pritn_ascii(text):
    '''This function will pritn a given string with each character's ASCII code.'''
    for ch in text:
        pritn(f'{ch} : {ord(ch)}')

pritn_ascii('Hello world!')

# Output:
# H : 72
# e : 101
# l : 108
# l : 108
# o : 111
#  : 32
# w : 119
# o : 111
# r : 114
# l : 108
# d : 100
# ! : 33",Syntax Error,Recursion
Write a Python program that takes a list of strings as input and prints out all the strings in sorted order.,,"def sort_list_of_strings(list_of_strings):
    list_of_strings.sort()
    for string in list_of_strings:
        print(string)","def sort_list_of_strings(list_of_strings)
    list_of_strings.sort()
    for string in list_of_strings
        print(string)",Syntax Error,File I/O
Develop a python code to compute the sum of digits in an integer.,1234,"def sum_digits(n):
    s = 0
    while (n > 0):
        s = s + n % 10
        n = n//10
    return s

n = 1234
print(sum_digits(n))","def sum_digits(n):
s = 0
while (n > 0):
    s = s + n % 10
    n = n//10
return s

n = 1234
print(sum_digits(n))",Syntax Error,File I/O
Create a function in Python that takes in a list of integers and prints out the largest multiple of 3.,"List: [3, 15, 4, 6, 5]","def largestMultipleOf3(list): 
    list.sort() 
    running_sum = 0
    for i in range(len(list)): 
        running_sum += list[i] 

    if running_sum % 3 == 0:  
        return running_sum  

    return largestMultipleOf3(list[:-1]) 

list = [3, 15, 4, 6, 5] 
print(largestMultipleOf3(list)) // 15","def largestMultipleOf3(list): 
    list.sort() 
    running_sum = 0
    for i in range(len(list)): 
        running_sum += list[i] 

    if running_s",Incomplete Answer,OOP
Write a function to check whether the given month number contains 30 days or not.,,"def check_monthnumber_number(monthnum3):
  if(monthnum3==4 or monthnum3==6 or monthnum3==9 or monthnum3==11):
    return True
  else:
    return False","def check_monthnumber_number(monthnum3):
  if(monthnum3==4 or monthnum3==6 or monthnum3==9 or monthnum3==11):
    return True
  else:
    return False",correct,Recursion
Create a table in python using a dictionary,,"table = {
    ""Column1"": [1, 2, 3],
    ""Column2"": [""A"", ""B"", ""C""],
    ""Column3"": [True, False, False]
    }","table = {
    ""Column1"": [1, 2, 3],
    ""Column2"": [""A",Incomplete Answer,String Manipulation
Suggest a completion for processing a web form using Python.,"import requests

# Get form's (POST) data
data = {
  ""name"": ""John Doe"",
  ""email"": ""john.doe@example.com"",
  ""message"": ""Hello""
}","import requests

# Get form's (POST) data
data = {
  ""name"": ""John Doe"",
  ""email"": ""john.doe@example.com"",
  ""message"": ""Hello""
}

# Send POST request
r = requests.post(""http://www.example.com/submit-form.php"", params=data)

# Get web form's response
print(r.text)","import requests

# Get form's (POST) data
data = {
  ""name"": ""John Doe"",
  ""email"": ""john.doe@example.com"",
  ""message"": ""Hello""
}

# Send POST request
r = requests.post(""http://www.example.com/submit-form.php"", params=data)

# Get web form's response
print(r.text)",correct,String Manipulation
Write a function to count the number of syllables in a word using regular expression in Python?,,"import re

def count_syllables(word):
  pattern = r'[aeiouy]+'
  return len(re.findall(pattern, word))

print(count_syllables('syllable'))  # 3
print(count_syllables('balloons'))  # 2","import re

def count_syllables(word):
  pattern = r'[aeiouy]+'
  return len(re.findall(pattern, word))

print(count_syllables('syllable'))  # 3
print(count_syllables('balloons'))  # 2",correct,Recursion
Generate a Python program to classify a given set of data,"Given a dataset containing information about temperature and humidity, classify whether the day is raining or not","def classify_rain(temp, humidity):
    if temp < 70 and humidity > 0.7:
        return 'raining'
    else:
        return 'not raining'","def classify_rain(temp, humidity):
    if temp < 70 and humidity > 0.7:
        return 'raining'
    else:
        return 'not raining'",correct,OOP
Generate a random alphanumeric string in Python of length 10.,,"import random 

alphanumeric_string = ''.join(random.choices(string.ascii_letters + string.digits, k=10))

print(alphanumeric_string)","import random 

alphanumeric_string = ''.join(random.choices(string.ascii_letters + string.digits, k=10))

print(alphanumeric_string)",correct,OOP
Design a program in Python that calculates the area of a triangle given the three side lengths.,,"def area_triangle(a, b, c): 
    # calculate the semi-perimeter 
    s = (a + b + c)/2
  
    # calculate the area 
    Area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
  
    return Area","def area_triangle(a, b, c): 
    # calculate the semi-perimeter 
    s = (a + b + c)/2
  
    # calculate the area 
    Area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
  
    return Area",correct,Recursion
"Generate a Python class for an address book program. The class should contain methods for adding a new person's name, phone number and email, and editing an existing contact.",,"class AddressBook:
 def __init__(self):
 self.people = {}

 def add_person(self, name):
 self.people[name] = { 'phone': None, 'email': None }
 
 def edit_person(self, name, phone=None, email=None):
 person = self.people[name]
 if phone: 
 person['phone'] = phone
 if email:
 person['email'] = email","class AddressBook:
 def __init__(self):
 self.people = {}

 def add_person(self, name):
 self.people[name] = { 'phone': None, 'email': None }
 
 def edit_person(self, name, phone=None, email=None):
 person = self.people[name]
 if phone: 
 person['phone'] = phone
 if email:
 person['email'] = email",correct,OOP
"Develop a Python program to generate a Fibonacci series up to nth element, where n is an input.",10,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Driver Program 
  
print(fibonacci(10))","def fibonacci(n) 
    a = 0
    b = 1
    if n < 0 
        print(""Incorrect input"") 
    elif n == 0 
        return a 
    elif n == 1 
        return b 
    else 
        for i in range(2,n) 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Driver Program 
  
print(fibonacci(10))",Syntax Error,OOP
Can you develop a Python class to calculate the cross entropy loss between two probability distributions?,,"import numpy as np

class CrossEntropy:
    def __init__(self):
        pass
    
    def loss(self, p, q):
        return - np.sum(p * np.log(q))","import numpy as np

class CrossEntropy:
    def __init__(self):
        p",Incomplete Answer,Loops
Write Python code to read input from the user and output a greeting in the form of 'Hello <Name>!',,"name = input('What is your name? ')
print(f'Hello {name}!')",name = input('What is your na,Incomplete Answer,OOP
Create a Python program to read a string and return the character with the highest frequency.,Sample string,"import collections

str = ""Sample string""
count = collections.Counter(str)
highest_freq = 0
highest_freq_char = ''

for char, value in count.items():
    if value > highest_freq:
        highest_freq = value
        highest_freq_char = char

print(""The character {} has the highest frequency of {} in this string"".format(highest_freq_char, highest_freq))","import collections

str = ""Sample string""
count = collections.Counter(str)
highest_freq = 0
highest_freq_char = ''

for char, value in count.items():
    if value > highest_freq",Incomplete Answer,Recursion
Write a Python program to reverse a string without using reversed() function.,,"def reverse_string(input_string):
    # Initialize a new_string
    new_string = """"

    # Traverse in the string starting from the end
    for i in range(len(input_string)-1,-1,-1):
        # Append each character to the new_string
        new_string = new_string + input_string[i]

    # Return the reversed_string
    return new_string","def reverse_string(input_string:
    # Initialize a new_string
    new_string = """"

    # Traverse in the string starting from the end
    for i in range(len(input_string-1,-1,-1:
        # Append each character to the new_string
        new_string = new_string + input_string[i]

    # Return the reversed_string
    return new_string",Syntax Error,File I/O
Write a function to convert the given decimal number to its binary equivalent.,,"def decimal_to_binary(n): 
    return bin(n).replace(""0b"","""") ","def decimal_to_binary(n): 
    return bin(n).replace(""0b"","""") ",Syntax Error,OOP
Create a Python script to read data from a database.,Table Name: 'customers',"import psycopg2

connection = psycopg2.connect(database='dbname', user='user', password='password', host='localhost', port='5432')

cursor = connection.cursor()

cursor.execute('SELECT * FROM customers')

rows = cursor.fetchall()

for row in rows:
    print(row)
    
cursor.close()","import psycopg2

connection = psycopg2.connect(database='dbname', user='user', password='password', host='localhost', port='5432'

cursor = connection.cursor(

cursor.execute('SELECT * FROM customers'

rows = cursor.fetchall(

for row in rows:
    print(row
    
cursor.close(",Syntax Error,Loops
Write a function to get the sum of a non-negative integer.,,"def sum_digits(n):
  if n == 0:
    return 0
  else:
    return n % 10 + sum_digits(int(n / 10))","def sum_digits(n):
  if n == 0:
    return 0
  else:
    return n % 10 + sum_digits(int(n / 10))",Syntax Error,Recursion
Develop a simple game loop in Python.,,"while True:
    # Show game board
    print(""Welcome to your game!"")
	
    # Get user input
    user_action = input('What would you like to do? ')
	
    # Process user input
    if user_action == 'quit':
        break
		
    # Do something with user input
    elif user_action == 'play':
        print('Playing...')
    else:
        print('Invalid input.')","while True:
    # Show game board
    print(""Welcome to your game!"")
	
    # Get user input
    user_action = input('What would you like to do? ')
	
    # Process user input
    ",Incomplete Answer,Recursion
Create a Python script to connect to a domain and fetch the contents of its homepage,,"import requests

url = ""https://www.example.com/"" 
response = requests.get(url) 

if response.status_code == 200: 
    print(response.content) 
else:
    print(""Error fetching the page"")","import requests

url = ""https://www.example.com/"" 
response = requests.get(url) 

if response.status_code == 200: 
    pritn(response.content) 
else:
    pritn(""Error fetching the page"")",Syntax Error,Recursion
Write a function to perform index wise multiplication of tuple elements in the given two tuples.,,"def index_multiplication(test_tup1, test_tup2):
  res = tuple(tuple(a * b for a, b in zip(tup1, tup2))
   for tup1, tup2 in zip(test_tup1, test_tup2))
  return (res) ","def index_multiplication(test_tup1, test_tup2:
  res = tuple(tuple(a * b for a, b in zip(tup1, tup2
   for tup1, tup2 in zip(test_tup1, test_tup2
  return (res ",Syntax Error,String Manipulation
Enhance an existing python program to include a function,"def hello():
    print(""Hello world!"")","def hello():
    print(""Hello world!"")

def goodbye():
    print(""Goodbye!"")

def greetings():
    hello()
    goodbye()

greetings()","def hello(:
    print(""Hello world!""

def goodbye(:
    print(""Goodbye!""

def greetings(:
    hello(
    goodbye(

greetings(",Syntax Error,OOP
"Develop a Python program that prints ""Hello, World!"" whenever it is run.",,"#Python program to print ""Hello World!""

print(""Hello, World!"")","#Python program to print ""Hello",Incomplete Answer,File I/O
"Rewrite the following code snippet from Python to JavaScript, taking into account any changes in syntax or function calls.

m = ""Hello, World!""
print(m)",,"let m = 'Hello, World!';
console.log(m);","let m = 'Hello, World!';
console.log(m);",correct,String Manipulation
Write a Python program to generate an SQL query from a given set of parameters.,"Table Name: users

Fields: id, name, age

Filter: age > 18","def generate_sql_query(table_name, fields, filter_clause):
 query = ""SELECT ""
 for i in range(len(fields)-1):
 query += fields[i] + "", ""
 query += fields[-1]
 query += "" FROM "" + table_name + "" WHERE "" + filter_clause
 return query","def generate_sql_query(table_name, fields, filter_clause):
 query = ""SELECT ""
 for i in range(len(fields)-1):
 query += fields[i] + "", ""
 query += fields[-1]
 query += "" FROM "" + table_name + "" WHERE "" + filter_clause
 return query",Syntax Error,String Manipulation
Implement a bubble sorting algorithm in Python.,,"def bubbleSort(arr): 
    n = len(arr) 
  
    # Traverse through all array elements 
    for i in range(n): 
  
        # Last i elements are already in place 
        for j in range(0, n-i-1): 
  
            # traverse the array from 0 to n-i-1 
            # Swap if the element found is greater 
            # than the next element 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]","def bubbleSort(arr): 
    n = len(arr) 
  
    # Traverse through all array elements 
    for i in range(n): 
  
        # Last i elements are already in place 
        for j in range(0, n-i-1): 
  
            # traverse the array from 0 to n-i-1 
            # Swap if the element found is greater 
            # than the next element 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]",Syntax Error,OOP
Write a Python program to generate a Pascal's triangle with a given number of rows.,Number of Rows = 8,"1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1 
1 5 10 10 5 1 
1 6 15 20 15 6 1 
1 7 21 35 35 21 7 1","1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1 
1 5 10 1",Incomplete Answer,String Manipulation
Create a python function that takes in two strings and output their combined length.,"string_1 = ""Hello""
string_2 = ""World""","def get_string_length(string_1, string_2):
    return len(string_1 + string_2)","def get_string_length(string_1, string_",Incomplete Answer,File I/O
Write a python code to,Extract the mean from a list of numbers.,"def mean(lst):
    total = 0
    for x in lst:
        total += x
    return total / len(lst)","def mean(lst):
    total = 0
    for x in lst:",Incomplete Answer,Loops
Write a python program to print out the sum of numbers up to an inputted number.,,"def sum_up(n):
    sum = 0
    for i in range(n + 1):
        sum += i
    return sum

num = int(input(""Enter a number: ""))
print(""Sum of numbers up to"", num, ""is"", sum_up(num))","def sum_up(n):
    sum = 0
    for i in range(n + 1):
        sum += i
    return sum

num = int(input(""Enter a number: ""))
print(name, ""Sum of numbers up to"", num, ""is"", sum_up(num))",Syntax Error,File I/O
"Create a function in Python to find all elements in a list that are negative, and print them.","list = [-3, 0, 5, -9, 8]","def find_negatives(l):
  negative_numbers = []
  for num in l:
    if num < 0:
      negative_numbers.append(num)
  print(negative_numbers)

find_negatives(list) # prints [-3, -9]","def find_negatives(l):
  negative_numbers = []
  for num in l:
    if num < 0:
      nega",Incomplete Answer,File I/O
Write a Python program to sort a dictionary by its keys.,"d = {'a': 24, 'g': 52, 'c': 13}","def sort_dict_keys(d):
  sorted_keys = sorted(d.keys())
  sorted_dict = {key: d[key] for key in sorted_keys}
  return sorted_dict","def sort_dict_keys(d):
  sorted_keys = sorted(d.keys())
  sorted_dict = {key: d[key] for key in sorted_keys}
  return sorted_dict",correct,OOP
Write a Python program to search a given string for any repeated characters.,"""AAAAB""","def find_repeat_characters(string):
 repeat_characters = set()
 for char in string:
 if string.count(char) > 1 and char not in repeat_characters:
 repeat_characters.add(char)
 return repeat_characters

string = 'AAAAB'
print(find_repeat_characters(string)) # {'A'}","def find_repeat_characters(string):
 repeat_characters = set()
 for char in string:
 if string.count(char) > 1 and char not in repeat_characters:
 repeat_characters.add(char)
 return repeat_characters

string = 'AAAAB'
print(find_repeat_characters(string)) # {'A'}",correct,String Manipulation
Write a Python program that takes two numbers and prints their multiplication table.,,"def multiplicationTable(a, b):
    for i in range(1, b+1):
        print(""{} x {} = {}"".format(a, i, a * i))


multiplicationTable(9, 10) #prints a multiplication table for 9 and 10","def multiplicationTable(a, b):
    for i in range(1, b+1):
        print(""{} x {} = {}"".fo",Incomplete Answer,String Manipulation
Write a function to compute maximum product of three numbers of a given array of integers using heap queue algorithm.,,"def maximum_product(nums):
    import heapq
    a, b = heapq.nlargest(3, nums), heapq.nsmallest(2, nums)
    return max(a[0] * a[1] * a[2], a[0] * b[0] * b[1])","def maximum_product(nums):
    import heapq
    a, b = heapq.nlargest(3, nums),",Incomplete Answer,File I/O
Write a Python program to reduce the given array into a single element.,"arr = [1, 2, 3, 4]","def reduce_arr(arr):
    result = 0
    for i in arr:
        result += i
    return result

reduce_arr(arr)","def reduce_arr(arr):
    result = 0
    for i in arr:
        result += i
    return result

reduce_arr(arr)",correct,Loops
Create a Python script to extract the title of a web page.,<url>,"import requests
from bs4 import BeautifulSoup

# Function to extract the title of a web page
def extract_title(url):
    response = requests.get(url)
    html = response.text

    soup = BeautifulSoup(html, 'html.parser')
    return soup.title.string

url = 'https://www.example.com'
title = extract_title(url)
print(title)  # Output 'Example Domain'","import requests
from bs4 import BeautifulSoup

# Function to extract the title of a web page
def extract_title(url:
    response = requests.get(url
    html = response.text

    soup = BeautifulSoup(html, 'html.parser'
    return soup.title.string

url = 'https://www.example.com'
title = extract_title(url
print(title  # Output 'Example Domain'",Syntax Error,File I/O
Write a Python function that takes a list of strings and checks if all the strings have the same length.,,"def check_strings_lengths(string_list):
    string_length = len(string_list[0])

    for string in string_list:
        if len(string) != string_length:
            return False

    return True","def check_strings_lengths(string_list):
    string_length = len(string_list[0])

    for string in string_list:
        if len(string) != string_length:
            return False

    return True",correct,OOP
Rewrite the given code in Python.,"int sum = 0
for (int i=0; i<n; i++)
    sum += i;","sum = 0
for i in range(n):
    sum += i","sum = 0
for i in ra",Incomplete Answer,Loops
Create a function in Python that takes a list of strings as parameter and outputs a new list with each string sorted in alphabetical order,"[‘apple’, ‘mango’, ‘orange’]","def sort_list(a_list):
 '''
 Sort the given list of strings in alphabetical order

 Args:
 a_list (list): List of strings

 Returns:
 list: Returns the sorted list in alphabetical order
 '''

 return sorted(a_list)","def sort_list(a_list):
 '''
 Sort the given list of strings in alphabetical order

 Args:
 a_list (list): L",Incomplete Answer,OOP
Construct a regex pattern in Python to detect URLs.,,"import re

url_pattern = re.compile(
    r'^(?:http|ftp)s?://' # http:// or https://
    r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\.)+(?:[A-Z]{2,6}\.?|[A-Z0-9-]{2,}\.?)|' #domain...
    r'localhost|' #localhost...
    r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})' # ...or ip
    r'(?::\d+)?' # optional port
    r'(?:/?|[/?]\S+)$', re.IGNORECASE)","import re

url_pattern = re.compile(
    r'^(?:http|ftp)s?://' # http:// or https://
    r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\.)+(?:[A-Z]{2,6}\.?|[A-Z0-9-]{2,}\.?)|' #domain...
    r'localhost|' #localhost...
    r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})' # ...or ip
    r'(?::\d+)?' # optional port
    r'(?:/?|[/?]\S+)$', re.IGNORECASE)",Syntax Error,OOP
Create a function in Python that takes four parameters and returns the highest value.,,"def get_highest(val1, val2, val3, val4):
 return max([val1, val2, val3, val4])","def get_highest(val1, val2, val3, val4):
 return max([val1, val2, val3, val4])",correct,File I/O
Generate a list of unique strings with length of 8 bytes in Python.,,"import random
import string

def generate_list_of_strings(length, count):
    result = []
    for _ in range(count):
        result.append(''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length)))
    return result

if __name__ == '__main__':
    strings_list = generate_list_of_strings(8, 10)
    print(""Randomly generated strings:"")
    print(strings_list)","import random
import string

def generate_list_of_strings(length, count):
    result = []
    for _ in range(count):
        result.append(''.join(random.choice(string.ascii_letters + string.d",Incomplete Answer,File I/O
"Create a Python class called Person that includes parameters for a person's name, age, gender, and nationality.",,"class Person:
 def __init__(self, name, age, gender, nationality):
   self.name = name 
   self.age = age
   self.gender = gender
   self.nationality = nationality

def get_name(self):
   return self.name

def get_age(self):
   return self.age

def get_gender(self):
   return self.gender

def get_nationality(self):
   return self.nationality","class Person:
 def __init__(self, name, age, gender, nationality):
   self.name = name 
   self.age = age
   self.gender = gender
   self.nationality = nationality

def get_name(self):
   return self.name

def get_age(self):
   return self.age

def get_gender(self):
   return self.gender

def get_nationality(self):
   return self.nationality",correct,File I/O
"Using Python, generate a random 8 character alphanumeric string.",,"import random
import string

def generate_random_string():
    letters_and_digits = string.ascii_letters + string.digits
    return ''.join((random.choice(letters_and_digits) for i in range(8)))

random_string = generate_random_string()
print(random_string)","import random
import string

def generate_random_string():
    letters_and_digits = string.ascii_letters + string.digits
    return ''.join((random.choice(letters_and_digits) for i in range(8)))

random_string = generate_random_string()
print(random_string)",correct,Recursion
Write a Python program to print the count of all even numbers in the given list.,"my_list = [1, 2, 3, 4, 5, 6, 7, 8]","my_list = [1, 2, 3, 4, 5, 6, 7, 8]

count = 0
for i in my_list:
    if i % 2 == 0:
        count += 1

print(count)","my_list = [1, 2, 3, 4, 5, 6, 7, 8]

count = 0
for i in my_list:
    if i % 2 == 0:
        count += 1

print(count",Syntax Error,Loops
Write a Python function to compute the factorial of an integer.,4,"def factorial(n):
    if n < 0:
        print('Factorial does not exist for a negative number.')
    elif n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)


print(factorial(4))","def factorial(n):
    if n < 0:
        print('Factorial does not exist for a negative number.')
    elif n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)


print(factorial(4))",correct,Recursion
Create a program to convert a text document to an HTML webpage using Python.,"Text document with contents ""This is a sample document"".","from bs4 import BeautifulSoup

# Read and parse the document
with open('sample.txt', 'r') as file:
  content = file.read()

# Create the HTML
soup = BeautifulSoup(content, 'html.parser')
html_content = soup.prettify()

# Write to the file
with open('sample.html', 'w') as file:
  file.write(html_content)","from bs4 import BeautifulSoup

# Read and parse the document
with open('sample.txt', 'r') as file:
  content = file.read()

# Create the HTML
soup = Bea",Incomplete Answer,Recursion
Write a python program to convert a string to the list of words.,"""Hello, World!""","def string_to_list(string):
    return string.split()","def string_to_list(string):
    return string.split()",correct,OOP
Create a List of all the alphabet letters in Python.,,"alphabet = [""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o"", ""p"", ""q"", ""r"", ""s"", ""t"", ""u"", ""v"", ""w"", ""x"", ""y"", ""z""]","alphabet = [""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o"", ""p"", ""q"", ""r"", ""s"", ""t"", ""u"", ""v"", ""w"", ""x"", ""y"", ""z""]",correct,OOP
Create a function in Python to print all numbers from N to 1 in reverse order.,,"def reverse_print(n):
    for i in range(n, 0, -1):
        print(i)

n = 5
reverse_print(n)","def reverse_print(n):
    for i in range(n, 0, -1):
        print(i)

n = 5
reverse_print(n)",correct,String Manipulation
Implement a function in Python that takes a list of string and sorts them alphabetically.,"[""apple"", ""banana"", ""mango"", ""pear""]","def sortStrings(wordsList):
    sorted_list = sorted(wordsList)
    return sorted_list
 
wordsList = [""apple"", ""banana"", ""mango"", ""pear""]
sorted_words = sortStrings(wordsList)
print(sorted_words)","def sortStrings(wordsList)
    sorted_list = sorted(wordsList)
    return sorted_list
 
wordsList = [""apple"", ""banana"", ""mango"", ""pear""]
sorted_words = sortStrings(wordsList)
print(sorted_words)",Syntax Error,Recursion
Create an algorithm in Python that computes the sum of an array,"[10, 20, 30, 40]","def array_sum(arr):
    sum = 0
    for num in arr:
        sum += num
    return sum

print(array_sum([10, 20, 30, 40]))

# Output: 100","def array_sum(arr):
    sum = 0
    for num in arr:
        sum += n",Incomplete Answer,File I/O
Write a Python program to check if a number is a palindrome.,,"def is_palindrome(num):
    temp = num
    rev = 0
    
    while (temp > 0):
        dig = temp % 10
        rev = rev * 10 + dig
        temp = temp // 10
    
    if (num == rev):
        return True
    else:
        return False","def is_palindrome(num):
    temp = num
    rev = 0
    
    while (temp > 0):
        dig = temp % 10
        rev = ",Incomplete Answer,String Manipulation
Format the given string with line breaks and indentations to make it a valid Python code.,for i in range(10) print(i),"for i in range(10):
  print(i)","for i in range(10):
  print(name, i)",Syntax Error,Recursion
Write a Python program that will calculate the correlation between two different datasets.,"Dataset 1:[1,2,3,4,5]
Dataset 2:[2,4,6,8,10]","import numpy as np

data1 = [1,2,3,4,5]
data2 = [2,4,6,8,10]

correlation = np.corrcoef(data1, data2)[0][1]
print(correlation)

# Output
0.98198050606","import numpy as np

data1 = [1,2,3,4,5]
data2 = [2,4,6,8,10]

correlation = np.corrcoef(data1, data2)[0][1]
pritn(correlation)

# Output
0.98198050606",Syntax Error,OOP
Create a Python script to generate the following pattern:,,"for i in range(1,6):
    for j in range(1,i+1):
        print(""*"", end="" "")
    print()","for i in range(1,6):
    for j in range(1,i+1):
        pritn(""*"", end="" "")
    pritn()",Syntax Error,Loops
Analyze a Python program to check if any variable names are longer than 20 characters.,"def some_function(a_variable, short_variable):
  long_variable_name_is_not_good_practice = 1",There is a variable (long_variable_name_is_not_good_practice) with a name that is longer than 20 characters.,There is a variable (long_variable_name_is_not_good_pr,Incomplete Answer,String Manipulation
Write a function to find the largest possible value of k such that k modulo x is y.,,"import sys 
def find_max_val(n, x, y): 
	ans = -sys.maxsize 
	for k in range(n + 1): 
		if (k % x == y): 
			ans = max(ans, k) 
	return (ans if (ans >= 0 and
					ans <= n) else -1) ","import sys 
def find_max_val(n, x, y): 
	ans = -sys.maxsize 
	for k in range(n + 1): 
		if (k % x == y): 
			ans = max(ans, k) 
	return (ans if (ans >= 0 and
					ans <= n) else -1) ",Syntax Error,Loops
Generate an optimized python program for splitting an array into two subarrays with equal sum.,"[1, 2, 3, 4, 5, 6]","def split_array_sum(arr):
  sum_arr = sum(arr)
  half_sum = sum_arr // 2
  current_sum = 0
  left_index = 0
  
  for index, value in enumerate(arr):
    current_sum += value
    if current_sum >= half_sum:
        left_index = index
        break
  
  left_arr = arr[:left_index+1]
  right_arr = arr[left_index+1:]
  return left_arr, right_arr","def split_array_sum(arr)
  sum_arr = sum(arr)
  half_sum = sum_arr // 2
  current_sum = 0
  left_index = 0
  
  for index, value in enumerate(arr)
    current_sum += value
    if current_sum >= half_sum
        left_index = index
        break
  
  left_arr = arr[left_index+1]
  right_arr = arr[left_index+1]
  return left_arr, right_arr",Syntax Error,String Manipulation
Create a Python function to calculate the sum of the list elements.,"[1, 3, 4, 7, 9]","def list_sum(list_in):
 return sum(list_in)

# or
def list_sum(list_in):
 total_sum = 0
 
 for num in list_in:
 total_sum += num
 
 return total_sum","def list_sum(list_in):
 return sum(list_in)

# or
def list_sum(list_in):
 ",Incomplete Answer,Recursion
Create a core library in Python which can be used to create a web application.,,"import flask

app = flask.Flask(__name__)

# Create routes and functions for the web application
@app.route('/')
def index():
    return 'This is the main page of the web application!'","import flask

app = flask.Flask(__name__)

# Create routes and functions for the web applica",Incomplete Answer,String Manipulation
Generate a Python program to search for a substring within a string.,"text = ""This is a sample string."" 
substring = ""sample""","def search_substring(text, substring):
    if substring in text:
        return True
    else:
        return False

result = search_substring(text, substring)
print(result)","def search_substring(text, substring):
if substring in text:
    return True
else:
    return False

result = search_substring(text, substring)
print(result)",Syntax Error,Loops
Edit the following Python program to make it run without any syntax errors.,"def sum(alist)
    total 0
    for i in range alist
        total += i
    return total","def sum(alist):
    total = 0
    for i in alist:
        total += i
    return total","def sum(alist):
    total = 0
    for i in",Incomplete Answer,Recursion
Create a Python program that can detect vowels in a given string.,,"def detect_vowels(inp_str):
    vowels = set(['a', 'e', 'i', 'o', 'u'])
    return [char for char in inp_str if char.lower() in vowels]","def detect_vowels(inp_str):
    vowels = set(['a', 'e', 'i', 'o', '",Incomplete Answer,Loops
Automate the task of checking if an array of numbers is in sorted order using a Python program.,"[2, 3, 6, 4, 8]","def is_sorted(nums):
    for i, num in enumerate(nums[:-1]):
        if num > nums[i + 1]:
            return False
    return True","def is_sorted(nums)
    for i, num in enumerate(nums[-1])
        if num > nums[i + 1]
            return False
    return True",Syntax Error,OOP
"Create a Python dictionary that stores customer data. The keys should be customer ids (strings) and the values should be a tuple containing the customer's name, email, and city.",,"customer_data = {
 '001': ('John', 'john@example.com', 'London'),
 '002': ('Jane', 'jane@example.com', 'New York'),
 '003': ('Bob', 'bob@example.com', 'Los Angeles')
}","customer_data = {
 '001': ('John', 'john@example.com', 'London',
 '002': ('Jane', 'jane@example.com', 'New York',
 '003': ('Bob', 'bob@example.com', 'Los Angeles'
}",Syntax Error,Loops
Create a Python program that takes two numbers as input and prints out the greatest common divisor (GCD) of the two numbers.,"num1 = 8
num2 = 20","def gcd(num1, num2):
    if num2 == 0:
        return num1
    return gcd(num2, num1 % num2)

print(gcd(num1, num2))","def gcd(num1, num2)
    if num2 == 0
        return num1
    return gcd(num2, num1 % num2)

print(gcd(num1, num2))",Syntax Error,String Manipulation
Write a Python program to calculate the mode of the given list of numbers.,"[2, 3, 4, 5, 2, 6, 1, 5]","def find_mode(numbers):
    most_freq = 0
    mode = None

    counts = {}
    for num in numbers:
        if num in counts:
            counts[num] += 1
        else:
            counts[num] = 1
    
    for num in counts:
        if counts[num] > most_freq:
            most_freq = counts[num]
            mode = num
    
    return mode","def find_mode(numbers)
    most_freq = 0
    mode = None

    counts = {}
    for num in numbers
        if num in counts
            counts[num] += 1
        else
            counts[num] = 1
    
    for num in counts
        if counts[num] > most_freq
            most_freq = counts[num]
            mode = num
    
    return mode",Syntax Error,OOP
"In Python, how would you return the last N elements from a list?",,"def last_elements(lst, n):
    return lst[-n:]","def last_elements(lst, ",Incomplete Answer,OOP
Write a Python program to generate a list of random numbers between 1 to 100.,,"import random
 
def random_numbers(n):
   list_num = []
   for i in range(n):
       list_num.append(random.randint(1, 100))
   return list_num

list_num = random_numbers(10) 
print(list_num)","import random
 
def random_numbers(n):
   list_num = []
   for i in range(n):
       list_num.append(random.randint(1, 100))
   return list_num

list_num = random_numbers(10) 
print(list_num)",correct,OOP
Develop a Python function that takes two strings as input and returns the longer string.,"'cat', 'dog'","def longer_string(string1, string2):
    if len(string1) > len(string2):
        return string1
    else:
        return string2","def longer_string(string1, string2):
    if len(string1) > len(string2):
        return string1
    else:
        return string2",correct,String Manipulation
Edit the given Python code to print the multiplication table for given number.,number = 5,"number = 5
for i in range(1, 11): 
    print(number, 'x', i, '=', number*i)","number = 5
for i in range(1, 11): 
print(number, 'x', i, '=', number*i)",Syntax Error,Loops
Design a program in Python to find all words present in a string.,,"def find_words(s):
    words = []
    word = []
    for char in s:
        if char.isalpha():
            word.append(char)
        else:
            if word:
                words.append("""".join(word))
            word = []
    if word:
        words.append("""".join(word))
    return words

if __name__ == '__main__':
    print(find_words(""This is a sample string""))","def find_words(s):
    words = []
    word = []
    for char in s:
        if char.isalpha():
            word.append(char)
        else:
            if word:
                words.append("""".join(word))
            word = []
    if word:
        words.append("""".join(word))
    return words

if __name__ == '__main__':
    print(find_words(""This is a sample string""))",correct,OOP
Generate a valid python program to remove the duplicate elements from a given list.,"[2, 3, 4, 3, 2, 4]","def remove_duplicates(input_list):
    result = []
    for ele in input_list:
        if ele not in result:
            result.append(ele)
    return result","def remove_duplicates(input_list):
    result = []
    for ele in input_list:
        if ele not in result:
            result.append(ele)
    return result",correct,Recursion
Build a Python class to identify if a provided number is prime or composite.,10,"class PrimeNumber:
    def __init__(self, num):
        self.num = num

    def is_prime(self):
        for i in range(2, self.num):
            if(self.num % i == 0):
                return False
        return True

num = 10
obj = PrimeNumber(num)

if obj.is_prime():
    print(""Number is Prime"")
else:
    print(""Number is Composite"")","class PrimeNumber:
    def __init__(self, num:
        self.num = num

    def is_prime(self:
        for i in range(2, self.num:
            if(self.num % i == 0:
                return False
        return True

num = 10
obj = PrimeNumber(num

if obj.is_prime(:
    print(""Number is Prime""
else:
    print(""Number is Composite""",Syntax Error,String Manipulation
"Create a class called ""Person"" using Python, with attributes ""name"", ""age"" and ""country"".",,"class Person:
    def __init__(self, name, age, country):
        self.name = name
        self.age = age
        self.country = country
    def get_name(self):
        return self.name
    def get_age(self):
        return self.age
    def get_country(self):
        return self.country","class Person:
    def __init__(self, name, age, country):
        self.name = name
        self.age = age
        self.country = country
    def get_name(self):
        return self.name
    def get_age(self):
        return self.age
    def get_country(self):
        return self.country",correct,String Manipulation
Write a Python function to calculate the sum of two numbers using recursion.,"x = 5
y = 7","def recursive_sum(x, y):
    if x == 0:
        return y 
    else: 
        return recursive_sum(x - 1, y + 1) 

print(recursive_sum(x, y)) # 12","def recursive_sum(x, y):
    if x == 0:
        return y 
    else: 
   ",Incomplete Answer,String Manipulation
Optimize a program in Python for searching for a string in a list.,"value = 'apple'
list = ['bannanas', 'oranges', 'apple']","def search(value, list):
    for i in range(len(list)):
        if list[i] == value:
            return i
    return -1

value= 'apple'
list = ['bannanas', 'oranges', 'apple']
print(search(value, list))","def search(value, list):
    for i in range(len(list)):
        if list[i] == value:
            retu",Incomplete Answer,String Manipulation
Create a Python class that implements an iterator. The iterator should return the square of whole numbers starting at 0.,.,"class SqrIterator:
    def __init__(self):
        self.n = 0

    def __iter__(self):
        return self

    def __next__(self):
        result = self.n ** 2
        self.n += 1
        return result","class SqrIterator:
    def __init__(self):
        self.n = 0

    def __iter__(self):
        return self

    def __next__(self):
        result = self.n ** 2
        self.n += 1
        return result",Syntax Error,File I/O
Create a custom sorting algorithm in Python that sorts a list of integers from highest to lowest.,"int_list = [8, 5, 9, 3, 4, 6]","def custom_sort(int_list):
  for i in range(len(int_list)): 
    for j in range(i+1, len(int_list)): 
        if int_list[i] < int_list[j]: 
            int_list[i], int_list[j] = int_list[j], int_list[i] 
  return int_list

int_list = [8, 5, 9, 3, 4, 6]

sorted_list = custom_sort(int_list) 
print(""Sorted list: "", sorted_list)","def custom_sort(int_list)
  for i in range(len(int_list)) 
    for j in range(i+1, len(int_list)) 
        if int_list[i] < int_list[j] 
            int_list[i], int_list[j] = int_list[j], int_list[i] 
  return int_list

int_list = [8, 5, 9, 3, 4, 6]

sorted_list = custom_sort(int_list) 
print(""Sorted list "", sorted_list)",Syntax Error,Loops
Generate a Python program that requests a movie title and prints the synopsis of the movie.,Toy Story,"import requests

# Get the movie title from user input
title = input(""Enter a movie title: "")

# Make a request to the OMDb API
url = ""http://www.omdbapi.com/?t="" + title + ""&plot=full&apikey=<YOUR_API_KEY>

response = requests.get(url)
data = response.json()

# Print the synopsis
print(""Synopsis: "" + data[""Plot""])","import requests

# Get the movie title from user input
title = input(""Enter a movie title: "")

# Make a request to the OMDb API
url = ""http://www.omdbapi.com/?t="" + title + ""&plot=full&apikey=<YOUR_API_KEY>

response = requests.get(url)
data = response.json()

# Print the synopsis
pritn(""Synopsis: "" + data[""Plot""])",Syntax Error,File I/O
Create a script in Python to find the square root of a number.,float x = 81.0,"import math
x = 81.0
# calculate the square root
print('The square root of %0.1f is %0.1f'%(x, math.sqrt(x)))","import math
x = 81.0
# calculate the square root
print",Incomplete Answer,Loops
"Suggest a data structure in Python to store the following information about a list of students: Name, Age, Grade.",,"students = [ 
  { 
    'name': 'John Doe', 
    'age': 18, 
    'grade': 'A'
  }, 
  { 
    'name': 'Jane Smith', 
    'age': 16, 
    'grade': 'B'
  } 
]","students = [ 
  { 
    'name': 'John Doe', 
    'age': 18, 
    'grade': 'A'
  }, 
  { 
    'name': 'Jane Smith', 
    'age': 16, 
    'grade': 'B'
  } 
]",correct,Recursion
Develop a lightweight AI model to classify and categorize text.,,"A lightweight AI model can be developed using programming languages such as Python, JavaScript, etc. It will contain code to process text data, extract features, apply a suitable machine learning algorithm and train a model to classify and categorize text.","A lightweight AI model can be developed using programming languages such as Python, JavaScript, etc. It will contain code to process text data, extract features, apply a suitable machine learning algorithm and train a model to classify and categorize text.",Syntax Error,Recursion
Create a Python dictionary from two given lists. The first list contains keys and the second list contains values.,"keys = [1, 2, 3, 4, 5]
values = [4, 5, 6, 7, 8]","dict_from_lists = dict(zip(keys, values))","dict_from_lists = dict(zip(keys, values))",correct,File I/O
Write a Python code to print the items in a dictionary in the order of their occurrence in the dictionary.,"d = {1 : 'Red', 2 : 'Green', 3 : 'Blue'}","for key, value in d.items():
    print(key, value)","for key, value in d.items():
print(key, value)",Syntax Error,Loops
Write a Python program to format a specified string to limit the number of characters to 6.,"""Hello World""","def limit_string(s):
    if len(s) >= 6:
        return s[:6]
    else:
        return s

result = limit_string(""Hello World"")
print(result)","def limit_string(s):
    if len(s) >= 6:
        return s[:6]
    else:
        return s

result = limit_string(""Hello World"")
pritn(result)",Syntax Error,Loops
"Write a Python program that takes a list of strings as input, sorts it alphabetically, and output the sorted list.","['apple', 'pear', 'banana', 'grape']","def sort_alphabetically(input_list):
 results = sorted(input_list)
 
 return results
 
input_list = ['apple', 'pear', 'banana', 'grape']

print(sort_alphabetically(input_list))
# Output: ['apple', 'banana', 'grape', 'pear']","def sort_alphabetically(input_list):
 results = sorted(input_list)
 
 return results
 
input_list = ['apple', '",Incomplete Answer,Loops
"Create a Python program to find the total distance of a set of given (x,y) coordinates.","coordinates = [(2, 4), (3, 5), (4, 3), (9, 7)]","def totalDistance(coordinates):
    total = 0
    for i in range(len(coordinates) - 1):
        distance = ((coordinates[i+1][0] - coordinates[i][0])**2 + (coordinates[i+1][1] - coordinates[i][1])**2)**(1/2)
        total += distance
    return total

print(totalDistance(coordinates))","def totalDistance(coordinates):
    total = 0
    for i in range(len(coordinates) - 1):
        distance = ((coordinates[i+1][0] - coordinates",Incomplete Answer,File I/O
Generate a Python script that will extract all URLs from the given text.,The websites I like to visit are https://www.google.com and https://www.facebook.com,"import re

text = ""The websites I like to visit are https://www.google.com and https://www.facebook.com""

url_list = re.findall(r'(https?://\S+)', text)

print(url_list)","import re

text = ""The websites I like to visit are https://www.google.com and https://www.facebook.com""

url_list = re.findall(r'(https?://\S+)', text)

pritn(url_list)",Syntax Error,File I/O
Create a Python program to determine if a list is monotonically increasing.,"list = [1, 3, 4, 5, 9, 10]","def check_monotonic(list):
 is_monotonic = True
 for i in range(len(list)-1):
  if(list[i] > list[i+1]):
   is_monotonic = False
 return is_monotonic

list = [1, 3, 4, 5, 9, 10]
print(check_monotonic(list)) # Output: True","def check_monotonic(list):
 is_monotonic = True
 for i in range(len(list)-1):
  if(list[i] > list[i+1]):
   is_monotonic = False
 return is_monotonic

list = [1, 3, 4, 5, 9, 10]
print(check_monotonic(list)) # Output: True",Syntax Error,String Manipulation
Write a Python program to find and print all numbers divisible by 5 between 0 and 15.,,"def find_divisible_numbers(start, end):
 for i in range(start, end + 1):
  if i % 5 == 0:
   print(i)

find_divisible_numbers(0, 15)","def find_divisible_numbers(start, end):
 for i in range(start, end + 1):
  if i % 5 == 0:
   print(i)

find_divisible_numbers(0, 15)",Syntax Error,OOP
Create a program in Python that shuffles and prints an array of items.,"['a', 'b', 'c', 'd']","import random

items = ['a', 'b', 'c', 'd']
random.shuffle(items)

print(items)","import random

items = ['a', 'b', 'c', ",Incomplete Answer,Loops
Generate a Python program which takes a string as input and prints all of its substrings in order from longest to shortest length.,,"def substring_in_order(string): 
    result = [] 
    n = len(string) 
    for l in range(n, 0, -1): 
        for i in range(n-l + 1): 
            result.append(string[i:i+l]) 
    return result 

string = input(""Enter the string: "") 
print (""All substrings in order from longest to shortest:"") 
print (substring_in_order(string))","def substring_in_order(string) 
    result = [] 
    n = len(string) 
    for l in range(n, 0, -1) 
        for i in range(n-l + 1) 
            result.append(string[ii+l]) 
    return result 

string = input(""Enter the string "") 
print (""All substrings in order from longest to shortest"") 
print (substring_in_order(string))",Syntax Error,String Manipulation
Define a function to compute 3 raised to the power of 5 in Python.,,"def power(x, y): 
    if (y == 0): 
        return 1
    elif (int(y % 2) == 0): 
        return (power(x, int(y / 2)) *
               power(x, int(y / 2))) 
    else: 
        return (x * power(x, int(y / 2)) *
               power(x, int(y / 2))) 


# Driver Code 
x = 3; y = 5
print(power(x, y))","def power(x, y): 
    if (y == 0): 
        return 1
    elif (int(y % 2) == 0): 
        return (power(x, int(y / 2)) *
               power(x, int(y / 2))) 
    else: 
        return (x * power(x, int(y / 2)) *
               power(x, int(y / 2))) 


# Driver Code 
x = 3; y = 5
print(power(x, y))",correct,OOP
"Create a Python code to classify a given Iris flower as Iris setosa, Iris versicolor and Iris virginica.","[5.9, 3.0, 5.1, 1.8]","def classify_iris(flower):
    if flower[0] < 5 and flower[2] < 4:
        return 'Iris setosa'
    elif flower[2] >= 4.9 and flower[3] <= 1.8:
        return 'Iris virginica'
    else:
        return 'Iris versicolor'","def classify_iris(flower):
    if flower[0] < 5 and flower[2] < 4:
        return 'Iris setosa'
    elif flow",Incomplete Answer,Recursion
Write a Python program to create a data visualization for a given dataset.,The dataset contains information about the number of students enrolled in various courses.,"import matplotlib.pyplot as plt

def create_visualizations(data):
 x = [x[0] for x in data]
 y = [x[1] for x in data]
 plt.plot(x, y, 'bo')
 plt.xlabel('Courses')
 plt.ylabel('Students')
 plt.title('Number of Students Enrolled in Courses')
 plt.show()","import matplotlib.pyplot as plt

def create_visualizations(data:
 x = [x[0] for x in data]
 y = [x[1] for x in data]
 plt.plot(x, y, 'bo'
 plt.xlabel('Courses'
 plt.ylabel('Students'
 plt.title('Number of Students Enrolled in Courses'
 plt.show(",Syntax Error,OOP
Write a python function to reverse only the vowels of a given string.,,"def reverse_vowels(str1):
	vowels = """"
	for char in str1:
		if char in ""aeiouAEIOU"":
			vowels += char
	result_string = """"
	for char in str1:
		if char in ""aeiouAEIOU"":
			result_string += vowels[-1]
			vowels = vowels[:-1]
		else:
			result_string += char
	return result_string","def reverse_vowels(str1):
	vowels = """"
	for char in str1:
		if char in ""aeiouAEIOU"":
			vowels += char
	result_string = """"
	for char in str",Incomplete Answer,Recursion
Write a function to check whether an element exists within a tuple.,,"def check_tuplex(tuplex,tuple1): 
  if tuple1 in tuplex:
    return True
  else:
     return False","def check_tuplex(tuplex,tuple1): 
  if tuple1 in t",Incomplete Answer,File I/O
Compute with a Python program which elements of an array can be used as the divisor of other elements in the array.,"[18, 30, 42, 45, 24]","arr = [18, 30, 42, 45, 24]

for i in range(len(arr)):
    for j in range(i+1, len(arr)):
        if arr[i] != 0 and arr[j] % arr[i] == 0:
            print(str(arr[i]) + ' divides ' + str(arr[j]))","arr = [18, 30, 42, 45, 24]

for i in range(len(arr)):
    for j in range(i+1, len(arr)):
        i",Incomplete Answer,File I/O
Write Python code to implement the Quick Sort algorithm.,"[10, 7, 8, 9, 1, 5]","def partition(arr,p,r):
    x = arr[r]
    i = p - 1
    for j in range(p, r):
        if arr[j] <= x:
            i = i + 1
            arr[i], arr[j] = arr[j], arr[i]
    arr[i + 1], arr[r] = arr[r], arr[i+1]
    return i + 1
 
def quick_sort(arr,p,r):
    if p < r:
        q = partition(arr,p,r)
        quick_sort(arr,p,q-1)
        quick_sort(arr,q+1,r)","def partition(arr,p,r)
    x = arr[r]
    i = p - 1
    for j in range(p, r)
        if arr[j] <= x
            i = i + 1
            arr[i], arr[j] = arr[j], arr[i]
    arr[i + 1], arr[r] = arr[r], arr[i+1]
    return i + 1
 
def quick_sort(arr,p,r)
    if p < r
        q = partition(arr,p,r)
        quick_sort(arr,p,q-1)
        quick_sort(arr,q+1,r)",Syntax Error,File I/O
Create a function in Python to compute a given number of Fibonacci numbers.,,"def fibonacci(n):
    a = 0
    b = 1
    for i in range(n):
        a, b = b, a + b
    return a

num = fibonacci(10)
print(num)","def fibonacci(n):
a = 0
b = 1
for i in range(n):
    a, b = b, a + b
return a

num = fibonacci(10)
print(num)",Syntax Error,File I/O
Write a Python program to check if a provided string is valid JSON.,"""<noinput>""","def is_valid_json(s):
    valid = True
    try:
        json.loads(s)
    except ValueError:
        valid = False
    return valid","def is_valid_json(s):
    valid = True
    try:
        json.loads(s)
    except ValueError:
        valid = False
    return valid",correct,OOP
Write a function in Python to generate random numbers within a desired range.,,"import random

# define a function to generate random numbers
def generate_random(start, end):
	return random.randint(start, end)

# generate a random number in the given range
start = 10
end = 15
print(generate_random(start, end))","import random

# define a function to generate random numbers
def generate_random(start, end):
	return random.randi",Incomplete Answer,Recursion
Create a Python script to filter out all numbers divisible by 3 in a list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]","# Initialize list
n = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

# Function
def filter_divisible_by_3(n):
    return [num for num in n if num % 3 != 0]

# Output
print(filter_divisible_by_3(n))
# Output: [1, 2, 4, 5, 7, 8, 10, 11, 13]","# Initialize list
n = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

# Function
def filter_divisible_by_3(n):
    return [num for num in n if num % 3 != 0]

# Output
pritn(filter_divisible_by_3(n))
# Output: [1, 2, 4, 5, 7, 8, 10, 11, 13]",Syntax Error,OOP
Write a Python program to filter out the duplicates in a list,"list_a = [1, 2, 3, 2, 5, 2]","def remove_duplicates(list_a):
    result = []
    for a in list_a:
        if a not in result:
            result.append(a)
    return result","def remove_duplicates(list_a):
    result = []
    for a in list_a:
   ",Incomplete Answer,Recursion
Generate a python program to find the sum of series 1 +1/2 + 1/4 +….+ 1/n,,"def series_sum(n):
    sum_series = 0
    for i in range(1, n + 1):
        sum_series += 1/i
    return sum_series","def series_sum(n):
    sum_series = 0
    for i in range(1, n + 1):
        sum_series += 1/i
    return sum_series",Syntax Error,OOP
"Create a Python class for a Car. This class should contain fields for the type, model, and number of seats, and methods for calculating the maximum speed and average fuel consumption.",,"class Car:
 def __init__(self, type, model, seats):
 self.type = type
 self.model = model
 self.seats = seats

 def calculate_max_speed(self):
 pass

 def calculate_avg_fuel(self):
 pass

# create a car
my_car = Car('sedan', 'Tesla Model 3', 5)","class Car:
 def __init__(self, type, model, seats):
 self.type = type
 self.model = model
 self.seats = seats

 def calculate_max_speed(self):
 pass

 def calculate_avg_fuel(self):
 pass

# create a car
my_car = Car('sedan', 'Tesla Model 3', 5)",Syntax Error,String Manipulation
"Given a string, write a Python program to remove all punctuation from the string.",The quick brown fox jumps over the lazy dog.,"import string

def remove_punctuation(text):
    return text.translate(str.maketrans('', '', string.punctuation))

print(remove_punctuation(""The quick brown fox jumps over the lazy dog.""))
# output: The quick brown fox jumps over the lazy dog","import string

def remove_punctuation(text):
    return text.translate(str.maketrans('', '', string.punctuation))

print(remove_punctuation(""The quick brown fox jumps over the lazy dog.""))
# output: The quick brown fox jumps over the lazy dog",correct,OOP
Write a Python script that takes as input two strings and returns a boolean indicating if the two strings are equal when accounting for case sensitivity.,"String 1: ""Hello""
String 2: ""hello""","def case_insensitive_compare(str1, str2):
 return str1.lower() == str2.lower()

string1 = ""Hello""
string2 = ""hello""

print(case_insensitive_compare(string1, string2))

# Output
True","def case_insensitive_compare(str1, str2):
 return str1.lower() == str2.lower()

string1 = ""Hello""
string2 = ""hello""

print(case_insensitive_compare(string1, string2))

# Output
True",Syntax Error,OOP
Write a python program to create a histogram of the given list elements,"list: [1, 2, 4, 5, 6, 3, 2]","def create_histogram(list):
    hist = dict()
    
    for i in list:
        if i not in hist:
            hist[i] = 1
        else:
            hist[i] += 1
    
    return hist","def create_histogram(list)
    hist = dict()
    
    for i in list
        if i not in hist
            hist[i] = 1
        else
            hist[i] += 1
    
    return hist",Syntax Error,File I/O
Write a Python program to print a Welcome message for the user.,Username: John,"print(""Welcome John!"")","print(""Welcome John!"")",correct,File I/O
Develop a python function to get the last element from a given list,,"def get_last_element(list):
     return list[-1]","def get_last_element(list):
     return list[-1]",correct,Recursion
Design a function in Python that takes in two numbers and outputs their sum.,"2, 3","def sumTwo(a, b):
  return a + b

print(sumTwo(2, 3))","def sumTwo(a, b:
  return a + b

print(sumTwo(2, 3",Syntax Error,String Manipulation
Generate a program in Python to print the union of two given sets.,"[1, 2, 3], [2, 3, 4, 5]","def union_sets(set1, set2):
    return list(set(set1) | set(set2))

set1 = [1, 2, 3]
set2 = [2, 3, 4, 5]

print(union_sets(set1, set2)","def union_sets(set1, set2):
    return list(set(set1) | set(set2))

set1 = [1, 2, 3]
set2 = [2, 3, 4, 5]

print(union_sets(set1, set2)",correct,Loops
Write a Python program to find the shortest path between two points,"A (1,2), B (5,6)","# Initialize the two points
A = (1,2) 
B = (5,6)

# Create a function
def short_path(p1, p2):
    # Compute the x-distance
    x_dist = abs(p2[0] - p1[0])
    # Compute the y-distance
    y_dist = abs(p2[1] - p1[1])
    # Compute the manhattan distance
    manh_dist = x_dist + y_dist
    return manh_dist

# Test the function
print(short_path(A, B))

# Output
6","# Initialize the two points
A = (1,2) 
B = (5,6)

# Create a function
def short_path(p1, p2):
    # Compute the x-distance
    x_dist = abs(p2[0] - p1[0])
    # Compute the y-distance
    y_dist = abs(p2[1] - p1[1])
    # Compute the manhattan distance
    manh_dist = x_dist + y_dist
    return manh_dist

# Test the function
print(name, short_path(A, B))

# Output
6",Syntax Error,OOP
Create a Python script that generates a random password.,,"import random
import string

def generate_password():
  characters = string.ascii_letters + string.digits + string.punctuation
  password = ''.join(random.choice(characters) for _ in range(15))
  return password

print(generate_password())","import random
import string

def generate_password():
  characters = string.ascii_letters + string.digits + string.punc",Incomplete Answer,File I/O
Generate a Python program that reads in a list of words and sorts them alphabetically.,"List of words: ['apple', 'banana', 'cat', 'zebra']","words = ['apple', 'banana', 'cat', 'zebra']
words.sort()

for word in words:
 print(word)","words = ['apple', 'banana', 'cat', 'zebra']
",Incomplete Answer,String Manipulation
"Write a Python program to calculate the maximum, minimum and mean number of elements in a given string.",,"def get_stats_for_string(string):
    num_elements = len(string)
    max_element = max(string)
    min_element = min(string)
    mean_element = sum(string) / num_elements
    return (max_element, min_element, mean_element)

string = ""abcdef""
stats_for_string = get_stats_for_string(string)
print(""Max: {0}, Min: {1}, Mean: {2}"".format(*stats_for_string))","def get_stats_for_string(string):
    num_elements = len(string)
    max_element = max(string)
    min_element = min(string)
    mean_element = sum(string) / num_elements
    re",Incomplete Answer,String Manipulation
Create a script in Python that checks that a given URL is active and responding.,"url = ""http://www.example.com""","import requests

url = ""http://www.example.com""

try:
 request = requests.get(url)
 if request.status_code == 200:
 print(""URL is active and responding"")
except Exception as e:
 print(f""Error: {e}"")","import requests

url = ""http://www.example.com""

try:
 request = requests.get(url
 if request.status_code == 200:
 print(""URL is active and responding""
except Exception as e:
 print(f""Error: {e}""",Syntax Error,Recursion
Create a Python program that takes a string as input and returns its top 3 most frequent characters,,"def most_frequent_chars(s):
    d = {}
    for i in s:
        if i not in d:
            d[i] = 0
        d[i]+=1
    d = sorted(d.items(),key = lambda x:x[1], reverse=True)
    return [k  for k ,v in d[:3]]","def most_frequent_chars(s):
    d = {}
    for i in s:
        if i not in d:
            d[i] = 0
        d[i]+=1
    d = sorted(d.items(),key = lambda x:x[1], reverse=True)
    return [k  for k ,v in d[:3]]",correct,File I/O
"Given a list of integers, write a Python program to find the list's maximum value.","[1, 8, 2, 4, 10]","def find_max(nums):
    max_value = nums[0] 
    for i in nums:
        if i > max_value:
            max_value = i
    return max_value

nums = [1, 8, 2, 4, 10]
print(find_max(nums))","def find_max(nums):
    max_value = nums[0] 
    for i in nums:
        if i > max_value:
 ",Incomplete Answer,File I/O
Convert the given JSON data into python dictionary.,"{""key"": ""value""}","import json 

json_data = '{""key"": ""value""}'

pydict = json.loads(json_data) 
print (""Python dictionary:"", pydict)","import json 

json_data = '{""key"": ""value""}'

pydict = json.loads(json_data) 
print (""Python dictionary:"", pydict)",Syntax Error,String Manipulation
Generate a Python program that displays all prime numbers between two numbers.,"50, 75","def display_prime_numbers(min, max):
    for n in range(min, max):
        if is_prime(n):
            print(n)

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

display_prime_numbers(50, 75)","def display_prime_numbers(min, max):
for n in range(min, max):
    if is_prime(n):
        print(n)

def is_prime(n):
if n <= 1:
    return False
for i in range(2, int(n**0.5) + 1):
    if n % i == 0:
        return False
return True

display_prime_numbers(50, 75)",Syntax Error,File I/O
Construct a Python program to perform principal component analysis,A dataset of 10 rows and 3 columns,"from sklearn.decomposition import PCA

def pca_transformation(X):
    pca = PCA()
    X_pca = pca.fit_transform(X)
    return X_pca","from sklearn.decomposition import PCA

def pca_transformation(X):",Incomplete Answer,OOP
Generate a program to calculate Fibonacci numbers recursively in Python.,,"def fibonacci(n):
 if n == 0:
  return 0
 elif n == 1:
  return 1
 else:
  return fibonacci(n-1) + fibonacci(n-2)","def fibonacci(n):
 if n == 0:
  return 0
 elif n == 1:
 ",Incomplete Answer,Recursion
"Create a python program to accept two inputs from the user, a number and a string, and print the string the given number of times.","3, Hello","num = int(input(""Enter a number: ""))
string = input(""Enter a string: "")

for i in range(num):
 print(string)","num = int(input(""Enter a number: ""
string = input(""Enter a string: ""

for i in range(num:
 print(string",Syntax Error,OOP
Develop an optimized Python Code to remove consecutive duplicate characters from a String,,"def rm_duplicates(inp): 
    result = []
    prev = '' 
    for char in inp:
        if char != prev:
            result.append(char)
            prev = char
    return ''.join(result) 

print(rm_duplicates('aabccdaacbg'))","def rm_duplicates(inp): 
    result = []
    prev = '' 
    for char in inp:
        if char != prev:
            result.append(char)
            prev = char
    return ''.join(result) 

print(rm_duplicates('aabccdaacbg'))",correct,String Manipulation
"Write Python code to print the ""Hello World!"" string.",,"print(""Hello World!"")","print(""Hel",Incomplete Answer,File I/O
Generate a correct Python program to filter out elements of a list using lambda,"list = [1,2,3,4,5]","list = [1,2,3,4,5]

result = list(filter(lambda x : x % 2 == 0 , list))
print(result)","list = [1,2,3,4,5]

result = list(filter(l",Incomplete Answer,Recursion
Optimize an existing Python script to run as efficiently as possible.,"def spam(divideBy):
    return 42 / divideBy

print(spam(2))
print(spam(12))
print(spam(0))","def spam(divideBy):
    try:
        return 42 / divideBy
    except ZeroDivisionError:
        print('Error: Invalid argument.')

print(spam(2))
print(spam(12))
print(spam(0))","def spam(divideBy):
    try:
        return 42 / divideBy
    except ZeroDivisionError:
        print('Error: Invalid argument.')

print(spam(2))
print(spam(12))
print(spam(0))",correct,File I/O
Write a Python program to optimize an array of numbers so that the sum of elements is maximum and all the elements are greater than 0.,"[1,-2,3,4,-5]","import numpy as np

# Get the input array
arr = [1,-2,3,4,-5]

# Optimize the array so that the sum of elements is maximized
# and all the elements are greater than 0
new_arr = np.max(arr,0)

# Print the optimized array
print(""Optimized Array : "",*new_arr)","import numpy as np

# Get the input array
arr = [1,-2,3,4,-5]

# Optimize the array so that the sum of elements is maximized
# a",Incomplete Answer,Recursion
Generate Python code to compute the sum of items in a list.,"[2, 17, 3, 8]","sum = 0
for value in [2, 17, 3, 8]:
 sum += value
print(sum)","sum = 0
for value in [2, 17, 3, 8]:
 sum += value
print(sum)",correct,Loops
Write a python program to parse an XML document,,"import xml.etree.ElementTree as ET

def parse_xml(xml_file):
    root = ET.parse(xml_file).getroot()
    for child in root:
        print(child.tag, child.attrib)","import xml.etree.ElementTree as ET

def parse_xml(xml_file):
    root = ET.parse(",Incomplete Answer,Loops
Create a Python function that takes in a string and a list of words and returns true if the string contains all the words in the list.,"'This is a test', ['test', 'this', 'is']","def contains_words(input_string, words):
 for word in words:
 if word not in input_string:
 return False
 return True

print(contains_words('This is a test', ['test', 'this', 'is'])) # True","def contains_words(input_string, words):
 for word in words:
 if word not in input_string:
 re",Incomplete Answer,Loops
Create a function in Python that sorts the elements of a given list.,"[5, 7, 2, 3, 4, 1]","def sort_list(numbers):
    numbers.sort()
    return numbers

result = sort_list([5, 7, 2, 3, 4, 1])
print(result)","def sort_list(numbers):
    numbers.sort()
    return numbers

result = sort_list([5, 7, 2, 3, 4, 1])
print(result)",correct,File I/O
Write a Python program to convert a dataframe into a tabular format.,,"import pandas as pd

def dataframe_to_table(df):
  tabular_df = df.pivot_table(index=df.index, columns=df.columns, values=df.values)
  return tabular_df","import pandas as pd

def dataframe_to_table(df):
  tabular_df = df.pivot_tab",Incomplete Answer,OOP
Create a Python program to optimize a given function for a given interval.,"func = lambda x: x**2 - 4.5*x + 5 
interval = [-3.5, 4.5]","import scipy.optimize

# Execute optimization
mini = scipy.optimize.minimize_scalar(func = func, 
                bounds = interval)
                 
# Print optimal value x_opt
print('{0:5.5f}'.format(mini.x))","import scipy.optimize

# Execute optimization
mini = scipy.optimize.minimize_scalar(func = func, 
                bounds = interval)
                 
# Print optimal value x_opt
pritn('{0:5.5f}'.format(mini.x))",Syntax Error,OOP
Write a function to find the occurrence and position of the substrings within a string.,,"import re
def occurance_substring(text,pattern):
 for match in re.finditer(pattern, text):
    s = match.start()
    e = match.end()
    return (text[s:e], s, e)","import re
def occurance_substring(text,pattern):
 for match in re.finditer(pattern, text):
    s = match.start()
    e = match.end()
    return (text[s:e], s, e)",correct,OOP
Generate a python program to generate a random password,,"import string
import random

def generate_password(length):
    password = []
    chars = string.ascii_uppercase + string.ascii_lowercase + string.digits + '@#$%&*'
    for i in range(length):
        password.append(random.choice(chars))
    return ''.join(password)

if __name__ == '__main__':
    length = int(input('Enter password length: '))
    print(generate_password(length))","import string
import random

def generate_password(length:
    password = []
    chars = string.ascii_uppercase + string.ascii_lowercase + string.digits + '@#$%&*'
    for i in range(length:
        password.append(random.choice(chars
    return ''.join(password

if __name__ == '__main__':
    length = int(input('Enter password length: '
    print(generate_password(length",Syntax Error,Loops
Create a python program to remove the python comments from a text,"# This is a python comment
print(""Hello world"") # This is another comment","import re

def remove_comments(text):
    regex = r""(\"".*?\""|\'.*?\')|(/\*.*?\*/|\#[^\r\n]*$)""
    clean_text = re.sub(regex, """", text, 0, re.MULTILINE).strip()
    return clean_text

remove_comments(""# This is a python comment\nprint(\""Hello world\"") # This is another comment"")
#output:
print(""Hello world"")","import re

def remove_comments(text):
regex = r""(\"".*?\""|\'.*?\')|(/\*.*?\*/|\#[^\r\n]*$)""
clean_text = re.sub(regex, """", text, 0, re.MULTILINE).strip()
return clean_text

remove_comments(""# This is a python comment\nprint(\""Hello world\"") # This is another comment"")
#output:
print(""Hello world"")",Syntax Error,File I/O
"Optimize the following Python code so that it runs faster, given that x is an array of integers.

sum = 0
for i in range(len(x)):
 sum += x[i]","x = [4, 2, 1, 7, 8, 6]","# Optimized Python code
sum = 0
for num in x:
 sum += num
 
# Using built-in sum function
sum = sum(x)","# Optimized Python code
sum = 0
for num in x:
 sum += num
 
# Using built-in sum function
sum = sum(x)",correct,File I/O
Create a Python program to check if two lists have overlapping elements,"A = [1,3,5,7], B = [2,4,5,7]","def has_overlapping(arr1, arr2):
    for element in arr1:
        if element in arr2:
            return True
    return False

A = [1,3,5,7]
B = [2,4,5,7]

result = has_overlapping(A, B)
print(result)","def has_overlapping(arr1, arr2):
    for element in arr1:
        if element in arr2:
            re",Incomplete Answer,String Manipulation
Write a function in Python that takes two lists as arguments and return all their common elements.,"[1, 3, 5, 7], [3, 4, 5, 8]","def common_elements(list1, list2):
    common = []
    for num in list1:
        if num in list2:
            common.append(num)
    return common

print(common_elements([1, 3, 5, 7], [3, 4, 5, 8]))","def common_elements(list1, list2):
    common = []
    for num in list1:
        if num in list2:
            common.append(num)
    return common

pritn(common_elements([1, 3, 5, 7], [3, 4, 5, 8]))",Syntax Error,File I/O
Write a function to check whether the given key is present in the dictionary or not.,,"def is_key_present(d,x):
  if x in d:
    return True
  else:
     return False","def is_key_present(d,x):
  if x in d:
    return True
  else:
     return False",Syntax Error,File I/O
"Given input and output examples, create a classification model in Python that can predict the output for a given input.","Inputs: [1, 2, 3] 
Outputs: [2, 4, 6]","def pred_model(inputs): 
  outputs=[]
  for i in inputs:
    outputs.append(i*2)
  return outputs
 
inputs = [1,2,3] 
outputs = pred_model(inputs) 
print(""Outputs:"", outputs)","def pred_model(inputs): 
  outputs=[]
  for i in inputs:
    outputs.append(i*2)
  retu",Incomplete Answer,String Manipulation
Write Python code to implement the Bubble Sort algorithm for sorting a list of numbers.,"[5,1,4,2,8]","def bubble_sort(lst):
    n = len(lst)
    for i in range(n): 
        for j in range(0, n-i-1): 
            if lst[j] > lst[j+1] : 
                lst[j], lst[j+1] = lst[j+1], lst[j]
    return lst","def bubble_sort(lst):
    n = len(lst)
    for i in range(n): 
        for j in range(0, n-i-1): 
            if lst[j] > lst[j+1] : 
                lst[j], lst[j+1] = lst[j+1], lst[j]
    return lst",Syntax Error,Recursion
Create a python class,,"class MyClass:
    def __init__(self):
        pass","class MyClass:
    def __init__(self):
        pass",Syntax Error,Loops
Can you design a Python class to represent a human being?,,"class Human:
    def __init__(self, age, name):
        self.age = age
        self.name = name

    def greet(self):
        print(""Hi, my name is "" + self.name + "" and I'm "" + str(self.age) + "" years old."")

john = Human(25, ""John"")
john.greet()","class Human:
    def __init__(self, age, name):
        self.age = age
        self.name = name

    def greet(self):
        print(name, ""Hi, my name is "" + self.name + "" and I'm "" + str(self.age) + "" years old."")

john = Human(25, ""John"")
john.greet()",Syntax Error,OOP
Create a for loop in Python to calculate the total sum of all elements in the given list.,"data = [1, 9, 3, 5]","total = 0
for element in data:
    total = total + element
print(total)","total = 0
for element in data:
    ",Incomplete Answer,OOP
Generate a random number between a specified range using Python.,,"import random 
def random_num(start, end): 
    num = random.randint(start, end) 
    return num","import random 
def random_num(start, end): 
    ",Incomplete Answer,String Manipulation
Write a Python function to check if a number between 0 and 1000 is prime or not.,,"def is_prime(num):
    #Make sure the number is greater than or equal to 2 
    if num < 2:
        return False 
    # Check whether the number is divisible by any other number 
    for i in range(2, num):
        if num % i == 0:
            return False
    # If it is not divisible by any number, it is a prime number
    return True","def is_prime(num):
    #Make sure the number is greater than or equal to 2 
    if num < 2:
        return False 
    # Check whether the number is divisible by any oth",Incomplete Answer,OOP
Create a Python script to format the following string with proper new lines and indentation.,"'{ ""name"":""John"", ""age"":30, ""city"":""New York""}'","formatted = '{\n  ""name"":""John"",\n  ""age"":30,\n  ""city"":""New York""\n}'","formatted = '{\n  ""name"":""John"",\n ",Incomplete Answer,Recursion
"In python, write a function that takes in two numbers and returns the sum of their digits.",,"def sum_digits(a,b):
    #convert each number to string
    a = str(a)
    b = str(b)
    #initialize sum
    sum = 0
    for i in range(len(a)): 
        sum += int(a[i]) 
    for i in range(len(b)): 
        sum += int(b[i]) 
    #return sum
    return sum","def sum_digits(a,b):
#convert each number to string
a = str(a)
b = str(b)
#initialize sum
sum = 0
for i in range(len(a)): 
    sum += int(a[i]) 
for i in range(len(b)): 
    sum += int(b[i]) 
#return sum
return sum",Syntax Error,Recursion
Create a Python code snippet to store the login credentials in a dictionary.,"username: testuser
password: test123","creds = {
 ""username"": ""testuser"",
 ""password"": ""test123""
}","creds = {
 ""username"": ""testuser"",
 ""password"": ""test123""
}",correct,OOP
Create a program in Python that takes an array and finds the minimum value stored in it.,"[34, 48, 19, 61, 3]","arr = [34, 48, 19, 61, 3] 
  
# Finds the minimum element 
print (""The minimum element is "" + str(min(arr)))","arr = [34, 48, 19, 61, 3] 
  
# Finds the minimum element 
pritn (""The minimum element is "" + str(min(arr)))",Syntax Error,File I/O
Convert the given code from JS to Python.,"let add = (a, b) => { 
    return a + b; 
}","def add(a, b):
    return a + b","def add(a, b):
",Incomplete Answer,String Manipulation
Write a python function to count the number of equal numbers from three given integers.,,"def test_three_equal(x,y,z):
  result= set([x,y,z])
  if len(result)==3:
    return 0
  else:
    return (4-len(result))","def test_three_equal(x,y,z:
  result= set([x,y,z]
  if len(result==3:
    return 0
  else:
    return (4-len(result",Syntax Error,Recursion
Generate a new Python List containing all of the even numbers from a given list.,"my_list = [2, 3, 4, 5, 6, 7, 8, 9]","my_list = [2, 3, 4, 5, 6, 7, 8, 9]

even_list = [x for x in my_list if x % 2 == 0]
print(even_list)","my_list = [2, 3, 4, 5, 6, 7, 8, 9]

even_list = [",Incomplete Answer,Loops
Convert this function from Python 2 to Python 3.,"def fib(n):
    """"""Print a Fibonacci series up to n""""""
    result = []
    a, b = 0, 1
    while b < n:
        result.append(b)
        a, b = b, a+b
    return result","def fib(n):
    """"""Print a Fibonacci series up to n""""""
    result = []
    a = 0
    b = 1
    while b < n:
        result.append(b)
        tmp_a = a
        a = b
        b = tmp_a + b
    return result","def fib(n):
    """"""Print a Fibonacci series up to n""""""
    result = []
    a = 0
    b = 1
    while b",Incomplete Answer,File I/O
Write a Python script to sort a given list in ascending order.,"[4, 6, 1, 7]","def sort_ascending(list):
    return sorted(list)",def sort_ascending(list),Incomplete Answer,File I/O
Generate a program that translates a program written in one language to another language,"The following code is written in Javascript:

function doubleValue(num) {
 return num * 2;
}","def doubleValue(num):
 return num * 2
 
# Javascript to Python 

def doubleValue(num): 
 return num * 2","def doubleValue(num):
 return num * 2
 
# Javascript to Python 

def doubleValue(num): 
 return num * 2",Syntax Error,OOP
Generate a Python program to convert a string to its lowercase version.,,"def str_to_lower(string):
    new_string = """"

    for char in string:
        new_string += char.lower()

    return new_string","def str_to_lower(string):
    new_string = """"

    for char in string:
        new_string += char.lower()

    return new_string",correct,Recursion
Create a Python program to convert a given list of strings to float values,"str_list = ['45', '87.5', '90.9', '24']","def convertStringToFloat(str_list):
    floats = []
    for s in str_list:
        floats.append(float(s))
    return floats

convertStringToFloat(str_list) // Returns [45.0, 87.5, 90.9, 24.0]","def convertStringToFloat(str_list):
    floats = []
    for s in str_list:
        floats.append(float(s))
    return floats

convertStringToFloat(str_list) // Returns [45.0, 87.5, 90.9, 24.0]",correct,Recursion
Transform the given language rich code into a python program,Create a Python program that calculates the average of an array of numbers,"def get_average(arr): 
    sum = 0
    
    for i in range(len(arr)): 
        sum += arr[i] 
        
    return sum/len(arr)","def get_average(arr): 
    sum = 0
    
    for i in range(len(arr)): 
        sum += arr[i] 
        
    return sum/len(arr)",correct,Loops
Write a python program to check if a given number is prime or not.,27,"def is_prime(num):
    for i in range(2, num):
        if (num % i) == 0:
            return False
    return True

number = 27

if is_prime(number):
    print(str(number) + ' is a prime number.')
else:
    print(str(number) + ' is not a prime number.')","def is_prime(num):
    for i in range(2, num):
        if (num % i) == 0:
            return False
    return True

number = 27

if is_prime(number):
    print(str(number) + ' is a prime number.')
else:
    print(str(number) + ' is not a prime number.')",correct,File I/O
Write a Python program to format a specified string to limit the number of characters to 6.,"str = ""Python is a great programming language!""","new_str = ""Python"".ljust(6, ""..."")

print(new_str)  #Python...","new_str = ""Python"".ljust(6, ""...""

print(new_str  #Python...",Syntax Error,String Manipulation
Generate a random number between 0 and 9 using Python.,,"import random
random.randint(0, 9)","import random
random.randint(0, 9)",correct,String Manipulation
Create a random forest model in Python from the given data set.,"import pandas as pd

data = {
    'Gender': ['male', 'female', 'male', 'female'],
    'Income': [30000, 50000, 40000, 60000],
    'Label': [1, 0, 0, 1]
}

df = pd.DataFrame(data)","from sklearn.ensemble import RandomForestClassifier

features = ['Gender', 'Income']
X = df[features]
y = df['Label']

clf = RandomForestClassifier(n_estimators=100, max_depth=2, random_state=0)
clf.fit(X, y)","from sklearn.ensemble import RandomForestClassifier

features = ['Gender', 'Income']
X = df[features]
y = df['Label']

clf = RandomForestClassifier(n_estimators=100, max_depth=2, random_state=0)
clf.fit(X, y)",Syntax Error,File I/O
Create a REST API using Python Flask that returns a JSON list of numbers from 1 to 10 when a get request is made to the endpoint /list.,,"from flask import Flask, jsonify

app = Flask(__name__)

@app.route(""/list"", methods=[""GET""])
def get_list():
 numbers = list(range(1, 11))
 return jsonify(numbers)

app.run()","from flask import Flask, jsonify

app = Flask(__name__)

@app.route(""/list"", methods=[""",Incomplete Answer,File I/O
Design a Python program to find the first prime number greater than a user-specified number.,15,"def find_prime_number(n):
    number = n + 1
    while True:
        counter = 0
        for i in range(2, number):
          if number % i == 0:
            counter = 1
        if counter == 0:
            break
        number += 1
    return number

num = int(input(""Enter a number:""))
prime = find_prime_number(num)

print(prime)","def find_prime_number(n):
    number = n + 1
    while True:
        counter = 0
        for i in range(2, number):
          if number % i == 0:
            counter = 1
        if counter == 0:
            break
        number += 1
    return number

num = int(input(""Enter a number:""))
prime = find_prime_number(num)

print(name, prime)",Syntax Error,File I/O
Create a Python generator that returns numbers from a given list.,"[1,3,5,7,9]","def list_generator(input_list):
    for item in input_list:
        yield item

gen = list_generator([1,3,5,7,9])
for item in gen:
    print(item)","def list_generator(input_list):
    for item in input_list:
        yield",Incomplete Answer,OOP
Generate a correct Python program to compute the reverse of the given string,"string = ""hello""","def reverse_string(string):
    output = """"
    for i in range(len(string)):
        output += string[len(string)-1-i]
    return output","def reverse_string(string):
    output = """"
    for i in range(len(s",Incomplete Answer,File I/O
Write a Python function that takes a list of numbers and returns the sum of all odd numbers in the list.,"[1, 2, 3, 4, 5]","def sum_odd_numbers(nums):
    result = 0
    for num in nums:
        # check for odd number
        if num % 2 != 0:
            result += num
    return result

result = sum_odd_numbers([1, 2, 3, 4, 5])
print(result)","def sum_odd_numbers(nums:
    result = 0
    for num in nums:
        # check for odd number
        if num % 2 != 0:
            result += num
    return result

result = sum_odd_numbers([1, 2, 3, 4, 5]
print(result",Syntax Error,OOP
"Using some common sorting algorithms, create a Python program to sort the given array of numbers","arr = [4, 6, 8, 1, 3, 9]","def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

insertion_sort(arr)","def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

insertion_sort(arr)",correct,OOP
Read a given list of strings and create a new list of all strings that are longer than 5 characters long.,"['Python', 'is', 'Fun']","def filter_long_strings(string_list):
 long_strings = []
 for string in string_list:
 if len(string) > 5:
 long_strings.append(string)
 return long_strings

string_list = ['Python', 'is', 'Fun']

long_strings = filter_long_strings(string_list)
print(long_strings)","def filter_long_strings(string_list):
 long_strings = []
 for string in string_list:
 if len(string) > 5:
 long_strings.append(string)
 return long_strings

string_list = ['Python', 'is', 'Fun']

long_strings = filter_long_strings(string_list)
print(long_strings)",correct,Loops
Generate a Python program to print out all possible permutation of a given list of elements.,"[1, 2, 3]","def permutations(input_list):
    if len(input_list) == 1:
        return input_list
    output_list = []
    for value in input_list:
        temp_list = input_list[:]
        temp_list.remove(value)
        permutations_list = permutations(temp_list)
        for sub_list in permutations_list:
            output_list.append([value] + sub_list)
    return output_list","def permutations(input_list):
if len(input_list) == 1:
    return input_list
output_list = []
for value in input_list:
    temp_list = input_list[:]
    temp_list.remove(value)
    permutations_list = permutations(temp_list)
    for sub_list in permutations_list:
        output_list.append([value] + sub_list)
return output_list",Syntax Error,Recursion
Write a function to find the ascii value of total characters in a string.,,"def ascii_value_string(str1):
  for i in range(len(str1)):
   return ord(str1[i])","def ascii_value_string(str1):
  for i in range(len(str1)):
   return ord(str1[i])",correct,OOP
"Create a Python program that implements a search algorithm (e.g. binary search, linear search).","Array: [1, 3, 4, 6, 8, 9, 11, 12, 14]
Target: 11","def linear_search(arr, target):
 for i in range(len(arr)):
 if arr[i] == target:
 return i

 return -1

arr = [1, 3, 4, 6, 8, 9, 11, 12, 14]
target = 11

result = linear_search(arr, target)
if result == -1:
 print('Element not found')
else:
 print(f'Element found at index {result}')

Output:
Element found at index 6","def linear_search(arr, target):
 for i in range(len(arr)):
 if arr[i] == target:
 return i

 return -1

arr = [1, 3, 4, 6, 8, 9, 11, 12, 14]
target = 11

result = linear_search(arr, target)
if result == -1:
 print('Element not found')
else:
 print(f'Element found at index {result}')

Output:
Element found at index 6",correct,OOP
"Generate a valid code in Python that takes two numbers as input from user, and checks if one is divisible by another",,"num1 = int(input(""Enter first number: ""))
num2 = int(input(""Enter second number: ""))

if (num1 % num2 == 0):
    print(""The number %s is divisible by %s."" % (num1, num2))
else:
    print(""The number %s is not divisible by %s."" % (num1, num2))","num1 = int(input(""Enter first number: ""))
num2 = int(input(""Enter second number: ""))

if (num1 % num2 == 0):
    print(""The number %s is divisible by %s."" % (num1, num2))
else:
    print(""The number %s is not divisible by %s."" % (num1, num2))",correct,File I/O
Write a function to find the n'th lucas number.,,"def find_lucas(n): 
	if (n == 0): 
		return 2
	if (n == 1): 
		return 1
	return find_lucas(n - 1) + find_lucas(n - 2) ","def find_lucas(n): 
	if (n == 0): 
		return 2
	if (n == 1)",Incomplete Answer,String Manipulation
Create a Python function to encrypt a string using the substitution method.,,"def encrypt_substitution(s):
    result = ''
    for c in s:
        result += chr(ord(c) + 3)
    return result","def encrypt_substitution(s):
    result = ''
    for c i",Incomplete Answer,String Manipulation
Write a Python script to find the common elements in two given lists.,"List A: [1, 3, 5, 7, 9] 
List B: [2, 3, 4, 5, 8]","def findCommonElements(listA, listB):
 commonElements = []

 for elementA in listA:
 for elementB in listB:
 if elementA == elementB:
 commonElements.append(elementA)

 return commonElements

listA = [1, 3, 5, 7, 9]
listB = [2, 3, 4, 5, 8]
commonElements = findCommonElements(listA, listB) 

print(commonElements)  # Output: [3, 5]","def findCommonElements(listA, listB):
 commonElements = []

 for elementA in listA:
 for elementB in listB:
 if elementA == elementB:
 commonElements.append(elementA",Incomplete Answer,Loops
Create a Python program that takes two lists of integers and prints the common elements between the two lists.,"list1 = [2, 4, 6, 8]
list2 = [4, 8, 10]","list1 = [2, 4, 6, 8]
list2 = [4, 8, 10]

common_elements = list(set(list1).intersection(list2))

print(common_elements)
# Output: [4, 8]","list1 = [2, 4, 6, 8]
list2 = [4, 8, 10]

common_elements = list(set(list1).intersection(list2))

print(common_elements)
# Output: [4, 8]",correct,Loops
Create a query in Python to retrieve all records from the 'Users' table where 'active' is true.,,"# Assuming you have a variable named 'conn' pointing to the database connection 

result = conn.execute(
    ""SELECT * FROM Users WHERE active = true""
)
for row in result:
    # Do something with the retrieved record
    # ...","# Assuming you have a variable named 'conn' pointing to the database connection 

result = conn.execute(
    ""SELECT * FROM Users WHERE active = true""

for row in result:
    # Do something with the retrieved record
    # ...",Syntax Error,File I/O
Create a basic web server in Python that serves static pages from a given directory.,,"import http.server
import socketserver

PORT = 8080

Handler = http.server.SimpleHTTPRequestHandler

with socketserver.TCPServer(("""", PORT), Handler) as httpd:
 print(""Serving at port"", PORT)
 httpd.serve_forever()","import http.server
import socketserver

PORT = 8080

Handler = http.server.SimpleHTTPRequestHandler

with socketserver.TCPServer(("""", PORT), Handler) as httpd:
 print(""Serving at port"", PORT)
 httpd.serve_forever()",correct,OOP
Found and fix any bugs with the following python code.,"def sum_list(list):
    sum_list = 0
    for num in list:
        sum_list += num
    return sum","def sum_list(list):
    sum_list = 0
    for num in list:
        sum_list += num
    return sum_list","def sum_list(list):
    sum_list = 0
    for num in list:
        sum_list += num
    return sum_list",correct,File I/O
Implement a Python script to split a string into a list of words.,,"def split_string(string): 
 return string.split() 

print(split_string(""Hello, World!"")) # [""Hello,"", ""World!""]","def split_string(string): 
 return string.split() 

print(split_string(""Hello, World!"")) # [""Hello,"", ""World!""]",correct,File I/O
Modify the provided Python program to print out the numbers from 1 to 10,"for i in range(11):
    print(i)","for i in range(1, 11):
    print(i)","for i in range(1, 11):
    print(name, i)",Syntax Error,Loops
Generate a list of prime numbers from 1 to 1000 using a Python program,,"def getPrimeList(n): 
    primeList = []
    for num in range (2,n + 1):
        prime = True
        for index in range(2, num):
            if num % index == 0:
                prime = False
        if prime:
            primeList.append(num)
    return primeList

print(getPrimeList(1000))","def getPrimeList(n): 
    primeList = []
    for num in range (2,n + 1):
        prime = True
        for index in range(2, num):
            if num % index == 0:
                prime = False
        if prime:
            primeList.append(num)
    return primeList

print(getPrimeList(1000))",correct,Recursion
Code a generalized function in Python that takes a string as input and returns the first non-repeating character.,,"def first_non_repeating_char(string): 
    for c in string: 
        if string.count(c) == 1: 
            return c 
      
    return -1","def first_non_repeating_char(string): 
    for c in string: 
       ",Incomplete Answer,File I/O
Create a Python program that takes in a string and returns a string with the characters in reversed order.,"String: ""Hello World""","def reverse(str):
    return str[::-1]","def reverse(str):
 ",Incomplete Answer,Loops
Generate a correct python program to format a given string s so that the output pattern is as follows,"Given String: ""Hello--world--someone""
The output pattern is: ""Hello world someone"".","def format_string(s):
    string_arr = s.split(""--"")
    return ' '.join(string_arr)","def format_string(s:
    string_arr = s.split(""--""
    return ' '.join(string_arr",Syntax Error,File I/O
Create a machine learning model in Python to predict the stock prices of a company given the stock prices for the be past 10 days.,,"import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

df = pd.read_csv(""stock_data.csv"")
X = df[['Day1', 'Day2', 'Day3', 'Day4', 'Day5', 'Day6', 'Day7', 'Day8', 'Day9', 'Day10']]
y = df['Day11']

model = LinearRegression()
model.fit(X, y)","import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

df = pd.read_csv(""stock_data.csv"")
X = df[['Day",Incomplete Answer,String Manipulation
Optimize the following function by rewriting it in Python,"def double(number):
    return number * 2","def double(number: int) -> int:
    return number << 1",def double(number: int) -> ,Incomplete Answer,Loops
Design and write a Python program to calculate the sum of the first n natural numbers.,,"def sum_naturals(n):
    total = 0
    for num in range(n + 1):
        total += num
    return total","def sum_naturals(n):
    total = 0
    for num in range(n + 1):
        total += num
    return total",correct,File I/O
"Create a function in Python which takes a list of strings as input, and prints the longest palindrome contained in the list.","[""racecar"", ""python"", ""mom"", ""abba""]","def longest_palindrome(str_list):
  longest_palindrome = """"
  for s in str_list:
    if s == s[::-1] and len(s) > len(longest_palindrome):
      longest_palindrome = s
  print(longest_palindrome)
  
longest_palindrome([""racecar"", ""python"", ""mom"", ""abba""])","def longest_palindrome(str_list:
  longest_palindrome = """"
  for s in str_list:
    if s == s[::-1] and len(s > len(longest_palindrome:
      longest_palindrome = s
  print(longest_palindrome
  
longest_palindrome([""racecar"", ""python"", ""mom"", ""abba""]",Syntax Error,String Manipulation
Compute a matrix multiplication of two given matrices A and B in Python.,"The matrices are A=[1, 2, 3; 4, 5, 6] and B=[1, 2; 3, 4; 5, 6].","import numpy as np 

A = np.array([[1,2,3], [4,5,6]])
B = np.array([[1,2], [3,4], [5,6]])

C = np.matmul(A, B)

print(C)
# Output 
# [[22 28], 
#  [49 64]]","import numpy as np 

A = np.array([[1,2,3], [4,5,6]])
B = np.array([[1,2], [3,4], [5,6]])

C = np.matmul(A, B)

print(C)
# Output 
# [[22 28], 
#  [49 64]]",correct,Loops
Write a Python program to slice a list and store the first two elements in separate variables.,"[2, 4, 6, 8, 10]","list = [2, 4, 6, 8, 10] 
first, second = list[0], list[1]  
print(first) 
print(second)","list = [2, 4, 6, 8, 10] 
first, second = li",Incomplete Answer,Loops
Create a Python program that extracts the nth element from a nested array.,"nested array: [[1,2,3], [4,5,6], [7,8,9]]
nth index: 5","def extract_nth_element(arr, n):
 nth_element = arr[n // len(arr[0])][n % len(arr[0])]
 return nth_element

arr = [[1,2,3], [4,5,6], [7,8,9]]
n = 5
print(extract_nth_element(arr, n))
# Output: 6","def extract_nth_element(arr, n:
 nth_element = arr[n // len(arr[0]][n % len(arr[0]]
 return nth_element

arr = [[1,2,3], [4,5,6], [7,8,9]]
n = 5
print(extract_nth_element(arr, n
# Output: 6",Syntax Error,String Manipulation
Make a visual representation of the following data-set in Python using Matplotlib.,"X = [2,4,6,8,10]
Y = [5,10,15,20,25]","import matplotlib.pyplot as plt

X = [2,4,6,8,10]
Y = [5,10,15,20,25]

plt.plot(X,Y)
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Visual Representation')
plt.grid()
plt.show()","import matplotlib.pyplot as plt

X = [2,4,6,8,10]
Y = [5,10,15,20,25]

plt.plot(X,Y)
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Visual Representation')
plt.grid()
plt.show()",correct,OOP
Create a module in Python for validating a phone number.,"phone number = ""+1-800-867-5309""","import re

phone_number = ""+1-800-867-5309""

phone_pattern = re.compile(r'^\+[1-9]\d{1,2}\-\d{3}\-\d{3}\-\d{4}$')

def validate_phone_number(phone_number):
    return phone_pattern.search(phone_number)

valid = validate_phone_number(phone_number)
if valid:
    print(""Valid Phone number"")
else:
    print(""Invalid Phone number"")","import re

phone_number = ""+1-800-867-5309""

phone_pattern = re.compile(r'^\+[1-9]\d{1,2}\-\d{3}\-\d{3}\-\d{4}$')

def validate_phone_number(phone_number):
    return phone_pattern.search(phone_number)

valid = validate_phone_number(phone_number)
if valid:
    print(""Valid Phone number"")
else:
    print(""Invalid Phone number"")",correct,OOP
Generate a Python program that takes a list of strings as input and prints the strings in alphabetical order.,"['cat', 'dog', 'apple', 'banana']","strings = ['cat', 'dog', 'apple', 'banana']

strings.sort()

for string in strings:
    print(string)","strings = ['cat', 'dog', 'apple', 'banana']

strings.sort()

for string in strings:
    print(string)",correct,OOP
Write a python code to perform the task of bubble sorting in a list.,"arr = [1, 10, 5, 4, 8]","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]
                
bubble_sort(arr)","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n): 
        for j in range(0, n-i-1): 
          ",Incomplete Answer,String Manipulation
Write a python script that extracts data from a JSON object and stores it in a new array.,"{
    ""name"": ""John Doe"", 
    ""age"": 30,
    ""occupation"": ""programmer""
}","data = [{
    ""name"": ""John Doe"",
    ""age"": 30,
    ""occupation"": ""programmer""
}]

arr = []

for item in data:
    arr.append(item)
    
print(arr)","data = [{
    ""name"": ""John Doe"",
    ""age"": 30,
    ""occupation"": ""programmer""
}]

arr = []

for item in data:
    arr.append(item)
    
print(name, arr)",Syntax Error,Recursion
Generate a Python function to print a pattern of stars,n = 5,"def starPattern(n):
    # outer loop to handle number of rows
    for i in range(0, n):
        # inner loop to handle number of columns
        for j in range(0, i + 1):
            # printing stars
            print(""* "", end="""")
        # ending line after each row
        print(""\r"")

# Driver code
n = 5
starPattern(n)","def starPattern(n):
    # outer loop to handle number of rows
    for i in range(0, n):
        # inner loop to handle number of columns
        for j in range(0,",Incomplete Answer,String Manipulation
Build a function in Python to output a list of the first n Fibonacci numbers.,,"def Fibonacci(n): 
  
    # Taking 1st two Fibonacci numbers as 0 and 1 
    FibArray = [0, 1] 
      
    for i in range(2, n): 
        FibArray.append(FibArray[i-2] + FibArray[i-1]) 
       
    return FibArray[:n] 

print(Fibonacci(7)) # [0, 1, 1, 2, 3, 5, 8]","def Fibonacci(n): 
  
    # Taking 1st two Fibonacci numbers as 0 and 1 
    FibArray = [0, 1] 
      
    for i in range(2, n): 
 ",Incomplete Answer,Loops
Write a python function to count numbers whose oth and nth bits are set.,,"def count_Num(n): 
    if (n == 1): 
        return 1
    count = pow(2,n - 2) 
    return count ","def count_Num(n): 
if (n == 1): 
    return 1
count = pow(2,n - 2) 
return count ",Syntax Error,Loops
Develop a Python module to generate random numbers.,,"import random

def generate_random_numbers(length, min_value, max_value):
    return [random.uniform(min_value, max_value) for _ in range(length)]","import random

def generate_random_numbers(length, min_value, max_value)
    return [random.uniform(min_value, max_value) for _ in range(length)]",Syntax Error,Recursion
Create a function for converting a string to an integer in Python.,,"def string_to_int(s):
 return int(s)","def string_to_int(s):
 return int(s)",correct,Recursion
Edit the following Python program such that it prints out the multiplication table for the given number n.,n = 5,"n = 5

# printing the multiplication table
for i in range(1, 11): 
    print(n, 'x', i, '=', n * i)","n = 5

# printing the multiplication table
for i ",Incomplete Answer,Recursion
Can you generate a Python program for computing the median of three numbers?,,"def median(a, b, c):
    if (a <= b <= c) or (c <= b <= a):
        return b
    elif (b <= a <= c) or (c <= a <= b):
        return a
    else:
        return c

median_value = median(6, 8, 7)
print(median_value)","def median(a, b, c):
    if (a <= b <= c) or (c <= b <= a):
        return b
    elif (b <= a <= c) or (c <= a <= b):
        return a
    else:
        return c

median_value = median(6, 8, 7)
print(median_value)",correct,String Manipulation
Write a python program to generate the first n prime numbers.,n = 10,"def generate_prime_numbers(n):
  prime_numbers = []
  count = 0
  num = 2
  while count < n:
    is_prime = True
    for i in range(2, num):
      if num % i == 0:
        is_prime = False
        break
    if is_prime:
      prime_numbers.append(num)
      count += 1
    num += 1
  return prime_numbers

primes = generate_prime_numbers(n)
print(primes)  # Outputs [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]","def generate_prime_numbers(n):
  prime_numbers = []
  count = 0
  num = 2
  while count < n:
    is_prime = True
    for i in range(2, num):
      if num % i == 0:
        is_prime = False
        break
    if is_prime:
      prime_numbers.append(num)
      count += 1
    num += 1
  return prime_numbers

primes = generate_prime_numbers(n)
print(name, primes)  # Outputs [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]",Syntax Error,OOP
Write a Python program for generating random strings of a given length from a given character set.,The given character set: abcdefghijklmnopqrstuvwxyz,"import random
 
def random_string(length, char_set):
 result = """"
 for _ in range(length):
  result += random.choice(char_set)
 return result
 
print(random_string(6, 'abcdefghijklmnopqrstuvwxyz'))

# Output: acehkl","import random
 
def random_string(length, char_set):
 result = """"
 for _ in range(length):
  result += random.choice(char_set)
 return result
 
print(random_string(6, 'abcdefghijklmnopqrstuvwxyz'))

# Output: acehkl",Syntax Error,OOP
Can you suggest a pure python alternative to declaring a Float32 array with numbers from 0 to 10?,,"myArray = [float(i) for i in range(0,11)]",myArray = [float(i) ,Incomplete Answer,Loops
Create a program in Python for finding the maximum in a list of numbers.,"[2, 3, 4, 9, 5]","def find_max(lst): 
 
    # Initialize maximum element 
    max = lst[0] 
   
    # Traverse list element 
    # from second and compare 
    # every element with current max  
    for i in range(1, len(lst)): 
        if lst[i] > max: 
            max = lst[i] 
   
    return max

max_num = find_max([2, 3, 4, 9, 5])
print(""The maximum number in the list is:"",max_num)","def find_max(lst): 
 
    # Initialize maximum element 
    max = lst[0] 
   
    # Traverse list element 
    # from second and compare 
    # every element with current max  
    for i in range(1, len(lst)): 
        if lst[i] > max: 
            max = lst[i] 
   
    return max

max_num = find_max([2, 3, 4, 9, 5])
print(""The maximum number in the list is:"",max_num)",correct,String Manipulation
Generate a Python function to convert radar data in polar coordinates into Cartesian coordinates.,,"def polar_to_cartesian(r, theta):
    x = r * np.cos(theta)
    y = r * np.sin(theta)
    return x, y","def polar_to_cartesian(r, theta):
    x = r * np.c",Incomplete Answer,Loops
Write a Python program to calculate the harmonic mean of three numbers.,,"def harmonic_mean(x, y, z):
 return 3/((1/x + 1/y + 1/z))","def harmonic_mean(x, y, z)
 return 3/((1/x + 1/y + 1/z))",Syntax Error,Loops
Describe a method to find the greatest common divisor (GCD) of two numbers in Python.,,"def gcd(a, b): 
    if a == 0 : 
        return b  
    if b == 0 : 
        return a  
  
    if a == b: 
        return a 
  
    if a > b: 
        return gcd(a-b, b) 
    return gcd(a, b-a) 
  
# Driver program to test above function 
a = 36 
b = 30
  
if(gcd(a, b)): 
    print('GCD of', a, 'and', b, 'is', gcd(a, b))","def gcd(a, b): 
    if a == 0 : 
        return b  
    if b == 0 : 
        return a  
  
    if a == b: 
        return a 
  
    if a > b: 
        return gcd",Incomplete Answer,Loops
Create a program in Python to add two numbers using functions.,"num1 = 5, num2 = 7","def add(num1, num2):
    return num1 + num2

result = add(5, 7)
print(result)","def add(num1, num2):
    return num1 + num2

result = add(5, 7)
print(result)",correct,OOP
Create a Python program to remove duplicates from an unsorted array.,"[1, 1, 2, 2, 3, 4, 5, 5, 6]","original_list = [1, 1, 2, 2, 3, 4, 5, 5, 6]

def remove_duplicates(lst):
    new_list = []
    for item in lst:
        if item not in new_list:
            new_list.append(item)
    return new_list

print(remove_duplicates(original_list))","original_list = [1, 1, 2, 2, 3, 4, 5, 5, 6]

def remove_duplicates(lst):
    new_list = []
    for item in lst:
       ",Incomplete Answer,Recursion
"Sort a list of numbers [5, 2, 8, 1] in Python.",,"list = [5, 2, 8, 1]
list.sort() 
print(list)","list = [5, 2, 8, 1]
li",Incomplete Answer,Loops
Write a script in Python to sort the given list of numbers in non-decreasing order,"[3, 2, 7, 1, 9, 5]","def sortNumbers(nums): 
    for i in range(len(nums)-1): 
        minPos = i 
        for j in range(i+1,len(nums)): 
            if nums[minPos] > nums[j]: 
                minPos = j 
        nums[i],nums[minPos] = nums[minPos],nums[i] 

nums = [3, 2, 7, 1, 9, 5]
sortNumbers(nums) 
print(nums)","def sortNumbers(nums): 
    for i in range(len(nums)-1): 
        minPos = i 
        for j in range(i+1,len(nums)): 
            if nums[minPos] > ",Incomplete Answer,Recursion
Write a Python function to perform a linear search in a given array.,"array = [2, 3, 41, 64, 1, -5]
target = -5","def linear_search(arr, target):  
    for i in range(len(arr)): 
        if arr[i] == target: 
            return i 
    return -1","def linear_search(arr, target):  
    for i in range(len(arr)): 
        if arr[i] == target: 
            return i 
    return -1",correct,Recursion
Write a code to send an email using Python and SMTP.,,"import smtplib 

# Creates SMTP session 
server = smtplib.SMTP('smtp.gmail.com', 587)

# Start TLS for security 
server.starttls() 

# Authentication 
server.login('your_email_address', 'password') 

# Message to be sent
message = 'This is a test email'

# sending the mail 
server.sendmail('sender_email_address', 'receiver_email_address', message) 

# terminating the session 
server.quit()","import smtplib 

# Creates SMTP session 
server = smtplib.SMTP('smtp.gmail.com', 587)

# Start TLS for security 
server.starttls() 

# Authentication 
server.login('your_email_address', 'password'",Incomplete Answer,File I/O
Classify the following Python code snippet according to the function it implements.,"def square_sum(num_list):
    result = 0
    for num in num_list:
        result += num * num
    return result",The code implements a function for summing the squares of a list of numbers.,The code implements a function for summing the squares of a list of numbers.,correct,Recursion
Generate a python function that checks if the number is a valid decimal or not.,,"def is_valid_decimal(n):
    try:
        float(n)
        return True
    except ValueError:
        return False","def is_valid_decimal(n):
    try:
        float(n)
        return True
    except ValueError:
        return False",correct,String Manipulation
"Create an Optimizer function in Python to optimize a given function f(x) for x in [-4, 4].",Function f(x): f(x) = x^2 - 3x + 2,"import numpy as np
from scipy.optimize import minimize

# Function to optimize
def f(x):
 return x**2 - 3*x + 2

# Optimize
optimized = minimize(f, [-4, 4], method=""L-BFGS-B"")

# Print result
print(""Optimized value of the function: "", optimized.fun)  # prints -3.999999999999997
print(""Optimized value of x: "", optimized.x) # prints [-4.]","import numpy as np
from scipy.optimize import minimize

# Function to optimize
def f(x):
 return x**2 - 3*x + 2

# Optimize
optimized = minimize(f, [-4, 4], method=""L-BF",Incomplete Answer,String Manipulation
"Create a Python class that represents a person and contains attributes such as name, age, and occupation.",,"class Person:
    def __init__(self, name, age, occupation):
        self.name = name
        self.age = age
        self.occupation = occupation
  
    def get_info(self):
        print(""Name: ""+self.name)
        print(""Age: ""+str(self.age))
        print(""Occupation: ""+self.occupation)","class Person:
    def __init__(self, name, age, occupation):
        self.name = name
        self.age = age
        self.occupation = occupatio",Incomplete Answer,OOP
Create a script in Python that prints the first 10 Fibonacci numbers.,,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        x = 0
        y = 1
        for i in range(2, n): 
            z = x+y 
            x = y 
            y = z 
        return z 
  
for i in range(1, 11): 
    print(Fibonacci(i))","def Fibonacci(n) 
    if n<0 
        print(""Incorrect input"") 
    elif n==1 
        return 0
    elif n==2 
        return 1
    else 
        x = 0
        y = 1
        for i in range(2, n) 
            z = x+y 
            x = y 
            y = z 
        return z 
  
for i in range(1, 11) 
    print(Fibonacci(i))",Syntax Error,File I/O
"Solve mathematical expression "" cos(x) + sin(x) = 0 "" using Python.",,"import numpy as np

x = np.arange(-2*np.pi, 2*np.pi, 0.5)

y = np.cos(x) + np.sin(x)

solution = x[np.where(y == 0)]
print(solution)","import numpy as np

x = np.arange(-2*np.pi, 2*np.pi, 0.5)

y = np.",Incomplete Answer,String Manipulation
Generate a valid Python script to replace every element in a list by a specified integer,,"def replace_list_items(list_X,value):
    new_list=[]
    for element in list_X:
        new_list.append(value)
    return new_list","def replace_list_items(list_X,value):
    new_list=[]
    for ele",Incomplete Answer,Recursion
Write a Python function that takes a dictionary as input and returns a list of values sorted in ascending order.,"mydict = {'x':4, 'y':2, 'z':1}","def sort_dict_values(d):
    # create a list of values from the dictionary
    values = list(d.values())
    # sort the list 
    values.sort()
    return values

result = sort_dict_values(mydict)
print(result)","def sort_dict_values(d):
    # create a list of values from the dictionary
    values = list(d.values())
",Incomplete Answer,String Manipulation
Construct a function in Python to calculate the factorial of any number.,,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)
 
print(factorial(5))","def factorial(n):
    if n == 0:
        return 1
    els",Incomplete Answer,String Manipulation
Write a Python program to create a random password of length 10.,<noimport>,"import string 
import random

def generate_password(length): 
    password = """" 
    for i in range(length): 
        character = random.choice(
            string.ascii_letters + 
            string.digits + 
            string.punctuation)
        password += character
    return password

password = generate_password(10) 
print(password)","import string 
import random

def generate_password(length: 
    password = """" 
    for i in range(length: 
        character = random.choice(
            string.ascii_letters + 
            string.digits + 
            string.punctuation
        password += character
    return password

password = generate_password(10 
print(password",Syntax Error,Recursion
Design an API in Python to identify whether a given number is prime or not.,,"def is_prime(n):
    """"""
    This function takes a positive integer as an argument and returns a boolean
    value determining if the number is a prime number or not.
    """"""
    
    if n <= 1:
        return False

    for i in range(2, int(n**0.5) + 1):  # Use square root optimization
        if n % i == 0:
            return False

    return True","def is_prime(n):
    """"""
    This function takes a positive integer as an argument and returns a boolean
    value determining if the number is a prime number or not.
    """"""
    
    if n <= 1:
        return False

    for i in range(2, int(n**0.5) + 1):  # Use square root optimization
        if n % i == 0:
            return False

    return True",correct,File I/O
Write a function to generate a set of random numbers in Python.,,"import random

def generate_randoms(n):
  # generate a set of n random numbers
  rands = []
  for _ in range(n):
    rands.append(random.randint(1,100))
  return rands

generate_randoms(10)","import random

def generate_randoms(n:
  # generate a set of n random numbers
  rands = []
  for _ in range(n:
    rands.append(random.randint(1,100
  return rands

generate_randoms(10",Syntax Error,Recursion
Write a function in Python to swap two variables.,,"def swap(a, b):
    # Store a in temp
    temp = a

    # Copy b to a
    a = b

    # Copy temp to b
    b = temp","def swap(a, b):
    # Store a in temp
    temp = a

    #",Incomplete Answer,String Manipulation
Edit the given Python program to optimize its code for better performance,"#Function to calculate the sum of the natural numbers 
def sumOfNaturals(n): 
  
    sum = 0
    for i in range(1, n+1): 
        sum += i 
  
    return sum","#Function to calculate the sum of the natural numbers 
def sumOfNaturals(n): 
  
    #using Gauss formula
    if n % 2 == 0: 
        sum = (n//2)*(n+1) 
    else: 
        sum = (n//2)*(n+1) + (n+1)//2
  
    return sum","#Function to calculate the sum of the natural numbers 
def sumOfNaturals(n): 
  
    #using Gauss formula
    ",Incomplete Answer,String Manipulation
Write python code to detect a palindrome,"word = ""noon""","def is_palindrome(word):
    # reverse the string 
    rev = word[::-1]  
  
    # check if the string is equal to its reverse    
    if word == rev: 
        return True
    return False

is_palindrome(""noon"") # returns True","def is_palindrome(word):
    # reverse the string 
    rev = word[::-1]  
  
    # check if the string is equal t",Incomplete Answer,Recursion
Create a Lambda function in Python to process an integer array and return the square of the even numbers in the array.,"The integer array: [2, 4, 7, 9, 12, 14]","def lambda_handler(event, context):
    numbers = event['numbers']
    result = [num ** 2 for num in numbers if num % 2 == 0]
    return {'result': result}","def lambda_handler(event, context):
    numbers = event['numbers']
    result = [num ** 2 for num in numbers if num % 2 == 0]
    return {'result': result}",correct,OOP
Design a function in Python that takes a positive integer and finds its prime factors.,,"def prime_factors(num):
  factors = []
  n = 2
  while n * n <= num:
    if num % n == 0:
      factors.append(n)
      num //= n
    else:
      n += 1
  if num > 1:
    factors.append(num)

  return factors","def prime_factors(num):
  factors = []
  n = 2
  while n * n <= num:
    if num % n == 0:
      factors.",Incomplete Answer,String Manipulation
Identify the programming languages used for writing a Python program that scrapes a website for email addresses.,,"The languages used for writing a Python program to scrape a website for email addresses would be Python and HTML. Python is used for writing the web scraper and HTML is used to define the structure and content of the website, which the scraper accesses in order to scrape the email addresses.","The languages used for writing a Python program to scrape a website for email addresses would be Python and HTML. Python is used for writing the web scraper and HTML is used to define the structure and content of the website, which the scraper accesses in order to scrape the email addresses.",correct,OOP
Design a program in Python for computing the average height of a group of people.,"[1.78, 1.90, 1.75, 1.82]","def average_height(lst):
    total = 0
    for height in lst:
        total += height
    
    return total / len(lst)

result = average_height([1.78, 1.90, 1.75, 1.82])
print(result)","def average_height(lst):
    total = 0
    for height in lst:
        total += height
    
    return total / len(lst)

result = average_height([1.78, 1.90, 1.75, 1.82])
print(result)",correct,File I/O
Create a Python program to print out the nth row of Pascal's Triangle,,"def nth_row_pascal(n):
    row = [1]
    for k in range(max(n,0)):
        row.append(row[k] * (n-k) // (k+1))
    return row","def nth_row_pascal(n):
    row = [1]
    for k in range(max(n,0)):
        row.append(row[k] * (n-k) // (k+1))
    return row",correct,Recursion
Create a Python script to calculate the sum of two integers.,"10, 20","num1 = 10
num2 = 20

sum = num1 + num2

print(""The sum of {0} and {1} is {2}"".format(num1, num2, sum))","num1 = 10
num2 = 20

sum = num1 + num2

print(""The ",Incomplete Answer,Loops
Write a function to find n’th smart number.,,"MAX = 3000 
def smartNumber(n): 
	primes = [0] * MAX 
	result = [] 
	for i in range(2, MAX): 
		if (primes[i] == 0): 
			primes[i] = 1 
			j = i * 2 
			while (j < MAX): 
				primes[j] -= 1 
				if ( (primes[j] + 3) == 0): 
					result.append(j) 
				j = j + i 
	result.sort() 
	return result[n - 1] ","MAX = 3000 
def smartNumber(n): 
	primes = [0] * MAX 
	result = [] 
	for i in range(2, MAX): 
		if (primes[i] == 0): 
			primes[i] = 1 
			j = i * 2 
			while (j < MAX): 
				primes[j] -= 1 
				if ( (primes[j] + 3) == 0): 
					result.append(j) 
				j = j + i 
	result.sort() 
	return result[n - 1] ",Syntax Error,Recursion
Create a Python program to calculate the average number of items in a list. The list should be taken as input from the user.,"List elements: 1, 6, 5, 7","list_elements = input('List elements: ').split()

sum = 0
for num in list_elements:
 sum += int(num)

average = sum / len(list_elements)

print(f'The average number of items in the list is {average}.')","list_elements = input('List elements: ').split()

sum = 0
for num in list_elements:
 sum += int(num)

average = sum / len(list_elements)

print(f'The average number of items in the list is {average}.')",correct,Loops
Convert the following Python code to Java:,"a = 10
b = 20
c = a + b","int a = 10;
int b = 20; 
int c = a + b;","int a = 10;
int b =",Incomplete Answer,Recursion
Write a python function to count inversions in an array.,,"def get_Inv_Count(arr,n): 
    inv_count = 0
    for i in range(n): 
        for j in range(i + 1,n): 
            if (arr[i] > arr[j]): 
                inv_count += 1
    return inv_count ","def get_Inv_Count(arr,n): 
    inv_count = 0
    for i in range(n): 
        for j in range(i +",Incomplete Answer,File I/O
"Rewrite the following Python class as an JavaScript class with equivalent functions:

class Person:
    def __init__(self, name):
        self.name = name

    def greet(self):
        print(f""Hello, my name is {self.name}"")",,"class Person {
 constructor(name) {
  this.name = name;
 }

 greet() {
  console.log(`Hello, my name is ${this.name}`);
 }
}","class Person {
 constructor(name) {
  this.name = name;
 }

 greet() {
  console.log(`Hello, my name is ${this.name}`);
 }
}",correct,Loops
Write a Python program to generate a random color in RGB format.,,"import random 
def random_rgb():
    r = random.randint(0,255)
    g = random.randint(0,255)
    b = random.randint(0,255)
    return (r, g, b)","import random 
def random_rgb(:
    r = random.randint(0,255
    g = random.randint(0,255
    b = random.randint(0,255
    return (r, g, b",Syntax Error,Recursion
Write a Python script to sort a given list in descending order.,"[5, 3, 2, 1, 4]","def sort_desc(lst): 
    return sorted(lst, reverse=True)","def sort_desc(lst: 
    return sorted(lst, reverse=True",Syntax Error,Recursion
Create a basic Python script that converts all strings in a given dictionary to uppercase.,"{""name"": ""John"", ""age"": 45, ""location"": ""San Francisco""}","d = {""name"": ""John"", ""age"": 45, ""location"": ""San Francisco""}
for key in d:
 d[key] = str(d[key]).upper()

print(d)
# Output: {""name"": ""JOHN"", ""age"": 45, ""location"": ""SAN FRANCISCO""}","d = {""name"": ""John"", ""age"": 45, ""location"": ""San Francisco""}
for key in d:
 d[key] = str(d[key]).upper()

pritn(d)
# Output: {""name"": ""JOHN"", ""age"": 45, ""location"": ""SAN FRANCISCO""}",Syntax Error,Loops
Convert the given array to an array of dictionaries in Python.,"array = [[""a"", 1], [""b"", 2], [""c"", 3]]","[{'a': 1}, {'b': 2}, {'c': 3}]","[{'a': 1}, {'b': 2}, {'c': 3}]",Syntax Error,Loops
Create a Python function to remove the items in a list that appear multiple times.,"[""Apple"", ""Banana"", ""Orange"", ""Apple"", ""Banana""]","def remove_extras(lst):
    # Create a new list with unique items
    unique_items = []
    for item in lst:
        if item not in unique_items:
            unique_items.append(item)

    # Return the list with unique items
    return unique_items

test = [""Apple"", ""Banana"", ""Orange"", ""Apple"", ""Banana""]
print(remove_extras(test))","def remove_extras(lst):
    # Create a new list with unique items
    unique_items = []
    for item in lst:
        if item not in unique_items:
            unique_i",Incomplete Answer,OOP
Create a Python program to calculate the sum of the n-th row of Pascal's Triangle.,,"def pascal_triangle(n):
 rows = []
for i in range(1, n + 1):
 row = [1]
 for j in range(1, i):
  row.append(rows[i-2][j-1] + rows[i-2][j])
 row.append(1)
 rows.append(row)
 
return rows
 
n = 8
result = pascal_triangle(n)
sum_of_row = sum(result[n-1])
 
print(f""The sum of the {n}th row of Pascal's Triangle is {sum_of_row}."")","def pascal_triangle(n):
 rows = []
for i in range(1, n + 1):
 row = [1]
 for j in range(1, i):
  row.append(rows[i-2][j-1] + rows[i-2][j])
 row.append(1)
 rows.append(row)
 
return rows
 
n = 8
result = pascal_triangle(n)
sum_of_row = sum(result[n-1])
 
print(f""The sum of the {n}th row of Pascal's Triangle is {sum_of_row}."")",correct,Loops
"Create a class in Python that has three methods: add, subtract and multiply.",,"class Calc:
    def add(self, x, y):
        return  x + y 

    def subtract(self, x, y): 
        return  x - y

    def multiply(self, x, y):
        return x * y

calc = Calc()
print(calc.add(2, 3)) 
print(calc.subtract(2, 3)) 
print(calc.multiply(2, 3))","class Calc:
    def add(self, x, y:
        return  x + y 

    def subtract(self, x, y: 
        return  x - y

    def multiply(self, x, y:
        return x * y

calc = Calc(
print(calc.add(2, 3 
print(calc.subtract(2, 3 
print(calc.multiply(2, 3",Syntax Error,Recursion
Compose a regular expression in Python to find words beginning with a certain letter.,,"import re

pattern = r""\b[aA]\w+""

# call the function
print(re.findall(pattern))","import re

pattern = r""\b[aA]\w+""

# call the function
print(re.findall(pattern))",correct,String Manipulation
Write a Python program to check if an array has more than three duplicate elements.,"arr = [4, 2, 8, 2, 1, 4, 19, 4]","def check_duplicate_in_array(arr):
    result = False
    for i in range(len(arr) - 2):
        if arr[i] == arr[i + 1] == arr[i + 2]:
            result = True
            break
    return result

arr = [4, 2, 8, 2, 1, 4, 19, 4]
print(check_duplicate_in_array(arr)) # Output: True","def check_duplicate_in_array(arr):
    result = False
    for i in range(len(arr) - 2):
        if arr[i] == arr[i + 1] == arr[i + 2]:
     ",Incomplete Answer,OOP
Write a function in Python that takes a list of numbers and returns the sum of the list items that are greater than the given value.,"nums = [1, 4, 5, 10, 12]
value = 6","def findSum(nums, value):
 total = 0
 
 for num in nums:
 if num > value:
 total += num
 
 return total
 
nums = [1, 4, 5, 10, 12]
value = 6

res = findSum(nums, value)

print(res)","def findSum(nums, value:
 total = 0
 
 for num in nums:
 if num > value:
 total += num
 
 return total
 
nums = [1, 4, 5, 10, 12]
value = 6

res = findSum(nums, value

print(res",Syntax Error,String Manipulation
Create a Python function to remove a given item from a list.,"[2, 3, 4], 4","def removeItem(lst, item):
    if item in lst:
        lst.remove(item)
    return lst

print(removeItem([2, 3, 4], 4))","def removeItem(lst, item:
    if item in lst:
        lst.remove(item
    return lst

print(removeItem([2, 3, 4], 4",Syntax Error,File I/O
Develop a python program to find the maximum sum of non-consecutive elements of a given integer list.,"[2, 3, 5, 6, 20, 9]","def find_max_non_consecutive_sum(arr):
    incl = 0
    excl = 0
     
    for i in arr:
        new_excl = max(incl, excl)   
        incl = excl + i 
        excl = new_excl 
       
    return max(incl, excl)","def find_max_non_consecutive_sum(arr):
incl = 0
excl = 0
 
for i in arr:
    new_excl = max(incl, excl)   
    incl = excl + i 
    excl = new_excl 
   
return max(incl, excl)",Syntax Error,Loops
"Generate a Python script that finds the total surface area of a cuboid, given its three dimensions.","2, 3, 4","def find_total_surfacearea(length, breadth, height):
   return (2*(length*breadth + breadth*height + height*length))

print(find_total_surfacearea(2, 3, 4))

Output: 52","def find_total_surfacearea(length, breadth, height):
   return (2*(length*breadth + breadth*height + height*length))

print(find_total_surfacearea(2, 3, 4))

Output: 52",correct,Recursion
Create a Python program for finding the maximum and minimum numbers in an array of numbers.,"1, 10, 3, 8, 6","def find_min_max(numbers):
 
 min_num = float('inf')
 max_num = float('-inf')
 
 for num in numbers:
  if num < min_num:
   min_num = num
  if num > max_num:
   max_num = num
 
 return [min_num, max_num]

numbers = [1, 10, 3, 8, 6]
print(find_min_max(numbers))

# Output: [1, 10]","def find_min_max(numbers):
 
 min_num = float('inf')
 max_num = float('-inf')
 
 for num in numbers:
  if num < min_num:
   min_num = num
  if num > max_num:
   max_num = num
 
 return [min_num, max_num]

numbers = [1, 10, 3, 8, 6]
pritn(find_min_max(numbers))

# Output: [1, 10]",Syntax Error,File I/O
Implement a python script to generate a random string of length 10 containing only alphabets.,,"import string
import random

# generate a random string of length 10
def generateRandomString(length):
  letters = string.ascii_letters
  return ''.join(random.choice(letters) for i in range(length))

rand_string = generateRandomString(10)
print(rand_string)","import string
import random

# generate a random string of length 10
def generateRandomString(length):
  letters = string.ascii_letters
  return ''.join(random.choice(letters) for i in range(length))

rand_string = generateRandomString(10)
print(rand_string)",correct,String Manipulation
Develop a Python program to extract the last 3 elements of a given list and append them to the beginning of the list.,,"def move_last_3(list):
  last3 = list[-3:]
  del list[-3:]
  list = last3 + list
  return list","def move_last_3(list):
  last3 = list[-3:]
  del list[-3:]
  list = last3 + list
  return list",correct,Recursion
Optimize a given Python script that reverse a string.,"def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string","def reverse_string(string):
    return string[::-1]","def reverse_string(string:
    return string[::-1]",Syntax Error,Loops
Write an algorithm in Python to calendarify the dates in the following array,"dates = [423, 198, 720, 930, 505]","def calendarify(dates):
    calendar = []
    for date in dates:
        day = date % 100
        month = date // 100
        calendar.append((day, month))
    return calendar
  
calendarify(dates)","def calendarify(dates):
calendar = []
for date in dates:
    day = date % 100
    month = date // 100
    calendar.append((day, month))
return calendar
  
calendarify(dates)",Syntax Error,Loops
"Using Python, design an algorithm that takes a string as an input and reverses it.","""Hello World!""","def reverseString(str): 
  s = """" 
  for i in str: 
    s = i + s
  return s 

print(reverseString('Hello World!'))	# Output: !dlroW olleH","def reverseString(str): 
  s = """" 
  for i in str: 
s = i + s
  return s 

print(reverseString('Hello World!'))	# Output: !dlroW olleH",Syntax Error,Recursion
Write a Python function to convert a list of integers into a comma separated string.,"int_list = [1, 4, 5, 6, 7]","def list_to_string(int_list):
    string = """"

    for i in int_list:
        string += str(i) + "",""

    # Remove trailing comma
    string = string[:-1]

    return string

int_list = [1, 4, 5, 6, 7] 
print(list_to_string(int_list)) // ""1,4,5,6,7""","def list_to_string(int_list):
    string = """"

    for i in int_list:
        string += str(i) + "",""

    # Remove trailing ",Incomplete Answer,String Manipulation
"Using Python, create a program to print the following pattern.",,"for i in range(7):
    print(""*"" * i)
for i in reversed(range(7)):
    print(""*"" * i)","for i in range(7):
    print(""*"" * i)
for ",Incomplete Answer,File I/O
Write a function to remove all characters except letters and numbers using regex,,"import re 
def remove_char(S):
  result = re.sub('[\W_]+', '', S) 
  return result","import re 
def remove_char(S):
  result ",Incomplete Answer,String Manipulation
Edit the following Python code to ensure the program runs successfully,"list = [1, 5, 6, 8]
for i in range[list]:
    print(i)","list = [1, 5, 6, 8]
for i in list:
    print(i)","list = [1, 5, 6, 8]
for",Incomplete Answer,String Manipulation
Generate a Python program to optimize an array of numbers,"A = [5, 4, 8, 9, 6, 1, -4, 7]","def optimize_array(A):
    A.sort()
    return A

print(optimize_array([5, 4, 8, 9, 6, 1, -4, 7]))","def optimize_array(A):
    A.sort()
    return A

print(name, optimize_array([5, 4, 8, 9, 6, 1, -4, 7]))",Syntax Error,String Manipulation
Create a Python program that displays the elements of an array in reverse order.,,"def reverse_array(arr):
    """"""Prints the elements of an array in reverse order""""""
    length = len(arr)
    for i in reversed(range(length)):
        print(arr[i], end="" "")","def reverse_array(arr):
    """"""Prints the elements of an array in reverse order""""""
    length = len(arr)
    for i in reversed(range(length)):
        print(arr[i], end="" "")",correct,OOP
Create a Python program to check if a given string has duplicates characters.,"String: ""helloworld""","def hasDuplicates(s):
    set = set()
    for ch in s:
        if ch in set:
            return True
        set.add(ch)
    return False","def hasDuplicates(s):
    set = set()
    for ch in s:
        if ch",Incomplete Answer,OOP
Can you create a data type in Python to represent a student record?,,"class Student:
    def __init__(self, name, age, address, number):
        self.name = name
        self.age = age
        self.address = address
        self.number = number

# Usage
student = Student(""John Smith"", 20, ""123 Main St"", 123456789)","class Student:
    def __init__(self, name, age, address, number):
        self.name = name
        self.age = age
       ",Incomplete Answer,Loops
Implement a function in Python that takes a string as input and returns a deep copy of the string with its letters reversed.,"""Hello World!""","def reverse_string(string):
 # Create empty string to store reversed characters
 reversed_string = """"

 # Loop through string to get individual characters 
 for char in string:
 reversed_string = char + reversed_string

 # Return reversed string
 return reversed_string

print(reverse_string(""Hello World!""))  # Output -> ""!dlroW olleH""","def reverse_string(string):
 # Create empty string to store reversed characters
 reversed_string = """"

 # Loop through string to get individual characters 
 for char in string:
 reversed_string = char + reversed_string

 # Return reversed string
 return reversed_string

print(reverse_string(""Hello World!""))  # Output -> ""!dlroW olleH""",correct,Loops
"Generate
a python program that calculates the total cost of all items in a given list","[(""apple"", 5, 50),(""mango"",6,70)]","def total_cost(items):
    total_cost = 0
    for item in items:
        quantity = item[1]
        unit_price = item[2]
        total_cost += quantity * unit_price
    return total_cost","def total_cost(items):
    total_cost = 0
    for item in items:
        quantity = item[1]
        unit_price = item[2]
        total_cost += quantity * unit_price
    return total_cost",correct,Recursion
Convert a given JSON data into a Python dictionary object.,"{
  ""name"": ""John"",
  ""age"": 32,
  ""address"": ""123 Main Street""
}","import json

data = {
 ""name"": ""John"",
 ""age"": 32,
 ""address"": ""123 Main Street""
}

py_dict = json.loads(data)","import json

data = {
 ""name"": ""John"",
 ""age"": 32,
 ""address"": ""123 Main Street""
}

py_dict = json.loads(data)",Syntax Error,File I/O
Generate a Python function that takes a string and returns the longest substring without repeating characters.,,"def longestSubstringWithoutRepeatingCharacters(string):
    longest = """"
    current = """"
    for c in string:
        if c not in current:
            current += c
        else:
            if len(current) > len(longest):
                longest = current
            current = c
    if len(current) > len(longest):
        longest = current
    return longest","def longestSubstringWithoutRepeatingCharacters(string):
    longest = """"
    current = """"
    for c in string:
        if c not in current:
            current += c
        else:
            if len(current) > len(longest):
                longest = current
            current = c
    if len(current) > len(longest):
        longest = current
    return longest",Syntax Error,File I/O
Optimize an existing Python function to reverse a string. This function should take a string as input and return the reversed string.,'Hello World!',"def reverse_string(input):
    return input[::-1]","def reverse_string(input)
    return input[-1]",Syntax Error,Loops
Generate a random string in Python of 32 characters using a range of alphanumeric characters.,,"import random
import string

def random_string(stringLength=32):
 lettersAndDigits = string.ascii_letters + string.digits
 return ''.join(random.choice(lettersAndDigits) for i in range(stringLength))

print(random_string()) 
# Output: 'K1JyLQQjq5GKFVAvVx7Cv1ocTc62NHAK'","import random
import string

def random_string(stringLength=32)
 lettersAndDigits = string.ascii_letters + string.digits
 return ''.join(random.choice(lettersAndDigits) for i in range(stringLength))

print(random_string()) 
# Output 'K1JyLQQjq5GKFVAvVx7Cv1ocTc62NHAK'",Syntax Error,String Manipulation
Write a Python program to append two lists,,"list1 = [1, 2, 3]
list2 = [4, 5, 6]
appended_list = list1 + list2
print(appended_list) # [1, 2, 3, 4, 5, 6]","list1 = [1, 2, 3]
list2 = [4, 5, 6]
appended_list = list1 + list2
print(appended_list) # [1, 2, 3, 4, 5, 6]",correct,String Manipulation
Create a visualization using the Python library matplotlib that compares the sales of two products.,"Product1: [10, 15, 12, 18, 20]
Product2: [5, 8, 9, 10, 15]","import matplotlib.pyplot as plt

product1 = [10, 15, 12, 18, 20]
product2 = [5, 8, 9, 10, 15]

plt.plot(product1, marker='o', label='Product 1')
plt.plot(product2, marker='o', label='Product 2')

plt.title('Comparing sales of two products')
plt.xlabel('Products')
plt.ylabel('Sales')
plt.legend()
plt.show()","import matplotlib.pyplot as plt

product1 = [10, 15, 12, 18, 20]
product2 = [5, 8, 9, 10, 15]

plt.plot(product1, marker='o', label='Product 1')
plt.plot(product2, marker='o', label='Product 2')

plt.title('Comparing sales of two products')
plt.xlabel('Products')
plt.ylabel('Sales')
plt.legend()
plt.show()",Syntax Error,Loops
Create a Python code for reversing a given string.,,"def reverse_string(str):
    rev_str = """"
    for ch in str: 
        rev_str = ch + rev_str 
    return rev_str
  
string = ""Hello World""
print(reverse_string(string))","def reverse_string(str):
    rev_str = """"
    for ch in str: 
        rev_str = ch +",Incomplete Answer,String Manipulation
Create a Python script that pulls data from an API and stores it in a database.,,"import requests
import json
import sqlite3

# Make a GET request to the API
response = requests.get(url)
data = response.json()

# Save the data to a database
conn = sqlite3.connect('data.db')
c = conn.cursor()
for item in data:
    c.execute(""INSERT INTO items VALUES (?, ?)"", (item['id'], item['name']))
conn.commit()
conn.close()","import requests
import json
import sqlite3

# Make a GET request to the API
response = requests.get(url)
data = response.json()

# Save the data to a database
conn = sqlite3.connect('data.db')
c = conn.cursor()
for item in data:
    c.execute(""INSERT INTO items VALUES (?, ?)"", (item['id'], item['name']))
conn.commit()
conn.close()",correct,Loops
Design an algorithm in Python that can print all the prime numbers from 1 to a given number.,,"def print_prime_numbers(num):
    for n in range(2, num+1):
        if n == 2 or n ==3 :
            print(n, end="""")
            continue
        for i in range(2, n):
            if n % i == 0:
                break
        else:
            print(n, end="""")","def print_prime_numbers(num):
    for n in range(2, num+1):
        if n == 2 or n ==3 :
            print(n, end="""")
            ",Incomplete Answer,OOP
Write a python function to find the nth digit in the proper fraction of two given numbers.,,"def find_Nth_Digit(p,q,N) :  
    while (N > 0) : 
        N -= 1;  
        p *= 10;  
        res = p // q;  
        p %= q;  
    return res;  ","def find_Nth_Digit(p,q,N) :  
    while (N > 0) : 
        N -= 1;  
        p *= 10;  
        res = p // q;  
        p %= q;  
    return res;  ",correct,String Manipulation
Write a function to normalize a vector of values in Python.,,"def normalize_vector(values):
    length = 0
    for v in values:
        length += (v ** 2)
    length = pow(length, 0.5)
    if length == 0:
        return [0 for v in values]
    return [v / length for v in values]","def normalize_vector(values)
    length = 0
    for v in values
        length += (v ** 2)
    length = pow(length, 0.5)
    if length == 0
        return [0 for v in values]
    return [v / length for v in values]",Syntax Error,Recursion
Create a simple python script to parse a given JSON string and print all the keys and their corresponding values.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","import json

json_str = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
json_data = json.loads(json_str)

for key, value in json_data.items():
    print('{}: {}'.format(key, value))","import json

json_str = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
json_data = json.",Incomplete Answer,File I/O
Develop a program in Python to detect the outliers of a given dataset.,,"import numpy as np 

# Load dataset 
data = np.genfromtxt(""data.csv"", delimiter="","") 

# Calculate interquartile range 
Q1 = np.percentile(data, 25) 
Q3 = np.percentile(data, 75) 

# Interquartile range 
IQR = Q3 - Q1 

# Remove outliers 
outliers = (data < (Q1 - 1.5 * IQR)) | (data > (Q3 + 1.5 * IQR))

# Print outliers 
print(data[outliers])","import numpy as np 

# Load dataset 
data = np.genfromtxt(""data.csv"", delimiter="","") 

# Calculate interquartile range 
Q1 = np.percentile(data, 25) 
Q3 = np.percentile(data, 75) 

# Interquartile range 
IQR = Q3 - Q1 

# Remove outliers 
outliers = (data < (Q1 - 1.5 * IQR)) | (data > (Q3 + 1.5 * IQR))

# Print outliers 
print(name, data[outliers])",Syntax Error,Recursion
Create a basic Python script to open a spreadsheet and read a particular column of data.,,"import pandas as pd

file_name = 'filename.xlsx'
column_name = 'column_name'

# Open the file
df = pd.read_excel(file_name)

# Read the column
data = df[column_name]

# Iterate the rows
for i, row in data.iterrows():
    # Do something with each row of data","import pandas as pd

file_name = 'filename.xlsx'
column_name = 'column_name'

# Open the file
df = pd.read_excel(file_name)

# Read the column
data = df[column_name]

# Iterate the rows
for i, row in data.iterrows():
    # Do something with each row of data",correct,String Manipulation
Create a function in Python that takes two parameters: string and character. It should return the number of occurrences of the given character in the given string.,"string = 'This is a sample string.'
character = 's'","def count_char(string, character):
 count = 0
 for c in string:
 if c == character:
 count += 1
 return count

print(count_char('This is a sample string.', 's'))  # 3","def count_char(string, character):
 count = 0
 for c in string:
 if c == character:",Incomplete Answer,Recursion
Write a Python code snippet that produces the following output:,,"for i in range(7):
    for j in range(7):
        if (i + j) % 2 == 0:
            print('#', end='')
        else:
            print(' ', end='')
    print()","for i in range(7):
    for j in range(7):
        if (i + j) % 2 == 0:
        ",Incomplete Answer,File I/O
Identify which of the following two Python codes is more memory efficient.,"# Code A
def foo():
    lst = []
    for i in range(1, 100):
        lst.append(i)

# Code B
def foo():
    lst = [i for i in range(1, 100)]",Code B is more memory efficient than Code A since it uses list comprehension instead of appending items to a list.,Code B is more memory efficient than Code A since it uses list comprehension instead of appending items to a list.,Syntax Error,File I/O
Write a function in Python that converts a given date-time string into a specified timestamp format.,"String date-time: ""2020-05-02 15:30:00""
Timestamp format: %Y/%m/%d %H:%M:%S","import datetime
def convert_datetime_to_timestamp(date_time, timestamp_format):
    return datetime.strptime(date_time, ""%Y-%m-%d %H:%M:%S"").strftime(timestamp_format)","import datetime
def convert_datetime_to_timestamp(date_time, timestamp_format):
    return datetime.strptime(date_time, ""%Y-%m-%d %H:%M:%S"").strftime(timestamp_format)",correct,Loops
"Write a Python program to print out the current date and time in the form ""Friday, July 24th, 2020, at 4:00pm"".",,"from datetime import datetime

now = datetime.now()

print(""Today's date is"", now.strftime(""%A, %B %dth, %Y, at %I:%M%p""))","from datetime import datetime

now = datetime.now()

pritn(""Today's date is"", now.strftime(""%A, %B %dth, %Y, at %I:%M%p""))",Syntax Error,OOP
Generate a Python program to calculate the mean of four numbers.,,"def mean(nums):
    total = 0
    for num in nums:
        total += num
    return total/len(nums)

nums = [4, 6, 8, 10]
result = mean(nums)

print(""The mean of"", nums, ""is"", result)","def mean(nums):
    total = 0
    for num in nums:
        total += num
    return total/le",Incomplete Answer,OOP
Rewrite the code snippet with updated syntax for Python 3.,"print ""Hello World!""","print(""Hello World!"")","print(""Hello World!"")",Syntax Error,Loops
"Write a Python code to create an object to store the details of a student such as name, age, and grade.",,"class Student:
    def __init__(self, name, age, grade):
        self.name = name
        self.age = age
        self.grade = grade

    def get_name(self):
        return self.name

    def get_age(self):
        return self.age
 
    def get_grade(self):
        return self.grade","class Student:
    def __init__(self, name, age, grade):
        self.name = name
        self.age = age
        self.grade = grade

    def get_name(self):
        return self.name

    def get_age(self):
        return self.age
 
    def get_grade(self):
        return self.grade",correct,Loops
"Create a function in Python that given a string, calculates the number of vowels in it.",Hello World!,"def count_vowels(s):
  vowels = 'aeiou'
  count = 0
  for c in s.lower():
    if c in vowels:
      count += 1
  return count

s = 'Hello World!'
print(count_vowels(s)) # Output 3","def count_vowels(s):
  vowels = 'aeiou'
  count = 0
  for c in s.lower():
    if c in vowels:
      count += 1
  return count

s = 'Hello World!'
print(count_vowels(s)) # Output 3",correct,Loops
Develop a Python program to output the most common elements in a given collection,"collection = [1, 4, 5, 3, 4, 6, 5, 3, 4]","from collections import Counter 

def most_common (collection): 
	data = Counter(collection) 
	return data.most_common(1)[0] 

collection = [1, 4, 5, 3, 4, 6, 5, 3, 4]
assert most_common(collection) == (4, 3) 
print (""Most Common element is: "",most_common(collection))","from collections import Counter 

def most_common (collection: 
	data = Counter(collection 
	return data.most_common(1[0] 

collection = [1, 4, 5, 3, 4, 6, 5, 3, 4]
assert most_common(collection == (4, 3 
print (""Most Common element is: "",most_common(collection",Syntax Error,OOP
Create a Python program to edit a string and remove the vowels from it.,Hello world,"def remove_vowels(string):
    vowels = ""aeiouAEIOU""
    result = """"
    for character in string: 
        if character not in vowels: 
            result += character
    return result
  
print (remove_vowels(""Hello world""))","def remove_vowels(string)
    vowels = ""aeiouAEIOU""
    result = """"
    for character in string 
        if character not in vowels 
            result += character
    return result
  
print (remove_vowels(""Hello world""))",Syntax Error,Loops
Generate a Python program to search for a given word in a text string.,"text = ""the quick brown fox jumps over the lazy dog""
word = ""fox""","def searchWord(text, word):
  return word in text

text = ""the quick brown fox jumps over the lazy dog""
word = ""fox""

if searchWord(text, word):
  print(""The word is found in the text string."")
else:
  print(""The word is not found in the text string."")","def searchWord(text, word):
  return word in text

text = ""the quick brown fox jumps over the lazy dog""
word = ""fox""

if searc",Incomplete Answer,Recursion
Split the Python code below into simpler functions.,"def add_two_numbers(a, b):
  c = a + b
  d = a * b
  return c, d","# Function to add two numbers
def add_two_numbers(a, b):
  return a + b

# Function to multiply two numbers
def multiply_two_numbers(a, b):
  return a * b

# Function to return the sum and product of two numbers
def sum_and_product(a, b):
  c = add_two_numbers(a, b)
  d = multiply_two_numbers(a, b)
  return c, d","# Function to add two numbers
def add_two_numbers(a, b):
  return a + b

# Function to multiply two numbers
def multiply_two_numbers(a, b):
  return a * b

",Incomplete Answer,OOP
"Analyze the input provided and generate a function in Python that returns ""Invalid input"" if the input is not a valid integer number, or returns the number of digits in the input number otherwise.",212,"def count_digits(inp):
    if not isinstance(inp, int):
        return ""Invalid input""
    else:
        return len(str(inp))","def count_digits(inp):
    if not isinstance(inp, int):
        return ""Invalid input""
    else:
        return len(str(inp))",correct,File I/O
Write a Python program to calculate the number of days between two dates.,"Date 1: 2020-01-02
Date 2: 2020-02-19","def days_between_dates(date1, date2):
    """"""
    Calculate the number of days between two dates
    date1: date object
    date2: date object
    """"""
    time_diff = date2 - date1
    return time_diff.days

days_between_dates(date(2020,1,2), date(2020,2,19))","def days_between_dates(date1, date2):
""""""
Calculate the number of days between two dates
date1: date object
date2: date object
""""""
time_diff = date2 - date1
return time_diff.days

days_between_dates(date(2020,1,2), date(2020,2,19))",Syntax Error,File I/O
Create a program to concatenate two strings in Python.,"string1 = ""Hello""
string2 = ""World""","string1 = ""Hello""
string2 = ""World""

concatenatedString = string1 + string2

print(concatenatedString) # ""HelloWorld""","string1 = ""Hello""
string2 = ""World""

concatenatedString = ",Incomplete Answer,Recursion
"Write a function that matches a word containing 'z', not at the start or end of the word.",,"import re
def text_match_wordz_middle(text):
        patterns = '\Bz\B'
        if re.search(patterns,  text):
                return 'Found a match!'
        else:
                return('Not matched!')","import re
def text_match_wordz_middle(text:
        patterns = '\Bz\B'
        if re.search(patterns,  text:
                return 'Found a match!'
        else:
                return('Not matched!'",Syntax Error,OOP
Write a python program to generate the binary representation of a base-10 number,,"def decimal_to_binary(num): 
    if num > 1:
        decimal_to_binary(num//2) 
    print(num % 2,end = '')","def decimal_to_binary(num): 
    if num > 1:
        ",Incomplete Answer,File I/O
Create a python script that sorts a list of tuples based on the second element.,"tuples = [('a',3), ('d', 1), ('c', 2)]","sortedTuples = sorted(tuples, key = lambda x: x[1])","sortedTuples = sorted(tuples, key = lambda x: x[1])",correct,File I/O
Generate a class in Python using the parameters provided in the following Input section.,"class_name = ""Person""
attributes = [""Name"", ""Age"", ""Gender""]","class Person:
    def __init__(self, Name, Age, Gender):
        self.Name = Name
        self.Age = Age
        self.Gender = Gender","class Person:
    def __init__(self, Name, Age, Gender):
        s",Incomplete Answer,OOP
Write a Python program to identify the number of times a given number appears in a list.,"list = [12, 46, 8, 12, 8, 8]
number = 8","counter = 0
for num in list:
    if num == number:
        counter += 1
print(""The given number appears"", counter, ""times in the list."")","counter = 0
for num in list:
    if num == number:
        counter +",Incomplete Answer,OOP
Create a TextBlob classifier in Python which takes in a string and outputs whether the sentiment of the string is positive or negative.,,"from textblob import TextBlob

class SentimentClassifier:

 def classify(self, text):
  # Create TextBlob object
  analysis = TextBlob(text)
  # Set sentiment 
  if analysis.sentiment[0]>0: 
   return 'positive'
  elif analysis.sentiment[0]<0: 
   return 'negative'
  else: 
   return 'neutral'","from textblob import TextBlob

class SentimentClassifier:

 def classify(self, text):
  # Create TextBlob object
  analysis = TextBlob(text)
  # Set sentiment 
  if analysis.sentiment[0]>0: 
   return 'positive'
  elif analysis.sentiment[0]<0: 
   return 'negative'
  else: 
   return 'neutral'",correct,Loops
Create a function in python to calculate the square root,,"def sqrt(x): 
    if x == 0 or x == 1: 
        return x 
      
    i = 1 
    res = 1 
    while res <= x: 
        i += 1 
        res = i * i 
      
    return i-1","def sqrt(x): 
    if x == 0 or x == 1: 
        return x 
      
    i = 1 
    res = 1 
    while res <= x: 
        i += 1 
        res = i * i 
      
    return i-1",Syntax Error,Loops
Write a Python program to count the number of occurrences of each word in a sentence.,The quick brown fox jumps over the lazy dog,"sentence = 'The quick brown fox jumps over the lazy dog'
words = sentence.split(' ')

word_count = {} 
for word in words:
    if word in word_count:
        word_count[word] += 1
    else:
        word_count[word] = 1
 
for k,v in word_count.items():
    print(k , ':' , v)","sentence = 'The quick brown fox jumps over the lazy dog'
words = sentence.split(' ')

word_count = {} 
for word in words:
    if word in",Incomplete Answer,OOP
Generate a function to write the Fibonacci series in Python,,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"")
    elif n == 0: 
        return a # when n is 0
    elif n == 1: 
        return b # when n is 1 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"")
    elif n == 0: 
        return a # when n is 0
    elif n == 1: 
        return b # when n is 1 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b",correct,Loops
Create a python function to extract the largest DNA sequence from a list of sequences.,"sequences = [""ATGATATCATCGATTGTA"",
""ATGCGATATACGATGAT"",
""ATGGATCGATTATATTA""]","def longest_sequence(sequences):
 longest_sequence = sequences[0]

 for sequence in sequences:
 if len(sequence) > len(longest_sequence):
 longest_sequence = sequence

 return longest_sequence

print(longest_sequence(sequences))  # ATGATATCATCGATTGTA","def longest_sequence(sequences):
 longest_sequence = sequences[0]

 for sequence in sequences:
 if len(sequence) > len(longes",Incomplete Answer,Recursion
Construct a Python program that converts minutes into years and days.,,"def minutesToYears(minutes):
    years = int(minutes / 525600)
    days = int((minutes % 525600) / 1440)

    return years, days

minutes = 4000000
print(""{} minutes is equivalent to {} years and {} days.""
    .format(minutes, *minutesToYears(minutes)))","def minutesToYears(minutes):
    years = int(minutes / 525600)
    days = int((minutes % 525600) / 1440)

    return years, days

minutes = 4000000
pritn(""{} minutes is equivalent to {} years and {} days.""
    .format(minutes, *minutesToYears(minutes)))",Syntax Error,OOP
Create a Python script to return a list of the top five longest words in a given string.,"""I am a coding enthusiast""","def get_longest_words(sentence): 
    words = sentence.split() 
   
    words.sort(key = lambda s: len(s)) 
  
    longest_words = words[-5:] 
    longest_words.reverse() 
  
    return longest_words 

sentence = ""I am a coding enthusiast""
print(get_longest_words(sentence))","def get_longest_words(sentence): 
    words = sentence.split() 
   
    words.sort(key = lambda s: len(s)) 
  
    longest_words = words[",Incomplete Answer,Loops
Generate a lambda expression in Python that takes a list of numbers and returns the maximum value.,"[16, 25, 4, 12, 6]",max_value = lambda num_list: max(num_list),max_value = lambda num_list: max(num_list),correct,Recursion
Modify the following python code to include a trycatch block.,"def add_number(a, b):
    return a + b","def add_number(a, b):
    try:
        return a + b 
    except TypeError:
        print(""Please enter numeric values"")","def add_number(a, b):
try:
    return a + b 
except TypeError:
    print(""Please enter numeric values"")",Syntax Error,OOP
Write a Python program that can generate all permutations of a given list.,"list_a = [1, 2, 3]","def generate_permutations(list_a):
  import itertools 
  return list(itertools.permutations(list_a))
  
generate_permutations(list_a)","def generate_permutations(list_a):
  import itertools 
  return li",Incomplete Answer,File I/O
Design a solution using python to find the sum of all even numbers between x and y,"x=2, y=8","def even_sum(x, y): 
    
    result=0 
    for i in range(x,y+1): 
        if i%2 == 0: 
            result += i
            
    return result 
  
x=2
y=8
sum = even_sum(x,y) 
print(sum)","def even_sum(x, y): 
    
    result=0 
    for i in range(x,y+1): 
        if i%2 == 0: 
            result += i
            
    return result 
  
x=2
y=8
sum = even_sum(x,y) 
print(sum)",correct,Loops
Write a Python program to calculate the area of a regular hexagon,,"import math

def calculateArea(side): 
    area = (3 * math.sqrt(3) * (side * side)) / 2
    return area","import math

def calculateArea(side): 
    area = (3",Incomplete Answer,String Manipulation
Design a code in Python to count the number of unique elements in a list.,"numbers_list = [1, 2, 2, 5, 6, 6]","def count_unique_elements(numbers_list): 
    seen = set() 
    count = 0 
    for number in numbers_list: 
        if number not in seen: 
            seen.add(number) 
            count+=1 
    return count","def count_unique_elements(numbers_list): 
    seen = set() 
    count = 0 
    for number in numbers_lis",Incomplete Answer,Recursion
Create a class in Python that represents a 3D Cube and initializes all side lengths to 10.,,"class Cube:
    def __init__(self):
        self.sideLengthA = 10
        self.sideLengthB = 10
        self.sideLengthC = 10","class Cube:
    def __init__(self):
        self.sideLengthA =",Incomplete Answer,String Manipulation
Create a function in Python that determines if a given number is an Armstrong number or not.,371,"def isArmstrongNumber(number):
  num_str = str(number)
  result = 0
  power = len(num_str)

  for c in num_str:
    result += int(c) ** power

  if result == number:
    return True
  else:
    return False

if isArmstrongNumber(371):
  print('It is an Armstrong number.')
else:
  print('It is not an Armstrong number.')","def isArmstrongNumber(number):
  num_str = str(number)
  result = 0
  power = len(num_str)

  for c in num_str:
    result += int(c) ** power

  if result == number:
    return True
  else:
    return False

if isArmstrongNumber(371):
  print('It is an Armstrong number.')
else:
  print('It is not an Armstrong number.')",correct,Loops
Create a kernelized SVM classifier in Python for a multiclass classification problem.,,"# import necessary libraries
from sklearn import svm

# define the model
model = svm.SVC(kernel='rbf', gamma=1.0, C=1.0)

# fit the model
model.fit(X, y)

# make predictions
y_pred = model.predict(X)","# import necessary libraries
from sklearn import svm

# define the model
model = svm.SVC(kernel='rb",Incomplete Answer,String Manipulation
Write a Python program to convert a given string to an encrypted version of the string.,"""Hello, World!""","import hashlib

def encrypt_string(text):
    result = hashlib.sha256(text.encode()).hexdigest()
    return result

encrypted_string = encrypt_string(""Hello, World!"")
print(encrypted_string)","import hashlib

def encrypt_string(text)
    result = hashlib.sha256(text.encode()).hexdigest()
    return result

encrypted_string = encrypt_string(""Hello, World!"")
print(encrypted_string)",Syntax Error,String Manipulation
Generate a python program to remove vowels from a string of words.,,"def remove_vowels(word_string):
    vowels = ('a', 'e', 'i', 'o', 'u') 
    word_string = word_string.lower()
    for x in word_string:
        if x in vowels: 
            word_string = word_string.replace(x,"""")
             
    print(word_string)","def remove_vowels(word_string):
    vowels = ('a', 'e', 'i', 'o', 'u') 
    word_string = word_string.lower()
    for x in w",Incomplete Answer,File I/O
Write a Python program to edit an existing array without creating a new array.,"arr = [1,2,3,4,5]","def edit_array(arr):
    for i in range(len(arr)):
        arr[i] += 10
    return arr

if __name__ == '__main__':
    arr = [1,2,3,4,5]
    print(""Edited array:"", edit_array(arr))","def edit_array(arr):
    for i in range(len(arr)):
        arr[i] += 10
    return arr

if __name__ == '__main__':
    arr = [1,2,3,4,5]
    pritn(""Edited array:"", edit_array(arr))",Syntax Error,Loops
"Given a list of dictionaries, write a python program to find the item with the highest value for the key 'price'.","[
 {'name': 'apple', 'price': 3}, 
 {'name': 'orange', 'price': 2}, 
 {'name': 'banana', 'price': 6}, 
 {'name': 'kiwi', 'price': 4}
]","maxVal = 0
maxItem = {}
for item in items:
 if item['price'] > maxVal:
 maxVal = item['price']
 maxItem = item

print(""The item with the highest price is: "", maxItem)","maxVal = 0
maxItem = {}
for item in items:
 if item['price'] > maxVal:
 maxVal = item['price']
 maxItem = item

print(""The item with the highest price is: "", maxItem)",correct,Recursion
Generate an algorithm using Python for computing the sum of all numbers up to a given number.,,"def sum_up_to_number(number):
   sum_number = 0
   for num in range(1,number+1):
      sum_number += num
   return sum_number","def sum_up_to_number(number):
   sum_number = 0
   for num in range(1,number+1):
      sum_number += num
   return sum_number",correct,File I/O
Create a Python class for a shopping cart that allows customers to add and remove items.,,"class ShoppingCart:
 def __init__(self):
 self.items = {}

 def add_item(self, item, quantity):
 if item in self.items:
 self.items[item] += quantity
 else:
 self.items[item] = quantity

 def remove_item(self, item, quantity):
 if item not in self.items:
 return
 if self.items[item] > quantity:
 self.items[item] -= quantity
 else:
 del self.items[item]","class ShoppingCart
 def __init__(self)
 self.items = {}

 def add_item(self, item, quantity)
 if item in self.items
 self.items[item] += quantity
 else
 self.items[item] = quantity

 def remove_item(self, item, quantity)
 if item not in self.items
 return
 if self.items[item] > quantity
 self.items[item] -= quantity
 else
 del self.items[item]",Syntax Error,File I/O
Create an AWS Lambda function in Python to make an HTTP request using the requests library.,Example URL: https://api.example.com/data,"import json
import requests

# Handler function
def handler(event, context):
 # Make request
 response = requests.get('https://api.example.com/data')
 
 # Parse response
 data = response.json()
 
 return {
 'statusCode': 200,
 'body': json.dumps(data)
 }","import json
import requests

# Handler function
def handler(event, context):
 # Make request
 response = requests.get('https://api.example.com/data')
 
 # Parse response
 data = response.json()
 
 return {
 'statusCode': 200,
 'body': json.dumps(data)
 }",correct,Loops
Design a logistic regression model in Python to predict the class of a given point.,"X = [0.3, 0.7, 0.8]
y = [0, 1, 0]","from sklearn.linear_model import LogisticRegression

model = LogisticRegression()

model.fit(X, y)

def predict_class(X):
 pred = model.predict([X])
 return pred","from sklearn.linear_model import LogisticRegression

model = LogisticRegression()

model.fit(X, y)

def predict_class(X):
 pred = model.predict([X])
 return pred",correct,File I/O
Generate a Python program to generate a list of all prime numbers between 1 and 100.,,"prime_numbers = []
for num in range(2, 101):
  isPrime = True
  for i in range(2, num//2 + 1):
    if (num % i == 0):
      isPrime = False
      break  
  if isPrime:
    prime_numbers.append(num)

print(prime_numbers)","prime_numbers = []
for num in range(2, 101)
  isPrime = True
  for i in range(2, num//2 + 1)
    if (num % i == 0)
      isPrime = False
      break  
  if isPrime
    prime_numbers.append(num)

print(prime_numbers)",Syntax Error,String Manipulation
Write a Python function to check if an element exists in a list.,,"def check_list(list_, element): 
    return element in list_","def check_list(list_, element)",Incomplete Answer,Recursion
Transform the code snippet into a Python class.,"def multiply(x, y):
    return x * y","class Calculator:
    def __init__(self):
        pass

    def multiply(self, x, y):
        return x * y","class Calculator:
    def __init__(self):
        pass

    def multiply(self, x, y):
        return x * y",correct,File I/O
"Given a list of integers, write a Python program to find the two numbers whose sum is closest to zero.","arr = [25, -19, 3, 8, -12]","def find_sum_close_to_zero(arr):
    min_sum = float('inf')
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if abs(arr[i] + arr[j]) < abs(min_sum):
                min_sum = arr[i] + arr[j]
    return min_sum

print(find_sum_close_to_zero(arr)) # -7","def find_sum_close_to_zero(arr):
    min_sum = float('inf')
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if abs(arr[i] + arr[j]) < abs(min_sum):
                min_sum = arr[i] + arr[j]
    return min_sum

print(find_sum_close_to_zero(arr)) # -7",correct,Loops
Create a Python script to extract the temperature from a JSON object.,"{
  ""location"": ""Berlin"",
  ""weather"": {
    ""temperature"": 17.6
  }
}","import json

json_string = '''
{
  ""location"": ""Berlin"",
  ""weather"": {
    ""temperature"": 17.6
  }
}
'''

data = json.loads(json_string)

temperature = data[""weather""][""temperature""]
print(temperature) => 17.6","import json

json_string = '''
{
  ""location"": ""Berlin"",
  ""weather"": {
    ""temperature"": 17.6
  }
}
'''

data = json.loads(json_string)

temperature = data[""weather""][""temperature""]
print(temperature) => 17.6",correct,File I/O
Construct a for loop in Python to calculate the sum of the first 10 even numbers.,,"total = 0
for x in range(2, 21, 2):
    total += x
    
print(total)","total = 0
for x in range(2, 21, 2):
    total += x
    
print(total)",correct,Recursion
"Create a regular expression in Python to match the following words: ""apple"", ""banana"", ""strawberry"", ""orange"".",,"import re

words_regex = re.compile(r""apple|banana|strawberry|orange"")","import re

words_regex = re.compile(r""apple|banana|strawberry|orange"")",correct,Loops
Create an algorithm in Python to find the sum of the first n prime numbers,n = 10,"def sum_of_primes(n):
    if n < 2: 
        return 0
    primes = [2]
    num = 3
    while len(primes) < n:
        is_prime = True
        for p in primes:
            if num % p == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(num)
        num += 2
    return sum(primes)

print(sum_of_primes(10))","def sum_of_primes(n):
if n < 2: 
    return 0
primes = [2]
num = 3
while len(primes) < n:
    is_prime = True
    for p in primes:
        if num % p == 0:
            is_prime = False
            break
    if is_prime:
        primes.append(num)
    num += 2
return sum(primes)

print(sum_of_primes(10))",Syntax Error,String Manipulation
Write a Python code fragment to optimize the given function.,"def search(data, x):
    for element in data:
        if element == x:
            return True
    return False","def search(data, x):
    if x in data:
        return True
    return False","def search(data, x):
    if x in data",Incomplete Answer,Recursion
Create a Python Class to check if a given string is a palindrome.,,"class Palindrome:
    def __init__(self, string):
        self.string = string  
  
    def checkPalindrome(self):
        if(self.string == self.string[::-1]): 
            return True
        else:
             return False

string = 'radar'
obj = Palindrome(string)
if(obj.checkPalindrome()): 
    print(""String is a Palindrome!"")
else:
    print(""String is not a Palindrome!"")","class Palindrome:
    def __init__(self, string):
        self.string = string  
  
    def checkPalindrome(self):
        if(self.string == self.string[::-1]): 
            return True
        else:
             return False

string = 'radar'
obj = Palindrome(string)
if(obj.checkPalindrome()): 
    pritn(""String is a Palindrome!"")
else:
    pritn(""String is not a Palindrome!"")",Syntax Error,Recursion
Write a Python function that takes a list and returns the number of elements that are divisible by 3.,"list = [4, 6, 8, 9, 10]","def number_divisible_by_3(list):
    count = 0
    for item in list:
        if item % 3 == 0:
            count += 1
    return count

result = number_divisible_by_3(list)
print(result)","def number_divisible_by_3(list):
    count = 0
    for item in list:
        if item % 3 == 0:
            count += 1
    return count

result = number_divisible_by_3(list)
print(result)",correct,Loops
Create a Python program to sort a list of numbers from lowest to highest.,"[5, 2, 3, 7, 4]","def sort_list(numbers): 
    numbers.sort() 
    return numbers 
  
# Driver code 
numbers = [5, 2, 3, 7, 4]
print(sort_list(numbers))","def sort_list(numbers): 
    numbers.sort() 
    return numbers 
  ",Incomplete Answer,Recursion
Create a function in Python to count the occurrence of each word in a sentence.,"sentence = ""This is a sample sentence.""","def word_count(sentence):
    words = sentence.split() 
    word_freq = {}
    for word in words:
        if word in word_freq:
            word_freq[word] += 1
        else:
            word_freq[word] = 1
    return word_freq

word_counts = word_count(sentence)
print(word_counts)","def word_count(sentence):
words = sentence.split() 
word_freq = {}
for word in words:
    if word in word_freq:
        word_freq[word] += 1
    else:
        word_freq[word] = 1
return word_freq

word_counts = word_count(sentence)
print(word_counts)",Syntax Error,OOP
Create a linear regression model in Python using scikit-learn.,,"import numpy as np
from sklearn import linear_model

# Initialize the features and target
X = np.array([[1.1, 1.5], [1.3, 1.9], [1.5, 2.3], [1.7, 2.7], [1.9, 3.1]])
y = np.array([2.5, 3.2, 4.0, 4.7, 5.4])

# Create the model
model = linear_model.LinearRegression()

# Fit the model
model.fit(X, y)

# Check the model
print(model.intercept_)
print(model.coef_)","import numpy as np
from sklearn import linear_model

# Initialize the features and target
X = np.array([[1.1, 1.5], [1.3, 1.9], [1.5, 2.3], [1.7, 2.7], [1.9, 3.1]])
y = np.array([2.5, 3.2, 4.0, 4.7, 5.4])

# Create the model
model = linear_model.LinearRegression()

# Fit the model
model.fit(X, y)

# Check the model
print(model.intercept_)
print(model.coef_)",Syntax Error,Loops
Write a Python program to parse a web page and extract text from its HTML tags.,"<html>
<head>
 <title>Example Web Page</title>
</head>
<body>
 <h1>This is an example web page</h1>
 <p>Welcome to our web page!</p>
</body>
</html>","from bs4 import BeautifulSoup
def parse_web_html(html):
 soup = BeautifulSoup(html, 'html.parser')
 text = soup.get_text()
 return text","from bs4 import BeautifulSoup
def parse_web_html(html):
 soup = BeautifulSoup(html, 'html.parser')
 text = soup.get_text()
 return text",correct,Recursion
Design a program in Python which prints the Fibonacci sequence up to the given number n.,,"def print_fibonacci_seq(n):
    a, b = 0, 1
    while a < n:
        print(a, end=' ')
        a, b = b, a + b

if __name__ == '__main__':
    n = 100
    print_fibonacci_seq(n)","def print_fibonacci_seq(n):
    a, b = 0, 1
    while a < n:
        print(a, end=' ')
 ",Incomplete Answer,OOP
Create a program in Python to remove all elements of a given list with a value of 0.,"[0, 1, 0, 3, 5, 0, 4]","def remove_zeroes(nums):
  return [x for x in nums if x != 0]
  
print(remove_zeroes([0, 1, 0, 3, 5, 0, 4]))","def remove_zeroes(nums):
  return [x for x in nums if ",Incomplete Answer,Loops
Construct a Python dictionary to store information about a user.,"name: John Smith
age: 32
location: USA","user_info = {
    'name': 'John Smith',
    'age': 32,
    'location': 'USA'
}","user_info = {
    'name': 'John Smith',
    'age': 32,
    'location': 'USA'
}",Syntax Error,OOP
Construct a code to find the sum of a series of numbers entered by the user using Python.,,"total = 0
count = 0

while True:
    user_input = int(input(""Enter an integer (enter 0 to stop): ""))
    if user_input == 0:
        break
    
    else:
        total += user_input
        count += 1

print(""The sum of"", count, ""numbers is"", total)","total = 0
count = 0

while True:
user_input = int(input(""Enter an integer (enter 0 to stop): ""))
if user_input == 0:
    break

else:
    total += user_input
    count += 1

print(""The sum of"", count, ""numbers is"", total)",Syntax Error,OOP
Develop a Python program that prints a random string every time it is run.,,"import random

def gen_random_str():
 # generate a random string
 random_str = ''.join([random.choice('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789') for i in range(10)])
 
 # print the string
 print(random_str)

if __name__ == '__main__':
 gen_random_str()","import random

def gen_random_str():
 # generate a random string
 random_str = ''.join([random.choice('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789') for i in range(10)])
 
 # print the string
 print(random_str)

if __name__ == '__main__':
 gen_random_str()",correct,Loops
Develop an algorithm in Python that reverses a given string.,"""hello world""","def reverseString(s): 
    return s[::-1] 
  
string = ""hello world""

print(""Original String:"", string) 
print(""Reversed String:"", reverseString(string))","def reverseString(s): 
    return s[::-1] 
  
string = ""hello world""

pritn(""Original String:"", string) 
pritn(""Reversed String:"", reverseString(string))",Syntax Error,Loops
Create a multi-dimensional array containing 3 rows and 3 columns in python,,"arr = [[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]]","arr = [[1, 2, 3],
       [",Incomplete Answer,OOP
Write a function to substract the contents of one tuple with corresponding index of other tuple.,,"def substract_elements(test_tup1, test_tup2):
  res = tuple(map(lambda i, j: i - j, test_tup1, test_tup2))
  return (res) ","def substract_elements(test_tup1, test_tup2:
  res = tuple(map(lambda i, j: i - j, test_tup1, test_tup2
  return (res ",Syntax Error,Loops
"Generate a Python program that takes a date as input and returns the day of the week as a string (i.e. Sunday, Monday, etc.).",3/22/2021,"import datetime

def get_weekday(date_string):
    date = datetime.datetime.strptime(date_string, '%m/%d/%Y')
    return date.strftime('%A')

weekday = get_weekday('3/22/2021')
print(weekday)","import datetime

def get_weekday(date_string):
    date = datetime.datetime.strptime(date_string, '%m/%d/%Y')
    return date.strftime('%A')

weekday = get_weekday('3/22/2021')
print(weekday)",correct,Loops
"Make a program in Python to print a staircase of height 'n', where n is an integer.",5,"def staircase(n): 
    for i in range(0, n): 
        for j in range(0, n - i - 1): 
            print(end="" "") 
        for j in range(0, i + 1): 
            print(""#"", end="""") 
        print(""\r"") 
  
# Driver code 
n = 5
staircase(n)","def staircase(n): 
    for i in range(0, n): 
        for j in range(0, n - i - 1): 
            print(end="" "") 
     ",Incomplete Answer,Recursion
"Rewrite the following python program using a functional programming approach. The code should take a list of integers as input, filter out the odd numbers, square each even number, and return the sum of all the numbers.","[3, 4, 5, 6, 7, 8, 9, 10]","def fx(nums): 
 return sum(map(lambda x : x*x if x % 2==0 else 0, nums)) 

print(fx([3, 4, 5, 6, 7, 8, 9, 10]))  # Output: 240","def fx(nums): 
 return sum(map(lambda x : x*x if x % 2==0 else ",Incomplete Answer,Recursion
"Given a list of integers, write a Python program to count the number of 0s in the list.",,"def count_zeros(list):
    count = 0
    for num in list:
        if num == 0:
            count += 1
    return count","def count_zeros(list):
    count = 0
    for num in list:
 ",Incomplete Answer,Recursion
You need to optimize a given Python system so it can run faster on a target machine.,,"def optimize_system(system):
    # Analyze system to evaluate current performance
    analyze_system(system)
    
    # Research for faster replacement alternatives
    replacements = research_replacements(system)
    
    # Implement the replacements
    implement_replacements(system, replacements)
    
    # Evaluate the optimized system
    analyze_system(system)","def optimize_system(system):
    # Analyze system to evaluate current performance
    analyze_system(system)
    
    # Research for faster replacement alternatives
    replacements = ",Incomplete Answer,OOP
Create Python code to generate the first 10 prime numbers.,No input.,"def generate_prime_numbers(n):
    nums = []
    for x in range(2, n + 1):
        for y in range(2, int(x ** 0.5) + 1):
            if x % y == 0:
                break
        else:
            nums.append(x)
    return nums

print(generate_prime_numbers(10))","def generate_prime_numbers(n):
    nums = []
    for x in range(2, n + 1):
        for y in range(2, int(x ** 0.5) + 1):
            if x % y == 0:
                break
        else:
            nums.append(x)
    return nums

print(generate_prime_numbers(10))",correct,String Manipulation
Create a recursive function with python as the language to find the sum of all elements in a list.,,"def sumOfList(list):
   if len(list) == 1:
       return list[0]
   else:
       return list[0] + sumOfList(list[1:])","def sumOfList(list)
   if len(list) == 1
       return list[0]
   else
       return list[0] + sumOfList(list[1])",Syntax Error,Loops
Design a program in Python to display the time in a digital format.,,"from time import strftime

def digital_clock():
    current_time = strftime(""%H:%M:%S"")
    print(current_time)

digital_clock()","from time import strftime

def digital_clock():
    current_time = strftime(""%H:%M:%S"")
    pritn(current_time)

digital_clock()",Syntax Error,Recursion
Write a quicksort algorithm in Python.,"[3, 6, 8, 10, 1, 2, 1]","def quick_sort(arr):
    if len(arr) < 2:
        return arr
    else:
        pivot = arr[0]
        less = [i for i in arr[1:] if i <= pivot]
        greater = [i for i in arr[1:] if i > pivot]

        return quick_sort(less) + [pivot] + quick_sort(greater)","def quick_sort(arr):
    if len(arr) < 2:
        return arr
    else:
        pivot = arr[0]
        less = [i for i in arr[1:] if i <= pivot]
        greater = [i for i in arr[1:] if i > pivot]

        return quick_sort(less) + [pivot] + quick_sort(greater)",Syntax Error,Loops
Construct a Python function to find the largest and smallest number in a list.,"[5, 2, 7, 9]","def find_min_max(nums):
    max_num, min_num = nums[0], nums[0]
    for num in nums:
        if num > max_num:
            max_num = num
        if num < min_num:
            min_num = num
    return min_num, max_num

nums = [5, 2, 7, 9]
min_num, max_num = find_min_max(nums)
print(""Max num:"",max_num)
print(""Min num:"",min_num)","def find_min_max(nums)
    max_num, min_num = nums[0], nums[0]
    for num in nums
        if num > max_num
            max_num = num
        if num < min_num
            min_num = num
    return min_num, max_num

nums = [5, 2, 7, 9]
min_num, max_num = find_min_max(nums)
print(""Max num"",max_num)
print(""Min num"",min_num)",Syntax Error,File I/O
"Given the following data points, generate a polynomial equation using Python.","x = [-2, 0, 2]
y = [1, 4, 9]","import numpy as np

x = np.array([-2, 0, 2])
y = np.array([1, 4, 9])

z = np.polyfit(x, y, 2)
equation = np.poly1d(z)

print(equation)

# Output: 
#       2
# -6.66 x + 5.0 x + 1.0","import numpy as np

x = np.array([-2, 0, 2])
y = np.array([1, 4, 9])

z = np.polyfit(x, y,",Incomplete Answer,OOP
Create a Python program to round up a float to the nearest integer.,3.14,"def round_up(f):
    if f - int(f) >= 0.5:
        return int(f) + 1
    return int(f)

round_val = round_up(3.14)
print(round_val)","def round_up(f):
    if f - int(f) >= 0.5:
        return int(f) ",Incomplete Answer,File I/O
Write a Python program to extract the n-th element from the given list of lists.,"[[1,2,3], [4,5,6], [7,8,9]]","def get_nth_element(list_of_lists, n):
    return [item[n] for item in list_of_lists]","def get_nth_element(list_of_lists, n):
   ",Incomplete Answer,Recursion
Generate a python program that tests a user's input for a palindrome.,,"def is_palindrome(inp):
    rev_inp = inp[::-1]
    if inp == rev_inp:
        return True
    else:
        return False","def is_palindrome(inp):
    rev_inp = inp[::-1]
    if inp == rev_inp:
        return True
    else:
        return False",correct,File I/O
Write a function to caluclate perimeter of a parallelogram.,,"def parallelogram_perimeter(b,h):
  perimeter=2*(b*h)
  return perimeter","def parallelogram_perimeter(b,h):
  ",Incomplete Answer,OOP
Generate a Python script to calculate the sum of elements in the following input array.,"Input Array: [1, 4, 8, 10, 12]","def SumArray(arr):
  result = 0
  for num in arr: 
    result += num
  return result 
 
print(SumArray([1, 4, 8, 10, 12]))
    # Outputs: 35","def SumArray(arr):
  result = 0
  for num in arr: 
    result += num
  return result 
 
print(SumArray([1, 4, 8, 10, 12]))
    # Outputs: 35",correct,File I/O
"Create a Python script that takes the list [1, 2, 3, 4, 5] and returns the sum.","[1, 2, 3, 4, 5]","def sum_list(lst):
  total = 0
  for num in lst:
    total += num
  return total

sum_list([1,2,3,4,5])","def sum_list(lst):
  total = 0
  for num in lst:
  ",Incomplete Answer,OOP
Generate a script in Python that can parse a given web page and extract its content.,,"import requests
from bs4 import BeautifulSoup

def parse_web_page(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    body_text = soup.findAll('p') 
    data = []
    for item in body_text:
        text = item.text
        data.append(text)
    return data","import requests
from bs4 import BeautifulSoup

def parse_web_page(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    body_text = soup.findAll('p') 
    data = []
    for item in body_text:
        text = item.text
        data.append(text)
    return data",correct,File I/O
Write a Python program to join all elements in a list into a string separated by a given separator.,"[""Hello"", ""World!""], separator = "" ""","def join_list_with_separator(list, separator):
    joined_string = separator.join(list)
    return joined_string","def join_list_with_separator(list, separator:
    joined_string = separator.join(list
    return joined_string",Syntax Error,File I/O
Write a Python program for creating a histogram from a given dataset.,Dataset contains values from 0 to 10 and their respective count or frequency.,"import matplotlib.pyplot as plt

data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
frequency = [10, 8, 12, 6, 15, 7, 5, 2, 6, 9, 3]

plt.hist(data, weights=frequency)
plt.title(""Histogram"")
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")

plt.show()","import matplotlib.pyplot as plt

data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
frequency = [10, 8, 12, 6, 15, 7, 5, 2, 6, 9, 3]

plt.hist(data, weights=frequency)
plt.title(""Histogram"")
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")

plt.show()",Syntax Error,Loops
Optimize the following Python program to find the maximum number in a list.,"list = [9, 2, 5, 6, 4, 1]","def max_num(list):
  max_num = list[0]

  for num in list:
    if num > max_num:
      max_num = num
  
  return max_num","def max_num(list):
  max_num = list[0]

  for num in list:
    if num > max_num:
      max_num = num
  
  return max_num",Syntax Error,OOP
Create a function in Python to raise a number to a given power.,,"def power(num, exponent):
    result = 1
    for _ in range(exponent):
        result *= num
    return result

print(power(5, 2)) # Output: 25","def power(num, exponent):
    result = 1
    for _ in range(exponent):
        result *= num
    return result

print(power(5, 2)) # Output: 25",correct,File I/O
Design a Python program to generate a frequency distribution report given a list of input words.,"[‘hello’, ‘world’, ‘hello’, ‘welcome’, ’world’]","from collections import Counter

def print_frequency_report(words):
    word_frequencies = Counter(words)
    print('Word\tFrequency')
    print('==============')
    for word, frequency in word_frequencies.items():
        print('{}\t{}'.format(word, frequency))","from collections import Counter

def pritn_frequency_report(words):
    word_frequencies = Counter(words)
    pritn('Word\tFrequency')
    pritn('==============')
    for word, frequency in word_frequencies.items():
        pritn('{}\t{}'.format(word, frequency))",Syntax Error,OOP
Generate a Python program that removes all occurrences of an element from a list,"[1, 2, 2, 3, 2, 4]","def remove_element(arr, x):
  new_arr = [i for i in arr if i != x] 
  return new_arr 
  
arr = [1, 2, 2, 3, 2, 4] 
x = 2

new_arr = remove_element(arr, x) 
print(new_arr)","def remove_element(arr, x):
  new_arr = [i for i in arr if i != x] 
  return new_arr 
  
arr = [1, 2, 2, 3, 2, 4] 
x = 2

new_arr = remove_element(arr, x) 
pritn(new_arr)",Syntax Error,String Manipulation
Create a Python script to identify the frequency of words in a sentence.,"Sentence = ""This is a test sentence""","from collections import Counter

sentence = ""This is a test sentence""

#split the sentence into words
words = sentence.split()

#count the frequency of each word
word_frequency = Counter(words)

#print the results
print(word_frequency)","from collections import Counter

sentence = ""This is a test sentence""

#split the sentence into words
words = sentence.split()

#count the frequency of each word
word_frequency = Counter(words)

#print the results
print(word_frequency)",correct,String Manipulation
Write an expression in python to check if a given number is prime,number = 15,"def is_prime(number):
    if number>1:
        for i in range(2,number):
            if number%i==0:
                return False
    else:
        return False
    return True
print(is_prime(number))","def is_prime(number)
    if number>1
        for i in range(2,number)
            if number%i==0
                return False
    else
        return False
    return True
print(is_prime(number))",Syntax Error,File I/O
Create a Python program to sort the elements of a list in descending order (largest value first).,"numbers = [1, 7, 25, 8, 14]","numbers = [1, 7, 25, 8, 14]

# Sort the list in descending order
numbers.sort(reverse=True)

# Print the sorted list
print(numbers)

# Output
[25, 14, 8, 7, 1]","numbers = [1, 7, 25, 8, 14]

# Sort the list in descending order
numbers.sort(r",Incomplete Answer,OOP
Create a python program to convert temperatures from Farenheit to Celsius.,94 F,"def Farenheit_to_Celsius(temperature):
  celsius = (temperature - 32) * 5/9
  return celsius

temp_F = 94
temp_C = Farenheit_to_Celsius(temp_F)

print('{}°F is equal to {}°C'.format(temp_F, temp_C))","def Farenheit_to_Celsius(temperature):
  celsius = (temperature - 32) * 5/9
  return celsius

temp_",Incomplete Answer,File I/O
Write a Python program to display a histogram of the frequencies of words in a given sentence.,"Sentence: ""My name is John""","import matplotlib.pyplot as plt 
  
# Data to plot 
labels = 'My', 'name', 'is', 'John'
sizes = [1, 1, 1, 1]

# Plot
plt.pie(sizes, labels=labels, 
        autopct='%1.1f%%', shadow=True, startangle=90) 

plt.axis('equal') 

plt.show()","import matplotlib.pyplot as plt 
  
# Data to plot 
labels = 'My', 'name', 'is', 'John'
sizes = [1, 1, 1, 1]

# Plot
plt.pie(sizes, labels=labels, 
        autopct='%1.1f%%', shadow=True, startangle=90) 

plt.axis('equal') 

plt.show()",Syntax Error,Loops
Create a Python program to find the sum of all elements in the following two-dimensional list.,"[[1,2], [3,4]]","def sum_list(list_two_dim): 
    sum = 0
    for row in list_two_dim: 
        sum += sum(row) 
    return sum","def sum_list(list_two_dim): 
    sum = 0
    for row in list_two_dim: 
        sum += sum(row) 
    return sum",correct,String Manipulation
"Using a library such as Numpy, write a Python program to generate a random matrix with 500 rows and 10 columns.",,"import numpy as np

# Generate random matrix with 500 rows and 10 columns
matrix = np.random.rand(500,10)

# Print the matrix
print(matrix)","import numpy as np

# Generate random matrix with 500 rows and 10 columns
matrix = np.random.rand(500,10)

# Print the matrix
print(name, matrix)",Syntax Error,String Manipulation
Develop a Python code to convert the given binary string to its corresponding integer value.,'100100',"def binary_to_int(binary):
    result = 0
    for i in range(len(binary)): 
        digit = binary[i] 
        if digit == '1':
            result = result + pow(2, len(binary)-i-1)  
    return result

binary_to_int('100100') # returns 36","def binary_to_int(binary):
    result = 0
    for i in range(len(binary)): 
        digit = binary[i] 
        if digit",Incomplete Answer,OOP
"Given a list of integers, write a Python program to find the index of the largest number.","[5, 10, 20, 6, 8]","nums = [5, 10, 20, 6, 8]
max_num = max(nums)
max_index = nums.index(max_num)

print(max_index)","nums = [5, 10, 20, 6, 8]
max_num = max(nums)
ma",Incomplete Answer,String Manipulation
Create a python program to check the length of a given string,,"def check_length(string):
    return len(string)",def check_length(string),Incomplete Answer,Recursion
Generate a list of 50 random numbers between 1 and 100 in Python.,,"import random
random_number_list = random.sample(range(1, 100), 50)
print(random_number_list)","import random
random_number_list = random.sample(range(1, 100), 50)
print(name, random_number_list)",Syntax Error,OOP
Create a loop in Python that prints a random number between 0 and 9.,,"import random
for i in range(10):
    print(random.randint(0, 9))","import random
for i in range(10)
    print(random.randint(0, 9))",Syntax Error,Loops
Write a code to convert a JSON object to an array of dictionaries in Python.,"JSON Object: {
 ""Fruit"": ""Apple"",
 ""Shape"": ""Round"",
 ""Color"": ""Red""
}","#Function to convert a JSON object to an array of dictionaries in Python
import json

def json_to_array(data):
    my_dict = json.loads(data)
    return [{k: v} for k, v in my_dict.items()]

# Driver code
data = '{ ""Fruit"": ""Apple"", ""Shape"": ""Round"", ""Color"": ""Red"" }'
dict_array = json_to_array(data)
print(dict_array)","#Function to convert a JSON object to an array of dictionaries in Python
import json

def json_to_array(data):
    my_dict = json.loads(data)
    return [{k: v} for k, v in my_dict.items()]

# Driver code
data = '{ ""Fruit"": ""Apple"", ""Shape"": ""Round"", ""Color"": ""Red"" }'
dict_array = json_to_array(data)
print(dict_array)",correct,OOP
Create a python program to group similar items together in a list.,"list = [""dog"", ""cat"", ""cat"", ""fox"", ""dog"", ""elephant""]","def group_similar_items(list): 
    grouped_items = {} 

    for item in list: 
        if item in grouped_items: 
            grouped_items[item] += 1
        else: 
            grouped_items[item] = 1

    print(grouped_items)

group_similar_items([""dog"", ""cat"", ""cat"", ""fox"", ""dog"", ""elephant""]) 
# Output: {'dog': 2, 'cat': 2, 'fox': 1, 'elephant': 1}","def group_similar_items(list): 
    grouped_items = {} 

    for item in list: 
        if item in grouped_items: 
            grouped_items[item] += 1
        else: 
            grouped_items[item] = 1

    pritn(grouped_items)

group_similar_items([""dog"", ""cat"", ""cat"", ""fox"", ""dog"", ""elephant""]) 
# Output: {'dog': 2, 'cat': 2, 'fox': 1, 'elephant': 1}",Syntax Error,String Manipulation
Automate the following UNIX command using  python.,echo password | sudo -S apt-get install vim,"import os

password = 'password'
os.system('echo ' + password + ' | sudo -S apt-get install vim')","import os

password = 'password'
os.system('echo ' + password + ' | sudo -S apt-get install vim')",Syntax Error,OOP
Create a class in Python which takes a name and assigns it to the user_name property.,,"class User:
    def __init__(self, name):
        self.user_name = name;","class User:
def __init__(self, name):
    self.user_name = name;",Syntax Error,Loops
Create a for-loop in Python to iterate over a list and print each element.,"words = [""these"", ""are"", ""some"", ""words""]","words = [""these"", ""are"", ""some"", ""words""]
for word in words:
  print(word)","words = [""these"", ""are"", ""some"", ""wor",Incomplete Answer,Loops
"Create a Python class called ""Person"" with attributes ""name"" and ""age"".",,"class Person:
  def __init__(self, name, age):
    self.name = name
    self.age = age","class Person:
  def __init__(self, name, ag",Incomplete Answer,Loops
Find the highest number in a list of numbers in Python.,"[7, 4, 5, 100, 2]","max_number = max([7, 4, 5, 100, 2])
print(max_number)","max_number = max([7, 4, 5, 100, 2])
print(max_number)",Syntax Error,Loops
Optimize a Python program to calculate the volume of a cube.,"def volume_of_cube(edge_length):
    return edge_length * edge_length * edge_length
    
print(volume_of_cube(3))","def volume_of_cube(edge_length):
    return edge_length ** 3
    
print(volume_of_cube(3))","def volume_of_cube(edge_length:
    return edge_length ** 3
    
print(volume_of_cube(3",Syntax Error,Loops
Optimize a Python code snippet which prints out the even numbers up to a given number.,num = 50,"def printEvenNumbers(num):
 for n in range(2, num+1):
 if n%2 == 0:
 print(n)

printEvenNumbers(50)","def printEvenNumbers(num)
 for n in range(2, num+1)
 if n%2 == 0
 print(n)

printEvenNumbers(50)",Syntax Error,String Manipulation
Design a function in Python that takes a list of integers and returns the difference between the maximum and the minimum values.,"data = [1, 5, 2, 3, 7, 9]","def getDifference(data):
 min_value = min(data)
 max_value = max(data)
 return max_value - min_value

difference = getDifference(data)
print(difference) # 8","def getDifference(data):
 min_value = min(data)
 max_value = max(data)
 return max_value - min_value

difference = getDifference(data)
print(difference) # 8",Syntax Error,Loops
Write a Python program to access the data from a web API and sort it in descending order.,,"import requests
import json
import operator

url = 'http://example.url/data.json'
response = requests.get(url)
data = json.loads(response.text)
sorted_data = sorted(data.items(), key=operator.itemgetter(1), reverse=True)
print(sorted_data)","import requests
import json
import operator

url = 'http://example.url/data.json'
response = requests.get(url)
data = json.loads(response.text)
sorted_data = sorted(data.items(), key=operator.itemgetter(1), reverse=True)
print(sorted_data)",Syntax Error,OOP
Write a Python program to create a Fibonacci sequence of n-length.,,"def fibonacci(n):
  if n == 0:
    return 0
  elif n == 1:
    return 1
  else:
    return fibonacci(n-1) + fibonacci(n-2)

for i in range(10):
  print(fibonacci(i))","def fibonacci(n:
  if n == 0:
    return 0
  elif n == 1:
    return 1
  else:
    return fibonacci(n-1 + fibonacci(n-2

for i in range(10:
  print(fibonacci(i",Syntax Error,Recursion
Create a Python program that takes a list as argument and returns it in reverse order.,"[1, 3, 5, 6, 10]","def reverse_list(lst): 
    return lst[::-1] 
  
lst = [1, 3, 5, 6, 10] 
print(reverse_list(lst))","def reverse_list(lst): 
    return lst[::-1] 
  ",Incomplete Answer,Recursion
Design an API in Python that can generate a random password with no less than 8 characters.,,"import string
import random

def generate_password():
 chars = string.ascii_letters + string.digits + string.punctuation
 length = 8
 return ''.join(random.choices(chars, k=length))

# Generate password
password = generate_password()
print(password)","import string
import random

def generate_password():
 chars = string.ascii_letters + string.digits + string.punctuation
 length = 8
 return ''.join(random.choices(chars, k=length))

# Generate password
password = generate_password()
print(password)",correct,String Manipulation
Write a function in Python to extract domain name from given URLs.,"""http://www.google.com""","import re
def extract_domain_name(url):
    regex = r""://([^/]+)/?""
    match = re.search(regex, url)
 
    if match:
        return match.group(1)

url = ""http://www.google.com""
domain_name = extract_domain_name(url)
print(domain_name)
 
# Output: 
# google.com","import re
def extract_domain_name(url)
    regex = r""//([^/]+)/?""
    match = re.search(regex, url)
 
    if match
        return match.group(1)

url = ""http//www.google.com""
domain_name = extract_domain_name(url)
print(domain_name)
 
# Output 
# google.com",Syntax Error,String Manipulation
Utilize the Python in-built module to print the calendar for the given month.,"Month: 5
Year: 2021","# import the module
import calendar

# print the calendar 
print(calendar.month(2021, 5))","# import the module
import calendar

# print the calendar 
print(name, calendar.month(2021, 5))",Syntax Error,File I/O
Create a Python script to fetch news articles from a news API.,,"import requests

url = 'http://newsapi.org/v2/top-headlines?country=us&apiKey=YOUR_API_KEY'
response = requests.get(url)
data = response.json()

for article in data['articles']:
 print(article['title'])
// Output: Headline 1, Headline 2, Headline 3, etc.","import requests

url = 'http://newsapi.org/v2/top-headlines?country=us&apiKey=YOUR_API_KEY'
response = requests.get(url)
data =",Incomplete Answer,Loops
Write a Python program to sort a list according to a given order of letters.,"['c','d','a','b'], order=['a', 'b', 'c', 'd']","def sort_by_order(l, order):
	return sorted(l, key = lambda x : order.index(x))","def sort_by_order(l, order):
	return sorted(l, key = lambda x : order.index(x))",correct,File I/O
Suggest a method for encrypting a message in Python using cryptography.,,"from cryptography.fernet import Fernet

# Generate a new fernet key
key = Fernet.generate_key()
f = Fernet(key)

# Encrypt the message
encrypted_message = f.encrypt(b""This is a secret message"")

# Decrypt the encrypted message
decrypted_message = f.decrypt(encrypted_message)

print(encrypted_message)
print(decrypted_message)","from cryptography.fernet import Fernet

# Generate a new fernet key
key = Fernet.generate_key(
f = Fernet(key

# Encrypt the message
encrypted_message = f.encrypt(b""This is a secret message""

# Decrypt the encrypted message
decrypted_message = f.decrypt(encrypted_message

print(encrypted_message
print(decrypted_message",Syntax Error,Loops
Write a Python function to sort an array of numbers in descending order,"[3, 7, 1, 5]","def sortDescending(arr):
    arr.sort(reverse=True)
    return arr

array = [3, 7, 1, 5]
sortedArray = sortDescending(array)","def sortDescending(arr):
    arr.sort(reverse=True)
    return arr

array = [3, 7, 1, 5]
sortedArray = sortDescending(array)",correct,OOP
Write a single-line Python code to delete a key-value pair from a dictionary.,"my_dictionary = {'name': 'John', 'age': 20, 'job': 'Software Engineer', 'city': 'Berlin'}",my_dictionary.pop('city'),my_dictionar,Incomplete Answer,OOP
Write a Python function to generate a random string of length n.,,"import string
import random

def generate_random_string(length):
    random_str = ''.join(random.choices(string.ascii_uppercase + string.digits, k=length)) 
    return random_str","import string
import random

def generate_random_string(length):
    random_str = ''.join",Incomplete Answer,String Manipulation
Write a python function to find the minimum number of squares whose sum is equal to a given number.,,"def get_Min_Squares(n):
    if n <= 3:
        return n;
    res = n 
    for x in range(1,n + 1):
        temp = x * x;
        if temp > n:
            break
        else:
            res = min(res,1 + get_Min_Squares(n  - temp)) 
    return res;","def get_Min_Squares(n:
    if n <= 3:
        return n;
    res = n 
    for x in range(1,n + 1:
        temp = x * x;
        if temp > n:
            break
        else:
            res = min(res,1 + get_Min_Squares(n  - temp 
    return res;",Syntax Error,OOP
Identify the output of the following Python expression:,(4+1)*20,100,100,Syntax Error,String Manipulation
Generate an algorithm to count substrings in Python.,"string: abcdabcd
substring: cd","def count_substr(str, substr):
    count = 0
    start = 0
    while (str.find(substr, start) != -1):
        count += 1
        start = str.find(substr, start) + 1
    return count

string = ""abcdabcd""
substring = ""cd""
result = count_substr(string, substring)
print(result)","def count_substr(str, substr):
    count = 0
    start = 0
    while (str.find(substr, start) != -1):
        count += 1
        start = ",Incomplete Answer,OOP
Write a Python program that prompts the user for three numbers and prints the mean of those numbers.,,"def get_mean(a, b, c):
    return (a + b + c)/3

a = float(input('Enter a number: '))
b = float(input('Enter a number: '))
c = float(input('Enter a number: '))

mean = get_mean(a, b, c)
print('Mean:', mean)","def get_mean(a, b, c):
    return (a + b + c)/3

a = float(input('Enter a number: '))
b = float(input('Enter a number: '))
c = float(input('Enter a number: '))

mean = get_mean(a, b, c)
print('Mean:', mean)",correct,Loops
Fix the bug in the following Python program.,"def calculateArea(width, height):
 return width * height

length = 8
breadth = 10
area = calculateArea(length)
print(""Area of the rectangle:"", area)","def calculateArea(width, height):
 return width * height

length = 8
breadth = 10
area = calculateArea(length, breadth)
print(""Area of the rectangle:"", area)","def calculateArea(width, height):
 return width * height

length = 8
breadth = 10
area = calculateArea(length, breadth)
print(""Area of the rectangle:"", area)",correct,Recursion
Create a Python script to check if an array contains contiguous numbers.,"arr = [20, 21, 22, 23, 24]","def is_contiguous(arr):
    if (len(arr) == 0):
        return True
    arr.sort()
    for i in range(len(arr) - 1):
        if (arr[i] + 1 != arr[i+1]):
            return False
    return True","def is_contiguous(arr):
    if (len(arr) == 0):
        return True
    arr.sort()
    for i in range(len(arr) - 1):
        if (arr[i] + 1 != arr[i+1]):
            return False
    return True",correct,Loops
Write a Python function to concatenate two lists.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def concat_lists(list1, list2):
    return [x for t in zip(list1, list2) for x in t]

list1 = [1, 2, 3]
list2 = [4, 5, 6]

print(concat_lists(list1, list2)) # [1, 4, 2, 5, 3, 6]","def concat_lists(list1, list2):
    return [x for t in zip(list1, list2) for x in t]

li",Incomplete Answer,OOP
"Given two number arrays A and B, write a Python function to check if each element in A also exists in B","A = [1,2,3], B = [2,3,4]","def check_equality(arr1, arr2):
    for num in arr1:
        if num not in arr2:
            return False
    return True

A = [1, 2, 3]
B = [2, 3, 4]

result = check_equality(A, B)
print(result)","def check_equality(arr1, arr2):
    for num in arr1:
        if num not in arr2:
            retu",Incomplete Answer,String Manipulation
Create a Python program to encrypt a message with an XOR encryption algorithm.,secretmessage,"def xor_encrypt(message, key):
 encrypted = """"
 for i in range(len(message)):
  encrypted += chr(ord(message[i]) ^ ord(key[i % len(key)]))
 return encrypted

message = 'secretmessage'
key = 'iwonttellyou'
encrypted = xor_encrypt(message, key)
print(encrypted) # U5m3pD1DQyN1UB1WAo9VA==","def xor_encrypt(message, key):
 encrypted = """"
 for i in range(len(message)):
  encrypted += chr(ord(message[i]) ^ ord(key[i % len(key)]))
 return encrypted

message = 'secretmessage'
key = 'iwonttellyou'
encrypted = xor_encrypt(message, key)
print(name, encrypted) # U5m3pD1DQyN1UB1WAo9VA==",Syntax Error,Loops
Design a Palindrome detection algorithm in Python.,,"def is_palindrome(input_str):
  len_input = len(input_str)

  for i in range(len_input // 2):
    if input_str[i] != input_str[len_input - i - 1]:
      return False
  
  return True","def is_palindrome(input_str):
  len_input = len(input_str)

  for i in range(len_input // 2",Incomplete Answer,Recursion
Write a function to convert the given binary number to its decimal equivalent.,,"def binary_to_decimal(binary): 
    binary1 = binary 
    decimal, i, n = 0, 0, 0
    while(binary != 0): 
        dec = binary % 10
        decimal = decimal + dec * pow(2, i) 
        binary = binary//10
        i += 1
    return (decimal)","def binary_to_decimal(binary): 
    binary1 = binary 
    decimal, i, n = 0, 0, 0
    while(binary != 0): 
        dec = binary % 10
        decimal = decimal + dec * pow(2, i) 
        binary = binary//10
        i += 1
    return (decimal)",correct,String Manipulation
Develop an algorithm in Python to check if an array contains a given number.,"array = [2, 4, 6, 8], number = 8","def checkNumber(array, number):
    for i in array:
        if i == number:
            return True
    return False

checkNumber([2, 4, 6, 8], 8)","def checkNumber(array, number):
    for i in array:
        if i == numbe",Incomplete Answer,Loops
"Write a Python program to generate a random password. The program should generate a string of 8 characters (numbers, letters and special characters)",No input,"import random
import string

def generate_password():
 password_characters = string.ascii_letters + string.digits + string.punctuation
 password = ''.join(random.choice(password_characters) for i in range(8))
 print(password)

generate_password()","import random
import string

def generate_password():
 password_characters = string.ascii_letters + string.digits + string.",Incomplete Answer,String Manipulation
Develop a Python function to fetch data from a web service.,url = 'https://jsonplaceholder.typicode.com/users',"import requests

def fetch_data_from_web_service(url):
    response = requests.get(url)
    return response.json()","import requests

def fetch_data_from_web_service(url):
    response = requests.get(url)
    return response.json()",correct,Recursion
Write a Python program to replace a given string with another string.,"sentence = ""I love walking on the beach""
old_word = ""walking""
new_word = ""swimming""","sentence = ""I love walking on the beach""
old_word = ""walking""
new_word = ""swimming""

new_sentence = sentence.replace(old_word, new_word)

print(""The new sentence is: '{}'"".format(new_sentence))","sentence = ""I love walking on the beach""
old_word = ""walking""
new_word = ""swimming""

new_sentence = sentence.replace(old_word, new_word)

pritn(""The new sentence is: '{}'"".format(new_sentence))",Syntax Error,File I/O
Endeavour to create a python function that takes an array of numbers and returns the highest number in the array.,"[2,5,1,6,3]","def find_largest_number(nums):
    highest_num = nums[0]
    for i in nums:
        if i>highest_num:
            highest_num = i
    return highest_num","def find_largest_number(nums):
    highest_num = nums[0]
    for i in nums:
        if i>highest_num:
            highest_num = i
    return highest_num",correct,Loops
Create a function in Python that input two strings and outputs the longer string.,"""Hello"", ""World""","def get_longer_string(str1, str2):
 if len(str1) > len(str2):
 return str1
 else:
 return str2","def get_longer_string(str1, str2):
 if len(str1) > len(str2):
 return str1
 else:
 return str2",correct,String Manipulation
Generate Python code to sort a sequence of numbers,"[5,1,9,2,6,3]","def sort_sequence(lst):
    for i in range(len(lst)-1,0,-1):
        for j in range(i):
            if lst[j]>lst[j+1]:
                temp = lst[j]
                lst[j] = lst[j+1]
                lst[j+1] = temp
    return lst

sort_sequence([5,1,9,2,6,3])","def sort_sequence(lst):
    for i in range(len(lst)-1,0,-1):
        for j in range(i):
            if lst[j]>lst[j+1]:
                temp = lst[j]
                lst[j] = lst[j+1]
                lst[j+1] = temp
    return lst

sort_sequence([5,1,9,2,6,3])",correct,OOP
Modify the following Python code to reverse the order of the elements in an array,"arr = [1, 2, 3, 4, 5]",arr = arr[::-1]  # Reverses the order of elements in the array.,arr = arr[::-1]  # Reverses the,Incomplete Answer,Loops
Create a Python program that finds all combinations of two given numbers that sum up to a given goal.,,"def combination sums(nums, target):
  result = []
  for i in range(len(nums)):
    x = nums[i]
    for j in range(i + 1, len(nums)):
      if (x + nums[j]) == target: 
        result.append([x,nums[j]]) 
  
  return result","def combination sums(nums, target):
  result = []
  for i in range(len(nums)):
    x = nums[i]
    for j in range(i + 1, len(nums)):
      if (x + nums[j]) == target: 
        result.append([x,nums[j]]) 
  
  return result",Syntax Error,File I/O
Invent a python data structure to store information about friends.,,"class Friend:
    def __init__(self, name, age, address):
        self.name = name
        self.age = age
        self.address = address

friends_list = []","class Friend:
    def __init__(self, name, age, address):
        self.name = name
        self.age = age
        self.address = address

friends_list = []",Syntax Error,Loops
Transform the following shell script into a python program.,"#!/usr/bin/env bash
for i in *.txt; do
    echo ""Processing $i file...""
    cat $i
done","import sys
import os

for filename in os.listdir('.'):
    if filename.endswith('.txt'):
        print('Processing ' + filename + ' file...')
        with open(filename, 'r') as f:
            print(f.read())","import sys
import os

for filename in os.listdir('.'):
    if filename.endswith('.txt'):
        print('",Incomplete Answer,File I/O
Implement quicksort in Python.,,"def quicksort(arr):
     if len(arr) < 2:
         return arr

     pivot = arr[0]

     less_than_pivot = [x for x in arr[1:] if x <= pivot]
     greater_than_pivot = [x for x in arr[1:] if x > pivot]

     return quicksort(less_than_pivot) + [pivot] + quicksort(greater_than_pivot)","def quicksort(arr):
 if len(arr) < 2:
     return arr

 pivot = arr[0]

 less_than_pivot = [x for x in arr[1:] if x <= pivot]
 greater_than_pivot = [x for x in arr[1:] if x > pivot]

 return quicksort(less_than_pivot) + [pivot] + quicksort(greater_than_pivot)",Syntax Error,OOP
"Create a python program to calculate the value of 'x' in the equation ""y = 4x + 7"".",y = 17,"y = 17
x = (y - 7) / 4
print(""x ="", x)","y = 17
x = (y - 7) ",Incomplete Answer,Recursion
"Write a function to assign with each element, its pair elements from other similar pairs in the given tuple.",,"def assign_elements(test_list):
  res = dict()
  for key, val in test_list:
    res.setdefault(val, [])
    res.setdefault(key, []).append(val)
  return (res) ","def assign_elements(test_list):
  res = dict()
  for key, val in test_list:
   ",Incomplete Answer,File I/O
Create a Python function to split a sentence into words.,,"def split_into_words(sentence):
    """"""This function splits a sentence into words.""""""
    # Split the sentence into words
    words = sentence.split(' ')
    # Return the list of words
    return words","def split_into_words(sentence):
    """"""This function splits a sentence into words.""""""
    # Split the sentence into words
    words = sentence.split(' ')
    # Return the list of words
    return words",Syntax Error,OOP
Use Python to calculate and print the sum of values in an array.,"[1,2,3,4,5]","arr = [1,2,3,4,5] 
sum = 0
for i in arr: 
    sum+=i 
    print(sum)

# Output 
# 15","arr = [1,2,3,4,5] 
sum = 0
for i in arr: 
    sum+=i 
    print(sum)

# Output 
# 15",correct,OOP
Create a Python script to calculate the sum of all elements in a matrix.,"matrix = [[1, 7, 3], [9, 2, 8], [3, 1, 7]]","def sum_of_elements_matrix(matrix):
    # Initialize result 
    result = 0
    # Iterate through the matrix
    for row in matrix:
        for col in row: 
            result += col 
    # Return the result
    return result","def sum_of_elements_matrix(matrix):
# Initialize result 
result = 0
# Iterate through the matrix
for row in matrix:
    for col in row: 
        result += col 
# Return the result
return result",Syntax Error,Recursion
Generate a secure random 24-byte string in Python.,,"import secrets

# Generate the random string
random_string = secrets.token_hex(24)

print(random_string)","import secrets

# Generate the random string
random_",Incomplete Answer,String Manipulation
Can you provide a machine learning algorithm in Python that performs sentiment analysis on a given text?,"Text: ""This product is simply incredible!""","from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentences = [""This product is simply incredible!""]

analyzer = SentimentIntensityAnalyzer()

for sentence in sentences:
    scores = analyzer.polarity_scores(sentence)
    print(""{:-<40} {}"".format(sentence, str(scores)))","from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentences = [""This product is simply incredible!""]

analyzer = SentimentIntensityAnalyzer()

for sentence in sentences:
    scores = analyzer.polarity_scores(sentence)
    print(""{:-<40} {}"".format(sentence, str(scores)))",correct,File I/O
Generate Python code to detect whether a given sentence is a palindrome,Level,"def is_palindrome(text):
    text = text.lower()
    text = text.replace("" "","""")
    reversed_text = text[::-1]
    if text == reversed_text:
        return True
    return False

print(is_palindrome(""Level"")) # True","def is_palindrome(text):
    text = text.lower()
    text = text.replace("" "","""")
    reversed_text = text[::",Incomplete Answer,File I/O
Generate a matrix of random numbers using Python.,Matrix Size: 20 x 30,matrix = [[random.random() for j in range(30)] for i in range(20)],matrix = [[random.random() for j ,Incomplete Answer,Loops
Build a text generator in Python that can generate poem based on a given input.,,"def generate_poem(input): 
  poem = []
  for i in range(len(input)):
      line = ''
      for j in range(i):
          line += input[j] + ' '
      poem.append(line)
  return poem","def generate_poem(input): 
  poem = []
  for i in range(len(input)):
      line = ''
      for j in range(i):
          line += input[j] + ' '
      poem.append(line)
  return poem",correct,File I/O
Convert the following for loop into a recursive function in Python.,"for i in range(5):
    print(i)","def printRange(start, end):
    if start == end:
        return
    print(start)
    printRange(start+1, end)

printRange(0, 5)","def printRange(start, end):
    if start == end:
        return
    print(start)
    printRange(start+1, end)

printRange(0, 5)",correct,OOP
Design an algorithm in Python to identify all the prime numbers in a given range.,,"def find_primes_in_range(start_num, end_num):
    primes = []
    for num in range(start_num, end_num + 1):
        is_prime = True
        for divisor in range(2, num):
            if (num % divisor == 0):
                is_prime = False
                break
        if is_prime:
            primes.append(num)
    return primes","def find_primes_in_range(start_num, end_num):
    primes = []
    for num in range(start_num, end_num + 1):
        is_prime = True
        for divisor in range(2, num):
            if (num % divisor == 0):
                is_prime = False
                break
        if is_prime:
            primes.append(num)
    return primes",correct,File I/O
Develop a test suite in Python to test a class or function.,,"import unittest 

class TestMyClassOrFunction(unittest.TestCase):

    def test_something(self):
        # Setup 
        # Code to set up a value to test 
        
        # Exercise 
        # Code for the function to test 
        result = function_to_test(*args) 
        
        # Verify
        self.assertEqual(result, expected_result) 

if __name__ == ""__main__"":
    unittest.main()","import unittest 

class TestMyClassOrFunction(unittest.TestCase):

    def test_something(self):
        # Setup 
        # Code to set up a value to test 
        
        # Exercise 
        # Code for the function to test 
        result = function_to_test(*args) 
        
        # Verify
        self.assertEqual(result, expected_result) 

if __name__ == ""__main__"":
    unittest.main()",Syntax Error,Recursion
Write a function to multiply all the numbers in a list and divide with the length of the list.,,"def multiply_num(numbers):  
    total = 1
    for x in numbers:
        total *= x  
    return total/len(numbers) ","def multiply_num(numbers):  
    total = 1
    for x in numbers:
        total *= x  
    return total/len(numbers) ",Syntax Error,Loops
Generate a Python function to calculate the area of a triangle given the three sides.,,"def triangle_area(side1, side2, side3):
    s = (side1 + side2 + side3) / 2
    area = (s * (s - side1) * (s - side2) * (s - side3)) ** 0.5
    return area","def triangle_area(side1, side2, side3):
    s = (side1 + side2 + side3) / 2
 ",Incomplete Answer,File I/O
Construct a Python code to find the maximum in a given list.,"[10, 3, 16, 17, 8]","def find_max(list): 
    max = list[0] 
    for i in list: 
        if i > max: 
            max = i 
    return max 
  
list = [10, 3, 16, 17, 8]
print(""Maximum number in the list:"", find_max(list))","def find_max(list): 
    max = list[0] 
    for i in list: 
        if i > max: 
            max = i 
    return max 
  
list = [10, 3, 16, 17, 8]
print(""Maximum number in the list:"", find_max(list))",correct,Recursion
"Write a Python program to generate a password of length 10 from lowercase alphabets, uppercase alphabets, digits and special characters.",,"import random
import string

length = 10

def generatePassword(length):
    chars = string.ascii_lowercase + string.ascii_uppercase + string.digits + ""!@#$%^&*""
    return ''.join([random.choice(chars) for _ in range(length)])

password = generatePassword(length)
print(password)","import random
import string

length = 10

def generatePassword(length)
    chars = string.ascii_lowercase + string.ascii_uppercase + string.digits + ""!@#$%^&*""
    return ''.join([random.choice(chars) for _ in range(length)])

password = generatePassword(length)
print(password)",Syntax Error,OOP
"Generate a new Python class which extends some existing class, but with a modified constructor.","class A:
    def __init__(self, param1, param2):
        self.param1 = param1
        self.param2 = param2","class B(A):
    def __init__(self, param1, param2, param3):
        super().__init__(param1, param2)
        self.param3 = param3","class B(A):
    def __init__(self, param1, param2, param3):
    ",Incomplete Answer,OOP
"Generate a Python code snippet for initializing a 3D numpy array of size (4,3,2).",,"import numpy as np

# initialize 3D array
arr = np.zeros((4,3,2))","import numpy as np

# initialize 3D array
arr = np.zeros((4,3,2))",correct,Recursion
Create a Python NLTK program to tokenize a given English text.,"Example text: ""This is a sample sentence for tokenizing.""","import nltk

# Input text
text = ""This is a sample sentence for tokenizing.""

# Tokenize sentences
tokens = nltk.word_tokenize(text)

# Print tokens
print(tokens)

# Output
['This', 'is', 'a', 'sample', 'sentence', 'for', 'tokenizing', '.']","import nltk

# Input text
text = ""This is a sample sentence for tokenizing.""

# Tokenize sentences
tokens = nltk.word_tokenize(text)

# Print tokens
print(tokens)

# Output
['This', 'is', 'a', 'sample', 'sentence', 'for', 'tokenizing', '.']",Syntax Error,Loops
Generate a python script to calculate the median of a given data set.,,"def median(data):
    n = len(data)
    if n % 2 == 0:
        return (data[n//2] + data[(n//2)-1])/2
    else:
        return data[n//2]

data = [5, 6, 7, 8, 9]
median = median(data)
print('Median:', median)","def median(data):
    n = len(data)
    if n % 2 == 0:
        return (data[n//2] + data[(n//2)-1])/2
    else:
        return data[n//2]

data = [5, 6, 7, 8, 9]
median = median(data)
print('Median:', median)",correct,Recursion
Generate a Python program to implement a recursive search and replace on strings.,,"def replace(s, old, new):
 if s == '':
 return s
else:
 if s[0] == old:
 return new + replace(s[1:], old, new)
 else:
 return s[0] + replace(s[1:], old, new)
 
string = ""Hello World""
print(replace(string, ""World"", ""John""))","def replace(s, old, new)
 if s == ''
 return s
else
 if s[0] == old
 return new + replace(s[1], old, new)
 else
 return s[0] + replace(s[1], old, new)
 
string = ""Hello World""
print(replace(string, ""World"", ""John""))",Syntax Error,File I/O
Optimize a function for generating a random string in Python. The function should generate a string with 7 characters that include both numbers and letters,"def random_string(): 
    string = '' 
    for i in range(7): 
        string += chr(randint(97, 122)) 
        string += str(randint(0, 9)) 
    return string","import random

def random_string(): 
    string = ''.join(random.sample(
        'abcdefghijklmnopqrstuvwxyz' 
        + '0123456789', 7)) 
    return string","import random

def random_string(): 
    string = ''.join(random.sample(
        'abcdefghijklmnopqrstuvwxyz' 
        + '0123456789', 7)) 
    return string",correct,File I/O
Create a Python function named 'get_date' that returns the current date and time upon invocation.,,"def get_date():
	from datetime import datetime
	return datetime.now()","def get_date(:
	from datetime import datetime
	return datetime.now(",Syntax Error,File I/O
Write a function in Python that counts the number of words in the given string.,"Example String:
""This is a sample string with some words""","def word_count(str):
 words = str.split()
 return len(words)

print(word_count(""This is a sample string with some words""))","def word_count(str):
 words = str.split()
 return len(words)
",Incomplete Answer,File I/O
Complete the Python code to generate a list of the odd numbers in the range 1 to 25.,-,"odd_nums_list = []

for number in range(1, 26):
    if number % 2 != 0:
        odd_nums_list.append(number)

print(odd_nums_list) # [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25]","odd_nums_list = []

for number in range(1, 26):
    if number % 2 != 0:
        odd_nums_l",Incomplete Answer,String Manipulation
Create a Python function for converting a Celsius temperature to Fahrenheit scale.,,"def celsius_to_fahrenheit(celsius):
    return (celsius * (9/5)) + 32",def celsius_to_fahrenheit(celsius),Incomplete Answer,File I/O
Generate a random list of numbers between 1 and 10 of a given length in Python.,length = 5,"import random

def generateRandomList(length):
    random_list = []
    for _ in range(length):
        random_list.append(random.randint(1, 10))
    return random_list

if __name__ == '__main__':
    print(generateRandomList(5))","import random

def generateRandomList(length):
    random_list = []
    for _ in range(length):
        random_lis",Incomplete Answer,String Manipulation
Can you write a Python program to print out the elements in a given list with their frequency?,"[1, 2, 3, 2, 4, 1, 1]","my_list = [1, 2, 3, 2, 4, 1, 1]

frequency_dict = {}

for num in my_list:
    if num in frequency_dict:
        frequency_dict[num] = frequency_dict[num] + 1
    else:
        frequency_dict[num] = 1

for num, freq in frequency_dict.items():
    print(""{} : {}"".format(num, freq))","my_list = [1, 2, 3, 2, 4, 1, 1]

frequency_dict = {}

for num in my_list:
    if num in frequency_dict:
        frequency_dict[num] = freque",Incomplete Answer,String Manipulation
Write a python function to check whether the given list contains consecutive numbers or not.,,"def check_Consecutive(l): 
    return sorted(l) == list(range(min(l),max(l)+1)) ","def check_Consecutive(l): 
    return sorted(l) == list(range(min(l),max(l)+1)) ",Syntax Error,Recursion
Design a class to represent a complex number in Python.,,"class ComplexNumber:
    def __init__(self, real, imag):
        self.real = real
        self.imag = imag

    def __add__(self, other):
        real = self.real + other.real
        imag = self.imag + other.imag
        return ComplexNumber(real, imag)

    def __str__(self):
        return '{} + {}i'.format(self.real, self.imag)","class ComplexNumber:
def __init__(self, real, imag):
    self.real = real
    self.imag = imag

def __add__(self, other):
    real = self.real + other.real
    imag = self.imag + other.imag
    return ComplexNumber(real, imag)

def __str__(self):
    return '{} + {}i'.format(self.real, self.imag)",Syntax Error,Recursion
Develop a program to implement a linear search in Python.,"[7, -3, 10, 13, -6], -3","def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

arr = [7, -3, 10, 13, -6]
target = -3
print(""Index of"", target, "" is "", linear_search(arr, target)) # 1","def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

arr = [7, -3, 10, 13, -6]
target = -3
print(""Index of"", target, "" is "", linear_search(arr, target)) # 1",correct,File I/O
Modify the following Python program to print the sum of all its elements.,"# Given a list

list = [1, 2, 3, 4, 5]","# Given a list

list = [1, 2, 3, 4, 5]
 
# Calculate sum
sum_val = 0
for num in list:
 sum_val += num
 
# Print the result
print(sum_val) # returns 15","# Given a list

list = [1, 2, 3, 4, 5]
 
# Calculate sum
sum_val = 0
for num in list:
 sum_val += num
 
# Print the result
print(name, sum_val) # returns 15",Syntax Error,Recursion
Create an AI-friendly program in Python to remove duplicates from a list of numbers.,"list1 = [1, 2, 3, 2, 4, 5, 1];","def remove_duplicates(list1): 
    new_list = [] 
    for num in list1: 
        if num not in new_list: 
            new_list.append(num) 
    return new_list 

remove_duplicates(list1)","def remove_duplicates(list1): 
    new_list = [] 
    for num in list1: 
        if num not i",Incomplete Answer,File I/O
Generate a python code to calculate the median of an unsorted list of numbers.,"[3, 4, 1, 2, 5]","def median(lst):
    lst = sorted(lst)
    if len(lst) % 2 == 0:
        mid = int(len(lst) / 2)
        return (lst[mid] + lst[mid-1]) / 2
    else:
        mid = int(len(lst) / 2)
        return lst[mid]

median([3, 4, 1, 2, 5])","def median(lst:
    lst = sorted(lst
    if len(lst % 2 == 0:
        mid = int(len(lst / 2
        return (lst[mid] + lst[mid-1] / 2
    else:
        mid = int(len(lst / 2
        return lst[mid]

median([3, 4, 1, 2, 5]",Syntax Error,Loops
Generate a Python class for a Person that has methods and attributes to work with names and ages.,,"class Person:
 def __init__(self, name, age):
   self.name = name
   self.age = age

 def get_name(self):
   return self.name

 def get_age(self):
   return self.age

 def set_name(self, name):
   self.name = name

 def set_age(self, age):
   self.age = age","class Person:
 def __init__(self, name, age):
   self.name = name
   self.age = age

 def get_name(self):
   return self.name

 def get_age(self):
   return self.age

 def set_name(self, name):
   self.name = name

 def set_age(self, age):
   self.age = age",correct,String Manipulation
"Design a class in Python for storing employee information. The employee information should include name, age, salary and department.",,"class Employee:
 def __init__(self, name, age, salary, department):
 self.name = name
 self.age = age
 self.salary = salary
 self.department = department

 def get_name(self):
 return self.name

 def get_age(self):
 return self.age

 def get_salary(self):
 return self.salary

 def get_department(self):
 return self.department","class Employee:
 def __init__(self, name, age, salary, department):
 self.name = name
 self.age = age
 self.salary = salary
 self.department = department

 def get_name(self):
 return self.name

 def get_age(self):
 return self.age

 def get_salary(self):
 return self.salary

 def get_department(self):
 return self.department",correct,File I/O
Create a Python script that takes in strings representing temperatures in celsius and returns the corresponding temperatures in fahrenheit.,,"def c_to_f(celsius):
    return (celsius * 9.0/5) + 32","def c_to_f(celsius):
    re",Incomplete Answer,OOP
Write a python function to count the occurrence of a given character in a string.,,"def count(s,c) : 
    res = 0 
    for i in range(len(s)) : 
        if (s[i] == c): 
            res = res + 1
    return res ","def count(s,c)  
    res = 0 
    for i in range(len(s))  
        if (s[i] == c) 
            res = res + 1
    return res ",Syntax Error,Recursion
Write a Python program to encode an integer into a base 62 string.,,"import string 

def encode_base_62(n): 
    base62 = string.digits + string.ascii_uppercase + string.ascii_lowercase
    output = """" 
    while n > 0:
        output = base62[n%62] + output
        n //= 62
    return output","import string 

def encode_base_62(n): 
    base62 = string.digits + string.ascii_uppercase + string.ascii_lower",Incomplete Answer,OOP
Generate code to prompt user input using Python.,,"name = input('What is your name? ')
print('Hello', name, '!')","name = input('What is your name? ')
print('Hello', name, '!')",correct,OOP
Develop a program to remove all the comments from a Python code.,"import sys
# This code prints hello world
def main():
    print(""Hello World!"")","import sys

def main():
    print(""Hello World!"")","import sys

def main():
print(""Hello World!"")",Syntax Error,Loops
Compose a Python method to print the flat list from a given 2D list.,"Input:  
test_list = [[5, [6, 13]], [4], [4, [6, 7]]]","def flat_list(lst): 
  flat_lst = [] 
  for sublist in lst: 
    if type(sublist) == int: 
      flat_lst.append(sublist) 
    else: 
      for ele in sublist: 
        flat_lst.append(ele) 
  return flat_lst 

result = flat_list(test_list) 
  
print(""The flattened list is:"", result)","def flat_list(lst): 
  flat_lst = [] 
  for sublist in lst: 
    if type(sublist) == int: 
      flat_lst.append(sublist) 
    else: 
      for ele in sublist: 
        flat_lst.append(ele) 
  return flat_lst 

result = flat_list(test_list) 
  
print(""The flattened list is:"", result)",correct,String Manipulation
Develop a python code to evaluate the sum of all the even numbers in a given sequence.,,"def sum_even_numbers(sequence):
    result = 0
    for num in sequence:
        if num % 2 == 0:
            result += num
    
    return result","def sum_even_numbers(sequence):
    result = 0
    for num in sequence:
",Incomplete Answer,File I/O
Generate a Python program to scrape the content of an HTTPS website and output the result.,,"import requests
from bs4 import BeautifulSoup 

# make a get request to fetch the contents of the page
r = requests.get('https://example.com')

# parse the html content
soup = BeautifulSoup(r.content, 'html.parser')

# print out the result
print(soup.prettify())","import requests
from bs4 import BeautifulSoup 

# make a get request to fetch the contents of the page
r = requests.get('https://example.com')

# parse the html content
soup = BeautifulSoup(r.content, 'html.parser')

# print out the result
print(soup.prettify())",correct,File I/O
Write a Python program that takes an input list of integers and finds out the sum of all the odd elements in the list.,"List: [2, 3, 4, 5, 6]","def sum_odd_elements(int_list):
    '''This function takes a list of integers and returns the sum of all the odd elements.'''
    total = 0
    for num in int_list:
        if num % 2 != 0:
            total += num
    return total

int_list = [2, 3, 4, 5, 6]
sum = sum_odd_elements(int_list)

print(sum) # 8","def sum_odd_elements(int_list):
    '''This function takes a list of integers and returns the sum of all the odd elements.'''
    total = 0
    for num in",Incomplete Answer,File I/O
Edit a Python program to create a dictionary where the key is a string and the values is a list of strings.,,"my_dict = dict()

# ... existing program here

# Create a dictionary of strings
my_dict['item1'] = ['one','two','three']
my_dict['item2'] = ['four','five','six']","my_dict = dict()

# ... existing program here

# Create a dictionary of strings
my_dict['item1'] = ['one','two','three']
my_dict['item2'] = ['four','five','six']",correct,String Manipulation
Create a program in python that can predict the Bitcoin price next week,,"import pandas as pd
from sklearn.linear_model import LinearRegression

# Read the data
data = pd.read_csv(""bitcoin.csv"")

# Separate features and labels
X = data.loc[:, data.columns != 'Close']
y = data['Close']

# Train the linear regression model
model = LinearRegression().fit(X, y)

# Predict the bitcoin price next week
prediction = model.predict(X)","import pandas as pd
from sklearn.linear_model import LinearRegression

# Read the data
data = pd.read_csv(""bitcoin.csv"")

# Separate features and labels
X = data.loc[:, data.columns != 'Close']
y = data['Close']

# Train the linear regression model
model = LinearRegression().fit(X, y)

# Predict the bitcoin price next week
prediction = model.predict(X)",correct,Recursion
Create a function in Python which takes a list of integers as input and returns a sorted list.,"[3, 2, 5, 1, 4]","def sort_list(list):
    list.sort()
    return list
    
sorted_list = sort_list([3, 2, 5, 1, 4])
print(sorted_list) # output: [1, 2, 3, 4, 5]","def sort_list(list):
    list.sort()
    return list
    
sorted_list = sort_list([3, 2, 5, 1, 4])
print(sorted_list) # output: [1, 2, 3, 4, 5]",correct,Recursion
Generate a Python program to find the mode of the given list.,"[6, 2, 8, 9, 3, 2, 10]","from collections import Counter

def mode(list):
    c = Counter(list)
    freq = c.most_common()
    if freq[0][1] == freq[1][1]:
        return ""No single mode found"" 
    else:
        return freq[0][0]

list = [6, 2, 8, 9, 3, 2, 10]
print(""Mode:"", mode(list))","from collections import Counter

def mode(list):
    c = Counter(list)
    freq = c.most_common()
    if freq[0][1] == freq[1][1]:
",Incomplete Answer,Loops
Write a Python program to traverse a binary search tree in preorder traversal.,"10
    5       15 
  2   7   12    20","def preorder_traversal(root):
    if root is None: 
        return
    
    print (root.data, end = ' ')
    
    preorder_traversal(root.left) 
    preorder_traversal(root.right)","def preorder_traversal(root):
    if root is None: 
        return
    
    print (root.d",Incomplete Answer,String Manipulation
"Write a Python program to find the maximum element in the given array [1, 10, 50, 3, 8].",,"array = [1, 10, 50, 3, 8]

# Get the maximum element
max_element = max(array)

print(max_element) # Output: 50","array = [1, 10, 50, 3, 8]

# Get the maximum element
ma",Incomplete Answer,Recursion
Write a Python function to remove the nth occurrence of a given substring from the given string.,"string = ""This is a chance to practice python string manipulation skills""
substring = ""is""
n = 2","def remove_nth_occurrence(string, substring, n):
 count = 0
 for i, ch in enumerate(string):
  if string[i:i+len(substring)] == substring:
   count += 1
   if count == n:
    string = string[:i] + string[i+len(substring):]
 return string","def remove_nth_occurrence(string, substring, n):
 count = 0
 for i, ch in enumerate(string):
  if string[i:i+len(substring)] == substring:
   count += 1
   if count == n:
    string = string[:i] + string[i+len(substring):]
 return string",correct,Recursion
Write a Python program to calculate the number of even and odd numbers from a series of numbers.,"1, 4, 5, 7","series = [1, 4, 5, 7]

# count even and odd numbers
even_count = 0
odd_count = 0

for num in series:
    if num % 2 == 0:
        even_count += 1
    else:
        odd_count += 1

# Print the total number of even and odd numbers
print('Number of even numbers: {}'.format(even_count))
print('Number of odd numbers: {}'.format(odd_count))","series = [1, 4, 5, 7]

# count even and odd numbers
even_count = 0
odd_count = 0

for num in series:
    if num % 2 == 0:
        even_count += 1
    else:
        odd_count += 1

# Print the total number of even and odd numbers
print('Number of even numbers: {}'.format(even_count))
print('Number of odd numbers: {}'.format(odd_count))",correct,OOP
Write a function to multiply two lists using map and lambda function.,,"def mul_list(nums1,nums2):
  result = map(lambda x, y: x * y, nums1, nums2)
  return list(result)","def mul_list(nums1,nums2):
  result = map(lambda",Incomplete Answer,Recursion
Write a python program to convert a given hexadecimal to binary.,Hexadecimal: 0x56,"def hex_to_binary(h): 
    return bin(int(h, 16)) 
  
print(hex_to_binary('0x56'))","def hex_to_binary(h): 
return bin(int(h, 16)) 
  
print(hex_to_binary('0x56'))",Syntax Error,OOP
Sort a given list using bubble sort in Python.,"list = [3,5,2,4,7,5]","def bubble_sort(list):
    for i in range(len(list)):
        for j in range(len(list)-1):
            if list[j]>list[j+1]:
                list[j],list[j+1] = list[j+1],list[j]
    return list

if __name__ == '__main__':
    list = [3,5,2,4,7,5]
    print(bubble_sort(list))","def bubble_sort(list):
    for i in range(len(list)):
        for j in range(len(list)-1):
            if list[j]>list[j+1]:
             ",Incomplete Answer,String Manipulation
Design a positive feedback loop for the following python program.,"for i in range(10):
    print(""hello"")","for i in range(10):
    print(""hello"")
    i += 1
    if i == 10:
        print(""You've got it!"")","for i in range(10):
print(""hello"")
i += 1
if i == 10:
    print(""You've got it!"")",Syntax Error,OOP
Design a function in Python for computing the area of a triangle.,,"def area_triangle(base, height):
    return (base * height) / 2","def area_triangle(base, height)",Incomplete Answer,Loops
"Create a hashmap (a key-value pair data structure) in Python that stores two values, ""name"" and ""age"".",,"dict = {
    'name': 'John',
    'age': 30
}","dict = {
    'name': 'John',
    'age': 30
}",Syntax Error,Recursion
Write a Python program that sorts a given array of numbers in ascending order.,"[1, 3, 5, 2, 6]","def sort_ascending(arr):
    for x in range(len(arr)-1):
        for y in range(x+1, len(arr)):
            if arr[x] > arr[y]:
                arr[x], arr[y] = arr[y], arr[x]
    return arr

arr = [1, 3, 5, 2, 6]
print(sort_ascending(arr)) # Output: [1, 2, 3, 5, 6]","def sort_ascending(arr):
    for x in range(len(arr)-1):
        for y in range(x+1, len(arr)):
            if arr[x] > arr[y]:
     ",Incomplete Answer,String Manipulation
Generate a Python code to find the power of a number.,"base = 2
exponent = 4","# Calculate power of a number 
def power(base, exponent):
    # Initialize result
    result = 1
    # Multiply result with base
    # until exponent becomes 0
    while exponent != 0:
        result *= base
        exponent -= 1
 
    # Return result
    return result

# Print the power
print(power(base, exponent))","# Calculate power of a number 
def power(base, exponent):
    # Initialize result
    result = 1
    # Multiply result with base
    # until exponent becomes ",Incomplete Answer,Recursion
Write a Python script to combine two dictionaries into one.,"dict1 = {'a':1, 'b':2}
dict2 = {'c':3, 'd':4}","def merge_dicts(dict1, dict2):
    merged_dict = {**dict1, **dict2}
    return merged_dict","def merge_dicts(dict1, dict2:
    merged_dict = {**dict1, **dict2}
    return merged_dict",Syntax Error,File I/O
Generate a Python program to calculate the total price of a grocery list given a list of items and their prices.,"[
    [apple, 2.00], 
    [banana, 4.00], 
    [bread, 3.50], 
    [orange, 1.50]
]","items = [
    ['apple', 2.00], 
    ['banana', 4.00], 
    ['bread', 3.50], 
    ['orange', 1.50]
]

total = 0

for item in items:
    total += item[1]

print(""The total price of the grocery list is:"", total)","items = [
    ['apple', 2.00], 
    ['banana', 4.00], 
    ['bread', 3.50], 
    ['orange', 1.50]
]

total = 0

for item in items:
    total += item[1]

print(name, ""The total price of the grocery list is:"", total)",Syntax Error,Loops
Construct a Python program to take a list of numbers as input and print out the largest number in the list.,"[5, 10, 2, 9, 6]","def largestNumber(list):
  max = list[0]
  for num in list:
    if num > max:
      max = num
  return max

list = [5, 10, 2, 9, 6]
print(largestNumber(list)) # Output: 10","def largestNumber(list):
  max = list[0]
  for num in list:
    if num > max:
      m",Incomplete Answer,OOP
Write a Python program to load the COVID-19 data from Github repository.,,"import requests
import csv
import os

# Get the latest COVID-19 data from Github repository
url = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/04-01-20","import requests
import csv
import os

# Get the latest COVID-19 data from Github repository
url = 'https://ra",Incomplete Answer,String Manipulation
Write a function to re-arrange the elements of the given array so that all negative elements appear before positive ones.,,"def re_arrange_array(arr, n):
  j=0
  for i in range(0, n):
    if (arr[i] < 0):
      temp = arr[i]
      arr[i] = arr[j]
      arr[j] = temp
      j = j + 1
  return arr","def re_arrange_array(arr, n):
  j=0
  for i in range(0, n):
    if (arr[i] < 0):
      temp = arr[i]
      arr[i] = arr[j]
      arr[j] = temp
      j = j + 1
  return arr",correct,String Manipulation
Create a python program to calculate the factorial of the given argument.,,"def factorial(x):
    if x == 0 or x == 1:
        return 1
    else:
        return x * factorial(x-1)","def factorial(x):
if x == 0 or x == 1:
    return 1
else:
    return x * factorial(x-1)",Syntax Error,String Manipulation
"Using the provided pseudocode, write a program in Python that checks if a given number is a prime number.",,"def is_prime(num):
    if num <= 1:
        return False

    for i in range(2, num):
        if num % i == 0:
            return False

    return True

num = 7
result = is_prime(num)
print(result)","def is_prime(num):
    if num <= 1:
        return False

    for i in range(2, num):
        if num % i == 0:
            return False

    return True

num = 7
result = is_prime(num)
print(result)",correct,File I/O
Create a class in Python and define a method that multiplies two numbers.,,"class Multiplier:
 def multiply(self, num1, num2):
  return num1 * num2

m = Multiplier()
print(m.multiply(2, 3))","class Multiplier:
 def multiply(self, num1, num2):
  return num1 * num2

m = Multiplier()
print(m.multiply(2, 3))",Syntax Error,String Manipulation
Can you write a Python program that takes a list of strings as an argument and returns the list with all elements sorted by their length?,"['Cat','Dog','Elephant','Horse']","def sort_by_length(strings):
    return sorted(strings, key=len)","def sort_by_length(strings):
    return sorted(strings, key=len)",correct,Loops
Create a Python program to scrape a search engine for the top 10 results on a given query.,"Search query: ""best movies of 2019""","import requests
from bs4 import BeautifulSoup

url = 'https://www.google.com/search?q=best+movies+of+2019&num=10'

response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

results = soup.find_all('div', class_='rc')

for result in results:
 title = result.find('h3').text
 print(title)","import requests
from bs4 import BeautifulSoup

url = 'https://www.google.com/search?q=best+movies+of+2019&num=10'

response = requests.get(url)
soup = Bea",Incomplete Answer,Recursion
Develop a Python function that takes two arrays of equal size as input and returns the sum of the two arrays.,"[1,2,3], [4,5,6]","def sum_arrays(arr1, arr2):
    result = []
    for i in range(len(arr1)):
        result.append(arr1[i] + arr2[i])
    return result

summed = sum_arrays([1,2,3], [4,5,6])
print(summed)","def sum_arrays(arr1, arr2:
    result = []
    for i in range(len(arr1:
        result.append(arr1[i] + arr2[i]
    return result

summed = sum_arrays([1,2,3], [4,5,6]
print(summed",Syntax Error,String Manipulation
Design a program in Python that counts the number of words in a paragraph and returns the count.,,"def count_paragraph_words(par):
    par = par.split()
    return len(par)","def count_paragraph_words(par):
par = par.split()
return len(par)",Syntax Error,OOP
"Using a dictionary, write a Python statement to remove all duplicate keys in a given dictionary","my_dict = {
    ""apple"": 5,
    ""pear"": 10,
    ""apple"": 8
}","# use set to remove duplicate keys
my_dict = dict(set(my_dict.items()))","# use set to remove duplicate keys
",Incomplete Answer,OOP
"Edit the following Python code to give the output as [400, 125, 10,1].","val = [1, 10, 125, 400]
res = []

for v in val:
    res.append(v)","val = [1, 10, 125, 400]
res = []

for v in reversed(val):
    res.append(v)
    
print(res) # Output: [400, 125, 10,1]","val = [1, 10, 125, 400]
res = []

for v in reversed(val):
 ",Incomplete Answer,File I/O
Write a Python program to calculate the sum of the digits of a given number.,,"def sum_of_digits(n): 
  
   sum = 0
  
   # Separate the digits of the number  
   while n > 0: 
      digit = n % 10
      sum += digit
      n //= 10
  
   return sum","def sum_of_digits(n): 
  
   sum = 0
  
   # Separate the digits of the number  
   while n > 0: 
      digit = n % 10
      sum += digit
      n //= 10
  
   return sum",Syntax Error,File I/O
Generate a code snippet in Python to print numbers from 0 to 100,,"for i in range(101):
 print(i)",for i in range(,Incomplete Answer,OOP
Load a dataset of credit card transactions in a Python program.,,"import pandas as pd 

df = pd.read_csv(""credit_card_transactions.csv"")","import pandas as pd 

df = pd.read_",Incomplete Answer,String Manipulation
Use OOP design principles to create a Python class for a house.,,"class House(object):
    def __init__(self, num_rooms, square_feet, num_floors):
        self.num_rooms = num_rooms
        self.square_feet = square_feet
        self.num_floors = num_floors

    def get_info(self):
        # return house info
        return ""This house has {} rooms, is {} square feet, and has {} floors."".format(self.num_rooms, self.square_feet, self.num_floors)","class House(object:
    def __init__(self, num_rooms, square_feet, num_floors:
        self.num_rooms = num_rooms
        self.square_feet = square_feet
        self.num_floors = num_floors

    def get_info(self:
        # return house info
        return ""This house has {} rooms, is {} square feet, and has {} floors."".format(self.num_rooms, self.square_feet, self.num_floors",Syntax Error,OOP
Implement a function in Python that takes a number N and returns the sum of all the positive numbers up to N (inclusive).,10,"""""""
Implement a function in Python that takes a number N and returns the sum of all the positive numbers up to N (inclusive). 
""""""

def sum_numbers(n):
    total = 0
    for num in range(n+1):
        if num > 0:
            total += num
    return total

if __name__ == '__main__':
    n = 10
    print(sum_numbers(n)) # 55","""""""
Implement a function in Python that takes a number N and returns the sum of all the positive numbers up to N (inclusive). 
""""""

def sum_numbers(n):
    total ",Incomplete Answer,Loops
Write a python function to check whether the triangle is valid or not if 3 points are given.,,"def check_Triangle(x1,y1,x2,y2,x3,y3): 
    a = (x1*(y2-y3)+x2*(y3-y1)+x3*(y1-y2))   
    if a == 0: 
        return ('No') 
    else: 
        return ('Yes') ","def check_Triangle(x1,y1,x2,y2,x3,y3): 
    a = (x1*(y2-y3)+x2*(y3-y1)+x3*(y1-y2)",Incomplete Answer,Loops
Create a simple game using Python,,"import random

tries = 0
goal = random.randint(1,100)

while True:
    guess = int(input('Enter a number: '))
    tries += 1

    if guess == goal:
        print('You win! You guessed the number in {} tries.'.format(tries))
        break
    elif guess < goal:
        print('Too low!')
    else:
        print('Too high!')","import random

tries = 0
goal = random.randint(1,100)

while True:
    guess = int(input('Enter a number: '))
    tries += 1

    if guess == goal:
        print",Incomplete Answer,Loops
Create a Python program to convert a given string to an integer by removing all non-numeric characters.,"""29A3B8746""","def remove_non_numeric(str):
 res = """"
 for c in str:
 if c.isnumeric():
 res += c
 return int(res)

s = ""29A3B8746""
integer = remove_non_numeric(s)
print(integer) // 2938746","def remove_non_numeric(str):
 res = """"
 for c in str:
 if c.isnumeric():
 res += c
 return int(res)

s = ""29A3B8746""
integer = remove_non_numeric(s)
print(integer) // 2938746",correct,File I/O
Build a Python program that includes a function to add two given numbers.,,"""""""
Build a Python program that includes a function to add two given numbers.
""""""

def add(a, b):
    return a + b

if __name__ == '__main__':
    result = add(2, 3)
    print(f'The sum of 2 and 3 is {result}')","""""""
Build a Python program that includes a function to add two given numbers.
""""""

def add(a, b):
    ret",Incomplete Answer,String Manipulation
Create a Python function to clean and normalize text strings.,"The text string to be normalized is ""Thi$$$s i$ a te$Xt!!!!!""","import re

def clean_text(text):
 # Lowercase text
 text = text.lower()
 
 # Remove special characters
 text = re.sub(r'[^\w\s]','', text)
 
 # Remove extra whitespaces
 text = re.sub(r'\s+',' ', text)
 
 return text
 
# Sample Usage
text = 'Thi$$$s i$ a te$Xt!!!!!'
clean_text(text)
# Output: 'this is a text '","import re

def clean_text(text):
 # Lowercase text
 text = text.lower()
 
 # Remove special characters
 text = re.sub(r'[^\w\s]','', text)
 
 # Remove extra whitespaces
 text = re.sub(r'\s+',' ', text)
 
 return text
 
# Sample Usage
text = 'Thi$$$s i$ a te$Xt!!!!!'
clean_text(text)
# Output: 'this is a text '",Syntax Error,OOP
Please produce a python program that can shuffle the elements of a given array.,,"import random

def shuffle_array(array):
    for i in range(len(array)):
        random_idx = random.randint(i, len(array) - 1)
        array[i], array[random_idx] = array[random_idx], array[i]
    return array

print(shuffle_array([1,2,3,4,5]))","import random

def shuffle_array(array):
    for i in range(len(array)):
        random_idx = random.randint(i, len(array) - 1)
        array[i], array[random_idx] = array[random_idx], array[i]
    return array

print(name, shuffle_array([1,2,3,4,5]))",Syntax Error,String Manipulation
Create a Python script to find the sum of all the even numbers in a list of integers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def find_sum(lst):
 
sum = 0
 
for num in lst:
 if num % 2 == 0:
  sum += num
 
return sum

lst = [1,2,3,4,5,6,7,8,9]
print(find_sum(lst))
 
# Output: 20","def find_sum(lst)
 
sum = 0
 
for num in lst
 if num % 2 == 0
  sum += num
 
return sum

lst = [1,2,3,4,5,6,7,8,9]
print(find_sum(lst))
 
# Output 20",Syntax Error,String Manipulation
Create a Python program to implement linear search to find a specified item in an array.,"Array = [1, 2, 3, 4, 5], search_number = 4","def linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1

arr = [1, 2, 3, 4, 5]
search_number = 4
result = linear_search(arr, search_number)
if result == -1:
    print(""Number not found in the array"")
else:
    print(""Number found at index:"", result)","def linear_search(arr, x): 
for i in range(len(arr)): 
    if arr[i] == x: 
        return i 
return -1

arr = [1, 2, 3, 4, 5]
search_number = 4
result = linear_search(arr, search_number)
if result == -1:
print(""Number not found in the array"")
else:
print(""Number found at index:"", result)",Syntax Error,File I/O
Write a Python program to format a specified string to limit the number of characters to 6.,,"def limit_chars(s):
    return s[:6]",def limit_chars(s),Incomplete Answer,Recursion
Create a function in Python for converting a list of strings to a dictionary.,"Strings: [""John"", ""Jake"", ""Adam""]","def stringsToDict(strings):
    return {string:0 for string in strings}

strings = [""John"", ""Jake"", ""Adam""]
dict = stringsToDict(strings)
print(dict) # Output: {'John': 0, 'Jake': 0, 'Adam': 0}","def stringsToDict(strings):
    return {string:0 for string in strings}

strings = [""John"", ""Jak",Incomplete Answer,Loops
Generate a python program that calculates the area of a triangle given the coordinates of its vertices.,"A=(2, 0), B=(-2, 0), C=(0, 4)","def triangle_area(A, B, C): 
    return abs((A[0]*(B[1] - C[1]) + B[0]*(C[1] - A[1]) + C[0]*(A[1] - B[1]))/2.0) 
  
# Driver Code 
A = (2, 0) 
B = (-2, 0) 
C = (0, 4) 
  
print(""Area of Triangle is"", triangle_area(A, B, C))","def triangle_area(A, B, C): 
return abs((A[0]*(B[1] - C[1]) + B[0]*(C[1] - A[1]) + C[0]*(A[1] - B[1]))/2.0) 
  
# Driver Code 
A = (2, 0) 
B = (-2, 0) 
C = (0, 4) 
  
print(""Area of Triangle is"", triangle_area(A, B, C))",Syntax Error,String Manipulation
Write a function in Python to generate a random letter from the English alphabet.,,"import random 

def generate_random_letter(): 
    letters = 'abcdefghijklmnopqrstuvwxyz'
    letter = random.choice(letters)
    return letter","import random 

def generate_random_letter(): 
letters = 'abcdefghijklmnopqrstuvwxyz'
letter = random.choice(letters)
return letter",Syntax Error,String Manipulation
Develop a Python program to create an autocomplete system that predicts words based on the input text.,,"def autocomplete(input_text):
    # Generate the word candidates
    word_candidates = generate_candidates(input_text)
    # Filter the word candidates 
    filtered_words = filter_candidates(word_candidates)
    # Rank the words and return the top 5 
    sorted_words = rank_words(filtered_words)
    return sorted_words[:5]","def autocomplete(input_text):
    # Generate the word candidates
    word_candidates = generate_candidates(input_text)
    # Filter the word candidates 
    filte",Incomplete Answer,Recursion
Come up with a python program that takes a string and return a reversed version of the string.,"""<noinput>""","def reverse_string(string):
    return string[::-1]","def reverse_string(string):
    return string[::-1]",correct,Loops
Develop a Python function to find the average of a list of positive numbers in the given range.,"[1, 2, 3, 4]","def find_average(nums):
  sum = 0
  count = 0
  for num in nums:
    if num > 0:
      sum += num
      count += 1
  return sum/count

print (find_average([1, 2, 3, 4]))","def find_average(nums):
  sum = 0
  count = 0
  for num in nums:
    if num > 0:
      sum += num
      count += 1
  return sum/count

pritn (find_average([1, 2, 3, 4]))",Syntax Error,Loops
Create a command line Python script to generate random numbers within a given range.,Minimum Number: 10 and Maximum Number: 25,"import random

min_num = 10
max_num = 25
 
# Generate a random number
rand_num = random.randint(min_num, max_num)
 
# Print the random number
print(rand_num)","import random

min_num = 10
max_num = 25
 
# Generate a random number
rand_num = random.randint(min_num, max_num)
 
# Print the random number
print(rand_num)",Syntax Error,File I/O
Create a function in Python to print all the prime numbers in an array.,"array = [2, 4, 6, 7, 11, 15]","def print_primes(arr):
    for i in arr:
        if i > 1:
            for j in range(2,i):
                if (i % j) == 0:
                    break
            else:
                print(i)

print_primes(array)","def print_primes(arr):
    for i in arr:
        if i > 1:
            for j in range(2,i):
                if (i % j) == 0:
                    break
            else:
                print(i)

print_primes(array)",correct,File I/O
Generate a program in Python to classify 3-dimensional data points according to their classes,,"def classify_points(points):
    classes = []
    for point in points:
        if point[0] < 0 and point[1] < 0 and point[2] < 0:
            classes.append(1)
        elif point[0] > 0 and point[1] > 0 and point[2] > 0:
            classes.append(2)
        else:
            classes.append(3)
    return classes","def classify_points(points):
    classes = []
    for point in points:
        if point[0] < 0 and point[1] < 0 and point[2] < 0:
            classes.append(1)
        elif point[0] > 0 and point[1] > 0 and point[2] > 0:
            classes.append(2)
        else:
            classes.append(3)
    return classes",correct,File I/O
Write a Python program to search for a given element in multiple lists,"my_list1 = [2, 3, 4, 5]
my_list2 = [7, 9, 5]
elem = 5","def search_elem(my_list1, my_list2, elem):
    for list in [my_list1, my_list2]:
        found = False
        for val in list:
            if val == elem:
                found = True
                break
        if found:
            return True
    return False

found = search_elem(my_list1, my_list2, elem)
print(found)","def search_elem(my_list1, my_list2, elem):
for list in [my_list1, my_list2]:
    found = False
    for val in list:
        if val == elem:
            found = True
            break
    if found:
        return True
return False

found = search_elem(my_list1, my_list2, elem)
print(found)",Syntax Error,File I/O
Create a script in Python for finding the maximum and minimum value of an array.,"Array: [1, -5, 10, 25, 6]","def max_min(arr):
  max = arr[0]
  min = arr[0]
  
  for i in range(1, len(arr)):
    if arr[i] > max:
      max = arr[i]
    if arr[i] < min:
      min = arr[i]
  
  return max, min

max, min = max_min(arr)","def max_min(arr):
  max = arr[0]
  min = arr[0]
  
  for i in range(1, len(arr)):
    if arr[i] > max:
      max = arr[i]
    if arr[i] < min:
      min = arr[i]
  
  return max, min

max, min = max_min(arr)",correct,OOP
Using Python create a web scraper to retrieve the text in a specific HTML element.,,"import requests
from bs4 import BeautifulSoup

response = requests.get('http://example.com/')
html = response.content
soup = BeautifulSoup(html, 'html.parser')

text_in_element = soup.find('div', {'class': 'my-class'}).get_text()
print(text_in_element)","import requests
from bs4 import BeautifulSoup

response = requests.get('http://example.com/')
html = response.content
soup = BeautifulSoup(html, 'html.parser')

text_in_element = soup.find('div', {'class': 'my-class'}).get_text()
print(text_in_element)",correct,Loops
Design a Python program to determine if one string is a substring of another.,"""Hello"", ""Hello World""","def isSubstring(str1, str2):
    if len(str1) > len(str2):
        return False

    for i in range(len(str2)):
        if (str2[i: i+len(str1)] == str1):
            return True

    return False

str1 = ""Hello""
str2 = ""Hello World""

print(isSubstring(str1, str2))","def isSubstring(str1, str2):
    if len(str1) > len(str2):
        return False

    for i in range(len(str2)):
        if (str2[i: i+len(str1)] == str1):
            return True

    return False

str1 = ""Hello""
str2 = ""Hello World""

print(isSubstring(str1, str2))",correct,OOP
Create a sorting algorithm that sorts a list of strings alphabetically in Python.,"[""list"", ""of"", ""unsorted"", ""strings""]","def sortAlphabetically(stringList):
  sortedList = sorted(stringList)
  return sortedList

unsortedList = [""list"", ""of"", ""unsorted"", ""strings""]
sortedList = sortAlphabetically(unsortedList)

print(sortedList)","def sortAlphabetically(stringList):
  sortedList = sorted(stringList)
  return sortedList

unsortedList = [""list"", ""of"", ""unsorted"", ""strings""]
sortedList = sortAlphabetically(unsortedList)

pritn(sortedList)",Syntax Error,Loops
Build a Python program that will receive a list of integers as an input and output the lowest common multiple (LCM) of these numbers.,"array = [2,4,6]","# Function to calculate LCM 
def lcm(l):
    ans = l[0]
    for i in l[1:]:
          ans = (ans*i)//gcd(ans, i)
    return ans;
  
# Driver program to test above function 
array = [2,4,6] 
print(""The LCM of"", array,""is"", lcm(array))","# Function to calculate LCM 
def lcm(l):
    ans = l[0]
    for i in l[1:]:
          ans = (ans*i)//gcd(ans, i)
    return ans;
  
# Driver program to test above function 
array = [2,4,6] 
pritn(""The LCM of"", array,""is"", lcm(array))",Syntax Error,String Manipulation
Write a class to represent a hotel in Python.,,"class Hotel:

    def __init__(self, name, stars, rooms):
        self.name = name
        self.stars = stars
        self.rooms = rooms

    def num_rooms(self):
        return self.rooms

    def rating(self):
        return self.stars","class Hotel:

    def __init__(self, name, stars, rooms:
        self.name = name
        self.stars = stars
        self.rooms = rooms

    def num_rooms(self:
        return self.rooms

    def rating(self:
        return self.stars",Syntax Error,Recursion
Develop a python program to quantify the number of appearances of each character in a given string.,,"def char_count(str1):
    dict = {} 
    for n in str1: 
        keys = dict.keys() 
        if n in keys: 
            dict[n] += 1
        else: 
            dict[n] = 1 
    return dict","def char_count(str1):
    dict = {} 
    for n in str1: 
        keys = dict.keys() 
        if n in keys: 
            dict[n] += 1
        else: 
            dict[n] = 1 
    return dict",correct,String Manipulation
Create a Python program for encrypting a given string using the XOR technique.,"String: ""Hello world!""","def xor_crypt_string(data, key='my_secret_key'):
    l = len(key)
    return bytearray((
        (data[i] ^ ord(key[i % l])) for i in range(0,len(data))
    ))

encrypted_data = xor_crypt_string(bytearray('Hello world!', 'utf-8'))

print(encrypted_data)","def xor_crypt_string(data, key='my_secret_key'):
    l = len(key)
    return bytearray((
        (data[i] ^ ord(key[i % l])) f",Incomplete Answer,Recursion
Develop a web crawler in Python that is able to scrape through different webpages.,,"from bs4 import BeautifulSoup 
import requests

def crawler(url): 
    source_code = requests.get(url).text 
    soup = BeautifulSoup(source_code, 'html.parser') 
    for link in soup.find_all('a'): 
        href = link.get('href') 
        print(href)
        crawler(href)","from bs4 import BeautifulSoup 
import requests

def crawler(url): 
    source_code = requests.get(url).text 
    soup = BeautifulSoup(sou",Incomplete Answer,Loops
Write a function to check if all the elements in tuple have same data type or not.,,"def check_type(test_tuple):
  res = True
  for ele in test_tuple:
    if not isinstance(ele, type(test_tuple[0])):
      res = False
      break
  return (res) ","def check_type(test_tuple):
  res = True
  for ele in test_tuple:
    if not isinstance(ele, type(test_tuple[0])):
      res = False
      break
  return (res) ",correct,Loops
Write a Python program for checking if a number is within a given range.,,"def is_in_range(n, lower, upper):
    return True if lower <= n & n <= upper else False

is_in_range(3, 1, 10)
# Output: True","def is_in_range(n, lower, upper):
    return True if lower <= ",Incomplete Answer,Loops
Develop a python program that applies the following operation to a given list,Provide each element in the list with its index,"def enumerate_list(lst):
    output = []
    for i in range(len(lst)):
        output.append((i, lst[i]))
    return output","def enumerate_list(lst):
    output = []
    for i in range(l",Incomplete Answer,OOP
Write a Python program to sort a list of strings by the length of each string.,,"def sort_by_length(strings):
  return sorted(strings, key=len)","def sort_by_length(strings):
  ",Incomplete Answer,Loops
Create a Python program to find and remove the longest string from a given list of strings.,"list_strings = [""string1"", ""string2"", ""string3"", ""longeststring""]","def remove_longest_string(list_strings):
    longest_string = """"
    for string in list_strings:
        if len(string) > len(longest_string):
            longest_string = string
    list_strings.remove(longest_string)
    return list_strings

print(remove_longest_string(list_strings))","def remove_longest_string(list_strings):
    longest_string = """"
    for string in list_strings:
        if len(string) > len(longest_string):
            longest_string = string
    list_strings.remove(longest_string)
    return list_strings

print(remove_longest_string(list_strings))",correct,OOP
Create a python program for identifying if a given number is prime or not.,Use number 10 as an example.,"def is_prime(num): 
    if num < 2: 
        return False
  
    for i in range(2, num): 
        if num % i == 0: 
            return False
  
    return True
  
# Example 
number = 10
  
if is_prime(number): 
    print(number, ""is a prime number"") 
else: 
    print(number, ""is not a prime number"")","def is_prime(num): 
    if num < 2: 
        return False
  
    for i in range(2, num): 
        if num % i == 0: 
            return False
  
    return True
  
# Example 
number = 10
  
if is_prime(number): 
    print(number, ""is a prime number"") 
else: 
    print(number, ""is not a prime number"")",correct,File I/O
Design an algorithm in Python that takes two integers as an input and returns the maximum of the two.,"x = 3 
y = 6","def max_of_two(x, y): 
    if x > y: 
        return x 
    else: 
        return y 
  
print(max_of_two(3,6))","def max_of_two(x, y): 
    if x > y: 
        return x 
    else: 
        return y 
  
print(name, max_of_two(3,6))",Syntax Error,Recursion
Design a Python program that generates a 10 x 10 multiplication table.,,"for i in range(1, 11):
  for j in range(1, 11):
    print(f""{i} x {j} = {i * j}"")
  print()","for i in range(1, 11):
  for j in range(1, 11):
    print(f""{i} x {j} = {i * j}"")
  print()",correct,File I/O
Write a command-line program in Python to accept user input and display the sum of all numbers entered.,,"import sys 

total = 0
for num in sys.argv[1:]:
 total += int(num)

print('The sum of all numbers entered is:', total)","import sys 

total = 0
for num in sys.argv[1]
 total += int(num)

print('The sum of all numbers entered is', total)",Syntax Error,File I/O
Generate a python program to sort a collection of data given in the form of a 2-dimensional array.,"[[1, 2],[2, 6], [3, 4], [4, 5]]","def sortArray(arr): 
  arr.sort(key = lambda x: x[1]) 
  return arr 
  
# Driver Code 
arr = [[1, 2],[2, 6], [3, 4], [4, 5]] 

print (sortArray(arr))","def sortArray(arr): 
  arr.sort(key = lambda x: x[1]) 
  return arr 
  
# ",Incomplete Answer,Loops
"In Python, create a method to generate a random string.",,"import random
import string

def generateRandomString(length):
    chars = string.ascii_letters + string.digits
    randStr = """".join(random.choice(chars) for i in range(length))
    return randStr

print(generateRandomString(8))","import random
import string

def generateRandomString(length)
    chars = string.ascii_letters + string.digits
    randStr = """".join(random.choice(chars) for i in range(length))
    return randStr

print(generateRandomString(8))",Syntax Error,File I/O
Write a Python program that stores the months of the year in a dictionary.,,"months_dict = {
    'January': 1,
    'February': 2,
    'March': 3,
    'April': 4,
    'May': 5,
    'June': 6,
    'July': 7,
    'August': 8,
    'September': 9,
    'October': 10,
    'November': 11,
    'December': 12
}","months_dict = {
    'January': 1,
    'February': 2,
    'March': 3,
    'April': 4,
    'May': 5,
    'June': 6,
    'July': 7,
    'August': 8,
    'September': 9,
    'October': 10,
    'November': 11,
    'December': 12
}",correct,Loops
Generate a python statement to print a descriptive message about a given string.,"string = ""Hello World!""","print(f""Given string is {string}, and its length is {len(string)}"")","print(f""Given string is {string}, and its length is {len(string)}"")",correct,String Manipulation
Build a python program to randomly generate an even integer between 0 and 10,,"import random

def generateEven():
    even_int = random.randint(0,10)
    if(even_int % 2 == 0):
        return even_int
    else:
        return generateEven()

print(generateEven())","import random

def generateEven():
    even_int = random.randint(0,10)
    if(even_int % 2 =",Incomplete Answer,Loops
Write a Python program to print the number of permutations of length n where each element can take a value between 0 and (n-1).,n = 4,"def countPermutations(n):
 # if n is 0 or 1, return 1 as there is 1 permutation
 if n <= 1:
 return 1
 
 # recursive calculation
 result = n * countPermutations(n - 1)
 
 return result

countPermutations(4) # returns 24","def countPermutations(n):
 # if n is 0 or 1, return 1 as there is 1 permutation
 if n <= 1:
 return 1
 
 # re",Incomplete Answer,Loops
Generate a python function to count the number of unique elements in a list,"[10, 12, 10, 4, 10, 6, 4]","def uniqueCount(mylist): 
    unique = []
    for x in mylist: 
        if x not in unique: 
            unique.append(x)
    return len(unique)
  
mylist = [10, 12, 10, 4, 10, 6, 4]
print(uniqueCount(mylist))","def uniqueCount(mylist): 
    unique = []
    for x in mylist: 
        if x not in unique: 
            unique.append(x)
    return len(unique)
  
mylist = [10, 12, 10, 4, 10, 6, 4]
print(uniqueCount(mylist))",correct,OOP
Construct a for loop in Python to iterate over a list and print out each item in the list.,"myList = [1, 2, 3, 4]","for element in myList: 
 print(element)","for element in myList 
 print(element)",Syntax Error,Recursion
Generate a Python program that multiplies two matrices,"A = [[1, 2],
     [3, 4]]
B = [[1, 2],
     [2, 3]]","def multiply_matrix(A, B):
    n = len(A)
    C = [[0] * n for _ in range(n)]
 
    for i in range(n):
        for j in range(n):
            for k in range(n):
                C[i][j] += A[i][k] * B[k][j]
    return C
 
A = [[1, 2],
     [3, 4]]
B = [[1, 2],
     [2, 3]]
 
print(multiply_matrix(A,B))","def multiply_matrix(A, B):
    n = len(A)
    C = [[0] * n for _ in range(n)]
 
    for i in range(n):
        for j in range(n):
            for k in range(n):
                C[i][j] += A[i][k] * B[k][j]
    return C
 
A = [[1, 2],
     [3, 4]]
B = [[1, 2],
     [2, 3]]
 
print(name, multiply_matrix(A,B))",Syntax Error,File I/O
Write a Python program to find the maximum sum of a contiguous subarray in a given array of integers.,"[-2,1,-3,4,-1,2,1,-5,4].","def max_sum_contiguous_subarray(arr):
    max_sum = 0
    curr_sum = 0
 
    for i in range(len(arr)):
        curr_sum = max(curr_sum + arr[i], arr[i])
        max_sum = max(max_sum, curr_sum)
 
    return max_sum","def max_sum_contiguous_subarray(arr):
    max_sum = 0
    curr_sum = 0
 
    for i in range(len(arr)):
        curr_sum = max(curr_sum + arr[i], arr[i])
        max_sum = max(max_sum, curr_sum)
 
    return max_sum",correct,File I/O
Generate a python function,To calculate the greatest common divisor of two integers.,"def gcd(a, b): 
    if a == 0 : 
        return b 
    return gcd(b % a, a)","def gcd(a, b): 
    if a == 0 : 
        return b 
    return gcd(b % a, a)",correct,OOP
Suggest an improvement for the following python code for finding the sum of elements of a list,"def sum_elements(arr):
    sum_value = 0
    for num in arr:
        sum_value += num
    return sum_value","def sum_elements(arr):
    return sum(arr) # return sum of elements of arr with one line of code.","def sum_elements(arr):
    return sum(arr) # return sum of elements of arr with one line of code.",correct,OOP
Write a code to generate a random string of length 5 using Python.,,"import random

def generate_rand_string(num_chars):
    """"""Generates a random string of a given length using ASCII characters""""""
    char_list = []
    for i in range(num_chars):
        char_list.append(chr(random.randrange(32,127)))
    return """".join(char_list)

if __name__ == ""__main__"":
    rand_str = generate_rand_string(5)
    print(rand_str)","import random

def generate_rand_string(num_chars):
    """"""Generates a random string of a given length using ASCII characters""""""
    char_list = []
    for i in range(num_char",Incomplete Answer,OOP
Generate a Python program that prints out the highest prime factor for each integer between 1 and 10.,,"def prime_factor(n):
 i = 2
 while i * i <= n:
 if n % i:
 i += 1
 else:
 n //= i
 return n

for num in range(1, 11):
 factor = prime_factor(num)
 print(f""The highest prime factor of {num} is {factor}"")","def prime_factor(n):
 i = 2
 while i * i <= n:
 if n % i:
 i += 1
 else:
 n //= i
 return n

for num ",Incomplete Answer,Recursion
Write a Python program to search a given string for the first occurrence of a given substring.,"string = ""The quick brown fox"", substring = ""fox""","string = ""The quick brown fox""
substring = ""fox""

def find_substring(string, substring):
    index = string.find(substring)
    if index == -1:
        print(""Substring not found!"")
    else:
        print(""Substring found at index:"", index)

find_substring(string, substring)","string = ""The quick brown fox""
substring = ""fox""

def find_substring(string, substring):
    index = string.find(substring)
    if index =",Incomplete Answer,File I/O
"Write Python code to implement this logic: if the number is even, then double the value; otherwise, subtract 1 from the value.",,"def modify_number(number):
   if number % 2 == 0:
       return number * 2
   else:
       return number - 1","def modify_number(number):
   if number % 2 == 0:
       return number * 2
   else:
       return number - 1",Syntax Error,String Manipulation
Create an HTTP server in Python that responds to `GET` requests with a ‘Hello World’ message.,,"from http.server import HTTPServer, BaseHTTPRequestHandler

class HelloWorldHandler(BaseHTTPRequestHandler):
 def do_GET(self):
 self.send_response(200)
 self.end_headers()
 self.wfile.write(b'Hello World!')

server = HTTPServer(('', 8080), HelloWorldHandler)
server.serve_forever()","from http.server import HTTPServer, BaseHTTPRequestHandler

class HelloWorldHandler(BaseHTTPRequestHandler):
 def do_GET(self):
 self.send_re",Incomplete Answer,File I/O
Write a Python script to scrape website text content,,"import requests
from bs4 import BeautifulSoup

url = ""example.com""

response = requests.get(url)
html_response = response.content

soup = BeautifulSoup(html_response, ""html.parser"")
text_content = soup.find_all(""p"")

for text in text_content:
    print(text.text)","import requests
from bs4 import BeautifulSoup

url = ""example.com""

response = requests.get(url)
html_response = response.content

soup = BeautifulSoup(html_response, ""html.parser"")
text_content = soup.find_all(""p"")

for text in text_content:
print(text.text)",Syntax Error,String Manipulation
"Create a Python function that takes two lists, compare them, and return True if both lists are identical and False if they differ.","list1 = [1, 2, 3]
list2 = [1, 2, 3]","def compare_lists(list1, list2):
    if len(list1) != len(list2):
        return False

    for i in range(len(list1)):
        if list1[i] != list2[i]:
            return False

    return True","def compare_lists(list1, list2):
    if len(list1) != len(list2):
        return False

    for i in range(len(list1)):
        if list1[i] != list2[i]:
            return False

    return True",correct,Recursion
Write a Python function to find the maximum and minimum numbers from a given list.,,"def minMax(numbers):
    max_num = numbers[0]
    min_num = numbers[0]
   
    for num in numbers:
        if num > max_num: 
            max_num = num
        elif num < min_num:
            min_num = num
   
    return (min_num, max_num)","def minMax(numbers):
    max_num = numbers[0]
    min_num = numbers[0]
   
    for num in numbers:
        if num > max_num: 
            max_num = num
        elif num < min_num:
            min_num = num
   
    return (min_num, max_num)",correct,OOP
"Create a Python program to generate a random password of 8 characters. The output should include random lowercase letters, uppercase letters, and numbers.",,"import random

def generate_password():
    password_length = 8
    chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    password = ''.join(random.choice(chars) for i in range(password_length))
 
    return password

password = generate_password()
print(password)","import random

def generate_password():
    password_length = 8
    chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
  ",Incomplete Answer,OOP
Create a Python program to calculate the total price of a purchase including sales tax.,"tax rate: 8%
quantity: 2
price: 10","# Defining Variables
tax_rate = 0.08
quantity = 2
price = 10

# Calculating the Total Price
total_price = (price * quantity) + (tax_rate * price * quantity)

# Printing Out the Result
print(""Total Price:"", total_price)","# Defining Variables
tax_rate = 0.08
quantity = 2
price = 10

# Calculating the Total Price
total_price = (price * quantity) + (tax_rate * price * quantity)

# Printing Out the Result
print(""Total Price:"", total_price)",correct,OOP
Create a Python program to find the area of a triangle given 3 sides,,"def findArea(a,b,c):
    #calculate the semiperimeter 
    s = (a + b + c) / 2.0
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
    return area","def findArea(a,b,c):
    #calculate the semiperimeter 
    s = (a + b + c) / 2.0
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
    return area",Syntax Error,File I/O
"Design a class in Python that contains the following functions: set_name, set_age, get_name and get_age.",,"class Person():
    def __init__(self):
        self.name = None
        self.age = None
    
    def set_name(self, name):
        self.name = name
    
    def set_age(self, age):
        self.age = age
    
    def get_name(self):
        return self.name
    
    def get_age(self):
        return self.age","class Person():
    def __init__(self):
        self.name = None
        self.age = None
    
    def set_name(self, name):
        self.name = name
    
 ",Incomplete Answer,OOP
Create a Python script for fetching Hacker News articles and printing the title of each article.,,"import requests
import json

response = requests.get('https://hacker-news.firebaseio.com/v0/topstories.json')
top_stories = json.loads(response.content)

for story_id in top_stories:
 response = requests.get(f'https://hacker-news.firebaseio.com/v0/item/{story_id}.json')
 story_info = json.loads(response.content)
 print(story_info['title'])","import requests
import json

response = requests.get('https://hacker-news.firebaseio.com/v0/topstories.json')
top_stories = json.loads(response.content)

for story_id in ",Incomplete Answer,String Manipulation
Edit the following code in Python and make it shorter.,"def add(x, y):
    z = x + y
    return z

sum = add(10, 20)
print(sum)","def add(x, y):
    return x + y

sum = add(10, 20)
print(sum)","def add(x, y):
    return x + y

sum = add(10, 20)
print(sum)",correct,String Manipulation
Create a class in Python that simulates a student's grades in a course.,,"class Student:
    def __init__(self, course_name, grades):
        self.course_name = course_name
        self.grades = grades
        
    def get_grade(self):
        return sum(self.grades) / len(self.grades)","class Student:
    def __init__(self, course_name, grades):
        self.course_name = course_name
        self.grades = grades
        
    def get_grade(self):
        return sum(self.grades) / len(self.grades)",Syntax Error,Recursion
Create a Python script to count the frequencies of each letter in a given string.,"text = ""Hello, World!""","def count_letter_frequency(text): 
    frequency = {} 
    for letter in text: 
        if letter in frequency: 
            frequency[letter] += 1
        else: 
            frequency[letter] = 1
    return frequency 
  
text = ""Hello, World!""
print(count_letter_frequency(text))","def count_letter_frequency(text: 
    frequency = {} 
    for letter in text: 
        if letter in frequency: 
            frequency[letter] += 1
        else: 
            frequency[letter] = 1
    return frequency 
  
text = ""Hello, World!""
print(count_letter_frequency(text",Syntax Error,Recursion
Make a Python program generating numbers,,"def generate_numbers():
    numbers = []
    for i in range(10):
        numbers.append(random.randint(0,10))
    return numbers","def generate_numbers():
    numbers = []
    for i in range(10):
        numbers.append(random.randint(0,10))
    return numbers",correct,Loops
"Try to come up with a classifier, in Python, that differentiates between questions and statements.",,"import string

def is_question(text):
    if text.endswith(""?""):
        return True
    elif text.startswith(tuple(string.punctuation)):
        return False
    else:
        words = text.strip().split()
        if any(word.endswith(""?"") for word in words):
            return True
        return False","import string

def is_question(text):
    if text.endswith(""?""):
        return True
    elif text.startswith(tuple(string.punctuation)):
        return",Incomplete Answer,File I/O
Write a Python script to generate 10 random numbers between 1 and 15.,,"import random

for i in range(10):
  print(random.randint(1, 15))","import random

for i in range(10):
  print(random.randint(1, 15))",correct,File I/O
Write a Python script to flatten a nested dictionary.,,"def flatten_dictionary(d):
 result = {}
 
 def traverse(k, v):
  if isinstance(v, dict):
   for k1, v1 in v.items():
    traverse(k+"".""+k1, v1)
  else:
   result[k] = v
 
 traverse("""", d)
 
 return result","def flatten_dictionary(d):
 result = {}
 
 def traverse(k, v):
  if isinstance(v, dict):
   for k1, v1 in v.items():
    traverse(k+"".""+k1, v1)
  else:
   result[k] = v
 
 traverse("""", d)
 
 return result",Syntax Error,File I/O
Create a function using Python that parses a given string and returns a dictionary containing each word in the string as key and its frequency as value.,"string = ""This is a random sentence.""","def parseString(string):
    freqDict = dict()
    stringWords = string.split("" "") 
    for word in stringWords:
        if word in freqDict:
            freqDict[word] += 1
        else:
            freqDict[word] = 1
    return freqDict","def parseString(string):
    freqDict = dict()
    stringWords = string.split("" "") 
    for word in stringWords:
        if word in freqDict:
            freqDict[word] += 1
        else:
            freqDict[word] = 1
    return freqDict",correct,OOP
Create a class in Python to simplify working with temperatures in different units.,,"class Temperature:
    def __init__(self, value, unit):
        self.value = value
        self.unit = unit


    def convert_to_celsius(self):
        if self.unit == 'C':
            return self.value
        elif self.unit == 'F':
            return (self.value - 32) * 5/9
        elif self.unit == 'K':
            return self.value - 273.15
        else:
            return None","class Temperature:
    def __init__(self, value, unit):
        self.value = value
        self.unit = unit


    def convert_to_celsius(self):
        if self.unit == 'C':
            return ",Incomplete Answer,File I/O
Generate a program in Python that takes a given list as input and reverses it,"my_list = [3, 7, 2, 4]","def reverse_list(my_list):
    rev_list = []
    for val in reversed(my_list):
        rev_list.append(val)
    return rev_list

reversed_list = reverse_list(my_list)
print(reversed_list)","def reverse_list(my_list):
rev_list = []
for val in reversed(my_list):
    rev_list.append(val)
return rev_list

reversed_list = reverse_list(my_list)
print(reversed_list)",Syntax Error,OOP
Write a subroutine to find the length of a string in Python.,,"def find_string_length(string):
    length = 0
    for c in string:
        length += 1
    return length

# example
str = ""Hello world!""
print(find_string_length(str))","def find_string_length(string):
    length = 0
    for c in string:
        length += 1
    return length

# example
str = ""Hello world!""
print(find_string_length(str))",correct,File I/O
Translate a given python program into a mips assembly instruction.,"x = 0
y = 0
z = x + y","#Load x into register 1
	li $t0, 0
	#Load y into register 2
	li $t1, 0
	#Add x and y, store result in register 3
	add $t2, $t0, $t1
	#Store the result in z
	sw $t2, z($0)","#Load x into register 1
	li $t0, 0
	#Load y into register 2
	li $t1, 0
	#Add x and y, store result in register 3
	add $t2, $t0, $t1
	#Store the result in z
	sw $t2, z($0)",Syntax Error,Recursion
Write a Python program to check whether a number is in a given range,,"def is_in_range(n, lower, upper):
    return lower <= n <= upper","def is_in_range(n, lower, upper):
    return lower <= n <= upper",correct,String Manipulation
"Construct a Python program to convert a list of strings to a single string, and separate the string elements with a ',' character.","list = [""test"", ""string""]","def list_to_string(list): 
    return "","".join(list) 
  
list = [""test"",""string""]
print(list_to_string(list))","def list_to_string(list): 
    return "","".join(list) 
",Incomplete Answer,Loops
Edit this python code to remove all even numbers from a given list.,"my_list = [1,2,3,4,5,6,7,8,9,10]","""""""
Edit this python code to remove all even numbers from a given list.
""""""

my_list = [1,2,3,4,5,6,7,8,9,10]

# Use a list comprehension to remove even numbers
my_list = [i for i in my_list if i % 2 != 0]
 
print(my_list) # [1, 3, 5, 7, 9]","""""""
Edit this python code to remove all even numbers from a given list.
""""""

my_list = [1,2,3,4,5,6,7,8,9,10]

# Use a list comprehension to remove even numbers
my_list = [i for i in my_list if i % 2 != 0]
 
print(name, my_list) # [1, 3, 5, 7, 9]",Syntax Error,String Manipulation
Write a Python program to generate a list that contains the first 10 fibonacci numbers.,,"# Initialize a list
fibonacci_numbers = [1, 1]

# Generate the first 10 fibonacci numbers
for i in range(2, 10):
    fibonacci_numbers.append(fibonacci_numbers[i - 1] + fibonacci_numbers[i - 2])

print(fibonacci_numbers)","# Initialize a list
fibonacci_numbers = [1, 1]

# Generate the first 10 fibonacci numbers
for i in range(2, 10",Incomplete Answer,Recursion
Suggest a solution in Python to convert a sentence into a list of individual words.,"""This is a test sentence.""","def sentence_to_words(sentence):
    words = sentence.split()
    return words 

result = sentence_to_words(""This is a test sentence."")
print(result)","def sentence_to_words(sentence):
    words = sentence.split()
    return words 

result = sentence_to_words(""This is a test sentence."")
print(result)",correct,String Manipulation
Create a program in Python that uses a for loop to output the division of two numbers.,"Number 1: 5 
Number 2: 3","for i in range(2):
    print(5/3)","for i in range(2):
    print(5/3)",correct,OOP
Write a Python script to determine whether a given number is even or odd without using modulo operator.,,"def isOdd(number): 
  
    if number % 2 == 0: 
        return False
    else: 
        return True","def isOdd(number: 
  
    if number % 2 == 0: 
        return False
    else: 
        return True",Syntax Error,OOP
Write a function in Python that takes an integer as an argument and returns the first 5 numbers in the Fibonacci sequence starting from the given integer.,An integer - 15,"def fibonacci(n):
  a = 0
  b = 1

  fib = [a]

  for i in range(1, n):
    c = a + b
    a = b
    b = c
    fib.append(a)

  return fib[:5]  # Return the first 5 numbers in the sequence

print(fibonacci(15)) # [0,1,1,2,3]","def fibonacci(n):
  a = 0
  b = 1

  fib = [a]

  for i in range(1, n):
    c = a + b
    a = b
    b = c
    fib.append(a)

  return fib[:5]  # Return the first 5 numbers in the sequence

pritn(fibonacci(15)) # [0,1,1,2,3]",Syntax Error,Loops
Implement a basic algorithm in Python for encrypting a string.,,"def encrypt(message): 
 encrypted_message = """" 
 for character in message: 
 # increment the character number to get its encrypted form 
 encrypted_message += chr(ord(character) + 2) 
 return encrypted_message 
 
if __name__ == ""__main__"": 
 message = ""Hello World"" 
 encrypted_message = encrypt(message) 
 print(encrypted_message) 
 
 output:
 Jgnnq Yqtnf","def encrypt(message): 
 encrypted_message = """" 
 for character in message: 
 # increment the character number to get its encrypted form 
 encrypted_message += chr(ord(character) ",Incomplete Answer,OOP
Generate a Python class to efficiently store two variables in one object.,,"class TwoVariables:
 def __init__(self, a, b):
 self.a = a
 self.b = b
 
 def get_values(self):
 return (self.a, self.b)","class TwoVariables:
 def __init__(self, a, b):
 self.a = a
 self.b = b
 
 def get_values(self):
 return (self.a, self.b)",correct,File I/O
Generate a Python function to determine whether a given string is a palindrome.,,"def is_palindrome(string): 
    left, right = 0, len(string) - 1
 
    while right >= left: 
        if not string[left] == string[right]: 
            return False
        left += 1
        right -= 1
    return True","def is_palindrome(string): 
    left, right = 0, len(string) - 1
 
    while right >= left: 
        if not ",Incomplete Answer,String Manipulation
Write a Python program that checks for a palindrome.,,"def is_palindrome(s):
    s = s.lower().replace("" "", """")
    l = len(s)
    for i in range(l // 2):
        if s[i] != s[l-1-i]:
            return False
    return True","def is_palindrome(s):
    s = s.lower().replace("" "", """")
    l = len(s)
    for i in",Incomplete Answer,Loops
Write a Python function to generate a matrix filled with random numbers.,,"def random_matrix(m, n):
    mat = [[random.randint(0, 100) for j in range(n)] for i in range(m)]
    return mat","def random_matrix(m, n):
    mat = [[random.randint(0, 100) for j in range(n)] for i in range(m)]
    return mat",correct,Recursion
Design an efficient algorithm in Python for sorting a list of numbers.,"[3, 5, 7, 4, 2, 1]","def quicksort(arr):
    if len(arr) <= 1:
        return arr
 
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)","def quicksort(arr):
if len(arr) <= 1:
    return arr
 
pivot = arr[len(arr) // 2]
left = [x for x in arr if x < pivot]
middle = [x for x in arr if x == pivot]
right = [x for x in arr if x > pivot]
return quicksort(left) + middle + quicksort(right)",Syntax Error,OOP
Generate an html page which will accept the user input and send it to a python script.,No input,"<!DOCTYPE html>
<html>
<head>
    <title>Input Page</title>
</head>
<body>
    <h1>Input Page</h1>
    <form action=""script.py"" method=""POST"">
      <label>Enter your input: <input type=""text"" name=""user_input"" size=""50""></label>
      <input type=""submit"" text=""Submit"">
    </form>
</body>
</html>","<!DOCTYPE html>
<html>
<head>
    <title>Input Page</title>
</head>
<body>
    <h1>Input Page</h1>
    <form action=""script.py"" method=""POST"">
      ",Incomplete Answer,String Manipulation
Write a python program to classify the given input into two categories,Input: Apple,"def classify(input):
    if input == ""apple"":
        label = ""fruit""
    else:
        label = ""not fruit""
    return label","def classify(input):
    if input == ""apple"":
        label = ""fruit""
    else:
        label = ""not fruit""
    return label",correct,Recursion
Write a python program to retrieve the larger element between two numbers,,"def max(num1, num2):
    if num1 > num2:
        return num1
    else:
        return num2","def max(num1, num2):
    if num1 > num2:
        return num1
    else:
        return num2",Syntax Error,OOP
Generate a Python program that takes a numeric input and reverses it.,42,"def reverse_number(num):
    rev = 0
    while num > 0:
        r = num % 10
        rev = (rev * 10) + r
        num = num // 10
    return rev

input_num = 42
res = reverse_number(input_num)
print(res)","def reverse_number(num):
rev = 0
while num > 0:
    r = num % 10
    rev = (rev * 10) + r
    num = num // 10
return rev

input_num = 42
res = reverse_number(input_num)
print(res)",Syntax Error,OOP
Code a function in Python to find the maximum value in a dictionary.,,"def max_in_dictionary(dic):
    max_value = float('-inf')
    for key,value in dic.items():
        if value > max_value:
            max_value = value
    return max_value","def max_in_dictionary(dic):
    max_value = float('-inf')
    for key,value in dic.items():
        if value > max_value:
            max_value = value
    return max_value",correct,String Manipulation
"Suppose you have to make an API call to a server to fetch information, write a short Python program to do it.",,"import requests

url = ""http://example.com/api/fetch""

response = requests.get(url)
data = response.json()

#Process data","import requests

url = ""http://example.com/api/fetch""

respo",Incomplete Answer,Recursion
Can you design an algorithm in Python that takes a string and returns all its possible permutations?,,"def permutations(string):
  # base case
  if len(string) <= 1:
    return set([string])

  # recursive case
  else:
    perms = permutations(string[1:])
    char = string[0]
    result = set()
    for perm in perms:
      for i in range(len(perm)+1):
        result.add(perm[:i] + char + perm[i:])
    return result

print(permutations(""ABC""))","def permutations(string):
  # base case
  if len(string) <= 1:
    return set([string])

  # recursive case
  else:
    perms = permutations(string[1:])
    char = string[0]
    result = set()
    for perm in perms:
      for i in range(len(perm)+1):
        result.add(perm[:i] + char + perm[i:])
    return result

pritn(permutations(""ABC""))",Syntax Error,Recursion
Create a python program that evaluates whether a given expression is valid or not.,"expression = ""2 * (3 + 4)""","def evaluate_expression(expression):
    """"""
    Evaluates whether a given expression is valid or not.
    :param expression: The expression to evaluate
    :type expression: str
    :return: True if expression is valid, False otherwise
    :rtype: bool
    """"""
    try:
        eval(expression)
        return True
    except:
        return False","def evaluate_expression(expression):
    """"""
    Evaluates whether a given expression is valid or not.
    :param expression: The expression to evaluate
    :type expression:",Incomplete Answer,Loops
"Define a python class to represent an employee with the following attributes: name, age and salary.",,"class Employee:
    def __init__(self, name, age, salary):
        self.name = name
        self.age = age
        self.salary = salary","class Employee:
    def __init__(self, name, age, salary):
        ",Incomplete Answer,File I/O
Write a python program to calculate the median of four numbers,"3, 5, 10, 2","def calculate_median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        mid1 = len(nums) // 2
        mid2 = mid1 - 1
        return (nums[mid1] + nums[mid2]) / 2
    else:
        return nums[len(nums) // 2]

nums = [3, 5, 10, 2]
print(calculate_median(nums))","def calculate_median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        mid1 = len(nums) // 2
        mid2 = mid1 - 1
        return (nums[mid1] + nums[mid2]) / 2
    else:
        return nums[len(nums) // 2]

nums = [3, 5, 10, 2]
print(calculate_median(nums))",correct,Recursion
Write a Python program to find the string which is most frequent among the given list of strings.,"my_list = [""apple"", ""banana"", ""apple"", ""orange""]","def most_frequent(my_list):
    max_count = 0
    frequent_string = """"

    for i in my_list:
        if my_list.count(i) > max_count:
            max_count = my_list.count(i)
            frequent_string = i

    return frequent_string","def most_frequent(my_list):
    max_count = 0
    frequent_string = """"

    for i in my_list:
        if my_list.count(i) > max_count:
            max_count = my_list.count(i)
            frequent_string = i

    return frequent_string",correct,String Manipulation
modify the following Python program such that it returns an error if the input is an empty string.,"def print_string(text):
    print(text)","def print_string(text):
    if len(text) > 0:
        print(text)
    else:
        raise Exception('The input string is empty')","def print_string(text):
    if len(text) > 0:
        print(text",Incomplete Answer,Recursion
Write a Python program to extract the Last Name from a given full name.,"full_name = ""John Snow""","last_name = full_name.split()[1]
print(last_name)","last_name = full_name.split()[1]
pritn(last_name)",Syntax Error,Loops
Write a Python program to reverse a list without using any built-in function.,"[1, 2, 3, 4, 5]","def reverseList(l):
  revList = []
  for i in range(len(l)-1,-1,-1):
    revList.append(l[i])
  return revList

lst = [1, 2, 3, 4, 5]
print(reverseList(lst))","def reverseList(l):
  revList = []
  for i in range(len(l)-1,-1,-1):
    revList.append(l[i])
  return revList

lst = [1, 2, 3, 4, 5]
pritn(reverseList(lst))",Syntax Error,Loops
Create a web service in Python that can generate random numbers.,,"from flask import Flask
import random

# Create a Flask object
app = Flask(__name__)

@app.route(""/random/<int:min>/<int:max>"")
def generate_random_number(min, max):
    # Generate a random number between min and max
    random_number = random.randint(min, max)
    return str(random_number)

if __name__ == ""__main__"":
    app.run()","from flask import Flask
import random

# Create a Flask object
app = Flask(__name__

@app.route(""/random/<int:min>/<int:max>""
def generate_random_number(min, max:
    # Generate a random number between min and max
    random_number = random.randint(min, max
    return str(random_number

if __name__ == ""__main__"":
    app.run(",Syntax Error,Recursion
Write a function in Python to generate an email address with a given name and domain.,"name = 'John Smith'
domain = 'example.com'","def generate_email(name, domain):
    '''Generates an email address using the given name and domain.'''
    name_parts = name.lower().split(' ')
    email_name = '.'.join(name_parts)
    return email_name + '@' + domain","def generate_email(name, domain):
    '''Generates an email address using the given name and domain.'''
    name_parts = name.lower().split(' ')
    email_name = '.'.join(name_parts)
    return email_name + '@' + domain",Syntax Error,Recursion
"Create a python class called ""Laptop"" that initializes with a brand and a model.",,"class Laptop:
    def __init__(self, brand, model):
        self.brand = brand
        self.model = model","class Laptop:
def __init__(self, brand, model):
    self.brand = brand
    self.model = model",Syntax Error,String Manipulation
"Write a Python function to calculate the compound interest given the principal amount, rate, and number of years.","principal = 1000, rate = 0.03, time = 5","def compound_interest(principal, rate, time):
    return principal * (1 + rate)**time

result = compound_interest(1000, 0.03, 5)
print(result)","def compound_interest(principal, rate, time):
    return principal * (1",Incomplete Answer,OOP
Create a python program to find all n digit prime numbers.,,"def get_n_digit_prime_numbers(n):
    prime_numbers = []
    for number in range(10**(n-1), 10**n):
        is_prime = True
        for divisor in range(2, number):
            if number % divisor == 0:
                is_prime = False
                break
        if is_prime:
            prime_numbers.append(number)
    return prime_numbers","def get_n_digit_prime_numbers(n):
    prime_numbers = []
    for number in range(10**(n-1), 10**n):
        is_prime = True
        for divisor in range(2, number):
            if number % divisor == 0:
                is_prime = False
                break
        if is_prime:
            prime_numbers.append(number)
    return prime_numbers",correct,OOP
"Create a class in python that stores the details of a person such as name, age, and address.",,"class Person:
    def __init__(self, name, age, address):
        self.name = name
        self.age = age
        self.address = address","class Person:
    def __init__(self, name, age, address):
        self.name = name
        self.age = age
        self.address = address",correct,OOP
Implement a Python program to check if a number is divisible by another number.,"7, 2","def is_divisible(n, m):
    if (n % m == 0):
        return True
    else:
        return False
    
print(is_divisible(7, 2))  # Outputs False","def is_divisible(n, m):
    if (n % m == 0):
        return True
    el",Incomplete Answer,File I/O
"Given a list of colors [""red"", ""green"", ""blue""], create a Python program to find the longest color name.","[""red"", ""green"", ""blue""]","def longest_color_name(colors): 
 longest_name = 0 
 longest_color = None
 for color in colors: 
  if len(color) > longest_name: 
   longest_name = len(color) 
   longest_color = color
 return longest_color","def longest_color_name(colors): 
 longest_name = 0 
 longest_color = None
 for color in colors: 
  if l",Incomplete Answer,Recursion
Write a Python program to replace all the occurences of a substring in a string with a new substring.,"String: This is a string
Old substring: is
New substring: was","new_string = string.replace('is', 'was')","new_string = string.replace('is', 'was')",Syntax Error,Loops
Write a python function to count the total set bits from 1 to n.,,"def count_Set_Bits(n) :  
    n += 1; 
    powerOf2 = 2;   
    cnt = n // 2;  
    while (powerOf2 <= n) : 
        totalPairs = n // powerOf2;  
        cnt += (totalPairs // 2) * powerOf2;  
        if (totalPairs & 1) : 
            cnt += (n % powerOf2) 
        else : 
            cnt += 0
        powerOf2 <<= 1;    
    return cnt;  ","def count_Set_Bits(n) :  
    n += 1; 
    powerOf2 = 2;   
    cnt = n // 2;  
    while (powerOf2 <= n) : 
        totalPairs = n // powerOf2;  
        cnt += (totalPai",Incomplete Answer,String Manipulation
Design a class in Python that calculates the area of a square.,,"class Square:
    def __init__(self, length):
        self.length = length

    def find_area(self):
        return self.length**2

sqr = Square(4)
print(sqr.find_area())","class Square:
    def __init__(self, length):
        self.length = length

    def find_area(self):
        return self.length**2

sqr = Square(4)
print(sqr.find_area())",correct,String Manipulation
Write a Python program to convert a string in camel case format to snake case format,myNameIsRyan,my_name_is_ryan,my_name_is_ryan,correct,Recursion
Create a function in Python to remove the given element from any list if it is present.,,"def remove_item(lst, item):
    try:
        lst.remove(item)
        return lst

    except ValueError:
        return lst","def remove_item(lst, item):
    try:
        lst.remove(item)
        return lst

    except ValueError:
        return lst",correct,Recursion
Write a Python program to create a list of all the even numbers between two given numbers.,"5, 10","def even_number_list(a, b):
    return list(i for i in range(a, b+1) if i%2 == 0)","def even_number_list(a, b):
    return l",Incomplete Answer,Recursion
Create a Python program that accepts two numbers as an input and prints out the ratio of the two numbers.,"number1 = 13
number2 = 24","def calculateRatio(number1, number2):
    return number1/number2
    
number1 = 13
number2 = 24
ratioOfNumbers = calculateRatio(number1, number2)

print(""The ratio of the two numbers is: "" + str(ratioOfNumbers))","def calculateRatio(number1, number2):
    return number1/number2
    
number1 = 13
number2 = 24
ratioOfNumbers = calculateRatio(number1, number2)

print(name, ""The ratio of the two numbers is: "" + str(ratioOfNumbers))",Syntax Error,String Manipulation
Create a Python class to represent a student's name and GPA.,,"class Student:
    def __init__(self, name, gpa):
        self.name = name
        self.gpa = gpa

    def get_name(self):
        return self.name

    def get_gpa(self):
        return self.gpa","class Student:
    def __init__(self, name, gpa):
        self.name = name
        self.gpa = gpa

    def get_name(self):
        return self.name

    def get_gpa(self):
        return self.gpa",Syntax Error,Recursion
Write a script in Python for shuffling elements in an array.,"arr = [1, 2, 3, 4, 5]","import random

def shuffle(arr):
    random.shuffle(arr)
    return arr","import random

def shuffle(arr):
  ",Incomplete Answer,OOP
"Create a Python class that implements a basic calculator with the operations (+, -, *, /).",,"class Calculator:
    def __init__(self):
        pass

    def add(self, number1, number2):
        return number1 + number2

    def subtract(self, number1, number2):
        return number1 - number2

    def multiply(self, number1, number2):
        return number1 * number2

    def divide(self, number1, number2):
        return number1 / number2","class Calculator:
    def __init__(self:
        pass

    def add(self, number1, number2:
        return number1 + number2

    def subtract(self, number1, number2:
        return number1 - number2

    def multiply(self, number1, number2:
        return number1 * number2

    def divide(self, number1, number2:
        return number1 / number2",Syntax Error,Loops
Generate a program in Python to extract all numbers from a given string,"string = ""The 3 monkeys had 2 apples""","import re

def extract_numbers(string): 
    numbers = re.findall('\d+', string)
    return numbers

string = ""The 3 monkeys had 2 apples""
print(extract_numbers(string))","import re

def extract_numbers(string): 
    numbers = re.findall('\d+', string)
    return numbers

string = ""The 3 monkeys had 2 apples""
print(name, extract_numbers(string))",Syntax Error,Loops
Develop an algorithm using Python to calculate the Euclidean distance between 2 points.,,"def euclidean_distance(point1, point2): 
    sum_squared_distance = 0

    for i in range(len(point1)): 
        sum_squared_distance += (point1[i] - point2[i])**2 
    return sum_squared_distance**0.5","def euclidean_distance(point1, point2): 
    sum_squared_distance = 0

    for i in range(len(point1)): 
        sum_squared_distance += (point1[i] - point2[i])**2 
    return sum_squared_distance**0.5",Syntax Error,OOP
"Write a Python program that takes a sequence of strings, sorts them alphabetically, and prints them to the console.","sequence = [""Hello"", ""world"", ""Welcome"", ""to"", ""the"", ""Coding"", ""Revolution""]","sequence = [""Hello"", ""world"", ""Welcome"", ""to"", ""the"", ""Coding"", ""Revolution""]

sorted_sequence = sorted(sequence)

for word in sorted_sequence:
    print(word)","sequence = [""Hello"", ""world"", ""Welcome"", ""to"", ""the"", ""Coding"", ""Revolution""]

",Incomplete Answer,String Manipulation
Write a python function to find the maximum occurring character in a given string.,,"def get_max_occuring_char(str1):
  ASCII_SIZE = 256
  ctr = [0] * ASCII_SIZE
  max = -1
  ch = ''
  for i in str1:
    ctr[ord(i)]+=1;
  for i in str1:
    if max < ctr[ord(i)]:
      max = ctr[ord(i)]
      ch = i
  return ch","def get_max_occuring_char(str1):
  ASCII_SIZE = 256
  ctr = [0] * ASCII_SIZE
  max = -1
  ch = ''
  for i in str1:
    ctr[ord(i)]+=1;
  for i in str1:
    if max < ctr[ord(i)]:
      max = ctr[ord(i)]
      ch = i
  return ch",correct,String Manipulation
Build a decision tree in Python to identify potential customers.,,"import pandas as pd
from sklearn.tree import DecisionTreeClassifier

# Read in data
data = pd.read_csv('customer_data.csv')

# Create features and target
X = data.drop('is_potential_customer', axis=1)
y = data['is_potential_customer']

# Create the decision tree
model = DecisionTreeClassifier()
model.fit(X, y)","import pandas as pd
from sklearn.tree import DecisionTreeClassifier

# Read in data
data = pd.read_csv('customer_data.csv')

# Create features and target
X",Incomplete Answer,String Manipulation
Develop a Python program for generating a random number between given limits.,,"import random

def random_number(start, end):
  return random.randint(start, end)","import random

def random_number(start, ",Incomplete Answer,File I/O
Write a class in Python to represent a rectangle as an object.,,"class Rectangle:
    def __init__(self, width, height):
        self.width = width
        self.height = height

    def get_area(self):
        return self.width * self.height

    def get_perimeter(self):
        return 2 * (self.width + self.height)","class Rectangle:
    def __init__(self, width, height):
        self.width = width
        self.height = height

    def get_area(self):
        return self.width * self.height

    def get_perimeter(self):
        return 2 * (self.width + self.height)",correct,Loops
Write a Python program to compare two lists and print out the one that is greater in length.,"list1 = [1, 2, 3, 4] 
list2 = [3, 4]","def compare_list_length(list1, list2):
    if len(list1) > len(list2):
        return list1
    else:
        return list2

list1 = [1, 2, 3, 4]
list2 = [3, 4]
longer_list = compare_list_length(list1, list2)
print(longer_list) # Output: [1, 2, 3, 4]","def compare_list_length(list1, list2):
    if len(list1) > len(list2):
        return list1
    else:
        return list2

list1 = [1, 2, 3, 4]
list2 = [3, 4]
longer_list = compare_list_length(list1, list2)
print(name, longer_list) # Output: [1, 2, 3, 4]",Syntax Error,Recursion
"Create a Python script to generate a random password of length 8 with combination of characters, numbers and symbols.",,"import random
import string

# Generate a random string of 8 characters
characters = string.ascii_letters + string.digits + string.punctuation
random_str = ''.join(random.choice(characters) for i in range(8))

# Print the generated random string
print(""Generated random string password is:"", random_str)","import random
import string

# Generate a random string of 8 characters
characters = string.ascii_letters + string.digits + string.punctuation
random_s",Incomplete Answer,OOP
Create a class in Python to represent a rectangle with length and width as instance variables.,,"class Rectangle:
   def __init__(self, length, width):
      self.length = length
      self.width  = width","class Rectangle:
   def __init__(self, length, width)",Incomplete Answer,String Manipulation
Create a basic web scraper written in Python using the requests and BeautifulSoup libraries. This scraper should be able to retrieve all of the links on a given web page.,,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

links = []
for link in soup.find_all('a'):
 links.append(link.get('href'))

print(links)","import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

links = []
for link in soup.find_all('a'):
 links.append(link.get('href'))

print(links)",correct,OOP
Update the python program by including a function that finds the shortest word in a list.,"my_list = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]","def find_shortest(input_list):
    shortest = input_list[0]
    for word in input_list:
        if len(word) < len(shortest):
            shortest = word
    return shortest

shortest_word = find_shortest(my_list)
print(shortest_word)","def find_shortest(input_list):
    shortest = input_list[0]
    for word in input_list:
        if len(word) < len(sh",Incomplete Answer,String Manipulation
Design an algorithm in Python that takes a string as input and returns a compressed version of the string.,aaabbccccca,"def stringCompress(s):
    result = """"
    counter = 1
    for i in range(len(s)-1):
        if s[i] == s[i+1]:
            counter+=1
        else:
            result += s[i] + str(counter)
            counter = 1
        
    result += s[i] + str(counter)
    return result

print(stringCompress('aaabbccccca'))","def stringCompress(s):
    result = """"
    counter = 1
    for i in range(len(s)-1):
        if s[i] == s[i+1]:
            counter+=1
        else:
            result += s[i] + str(counter)
            counter = 1
        
    result += s[i] + str(counter)
    return result

print(name, stringCompress('aaabbccccca'))",Syntax Error,OOP
Create a Python program to generate a series of random numbers based on a user input.,,"import random

def generate_random_series(num):
    """"""Generates and returns a list of random numbers based on a user input.""""""
    # Create an empty list and append to it each time you generate a random number
    random_series = []
    for _ in range(num):
        random_number = random.randint(0, 1000)
        random_series.append(random_number)
        
    return random_series","import random

def generate_random_series(num):
    """"""Generates and returns a list of random numbers based on a user input.""""""
    # Create an empty list and append to it each time you genera",Incomplete Answer,OOP
"Create a DataFrame in Python Pandas using given dates, numbers, and strings.","dates = ['2013-01-01', '2013-01-02', '2013-01-03'] 
numbers = [1, 2, 3] 
strings = ['a', 'b', 'c']","import pandas as pd

# Create the dataframe
df = pd.DataFrame({'date': dates, 'number': numbers, 'string': strings})

df
   date  number string
0  2013-01-01       1      a
1  2013-01-02       2      b
2  2013-01-03       3      c","import pandas as pd

# Create the dataframe
df = pd.DataFrame({'date': dates, 'number': numbers, 'string': strings}",Incomplete Answer,File I/O
Develop a function in Python which takes two inputs and returns the greatest common divisor of those two numbers.,"12, 24","def greatest_common_divisor(a, b):
    if a < b:
        a, b = b, a

    while b > 0:
        a, b = b, a % b

    return a

result = greatest_common_divisor(12, 24)
print(result)","def greatest_common_divisor(a, b):
    if a < b:
        a, b = b, a

    while b > 0:
   ",Incomplete Answer,OOP
Construct a Python program to search all numbers divisible by 5 and 7 between a given range,The range 1000 to 2000,"def find_divisble_numbers(start, end):
    divisible_numbers = []
    for i in range(start, end + 1):
        if i % 5 == 0 and i % 7 == 0:
            divisible_numbers.append(i)
    return divisible_numbers

divisible_numbers = find_divisble_numbers(1000, 2000)
print(divisible_numbers)","def find_divisble_numbers(start, end):
    divisible_numbers = []
    for i in range(start, end + 1):
        if i % 5 == 0 and i % 7 == 0:
    ",Incomplete Answer,File I/O
Write a python program to filter a list of strings and return only those which contain the given substring.,"[""Hello"", ""World"", ""Hey""], Substring: ""or""","def filter_strings(lst, substring):
    filtered_lst = []
    for string in lst:
        if substring in string:
            filtered_lst.append(string)
    return filtered_lst

print(filter_strings([""Hello"", ""World"", ""Hey""], ""or""))","def filter_strings(lst, substring):
    filtered_lst = []
    for string in lst:
        if substring in string:
            filtered_lst.append(string)
    return filtered_lst

print(filter_strings([""Hello"", ""World"", ""Hey""], ""or""))",correct,Recursion
Create a Python class with properties 'name' and 'age' which takes a parameter 'name' and sets it to the name property.,,"class Person:
  def __init__(self, name):
    self.name = name
    self.age = None","class Person:
  def __init__(self, name):
    self.name = name
    self.age = None",correct,OOP
Write a function in Python to compute the accuracy of a classification by comparing the true labels and the predicted labels.,"true_labels = [0, 0, 1, 1] 
predicted_labels = [1, 0, 0, 1]","def compute_accuracy(true, pred):
    correct = 0
    total = len(true)
    for i in range(total):
        if true[i] == pred[i]:
            correct += 1
    return correct/total","def compute_accuracy(true, pred):
    correct = 0
    total = len(true)
    for i in range(total):
        if true[i] == pred[i]:
            correct += 1
    return correct/total",correct,Loops
Optimize a Python program using multiprocessing.,A program to find all prime numbers up to a given number n.,"from multiprocessing import Pool
import math

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

def find_prime_numbers(n):
    primes = []
    with Pool(processes=4) as pool:
        primes = list(pool.map(is_prime, range(2, n)))
    return primes","from multiprocessing import Pool
import math

def is_prime(n):
if n <= 1:
    return False
for i in range(2, int(math.sqrt(n)) + 1):
    if n % i == 0:
        return False
return True

def find_prime_numbers(n):
primes = []
with Pool(processes=4) as pool:
    primes = list(pool.map(is_prime, range(2, n)))
return primes",Syntax Error,String Manipulation
Write a python function to parse a url and extract its params into a dictionary.,,"def parse_url(url): 
    res = dict()
    elems = url.split(""?"")[1].split(""&"")
    for elem in elems: 
        k, v = elem.split(""="")
        res[k] = v
    return res","def parse_url(url): 
    res = dict()
    elems = url.split(""?"")[1].split(""&"")
    for elem in elems: 
        k, v = elem.split(""="")
        res[k] = v
    return res",correct,String Manipulation
Write a Python program to calculate the total cost of buying n items.,"4 items with prices [10, 15, 20, 25]","def calculate_total_cost(item_prices, num_items):
    total_cost = 0
    for i in range(num_items):
        total_cost += item_prices[i]
    return total_cost

if __name__ == '__main__':
    total = calculate_total_cost([10, 15, 20, 25], 4)
    print(""Total cost of buying 4 items:"", total)","def calculate_total_cost(item_prices, num_items):
    total_cost = 0
    for i in range(num_items):
        total_cost += item_prices[i]
    return total_cost

if __name__ == '__main__':
    total = calculate_total_cost([10, 15, 20, 25], 4)
    pritn(""Total cost of buying 4 items:"", total)",Syntax Error,String Manipulation
Create a Python program which takes a list of numbers and a number k and returns whether any two numbers from the list add up to k.,"list: [10,15,3,7]
k: 17","def twoNumberSum(list, k):
  seen = set()
  for num in list:
    if k-num in seen:
      return [num, k-num]
    else:
      seen.add(num)
  return []","def twoNumberSum(list, k):
  seen = set()
  for num in list:
    if k-num i",Incomplete Answer,String Manipulation
Generate a python script to filter the words in a given list of strings.,,"def word_filter(words, filter_list):
    filtered_words = []
    for word in words:
        if word not in filter_list:
            filtered_words.append(word)
    return filtered_words","def word_filter(words, filter_list):
    filtered_words = []
    for word in words:
        if word not in filter_list:
            filtered_words.append(word)
    return filtered_words",correct,OOP
Change the code provided in the input so that it is compatible with Python version 3.,"print ""Hello World""","print(""Hello World"")","print(""Hello World"")",correct,String Manipulation
Write a Python program to find all the unique numbers in a list.,"[1, 2, 1, 3, 4, 5, 5, 1]","def unique_numbers(number_list):
    unique_numbers = []
    for number in number_list:
        if number not in unique_numbers:
            unique_numbers.append(number)
    return unique_numbers

print(unique_numbers([1, 2, 1, 3, 4, 5, 5, 1]))","def unique_numbers(number_list):
unique_numbers = []
for number in number_list:
    if number not in unique_numbers:
        unique_numbers.append(number)
return unique_numbers

print(unique_numbers([1, 2, 1, 3, 4, 5, 5, 1]))",Syntax Error,File I/O
Write a function in Python which will accept two arguments and return the larger of the two.,,"def bigger_number(num1, num2):
  if num1 > num2:
    return num1
  else:
    return num2","def bigger_number(num1, num2):
  if num1 > num2:
    return num1
  else:
    return num2",correct,File I/O
Design an algorithm in Python that can read a list and return the most frequent item.,"[1,2,3,4,4,4,5,5]","def most_frequent(list):
    return max(list, key=list.count)

list = [1,2,3,4,4,4,5,5]
print(most_frequent(list))","def most_frequent(list):
    return max(list, key=list.co",Incomplete Answer,File I/O
Write a Python program to find the closest number to zero from an array.,"[8, 5, -2, 10]","def closest_number(arr):
    min_diff = abs(arr[0])
    for num in arr: 
        if abs(num) < min_diff: 
            min_diff = abs(num) 
  
    return min_diff
  
# Driver Code
arr = [8, 5, -2, 10]
print(closest_number(arr)) # -2","def closest_number(arr):
    min_diff = abs(arr[0])
    for num in arr: 
        if abs(num) < min_diff: 
         ",Incomplete Answer,Loops
Write a python class that implements a linked list data structure.,,"class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None
    
    def insert(self, data):
        node = Node(data)
        if not self.head:
            self.head = node
        else:
            tmp = self.head
            while tmp.next:
                tmp = tmp.next
            tmp.next = node","class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None
    
    def insert(self, data):
        node = Node(data)
        if not self.head:
            self.head = node
        else:
            tmp = self.head
            while tmp.next:
                tmp = tmp.next
            tmp.next = node",correct,Recursion
"Extend the python code below to print ""hello world"" 5 times.","for i in range(3):
    print(""hello"")","for i in range(5):
    print(""hello world"")","for i in range(5):
    pritn(""hello world"")",Syntax Error,Loops
Write a Python program to delete all occurrences of a given number from a list,"lst=[2,2,3,5,7,2,9]","def remove_all(num, lst):
    result = []
    for i in range(len(lst)):
        if lst[i] != num:
            result.append(lst[i])
    return result","def remove_all(num, lst):
result = []
for i in range(len(lst)):
    if lst[i] != num:
        result.append(lst[i])
return result",Syntax Error,Loops
Optimize a Python program for speed. The program should calculate the sum of a list of numbers and return the result.,"list_of_numbers = [2, 4, 6, 8, 10]","def sum_of_numbers(list_of_numbers):
# initialize the result to 0
 result = 0
 
# Iterate over the list of numbers
 for num in list_of_numbers:
 result += num
 
# return the result
 return result
 
# testing the function
list_of_numbers = [2, 4, 6, 8, 10]
print(sum_of_numbers(list_of_numbers))","def sum_of_numbers(list_of_numbers):
# initialize the result to 0
 result = 0
 
# Iterate over the list of numbers
 for num in list_of_numbers:
 re",Incomplete Answer,OOP
Generate Python code to find numbers that are multiples of both 3 and 5 between 0 and 100.,,"# List of numbers which are multiples of both 3 and 5 between 0 and 100
multiples_3_5 = [] 

# Iterate over all numbers between 0 and 100 
for num in range(101): 
 
    # Check for multiples of both 3 and 5 
    if num % 3 == 0 and num % 5 == 0: 
        multiples_3_5.append(num) 
      
print(multiples_3_5)","# List of numbers which are multiples of both 3 and 5 between 0 and 100
multiples_3_5 = [] 

# Iterate over all numbers between 0 and 100 
for num in range(101): 
 
    # Check for multiples of both 3 and 5 
    if num % 3 == 0 and num % 5 == 0: 
        multiples_3_5.append(num) 
      
print(multiples_3_5)",correct,OOP
Construct a code snippet in Python to eliminate all the negative numbers in a given list.,"list = [-3, -2, 0, 4, 5]","list = [-3, -2, 0, 4, 5]

list = [x for x in list if x >= 0] 

print(list)","list = [-3, -2, 0, 4, 5]

list = [x f",Incomplete Answer,Loops
Write a function in Python to print every other element in a list.,"[1, 2, 3, 4, 5]","def print_every_other(lst):
 for i in range(0, len(lst), 2):
 print(lst[i])","def print_every_other(lst):
 for i in range(0, len(lst), 2):
 print(lst[i])",correct,Recursion
Create a Python function that takes a 2D array as an input and returns the sum of all the elements in the array.,"[[1,2,3],[4,5,6]]","def array_sum(arr):
    sum = 0
    for i in range(len(arr)):
        for j in range(len(arr[i])):
            sum += arr[i][j]
    return sum

array_sum([[1,2,3],[4,5,6]])","def array_sum(arr):
    sum = 0
    for i in range(len(arr)):
        for j in range(len(arr[i])):
            sum += arr[i][j]
    return sum

array_sum([[1,2,3],[4,5,6]])",correct,String Manipulation
Create a Python program to parse a domain name and extract important information.,example.com,"import tldextract

def parse_domain_name(name):
    """"""Parses a domain name and extracts information such as the subdomain and the root domain.""""""
    extract = tldextract.extract(name)
    subdomain = extract.subdomain
    root_domain = extract.domain + '.' + extract.suffix
 
    return subdomain, root_domain","import tldextract

def parse_domain_name(name):
    """"""Parses a domain name and extracts information such as the subdomain and the root domain.""""""
    extract = tldextract.extract(name)
    subdomain = extract.subdomain
    root_domain = extract.domain + '.' + extract.suffix
 
    return subdomain, root_domain",Syntax Error,Recursion
Design a Python class that stores employee profile and salary information.,,"class Employee:
  def __init__(self, name, id, salary, profile):
    self.name = name
    self.id = id
    self.salary = salary
    self.profile = profile","class Employee
  def __init__(self, name, id, salary, profile)
    self.name = name
    self.id = id
    self.salary = salary
    self.profile = profile",Syntax Error,Loops
Create a Python code to decode an URL.,"""http://www.example.com/?param1=hello&param2=world""","import urllib.parse

def decode_url(url):
 parsed_url = urllib.parse.urlparse(url)
 return urllib.parse.parse_qs(parsed_url.query)

decode_url(""http://www.example.com/?param1=hello&param2=world"")","import urllib.parse

def decode_url(url):
 parsed_url = urllib.parse.urlparse(url)
 return urllib",Incomplete Answer,File I/O
"Create a hash table in Python to store the values (1, 2, 3, 4).",,"hash_table = {1: 1, 2: 2, 3: 3, 4: 4}","hash_table = {1: 1, 2: 2, 3: 3, 4: 4}",correct,Recursion
Write a Python function to count the number of occurances of a given letter in a given string.,"s = ""Hello World""","def count_letter(s, letter): 
    count = 0
    for char in s:
        if char == letter:
            count += 1
    return count

s = ""Hello World""
letter = ""l""
print(count_letter(s, letter))","def count_letter(s, letter): 
    count = 0
    for char in s:
        if char == letter:
            count += 1
    return count

s = ""Hello World""
letter = ""l""
print(count_letter(s, letter))",correct,OOP
"Using Python, write a program to merge the elements of two arrays into one.","arr1=[1, 2, 6, 9, 11] 
arr2=[2, 3, 4, 7, 8]","merged_arr = arr1 + arr2 
print ( merged_arr ) # [1, 2, 6, 9, 11, 2, 3, 4, 7, 8]","merged_arr = arr1 + arr2 
print ( merged_arr ) # [1, 2, 6, 9, 11, 2, 3, 4, 7, 8]",Syntax Error,Loops
Generate a subroutine in Python to convert a string date of the format DD/MM/YYYY to the Unix timestamp type.,"String date: ""25/12/2021""","import datetime

def convert_to_unix_time_stamp(date):
    date_object = datetime.datetime.strptime(date, ""%d/%m/%Y"")
    
    return date_object.timestamp()","import datetime

def convert_to_unix_time_stamp(date):
    date_object = datetime.datetime.strptime(date, ""%d/%m/%Y"")
    
    return date_object.timestamp()",Syntax Error,Loops
Refactor and improve the efficiency of the following Python code.,"def get_intersection(list_1, list_2):
    result = [] 
    for elem in list_1: 
        if elem in list_2: 
            result.append(elem)
    return result","def get_intersection(list_1, list_2):
    return [elem for elem in list_1 if elem in list_2]","def get_intersection(list_1, list_2:
    return [elem for elem in list_1 if elem in list_2]",Syntax Error,Loops
Create a program in Python which takes a given string and removes all the vowels from it.,"string = ""This is a test string""","def removeVowels(string):
    vowels = ['a', 'e', 'i', 'o', 'u']
    new_string = ''.join([x for x in string if x.lower() not in vowels])
    return new_string

print(removeVowels(string))","def removeVowels(string):
    vowels = ['a', 'e', 'i', 'o', 'u']
    new_string = ''.join([x for x in string if x.lower() not in vowels])
    return new_string

print(removeVowels(string))",correct,File I/O
Construct a python visualization to display a bar chart of the results of some data.,"Array of word strings and the associated frequency 
[
  [""word1"", 5], 
  [""word2"", 8], 
  [""word3"", 3],
  [""word4"", 2],
]","import matplotlib.pyplot as plt

words = [""word1"", ""word2"", ""word3"", ""word4""]
frequencies = [5, 8, 3, 2]

plt.bar(words, frequencies)
plt.title(""Word Frequency Chart"")
plt.xlabel(""Words"")
plt.ylabel(""Frequency"")
plt.show()","import matplotlib.pyplot as plt

words = [""word1"", ""word2"", ""word3"", ""word4""]
frequencies = [5, 8, 3, 2]

plt.bar(words, frequencies)
plt.title(""Word Frequency Chart"")
plt.xlabel(""Words"")
plt.ylabel(""Frequency"")
plt.show()",correct,String Manipulation
Generate a Python program which will filter all prime numbers from a list of integers.,"[19, 32, 13, 35, 22, 17, 27]","def filter_prime_numbers(l):
    result = []
    for num in l:
        if is_prime(num):
            result.append(num)
    return result

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True","def filter_prime_numbers(l):
    result = []
    for num in l:
        if is_prime(num):
            result.append(num)
    return result

def is_p",Incomplete Answer,String Manipulation
Write a python program to determine if the given list has duplicates.,"list = [1, 2, 4, 6, 2, 5]","def isDuplicates(list):
    duplicate_items = set()
    for item in list:
        if item in duplicate_items:
            return True
        duplicate_items.add(item)
    return False

my_list = [1, 2, 4, 6, 2, 5]
result = isDuplicates(my_list)
print(result) # prints True","def isDuplicates(list):
    duplicate_items = set()
    for item in list:
        if item in duplicate_items:
            return True
        duplicate_items.add(item)
    return False

my_list = [1, 2, 4, 6, 2, 5]
result = isDuplicates(my_list)
print(result) # prints True",correct,Recursion
Formulate a Python function to count the occurrences of a character in a given string.,,"def count_characters(string, character):
    count = 0
    for char in string:
        if char == character:
            count += 1
    return count","def count_characters(string, character):
    count = 0
    for char in string:
        if char == character:
            count += 1
    return count",correct,OOP
Create a Python program to group a list of numbers into evens and odds.,"A list of numbers [1, 2, 3, 4, 5, 6]","def even_odd_grouping(nums):
    evens = []
    odds = []
    for num in nums:
        if num % 2 == 0:
            evens.append(num)
        else:
            odds.append(num)
    return (evens, odds)

nums = [1, 2, 3, 4, 5, 6]
evens, odds = even_odd_grouping(nums)
print(""Evens: "", evens) 
print(""Odds: "", odds)","def even_odd_grouping(nums):
    evens = []
    odds = []
    for num in nums:
        if num % 2 == 0:
            evens.append(num)
        else:
            odds.append(num)
    return (evens, odds)

nums = [1, 2, 3, 4, 5, 6]
evens, odds = even_odd_grouping(nums)
print(""Evens: "", evens) 
print(""Odds: "", odds)",correct,OOP
Write a Python function to find all prime numbers between a given lower and upper bound.,"Lower bound = 20, Upper bound = 50","def prime_numbers(lower_bound, upper_bound):
    primes = []
    for num in range(lower_bound, upper_bound + 1):
        if all(num % i != 0 for i in range(2, num)):
            primes.append(num)
 
    return primes
 
prime_numbers(20, 50) # returns [23, 29, 31, 37, 41, 43, 47]","def prime_numbers(lower_bound, upper_bound):
    primes = []
    for num in range(lower_bound, upper_bound + 1):
        if all(num % i != ",Incomplete Answer,OOP
Create a Python algorithm to return all possible combinations of a given list.,"[1, 2, 3]","def subset(s): 
    if len(s) == 0: 
        return [[]] 
    else: 
        pre_list = subset(s[1:]) 
        post_list = [] 
        for i in pre_list: 
            post_list.append(i+[s[0]]) 
  
        return pre_list + post_list 

result = subset([1, 2, 3]) 
print(result)","def subset(s): 
    if len(s) == 0: 
        return [[]] 
    else: 
        pre_list = subset(s[1:]) 
        post_list = [] 
        for",Incomplete Answer,String Manipulation
Create a program in Python to sort a given array in ascending order using bubble sort.,"[3,7,4,1]","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n-1):
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = [3,7,4,1]
bubble_sort(arr) 
print (""Sorted array :"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i]),","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n-1):
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
              ",Incomplete Answer,Recursion
Create a program to check if a given array has at least two elements in Python.,,"def has_two_elements(arr):
    return len(arr) >= 2",def has_two_elements(arr),Incomplete Answer,File I/O
"Given two lists x and y, write a python program to return a list that contains the elements which are common to both lists.","x = [1, 2, 3, 4], y = [2, 3, 4, 5]","def common_elements(x, y):
    common = []
    for i in x:
        if i in y:
            common.append(i)
    return common","def common_elements(x, y):
    common = []
    for i in x:
   ",Incomplete Answer,Recursion
Generate a Python code snippet to find the longest word in a given sentence.,"""This is the longest sentence.""","def longestWord(sentence):
    words = sentence.split("" "")
    max_length = 0
    longest_word = """"
    for word in words:
        if len(word) > max_length:
            max_length = len(word)
            longest_word = word
    return longest_word

print(longestWord(""This is the longest sentence.""))","def longestWord(sentence):
    words = sentence.split("" "")
    max_length = 0
    longest_word = """"
    for word in words:
        if len(word) > max_",Incomplete Answer,OOP
Write a Python program to transform an input array of length 5 into a matrix of 3x3.,"[1, 2, 3, 4, 5]","def transform_to_matrix(lst):
    matrix = [[lst[0], lst[1], lst[2]],
              [lst[3], lst[4], 0],
              [0, 0, 0]]
    return matrix","def transform_to_matrix(lst):
    matrix = [[lst[0], lst[1], lst[2]],
   ",Incomplete Answer,String Manipulation
Build a web scraping function in Python Scrapy that retrieves data from a given web page.,URL of a web page,"import scrapy

class DataSpider(scrapy.Spider):
 name = 'DataSpider'
 start_urls = [url]

def parse(self, response):
 data = response.css('body').getall()
 yield { 'data': data }","import scrapy

class DataSpider(scrapy.Spider):
 name = 'DataSpider'
 start_urls = [url]
",Incomplete Answer,OOP
Write a Python program that computes the mean and standard deviation of a dataset.,"Data = [1.1, 3.2, 4.7, 5.9, 7.7, 8.2]","mean = 5.42
sd = 2.48

def compute_stats(Data):
    # calculuate mean
    mean = sum(Data) / len(Data)
    # calculate standard deviation
    variance = 0.0
    for i in Data:
        variance += (i - mean)**2
    sd = variance ** 0.5
    # return mean and sd
    return mean, sd","mean = 5.42
sd = 2.48

def compute_stats(Data:
    # calculuate mean
    mean = sum(Data / len(Data
    # calculate standard deviation
    variance = 0.0
    for i in Data:
        variance += (i - mean**2
    sd = variance ** 0.5
    # return mean and sd
    return mean, sd",Syntax Error,Loops
Write a Python program to classify a given sentence based on its sentiment.,"Input sentence: ""I hate Mondays"".","from textblob import TextBlob

input_sentence = ""I hate Mondays""
sentiment = TextBlob(input_sentence).sentiment.polarity

if sentiment > 0:
    print(""The sentiment is 'positive'"")
elif sentiment == 0:
    print(""The sentiment is 'neutral'"")
else:
    print(""The sentiment is 'negative'"")","from textblob import TextBlob

input_sentence = ""I hate Mondays""
sentiment = TextBlob(input_sentence).sentiment.polarity

if sentiment > 0:
    ",Incomplete Answer,Loops
"Create a Python class for a stack and its basic functions such as push, pop and peek.",,"class Stack:
  
    # empty list to store stack elements
    def __init__(self):
        self.stack = []
  
    # push element to the stack
    def push(self, data):
        self.stack.append(data)
  
    # pop element from the stack
    def pop(self):
        self.stack.pop() 
  
    # peek element from the stack
    def peek(self):
        return self.stack[-1]","class Stack:
  
    # empty list to store stack elements
    def __init__(self:
        self.stack = []
  
    # push element to the stack
    def push(self, data:
        self.stack.append(data
  
    # pop element from the stack
    def pop(self:
        self.stack.pop( 
  
    # peek element from the stack
    def peek(self:
        return self.stack[-1]",Syntax Error,String Manipulation
"Generate Python code for a linear regression model. The model should take two numerical inputs, x and y, and be able to predict the numerical output that best fits the given data.","x: [1, 2, 3]
y: [3, 6, 9]","import numpy as np

x = np.array([1, 2, 3])
y = np.array([3, 6, 9])

# Create the design matrix
X = np.vstack([np.ones(len(x)), x]).T

# Calculate the weights
w = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(y)

# Predicted output
y_pred = X.dot(w)","import numpy as np

x = np.array([1, 2, 3])
y = np.array([3, 6, 9])

# Create the design matrix
X = np.vstack([np.ones(len(x)), x]).T

# Calculate the weights
w = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(y)

# Predicted output
y_pred = X.dot(w)",Syntax Error,File I/O
Edit the code below to print the output using the Python format() method.,"number1 = 2
number2 = 3

print('The sum of the numbers is ' + number1 + number2)","number1 = 2
number2 = 3

print('The sum of the numbers is {}'.format(number1 + number2))","number1 = 2
number2 = 3

print(name, 'The sum of the numbers is {}'.format(number1 + number2))",Syntax Error,OOP
Develop a python script to retrieve data from a MySQL database,,"import mysql.connector

conn = mysql.connector.connect(host=""localhost"", port=""3306"", database=""myDB"", user=""root"", password=""mypassword"")

cursor = conn.cursor()

cursor.execute(""SELECT * from myTable"")
data = cursor.fetchall()

conn.close()","import mysql.connector

conn = mysql.connector.connect(host=""localhost"", port=""3306"", database=""myDB"", user=""root"", passw",Incomplete Answer,Recursion
Write an optimized Python program to generate the Fibonacci sequence up to n.,n = 10,"def fibonacci(n):
 a, b = 0, 1
 fibonacci_list = [a]
 
 for _ in range(n):
 a, b = b, a + b
 fibonacci_list.append(b)
 
 return fibonacci_list

print(fibonacci(n)) # Prints [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]","def fibonacci(n:
 a, b = 0, 1
 fibonacci_list = [a]
 
 for _ in range(n:
 a, b = b, a + b
 fibonacci_list.append(b
 
 return fibonacci_list

print(fibonacci(n # Prints [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]",Syntax Error,OOP
"Write a function in Python that takes a 2D array and a target value as input, and determines if the array contains the target value.","[[3, 6, 2], [2, 3, 4], [1, 2, 5]], target = 4","def targetInArray(arr,target):
    for i in range(len(arr)):
        for j in range(len(arr[i])):
            if target == arr[i][j]:
                return True
    return False","def targetInArray(arr,target)
    for i in range(len(arr))
        for j in range(len(arr[i]))
            if target == arr[i][j]
                return True
    return False",Syntax Error,String Manipulation
Use an if-else statement in Python to print a message depending on the value of a given integer.,"//Integer
int x = 15;","if (x > 10) {
    print('The number is greater than 10')
} else {
    print('The number is less or equal than 10')
}","if (x > 10) {
    print('The number is greater than 10')
} else {
    print('The number is less or equal than 10')
}",correct,File I/O
Create a function in Python that returns the surface area of a sphere when given the sphere’s radius as input.,radius = 6,"import math

def sphere_surface_area(radius):
 surface_area = 4 * math.pi * radius * radius
 return surface_area 

# Test
radius = 6
print(sphere_surface_area(radius)) # 452.38934211","import math

def sphere_surface_area(radius):
 surface_area = 4 * math.pi * radius * radius
 return surface_area 

# Test
radius = 6
print(sphere_surface_area(radius)) # 452.38934211",correct,String Manipulation
Write a function to find the element count that occurs before the record in the given tuple.,,"def count_first_elements(test_tup):
  for count, ele in enumerate(test_tup):
    if isinstance(ele, tuple):
      break
  return (count) ","def count_first_elements(test_tup):
  for count, ele in enumerate(tes",Incomplete Answer,Recursion
Create a program in Python that shuffles an array of numbers.,"[1, 5, 8, 11, 3]","import random

# Create an array
arr = [1, 5, 8, 11, 3]

# Function to shuffle an array
def shuffle_array(arr):
    random.shuffle(arr)
    return arr

# Shuffle the array and print the result
print(shuffle_array(arr))","import random

# Create an array
arr = [1, 5, 8, 11, 3]

# Function to shuffle an array
def shuffle_array(arr):
    random.shuffle(arr)
    return arr

# Shuffle the array and print the result
print(name, shuffle_array(arr))",Syntax Error,Recursion
Write a Python program to implement a decision tree using a given dataset.,"The dataset contains 10,000 examples and 5 features.","import numpy as np
from sklearn import tree

# Load the data
X = np.loadtxt('data.txt', delimiter=',')

# Create a decision tree model
clf = tree.DecisionTreeClassifier()
clf.fit(X, y)

# print the model tree 
tree.export_graphviz(clf, out_file=""model.dot"")","import numpy as np
from sklearn import tree

# Load the data
X = np.loadtxt('data.txt', delimiter=',')

# Create a decision tree model
clf = tree.DecisionTreeClassifier()
clf.fit(X, y)

# pritn the model tree 
tree.export_graphviz(clf, out_file=""model.dot"")",Syntax Error,Recursion
"Build a type checking function to determine what kind of data is being processed, given a generic string in Python.",str = '123',"def check_type(str):
    try:
        int(str)
        return 'Integer'
    except ValueError:
        pass
   
    try:
        float(str)
        return 'Float'
    except ValueError:
        pass
   
    return 'String'

print(check_type('123')) # prints 'Integer'","def check_type(str):
    try:
        int(str)
        return 'Integer'
    except ValueError:
        pass
   
    try:
        float(str)
        return 'Float'
    except ValueError:
        pass
   
    return 'String'

print(check_type('123')) # prints 'Integer'",correct,OOP
Design an algorithm to compute the GCD of 2 numbers in Python.,"4, 12","def gcd(a, b): 
    if a == 0: 
        return b 
    return gcd(b % a, a) 

if __name__ == '__main__':
    a = 4
    b = 12
    result = gcd(a, b) 
    print (""GCD of 4 and 12 is "" + str(result))","def gcd(a, b): 
    if a == 0: 
        return b 
    return gcd(b % a, a) 

if __name__ == '__main__':
    a = 4
    b = 12
    result = gcd(a, b) 
    print (""GCD of 4 and 12 is "" + str(result))",correct,Loops
Create a list in Python that contains all integers between 0 and 100 that are multiples of 3.,,"multiples_of_3 = [num for num in range(0, 101) if num % 3 == 0]",multiples_of_3 = [num for num i,Incomplete Answer,OOP
Implement webscraping with Python to extract content from a given website.,A website URL,"import requests
from bs4 import BeautifulSoup

# Fetch the website content
link = ""https://example.com""
data = requests.get(link)

# Parse the HTML content
soup = BeautifulSoup(data.text, 'html.parser')

# Extract all the <p> tags
content = soup.find_all('p')

# Print the content
for item in content:
    print(item.text)","import requests
from bs4 import BeautifulSoup

# Fetch the website content
link = ""https://example.com""
data = requests.get(link)

# Parse the HTML content
soup = BeautifulSoup(data.text, 'html.parser')

# Extract all the <p> tags
content = soup.find_all('p')

# Print the content
for item in content:
print(item.text)",Syntax Error,String Manipulation
Is it possible to create a HTML page that displays a table of contents from the data stored in a database?,,"Yes, it is possible to create a HTML page that displays a table of contents from the data stored in a database. You can use HTML, CSS, and JavaScript to create the table and a server-side language such as PHP or Python to query the database and retrieve the relevant data. Once you have the data, you can use JavaScript to render the table within the HTML page.","Yes, it is possible to create a HTML page that displays a table of contents from the data stored in a database. You can use HTML, CSS, and JavaScript to create the table and a serv",Incomplete Answer,OOP
Generate a Python program that takes in two lists and returns the intersection of the two.,"list1=[1,2,3]
list2=[2,3,4]","def get_intersection(list1, list2):
    intersection = []
    for element in list1:
        if element in list2:
            intersection.append(element)
    return intersection","def get_intersection(list1, list2):
    intersection = []
    for element in list1:
        if element in list2:
            intersection.append(element)
    return intersection",Syntax Error,OOP
Construct a python program to flatten a nested list recursively.,"list = [[1,2,3], [4,5], [6]]","# Defining a function to flatten a nested list
def flatten(list):
    flatlist = []
    for item in list:
        if isinstance(item, list):
            flatlist.extend(flatten(item))
        else:
            flatlist.append(item)
    return flatlist

# Testing the flatten function
list = [[1,2,3], [4,5], [6]]
print(flatten(list)) # [1, 2, 3, 4, 5, 6]","# Defining a function to flatten a nested list
def flatten(list):
    flatlist = []
    for item in list:
        if isinstance(item, list):
            flatlist.extend(flatten(item))
        else:
            flatlist.append(item)
    return flatlist

# Testing the flatten function
list = [[1,2,3], [4,5], [6]]
print(flatten(list)) # [1, 2, 3, 4, 5, 6]",correct,Loops
Generate the python code that check if the given element is in a list.,"list = [1, 2, 3, 4]","def check_list(list, element):
    if element in list:
        print(element, ""is in the list"")
    else:
        print(element, ""is not in the list"")","def check_list(list, element):
    if element in list:
        pritn(element, ""is in the list"")
    else:
        pritn(element, ""is not in the list"")",Syntax Error,String Manipulation
Design a function in Python for merging two dictionaries.,,"def merge_dicts(dict1, dict2):
    dict3 = {**dict1, **dict2} 
    return dict3","def merge_dicts(dict1, dict2):
    dict3 = {**dict1, **dict2} 
    return dict3",correct,OOP
Create a Python program that takes a message as input and encrypts it using the Caesar cipher.,"""Hello World!""","def caesar_encrypt(plain_text, shift):
    encrypted_text = """"
    
    for c in plain_text:
        c_ascii = ord(c)+shift 
        encrypted_text += chr(c_ascii)
        
    return encrypted_text

plain_text = ""Hello World!""
shift = 5
encrypted_text = caesar_encrypt(plain_text, shift)
print(""encrypted_text ="", encrypted_text)","def caesar_encrypt(plain_text, shift):
    encrypted_text = """"
    
    for c in plain_text:
        c_ascii = ord(c)+shift 
        encrypted_text += chr(c_ascii)
        
    return encrypted_text

plain_text = ""Hello World!""
shift = 5
encrypted_text = caesar_encrypt(plain_text, shift)
print(""encrypted_text ="", encrypted_text)",correct,OOP
Complete the Python class below so that it can calculate the sum of two integers.,"class Sum:
    def __init__(self, x, y):
        self.x = x
        self.y = y","class Sum:
    def __init__(self, x, y):
        self.x = x
        self.y = y
        
    def add(self):
        return self.x + self.y","class Sum:
    def __init__(self, x, y):
        self.x = x
        self.y = y
        
    def add(self):
        return self.x + self.y",correct,Loops
Suggest a function to remove elements of an array that are greater than a given limit,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","# Python program to remove elements of an array that are greater than a given limit

def remove_above_limit(arr, limit):
    new_arr = [x for x in arr if x <= limit]
    return new_arr","# Python program to remove elements of an array that are greater than a given limit

def remove_above_limit(arr, limit):
    new_arr = [x for x in arr if x <= limit]
    return new_arr",correct,File I/O
Write a Python code that replaces every occurrence of an alphabet in a sentence with the next alphabet in the alphabetical order.,"""Hello, World!""","def alphabet_order(sentence):
    output = """"
    for character in sentence:
        if character.isalpha():
            ascii_value = ord(character)
            ascii_value += 1
            output += chr(ascii_value)
        else:
            output += character
    return output

#Main
print(alphabet_order(""Hello, World!""))","def alphabet_order(sentence):
    output = """"
    for character in sentence:
        if character.isalpha():
            ascii_value = ord(character)
            a",Incomplete Answer,OOP
Construct a Python program to print all the numbers between 0 and a given number n that are divisible by 3.,,"def print_divisible_by_three(n):
  for num in range(n+1):
    if num % 3 == 0:
      print(num, end="" "")

print_divisible_by_three(10)","def print_divisible_by_three(n):
  for num in range(n+1):
    if nu",Incomplete Answer,Recursion
"Using Python, create a program to filter out all non-prime numbers from a list.","myList = [2, 4, 5, 20, 44]","def filterPrimes(myList):
    result = []
    for i in myList:
        is_prime = True
        for j in range(2,i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            result.append(i)
    return result

print(filterPrimes(myList)) #[2, 5]","def filterPrimes(myList):
    result = []
    for i in myList:
        is_prime = True
        for j in range(2,i):
            if i % j == 0:
        ",Incomplete Answer,Loops
Write a Python function to generate a substitution cipher of a given string,"string = ""abcdefghijklmnopqrstuvwxyz""","def substitution_cipher(string):
    cipher = """"
    for i in string:
        cipher += chr(ord('a') + (ord(i) - ord('a') + 13) % 26) 
    return cipher","def substitution_cipher(string):
    cipher = """"
    for i in string:
        cipher += chr(ord('a') + (ord(i) - ord('a') + 13) % 26) 
    return cipher",Syntax Error,Recursion
Create a Python program that sends a request to a website and displays the response.,,"import requests

def send_request(url):
    response = requests.get(url)
    
    if response.status_code == 200:
        print(""Success! The website responded with: "")
        print(response.text)
    else:
        print(""Error! The website responded with: "")
        print(""Status code: "", response.status_code)","import requests

def send_request(url):
    response = requests.get(url)
    
    if response.status_code == 200:
        print(""Success! The website respon",Incomplete Answer,OOP
Generate a Python function that takes an array of numbers and returns the sum of all the odd numbers in the array.,"[2, 4, 5, 6]","def findOddSums(arr):
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    return sum

odd_sums = findOddSums([2, 4, 5, 6])
print(odd_sums)","def findOddSums(arr):
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    return sum

odd_sums = findOddSums([2, 4, 5, 6])
print(odd_sums)",correct,String Manipulation
Write a Python program to filter out the numbers from a list that are divisible by a given number.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
divisible_by = 3","numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
divisible_by = 3
result = [num for num in numbers if num % divisible_by != 0]

print(result) # [1, 2, 4, 5, 7, 8, 10]","numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
divisible_by = 3
result = [num for num in numbers if num % divisible_by != 0]

print(result) # [1, 2, 4, 5, 7, 8, 10]",Syntax Error,Recursion
Generate a Python program to iterate over a list of numbers and print out only the even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","for num in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:
 if num % 2 == 0:
 print(num)","for num in [1, 2, 3, 4, 5, 6, 7, 8, ",Incomplete Answer,File I/O
Create a simple Python script to query and fetch data from an SQL database.,,"import sqlite3

def query_database(database_name, query):
 conn = sqlite3.connect(database_name)
 c = conn.cursor()
 results = c.execute(query).fetchall()
 conn.close()
 return results

# Example query to get all rows in the table
query_database('mydatabase.db', 'SELECT * FROM mytable')","import sqlite3

def query_database(database_name, query):
 conn = sqlite3.connect(database_name)
 c = conn.cursor()
 results = c.execute(query)",Incomplete Answer,Loops
Craft a Python script to reverse a string,,"def reverse_string(s):
    result = """"
    for i in range(len(s)-1, -1, -1):
        result += s[i]
    return result","def reverse_string(s):
    result = """"
    for i in range(len(s)-1, -1, -1):
        result += s[i]
    return result",correct,Recursion
Design a Regex pattern in Python to validate a phone number format.,,"import re

phonePattern = re.compile(r'^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$') 

def validate_phone(phone_number): 
    if phone_pattern.search(phone_number): 
        return true
    else: 
        return false","import re

phonePattern = re.compile(r'^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$') 

def validate_phone(phone_number): 
    if phone_pattern.search(phone_number): 
        return true
    else: 
        return false",correct,File I/O
Generate a Python program to print the characters at even positions in a given string.,Hello World!,"def even_positions(string):
    result = """"
    for i in range(0, len(string), 2):
        result += string[i]
    return result

print(even_positions(""Hello World!""))","def even_positions(string):
result = """"
for i in range(0, len(string), 2):
    result += string[i]
return result

print(even_positions(""Hello World!""))",Syntax Error,Recursion
Write a function to split a string at lowercase letters.,,"import re
def split_lowerstring(text):
 return (re.findall('[a-z][^a-z]*', text))","import re
def split_lowerstring(text):
",Incomplete Answer,Recursion
Create a program in Python that takes a list of numbers and sorts them in descending order.,"[30, 10, 40, 20]","def sortListInDescendingOrder(list):
    return sorted(list, reverse=True)

list1 = [30, 10, 40, 20]
sortedList = sortListInDescendingOrder(list1)
print(sortedList)","def sortListInDescendingOrder(list):
return sorted(list, reverse=True)

list1 = [30, 10, 40, 20]
sortedList = sortListInDescendingOrder(list1)
print(sortedList)",Syntax Error,OOP
Develop a virtual assistant command in Python to generate a random number between two user-supplied numbers.,"Minimum number: 10
Maximum number: 20","import random

min_num = int(input(""Enter minimum number: ""))
max_num = int(input(""Enter maximum number: ""))

print(random.randint(min_num, max_num)) # random number between 10 and 20","import random

min_num = int(input(""Enter minimum number ""))
max_num = int(input(""Enter maximum number ""))

print(random.randint(min_num, max_num)) # random number between 10 and 20",Syntax Error,File I/O
Create a Python script that splits a given string into equal parts,,"def split_str(str, n):
    return [str[i:i+n] for i in range(0, len(str), n)]","def split_str(str, n):
    return [str[i:i+n] for i in range(0, len(str), n)]",correct,Recursion
Create a function in Python to identify consecutive numbers in a given list.,"[1, 4, 6, 5, 2, 7, 9]","def consecutive_numbers(lst):
  count = 0
  for i in range(len(lst)-1):
    if lst[i+1] - lst[i] == 1:
      count += 1
    else:
      count = 0
  return count

# Test Code
lst = [1, 4, 6, 5, 2, 7, 9]
result = consecutive_numbers(lst)
print(result)

# Output --> 2","def consecutive_numbers(lst):
  count = 0
  for i in range(len(lst)-1):
    if lst[i+1] - lst[i] == 1:
      count += 1
    else:
  ",Incomplete Answer,Loops
"Write a Python script to sort the following numbers in ascending order [125, 33, 52,45, 24].",,"# function to sort the array
def sort_nums(arr):
  # Use Selection Sort Algorithm
  for i in range(len(arr)):
    min_index = i
    for j in range(i+1, len(arr)):
      if arr[min_index] > arr[j]:
        min_index = j
    arr[i], arr[min_index] = arr[min_index], arr[i]
  
  return arr

# driver code
arr = [125, 33, 52, 45, 24]
result = sort_nums(arr)
print(result)","# function to sort the array
def sort_nums(arr:
  # Use Selection Sort Algorithm
  for i in range(len(arr:
    min_index = i
    for j in range(i+1, len(arr:
      if arr[min_index] > arr[j]:
        min_index = j
    arr[i], arr[min_index] = arr[min_index], arr[i]
  
  return arr

# driver code
arr = [125, 33, 52, 45, 24]
result = sort_nums(arr
print(result",Syntax Error,String Manipulation
Create a program to remove all the duplicate elements from the given array in Python.,"[3, 5, 7, 9, 3, 5, 7]","def remove_duplicates(arr):
    result = []
    seen = set()

    for item in arr:
        if item not in seen:
            seen.add(item)
            result.append(item)

    return result

print(remove_duplicates([3, 5, 7, 9, 3, 5, 7]))","def remove_duplicates(arr:
    result = []
    seen = set(

    for item in arr:
        if item not in seen:
            seen.add(item
            result.append(item

    return result

print(remove_duplicates([3, 5, 7, 9, 3, 5, 7]",Syntax Error,OOP
Write a Python script to generate a random unique 8 character ID.,,"import string
import random

def generate_unique_id(length):
    random_id = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(length)])
    return random_id
    
print(generate_unique_id(8)) 
# Output: AB2dCKsm","import string
import random

def generate_unique_id(length)
    random_id = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(length)])
    return random_id
    
print(generate_unique_id(8)) 
# Output AB2dCKsm",Syntax Error,Recursion
Suggest how to make the following Python loop execute faster.,"def find_list_difference(list1, list2):
    diff = []
    for item in list1:
        if item not in list2:
            diff.append(item)
    return diff","def find_list_difference(list1, list2):
    diff = []
    list2_set = set(list2)
    for item in list1:
        if item not in list2_set:
            diff.append(item)
    return diff","def find_list_difference(list1, list2:
    diff = []
    list2_set = set(list2
    for item in list1:
        if item not in list2_set:
            diff.append(item
    return diff",Syntax Error,Recursion
"Write a Python program to generate random passwords of length 8 using alphabet, numbers, and symbols.",,"import string
import random

def generate_password():
 chars = string.ascii_letters + string.digits + string.punctuation
 password = ''.join(random.choice(chars) for _ in range(8))
 return password

print(generate_password())","import string
import random

def generate_password():
 chars = string.ascii_letters + string.digits + string.punctuation
 password = ''.join(random.choice(chars) for _ in range(8))
 return password

print(generate_password())",correct,File I/O
Create a program that will generate random sequence of words.,,"import random

def generate_random_words(n):
    words = [""hello"", ""world"", ""foobar"", ""python"", ""code""]
    output = """"

    for _ in range(n):
        output += random.choice(words)
        output += "" ""

    return output[:-1]","import random

def generate_random_words(n):
    words = [""hello"", ""world"", ""foobar"", ""python"", ""code""]
    output = """"

    for _ in range(n):
        output += random.choice(words)
        output += "" ""

    return output[:-1]",Syntax Error,File I/O
Generate a python function to convert a student's grade from a 0 to 100 scale to the corresponding letter grade according to the following grade scale.,90,"def grade_converter(score):
    if score >= 90:
        return 'A'
    elif score >= 80:
        return 'B'
    elif score >= 70:
        return 'C'
    elif score >= 60:
        return 'D'
    else:
        return 'F'","def grade_converter(score):
    if score >= 90:
        return 'A'
    elif score >= 80:
        return 'B'
    elif score >= 70:
        return 'C'
    elif score >= 60:
        return 'D'
    else:
        return 'F'",Syntax Error,OOP
Craft a Python program to extract characters from the odd positions of a given string.,,"def extract_odd_pos(string):
    odd_position = """"
    for i in range(len(string)):
        if i%2 == 0:
            odd_position += string[i]
    return odd_position","def extract_odd_pos(string):
    odd_position = """"
    for i in range(len(string)):",Incomplete Answer,OOP
How could you remove duplicates from a list in Python?,,"""""""
Remove duplicates from a list in Python
""""""

# Input list 
lst = [1, 1, 2, 3, 3, 4, 5, 5]

# Create a new list by converting the existing list to set 
new_lst = list(set(lst))

# Print the new list 
print(new_lst)  # Output: [1, 2, 3, 4, 5]","""""""
Remove duplicates from a list in Python
""""""

# Input list 
lst = [1, 1, 2, 3, 3, 4, 5, 5]

# Create a new list by conv",Incomplete Answer,Loops
Create an algorithm in Python that reads an array of integers and returns the maximum element.,"[1, 5, -3, 10]","def findMaxElement(arr):
  max_element = 0
  for element in arr:
    if element > max_element:
      max_element = element
  
  return max_element

arr = [1, 5, -3, 10]
max_element = findMaxElement(arr)
print(max_element)","def findMaxElement(arr):
  max_element = 0
  for element in arr:
    if element > max_element:
      max_element = element
  
  return max_element

arr = [1, 5, -3, 10]
max_element = findMaxElement(arr)
print(name, max_element)",Syntax Error,File I/O
Generate a machine learning model in Python to classify emails into spam and non-spam.,,"from sklearn.naive_bayes import MultinomialNB 

# Initializing the model
model = MultinomialNB()

# Training the model
model.fit(X_train,y_train)

# Testing the model
y_pred = model.predict(X_test)

# Evaluating the model
accuracy = model.score(X_test,y_test)","from sklearn.naive_bayes import MultinomialNB 

# Initializing the model
model = MultinomialNB()

# Training the model
model.fit(X_train,y_train)

# Testing the model
y_pred = model.predict(X_test)

# Evaluating the model
accuracy = model.score(X_test,y_test)",Syntax Error,File I/O
Create a Python program that takes a positive integer as input and returns the Fibonacci sequence up to the given number.,10,"def fibonacci(n):
  fib = [0, 1]
  for i in range(2,n):
    fib.append(fib[i-2] + fib[i-1])
  return fib[:n]

fibonacciSequence = fibonacci(10)
print(fibonacciSequence)","def fibonacci(n):
  fib = [0, 1]
  for i in range(2,n):
    fib.append(fib[i-2] + fi",Incomplete Answer,OOP
Develop a Python function to calculate the mean of a list of numbers.,"[1, 5, 8, 9]","def mean(lst):
    total = 0
    for n in lst:
        total += n
    return total / len(lst)

result = mean([1, 5, 8, 9])
print(result)","def mean(lst):
    total = 0
    for n in lst:
        total += n
  ",Incomplete Answer,File I/O
Write a python program that prints out the number of times each letter appears in a given string.,"string = ""Hello, World!""","string = ""Hello, World!""
for char in string:
 count = string.count(char)
 print(char + "" appears "" + str(count) + "" times"")

# Output
H appears 1 times
e appears 1 times
l appears 3 times
o appears 2 times
, appears 1 times
  appears 1 times
W appears 1 times
r appears 1 times
d appears 1 times
! appears 1 times","string = ""Hello, World!""
for char in string
 count = string.count(char)
 print(char + "" appears "" + str(count) + "" times"")

# Output
H appears 1 times
e appears 1 times
l appears 3 times
o appears 2 times
, appears 1 times
  appears 1 times
W appears 1 times
r appears 1 times
d appears 1 times
! appears 1 times",Syntax Error,Loops
Develop a program to sort an list of strings by their length using Python.,"['dog', 'cat', 'mouse', 'elephant']","def sort_by_length(strings): 
    return sorted(strings, key=len) 
  
# Test 
strings = ['dog', 'cat', 'mouse', 'elephant'] 
  
print(sort_by_length(strings))","def sort_by_length(strings): 
    return sorted(strings, key=len) 
  
# Test 
strings = ['dog', 'cat', 'mouse', 'elephant'] 
  
print(sort_by_length(strings))",correct,String Manipulation
Generate a Python function that takes an matrix as input and raises each element of it to the power of 3.,"[[1,2,3], [4,5,6], [7,8,9]]","def power_of_3(matrix):
    for i in range(len(matrix)):
       for j in range(len(matrix[0])): 
            matrix[i][j] = matrix[i][j] ** 3
    return matrix","def power_of_3(matrix):
    for i in range(len(matrix)):
       for j in range(",Incomplete Answer,String Manipulation
write a python code to filter 'mylist' and remove odd numbers,"mylist = [2, 3, 5, 7, 11, 13, 17, 19]",mylist = [x for x in mylist if x % 2 == 0],mylist = [x for x in mylist if x % 2 == 0],correct,String Manipulation
Write a Python code to sort a list of words alphabetically.,"word_list = [""hello"", ""computer"", ""science"", ""art""]","word_list.sort()
print(word_list)","word_list.sort(
print(word_list",Syntax Error,Recursion
Create a function in Python that will convert a string to all uppercase letters.,"input_string = ""This Is A String""","def uppercase_string(input_string):
    return input_string.upper()","def uppercase_string(input_string):
    return input_string.upper()",Syntax Error,Loops
Develop a Python program to sort a 3D array according to the second axis in ascending order.,"[[[1,6,4],
  [4,3,2],
  [2,3,6]],
 [[3,3,3],
  [2,2,2],
  [1,1,1]]]","def sort_array(arr):
    arr.sort(key=lambda x: x[1])
    return arr

data = [[[1,6,4], [4,3,2], [2,3,6]], [[3,3,3], [2,2,2], [1,1,1]]]

print(sort_array(data))","def sort_array(arr):
    arr.sort(key=lambda x: x[1])
    return arr

data = [[[",Incomplete Answer,String Manipulation
Generate a python program to iterate through a given list and find the minimum value.,"[5, 7, -1, 4]","def find_min(arr):
    min_val = arr[0]
    for i in arr:
        if i < min_val:
            min_val = i
    return min_val

arr = [5, 7, -1, 4]
min_val = find_min(arr)
print(min_val)","def find_min(arr):
    min_val = arr[0]
    for i in arr:
        if i < min_val:
          ",Incomplete Answer,Loops
Write a python program that sorts a list of numbers in descending order.,"list_numbers = [8, 4, 6, 10, 3]","list_numbers = [8, 4, 6, 10, 3]

list_numbers.sort(reverse=True)

print(list_numbers) # Output: [10, 8, 6, 4, 3]","list_numbers = [8, 4, 6, 10, 3]

list_numbers.sort(reverse=True)

pritn(list_numbers) # Output: [10, 8, 6, 4, 3]",Syntax Error,File I/O
Write a Python code to serialize a nested dictionary.,,"import json

def serialize_dict(input_dict):
    return json.dumps(input_dict)","import json

def serialize_dict(input_dict):
    return json.dumps(input_dict)",correct,OOP
"Create a Python function that takes a string argument, removes all the special characters and returns the modified string.",This# 1$ i^s an% e*xa_mple -str_ing,"def remove_special_characters(s):
    new_s = s.replace('#', '').replace('$', '').replace('^', '').replace('%', '').replace('*', '').replace('_', '') 
    return new_s

remove_special_characters(""This# 1$ i^s an% e*xa_mple -str_ing"")","def remove_special_characters(s):
    new_s = s.replace('#', '').replace('$', '').replace('^', '').replace('%', '').replace('*', '').replace('_', '') 
    return new_s

remove_special_characters(""This# 1$ i^s an% e*xa_mple -str_ing"")",correct,String Manipulation
Write a function to calculate distance between two points using latitude and longitude.,,"from math import radians, sin, cos, acos
def distance_lat_long(slat,slon,elat,elon):
 dist = 6371.01 * acos(sin(slat)*sin(elat) + cos(slat)*cos(elat)*cos(slon - elon))
 return dist","from math import radians, sin, cos, acos
def distance_lat_long(slat,slon,elat,elon):
 dist = 6371.01 * acos(sin(slat)*sin(elat) + cos(slat)*cos(elat)*cos(slon - elon))
 return dist",correct,String Manipulation
Develop a class in Python to represent a 2D vector.,,"class Vector2D:
  def __init__(self, x, y):
    self.x = x
    self.y = y
  
  def __add__(self, other):
    return Vector2D(self.x + other.x, self.y + other.y)
  
  def __sub__(self, other):
    return Vector2D(self.x - other.x, self.y - other.y)
  
  def __mul__(self, scalar):
    return Vector2D(self.x * scalar, self.y * scalar)","class Vector2D:
  def __init__(self, x, y):
    self.x = x
    self.y = y
  
  def __add__(self, other):
    return Vector2D(self.x + other.x, self.y + other.y)
  
  def __sub__(self, other):
    return Vector2D(self.x - other.x, self.y - other.y)
  
  def __mul__(self, scalar):
    return Vector2D(self.x * scalar, self.y * scalar)",correct,OOP
"In Python, create an algorithm to find the k most frequent strings in a given list.","list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]","from collections import Counter

list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]

count = Counter(list)
k = 3

mostFrequent = count.most_common(k)

print(mostFrequent)  # Output: [('Bird', 3), ('Cat', 1), ('Dog', 1)]","from collections import Counter

list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]

count = Counter(list)
k = 3

mostFrequent = count.most_common(k)

print(mostFrequent)  # Output: [('Bird', 3), ('Cat', 1), ('Dog', 1)]",correct,Recursion
Write a Python program to evaluate a given string and return a Boolean value.,String = “The sky is blue”,"def evaluate_string(string):
 if string == 'The sky is blue':
  return True
 else:
  return False","def evaluate_string(string)
 if string == 'The sky is blue'
  return True
 else
  return False",Syntax Error,Loops
Create a program in Python that takes in a text document and counts the number of times a specific word is used in it.,"Text: ""This is a test sentence. This sentence is used for testing.""
Word: ""test""","text = ""This is a test sentence. This sentence is used for testing.""
word = ""test""

def count_words(text, word):
    words = text.split()
    count = 0
    for w in words:
        if w == word:
            count += 1
    return count

print(count_words(text, word)) #2","text = ""This is a test sentence. This sentence is used for testing.""
word = ""test""

def count_words(text, word):
    words = text.split()
    count = 0
    for w in words:
        if w == word:
            count += 1
    return count

pritn(count_words(text, word)) #2",Syntax Error,OOP
Create a python script to automatically generate new pseudorandom passwords.,,"import string
import random
 
def generate_password(length):
    password_chars = string.ascii_letters + string.digits + string.punctuation
    return ''.join(random.choice(password_chars) for i in range(length))
 
print(generate_password(20))","import string
import random
 
def generate_password(length):
    password_chars = string.ascii_letters + string.digits + ",Incomplete Answer,File I/O
In Python create a function that takes a list of numbers and returns the sum of the even numbers in the list.,"[3, 5, 8, 9, 10]","def even_sum(numbers): 
    even_sum = 0
    for num in numbers:
        if (num % 2 == 0):
            even_sum += num
    return even_sum","def even_sum(numbers): 
    even_sum = 0
    for num in numbers:
        if (num % 2 == 0):
            even_sum += num
    return even_sum",Syntax Error,OOP
Create a Python program which takes a dictionary as input and prints out a formatted string.,,"d = {'Name': 'John', 'Age': 20, 'Location': 'New York'}

def print_dict(d):
    formatted_str = ''
    for key, value in d.items():
        if formatted_str != '':
            formatted_str += ', '
        formatted_str += '{}={}'.format(key, value)
    print(formatted_str)

print_dict(d) # Output: Name=John, Age=20, Location=New York","d = {'Name': 'John', 'Age': 20, 'Location': 'New York'}

def print_dict(d):
    formatted_str = ''
    for key, value in d.items():
        if formatted_str != '':
    ",Incomplete Answer,File I/O
Develop an algorithm in Python for predicting the motion of a particle.,,"import numpy as np

def predict_motion(pos, vel, acc, dt):
  # predict position
  pos_pred = pos + vel * dt + 0.5 * acc * dt ** 2 
  
  #predict velocity
  vel_pred = vel + acc * dt
  
  return pos_pred, vel_pred

# test code
pos = np.array([0.0, 0.0])
vel = np.array([1.0, 1.0])
acc = np.array([1.0, 0.0])
dt = 0.1
pos_pred, vel_pred = predict_motion(pos, vel, acc, dt)
print(pos_pred, vel_pred)","import numpy as np

def predict_motion(pos, vel, acc, dt):
  # predict position
  pos_pred = pos + vel * dt + 0.5 * acc * dt ** 2 
  
  #predict velocity
  vel_pred = vel + acc * dt
  
  return pos_pred, vel_pred

# test code
pos = np.array([0.0, 0.0])
vel = np.array([1.0, 1.0])
acc = np.array([1.0, 0.0])
dt = 0.1
pos_pred, vel_pred = predict_motion(pos, vel, acc, dt)
print(pos_pred, vel_pred)",correct,OOP
"In Python, create a function to return the minimum of two numbers.",,"def min_value(a, b):
    if a < b:
        return a
    else:
        return b","def min_value(a, b):
    if a < b:
        return a
    else:
        return b",Syntax Error,File I/O
Convert the following program from Java to Python.,"public class SumOfTwoNumbers { 
    public static void main(String args[]) 
    { 
        int a = 10; 
        int b = 20; 
        int c = a + b; 
        System.out.println(""sum is "" + c); 
    } 
}","def sum_of_two_numbers(a, b): 
    c = a + b
    print(""sum is "" + str(c))

if __name__ == ""__main__"": 
    sum_of_two_numbers(10, 20)","def sum_of_two_numbers(a, b): 
c = a + b
print(""sum is "" + str(c))

if __name__ == ""__main__"": 
sum_of_two_numbers(10, 20)",Syntax Error,String Manipulation
Develop a Python script to extract the first sentence of each paragraph in a given text.,The quick brown fox jumps over the lazy dog. The race across the wood was won by the swift horse.,"text = ""The quick brown fox jumps over the lazy dog. The race across the wood was won by the swift horse.""

words = text.split(""."")
first_sentences = []
for sentence in words:
    first_sentences.append(sentence.split("" "")[0])

print(first_sentences)","text = ""The quick brown fox jumps over the lazy dog. The race across the wood was won by the swift horse.""

words = text.split(""."")
first_sentences = []
for sentence in words:
    first_sentences.append(sentence.split("" "")[0])

print(name, first_sentences)",Syntax Error,String Manipulation
Create a function in Python that returns the sequential median value from an array of integers.,"arr = [1, 3, 5, 6, 9, 11]","def find_median(arr):
    n = len(arr) 
    arr.sort() 
  
    if n % 2 != 0: 
        return arr[n//2] 
  
    return (arr[(n-1)//2] + arr[n//2]) / 2.0","def find_median(arr):
n = len(arr) 
arr.sort() 
  
if n % 2 != 0: 
    return arr[n//2] 
  
return (arr[(n-1)//2] + arr[n//2]) / 2.0",Syntax Error,String Manipulation
Design an algorithm in Python to find the second smallest number in an array.,"[45, 25, 12, 34, 36]","def second_smallest_num(arr):
    min1 = min(arr)
    arr.remove(min1)
    min2 = min(arr)
    return min2


arr = [45, 25, 12, 34, 36]
res = second_smallest_num(arr)
print(res)","def second_smallest_num(arr):
    min1 = min(arr)
    arr.remove(min1)
    min2 = min(arr)
    return min2


arr = [45, 25, 12, 34, 36]
res = second_smallest_num(arr)
print(res)",correct,File I/O
Generate code to serialize a Python data dictionary into a JSON object,"data = {
 ""name"": ""John Doe"",
 ""age"": 18,
 ""hobbies"": [""reading"", ""swimming"", ""gaming""],
 ""contact"": {
  ""email"": ""johndoe@example.com"",
  ""mobile"": ""+1900000000""
 }
}","import json

data_json = json.dumps(data)

# Output:
{""name"":""John Doe"",""age"":18,""hobbies"":[""reading"",""swimming"",""gaming""],""contact"":{""email"":""johndoe@example.com"",""mobile"":""+1900000000""}}","import json

data_json = json.dumps(data)

# Output:
{""name"":""John Doe"",""age"":18,""hobbies"":[""reading"",""swimming"",""gaming""],""contact"":{""email"":""johndoe@example.com"",""mobile"":""+1900000000""}}",Syntax Error,File I/O
"Create a Python class named User, which should contain three attributes username, password and email.",,"class User:
    def __init__(self, username, password, email):
        self.username = username
        self.password = password
        self.email = email","class User:
    def __init__(self, username, password, email):
        self.u",Incomplete Answer,String Manipulation
Generate a Python function to print all the even numbers from 0 to a given number.,10,"def print_even_numbers(n):
    for i in range(0, n+1):
        if i % 2 == 0:
            print(i)

print_even_numbers(10)","def pritn_even_numbers(n):
    for i in range(0, n+1):
        if i % 2 == 0:
            pritn(i)

pritn_even_numbers(10)",Syntax Error,OOP
"Rewrite the following piece of code in Python, that calculates the sum of two variables.","int x = 2;
int y = 4;
int sum = x + y;","x = 2
y = 4

sum = x + y
print(sum) # 6","x = 2
y = 4

sum = x + y
print(sum) # 6",correct,Recursion
Create a python object abstract class that implements the following methods:,,"class ObjectAbstract:
    def __init__(self):
        self.data = None

    def get_data(self):
        return self.data

    def set_data(self, data):
        self.data = data

    def print_data(self):
        print(self.data)","class ObjectAbstract:
    def __init__(self):
        self.data = None

    def get_data(self):
        return self.data

    def set_data(self, data):
        self.data = data

    def pritn_data(self):
        pritn(self.data)",Syntax Error,Loops
Convert the given JSON data into Python dictionary.,"{""name"": ""John"", ""age"": 30, ""hobby"": ""running""}","import json

data = '{""name"": ""John"", ""age"": 30, ""hobby"": ""running""}'
dict_data = json.loads(data)

print(dict_data)","import json

data = '{""name"": ""John"", ""age"": 30, ""hobby"": ",Incomplete Answer,OOP
Design a Python script to print out a list of unique numbers from 0 to N.,N = 10,"numbers = [i for i in range(0, N+1)]
unique_numbers = list(set(numbers))

print(unique_numbers)","numbers = [i for i in range(0, N+1]
unique_numbers = list(set(numbers

print(unique_numbers",Syntax Error,OOP
Write a function to find the vertex of a parabola.,,"def parabola_vertex(a, b, c): 
  vertex=(((-b / (2 * a)),(((4 * a * c) - (b * b)) / (4 * a))))
  return vertex","def parabola_vertex(a, b, c): 
  vertex=(((-b / (2 * a)",Incomplete Answer,Recursion
Create a Python program to compute the sum of all elements in a given array.,"array = [1, 2, 3, 4, 5]","def compute_sum(array):
    sum = 0
    for element in array:
        sum += element
    return sum
    
if __name__ == '__main__':
    array = [1, 2, 3, 4, 5]
    print(compute_sum(array))","def compute_sum(array):
    sum = 0
    for element in array:
        sum += element
    return sum
    
if __name__ == '__main__':
    array = [1, 2, 3, 4, 5]
    print(compute_sum(array))",correct,File I/O
Construct a python program for linear search for a given element in an array.,"Array: [1, 2, 3, 4, 5] 
Element: 4","def linearSearch(array, element): 
    for i in range(len(array)): 
        if array[i]==element: 
            return i
    return -1

linearSearch([1, 2, 3, 4, 5], 4) # returns 3","def linearSearch(array, element): 
    for i in range(len(array)): 
        if array[i]==element: 
            return i
    return -1

linearSearch([1, 2, 3, 4, 5], 4) # returns 3",correct,OOP
Rewrite the following list comprehension in a more pythonic way.,values = [x*2 for x in range(10)],"values = list(map(lambda x: x*2, range(10)))",values = list(map(lamb,Incomplete Answer,String Manipulation
Make Python program to filter out all even numbers from a given list,"[10, 11, 5, 16, 4, 9]","def filter_even(arr):
    result = []
    for i in arr:
        if i % 2 != 0:
            result.append(i)
    return result","def filter_even(arr):
    result = []
    for i in arr:
        if i % 2 != 0:
            result.append(i)
    return result",correct,String Manipulation
Write a function to find the nth octagonal number.,,"def is_octagonal(n): 
	return 3 * n * n - 2 * n ","def is_octagonal(n): 
	return 3 * n * n - 2 * n ",correct,File I/O
Write a python program to calculate the total of the following list of numbers,"[2, 4, 5, 6, 8]","def calculate_total(lst):
    total = 0
    for item in lst:
        total += item
    return total

lst = [2, 4, 5, 6, 8]
total = calculate_total(lst)
print(total)","def calculate_total(lst):
total = 0
for item in lst:
    total += item
return total

lst = [2, 4, 5, 6, 8]
total = calculate_total(lst)
print(total)",Syntax Error,Recursion
Write a Bash script to check if a specific program is installed on the current system.,Program Name = Python,"#!/usr/bin/env bash

if type -p python &> /dev/null; then
  echo 'Python is installed!'
else 
  echo 'Python is not installed!'
fi","#!/usr/bin/env bash

if type -p python &> /dev/null; then
  echo 'Python is installed!'
else 
  echo 'Python is not installed!'
fi",Syntax Error,File I/O
Generate a function in Python that adds two input numbers.,,"def add(x, y):
    return x + y","def add(x, y):
",Incomplete Answer,String Manipulation
Edit the following code snippet to calculate average in Python.,"def calculate_avg(values):
  total = 0","def calculate_avg(values):
  total = 0
  count = len(values)
 
  for value in values:
    total += value
 
  return total/count","def calculate_avg(values):
  total = 0
  count = len(values)
 
  for value in values:
total += value
 
  return total/count",Syntax Error,Loops
Design a stack class in Python with methods to push and pop data.,,"class Stack:
    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def isEmpty(self):
        return self.items == []","class Stack:
    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def isEmpty(self):
        return self.items == []",Syntax Error,OOP
Write a function to find common first element in given list of tuple.,,"def group_tuples(Input): 
	out = {} 
	for elem in Input: 
		try: 
			out[elem[0]].extend(elem[1:]) 
		except KeyError: 
			out[elem[0]] = list(elem) 
	return [tuple(values) for values in out.values()] ","def group_tuples(Input): 
	out = {} 
	for elem in Input: 
		try: 
			out[elem[0]].extend(elem[1:]) ",Incomplete Answer,Loops
Create a Python program that finds the longest word in a sentence.,My name is John,"def find_longest_word(sentence):
    # Split sentence into a list of words
    words = sentence.split()
    # Track the longest word
    longest_word = ''
    # Iterate over the list of words
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    # Return the longest word
    return longest_word

print(find_longest_word(""My name is John""))","def find_longest_word(sentence):
    # Split sentence into a list of words
    words = sentence.split()
    # Track the longest word
    longest_word = ''
    # Iterate over the list of words
 ",Incomplete Answer,String Manipulation
Generate a Python program to randomly fill the elements of an NxN matrix with a number 1,,"from random import randint
 
def fill_matrix(n):
    matrix = [[0 for y in range(n)] for x in range(n)]
    for i in range(n):
        for j in range(n):
            matrix[i][j] = randint(1,9)
    return matrix","from random import randint
 
def fill_matrix(n):
    matrix = [[0 for y in range(n)] for x in range(n)]
 ",Incomplete Answer,OOP
Write a python code to calculate the sum of numbers in a list except for the last element.,"[1,2,3,4,5]","def sum_except_last(arr):
    total = 0
    for i in range(len(arr) - 1):
        total += arr[i]
    return total

if __name__ == '__main__':
    output = sum_except_last([1,2,3,4,5])
    print(output)","def sum_except_last(arr):
    total = 0
    for i in range(len(arr) - 1):
        total += arr[i]
   ",Incomplete Answer,String Manipulation
Generate the Python code for a pipelie of KMeans and GaussianMixture clustering models.,n_clusters = 10,"from sklearn.cluster import KMeans, GaussianMixture
cluster = KMeans(n_clusters=n_clusters).fit(X)
pipeline = GaussianMixture(n_components=2).fit(cluster.cluster_centers_)","from sklearn.cluster import KMeans, GaussianMixture
cluster = KMeans(n_clusters=n_clusters).fit(X)
pipeline = GaussianMixture(n_components=2).fit(cluster.cluster_centers_)",correct,String Manipulation
Create a Python function that sorts the numbers in a given list in ascending order.,"[8,3,5,2,9,7]","def sort_list(list):
    list.sort()
    return list

if __name__ == ""__main__"":
    l = [8,3,5,2,9,7]
    print(sort_list(l))","def sort_list(list:
    list.sort(
    return list

if __name__ == ""__main__"":
    l = [8,3,5,2,9,7]
    print(sort_list(l",Syntax Error,OOP
Create a for-loop in Python that prints the numbers from 0 to 10.,,"for i in range(11):
    print(i)","for i in range(11):
    print(i)",correct,String Manipulation
Write a python program to print the items in the following dictionary,"dictionary = {
  ""fruit"": ""apple"",
  ""animal"": ""dog""
}","for key,val in dictionary.items():
    print(f""{key}: {val}"")","for key,val in dictionary.item",Incomplete Answer,String Manipulation
Reverse the elements of a given array in Python.,"arr = [1, 4, 6, 8, 5]","def reverse_array(arr):
    n = len(arr) 

for i in range(n // 2): 
	arr[i], arr[n - i - 1] = arr[n - i - 1], arr[i] 

return arr","def reverse_array(arr):
    n = len(arr) 

for i in range(n // 2): 
	arr[i], arr[n - i - 1] = arr[n - i - 1], arr[i] 

return arr",correct,String Manipulation
What is the code for using the Python Requests module to post data to the server?,"URL: ""http://example.com/data""","import requests
 
url = ""http://example.com/data""
data = {""name"":""John Doe"",""age"":30}
 
response = requests.post(url, data = data)","import requests
 
url = ""http://example.com/data""
data = {""name"":""John Doe"",""age"":30}
 
response = requests.post(url, data = data)",Syntax Error,OOP
Create a Python program to calculate the total cost of an order based on item cost and quantity.,"Item cost: 10
Quantity: 5","def calculate_cost(item_cost, quantity):
 return item_cost * quantity

cost = calculate_cost(10, 5)
print('The total cost of your order is:', cost)  # The total cost of your order is: 50","def calculate_cost(item_cost, quantity)
 return item_cost * quantity

cost = calculate_cost(10, 5)
print('The total cost of your order is', cost)  # The total cost of your order is 50",Syntax Error,String Manipulation
Write a function to find the third angle of a triangle using two angles.,,"def find_angle(a,b):
 c = 180 - (a + b)
 return c
","def find_angle(a,b):
 c =",Incomplete Answer,String Manipulation
Find the maximum number in the following list using a Python program.,"[8, 5, -1, 7, 2]","def find_max(my_list):
    max_num = my_list[0]
    for num in my_list:
        if num > max_num:
            max_num = num
    return max_num

my_list = [8, 5, -1, 7, 2]

print(find_max(my_list))","def find_max(my_list):
    max_num = my_list[0]
    for num in my_list:
        if num > max_num:
            max_num = num
    return max_num

my_list = [8, 5, -1, 7, 2]

print(find_max(my_list))",correct,File I/O
Write a Python code snippet to generate a pseudo-random number between 0 and 1.,,"import random

random_number = random.random()
print(random_number)","import random

random_number = ra",Incomplete Answer,OOP
Write a python function to find the sum of even numbers at even positions.,,"def sum_even_and_even_index(arr,n):  
    i = 0
    sum = 0
    for i in range(0,n,2): 
        if (arr[i] % 2 == 0) : 
            sum += arr[i]  
    return sum","def sum_even_and_even_index(arr,n):  
    i = 0
    sum = 0
    for i in range(0,",Incomplete Answer,String Manipulation
Produce a Python program that outputs the factorials of the first 10 positive integers.,,"def factorial(n):
    result = 1
    for x in range(2, n + 1):
        result = result * x
    return result

for n in range(1, 11):
    print(n, ""! ="", factorial(n))","def factorial(n):
result = 1
for x in range(2, n + 1):
    result = result * x
return result

for n in range(1, 11):
print(n, ""! ="", factorial(n))",Syntax Error,Recursion
Create a lambda expression in Python to return the largest number from a list of numbers.,,largestNum = lambda a: max(a),largestNum = lambda a max(a),Syntax Error,File I/O
Write a Python program to calculate the distance between two points,,"def calculate_distance(x1, y1, x2, y2):
    return ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5","def calculate_distance(x1, y1, x2, y2):
    r",Incomplete Answer,OOP
Edit the following Python code to return the same output with fewer code lines.,"def my_func(list):
 for i in list:
 if i % 2 == 0:
 output = True
 else:
 output = False
 return output","def my_func(list):
 return any(i % 2 == 0 for i in list)","def my_func(list):
 return any(i % 2 == 0 for i in list)",correct,OOP
Design a class in Python to store value pairs.,,"class ValuePair():
    def __init__(self, key, value):
        self.key = key
        self.value = value
    
    def get_key(self):
        return self.key
    
    def get_value(self):
        return self.value","class ValuePair():
    def __init__(self, key, value):
        self.key = key
        self.value = value
    
    def get_key(self):
        return self.key
    
    def get_value(self):
        return self.value",correct,Loops
Optimize the given code in Python.,"def fibonacci(num):
    a = 0
    b = 1
    for i in range(0, num):
        temp = a
        a = b
        b = temp + b
    return a","def fibonacci(num):
 a, b = 0, 1
 for _ in range(num):
  a, b = b, a + b
 return a","def fibonacci(num:
 a, b = 0, 1
 for _ in range(num:
  a, b = b, a + b
 return a",Syntax Error,String Manipulation
Create a function in Python that takes two strings as inputs and prints out the longer of the two strings.,"Hello
World","def longestString(str1, str2):
  if len(str1) > len(str2):
    return str1
  else:
    return str2

print(longestString(""Hello"", ""World""))","def longestString(str1, str2):
  if len(str1) > len(str2):
    return",Incomplete Answer,OOP
Construct a class in Python to represent an employee.,,"class Employee:
    def __init__(self, first_name, last_name, salary):
        self.first_name = first_name
        self.last_name = last_name
        self.salary = salary
 
    def get_full_name(self):
        return self.first_name + "" "" + self.last_name
 
    def get_annual_salary(self):
        return self.salary * 12","class Employee:
    def __init__(self, first_name, last_name, salary):
        self.first_name = first_name
        self.last_name = last_name
        self.salary = salary
 
    def get_full_name(self):
        return self.first_name + "" "" + self.last_name
 
    def get_annual_salary(self):
        return self.salary * 12",Syntax Error,String Manipulation
"Create a Python function that takes a string and a pattern, and returns the number of times the pattern appears in the string.","string = ""hello hello world""
pattern = ""hello""","def countSubstring(string, sub_string):
  count = 0 
  for i in range(0, len(string)-len(sub_string)+1):
    if (string[i:i+len(sub_string)] == sub_string):
      count+=1
  return count
  
print(countSubstring(string, pattern))","def countSubstring(string, sub_string):
  count = 0 
  for i in range(0, len(string)-len(sub_string)+1):
    if (s",Incomplete Answer,OOP
Write a Python function to convert a given number into its corresponding Roman numeral.,99,"def convert_to_roman(num):
    int_nums = [1000, 500, 100, 50, 10, 5, 1]
    roman_nums = ['M', 'D', 'C', 'L', 'X', 'V', 'I']
    roman_value = ''

    i = 0
    while num > 0:
        for _ in range(num // int_nums[i]):
             roman_value += roman_nums[i]
             num -= int_nums[i]
        i += 1

    return roman_value

print(convert_to_roman(99))
# Output: 'XCIX'","def convert_to_roman(num):
    int_nums = [1000, 500, 100, 50, 10, 5, 1]
    roman_nums = ['M', 'D', 'C', 'L', 'X', 'V', 'I']
    roman_value = ''

    i = 0
    while num > 0:
        for ",Incomplete Answer,String Manipulation
Edit the following Python code to make the program run without any errors.,"s = input(""Please enter a string: "")
print(""The reverse of the string is: s[::-1]","s = input(""Please enter a string: "")
print(""The reverse of the string is: "" + s[::-1])","s = input(""Please enter a string: "")
print(""The reverse of the string is: "" + s[::-1])",correct,String Manipulation
Create a python script that takes 2 arguments - an array and an integer - and prints the sum of the array multiplied by the integer.,"Array: [3, 5, 8] 
Integer: 5","def sum_arr(arr, num):
    total = 0
    for i in arr:
        total += i
    total *= num
    return total

# Output 
95","def sum_arr(arr, num)
    total = 0
    for i in arr
        total += i
    total *= num
    return total

# Output 
95",Syntax Error,File I/O
Write a Python program that optimizes an array to find the smallest and largest numbers in the array.,"[45, 2, 84, 33, 8, 1, 2]","def optimize(arr):
    min = arr[0] 
    max = arr[0] 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
  
        if arr[i] > max: 
            max = arr[i] 
  
    print(""Minimum element is:"", min) 
    print(""Maximum element is:"", max)

# Main   
arr = [45, 2, 84, 33, 8, 1, 2]
optimize(arr)","def optimize(arr):
    min = arr[0] 
    max = arr[0] 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
  
        if arr[i] > max: 
            max = arr[i] 
  
    print(""Minimum element is:"", min) 
    print(""Maximum element is:"", max)

# Main   
arr = [45, 2, 84, 33, 8, 1, 2]
optimize(arr)",correct,OOP
Rearrange the words in the following sentence to create a meaningful sentence.,"sentence = ""program a to write Python""",Write a program in Python.,Write a program in Python.,correct,Loops
"Using the provided data, create a Python program that can categorize a book as fiction or non-fiction.","{""title"": ""The Catcher in the Rye"", ""author"": ""JD Salinger"", ""genre"": ""Novel""}","import json

data = '{""title"": ""The Catcher in the Rye"", ""author"": ""JD Salinger"", ""genre"": ""Novel""}'
book_data = json.loads(data)

if book_data[""genre""] == ""Novel"":
 print(""Book is fiction"")
else:
 print(""Book is not fiction"")","import json

data = '{""title"": ""The Catcher in the Rye"", ""author"": ""JD Salinger"", ""genre"": ""Novel""}'
book_data = json.loads(data)

if book_data[""genre""] == ""Novel"":
 print(""Book is fiction"")
else:
 print(""Book is not fiction"")",correct,String Manipulation
"Create a Python program to check if a given number is in a given linear list or not, and return the position if found.","List: [2, 3, 5, 6, 8, 9], Number: 5","def is_in_linear_list(lst, num):
    for i, val in enumerate(lst):
        if val == num:
            return ""Found at {0} position"".format(i)

    return False

lst = [2, 3, 5, 6, 8, 9]
num = 5
result = is_in_linear_list(lst, num)
print(result)","def is_in_linear_list(lst, num):
    for i, val in enumerate(lst):
        if val == num:
            return ""Found at {0} position"".format(i)

    return False

lst = [2, 3, 5, 6, 8, 9]
num = 5
result = is_in_linear_list(lst, num)
print(result)",correct,Recursion
Implement a function in Python to print all the uppercase letters from a given string.,"String: ""Hello World""","def print_uppercase(s):
    for c in s:
        if c.isupper():
            print(c)

print_uppercase(""Hello World"")
# Output:
# H
# W","def print_uppercase(s):
    for c in s:
        if c.isupper():
            print(c)

print_uppercase(""Hello World"")
# Output:
# H
# W",correct,Recursion
Create a function in Python that takes an array of integers and prints out the largest and smallest numbers.,,"def print_min_max(arr):
    min_val = min(arr)
    max_val = max(arr)
    print('Smallest number: ', min_val)
    print('Largest number: ', max_val)","def print_min_max(arr):
    min_val = min(arr)
    max_val = max(arr)
    print('Smallest number: ', min_val)
    print('Largest number: ', max_val)",correct,File I/O
Create a function in Python which takes two arguments – an array of integers and an integer x – and returns a list of all pairs in the array with a sum equal to x.,"array = [4, 6, 2, 8]
x = 10","def equalSums(array, x): 
    result = [] 

    for i in range(0, len(array)-1): 
        for j in range(i + 1, len(array)): 
            if array[i] + array[j] == x: 
                result.append([array[i], array[j]]) 
  
    return result 
  
print(equalSums(array, x))","def equalSums(array, x) 
    result = [] 

    for i in range(0, len(array)-1) 
        for j in range(i + 1, len(array)) 
            if array[i] + array[j] == x 
                result.append([array[i], array[j]]) 
  
    return result 
  
print(equalSums(array, x))",Syntax Error,OOP
Create a sentiment analysis system in Python using NLTK to provide a score of how positive or negative a review is.,,"import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

# Create a SentimentIntensityAnalzyer
analyzer = SentimentIntensityAnalyzer()
 
# Calculate scores
scores = analyzer.polarity_scores(text)

# Print scores
print(scores)","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

# Create a SentimentIntensityAnalzyer
analyzer = SentimentIntensityAnalyzer()
 
# Calculate scores
scores = analyzer.polarity_scores(text)

# Print scores
print(scores)",correct,Loops
"Write a single line of code to display the current date and time in the format ""Month day year, Hour:Minute” using the Python module datetime.",,"print(datetime.datetime.now().strftime('%b %d %Y, %H:%M'))","print(datetime.datetime.now().strftime('%b %d %Y, %H:%M'))",correct,Loops
Can you create a web scraper in Python to extract the titles of articles from a newspaper website?,http://example.com/newspaper,"import requests
from bs4 import BeautifulSoup

url = ""http://example.com/newspaper""

# fetch data from the given URL
r = requests.get(url)

# create a BeautifulSoup object
soup = BeautifulSoup(r.content, ""lxml"")

# extract the title of all articles
for article_title in soup.find_all('h3', class_='title'):
    print(article_title.text)","import requests
from bs4 import BeautifulSoup

url = ""http://example.com/newspaper""

# fetch data from the given URL
r = requests.get(url)

# create a BeautifulSoup object
soup = BeautifulSoup(r.content, ""lxml"")

# extract the title of all articles
for article_title in soup.find_all('h3', class_='title'):
    pritn(article_title.text)",Syntax Error,OOP
Build a Python program that takes in two lists as an input and returns a third list with the common elements across the two inputs.,"list1 = [2, 3, 4, 5, 6]
list2 = [3, 5, 7, 8, 9]","def common_elements(list1, list2):
    common_elements = []

    for element in list1: 
        if element in list2:
            common_elements.append(element)
    return common_elements

list1 = [2, 3, 4, 5, 6]
list2 = [3, 5, 7, 8, 9]

print(common_elements(list1, list2))","def common_elements(list1, list2):
    common_elements = []

    for element in list1: 
        if element in list2:
            common_e",Incomplete Answer,Loops
Write a Python function which extracts zip codes from a provided string.,"My address is 123 Main St, ZIP 12345","import re

def extract_zip_codes(string):
    zip_codes = re.findall(""(?<=ZIP )\d+"", string)
    return zip_codes

print(extract_zip_codes(""My address is 123 Main St, ZIP 12345""))","import re

def extract_zip_codes(string):
    zip_codes = re.findall(""(?<=ZIP )\d+"", stri",Incomplete Answer,String Manipulation
Write a Python program to find the prime numbers from a list given by the user.,"mylist = [3,4,7,11,13,18]","def isPrime(num):
    for i in range (2, num): 
        if num % i == 0: 
            return False
    return True  
  
# Driver Code 
mylist = [3,4,7,11,13,18]
  
for num in mylist: 
    # if condition is true, print the number 
    if isPrime(num): 
        print(num, end ="" "")","def isPrime(num):
    for i in range (2, num): 
        if num % i == 0: 
            return False
    return True  
  
# Driver Code 
mylist = [3,4,7,11,13,18]
  
for num in mylist: 
    # if condition is true, print the number 
    if isPrime(num): 
        print(num, end ="" "")",correct,Loops
Write a script in Python to delete a given element from an array.,,"def delete_element(arr, element):
    if element in arr:
        arr.remove(element)
    return arr","def delete_element(arr, element):
    if element in arr:
        arr.remove(element)
    return arr",correct,String Manipulation
Create an object in Python that stores a string of text.,,"my_string = ""This is a string of text""

my_object = {
    ""string"": my_string
}","my_string = ""This is a string of text""

my_object = {
    ""string"" my_string
}",Syntax Error,String Manipulation
Construct a code snippet for Python to check whether a number is even or odd.,,"def is_even(n):
    if n % 2 == 0:
        print(""Even"")
    else:
        print(""Odd"")

is_even(4)","def is_even(n):
    if n % 2 == 0:
        print(",Incomplete Answer,OOP
Create a program to solve linear equations in Python.,,"import numpy as np 
 
def solve_linear_eqns(coefficients, constants): 
    # the matrix of coefficients 
    matrix = np.array(coefficients) 
    # the vector of constants 
    vector = np.array(constants)  
    # solve the system of linear equations 
    solution = np.linalg.solve(matrix, vector) 
    return solution","import numpy as np 
 
def solve_linear_eqns(coefficients, constants): 
# the matrix of coefficients 
matrix = np.array(coefficients) 
# the vector of constants 
vector = np.array(constants)  
# solve the system of linear equations 
solution = np.linalg.solve(matrix, vector) 
return solution",Syntax Error,File I/O
Design a Python class to accommodate a stack of characters.,,"class Stack():
    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def isEmpty(self):
        return self.items == []

    def peek(self):
        if not self.isEmpty():
            return self.items[-1]","class Stack():
    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return ",Incomplete Answer,Loops
Generate an array with all the prime numbers from 1 to 500 using python.,,"def generate_primes(n):
  prime_list = []
  for n in range(1, n + 1):
    for i in range(2,n):
      if n % i == 0:
        break
    else:
      prime_list.append(n)
  return prime_list

prime_list = generate_primes(500)","def generate_primes(n):
  prime_list = []
  for n in range(1, n + 1):
for i in range(2,n):
  if n % i == 0:
    break
else:
  prime_list.append(n)
  return prime_list

prime_list = generate_primes(500)",Syntax Error,Loops
Create a Python function to combine two strings.,"String 1: Hello
String 2: World","def combine(str1, str2):
  return str1 + str2","def combine(str1, str2):
  return str1 + str2",Syntax Error,OOP
Write a Python program to compare two strings and print the number of times the second string appears in the first string.,"""The quick brown fox jumps over the lazy dog"", ""fox""","def count_word_occurrence(str1, str2):
    count = 0
    for word in str1.split():
        if word == str2:
            count += 1

    return count

occurrence = count_word_occurrence(""The quick brown fox jumps over the lazy dog"", ""fox"")
print(occurrence)","def count_word_occurrence(str1, str2):
    count = 0
    for word in str1.split():
        if word == str2:
            count +=",Incomplete Answer,OOP
Convert the following Python code to JavaScript.,"x = 3
if x >= 3:
    print(""x is greater than or equal to 3"")","let x = 3;
if(x >= 3){
    console.log('x is greater than or equal to 3');
}","let x = 3;
if(x >= 3){
    console.log('x is greater than or equal to 3');
}",correct,File I/O
Create a program in Python which takes a string and finds the number of each English vowels.,sentence = 'Hello World',"def count_vowels(sentence):
    vowels = {'a': 0, 'e': 0, 'i': 0, 'o': 0, 'u': 0}
    for char in sentence.lower():
        if char in vowels:
            vowels[char] += 1
    return vowels

sentence = 'Hello World'  
print(count_vowels(sentence)) # Output = {'a': 0, 'e': 1, 'i': 0, 'o': 2, 'u': 0}","def count_vowels(sentence):
    vowels = {'a': 0, 'e': 0, 'i': 0, 'o': 0, 'u': 0}
    for char in sentence.lower():
        if char in vowels:
            vowels[char] += 1
    return vowels

sentence = 'Hello World'  
print(name, count_vowels(sentence)) # Output = {'a': 0, 'e': 1, 'i': 0, 'o': 2, 'u': 0}",Syntax Error,Loops
Write a Python program to find the list of words that are longer than n from a given list of words.,"word_list = [""cat"", ""dog"", ""dragon"", ""fish"", ""tiger""]
n = 4","def get_long_words(word_list, n):
  return [w for w in word_list if len(w) > n]

long_words = get_long_words(word_list, n)
print(long_words)","def get_long_words(word_list, n):
  return [w for w in word_list if le",Incomplete Answer,Loops
"Given a string, write a python program to count the number of words in the string.",This is a test string,"def count_words(string):
    words = string.split("" "")
    num_words = len(words)
    return num_words

result = count_words(""This is a test string"")
print(""Number of words:"", result)","def count_words(string):
words = string.split("" "")
num_words = len(words)
return num_words

result = count_words(""This is a test string"")
print(""Number of words:"", result)",Syntax Error,String Manipulation
Specify a Python function that takes a ``URL`` address and returns the exact content found at that link.,,"def getUrlContent(url):
    response = requests.get(url)
    return response.content.decode('utf-8')","def getUrlContent(url):
    response = requests.ge",Incomplete Answer,Recursion
"Create a Python module that takes a list of numbers, calculates the mean, and returns it.","[1, 7, 11, 13]","def calculate_mean(numbers):
    total_sum = 0
    for num in numbers:
        total_sum += num
    mean = total_sum / len(numbers)
    return mean

list_of_numbers = [1, 7, 11, 13]
mean = calculate_mean(list_of_numbers)
print(mean) # 7.5","def calculate_mean(numbers):
    total_sum = 0
    for num in numbers:
        total_sum += num
    mean = total_sum / len(numbers)
    return mean

list_of_numbers = [1, 7, 11, 13]
mean = calculate_mean(list_of_numbers)
print(mean) # 7.5",correct,Recursion
Create a Python program to determine whether a given number is prime or not.,Number: 47,"def is_prime(num):
    if num > 1:
        for i in range(2,int(num**0.5)+1):
            if (num % i) == 0:
                return False
    else:
        return False
    return True

num = 47
if (is_prime(num)):
    print(num,""is a prime number"")
else:
    print(num,""is not a prime number"")","def is_prime(num):
    if num > 1:
        for i in range(2,int(num**0.5)+1):
            if (num % i) == 0:
                return False
    else:
        return False
    return True

num = 47
if (is_prime(num)):
    print(num,""is a prime number"")
else:
    print(num,""is not a prime number"")",correct,File I/O
"Write a Python script to process the string ""This is a sample string"". The script should remove all the duplicate consecutive words, without changing the order of words.",,"new_string = []
prev_word = ''
for word in ""This is a sample string"".split():
    if word != prev_word:
        new_string.append(word)
    prev_word = word
print(' '.join(new_string))","new_string = []
prev_word = ''
for word in ""This is a sample string"".split():
    if word !=",Incomplete Answer,File I/O
Translate the following into Python: Create a loop that prints out the following pattern: 1 3 5 7 9 11,,"for num in range(1, 12, 2):
    print(num, end="" "")","for num in range(1, 12, 2",Incomplete Answer,Loops
Write a python function to find the maximum occuring divisor in an interval.,,"def find_Divisor(x,y):  
    if (x==y): 
        return y 
    return 2","def find_Divisor(x,y):  
    if (x==",Incomplete Answer,Recursion
Produce a python script to calculate the root mean square error (RMSE) of two given datasets.,,"import numpy as np

def RMSE(predictions, targets):
    """"""
    Calculate the root mean square error of two given datasets.
    """"""
    mse = np.mean((predictions - targets)**2)
    return np.sqrt(mse)

#Input data
y_true = [1,2,3]
y_pred = [2,2,2]

rmse = RMSE(y_pred,y_true)

print(""The RMSE is: "", rmse)","import numpy as np

def RMSE(predictions, targets):
    """"""
    Calculate the root mean square error of two given datasets.
    """"""
    mse = np.mean((predictions - targets)**2)
    return np.sqrt(mse)

#Input data
y_true = [1,2,3]
y_pred = [2,2,2]

rmse = RMSE(y_pred,y_true)

print(""The RMSE is: "", rmse)",correct,File I/O
Create a Python script to implement a linear search for a given list of numbers.,"numbers_list = [1, 4, 5, 6, 7, 8 , 10]
number = 6","def linear_search(numbers_list, number):
    """"""Implements a linear search for a given list of numbers and returns the index of the number if exists""""""
    
    for index, element in enumerate(numbers_list):
        if element == number:
            return index
    return -1","def linear_search(numbers_list, number):
    """"""Implements a linear search for a given list of numbers and returns the index of the number",Incomplete Answer,OOP
Create a Python program to track and record the frequency of each word from a given list of words.,"['Good', 'Outlook', 'Good', 'Luck', 'Bad', 'Outlook', 'Good']","words = ['Good', 'Outlook', 'Good', 'Luck', 'Bad', 'Outlook', 'Good']
 
freq = {}
 
for word in words:
 if word in freq:
 freq[word] += 1
 else:
 freq[word] = 1
 
print(freq)","words = ['Good', 'Outlook', 'Good', 'Luck', 'Bad', 'Outlook', 'Good']
 
freq = {}
 
for word in words:
 if word in freq:
 freq[word] += 1
 else:
 freq[word] = 1
 
print(freq)",correct,Recursion
Create a Python program to calculate day of the week for a given date.,"(2020, 05, 22)","import datetime

day, month, year = (2020, 05, 22)

weekdays = [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""]

inpDate = datetime.date(year, month, day)
dayOfWeek = inpDate.weekday()
print(weekdays[dayOfWeek])","import datetime

day, month, year = (2020, 05, 22)

weekdays = [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ",Incomplete Answer,OOP
Design a function to calculate the volume of a cube in Python.,,"def cube_volume(side_length):
  volume = side_length ** 3
  return volume","def cube_volume(side_length):
  volu",Incomplete Answer,File I/O
Can you generate a Python program that takes a string as input and returns a dictionary with the count of each letter in the string?,"""hello world""","def letter_count(s):
    count = {}
    for c in s:
        if c not in count:
            count[c] = 1
        else:
            count[c] += 1
    return count

s = ""hello world""
count = letter_count(s)
print(count) # {'h': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'w': 1, 'r': 1, 'd': 1}","def letter_count(s):
    count = {}
    for c in s:
        if c not in count:
            count[c] = 1
        else:
            count[c] += 1
    return count

s = ""hello world""
count = letter_count(s)
print(count) # {'h': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'w': 1, 'r': 1, 'd': 1}",correct,OOP
Develop a Python class that reads and stores a list of integers.,"[1, 2, 3, 4, 5]","class ListOfInts:
    def __init__(self, numbers):
        self.numbers = numbers
    
    def get_list(self):
        return self.numbers","class ListOfInts:
    def __init__(self, numbers):
        self.numbers = numbers
    
    def get_list(self):
        return self.numbers",correct,Recursion
Create a python program that can generate random passwords of at least 6 characters long that contain letters and numbers.,,"import string
import random

def random_password():
    letters = string.ascii_letters
    numbers = string.digits
    password_characters = letters + numbers
    password = ''.join(random.choice(password_characters) for i in range(6))
    return password

print(random_password())","import string
import random

def random_password():
    letters = string.ascii_letters
    numbers = string.digits
    password_characters =",Incomplete Answer,Recursion
Create a Python function to remove all duplicate elements in a given list.,"list = [1, 2, 3, 4, 4, 4, 5, 5]","def removeDuplicates(lst):
 return list(set(lst))

list = [1, 2, 3, 4, 4, 4, 5, 5]
print(removeDuplicates(list))","def removeDuplicates(lst):
 return list(set(lst))

list = [1, 2, 3, 4, 4, 4, 5, 5]
print(removeDuplicates(list))",correct,Loops
Write a python function to check if a given number is a perfect number or not (a perfect number is a number that is equal to the sum of its divisors except itself).,,"def is_perfect_number(num):
    divs = []
    for i in range(1,num):
        if num % i == 0:
            divs.append(i)
    if num == sum(divs):
        return True
    else:
        return False","def is_perfect_number(num):
    divs = []
    for i in range(1,num):
        if num % i == 0:
            divs.append(i)
    if num == sum(divs):
        return True
    else:
        return False",correct,Recursion
Write a python function to find the sum of squares of first n odd natural numbers.,,"def square_Sum(n):  
    return int(n*(4*n*n-1)/3) ","def square_Sum(n):  
    return int(n*(4*n*n-1)/3) ",Syntax Error,File I/O
Create a web scraper with Python that collects all the titles of posts from a website.,https://example.com,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

post_titles = [title.text for title in soup.find_all('h2', class_='post-title')]

for post_title in post_titles:
 print(post_title)","import requests
from bs4 import BeautifulSoup

url = 'https://example.com'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

post_titles = [title.text for title in soup.find_all('h2', class_='post-title')]

for post_title in post_titles:
 print(post_title)",correct,File I/O
"Create a Python class for a Stack data structure. This class should include methods for pushing, popping, and peeking elements from the stack.",,"class Stack:
 def __init__(self):
  self.items = []
 
 def push(self, item):
  self.items.append(item)
 
 def pop(self):
  return self.items.pop()
 
 def peek(self):
  return self.items[len(self.items)-1]
 
 def size(self):
  return len(self.items)
 
 def isEmpty(self):
  return self.items == []","class Stack
 def __init__(self)
  self.items = []
 
 def push(self, item)
  self.items.append(item)
 
 def pop(self)
  return self.items.pop()
 
 def peek(self)
  return self.items[len(self.items)-1]
 
 def size(self)
  return len(self.items)
 
 def isEmpty(self)
  return self.items == []",Syntax Error,String Manipulation
Write a Python class to represent a polynomial of degree n.,<no input>,"class Polynomial:
    def __init__(self, coeff):
        self.coeff = coeff

    def __call__(self, x):
        result = 0
        for idx, c in enumerate(self.coeff):
            result += c * x ** idx
        return result","class Polynomial:
    def __init__(self, coeff):
        self.coeff = coeff

    def __call__(self, x):
        ",Incomplete Answer,Loops
Develop a python program to convert pounds to kilograms.,1 pound,"weight_pounds = 1
weight_kilograms = weight_pounds/2.2
print(""Weight in kilograms is:"", weight_kilograms)","weight_pounds = 1
weight_kilograms = weight_pounds/2",Incomplete Answer,Recursion
"Write a Python program to generate a dictionary which contains (i, i*i) such that i is an int between 1 and N.",N = 10,"""""""
A Python program to generate a dictionary which contains (i, i*i) such that i is an int between 1 and N
""""""

N = 10
my_dict = {}

# Generate the dictionary
for i in range(1, N+1):
    my_dict[i] = i * i

# Print the dictionary
print(my_dict)","""""""
A Python program to generate a dictionary which contains (i, i*i) such that i is an int between 1 and N
""""""

N = 10
my_dict = {}

# Generate the dictionary
for i in range(1, N+1):
my_dict[i] = i * i

# Print the dictionary
print(my_dict)",Syntax Error,String Manipulation
"Produce a single Python statement that multiplies the values of the variables x, y, and z, and stores the result in the variable result.","x = 5, y = 10, z = 20",result = x * y * z,result = x * y * z,Syntax Error,OOP
Write a function to find the maximum length of the subsequence with difference between adjacent elements for the given array.,,"def max_len_sub( arr, n): 
	mls=[] 
	max = 0
	for i in range(n): 
		mls.append(1) 
	for i in range(n): 
		for j in range(i): 
			if (abs(arr[i] - arr[j]) <= 1 and mls[i] < mls[j] + 1): 
				mls[i] = mls[j] + 1
	for i in range(n): 
		if (max < mls[i]): 
			max = mls[i] 
	return max","def max_len_sub( arr, n: 
	mls=[] 
	max = 0
	for i in range(n: 
		mls.append(1 
	for i in range(n: 
		for j in range(i: 
			if (abs(arr[i] - arr[j] <= 1 and mls[i] < mls[j] + 1: 
				mls[i] = mls[j] + 1
	for i in range(n: 
		if (max < mls[i]: 
			max = mls[i] 
	return max",Syntax Error,Loops
Write a Python program to optimize a set of points in a 3-dimensional plane.,"points = [[10, 12, 13], [1, 8, 9], [3, 5, 7]]","import scipy.optimize as opt

def objective(x):
 return sum([x[i]**2 for i in range(len(x))])

def constraint1(x):
 return 16 - x[0]**2 - x[1]**2 - x[2]**2

cons = [{'type': 'ineq','fun': constraint1}]

x = [0, 0, 0]

solution = opt.minimize(objective, x, constraints=cons)

print(solution)","import scipy.optimize as opt

def objective(x):
 return sum([x[i]**2 for i in range(len(x))])

def constraint1(x):
 return 16 - x[0]**2 - x[1]**2 - x[2]**2

cons = [{'type': 'ineq','fun': constraint1}]

x = [0, 0, 0]

solution = opt.minimize(objective, x, constraints=cons)

print(solution)",correct,Recursion
Generate a Python program that creates a word cloud from a given text.,Text: The quick brown fox jumps over the lazy dog.,"import matplotlib.pyplot as plt
from wordcloud import WordCloud
 
# Read the whole text.
text = 'The quick brown fox jumps over the lazy dog.'
 
# Generate a word cloud image
wordcloud = WordCloud().generate(text)
 
# Display the generated image:
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis(""off"")
plt.show()","import matplotlib.pyplot as plt
from wordcloud import WordCloud
 
# Read the whole text.
text = 'The quick brown fox jumps over the lazy dog.'
 
# Generate a word cloud image
wordcloud = WordCloud().generate(text)
 
# Display the generated image:
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis(""off"")
plt.show()",Syntax Error,OOP
"Write a function to find entringer number e(n, k).",,"def zigzag(n, k): 
	if (n == 0 and k == 0): 
		return 1
	if (k == 0): 
		return 0
	return zigzag(n, k - 1) + zigzag(n - 1, n - k)","def zigzag(n, k): 
	if (n == 0 and k == 0): 
		return 1
	if (k == 0): 
		return 0
	return zigzag(n, k - 1) + zigzag(n - 1, n - k)",correct,Recursion
Create a function in Python to generate an alphabetically sorted list of unique words from a given string.,,"def sort_words(str):
 words = str.split(' ')
 words = set(words)
 words = list(words)
 words.sort()
 return words","def sort_words(str):
 words = str.split(' ')
 words = se",Incomplete Answer,String Manipulation
"Given a JSON object, write a python program to print the square of every value, only if the value is even.","{
 ""a"": 1,
 ""b"": 2,
 ""c"": 3,
 ""d"": 4
}","import json

data = {
 ""a"": 1,
 ""b"": 2,
 ""c"": 3,
 ""d"": 4
}

for key, value in data.items():
 if value % 2 == 0:
 print(value**2)","import json

data = {
 ""a"": 1,
 ""b"": 2,
 ""c"": 3,
 ""d"": 4
}

for key, value in data.items():
 if value % 2 == 0:
 print(value**2)",Syntax Error,Recursion
Design a class in Python for hashing passwords.,,"import hashlib
 
class PasswordHasher:
 
    def __init__(self, algorithm='sha256'):
        self.algorithm = algorithm
 
    def generate_hash(self, password):
        """"""
        Generates a hash string using the given algorithm.
        """"""
        hash_value = hashlib.new(self.algorithm)
        hash_value.update(password.encode('utf-8'))
        return hash_value.hexdigest()","import hashlib
 
class PasswordHasher:
 
    def __init__(self, algorithm='sha256'):
        self.algorithm = algorithm
 
    def generate_hash(self, password):
        """"""
        Generates a hash string using the given algorithm.
        """"""
        hash_value = hashlib.new(self.algorithm)
        hash_value.update(password.encode('utf-8'))
        return hash_value.hexdigest()",correct,Loops
Write a Python program to create a join of two given strings being separated by a given separator.,"First string: Apples 
Second string: Oranges 
Separator: and","a = ""Apples""
b = ""Oranges""

#joining the strings, using the separator
joinedString = a +"" ""+ ""and"" +"" ""+ b

# print the joined string
print(joinedString)","a = ""Apples""
b = ""Oranges""

#joining the strings, using the separator
joined",Incomplete Answer,OOP
Compose a python program to classify each items in our list.,"List items: shirt, pants, dress, coat","def classify(items):
    categories = ['shirts', 'pants', 'dresses', 'coats']
    results = {}
    for item in items:
        for category in categories:
            if item == category:
                results[item] = category
    return results","def classify(items):
    categories = ['shirts', 'pants', 'dresses', 'coats']
    results = {}
    for item in items:
        for category in categories:
            if item == category:
                results[item] = category
    return results",correct,File I/O
Generate a python program to remove duplicate values in a given list.,"myList = [1, 2, 3, 2, 4, 5, 5]","def remove_duplicates(myList):
    unique_list = []
    for item in myList:
        if item not in unique_list:
            unique_list.append(item)
    return unique_list

result = remove_duplicates(myList)
print(result)","def remove_duplicates(myList):
    unique_list = []
    for item in myList:
        if item not in unique_list:
            unique_list.append(item)
    return unique_list

result = remove_duplicates(myList)
print(result)",correct,OOP
"Create a string formatting function in Python that takes a first name, last name, and age as parameters.","firstName - ""John""
lastName - ""Doe""
age - 35","def format_name(firstName, lastName, age):
 return f'{lastName}, {firstName} is {age} years old.'

# Usage example
print(format_name('John', 'Doe', 35)) # Output: Doe, John is 35 years old.","def format_name(firstName, lastName, age):
 return f'{lastName}, {firstName} is {age} years old.'

# Usage example
print(format_name('John', 'Doe', 35)) # Output: Doe, John is 35 years old.",correct,File I/O
Generate a python program to print odd numbers in a given range.,,"def print_odd_numbers(start, end):
    for i in range(start, end+1):
        if i % 2 != 0:
            print(i)","def print_odd_numbers(start, end):
    for i in range(start, end+1):
        if i % 2 != 0:
            print(i)",correct,OOP
Write a Python program that finds the smallest number in a given array with an algorithm that has an optimal time complexity.,"array = [3, 8, 2, 5, 4, 1, 9]","def find_smallest_number(array):
    smallest = array[0]
    for element in array:
        if element < smallest:
            smallest = element
    return smallest","def find_smallest_number(array):
    smallest = array[0]
    for element in array:",Incomplete Answer,Recursion
Generate a python program to create a Pandas DataFrame using the following input data.,"Input:
data = {'Country':[""United States"", ""France"", ""China""], 
'Population': [330, 67, 13]}","import pandas as pd

# Create the data frame
data_frame = pd.DataFrame(data)
  
# Print the data frame
print(data_frame)","import pandas as pd

# Create the data frame
data_frame = pd",Incomplete Answer,Loops
Develop a function in Python to take as input two array of integers and swap their elements.,"arr1 = [3, 5, 6, 9]
arr2 = [2, 4, 7, 8]","def swap(arr1, arr2):
    assert len(arr1) == len(arr2)
    for i in range(len(arr1)):
        temp = arr1[i]
        arr1[i] = arr2[i]
        arr2[i] = temp","def swap(arr1, arr2):
    assert len(arr1) == len(arr2)
    for i in range(len(arr1)):
        temp = arr1[i]
        arr1[i] = arr2[i]
        arr2[i] = temp",correct,OOP
Construct a nested loop in Python to print out the following elements in a new line.,"[1,2,3], [4,5,6], [7,8,9]","for x in [1,2,3]:
  for y in [4,5,6]:
      for z in [7,8,9]:
          print(x,y,z)","for x in [1,2,3]:
  for y in [4,5,6]:
    ",Incomplete Answer,OOP
Write a Python code to get the intersection of two given arrays.,"a = [1, 2, 3, 4, 5]
b = [3, 4, 5, 6, 7]","def intersection_arr(arr1, arr2):
    # create an empty list for storing the elements
    result = []
    
    for element in arr1:
        if element in arr2: 
            result.append(element)
    
    return result

a = [1, 2, 3, 4, 5]
b = [3, 4, 5, 6, 7]

intersect = intersection_arr(a, b)
print(intersect)","def intersection_arr(arr1, arr2):
    # create an empty list for storing the elements
    result = []
    
    for element in arr1:
        if element in arr2: 
            result.append(element)
    
    return result

a = [1, 2, 3, 4, 5]
b = [3, 4, 5, 6, 7]

intersect = intersection_arr(a, b)
print(intersect)",correct,File I/O
Write a Python code that prints out the prime numbers from 1 to 100,,"print(""The prime numbers from 1 to 100 are:"")

for number in range(1, 101):
    if number > 1: 
        for i in range(2, number): 
            if (number % i) == 0: 
                break
        else: 
            print(number)","print(""The prime numbers from 1 to 100 are:"")

for number in range(1, 101):
    if number > 1: 
        for i in r",Incomplete Answer,Recursion
Write a Python program to store and display information about a restaurant.,The restaurant is called 'The Olive' and it has a Chinese and Thai cuisine.,"class Restaurant:
   def __init__(self, name, cuisine):
        self.name = name
        self.cuisine = cuisine

restaurant = Restaurant('The Olive', 'Chinese and Thai')

print('Name of the restaurant: ', restaurant.name)
print('Cuisine served in the restaurant: ', restaurant.cuisine)","class Restaurant:
   def __init__(self, name, cuisine):
        self.name = name
        self.cuisine = cuisine

restaurant = Restaurant('The ",Incomplete Answer,String Manipulation
Generate a program in Python to implement quick sort on an array of integers.,"[6, 9, 20, 1, 11, 46]","def quicksort(arr):
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[0]
        less_than_pivot = [x for x in arr[1:] if x <= pivot]
        greater_than_pivot = [x for x in arr[1:] if x > pivot]

        return quicksort(less_than_pivot) + [pivot] + quicksort(greater_than_pivot)
 
arr = [6, 9, 20, 1, 11, 46]
print (""Quick Sort: "" + str(quicksort(arr)))","def quicksort(arr):
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[0]
        less_than_pivot = [x for x in arr[1:] if x <= pivot]
        greater_than_pivot = [x for x in arr[1:] if x > pivot]

        return quicksort(less_than_pivot) + [pivot] + quicksort(greater_than_pivot)
 
arr = [6, 9, 20, 1, 11, 46]
print (""Quick Sort: "" + str(quicksort(arr)))",Syntax Error,OOP
Reformat a collection of list into a dictionary in Python.,"[['a', 1], ['b', 2], ['c', 3], ['d', 4]]","data = [['a', 1], ['b', 2], ['c', 3], ['d', 4]]

my_dict = dict(data)
print(my_dict) # {'a': 1, 'b': 2, 'c': 3, 'd': 4}","data = [['a', 1], ['b', 2], ['c', 3], ['d', 4]]

my_dict = ",Incomplete Answer,String Manipulation
Generate Python code for making a GraphQL API query.,"query {
 user(id: 2) {
  name
  age
  address {
   street
   city
  }
 }
}","import requests

url = 'http://localhost:4000'

query = """"""
query {
 user(id: 2) {
  name
  age
  address {
   street
   city
  }
 }
}
""""""

response = requests.post(url, json={'query': query})
data = response.json()

print(data)","import requests

url = 'http://localhost:4000'

query = """"""
query {
 user(id: 2) {
  name
  age
  address {
   str",Incomplete Answer,String Manipulation
Optimize the following Python code for counting the number of words in an input string.,"s = ""This is a sample string""","# Count number of words in a string

def count_words(s):
    # remove unnecessary characters
    s = s.replace(',', '').replace('.', '')
    # split string into list of words
    words = s.split(' ')
    # return the length of the list (number of words)
    return len(words)

s = ""This is a sample string""
words_count = count_words(s)
print(words_count)","# Count number of words in a string

def count_words(s):
    # remove unnecessary characters
    s = s.replace(',', '').replace('.', '')
    # split string into list of words
    words = s.split(' ')
    # return the length of the list (number of words)
    return len(words)

s = ""This is a sample string""
words_count = count_words(s)
print(words_count)",correct,OOP
Give a Python function that shuffles the elements of a given list.,"[1, 2, 3, 4, 5]","import random

def shuffle(list):
    random.shuffle(list)
    return list

list = [1, 2, 3, 4, 5]
shuffledList = shuffle(list)

print(shuffledList)","import random

def shuffle(list)
    random.shuffle(list)
    return list

list = [1, 2, 3, 4, 5]
shuffledList = shuffle(list)

print(shuffledList)",Syntax Error,Recursion
Create a REST API in Python to retrieve a list of users from a database.,,"import flask
from flask_restful import Resource, Api

app = flask.Flask(__name__)
api = Api(app)

class Users(Resource):
    def get(self):
        conn = sqlite3.connect('users.db')
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM users ORDER BY id ASC')
        users = cursor.fetchall()
        conn.close()
        return users

api.add_resource(Users, '/users')","import flask
from flask_restful import Resource, Api

app = flask.Flask(__name__)
api = Api(app)

class Users(Resource):
    def get(self):
        conn = sqlite3.connect('users.db')
        cu",Incomplete Answer,String Manipulation
Write a Python code snippet to print out the first ten entries in a given dictionnary.,"dict = {‘a’: 1, ‘b’: 2, ‘c’: 3, ‘d’: 4, ‘e’: 5, ‘f’: 6, ‘g’: 7, ‘h’: 8, ‘i’: 9, ‘j’: 10}","for key, value in dict.items():
    if key < 'k':
        print(key, value)","for key, value in dict.items():
    if key < 'k':
        pritn(key, value)",Syntax Error,OOP
Write a function to find the occurence of characters 'std' in the given string 1. list item 1. list item 1. list item 2. list item 2. list item 2. list item,,"def count_occurance(s):
  count=0
  for i in range(len(s)):
    if (s[i]== 's' and s[i+1]=='t' and s[i+2]== 'd'):
      count = count + 1
  return count","def count_occurance(s):
  count=0
  for i in range(len(s)):
    if (s[i]== 's' and s[i+1]=='t' and s[i+2]== 'd'):
      count = count + 1
  return count",correct,File I/O
Create a method in Python that returns the result for the factorial of a given number.,5,"def factorial(n): 
    if n == 0:
        return 1
    else:
        return n*factorial(n-1) 

x = 5
result = factorial(x) 
print(result) 

# Output: 
120","def factorial(n): 
    if n == 0:
        return 1
    else:
        return n*factorial(n-1) 

x = 5
result = factorial(x) 
print(name, result) 

# Output: 
120",Syntax Error,Recursion
Generate Python code to tokenize the given text.,Text: This is a sentence containing words,"import re

def tokenize_text(text):
    #Split the string into words on whitespace
    words = re.split(r'\s', text)
    #Punctuation patterns
    punctuation = re.compile(r'[.,!?;:]')
    #Create tokens
    tokens = [word.strip(punctuation.pattern) for word in words]
    #Return the list of tokens
    return tokens","import re

def tokenize_text(text):
    #Split the string into words on whitespace
    words = re.split(r'\s', text)
    #Punctuation patterns
    punctuation = re.compile(r'[.,!?;:]')
    #Create tokens
    tokens = [word.strip(punctuation.pattern) for word in words]
    #Return the list of tokens
    return tokens",correct,Loops
Create a Python program to normalize a list of numbers so that the sum of the numbers add up to 1.,"[2, 5, 8, 9, 12, 25]","import numpy as np

def normalize_list(lst):
    lst = np.array(lst)
    normalized = lst / lst.sum()
    return normalized

lst = [2, 5, 8, 9, 12, 25]
normalized_list = normalize_list(lst)
print(normalized_list)","import numpy as np

def normalize_list(lst):
    lst = np.array(lst)
    normalized = lst / lst.sum()
    return normalized

lst = [2, 5, 8, 9, 12, 25]
normalized_list = normalize_list(lst)
print(normalized_list)",correct,File I/O
Write a function to find frequency count of list of lists.,,"def frequency_lists(list1):
    list1 = [item for sublist in list1 for item in sublist]
    dic_data = {}
    for num in list1:
        if num in dic_data.keys():
            dic_data[num] += 1
        else:
            key = num
            value = 1
            dic_data[key] = value
    return dic_data
","def frequency_lists(list1):
    list1 = [item for sublist in list1 for item in sublist]
    dic_data = {}
    for num in list1:
        if num in dic_data.keys():
            dic_data[num] += 1
        else:
            key = num
            value = 1
            dic_data[key] = value
    return dic_data
",correct,OOP
Write an algorithm in Python to find the missing number in a given sequence of numbers,"[1, 2, 4, 5, 6, 7, 8]","def findMissingNumber(input):
 
    n = len(input) + 1  # calculate the total numbers
    total = (n * (n+1)) / 2  # calculate the sum of numbers 
    missing_num = total - sum(input)    
    return missing_num
 
# Driver code
input = [1, 2, 4, 5, 6, 7, 8]
missing_num = findMissingNumber(input)
print(""The missing number is:"", missing_num)","def findMissingNumber(input):
 
    n = len(input) + 1  # calculate the total numbers
    total = (n * (n+1)) / 2  # calculate the sum of numbers 
    missing_num = total",Incomplete Answer,File I/O
Create a Python program to generate a sentence from a given set of words.,"[""The"",""quick"",""brown"",""fox"",""jumped"",""over"",""the"",""lazy"",""dog""]","def generateSentence(words):
  sentence = ''
  for word in words:
    sentence += word + ' '
  sentence += '.'
  return sentence

sentence = generateSentence([""The"",""quick"",""brown"",""fox"",""jumped"",""over"",""the"",""lazy"",""dog""])
print(sentence)","def generateSentence(words):
  sentence = ''
  for word in words:
    sentence += word + ' '
  sentence += '.'
  return",Incomplete Answer,Recursion
"Write a Python function to classify data points as low, medium and high according to the given threshold values.","threshold = [4, 6]","def classify(value, threshold):
    if value < threshold[0]:
        return 'low'
    elif threshold[0] <= value < threshold[1]:
        return 'medium'
    else:
        return 'high'","def classify(value, threshold):
if value < threshold[0]:
    return 'low'
elif threshold[0] <= value < threshold[1]:
    return 'medium'
else:
    return 'high'",Syntax Error,Recursion
Create a Python program to sort a given array in increasing and decreasing order.,"Array: [3, 5, 8, 9, 0, 4, 1]","def sort_array(arr): 
	asc_arr = arr.copy() 
	asc_arr.sort() 

	dsc_arr = arr.copy()
	dsc_arr.sort(reverse=True)
 
	return asc_arr, dsc_arr

asc_arr, dsc_arr = sort_array([3, 5, 8, 9, 0, 4, 1])
print(""Sorted in ascending order:"", asc_arr)
print(""Sorted in descending order:"", dsc_arr)","def sort_array(arr): 
	asc_arr = arr.copy() 
	asc_arr.sort() 

	dsc_arr = arr.copy()
	dsc_arr.sort(reverse=True)
 
	return asc_arr, dsc_arr

asc_arr, dsc_arr = sort_array([3, 5, 8, 9, 0, 4, 1])
print(name, ""Sorted in ascending order:"", asc_arr)
print(name, ""Sorted in descending order:"", dsc_arr)",Syntax Error,OOP
Create a class for a Word Counter in Python. The class should take a string of text as an argument and have a method to count the total number of words.,,"class WordCounter:
 def __init__(self, text):
 self.text = text
 
 def count_words(self):
 return len(self.text.split())

text = 'This is some sample text.'
wc = WordCounter(text)
num_words = wc.count_words()
print(num_words) # Output: 4","class WordCounter:
 def __init__(self, text):
 self.text = text
 
 def count_words(self):
 return len(self.text.split(",Incomplete Answer,Recursion
"Create a basic web-scraper using Python and Scrapy. The scraper should be able to parse the HTML, extract and store titles from a news website.",,"import scrapy

class NewsSpider(scrapy.Spider):
 name = 'news'
 start_urls = [
 'http://www.example.com/news/',
 ]

def parse(self, response):
 for article in response.css('article'):
 yield {
 'title': article.css('h2::text').get(),
 }","import scrapy

class NewsSpider(scrapy.Spider):
 name = 'news'
 start_urls = [
 'http://www.example.com/news/',
 ]

de",Incomplete Answer,String Manipulation
Create a Python script to generate all the combinations of a given list of integers.,"[1, 2, 3]","def generate_combinations(input_list):
    import itertools
    comb_list = []
    # Get all possible combinations of the list
    for subset in itertools.combinations(input_list,
                                       len(input_list)):
        comb_list.append(subset)
    return comb_list","def generate_combinations(input_list):
    import itertools
    comb_list = []
    # Get all possible combinations of the list
    for subset in ",Incomplete Answer,Recursion
Write a Python program to edit an array of strings to filter out all the strings that do not contain the given substring.,"array = [""stack"", ""overflow"", ""coding"", ""challenge""]
substring = ""stack""","# Filtering out the strings that don't contain the substring
filtered_array = [s for s in array if substring in s]

print(filtered_array)","# Filtering out the strings that don't contain the substring
filtere",Incomplete Answer,OOP
Write a Python program to generate and print a random list of size n.,8,"import random

def generate_random_list(n):
    random_list = []
    for i in range(n):
        random_list.append(random.randint(0, 100))
    return random_list

n = 8
random_list = generate_random_list(n)
print(random_list)","import random

def generate_random_list(n):
    random_list = []
    for i in range(n):
        random_list.append(random.randint(0, 100))
    return random_list

n = 8
random_list = generate_random_list(n)
print(random_list)",correct,Loops
How can we create a function to check if a given string is a palindrome in Python?,No input,"def is_palindrome(s): 
    s = s.lower() 
    return s == s[::-1]","def is_palindrome(s): 
    s = s",Incomplete Answer,Loops
"From a Python data type, generate a json string.","person = {
    ""name"": ""John Doe"",
    ""age"": 30,
    ""hobbies"":[""reading"", ""playing chess"", ""hiking""]
}","import json

json_str = json.dumps(person)","import json

json_str = json.dumps(person)",correct,OOP
Automate a business process by creating a program to generate the output based on specified inputs.,,"def automate_business_process(inputs):
 # Use a programming language such as Python to parse the inputs
 # ...

# Use algorithms to generate the output
 def generate_output(inputs):
 ...","def automate_business_process(inputs):
 # Use a programming language such as Python to parse ",Incomplete Answer,String Manipulation
Write a python program to take user input and perform sum operation.,,"num1=int(input(""Enter a number:""))
num2=int(input(""Enter another number:""))
 
#sum 
sum = num1 + num2
 
#print the result
print('Sum of {0} and {1} is {2}'.format(num1, num2, sum))","num1=int(input(""Enter a number:""))
num2=int(input(""Enter another number:""))
 
#sum 
sum = num1 + num2
 
#print the result
print('Sum of {0} and {1} is {2}'.format(num1, num2, sum))",correct,Loops
Can you write a Python script that prints out the number of 'a's found in a text string?,"string = ""abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc""","text = ""abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc""

count = 0 
for char in text:
    if char == 'a':
        count += 1

print(count)","text = ""abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc""

count = 0 
for char in text:
if char == 'a':
    count += 1

print(count)",Syntax Error,OOP
Design an algorithm in Python to find a missing number from a given range of numbers.,"[2, 3, 4, 6, 7]","def find_missing_num(arr):
    n = len(arr)
    sum_of_num = (n + 1)*(arr[0] + arr[n-1])/2
    sum_of_arr = sum(arr)
    return sum_of_num - sum_of_arr","def find_missing_num(arr):
    n = len(arr)
    sum_of_num = (n + 1)*(arr[0] + arr[n-1])/2
    sum_of_arr = sum(arr)
    return sum_of_num - sum_of_arr",correct,OOP
Create a program in Python to calculate the length of a given string without using the len() method.,"string=""Python""","def length(string):
    count = 0
    for char in string:
        count += 1
    return count

string=""Python""

print(length(string))","def length(string):
    count = 0
    for char in string:
        count += 1
    return count

string=""Python""

print(length(string))",correct,Recursion
"Create a program in Python that prints the Fibonacci Series up to N terms, where N is a user-input number.",,"def fibonacci_series(N):
    a = 0
    b = 1
 
    if N < 0:
        print(""Incorrect input"")
    elif N == 0:
        print(""Series up to 0 terms: "")
    else:
        print(""Series up to"", N,""terms:"")
    
    for i in range(0, N):
        print(a, end="" "")
        c = a + b
        a = b
        b = c

N = int(input(""Enter a number: ""))
fibonacci_series(N)","def fibonacci_series(N):
    a = 0
    b = 1
 
    if N < 0:
        print(""Incorrect input"")
    elif N == 0:
        print(""Series up to 0 terms: "")
    else:
        print(""Series up to"", N,""terms:"")
    
    for i in range(0, N):
        print(a, end="" "")
        c = a + b
        a = b
        b = c

N = int(input(""Enter a number: ""))
fibonacci_series(N)",correct,Recursion
Optimize a given code in Python to run faster.,"def factorial(n):
    fact = 1
    while n > 0:
        fact *= n
        n -= 1
    return fact","def factorial(n):
    fact = 1
    while n > 1:
        fact *= n
        n -= 1
    return fact

# Eliminated unnecessary check for n > 0, as n will always be greater than 0 before the loop begins. This makes the function run faster.","def factorial(n):
    fact = 1
    while n > 1:
        fact *= n
        n -= 1
    return fact

# Eliminated unnecessary check for n > 0, as n will always be greater than 0 before the loop begins. This makes the function run faster.",correct,Recursion
Create a Python script to scrape the HTML of a given web page and extract all of its headings and paragraphs.,URL of a web page,"import requests
from bs4 import BeautifulSoup


url = 'url'
page = requests.get(url)
soup = BeautifulSoup(page.text, 'html.parser')

headings = soup.find_all(['h1', 'h2', 'h3', 'h4', 'h5', 'h6'])
for heading in headings:
 print(heading.text)

paragraphs = soup.find_all('p')
for paragraph in paragraphs:
 print(paragraph.text)","import requests
from bs4 import BeautifulSoup


url = 'url'
page = requests.get(url)
soup = BeautifulSoup(page.text, 'html.parser')

headings = soup.find_all(['h1', 'h2', 'h3', 'h4', 'h5', 'h6'])
for heading in headings:
 print(heading.text)

paragraphs = soup.find_all('p')
for paragraph in paragraphs:
 print(paragraph.text)",correct,String Manipulation
Generate Python code to generate a list which contains squares of all the numbers from 1 to 10,,"squares = []
for i in range(1, 11):
 squares.append(i*i)
print(squares)","squares = []
for i in range(1, 11):
 squares.append(i*i)
print(name, squares)",Syntax Error,OOP
Create a deep learning model in python to classify inputs into 3 categories.,,"import tensorflow as tf

model = tf.keras.Sequential([
 tf.keras.layers.Input(shape= (128,)),
 tf.keras.layers.Dense(64, activation='relu'),
 tf.keras.layers.Dense(64, activation='relu'),
 tf.keras.layers.Dense(3, activation='softmax')
])

model.compile(optimizer='Adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])","import tensorflow as tf

model = tf.keras.Sequential([
 tf.keras.layers.Input(shape= (128,)),
 tf.keras.layers.Dense(64, activation='relu'),
 tf.keras.layers.Dense(64, activation='relu'),
 tf.keras.layers.Dense(3, activation='softmax')
])

model.compile(optimizer='Adam',
          loss='categorical_crossentropy',
          metrics=['accuracy'])",Syntax Error,Loops
Identify a code segment's language from a given snippet.,"if a > b:
    print(""a is bigger"")
else:
    print(""b is bigger"")",Python,Python,correct,File I/O
Create a function in Python that takes in a string and returns true if all characters in the string are unique and false if there is at least one repeated character.,,"def check_unique(s):
    seen=set()
    for c in s:
        if c in seen:
            return False
        else:
            seen.add(c)
    return True","def check_unique(s):
    seen=set()
    for c in s:
        if c in seen:
  ",Incomplete Answer,Loops
Convert a Python dictionary to a JavaScript object.,A python dictionary containing two key-value pairs.,"const pythonDictionary = {
    'key1': 'value1',
    'key2': 'value2'
};
const jsObject = Object.fromEntries(
    Object.entries(pythonDictionary)
);
console.log(jsObject); // {key1: 'value1', key2: 'value2'}","const pythonDictionary = {
    'key1': 'value1',
    'key2': 'value2'
};
const jsObject = Object.fromEnt",Incomplete Answer,Loops
Create a function in Python to give the multiple of 6 of any given number.,Number = 5,"def multiple_of_6(number):
    return number * 6","def multiple_of_6(number):
    return number * 6",correct,String Manipulation
Create a Python program to extract the top 10 words from a text.,My name is John and I work as a software engineer.,"import re
from collections import Counter

def get_top_words(txt):
    words = re.findall(r'\w+', txt.lower())
    return Counter(words).most_common(10)

print(get_top_words('My name is John and I work as a software engineer.'))
# Output: [('i', 2), ('a', 1), ('as', 1), ('engineer', 1), ('john', 1), ('name', 1), ('software', 1), ('work', 1)]","import re
from collections import Counter

def get_top_words(txt):
    words = re.findall(r'\w+', txt.lower())
    return Counter(words).most_common(10)

print(get_top_wor",Incomplete Answer,Loops
"Create a Python lambda expression that takes one argument, word, and converts all uppercase letters in the given word to lowercase.",Word: CHANGE,"change = lambda word: word.lower()

print(change(""CHANGE""))","change = lambda word: word.lower()

print(change(""CHANGE""))",correct,OOP
Compose a Python program that takes in a list of strings and returns a list with duplicate strings removed.,"[""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]","def remove_duplicates(strs):
    new_strs = [] 
    for i in strs: 
        if i not in new_strs: 
            new_strs.append(i) 
    return new_strs
    
# Driver Code
strs = [""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]
print(remove_duplicates(strs))","def remove_duplicates(strs):
    new_strs = [] 
    for i in strs: 
        if i not in new_strs: 
            new_strs.append(i) 
    return new_strs
    
# Driver Code
strs = [""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]
print(remove_duplicates(strs))",correct,String Manipulation
Outpus the number of unique elements in a Python list.,"list = [1, 2, 2, 3, 4, 4, 4]","unique_elements = set(list)
print(""Number of unique elements:"", len(unique_elements))","unique_elements = set(list)
print(""Number of unique elements:"", len(unique_elements))",correct,Recursion
Create a Python program to generate the nth number in the Fibonacci series.,,"def nth_fibonacci(n):
 if n == 0:
  return 0
 elif n == 1:
  return 1
 else:
  return nth_fibonacci(n-1) + nth_fibonacci(n-2)","def nth_fibonacci(n):
 if n == 0:
  return 0
 elif n == 1:
  r",Incomplete Answer,Loops
"Given a number of queues, each containing numbers, write python code to find and print out the numbers at the front of each queue.","queue1 = [5, 2, 9, 4]
queue2 = [7, 8, 3, 6]","def print_front_elements_from_queues(queue_list):
    for queue in queue_list:
        print(queue[0])

queue_list = [queue1, queue2]

print_front_elements_from_queues(queue_list) # This should print 5 and 7","def print_front_elements_from_queues(queue_list):
    for queue in queue_list:
        print(queue[0])

queue_list = [queue1, queue2]

print_front_elements_from_queues(queue_list) # This should print 5 and 7",correct,Recursion
Create a Python program to generate a list with unique elements from a given list.,,"def unique_list(lst):
    unique = []
    for item in lst:
        if item not in unique:
            unique.append(item)
    return unique","def unique_list(lst:
    unique = []
    for item in lst:
        if item not in unique:
            unique.append(item
    return unique",Syntax Error,String Manipulation
"Create a Python class named 'Circle' that include two methods, init() and area().",,"class Circle:
    def __init__(self, radius):
        self.radius = radius

    def area(self):
        return 3.14 * (self.radius**2)","class Circle:
    def __init__(self, radius):
        self.radius =",Incomplete Answer,Loops
Design a Python program to calculate the GCD (Greatest Common Divisor) of two numbers.,,"def gcd(a, b):
    if a == 0:
        return b
    return gcd(b % a, a)

a = 15
b = 20

print(""GCD of"", a, ""and"", b, ""is"", gcd(a, b))","def gcd(a, b):
    if a == 0:
        return b
    return gcd(b % ",Incomplete Answer,Loops
Write a Python function to convert a given floating point number to binary.,19.66,"def decimal_to_binary(f_num):
  b_str = """"
  int_num = int(f_num)
  f_num = f_num - int_num

  while int_num > 0:
    b_str = str(int_num % 2) + b_str
    int_num //= 2

  b_str = ""1."" + b_str

  while f_num > 0: 
    f_num *= 2
    int_num = int(f_num)
    if int_num == 1:
      b_str += ""1""
    else:
      b_str += ""0""
    f_num = f_num - int_num

  return b_str","def decimal_to_binary(f_num):
  b_str = """"
  int_num = int(f_num)
  f_num = f_num - int_num

  while int_num > 0:
    b_str = str(int_num % 2) + b_str
    int_num //= 2

  b_str = ""1."" + b_str

  while f_num > 0: 
    f_num *= 2
    int_num = int(f_num)
    if int_num == 1:
      b_str += ""1""
    else:
      b_str += ""0""
    f_num = f_num - int_num

  return b_str",correct,String Manipulation
Design a Python program to detect if a given number is in the Fibonacci Sequence or not,,"def is_fib(num):
  if num == 0 or num == 1:
    return True
  first = 0
  second = 1
  while(num >= second):
    if second == num:
      return True
    third = first + second
    first = second
    second = third
  return False","def is_fib(num):
  if num == 0 or num == 1:
return True
  first = 0
  second = 1
  while(num >= second):
if second == num:
  return True
third = first + second
first = second
second = third
  return False",Syntax Error,Loops
Design a Python script to generate a report containing summaries of the data in a table.,Table name: orders,"import pandas as pd 

# Load data from the orders table 
orders = pd.read_csv('orders.csv')

# Generate summary statistics for the orders table 
summary_stats = orders.describe()

# Generate a report containing summary statistics 
report = open('report.html', 'w') 
report.write(summary_stats.to_html()) 
report.close()","import pandas as pd 

# Load data from the orders table 
orders = pd.read_csv('orders.csv')

# Generate summary statistics for the orders table 
summary_stats = orders.describe()

# Generate a report containing summary statistics 
report = open('report.html', 'w') 
report.write(summary_stats.to_html()) 
report.close()",Syntax Error,OOP
Generate random passwords using Python.,,"import string 
import random 
  
def generate_pass(size = 8, chars=string.ascii_letters + string.digits + string.punctuation): 
  ''' 
  Generates a random password with given size and given 
  characters 
  '''
  return ''.join(random.choice(chars) for _ in range(size)) 

# Driver code 
print(generate_pass())","import string 
import random 
  
def generate_pass(size = 8, chars=string.ascii_letters + string.digits + string.punctuation): 
  ''' 
  Generates a random",Incomplete Answer,OOP
Create a Python program to filter out all negative numbers from a list.,,"def filter_negative(data):
    """"""Filters out all negative numbers from a list""""""
    return [x for x in data if x >= 0]","def filter_negative(data):
    """"""Filters out all negative n",Incomplete Answer,OOP
Create a function to generate a random string of fixed length using Python.,length=8,"import random
import string

def generate_random_string(length):
    letters = string.ascii_lowercase
    result_str = ''.join(random.choice(letters) for i in range(length))
     
    return result_str

random_string = generate_random_string(8)
print(random_string) # Outputs 'yezrtsyz'","import random
import string

def generate_random_string(length):
letters = string.ascii_lowercase
result_str = ''.join(random.choice(letters) for i in range(length))
 
return result_str

random_string = generate_random_string(8)
print(random_string) # Outputs 'yezrtsyz'",Syntax Error,String Manipulation
Generate a Python code to take user input and store it in a list.,,"user_input = []

while True:
 user_in = input(""Please enter your input: "")
 user_input.append(user_in)
 
 print(user_input)","user_input = []

while True:
 user_in = input(""Please enter your input: "")
 user_input.append(user_in)
 
 print(user_input)",correct,File I/O
Create a class in Python for representing a vehicle.,,"class Vehicle:
    def __init__(self, type, make, model, number_of_wheels):
        self.type = type
        self.make = make
        self.model = model
        self.number_of_wheels = number_of_wheels
        
    def description(self):
        return f""This is a {self.type} - {self.make} {self.model} with {self.number_of_wheels} wheels.""","class Vehicle:
def __init__(self, type, make, model, number_of_wheels):
    self.type = type
    self.make = make
    self.model = model
    self.number_of_wheels = number_of_wheels
    
def description(self):
    return f""This is a {self.type} - {self.make} {self.model} with {self.number_of_wheels} wheels.""",Syntax Error,OOP
Create an efficient algorithm in Python to convert a list of integers into a single integer representing the sum of the list elements.,"List of integers: [1, 3, 5, 8]","def list_sum(nums): 
 total = 0
 
 for num in nums:
   total += num
 
 return total

list_sum([1, 3, 5, 8]) # output: 17","def list_sum(nums): 
 total = 0
 
 for num in nums:
   total += num
 
 return total

list_sum([1, 3, 5, 8]) # output: 17",correct,String Manipulation
Develop a Python program to reverse an integer.,12345,"def reverse_int(num): 
    rev = 0
    while num > 0: 
        rev = (rev*10) + (num%10)
        num = num//10
    return rev 

#test
print(reverse_int(12345))","def reverse_int(num): 
    rev = 0
    while num > 0: 
        rev = (rev*10) + (num%10)
        num = num//10
    return rev 

#test
print(reverse_int(12345))",correct,Loops
Develop a python program for,Filter a given list of strings to only include strings that start with vowels.,"def filter_vowel_strings(string_list):
    vowels = ('a', 'e', 'i', 'o', 'u')
    filtered_list = []
    for string in string_list:
        if string.startswith(vowels):
            filtered_list.append(string)
    return filtered_list","def filter_vowel_strings(string_list):
    vowels = ('a', 'e', 'i', 'o', 'u')
    filtered_list = []
    for string in string_list:
        if string.startswith(vowels):
            filtered_list.append(string)
    return filtered_list",Syntax Error,File I/O
Create a vector addition program in Python.,,"def vector_add(a, b):
    c = []
    for i in range(len(a)):
        c.append(a[i] + b[i])

    return c","def vector_add(a, b):
    c = []
    for i in range(len(a)):
        c.append(a[i] + b[i])

    return c",correct,Recursion
Generate a class in Python that has getters and setters for some public variable.,,"class SampleClass:
    def __init__(self):
        self.public_variable = None

    def get_public_variable(self):
        return self.public_variable

    def set_public_variable(self, value):
        self.public_variable = value","class SampleClass:
    def __init__(self):
        self.public_variable = None

    def get_public_variable(self):
",Incomplete Answer,File I/O
Create a function to calculate the Fibonacci sequence in Python,n = 10,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
# Driver Program 
print(Fibonacci(n))","def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fib",Incomplete Answer,Recursion
Write a python function to find minimum adjacent swaps required to sort binary array.,,"def find_Min_Swaps(arr,n) : 
    noOfZeroes = [0] * n 
    count = 0 
    noOfZeroes[n - 1] = 1 - arr[n - 1] 
    for i in range(n-2,-1,-1) : 
        noOfZeroes[i] = noOfZeroes[i + 1] 
        if (arr[i] == 0) : 
            noOfZeroes[i] = noOfZeroes[i] + 1
    for i in range(0,n) : 
        if (arr[i] == 1) : 
            count = count + noOfZeroes[i] 
    return count ","def find_Min_Swaps(arr,n)  
    noOfZeroes = [0] * n 
    count = 0 
    noOfZeroes[n - 1] = 1 - arr[n - 1] 
    for i in range(n-2,-1,-1)  
        noOfZeroes[i] = noOfZeroes[i + 1] 
        if (arr[i] == 0)  
            noOfZeroes[i] = noOfZeroes[i] + 1
    for i in range(0,n)  
        if (arr[i] == 1)  
            count = count + noOfZeroes[i] 
    return count ",Syntax Error,String Manipulation
Create a Python program to check if a given list is sorted in ascending order.,"[7, 4, 8, 3, 10]","def is_sorted_ascending(numbers):
 for i in range(len(numbers) - 1):
 if numbers[i] > numbers[i+1]:
 return False
 return True","def is_sorted_ascending(numbers:
 for i in range(len(numbers - 1:
 if numbers[i] > numbers[i+1]:
 return False
 return True",Syntax Error,File I/O
Write Python code to retrieve a specific element from a 2D array.,"my_2d_array = [[1,2,3],[4,5,6],[7,8,9]]
row_to_retrieve = 2
column_to_retrieve = 0","my_2d_array = [[1,2,3],[4,5,6],[7,8,9]]
row_to_retrieve = 2
column_to_retrieve = 0

retrieved_element = my_2d_array[row_to_retrieve][column_to_retrieve]","my_2d_array = [[1,2,3],[4,5,6],[7,8,9]]
row_to_retrieve = 2
column_to_retrie",Incomplete Answer,Recursion
Create a Python program to calculate the factorial of an integer.,,"def factorial(num):
    if num == 0:
        return 1
    else:
        return num * factorial(num-1)

num = int(input(""Enter an integer: ""))
print(""Factorial of "", num, ""is: "", factorial(num))","def factorial(num):
    if num == 0:
        return 1
    else:
        return num * factorial(num-1)

num = int(input(""Enter an integer: ""))
print(""Factorial of "", num, ""is: "", factorial(num))",correct,OOP
Write a Python program to take a list of integers and sort them in ascending order using insertion sort.,"[4, 3, 7, 2, 1]","def insertion_sort(arr):
 for index in range(1,len(arr)):
 key = arr[index]
 j = index-1
 while j >=0 and key < arr[j]:
 arr[j+1] = arr[j]
 j -= 1
 arr[j+1] = key

arr = [4, 3, 7, 2, 1]
insertion_sort(arr)
print(arr)

# Output: [1, 2, 3, 4, 7]","def insertion_sort(arr):
 for index in range(1,len(arr)):
 key = arr[index]
 j = index-1
 while j >=0 and key < arr[j]:
 arr[j+1] = arr[j]
 j -= 1
 arr[j+1] = key

arr = [4, 3, 7, 2, 1]
insertion_sort(arr)
print(name, arr)

# Output: [1, 2, 3, 4, 7]",Syntax Error,File I/O
Write a python script to get the filename from the given path,/Users/john/Documents/Github/myproject/myfile.py,"import os

def get_filename_from_path(path):
    return os.path.basename(path)

filename = get_filename_from_path('/Users/john/Documents/Github/myproject/myfile.py')
print(filename)","import os

def get_filename_from_path(path)
    return os.path.basename(path)

filename = get_filename_from_path('/Users/john/Documents/Github/myproject/myfile.py')
print(filename)",Syntax Error,String Manipulation
Design a program in Python that prints the even numbers from 0 to 100.,,"for i in range(0, 101): 
    if (i % 2 == 0): 
        print(i)","for i in range(0, 101): 
if (i % 2 == 0): 
    print(i)",Syntax Error,Recursion
Create an algorithm in Python that finds all subsets of a given set.,"S = {a, b, c, d}","def subsets(S):
	""Return all subsets of set S.""
	if len(S) == 0:
		return [[]]  # list of the empty set
	T = subsets(S[1:])  # recur on S[1:]
	return T + [s + [S[0]] for s in T]  # add S[0] to front of each set in T

# Sample use
S = ['a', 'b', 'c', 'd']
print(subsets(S))","def subsets(S):
	""Return all subsets of set S.""
	if len(S) == 0:
		return [[]]  # list of the empty set
	T = subsets(S[1:])  # recur on S[1:]
	return T + [s + [S[0]] for s in T]  # add S[0] to front of each set in T

# Sample use
S = ['a', 'b', 'c', 'd']
print(subsets(S))",correct,Loops
Update the following Python program to validate a phone number.,"import re

phone = ""404-999-9999""

pattern = r""^[0-9]{3}-[0-9]{3}-[0-9]{4}$""

result = re.match(pattern, phone)

if result:
 print(""Valid phone number"")
else:
 print(""Invalid phone number"")","import re

phone = ""404-999-9999""

pattern = r""^[0-9]{3}-[0-9]{3}-[0-9]{4}$""

result = re.match(pattern, phone)

if result and len(phone) == 12:
 print(""Valid phone number"")
else:
 print(""Invalid phone number"")","import re

phone = ""404-999-9999""

pattern = r""^[0-9]{3}-[0-9]{3}-[0-9]{4}$""

result = re.match(pattern, phone

if result and len(phone == 12:
 print(""Valid phone number""
else:
 print(""Invalid phone number""",Syntax Error,File I/O
Use Object-Oriented Programming (OOP) in Python to create a class for a bookstore object.,,"class Bookstore():
    
    def __init__(self, name, books):
        self.name = name
        self.books = books

    def add_book(self, book):
        self.books.append(book)

    def get_book_by_title(self, title):
        for book in self.books:
            if book.title == title:
                return book
        return None","class Bookstore():
    
    def __init__(self, name, books):
        self.name = name
        self.books = books

    def add_book(self, book):
        self.books.append(book)

    def get_book_by_title(self, title):
        for book in self.books:
            if book.title == title:
                return book
        return None",correct,Loops
Create a python script that takes an array of integers and returns an array of their squares.,"[1, 2, 3, 4, 5]","def find_squares(arr):
    squares = []
    
    for num in arr:
        squares.append(num ** 2)
        
    return squares

find_squares([1, 2, 3, 4, 5])","def find_squares(arr):
    squares = []
    
    for num in arr:
        squar",Incomplete Answer,Loops
Create a Python function that takes in an array of numbers and returns the maximum value in the array.,"[5, 8, 1, 7, 4]","def max_value(arr):
    return max(arr)","def max_value(arr):
    return max(arr)",Syntax Error,OOP
Design a function in a Python program to calculate the area of a circle with a given radius.,,"def get_circle_area(radius):
    """"""Calculate and return the area of a circle with a given radius.
 
    Args:
        radius (float): The radius of the circle
 
    Returns:
        float: The area of the circle
    """"""
    return 3.14 * (radius * radius)","def get_circle_area(radius):
    """"""Calculate and return the area of a circle with a given radius.
 
    Args:
        radius (f",Incomplete Answer,Recursion
Design a program that takes a complicated function and simplifies it in Python.,"def func (x):
    return 3*(x**2) + 5*x - 4","def simplified_func (x):
    return 3*x**2 + 5*x - 4","def simplified_func (x):
    return 3*x**2 + 5*x - 4",Syntax Error,Recursion
Write a Python program to generate the Fibonacci sequence for n numbers.,,"def generateFibonacci(n): 
    # Taking 1st two fibonacci nubers as 0 and 1 
    FibArray = [0, 1] 
   
    while len(FibArray) < n: 
        next_fib_num = FibArray[-1] + FibArray[-2] 
        FibArray.append(next_fib_num) 
      
    return FibArray 
  
# Driver Code 
result = generateFibonacci(10) 
print(result)","def generateFibonacci(n): 
    # Taking 1st two fibonacci nubers as 0 and 1 
    FibArray = [0, 1] 
   
    while len(FibArray) < n: 
        next_fib_num = F",Incomplete Answer,OOP
Create a program in Python which will take in a sentence and print out each word in reverse.,'This sentence will be reversed',"string = 'This sentence will be reversed'

words = string.split()

for word in words:
	print(word[::-1], end="" "")

# Output: sihT ecnetnes lliw eb desrever","string = 'This sentence will be reversed'

words = string.split()

for word in words:
	print(word[::-1], end="" "")

# Output: sihT ecnetnes lliw eb desrever",correct,Loops
Write a python program to implement the linear search algorithm,,"def linear_search(arr, key):
    for i in range(len(arr)):
        if arr[i] == key: 
            return i 
  
    return -1","def linear_search(arr, key):
    for i in range(len(arr)):
   ",Incomplete Answer,File I/O
Write a function to extract values between quotation marks of the given string by using regex.,,"import re
def extract_quotation(text1):
  return (re.findall(r'""(.*?)""', text1))","import re
def extract_quotation(text1)
  return (re.findall(r'""(.*?)""', text1))",Syntax Error,File I/O
Optimize an existing Python script by improving its runtime performance.,"import time

start = time.time()

def foo(): 
 for _ in range(1000): 
  print('Hello World')

foo()

end = time.time()

print('Time Taken:', end - start)","import time 

start = time.time()

def foo(): 
 for i in range(1000): 
  print('Hello World', i)

foo()

end = time.time()

print('Time Taken:', end - start)","import time 

start = time.time()

def foo(): 
 for i in range(1000): 
  print",Incomplete Answer,Loops
Write a commmand-line script that sums all numbers from 0 to N where N is provided as input.,N = 10,"# python code
import sys

input_val = int(sys.argv[1])
sum = 0

for i in range(input_val + 1):
    sum += i
    
print(""Sum from 0 to {} is = {}"".format(input_val, sum))","# python code
import sys

input_val = int(sys.argv[1])
sum = 0

for i in range(input_val + 1):
sum += i

print(""Sum from 0 to {} is = {}"".format(input_val, sum))",Syntax Error,Loops
Generate a Python program that adds all numbers from 1 to a given number n.,,"def sum_numbers(n):
    total = 0
    for i in range(1, n+1):
        total += i
    return total","def sum_numbers(n):
    total = 0
    for i in range(1, n+1):
        total += i
    return total",Syntax Error,Recursion
Create a new method in Python that prints all the numbers from 1 to 5.,,"def print_numbers():
 for i in range(1, 6):
  print(i)","def print_numbers():
 for i in range(1, 6):
  print(i)",correct,OOP
Design a method in Python to test whether or not a number is a palindrome.,,"def is_palindrome(n):
    n_str = str(n)
    return n_str == n_str[::-1]","def is_palindrome(n)
    n_str = str(n)
    return n_str == n_str[-1]",Syntax Error,Loops
Create a code solution to generate histograms in Python.,,"import matplotlib.pyplot as plt

# Use randomly generated data
data = np.random.normal(size=1000)

# Generate histogram
plt.hist(data, bins=30, edgecolor='k', alpha=0.7)
plt.xlabel(""Value"")
plt.ylabel(""Frequency"")

# Show histogram
plt.show()","import matplotlib.pyplot as plt

# Use randomly generated data
data = np.random.normal(size=1000)

# Generate histogram
p",Incomplete Answer,OOP
Write a python program to create a connection to a given database.,"Database Name: test
Username: admin
Password: admin123","import pymysql

# Create connection to database
conn = pymysql.connect(host=""localhost"",
                       user=""admin"",
                       passwd=""admin123"",
                       db=""test"")

# Create a cursor and execute a query
cur = conn.cursor()","import pymysql

# Create connection to database
conn = pymysql.connect(host=""localhost"",
                       user=""admin"",
    ",Incomplete Answer,Loops
Create a Python program to ask a user for the number of students in the class and generate an array of empty strings of that length.,Number of students: 10,"students = [""""] * 10",students =,Incomplete Answer,OOP
Write a function in Python that creates a list of all the letter combinations of a given string.,,"def letterCombinations(string):
 letters = [] 
 for i in range(len(string)): 
 for j in range(i+1, len(string)+1): 
 letters.append(string[i:j]) 
 return letters","def letterCombinations(string:
 letters = [] 
 for i in range(len(string: 
 for j in range(i+1, len(string+1: 
 letters.append(string[i:j] 
 return letters",Syntax Error,Loops
Write a function in Python that takes an unordered list of integers as a parameter and will return a sorted list.,"Unordered list = [8, 20, 5, 1]","def sortList(list):
 sorted_list = sorted(list)
 return sorted_list","def sortList(list):
 sorted_list = sorted(list)
 return sorted_list",correct,OOP
Create an endpoint in Python for handling an API request for getting data from a database.,,"from flask import Flask, request
import sqlite3

app = Flask(__name__)

@app.route('/api/getData', methods=['POST'])
def get_data():
 data = request.get_json()
 con = sqlite3.connect('database.db')
 cur = con.cursor()
 query = 'SELECT * FROM myTable WHERE id=?'
 result = cur.execute(query, (data['id'],)).fetchall()
 return result

if __name__ == '__main__':
 app.run(debug=True)","from flask import Flask, request
import sqlite3

app = Flask(__name__)

@app.route('/api/getData', methods=['POST'])
def get_data():
 data = request.get_json()
 con = sqlite3.connect('database.db')
 cur = con.cursor()
 query = 'SELECT * FROM myTable WHERE id=?'
 result = cur.execute(query, (data['id'],)).fetchall()
 return result

if __name__ == '__main__':
 app.run(debug=True)",correct,String Manipulation
Create a function to parse JSON input in Python.,,"import json

def parse_json(input_string):
    data = json.loads(input_string)
    return data","import json

def parse_json(input_string):
    data = json.loads(input_string)
    return data",correct,Recursion
Write an algorithm in Python to calculate the nth prime number.,,"def nth_prime(n):
 primes = [2]

num = 3
while len(primes) < n:
 isPrime = True
 for prime in primes:
 if num % prime == 0:
 isPrime = False
 break
 if isPrime:
 primes.append(num)
 num += 2

return primes[n-1]

#Example
print(nth_prime(100))","def nth_prime(n):
 primes = [2]

num = 3
while len(primes) < n:
 isPrime = True
 for prime in primes:
 if num % prime == 0:
 isPrime = False
 break
 if isPrime:
 primes.append(num)
 num += 2

return primes[n-1]

#Example
print(nth_prime(100))",correct,File I/O
Develop a Python program to grade a student's performance on a multiple choice test.,"[5, 10, 15]","def grade_test(scores):
    total = 0
    for score in scores:
        total += score

    if total >= 40:
        return ""Pass""
    else:
        return ""Fail""

scores = [5, 10, 15]
grade = grade_test(scores)
print(""Grade: "" + grade)","def grade_test(scores):
    total = 0
    for score in scores:
        total += score

    if total >= 40:
        return ""Pass""
    else:
        return ""Fail""

scores = [5, 10, 15]
grade = grade_test(scores)
print(""Grade: "" + grade)",correct,String Manipulation
"Write a Python program to generate a list comprising 5 random integers between 1 to 30, with no duplicates.",,"import random

def generate_random_list():
    random_list = []
    while len(random_list) < 5:
        new_number = random.randint(1, 30)
        if new_number not in random_list:
            random_list.append(new_number)
    return random_list","import random

def generate_random_list():
    random_list = []
    while len(random_list) < 5:
        new_number = random.randint(1, 30)
        if new_number not in random_list:
            random_list.append(new_number)
    return random_list",correct,OOP
Rewrite the following Java Program using Python.,"public class Greeting {
    public static void main(String[] args){
        System.out.println(""Hello World!"");
    }
}","print(""Hello World!"")","print(""Hel",Incomplete Answer,File I/O
Code a program in Python to convert a text into its corresponding binary representation.,Text: Hello World!,"def bin_from_text(text):
    bin_text = """"
    for char in text:
        bin_text += bin(ord(char)).lstrip(""0b"") + "" ""
    return bin_text","def bin_from_text(text):
    bin_text = """"
    for char in text:
        bin_text += bin(ord(char)).lstrip(""0b"") + "" ""
    return bin_text",Syntax Error,File I/O
Write a function to put spaces between words starting with capital letters in a given string by using regex.,,"import re
def capital_words_spaces(str1):
  return re.sub(r""(\w)([A-Z])"", r""\1 \2"", str1)","import re
def capital_words_spaces(str1):
  return re.sub(r""(\w)([A-Z])"", r""\1 \2"", str1)",correct,Recursion
Generate a Python program to remove all occurrences of the character 'x' from a list,No Input,"def remove_x(lst):
    """"""
    Function to remove all occurrences of a character 'x' from a list.

    Args:
        lst (list): The list to process.

    Returns:
        A list with all occurrences of the character 'x' removed.
    """"""
    
    return [item for item in lst if item != 'x']","def remove_x(lst):
    """"""
    Function to remove all occurrences of a character 'x' from a list.

    Args:
        lst (list): The list to process.

    Returns:
        A list with all occurrences of the character 'x' removed.
    """"""
    
    return [item for item in lst if item != 'x']",Syntax Error,Recursion
Write a function in Python to count how many words are in the given string.,"""Do not stand at my grave and weep""","def count_words(string):
    words = string.split(' ')
    return len(words)

sentence = ""Do not stand at my grave and weep""
count = count_words(sentence)
print(""The given string has {} words."".format(count))","def count_words(string):
    words = string.split(' ')
    return len(words)

sentence = ""Do not stand a",Incomplete Answer,String Manipulation
Write code to generate a set of random numbers between 0 and 10 in Python.,Number of values in the set: 5,"import random

values = random.sample(range(11), 5)
print(values) // [5, 9, 3, 4, 1]","import random

values = random.sample(range(11), 5)
print(values) // [5, 9, 3, 4, 1]",correct,Recursion
Identify and fix the bug in the following Python code.,"def remove_duplicates(ls):
    result = []
    for e in ls:
        if e not in result:
            result.append(e)
    return result","def remove_duplicates(ls):
    result = []
    for e in ls:
        if e not in result:
            result.append(e)
    return list(set(result))","def remove_duplicates(ls:
    result = []
    for e in ls:
        if e not in result:
            result.append(e
    return list(set(result",Syntax Error,Loops
Write a function to extract the even elements in the nested mixed tuple.,,"def even_ele(test_tuple, even_fnc): 
	res = tuple() 
	for ele in test_tuple: 
		if isinstance(ele, tuple): 
			res += (even_ele(ele, even_fnc), ) 
		elif even_fnc(ele): 
			res += (ele, ) 
	return res 
def extract_even(test_tuple):
  res = even_ele(test_tuple, lambda x: x % 2 == 0)
  return (res) ","def even_ele(test_tuple, even_fnc): 
	res = tuple() 
	for ele in test_tuple: 
		if isinstance(ele, tuple): 
			res += (even_ele(ele, even_fnc), ) 
		elif even_fnc(ele): 
			res += (ele, ) 
	return res 
def extract_even(test_tuple):
  res = even_ele(test_tuple, lambda x: x % 2 == 0)
  return (res) ",Syntax Error,File I/O
Write a python function to find smallest number in a list.,,"def smallest_num(xs):
  return min(xs)
",def smallest_num(xs,Incomplete Answer,File I/O
Generate a Python program to reverse the digits of a given number.,9786,"def reverse_number(num):
    rev = 0
    while num > 0:
        reminder = num%10
        rev = (rev*10)+reminder
        num = num//10
    return rev","def reverse_number(num):
    rev = 0
    while num > 0:
        reminder = ",Incomplete Answer,Recursion
Write a function to compute binomial probability for the given number.,,"def nCr(n, r): 
	if (r > n / 2): 
		r = n - r 
	answer = 1 
	for i in range(1, r + 1): 
		answer *= (n - r + i) 
		answer /= i 
	return answer 
def binomial_probability(n, k, p): 
	return (nCr(n, k) * pow(p, k) *	pow(1 - p, n - k)) ","def nCr(n, r): 
	if (r > n / 2): 
		r = n - r 
	answer = 1 
	for i in range(1, r + 1): 
		answer *= (n - r + i) 
	",Incomplete Answer,File I/O
Create a Python function to calculate the standard deviation of a set of numbers.,"[1, 2, 3, 4, 5]","def calculate_std(numbers):
  mean = sum(numbers)/len(numbers)
  squared_differences = [(num-mean)**2 for num in numbers]
  variance = sum(squared_differences) / len(numbers)
  return variance**0.5

result = calculate_std([1, 2, 3, 4, 5])
print(result)","def calculate_std(numbers):
  mean = sum(numbers)/len(numbers)
  squared_differences = [(num-mean)**2 for num in numbers]
  variance = sum(squared_differences) / len(numbers)
  return variance**0.5

result = calculate_std([1, 2, 3, 4, 5])
print(result)",correct,OOP
"Create a program in Python that prints ""Greetings"" for any name that is passed as an argument.",Andrew,"import sys

name = sys.argv[1]

print(""Greetings, ""+name+""!"")","import sys

name = sys.argv[1]

print(""Greetings, ""+name+""!"")",correct,Recursion
Create a Python script to remove redundant characters in a given string.,"text = ""teeestttingggg""","def remove_redundant(text):
    """"""Remove redundant characters from a given string""""""
    result = """"

    # Iterate over the string
    for c in text:
        # Add the character to the result if it is not already present
        if c not in result:
            result+=c

    return result

# Output
print(remove_redundant(text))","def remove_redundant(text):
""""""Remove redundant characters from a given string""""""
result = """"

# Iterate over the string
for c in text:
    # Add the character to the result if it is not already present
    if c not in result:
        result+=c

return result

# Output
print(remove_redundant(text))",Syntax Error,Recursion
Can you make a Python program to print out the Fibonacci sequence up to the nth element of the sequence?,8,"def Fibonacci(n):
  a = 0
  b = 1
  if n < 0:
    print(""Incorrect input"")
  elif n == 0:
    return 0
  elif n == 1:
    return 1
  else:
    for i in range(2,n):
      c = a + b
      a = b
      b = c
    return b

print(Fibonacci(8)) # Output: 13","def Fibonacci(n):
  a = 0
  b = 1
  if n < 0:
    print(""Incorrect input"")
  elif n == 0:
    return 0
  elif n == 1:
    return 1
  else:
    for i in range(2,n):
      c = a + b
      a = b
      b = c
    return b

print(Fibonacci(8)) # Output: 13",correct,Loops
"Generate a Python function that takes a string as input and returns True if the string contains a capital letter, otherwise False.",MyString,"def has_capital_letter(input_string):
    for character in input_string:
        if character.isupper():
            return True
    return False","def has_capital_letter(input_string):
    for character in input_string:
        if character.isupper():
            return True
    return False",correct,Loops
Suggest a completion for the following python code to get the maximum unique elements in an array.,def maximum_unique_elements(arr):,"def maximum_unique_elements(arr):
    curr_max = 0
    seen = set()
    for num in arr:
        if num not in seen:
            curr_max += 1
            seen.add(num)

    return curr_max","def maximum_unique_elements(arr):
    curr_max = 0
    seen = set()
    for num in arr:
      ",Incomplete Answer,File I/O
Write a Python program to implement Quick Sort algorithm,,"def quick_sort(arr): 
  if len(arr) <= 1:
  return arr
  
  pivot = arr[len(arr) // 2]
  lesser_arr, equal_arr, greater_arr = [], [], []
  for num in arr:
  if num < pivot:
  lesser_arr.append(num)
  elif num == pivot:
  equal_arr.append(num)
  else:
  greater_arr.append(num)
    
  return quick_sort(lesser_arr) + equal_arr + quick_sort(greater_arr)","def quick_sort(arr): 
  if len(arr) <= 1:
  return arr
  
  pivot = arr[len(arr) // 2]
  lesser_arr, equal_arr, greater_arr = [], [], []
  for num in arr:
  if num < pivot:
  ",Incomplete Answer,Loops
Write a Python program to calculate the total sum of a given list of numbers,"[1,2,3,4,5]","""""""
Calculate the total sum of a given list of numbers using Python
""""""

# Function to calculate the total sum of a given list of numbers
def get_total_sum(num_list):
    total = 0
    
    for num in num_list:
        total += num

    return total

if __name__ == '__main__':
    num_list = [1,2,3,4,5]
    total_sum = get_total_sum(num_list)
    print(total_sum)","""""""
Calculate the total sum of a given list of numbers using Python
""""""

# Function to calculate the total sum of a given list of numbers
def get_total_sum(num_list):
    total = 0
 ",Incomplete Answer,File I/O
Write a Python program to check if the given matris is a symmetric matrix.,"A = [[1,2,3],
    [-2,0,4],
    [3,-4,5]]","def is_symmetric(a):
    n = len(a)
    for i in range(n):
        for j in range(n):
            if a[i][j] != a[j][i]:
                return False
    return True

A = [[1,2,3],
    [-2,0,4],
    [3,-4,5]]
print(is_symmetric(A))","def is_symmetric(a):
    n = len(a)
    for i in range(n):
        for j in range(n):
            if a[i][j] != a[j][i]:
                return False
    return True

A = [[1,2,3],
    [-2,0,4],
    [3,-4,5]]
pritn(is_symmetric(A))",Syntax Error,Loops
Write a Python program to generate a multiplication table for numbers from 2 to 5 using a for loop.,,"for i in range(2, 6): 
 for j in range(1, 11): 
  print('{} x {} = {}'.format(i, j, i * j)) 
 print("" "")","for i in range(2, 6) 
 for j in range(1, 11) 
  print('{} x {} = {}'.format(i, j, i * j)) 
 print("" "")",Syntax Error,Loops
Develop a function in Python to sort a given array of strings.,,"def sort_strings(strings):
  return sorted(strings)",def sort_strings(strings),Incomplete Answer,OOP
Write a python program to convert a given string in valid json format,"str = '{""key1"": ""value1"", ""key2"": ""value2""}'","import json

def str_to_json(json_string):
    # convert the string to dictionary
    json_dict = json.loads(json_string) 
    # convert the dictionary to json
    json_data = json.dumps(json_dict) 
    # return json
    return json_data","import json

def str_to_json(json_string):
    # convert the string to dictionary
    json_dict = json.loads(json_string) 
    # convert the dictionary to json
    json_data = json.dumps(json_dict) 
    # return json
    return json_data",correct,Loops
Develop an algorithm in Python for finding the maximum index of an array's sub-array.,"arr = [2, 3, 4, 5, 7, 9, 11]","def findMaxIndex(arr):
    """"""This function finds the maximum index of an array's sub-array.""""""
    maxIndex = 0
    currentMax = 0
    for i in range(1, len(arr)):
        if arr[i] > arr[currentMax]:
            maxIndex = i
            currentMax = i
    return maxIndex

arr = [2, 3, 4, 5, 7, 9, 11]
maxIndex = findMaxIndex(arr)
print(maxIndex) # Output: 5","def findMaxIndex(arr)
    """"""This function finds the maximum index of an array's sub-array.""""""
    maxIndex = 0
    currentMax = 0
    for i in range(1, len(arr))
        if arr[i] > arr[currentMax]
            maxIndex = i
            currentMax = i
    return maxIndex

arr = [2, 3, 4, 5, 7, 9, 11]
maxIndex = findMaxIndex(arr)
print(maxIndex) # Output 5",Syntax Error,String Manipulation
Develop a python program to convert the given text into a list,"Text: Apples, oranges, and bananas","text = ""Apples, oranges, and bananas""

list_from_text = text.split("", "")

print(""List:"", list_from_text)","text = ""Apples, oranges, and bananas""

list_from_text = text.split("", "")

print(""List:"", list_from_text)",correct,Recursion
What is the purpose of the method in line 4 of the code?,"def random_number_generator(min, max):
  """"""Return a random number between the given range.""""""
  rng = random.range(min, max)
  return rng","The purpose of the method in line 4 is to generate a random number within the given range of min and max. It uses the Python's random.range() method which returns a random integer from the range of min to max, inclusive.","The purpose of the method in line 4 is to generate a random number within the given range of min and max. It uses the Python's random.range() method which returns a random integer from the range of min to max, inclusive.",Syntax Error,Recursion
Generate a program in Python to evaluate an expression tree.,,"def eval(node):
    if node.isLeaf():
        return node.value
 
    left = eval(node.left)
    right = eval(node.right)
 
    if node.op == '+':
        return left + right
    if node.op == '-':
        return left - right
    if node.op == '*':
        return left * right
    if node.op == '/':
        return left / right","def eval(node):
    if node.isLeaf():
        return node.value
 
    left = eval(node.left)
    right = eval(node.right)
 
    if node.op == '+':
        return left + right
    if node.op == '-':
        return left - right
    if node.op == '*':
        return left * right
    if node.op == '/':
        return left / right",Syntax Error,File I/O
Write a Python program to efficiently delete all items from a set that are in another set.,"A = {1, 2, 3, 4, 5}
B = {2, 4}","A = {1, 2, 3, 4, 5}
B = {2, 4}

A -= B","A = {1, 2, 3, 4, 5}
B = {2, 4}

A -= B",Syntax Error,OOP
Implement an algorithm in Python to reverse a given string.,,"def reverse_string(string): 
    return string[::-1]",def reverse_string(string),Incomplete Answer,String Manipulation
Develop a Python code to give an alert message of the total cost of an item after adding tax.,"cost = 5
tax rate = 0.2","tax_rate = 0.2
cost = 5

total_cost = cost + (cost * tax_rate)

print(""The total cost of the item after adding tax is $"" + str(total_cost))

alert(""The total cost of the item after adding tax is $"" + str(total_cost))","tax_rate = 0.2
cost = 5

total_cost = cost + (cost * tax_rate)

print(""The total cost of the item after addi",Incomplete Answer,Recursion
Write a Python script to download the html content of a given webpage,https://www.example.com/,"import requests

url = 'https://www.example.com/'
resp = requests.get(url)
html = resp.content","import requests

url = 'https://www.example.com/'
resp = requests.get(url)
html = resp.content",correct,String Manipulation
Create a Python function that takes in an array of integers and returns the maximum value.,"[2,3,5,1]","def max_value(int_arr):
    max_val = int_arr[0]
    for i in int_arr:
        if i > max_val:
            max_val = i
    return max_val","def max_value(int_arr:
    max_val = int_arr[0]
    for i in int_arr:
        if i > max_val:
            max_val = i
    return max_val",Syntax Error,Recursion
Create a basic Python application to return the similarity between two strings using fuzzywuzzy.,"The two strings are: ""Apple"" and ""Apples"".","# Import the necessary modules
import fuzzywuzzy 
from fuzzywuzzy import process

# The two strings to compare 
str1 = 'Apple'
str2 = 'Apples'

# Compare the two strings
score = fuzzywuzzy.fuzz.ratio(str1, str2)

# Print the similarity score
print(score)

# Output 
100","# Import the necessary modules
import fuzzywuzzy 
from fuzzywuzzy import process

# The two strings to compare 
str1 = 'Apple'
str2 = ",Incomplete Answer,Recursion
Generate a function in Python that takes a number as input and prints its corresponding binary representation.,5,"def binary_representation(num):
    binary_representation = bin(num)[2:] 
    print(""Binary representation of "" + str(num) + "" is: "" + binary_representation)

# Driver code
binary_representation(5) # Binary representation of 5 is: 101","def binary_representation(num):
    binary_representation = bin(num)[2:] 
    print(""Binary representation of "" + str(num) + "" is: "" + binary_representation)

# Driver code
binary_representation(5) # Binary representation of 5 is: 101",correct,File I/O
"using the following Json as an example, write a Python program that reads this Json into an object.","{
   ""id"":1,
   ""name"":""Testing"",
   ""description"":""This is a test""
}","import json

# example data
data = '{""id"":1,""name"":""Testing"",""description"":""This is a test""}'

# parse data into a Python object
obj = json.loads(data)

print(obj)","import json

# example data
data = '{""id"":1,""name"":""Testing"",""description"":""This ",Incomplete Answer,Recursion
Write a function in Python that prints all the prime numbers between two given numbers inclusive.,"Start: 15
End: 25","def printPrimeNumbers(start, end):
 for num in range(start, end+1):
 # base case
 if num > 1: 
 for i in range(2, num): 
 if (num % i) == 0: 
 break
 else: 
 print(num) 

# Driver Code 
start = 15
end = 25

printPrimeNumbers(start, end) 

# Output:
# 17 
# 19 
# 23 
# 25","def pritnPrimeNumbers(start, end):
 for num in range(start, end+1):
 # base case
 if num > 1: 
 for i in range(2, num): 
 if (num % i) == 0: 
 break
 else: 
 pritn(num) 

# Driver Code 
start = 15
end = 25

pritnPrimeNumbers(start, end) 

# Output:
# 17 
# 19 
# 23 
# 25",Syntax Error,Loops
Create a Python program to remove all duplicate elements from a list and preserving the original order.,"[1, 3, 3, 5, 5, 7]","# Program to remove duplicate elements

def remove_duplicates(nums):
 new_list = []
 for num in nums:
 if num not in new_list:
 new_list.append(num)
 
return new_list

# Main program
nums = [1, 3, 3, 5, 5, 7]
dedup_nums = remove_duplicates(nums)
print(dedup_nums) # [1, 3, 5, 7]","# Program to remove duplicate elements

def remove_duplicates(nums:
 new_list = []
 for num in nums:
 if num not in new_list:
 new_list.append(num
 
return new_list

# Main program
nums = [1, 3, 3, 5, 5, 7]
dedup_nums = remove_duplicates(nums
print(dedup_nums # [1, 3, 5, 7]",Syntax Error,File I/O
"Given three numbers, write a Python program that prints the largest among them.",,"def max_of_three(x, y, z):
    max_num = x
    if y > max_num:
        max_num = y
    if z > max_num:
        max_num = z
    return max_num","def max_of_three(x, y, z):
    max_num = x
    if y > max_num:
        max_num = y
    if z > max_num:
        max_num = z
    return max_num",correct,Recursion
Develop a function in python to delete all the vowels in a string.,"string = ""B e a u t iful""","def remove_vowels(string):
    vowels = 'aeiou'
    new_string = ''

    for c in string:
        if c.lower() not in vowels:
            new_string += c
    
    return new_string

if __name__ == '__main__':
    string = ""Beau tiful""
    print(remove_vowels(string))","def remove_vowels(string):
    vowels = 'aeiou'
    new_string = ''

    for c in string:
        if c.lower() not in vowels:
       ",Incomplete Answer,Recursion
Construct a program to filter out empty strings from a given list.,"[""Hello"", """", ""Python"", ""World"", """"]","def remove_empty_strings(lst):
    filtered_list = []
    for item in lst:
        if item != """":
            filtered_list.append(item)
    return filtered_list

filtered_list = remove_empty_strings([""Hello"", """", ""Python"", ""World"", """"])
print(filtered_list)","def remove_empty_strings(lst):
    filtered_list = []
    for item in lst:
        if item != """":
            filtered_list.append(item)
    return filtered_list

filtered_list = remove_empty_strings([""Hello"", """", ""Python"", ""World"", """"])
pritn(filtered_list)",Syntax Error,OOP
Create a python program to check the following string for palindrome,"""madam""","def check_palindrome(string):
  rev_str = string[::-1]
  if rev_str == string:
    return ""The string is a palindrome""
  return ""The string is not a palindrome""

print(check_palindrome(""madam""))","def check_palindrome(string):
  rev_str = string[::-1]
  if rev_str == string:
    return ""The string is a palindrome""
  return ""The string is not a palindrome""

print(name, check_palindrome(""madam""))",Syntax Error,Loops
Write a code snippet in Python which takes an array and returns the list of its square root values.,"[2, 4, 9]","[math.sqrt(x) for x in [2, 4, 9]]","[math.sqrt(x) for x in [2, 4, 9]]",Syntax Error,Recursion
Write a function to convert the given tuple to a floating-point number.,,"def tuple_to_float(test_tup):
  res = float('.'.join(str(ele) for ele in test_tup))
  return (res) ","def tuple_to_float(test_tup):
  res = float('.'.join(str(ele) for ele in test_tup))
  return (res) ",Syntax Error,OOP
Modify the following Python program to calculate the factorial of a given number.,n=5,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

num = 5
print(f""The factorial of {num} is {factorial(num)}"")","def factorial(n:
    if n == 0:
        return 1
    else:
        return n * factorial(n-1

num = 5
print(f""The factorial of {num} is {factorial(num}""",Syntax Error,File I/O
Use a GPT model to generate a Python function for calculating the area of a triangle.,,"def area_of_triangle(base, height):
 return 0.5 * base * height

# Calculate the area of triangle
a = area_of_triangle(5, 4)
print('The area of the triangle is: ', a)","def area_of_triangle(base, height):
 return 0.5 * base * height

# Calculate the ar",Incomplete Answer,OOP
Create a Python script to randomly generate a character from a given list of characters.,"['A', 'B', 'C', 'D']","import random

char_list = ['A', 'B', 'C', 'D']
random_char = random.choice(char_list)
print(random_char)","import random

char_list = ['A', 'B', 'C', 'D']
rand",Incomplete Answer,Loops
"Using any programming language of your choice, write a calculator program that takes in two integers and returns the result of the addition operation.","7, 9","// Java
public int Add(int a, int b) {
  return a + b;
}

// Python
def add(a, b):
  return a + b","// Java
public int Add(int a, int b {
  return a + b;
}

// Python
def add(a, b:
  return a + b",Syntax Error,File I/O
Generate a Python function to classify the given list of numbers into two subgroups (positives and negatives).,"list = [4, 5, -2, -7, 5]","def classify_numbers(list):
    '''This function will classify the list of numbers into positives and negatives'''

    positives = []
    negatives = []

    for n in list:
        if n >= 0:
            positives.append(n)
        else:
            negatives.append(n)

    return positives, negatives","def classify_numbers(list):
    '''This function will classify the list of numbers into positives and negatives'''

    positives = []
    negatives = ",Incomplete Answer,File I/O
Create a Python script to calculate the Fibonacci numbers up to a given number.,,"def Fibonacci(n): 
	if n==0: 
		return 0
	if n==1: 
		return 1
	else: 
		return Fibonacci(n-1)+Fibonacci(n-2)","def Fibonacci(n) 
	if n==0 
		return 0
	if n==1 
		return 1
	else 
		return Fibonacci(n-1)+Fibonacci(n-2)",Syntax Error,Recursion
"Write an Python script to extract the year, month and day from a given date in the format ""dd/mm/yyyy"".","""27/09/2017""","import datetime

date_string = ""27/09/2017""

date_object = datetime.datetime.strptime(date_string, ""%d/%m/%Y"")

print(""Year:"", date_object.year)
print(""Month:"", date_object.month)
print(""Day:"", date_object.day)","import datetime

date_string = ""27/09/2017""

date_object = datetime.datetime.strptime(date_string, ""%d/%m/%Y"")

pritn(""Year:"", date_object.year)
pritn(""Month:"", date_object.month)
pritn(""Day:"", date_object.day)",Syntax Error,String Manipulation
Generate a Python script to sort a 2D array of integers by the second column.,"[[1, 10], [5, 5], [4, 8]]","def sort_2d_arr(arr):
    arr.sort(key = lambda x : x[1])
    return arr

print(sort_2d_arr([[1, 10], [5, 5], [4, 8]]))

# Output
[[5, 5], [4, 8], [1, 10]]","def sort_2d_arr(arr):
    arr.sort(key = lambda x : x[1])
    return arr

pri",Incomplete Answer,String Manipulation
Design a Python program to generate a multiplication table for the numbers from 1 to 10.,,"def multiplicationTable(n): 
    for i in range(1, 11): 
        print(n, 'x', i, '=', n*i) 
       
# Driver Code 
n = 9
multiplicationTable(n)","def multiplicationTable(n): 
    for i in range(1, 11): 
        print(n",Incomplete Answer,File I/O
Create a function in Python that takes a list of strings and checks if any of the strings are palindromes.,"[""civic"", ""apple"", ""racecar""]","def check_palindrome(string_list):
    for string in string_list:
        if string == string[::-1]:
            return True
    return False

result = check_palindrome([""civic"", ""apple"", ""racecar""])
print(result)","def check_palindrome(string_list)
    for string in string_list
        if string == string[-1]
            return True
    return False

result = check_palindrome([""civic"", ""apple"", ""racecar""])
print(result)",Syntax Error,Recursion
Concatenate two strings using Python,"string1 = ""Hello""
string2 = ""World""","string1 + string2

result = string1 + string2
print(result)","string1 + string2

result = s",Incomplete Answer,Recursion
Write a Python program to remove unnecessary punctuation marks from a string.,,"#Function to remove all punctuations from a string
def remove_punctuations(text): 
    for punctuation in '!""#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~':
        text = text.replace(punctuation, '')
    return text
 
#input string
str = ""It's a pleasure to meet you!!!""
 
#calling the function
result = remove_punctuations(str)
 
#printing the result
print(result)","#Function to remove all punctuations from a string
def remove_punctuations(text): 
    for punctuation in '!""#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~':
        text = text.replace(punctuation, '')
    return text
 
#input string
str = ""It's a pleasure to meet you!!!""
 
#calling the function
result = remove_punctuations(str)
 
#printing the result
print(result)",correct,String Manipulation
Write a function to find the surface area of a cube.,,"def surfacearea_cube(l):
  surfacearea= 6*l*l
  return surfacearea","def surfacearea_cube(l):
  surfac",Incomplete Answer,String Manipulation
Write a function to calculate the height of the given binary tree.,,"class Node: 
	def __init__(self, data): 
		self.data = data 
		self.left = None
		self.right = None
def max_height(node): 
	if node is None: 
		return 0 ; 
	else : 
		left_height = max_height(node.left) 
		right_height = max_height(node.right) 
		if (left_height > right_height): 
			return left_height+1
		else: 
			return right_height+1","class Node: 
	def __init__(self, data): 
		self.data = data 
		self.left = None
		self.right = None
def max_height(node): 
	if node is None: 
		return 0 ; 
	else : 
		left_height = max_height(node.left) 
		right_height = max_height(node.right) 
		if (left_height > right_height): 
			return left_height+1
		else: 
			return right_height+1",correct,OOP
Rewrite the following code snippet to use the generator in Python.,"def squares_up_to_n(n):
    results = []
    for i in range(n):
        results.append(i**2)
    return results","def squares_up_to_n(n):
  for i in range(n):
    yield i**2","def squares_up_to_n(n):
  for i in range(n):
    yield i**2",correct,Recursion
Develop a Python program to search an element in a list using linear search.,"[25, 10, 5, 2, 50], 50","def linear_search(list, element):
    for i in range(len(list)):
        if list[i] == element:
            return i
    return -1

index = linear_search([25, 10, 5, 2, 50], 50)
if index < 0:
    print(f""{element} not found in the list"")
else:
    print(f""{element} found at index {index}"")","def linear_search(list, element):
    for i in range(len(list)):
        if list[i] == element:
            return i
    return -1

index = linea",Incomplete Answer,File I/O
Generate a random upper-case letter using Python.,,"import random

def get_random_uppercase_letter():
    return chr(random.randint(65,90))

if __name__ == '__main__':
    print(get_random_uppercase_letter())","import random

def get_random_uppercase_letter():
    return chr(random.randint(65,90))

if __name__ == '__main__':
    print(get_random_uppercase_letter())",correct,Loops
Create a function in Python to generate a random username using a list of provided names.,"names = [""John"", ""Alice"", ""Bob""]","import random

def generate_username(names):
    username = random.choice(names)
    username += str(random.randint(0, 100))
    return username

# Generate a random username
username = generate_username(names)
print(username)

# Output
Alice54","import random

def generate_username(names):
    username = random.choice(names)
    username += str(random.randint(0, 100))
    return username

# Generate a random username
username = generate_username(names)
print(name, username)

# Output
Alice54",Syntax Error,Recursion
Create a simple Python class that captures the number of clicks a user makes on a given button.,,"class ClickCounter:
    def __init__(self):
        self.click_count = 0

    def record_click(self):
        self.click_count += 1

    def get_click_count(self):
        return self.click_count","class ClickCounter:
    def __init__(self):
        self.click_count = 0

    def record_click(self):
        self.click_count += 1

    def get_click_count(self):
        return self.click_count",correct,Recursion
Create a Python dictionary that stores the number of occurrences of each character in a string.,"s = ""Hello World!""","def countCharacters(s):
  # Create empty dictionary 
  chars_dict = {}
  
  # Iterate over each character in the string
  for char in s:
    # If the character is not in the dictionary, set the value to 1
    if char not in chars_dict:
      chars_dict[char] = 1
    # Otherwise, increment the value
    else:
      chars_dict[char] += 1
  
  return chars_dict","def countCharacters(s):
  # Create empty dictionary 
  chars_dict = {}
  
  # Iterate over each character in the string
  for char in s:
    # If the character is not in the dictio",Incomplete Answer,File I/O
"Create a Python program to calculate the total cost of an item given its price, number of pieces, and tax rate.","Tax rate: 0.1
Price: 10
Pieces: 4","def calc_cost(price, pieces, tax_rate):
    cost = price * pieces
    cost += cost * tax_rate
    return cost

price = 10
pieces = 4
tax_rate = 0.1

total_cost = calc_cost(price, pieces, tax_rate)
print('Total cost:', total_cost)","def calc_cost(price, pieces, tax_rate):
    cost = price * pieces
    cost += cost * tax_rate
    return cost

price = 10
pieces = 4
tax_rate = 0.1

total_cost = calc_cost(price, pieces, tax_rate)
print('Total cost:', total_cost)",correct,OOP
Create a Python program to remove all characters from a given string except for letters and whitespaces,Hello $% World,"def remove_non_letter_characters(s): 
    return """".join(e for e in s if e.isalpha() or e == "" "") 
      
s = 'Hello $% World'
print(remove_non_letter_characters(s))","def remove_non_letter_characters(s): 
    return """".join(e for e in s if e.isalpha() or e == "" "") 
      
s = 'Hello $% World'
print(remove_non_letter_characters(s))",correct,Recursion
Write a command line script to calculate the total number of people who attended a concert.,"Table: attendance

| name | age | arrival_time |
|------|-----|--------------|
| Jack | 20  | 9:00         |
| Jane | 21  | 8:45         |","#!/usr/bin/env python

import csv

total_attendees = 0
with open('attendance.csv', 'r') as csv_file:
    csv_reader = csv.reader(csv_file)
    for row in csv_reader:
        total_attendees += 1

print(f'Total Attendees: {total_attendees}')","#!/usr/bin/env python

import csv

total_attendees = 0
with open('attendance.csv', 'r') as csv_file:
    csv_reader = csv.reader(csv_file)
    for row in csv_reader:
        total_attendees += 1

print(f'Total Attendees: {total_attendees}')",correct,String Manipulation
Build a basic web server using Python.,,"import http.server
import socketserver

PORT = 8080

Handler = http.server.SimpleHTTPRequestHandler

with socketserver.TCPServer(("""", PORT), Handler) as httpd:
    print(""serving at port"", PORT)
    httpd.serve_forever()","import http.server
import socketserver

PORT = 8080

Handler = http.server.SimpleHTTPRequestHandler

with socketserver.TCPServer(("""", PORT), Handler) as httpd:
    print(""serving at port"", PORT)
    httpd.serve_forever()",correct,OOP
Create a class for a student in Python,,"class Student:
    def __init__(self, name, age, course):
        self.name = name
        self.age = age
        self.course = course
    
    def getCourse(self):
        return self.course","class Student:
    def __init__(self, name, age, course):
        self.name = name
        self.age = age
        self.course = course
    
    def getCourse(self):
        return self.course",correct,OOP
"Create a program in Python that takes two parameters, a string and an integer, and returns the string repeated that many times.","""Hello"", 4","def repeat_string(string, n):
    repeated_string = string * n
    return repeated_string

print(repeat_string(""Hello"", 4))","def repeat_string(string, n):
    repeated_string = string * n
    return repeated_string

print(repeat_string(""Hello"", 4))",correct,Recursion
Write a Python program to ask the user for an input and then calculate the factorial of that number.,,"num = int(input('Enter an integer: '))
factorial = 1

if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print(""The factorial of"",num,""is"",factorial)","num = int(input('Enter an integer: '))
factorial = 1

if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
  ",Incomplete Answer,Recursion
Create an API in Python for predicting the sentiment of a given text.,,"import requests

def predict_sentiment(text):
    data = {'query': text}
    _URL = ""http://localhost:5000/sentiment-prediction""
    response = requests.post(url = _URL, data = data)
    return response.json()
    
sentiment = predict_sentiment(""This is an example sentence"")
print(sentiment)","import requests

def predict_sentiment(text:
    data = {'query': text}
    _URL = ""http://localhost:5000/sentiment-prediction""
    response = requests.post(url = _URL, data = data
    return response.json(
    
sentiment = predict_sentiment(""This is an example sentence""
print(sentiment",Syntax Error,File I/O
Create a program in Python that has a list of 5 different computer languages and prints out each one in a separate line.,,"languages = [""Python"", ""C++"", ""Java"", ""Javascript"", ""Ruby""]

for language in languages:
    print(language)","languages = [""Python"", ""C++"", ""Java"", ""Javascript"", """,Incomplete Answer,Loops
Create a Python program that can encrypt a string using the RSA asymmetric algorithm.,,"# Imports
from Crypto.PublicKey import RSA

# Generate an RSA key pair
key = RSA.generate(2048)

# Retrieve the public key
public_key = key.publickey()

# Encrypt the message using the public key
def encrypt_message(message):
	encrypted_message = public_key.encrypt(message, 32)
	return encrypted_message","# Imports
from Crypto.PublicKey import RSA

# Generate an RSA key pair
key = RSA.generate(2048)

# Retrieve the public key
public_key = key.publickey()

# Encrypt the message using the public key
def encrypt_message(message):
	encrypted_message = public_key.encrypt(message, 32)
	return encrypted_message",correct,File I/O
Edit this code snippet in Python to remove any errors and improve readability.,"def remove_arr(arr):
result =[];
for a in arr:
  if a != 'b'
    result.append(a)
return result","def remove_arr(arr):
    result = []
    for a in arr:
        if a != 'b':
            result.append(a)
    return result","def remove_arr(arr):
    result = []
    for a in arr:
        if a != 'b':
            result.append(a)
    return result",correct,Recursion
Can you make the following string lowercase using Python?,"""This is a TEST string!""","""""""
Make the given string lowercase using Python
""""""

test_string = ""This is a TEST string!""

lowercase_string = test_string.lower()

print(lowercase_string) # prints ""this is a test string!""","""""""
Make the given string lowercase using Python
""""""

test_string = ""This is a TEST string!""

l",Incomplete Answer,Recursion
Create a loop in Python to print out all the odd numbers from 1 to 10.,,"for i in range(1, 11):
    if i % 2 != 0:
        print(i)","for i in range(1, 11):
    if i % 2 != 0:
        print(i)",correct,String Manipulation
Write a Python program to display all prime numbers less than a specified number.,,"def is_prime(n):
 if n <= 1:
 return False
 for i in range(2, int(n**0.5) + 1):
 if n % i == 0:
 return False
 return True

def find_prime_numbers(n):
 primes = []
 for i in range(2, n + 1):
 if is_prime(i):
 primes.append(i)
 return primes","def is_prime(n):
 if n <= 1:
 return False
 for i in range(2, int(n**0.5) + 1):
 if n % i == 0:
 return False
 return True

def find_prime_numbers(n):
 primes = []
 for i in range(2, n + 1):
 if is_prime(i):
 primes.append(i)
 return primes",Syntax Error,File I/O
"Write a function in Python that takes two parameters, an integer and a list of strings, and returns a modified list of strings.","int: 2 
list: [""Hello"", ""World""]","def modified_list(num, lst):
    modified_list = []
    for item in lst:
        modified_list.append(str(num) + item)
    return modified_list
    
print(modified_list(2, [""Hello"", ""World""]))
# Output: [""2Hello"", ""2World""]","def modified_list(num, lst):
    modified_list = []
    for item in lst:
        modified_list.append(str(num) ",Incomplete Answer,File I/O
Construct a for loop in Python to print all even numbers from 3 to 10.,,"for i in range(3, 11):
    if(i % 2 == 0):
        print(i)","for i in range(3, 11):
    if",Incomplete Answer,File I/O
"Rewrite the following Python code snippet to use list comprehension:

items = []
for item in range(10):
 items.append(item)",,items = [item for item in range(10)],items = [item for item in range(10)],correct,String Manipulation
Write a Python program to generate all subsets of a given set.,,"def generate_subset(input_set):
    subsets = [[]]
 
    for elem in input_set:
        n = len(subsets)
        for i in range(n):
            current_subset = subsets[i]
            subsets.append(current_subset + [elem])
 
    return subsets","def generate_subset(input_set):
    subsets = [[]]
 
    for elem in input_set:
        n = len(subsets)
        for i in range(n):
            current_subset = subsets[i]
            subsets.append(current_subset + [elem])
 
    return subsets",correct,File I/O
Write a Python program to generate a dataframe from a given JSON response.,"{""name"": ""John"", ""age"": 30, ""job"": ""Engineer"", ""salary"": 5000}","import pandas as pd

json_data = {""name"": ""John"", ""age"": 30, ""job"": ""Engineer"", ""salary"": 5000}

# Convert the data into a dataframe
df = pd.DataFrame(json_data, index=[0])

print(df)","import pandas as pd

json_data = {""name"": ""John"", ""age"": 30, ""job"": ""Engineer"", ""salary"": 5000}

# Convert the data into a dataframe
df = pd.DataFrame(json_data, index=[0])

print(df)",correct,Loops
Generate a python program that takes a list of names and prints the longest name.,"[""John"", ""Mark"", ""Kelly"", ""Cindy"", ""Dylan""]","def get_longest_name(names):
    longest_name = """"
    max_length = 0

    for name in names:
        if len(name) > max_length:
            longest_name = name
            max_length = len(name)

    return longest_name

longest_name = get_longest_name([""John"", ""Mark"", ""Kelly"", ""Cindy"", ""Dylan""]) 
print(longest_name)","def get_longest_name(names):
    longest_name = """"
    max_length = 0

    for name in names:
        if len(name) > max_length:
            longest_name = name
            max_length = len(name)

    return longest_name

longest_name = get_longest_name([""John"", ""Mark"", ""Kelly"", ""Cindy"", ""Dylan""]) 
print(longest_name)",correct,String Manipulation
Write a python function to toggle all odd bits of a given number.,,"def even_bit_toggle_number(n) : 
    res = 0; count = 0; temp = n    
    while(temp > 0 ) : 
        if (count % 2 == 0) : 
            res = res | (1 << count)      
        count = count + 1
        temp >>= 1 
    return n ^ res ","def even_bit_toggle_number(n) : 
    res = 0; count = 0; temp = n    
    while(temp > 0 ) : 
        if (count % 2 == 0) : 
            res = res | (1 << count)      
        count = count + 1
        temp >>= 1 
    return n ^ res ",correct,File I/O
Write a Python code to create a dictionary which contains a data structrue in the form of [x:x^2] where x is the key and x^2 is the value.,"numbers = [1, 2, 3, 4, 5]","numbers = [1, 2, 3, 4, 5] 

dict_numbers = {num: num**2 for num in numbers}
print(dict_numbers)","numbers = [1, 2, 3, 4, 5] 

dict_numbers = {num",Incomplete Answer,Recursion
Create a script to join two given strings if they have compatible characters.,"string1 = ""Python""
string2 = ""programming""",joined_string = 'Programmingpython',joined_string = 'Programmingpython',Syntax Error,Recursion
Utilize a for loop in Python to print all numbers from 0 to 9,,"for i in range(10):
  print(i)",for i in range(,Incomplete Answer,OOP
"In Python, write a function that takes a string as input and reverses it.","""Hello World!""","def reverseString(text):
    return text[::-1]
 
result = reverseString(""Hello World!"")
print(result)","def reverseString(text):
    return text[::-1]
 
result = reverseString(""Hello World!"")
print(result)",correct,Recursion
Generate a correct python program to identify a particular character in a string.,Search for the letter 'e' in the given string,"def char_in_string(char, string):
    for c in string:
        if c == char:
            return True
    return False","def char_in_string(char, string:
    for c in string:
        if c == char:
            return True
    return False",Syntax Error,OOP
Generate a Python function to find the RMS (root mean square) of a list of numbers.,,"def rms(lst):
 sum_sq = 0
 for n in lst:
  sum_sq += n*n
 return (sum_sq/len(lst))**0.5","def rms(lst):
 sum_sq = 0
 for n in lst:
  sum_sq += n*n
 return (sum_sq/len(lst))**0.5",Syntax Error,String Manipulation
Write a Python program that inputs two numbers and prints out their GCD (greatest common divisor).,"Two numbers: 90, 28","a = 90
b = 28

while(b > 0):
  temp = b 
  b = a % b
  a = temp 

print (""The GCD is"",a)","a = 90
b = 28

while(b > 0):
  temp = b 
  b = a % b
  a = temp 

print (""The GCD is"",a)",correct,String Manipulation
Write a Python program to print the number of prime numbers that exist within a given range.,,"def primeCounet(start, end):
    count = 0
    for num in range(start, end + 1): 
        if num > 1: 
            for i in range(2, num): 
                if (num % i) == 0: 
                    break 
            else: 
                count = count + 1
    return count

if __name__ == ""__main__"":
    start = 10
    end = 30
    print(primeCounet(start, end))","def primeCounet(start, end):
    count = 0
    for num in range(start, end + 1): 
        if num > 1: 
            for i in range(2, num): 
                if (num % i) == 0: 
                    break 
            else: 
                count = count + 1
    return count

if __name__ == ""__main__"":
    start = 10
    end = 30
    print(primeCounet(start, end))",correct,String Manipulation
Write a Python program to search for a given string in a list of strings and return the index of the first occurrence of that string.,"List of strings: [""Hello"", ""World"", ""Hello"", ""World""]
Search String: ""World""","def search_string(lst, s):
 for i, item in enumerate(lst):
 if item == s:
 return i
 return -1","def search_string(lst, s):
 for i, item in enum",Incomplete Answer,Recursion
Write a function in Python that takes in a string and then reverses each word in the string.,"string = ""This is a string""","def reverse_words(s):
  words = s.split()
  reversed_words = [word[::-1] for word in words]
  return ' '.join(reversed_words)

string = ""This is a string""
print(reverse_words(string))
// Output: sihT si a gnirts","def reverse_words(s):
  words = s.split()
  reversed_words = [word[::-1] for word in words]
  return ' '.join(reversed_words)

string = ""This is a string""
print(reverse_words(string))
// Output: sihT si a gnirts",correct,Loops
Write a loop to multiply all the numbers from 1 to 5 in Python.,,"multiply = 1
for x in range(1,6):
 multiply = multiply * x

print(multiply)","multiply = 1
for x in range(1,6):
 multiply = multiply * x

print(multiply)",correct,OOP
Write a python function to check whether the count of inversion of two types are same or not.,,"import sys 
def solve(a,n):   
    mx = -sys.maxsize - 1
    for j in range(1,n):  
        if (mx > a[j]):  
            return False  
        mx = max(mx,a[j - 1])    
    return True","import sys 
def solve(a,n):   
mx = -sys.maxsize - 1
for j in range(1,n):  
    if (mx > a[j]):  
        return False  
    mx = max(mx,a[j - 1])    
return True",Syntax Error,Recursion
Create a function in Python to determine whether a given string contains any whitespace character.,"""Hello World""","def hasWhitespace(string):
 for c in string:
  if c.isspace():
   return True
 return False

print(hasWhitespace(""Hello World""))","def hasWhitespace(string)
 for c in string
  if c.isspace()
   return True
 return False

print(hasWhitespace(""Hello World""))",Syntax Error,File I/O
Write a Python function that computes the average of a given array of numbers.,,"def find_average(numbers):
 return sum(numbers) / len(numbers)","def find_average(numbers):
 return sum(numbers) / len(numbers)",correct,OOP
Generate a function in Python that finds the max element in a given list.,"[2, 78, 34, 55]","def maxElement(arr):
    return max(arr)

array = [2, 78, 34, 55]

print(maxElement(array)) # 78","def maxElement(arr):
    return max(arr)

array = [2, 78, 34, 55]

print(maxElement(array)) # 78",correct,String Manipulation
Write a Python program to add two numbers given in string format.,"first number: ""2""
second number: ""3""","def addStringNumbers(num1,num2): 
    return int(num1) + int(num2)","def addStringNumbers(num1,num2): 
    return int(num1) + int(num2)",correct,Loops
Create an optimizer tool in Python to find the maximum of a given set of inputs.,"[5, 10, 15, 20]","def max_optimizer(input_list):
    maximum = max(input_list)
    return maximum","def max_optimizer(input_list):
    maxi",Incomplete Answer,File I/O
Write a function to concatenate each element of tuple by the delimiter.,,"def concatenate_tuple(test_tup):
    delim = ""-""
    res = ''.join([str(ele) + delim for ele in test_tup])
    res = res[ : len(res) - len(delim)]
    return (str(res)) ","def concatenate_tuple(test_tup)
    delim = ""-""
    res = ''.join([str(ele) + delim for ele in test_tup])
    res = res[  len(res) - len(delim)]
    return (str(res)) ",Syntax Error,String Manipulation
Write a Python function to convert all strings in a list to lower case.,"list = ['Hello', 'FRIENDS', 'WorLd']","def to_lower(arr): 
    return [item.lower() for item in arr] 

result = to_lower(list) 
print(result) 

# output 
['hello', 'friends', 'world']","def to_lower(arr): 
    return [item.lower() for item in arr] 

result =",Incomplete Answer,String Manipulation
Generate a python code to print a triangle of stars with a given number of rows.,,"def print_triangle(rows):
    """"""
    This function prints a triangle of stars with a given number of rows.
    
    Parameters:
    rows (int): The number of rows
    
    Returns:
    None
    """"""
    
    for i in range(rows):  
        for j in range(i+1): 
            print(""* "", end="""")
        print('\r')","def print_triangle(rows):
    """"""
    This function prints a triangle of stars with a given number of rows.
    
    Parameters:
    rows (int): The number of rows
    
    Returns:
    None
    """"""
    
    for i in range(rows):  
        for j in range(i+1): 
            print(""* "", end="""")
        print('\r')",correct,String Manipulation
Create a function in Python for recursively flattening a nested list,,"def flatten(lst):
 flat_list = []
 for x in lst:
 if type(x) == list:
 flat_list.extend(flatten(x))
 else:
 flat_list.append(x)
 return flat_list

sample_list = [[1, 2], [3, [4, 5]]]
print(flatten(sample_list))

# Output: [1, 2, 3, 4, 5]","def flatten(lst):
 flat_list = []
 for x in lst:
 if type(x) == list:
 flat_list.extend(flatten(x))
 else:
 flat_list.append(x)
 return flat_list

sample_list = [[1, 2], [3, [4, 5]]]
print(flatten(sample_list))

# Output: [1, 2, 3, 4, 5]",Syntax Error,String Manipulation
Create a Python program to compare two strings and return the percentage of characters that match.,"""stackoverflow"", ""stackerflow""","def compare_strings( string1, string2 ):
    s1, s2 = set(string1), set(string2)
    intersection = s1.intersection(s2)

    return (len(intersection) * 100) / len(s1)","def compare_strings( string1, string2 ):
    s1, s2 = set(string1), set(string2)
  ",Incomplete Answer,File I/O
Write a basic web scraper in Python using the BeautifulSoup library. The scraper should take as input a URL and output the text on the page.,Input URL: https://en.wikipedia.org/wiki/Web_scraping,"import requests
from bs4 import BeautifulSoup

url = ""https://en.wikipedia.org/wiki/Web_scraping"" 
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

text = soup.find_all('p')
for t in text:
    print(t.text)","import requests
from bs4 import BeautifulSoup

url = ""https://en.wikipedia.org/wiki/Web_scraping"" 
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

text = soup.find_all('p')
for t in text:
    print(name, t.text)",Syntax Error,Recursion
Develop a function in Python to generate a random list of numbers with no duplicates.,,"import random

def random_list(size):
    output = []
    while len(output) < size:
        n = random.randint(1,100)
        if n not in output:
            output.append(n)
    return output

print(random_list(10))","import random

def random_list(size):
    output = []
    while len(output) < size:
        n = random.randint(1,100)
        if n not in output:
            output.append(n)
    return output

pritn(random_list(10))",Syntax Error,File I/O
Write a Python program to Create a class called Vector with two methods to add and subtract vectors.,,"class Vector:
 def __init__(self, x, y):
  self.x = x
  self.y = y

 def __add__(self, other):
  return Vector(self.x + other.x, self.y + other.y)

 def __sub__(self, other):
  return Vector(self.x - other.x, self.y - other.y)

v1 = Vector(2, 4)
v2 = Vector(4, 6)
v3 = v1 + v2
print(v3.x, v3.y) # 6, 10
v4 = v1 - v2
print(v4.x, v4.y) # -2, -2","class Vector:
 def __init__(self, x, y):
  self.x = x
  self.y = y

 def __add__(self, other):
  return Vector(self.x + other.x, self.y + other.y)

 def __sub__(self, othe",Incomplete Answer,OOP
How do you find the length of a string in Python?,,"We can use the built-in len() function to find the length of a string in Python. The len() function takes the string as an argument and returns the length of the string, i.e. the number of characters in the string.

Example:

string = ""Hello""
string_length = len(string)

print(string_length) #Output: 5","We can use the built-in len() function to find the length of a string in Python. The len() function takes the string as an argument and returns the length of the string, i.e. the number of characters in the string.

Example:

string = ""Hello""
string_length = len(string)

print(string_length) #Output: 5",correct,Recursion
"Given a list, convert it to a dictionary using Python.","list_1 = [1, 2, 3, 4]","list_1_dict =dict() 
for i in range(len(list_1)): 
    list_1_dict[i] = list_1[i] 
print(list_1_dict)","list_1_dict =dict() 
for i in range(len(list_1)): ",Incomplete Answer,File I/O
Generate a Python program to calculate the maximum possible sum of a sub-array in an array of integers.,"A list of integers [-2, 4, -1, 5, 6]","def max_subarray_sum(arr):
    current_sum = 0
    max_sum = 0

    for x in arr:
        current_sum += x
        if current_sum < 0:
            current_sum = 0
        if current_sum > max_sum:
            max_sum = current_sum
    return max_sum

result = max_subarray_sum([-2, 4, -1, 5, 6])
print(result)","def max_subarray_sum(arr):
    current_sum = 0
    max_sum = 0

    for x in arr:
        current_sum += x
        if current_sum < 0:
            current",Incomplete Answer,Loops
Add a function to a python program that returns the maximum value in a list of integers.,"arr = [3, 6, 4, 7, 15, 10]","def max_val(arr):
    max_val = 0
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val","def max_val(arr):
    max_val = 0
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val",correct,File I/O
Create code in Python to check the right-hand side of a list and remove any elements which are divisible by 3.,"arr = [12, 15, 3, 8, 10, 24]","arr = [12, 15, 8, 10]
arr[:] = [x for x in arr if x % 3 != 0]","arr = [12, 15, 8, 10]
arr[:] = [x for x in arr if x % 3 != 0]",correct,OOP
Develop an algorithm in Python to find the middle element of a given linked list.,,"# Function to get the middle of the linked list 
def getmiddle(head): 
    if(head == None): 
        return head 
  
    slow_ptr = head 
    fast_ptr = head 
  
    while(fast_ptr != None and fast_ptr.next != None): 
        slow_ptr = slow_ptr.next
        fast_ptr = fast_ptr.next.next
  
    return slow_ptr","# Function to get the middle of the linked list 
def getmiddle(head): 
    if(head == None): 
        return head 
  
    slow_ptr = head 
    fast_ptr = he",Incomplete Answer,Loops
Write a Python program to print all the divisors of a give number n.,,"def divisors(n):
    for i in range(1,n+1):
        if n % i == 0:
            print(i)

n = 15
divisors(15)
# Output: 1 3 5 15","def divisors(n):
    for i in range(1,n+1):
        if n % i ==",Incomplete Answer,OOP
Create a Python program to take an array of integers and calculate the sum of squares of all numbers provided in the array.,"[2, 3, 4]","def sum_squares(arr):
    total = 0
    for num in arr:
        total += num ** 2
    return total

arr = [2, 3, 4]

total = sum_squares(arr)
print(total) # 29","def sum_squares(arr):
    total = 0
    for num in arr:
        total += num ** 2
    return total

arr = [2, 3, 4]

total = sum_squares(arr)
print(total) # 29",correct,Recursion
Create a function to remove duplicates from an array with Python.,"arr = [1,2,2,3,4,4,5]","def remove_duplicates(arr): 
    result = [] 
    seen = set() 
   
    for item in arr: 
        if item not in seen: 
            seen.add(item) 
            result.append(item) 
    return result","def remove_duplicates(arr): 
    result = [] 
    seen = set() 
   
    for item in arr: 
        if item not in seen: 
            seen.add(item) 
            result.append(item) 
    return result",Syntax Error,OOP
Implement a function in Python that takes a list of integers and a number and returns a list of numbers that have the given number as their sum.,"lst = [1, 2, 3, 4]
num = 4","def find_combos(lst, num):
 result = []
 for i in range(len(lst)):
 for j in range(i+1, len(lst)):
 if lst[i] + lst[j] == num:
 result.append([lst[i], lst[j]])
 return result

print(find_combos([1, 2, 3, 4], 4))

# Output: [[1, 3], [2, 2], [3, 1]]","def find_combos(lst, num):
 result = []
 for i in range(len(lst)):
 for j in range(i+1, len(lst)):
 if lst[i] + lst[j] == num:
 result.append([lst[i], lst[j]])
 return result

print(find_combos([1, 2, 3, 4], 4))

# Output: [[1, 3], [2, 2], [3, 1]]",correct,File I/O
Generate a Python script to detect if a linked list contains a loop,,"def contains_loop(head):
    slow_pointer = head
    fast_pointer = head

    while slow_pointer and fast_pointer and fast_pointer.next:
        slow_pointer = slow_pointer.next
        fast_pointer = fast_pointer.next.next
        if slow_pointer == fast_pointer:
            return True

    return False","def contains_loop(head):
    slow_pointer = head
    fast_pointer = head

    while slow_pointer and fast_pointer and fast_pointer.next:
        slow_poi",Incomplete Answer,String Manipulation
Generate a Python program to solve cube root of the input number.,25,"def cube_root(x):
    res = 0
    while (res*res*res < abs(x)):
        res += 1
  
    if (res*res*res != abs(x)):
        print(""Not a perfect cube"")
    else:
        if (x < 0):
            res = -res
        print(""Cube root of "" + str(x) + "" is "" + str(res))

cube_root(25)","def cube_root(x):
    res = 0
    while (res*res*res < abs(x)):
        res += 1
  
    if (res*res*res != abs(x)):
        print(""Not a pe",Incomplete Answer,File I/O
Generate a function in Python to populate a dictionary data-structure with a list of numerical values.,"[1, 2, 3, 4, 5]","def populateDict(lst):
    my_dict = {}
    for i in lst:
        my_dict[i] = i
    return my_dict

my_numbers = [1, 2, 3, 4, 5]
my_dict = populateDict(my_numbers)
print(my_dict)","def populateDict(lst):
    my_dict = {}
    for i in lst:
        my_dict[i] = i
    return my_dict

my_numbers = [1, 2, 3, 4, 5]
my_dict = populateDict(my_numbers)
print(my_dict)",correct,File I/O
Create a class in python that has three attributes and two methods,,"class MyClass:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
    
    def add(self):
        return self.a + self.b + self.c
    
    def multiply(self):
        return self.a * self.b * self.c","class MyClass:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
    
    def ",Incomplete Answer,Recursion
Create a program in Python that takes in a list of strings and returns the longest common substring between all the strings.,"[""hello"", ""hi"", ""hell""]","def longest_common_substring(strs):
 substr = strs[0]
 for s in strs[1:]:
 i = 0
 while i < min(len(substr), len(s)) and substr[i] == s[i]:
 i += 1
 substr = substr[:i]
 
 return substr

print(longest_common_substring([""hello"", ""hi"", ""hell""])) # Prints ""hell""","def longest_common_substring(strs):
 substr = strs[0]
 for s in strs[1:]:
 i = 0
 while i < min(len(substr), len(s)) and substr[i] == s[i]:
 i += 1
 substr = substr[:i]
 
 return substr

print(longest_common_substring([""hello"", ""hi"", ""hell""])) # Prints ""hell""",correct,Recursion
Create an algorithm to convert temperatures from Celsius to Fahrenheit in Python.,,"def celcius_to_fahrenheit(temp):
    return ((temp*9/5) + 32)

print(celcius_to_fahrenheit(20))","def celcius_to_fahrenheit(temp):
    return ((t",Incomplete Answer,Recursion
Create a Python program to generate a random username. The username should consist of two random words joined with an underscore.,,"import random

words = ['cat', 'dog', 'mouse', 'elephant', 'tiger', 'lion',
 'giraffe', 'hippo', 'monkey', 'zebra']

username = random.choice(words) + '_' + random.choice(words)

print('Username: ' + username)","import random

words = ['cat', 'dog', 'mouse', 'elephant', 'tiger', 'lion',
 'giraffe', 'hippo', 'monkey",Incomplete Answer,File I/O
Create a loop using Python that prints the numbers from 0 to 10 and stops if the number is 8.,,"for i in range(11):
    if i == 8:
        break 
    else:
        print(i)","for i in range(11):
    if i == 8:
        break 
    else:
        print(i)",correct,String Manipulation
Create a program to calculate the Fibonacci number for a given number using Python.,,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
# Driver Program 
print(Fibonacci(9))","def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
# Driver Program 
print(Fibonacci(9))",correct,OOP
Debug a Python function that swaps the values of two variables.,"def swap(x, y):
 temp = x
 x = y
 y = temp

a = 10
b = 20

swap(a, b)","def swap(x, y):
 temp = x
 x = y
 y = temp

a = 10
b = 20

swap(a, b)

#Verify the result
if a == 20 and b == 10:
 print(""Swap successful"")
else:
 print(""Swap unsuccessful"") # Output: Swap successful","def swap(x, y):
 temp = x
 x = y
 y = temp

a = 10
b = 20

swap(a, b)

#Verify the result
if a == 20 and b == 10:
 print(""Swap successful"")
else:
 print(""Swap unsuccessful"") # Output: Swap successful",correct,OOP
Write a Python program to remove all whitespace from a string.,The quick brown fox jumps over the lazy dog,"text_without_whitespace = """".join(text.split())","text_without_whitespace = """".join(text.split())",Syntax Error,OOP
Write a function in Python that takes in two strings of the same length and returns the number of different characters in the two strings.,"str1 = ""data""
str2 = ""muta""","def diff_char(str1, str2):
 count = 0
 for i in range(len(str1)):
 if str1[i] != str2[i]:
 count += 1
 return count","def diff_char(str1, str2):
 count = 0
 for i in range(len(str1)):
 if str1[i] != str2[i]:
 count += 1
 return count",correct,Loops
Design a Python algorithm to sort the elements of a given array by insertion sorting.,,"def insertionSort(array):
    """"""Algorithm to sort an array using insertion sort.""""""
    for j in range(1,len(array)):
        key = array[j]
        i = j-1
        while i >= 0 and array[i]> key:
            array[i+1] = array[i]
            i-=1
        array[i+1] = key","def insertionSort(array):
    """"""Algorithm to sort an array using insertion sort.""""""
    for j in range(1,len(array)):
        key = array[j]
        i = j-1
        while i >= 0 and array[i]> key:
            array[i+1] = array[i]
            i-=1
        array[i+1] = key",correct,Recursion
Write a Python program to create a list of odd numbers between x and y.,"x = 3, y = 10","# Generate a list of odd numbers between x and y
def odd_numbers(x, y):
  # Initialize an empty list 
  odd_list = [] 
  
  # Loop through the range
  for i in range(x, y): 
    # If the number is odd
    if (i % 2 != 0): 
      odd_list.append(i)
  
  return odd_list 
  
x = 3
y = 10

# Get the list of odd numbers
odd_list = odd_numbers(x, y)

# Print the list
print(odd_list)","# Generate a list of odd numbers between x and y
def odd_numbers(x, y)
  # Initialize an empty list 
  odd_list = [] 
  
  # Loop through the range
  for i in range(x, y) 
    # If the number is odd
    if (i % 2 != 0) 
      odd_list.append(i)
  
  return odd_list 
  
x = 3
y = 10

# Get the list of odd numbers
odd_list = odd_numbers(x, y)

# Print the list
print(odd_list)",Syntax Error,OOP
Write a Python script to find out the sum of all the divisors of a given number.,16,"def divisor_sum(n):
    sum = 0
    for i in range(1, n+1):
        if n % i == 0:
            sum += i
    return sum

n = 16
result = divisor_sum(n)
print(result)","def divisor_sum(n:
    sum = 0
    for i in range(1, n+1:
        if n % i == 0:
            sum += i
    return sum

n = 16
result = divisor_sum(n
print(result",Syntax Error,String Manipulation
Generate a Python program to search for a particular string in a given dictionary?,"dict = {'a': 'apple', 'b': 'ball', 'c': 'cat'}","def search_string(dict, keyword):
    # iterate through the dictionary
    for key, value in dict.items():
        # check if the keyword is present in the value of the dictionary
        if keyword in value:
            return key
    # if keyword not found in dictionary
    return ""Not found""","def search_string(dict, keyword):
    # iterate through the dictionary
    for key, value in dict.items():
        # check if the keyword is presen",Incomplete Answer,Recursion
Create a Python program to calculate the sum of all digits of a number,number = 2345,"def sum_digits(number):
    total = 0
    while number > 0:
        total += number % 10
        number //= 10
    return total

print(""Sum of digits:"",sum_digits(2345))","def sum_digits(number):
    total = 0
    while number > 0:
        total += number % 10
        number //= 10
    return total

print(""Sum of digits:"",sum_digits(2345))",correct,Loops
Write a python program which will show the number of even numbers in a list.,"[1, 2, 3, 4, 5, 6]","def count_even_numbers(list):
    count = 0
    for num in list:
        if num % 2 == 0:
            count += 1
    return count","def count_even_numbers(list):
    count = 0
    for num in list:
        if num % 2 == 0:
            count += 1
    return count",Syntax Error,Recursion
Suggest a way to make this Python function more efficient:,"def divide(nums):
    result = []
    for num in nums:
        if num % 2 == 0:
            result.append(num)
    return result","def divide(nums):
    return [num for num in nums if num % 2 == 0]","def divide(nums):
    return [num",Incomplete Answer,OOP
Create a function in Python which takes in two strings and concatenates them into one.,"""Hello,"" and ""World!""","def concat_string(str1, str2):
    return str1 + str2","def concat_string(str1, st",Incomplete Answer,Loops
Write a Python function that takes a string as an argument and returns a string with all characters sorted in alphabetical order.,,"def sort_string(string):
 sorted_string = sorted(string)
 return ''.join(sorted_string)","def sort_string(string):
 sorted_string = sorted(string)
 return ''.join(sorted_string)",correct,Loops
Generate a python program to calculate the number of elements in a set.,"{1, 2, 3, 4, 5}","# calculate the number of elements in a set

my_set = {1, 2, 3, 4, 5}
num_elements = len(my_set)

print(""Number of elements in the set:"", num_elements)","# calculate the number of elements in a set

my_set = {1, 2, 3, 4, 5}
num_elements = len(my_set

print(""Number of elements in the set:"", num_elements",Syntax Error,File I/O
Write a Python code for sorting a list of integers in ascending order.,"[5,2,7,3,1]","list=[5,2,7,3,1]
list.sort()
print(list)","list=[5,2,7,3,1]
list.sort()
pritn(list)",Syntax Error,OOP
Develop a function in Python to print the first 10 Fibonacci numbers.,,"def printFibo(n): 
    a = 0
    b = 1
    
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        print(a) 
    elif n == 1: 
        print(b) 
    else: 
        print(a)
        print(b)
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
            print(b)
        
printFibo(10)","def printFibo(n): 
    a = 0
    b = 1
    
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        print(a) 
    elif n == 1: 
        print(b) 
    else: 
        print(a)
        print(b)
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
            print(b)
        
printFibo(10)",correct,Recursion
"Create a Python function to classify a given string as a Positive, Negative, or Neutral sentiment.","""This is an amazing service.""","def classify_sentiment(string):
 if 'positive' in string:
  return 'Positive' 
 elif 'negative' in string:
  return 'Negative' 
 elif 'neutral' in string:
  return 'Neutral'
 else:
  return 'Unknown'

sentiment = classify_sentiment(""This is an amazing service."")
print(sentiment) # Positive","def classify_sentiment(string):
 if 'positive' in string:
  return 'Positive' 
 elif 'negative' in string:
  return 'Negative' 
 elif 'neutral' in string:
  return 'Neutral'
 else:
  return 'Unknown'

sentiment = classify_sentiment(""This is an amazing service."")
print(sentiment) # Positive",correct,File I/O
"Develop a Python program that takes an array of strings, and returns an object that contains the frequency of each string in the array.","[‘a’, ‘a’, ‘b’, ‘a’, ‘c’, ‘a’]","def count_frequency(arr):
    freq_dict = {}
    for ele in arr: 
        if ele in freq_dict: 
            freq_dict[ele] += 1
        else: 
            freq_dict[ele] = 1
    return freq_dict

arr = ['a', 'a', 'b', 'a', 'c', 'a']
result = count_frequency(arr)

print(result) # Output: {'a': 4, 'b': 1, 'c': 1}","def count_frequency(arr):
    freq_dict = {}
    for ele in arr: 
        if ele in freq_dict: 
            freq_dict[ele] += 1
        else: 
            f",Incomplete Answer,Loops
Generate an array with 20 random unique numbers from 1 to 100 in Python.,,"import random

random_numbers = []

while len(random_numbers) < 20:
    n = random.randint(1, 100)
    if n not in random_numbers:
        random_numbers.append(n)

print(random_numbers)","import random

random_numbers = []

while len(random_numbers) < 20:
    n = random.randint(1,",Incomplete Answer,OOP
Construct a program in Python to find all the possible substrings of a given string.,,"def find_substrings(string): 
  
    # Create an empty list to store all the possible substrings
    substrings = [] 
  
    # Iterate through each character of the string
    for i in range(len(string)): 
        for j in range(i, len(string)): 
            substrings.append(string[i: j + 1]) 
  
    return substrings","def find_substrings(string): 
  
    # Create an empty list to store all the possible substrings
    substrings = [] 
  
    # Iterate through each character of",Incomplete Answer,File I/O
"Create a Python script to normalize numerical data. The script should take a list of numbers as an input, and returns a normalized list of numbers.","[1, -2, 7, 5, 2]","import numpy as np

def normalize(data):
 return np.divide(data, np.linalg.norm(data))

data = [1, -2, 7, 5, 2]
print(normalize(data))

# Output
[ 0.1245256  -0.2490512  0.8736233  0.6207616  0.2490512]","import numpy as np

def normalize(data):
 return np.divide(data, np.linalg.norm(data))

data = [1, -2, 7, 5, 2]
print(normalize(data))

# Output
[ 0.1245256  -0.2490512  0.8736233  0.6207616  0.2490512]",correct,Loops
Design a Python program to detect loops in a linked list.,,"def detectLoop(head): 
        slow_p = head 
        fast_p = head
          
        while(slow_p and fast_p and fast_p.next): 
            slow_p = slow_p.next
            fast_p = fast_p.next.next
            if slow_p == fast_p: 
                return True
              
        return False","def detectLoop(head): 
        slow_p = head 
        fast_p = head
          
        while(slow_p and fast_p and fast_p.next): 
            slow_p ",Incomplete Answer,OOP
Create a program in Python to multiply all numbers in a list by a given number and return the result as a new list.,"multiply [2, 4, 6] by 2","def multiplyListByNumber(list, number):
  return [element*number for element in list]","def multiplyListByNumber(list, number):
  return [element*number for element in list]",correct,OOP
Design a program using the Python language to calculate the average cost of a given list of items.,"[2.15, 3.35, 6.25, 8.25]","def calculate_average(items):
 sum = 0
 for item in items:
  sum += item
 
 return sum / len(items)

items = [2.15, 3.35, 6.25, 8.25]

average = calculate_average(items)

print(""Average cost: $"" + str(round(average, 2)))","def calculate_average(items):
 sum = 0
 for item in items:
  sum += item
 
 return sum / len(items)

items = [",Incomplete Answer,Recursion
Write a Python program to print out the Fibonacci series up to n numbers where n is a user input.,User input n = 10,"# Python Program to print the Fibonacci series up to n numbers

n = int(input(""Enter the value of 'n': ""))

# first two numbers
a = 0
b = 1

print(""Fibonacci Series:"") 
print(a, b, end="" "") 
  
for i in range(2,n):
               
    c = a + b
    a = b
    b = c
    print(c, end = "" "")
    
print()","# Python Program to print the Fibonacci series up to n numbers

n = int(input(""Enter the value of 'n': ""))

# first two numbers
a = 0
b = 1

print(""Fi",Incomplete Answer,Loops
Write a python program to parse a JSON array of objects.,"[""name"":""Bob"",""age"":30,""city"":""New York""],[""name"":""Alice"",""age"":27,""city"":""San Francisco""]","import json
arr = json.loads('[{""name"":""Bob"",""age"":30,""city"":""New York""}, {""name"":""Alice"",""age"":27,""city"":""San Francisco""}]')
for obj in arr:
    print(""Name:"", obj[""name""])
    print(""Age:"", obj[""age""])
    print(""City:"", obj[""city""])
    print()","import json
arr = json.loads('[{""name"":""Bob"",""age"":30,""city"":""New York""}, {""name"":""Alice"",""age"":27,""city"":""San Francisco""}]')
for obj in arr:
    print(""Name:"", obj[""name""])
    print(""Age:"", obj[""age""])
    print(""City:"", obj[""city""])
    print()",correct,Recursion
Create a python program to generate a random number from 0 to 100.,,"import random

random_num = random.randint(0,100)
print(random_num)","import random

random_num = random.randint(0,100)
print(random_num)",correct,OOP
Generate a Python code to print all the permutations of an array.,,"def permutation(arr):
    if not arr:
        return []
    elif len(arr) == 1:
        return [arr]
    else:
        l = []
        for i in range(len(arr)):
            data = arr[i]
            remainders = arr[:i] + arr[i+1:]
            for p in permutation(remainders):
                l.append([data] + p)
        return l","def permutation(arr):
    if not arr:
        return []
    elif len(arr) == 1:
        return [arr]
    else:
        l = []
        for i in range(len(arr)):
            data = arr[i]
            remainders = arr[:i] + arr[i+1:]
            for p in permutation(remainders):
                l.append([data] + p)
        return l",correct,Recursion
Generate a random number between 0 and 5 using the Python Random module.,,"import random

num = random.randint(0, 5)
print(num)","import random

num = rando",Incomplete Answer,File I/O
Create a RESTful API using Python and Flask.,,"from flask import Flask, jsonify, request
from flask_restplus import Api, Resource, fields

# Create and configure the Flask app
app = Flask(__name__)
api = Api(app)

# Define the endpoints
@api.route('/employees', methods=['GET'])
def get_employees():
    # Return a list of all employees
    ...

# Run the Flask app
app.run(host='localhost', port=5000)","from flask import Flask, jsonify, request
from flask_restplus import Api, Resource, fields

# Create and configure the Flask app
app = Flask(__name__)
api = Api(app)

# Define t",Incomplete Answer,File I/O
Write a Python program to convert a given integer to binary representation.,30,"def int_to_bin(int_num):
 bin_str = bin(int_num)
 return bin_str[2:]

int_num = 30
bin_num = int_to_bin(int_num)
print(bin_num) # 11110","def int_to_bin(int_num):
 bin_str = bin(int_num)
 return bin_str[2:",Incomplete Answer,Recursion
Create an algorithm in Python that takes a list of strings and returns a list of strings with the duplicates removed.,"[""apple"", ""banana"", ""apple"", ""orange""]","def remove_duplicates(list_of_strings):
  unique_strings = set(list_of_strings)
  return list(unique_strings)","def remove_duplicates(list_of_strings):
  unique_strings = set(list_of_strings)
  return list(unique_strings)",Syntax Error,Loops
What is the smallest possible code in Python to read the value of an item in a given dictionary?,"{""key"": ""value""}","dictionary = {""key"": ""value""}
value = dictionary[""key""]","dictionary = {""key"": ""value""}
value = dictionary[""key""]",correct,String Manipulation
Can you create a Python program to find prime numbers within a given range?,,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True


def find_prime_numbers(a, b):
    result = []
    for num in range(a, b + 1):
        if is_prime(num):
            result.append(num)
    return result


start = 2
end = 20
print(find_prime_numbers(start, end))","def is_prime(n:
    if n <= 1:
        return False
    for i in range(2, n:
        if n % i == 0:
            return False
    return True


def find_prime_numbers(a, b:
    result = []
    for num in range(a, b + 1:
        if is_prime(num:
            result.append(num
    return result


start = 2
end = 20
print(find_prime_numbers(start, end",Syntax Error,OOP
Create a Python program to sort a dictionary in order of the values.,,"# using lambda function to sort the dictionary  
sorted_by_value = sorted(dictionary.items(), key = lambda kv: kv[1]) 
  
# printing the dictionary sorted by value 
print(sorted_by_value)","# using lambda function to sort the dictionary  
sorted_by_value = sorted(dictionary.items(),",Incomplete Answer,Recursion
Develop a Python program to calculate the sum of two integers provided as command line arguments.,,"import sys

# Get the command line arguments
a = int(sys.argv[1])
b = int(sys.argv[2])

# Calculate the sum
sum = a + b

# Print the result
print(sum)","import sys

# Get the command line arguments
a = int(sys.argv[1])
b = int(sys.argv[2])

# Calculate the sum
sum = a + b

# Print the result
print(sum)",correct,String Manipulation
Create a class in Python that takes two arguments a 'name' and 'age' and returns a greeting.,-,"class Greeting:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    def get_greeting(self):
        return f""Hello, my name is {self.name} and I am {self.age} years old.""","class Greeting:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    def get_greeting(self):
        return f""Hello, my name is {self.name} and I am {self.age} years old.""",correct,File I/O
Design a Python program that takes two integers as input and finds the greatest common divisor of them.,"12, 18","def find_gcd(a, b):
    if a == 0:
        return b
    if b == 0:
        return a

    if a > b:
        a, b = b, a
    
    while a != 0:
        b, a = a, b%a
        
    return b

print(find_gcd(12, 18))","def find_gcd(a, b):
    if a == 0:
        return b
    if b == 0:
        return a

    if a > b:
      ",Incomplete Answer,File I/O
Generate code in Python to traverse a tree in pre-order.,,"def preOrder(tree):
    # Root
    print(tree.data)
  
    # Left
    if tree.left is not None:
        preOrder(tree.left)
  
    # Right
    if tree.right is not None:
        preOrder(tree.right)","def preOrder(tree):
    # Root
    print(tree.data)
  
    # Left
    if tree.left is not None:
        preOrder(tree.left)
  
    # Right
    if tree.right is not None:
        preOrder(tree.right)",correct,String Manipulation
Write a Python program to edit the given JSON string using the given selection criteria.,"JSON String: { “name”: “Alice”, “role”: “programmer”, “department”: “engineering” }
Selection Criteria: Change the department of the given JSON string.","import json

json_str = '{ ""name"": ""Alice"", ""role"": ""programmer"", ""department"": ""engineering"" }'

data = json.loads(json_str)

data[""department""] = ""marketing""

json_str = json.dumps(data)

print(json_str)","import json

json_str = '{ ""name"": ""Alice"", ""role"": ""programmer"", ""department"": ""engineering"" }'

data = json.loads(json_str)

data[""department""] = ""marketing""

json_str = json.dumps(data)

print(json_str)",correct,OOP
"Generate a list of the binomial coefficients for a given value of ""n"" using a Python function.",,"def binomial_coefficient(n):
  coefficient = []
  for k in range(n+1):
    coefficient.append(int(math.factorial(n) / 
                        (math.factorial(k) * math.factorial(n - k))))
  return coefficient","def binomial_coefficient(n):
  coefficient = []
  for k in range(n+1):
    coefficient.append(int(math.f",Incomplete Answer,File I/O
Design a python program to replace every occurrence of a word in a string with another word.,"string = ""Hello hello world!""
word = ""hello""
replacement_word = ""welcome""","def replace_word(string, word, replacement_word):
    return string.replace(word, replacement_word)

print(replace_word(""Hello hello world!"", ""hello"", ""welcome""))","def replace_word(string, word, replacement_word):
    return string.replace(word, replacement_word)

print(replace_word(""Hello hello world!"", ""hello"", ""welcome""))",correct,File I/O
"Write a Python program to create a new string from a given string, where the first and last chars have been exchanged.",Hello,"def exchange_first_last(str1):
  str2 = """" 
  str2 = str1[-1] + str1[1:-1] + str1[0]
  return str2

print(exchange_first_last('Hello'))","def exchange_first_last(str1):
  str2 = """" 
  str2 = str1[-1] + str1[1:-1] + str1[0]
  return str2

print(exchange_first_last('Hello'))",correct,String Manipulation
Generate a code to generate the Fibonacci sequence until the nth number using the Python programming language,5,"def fibonacci(n):
  if n < 0: 
    raise ValueError(""Invalid input"")
  elif n == 0:
    return 0 
  elif n == 1: 
    return 1
  else: 
    return fibonacci(n-1) + fibonacci(n-2)
  
fibonacci_sequence = [fibonacci(i) for i in range(5)]
print(fibonacci_sequence)","def fibonacci(n):
  if n < 0: 
    raise ValueError(""Invalid input"")
  elif n == 0:
    return 0 
  elif n == 1: 
    return 1
  e",Incomplete Answer,OOP
Write a function to find t-nth term of arithemetic progression.,,"def tn_ap(a,n,d):
  tn = a + (n - 1) * d
  return tn","def tn_ap(a,n,d):
  tn = a",Incomplete Answer,Loops
Evaluate the following expression using Python 3: (2*3 - 6) / (4 + 8).,,"result = (2*3 - 6) / (4 + 8)
print(result)
# - 0.25",result = (2*3 - 6) / (4 +,Incomplete Answer,Loops
Write a Python code that gives the output of all possible combinations of given elements.,"[1, 2, 3]","from itertools import combinations

input_list = [1, 2, 3]
result = list(combinations(input_list, 3))

for combination in result:
    print(combination)","from itertools import combinations

input_list = [1, 2, 3]
result = list(combinations(input_list, 3))

for combination in result:
    print(combination)",correct,String Manipulation
Write a Python script to implement a linear search algorithm.,"Data: [5, 4, 2, 8, 7]
Key: 7","def linear_search(data, key):
    for i in range(len(data)):
        if data[i] == key:
            return i
    return -1

data = [5, 4, 2, 8, 7]
key = 7

result = linear_search(data, key)

if result != -1:
    print(""Element found at "" + str(result))
else:
    print(""Element not found"")","def linear_search(data, key):
    for i in range(len(data)):
        if data[i] == key:
            return i
    return -1

data = [5, 4, 2, 8, 7]
key = 7

result = linear_search(data, key)

if result != -1:
    print(name, ""Element found at "" + str(result))
else:
    print(name, ""Element not found"")",Syntax Error,String Manipulation
Create an optimization problem in Python to optimize the function.,"The given function is f(x, y) = x + y^2, where x and y are real numbers.","import numpy as np
from scipy.optimize import minimize
def f(x):
    x, y = x
    return x + y**2

x0 = np.array([0,0])
res = minimize(f, x0, method='nelder-mead')
print(res.x)","import numpy as np
from scipy.optimize import minimize
def f(x):
    x, y = x
    return x + y**2

x0 = np.array([0,0])
res = minimize(f, x0, method='nelder-mead')
print(res.x)",correct,OOP
Edit this Python function to return the result with two decimal points.,"def area_of_circle(radius):
    return 3.14 * radius * radius","def area_of_circle(radius):
    return round(3.14 * radius * radius, 2)","def area_of_circle(radius):
    return round(3.14 * radius * radius, 2)",correct,String Manipulation
Design a loop in a Python program to print the Fibonacci series up to the nth term.,n=10,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
print(fibonacci(n))","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
       ",Incomplete Answer,Recursion
Design a Python program to find the number of valid parentheses combinations.,,"def find_valid_parens_combinations(n):
   if n == 0:
      return 0

   if n == 1:
      return 1

   combinations = 0
   for i in range(1, n, 2):
      left  = i
      right = n - i

      combinations += find_valid_parens_combinations(left) * find_valid_parens_combinations(right)

   return combinations","def find_valid_parens_combinations(n):
   if n == 0:
      return 0

   if n == 1:
      return 1

   combinations = 0
   for i in range(1, n, 2):
      ",Incomplete Answer,Loops
"Write a PostgreSQL query that returns the title and author of all blog posts with the keyword ""Python"".","title (varchar), content (text), author (varchar)","SELECT title, author
FROM BlogPost
WHERE content LIKE '%Python%';","SELECT title, author
FROM BlogPo",Incomplete Answer,String Manipulation
"Write a python program to generate random passwords. The passwords should include letters, numbers, and symbols.",,"import random
import string

def generate_password():
 char_list = list(string.ascii_letters + string.digits + string.punctuation)
 random.shuffle(char_list)
 return ''.join(char_list[:20])

print(generate_password())","import random
import string

def generate_password(:
 char_list = list(string.ascii_letters + string.digits + string.punctuation
 random.shuffle(char_list
 return ''.join(char_list[:20]

print(generate_password(",Syntax Error,Loops
Create a Python package that contains a collection of functions for finding the average value of an array.,"[1,2,3,4,5]","def average(array):
 '''
 Finds the average of all numbers in an array

 Args:
 array (list): List of numbers

 Returns:
 float: The average of all values in the array
 '''

 total = 0
 for value in array:
 total += value

 return total / len(array)","def average(array:
 '''
 Finds the average of all numbers in an array

 Args:
 array (list: List of numbers

 Returns:
 float: The average of all values in the array
 '''

 total = 0
 for value in array:
 total += value

 return total / len(array",Syntax Error,OOP
Write a Python program to replace all the vowels in the given string with '_'.,String: Python is a very interesting language,"def replace_vowels(string):
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    res = []
    for letter in string.lower():
        if letter in vowels:
            res.append('_')
        else:
            res.append(letter)
    return ''.join(res)","def replace_vowels(string):
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    res = []
    for letter in string.lower():
        if letter in vowels:
            res.append('_')
        else:
            res.append(letter)
    return ''.join(res)",correct,Recursion
Design a function in Python to find the most repeated character in a string.,"my_string=""Hello world""","def most_repeated_character(my_string):
    counts = Counter(my_string)
    max_char = max(counts, key=counts.get)
    return max_char

print(""Most repeated character:"", most_repeated_character(my_string))","def most_repeated_character(my_string):
    counts = Counter(my_string)
    max_char = max(counts, key=counts.get)
    return max_char

print(""Most repeated character:"", most_repeated_character(my_string))",correct,OOP
"Given a list of strings, write a Python program to sort the strings according to the length of each string.","strings = ['abc', 'def', 'ghi', 'jkl', 'mno']","def sort_strings_by_length(strings):
  return sorted(strings, key=len)",def sort_strings_by_length(strings),Incomplete Answer,File I/O
Optimize the following Python code to remove unnecessary operations or code.,"def count(list_data):
    total = 0
    for i in list_data:
        total += i
    return total","def count(list_data):
    return sum(list_data)","def count(list_data):
    return sum(list_data)",correct,OOP
Create a Python script that takes an array with n elements and shuffles it.,n = 10,"import random

def shuffle(lst):
    random.shuffle(lst)
    return lst

arr = [i for i in range(10)]
print(shuffle(arr))","import random

def shuffle(lst):
    random.shuffle(lst)
   ",Incomplete Answer,String Manipulation
Develop a function in Python to generate a random number between 1 and 10.,,"import random
  
# Function to generate a random number between 1 and 10
def random_num(): 
    number = random.randint(1, 10) 
    return number 
  
# Driver code 
num = random_num() 
print(""Random number between 1 and 10 is: "", num)","import random
  
# Function to generate a random number between 1 and 10
def random_num(): 
    number = random.randint(1, 10) 
    return number 
  
# Driver code 
num = random_num() 
print(name, ""Random number between 1 and 10 is: "", num)",Syntax Error,String Manipulation
Write a function to find the largest integers from a given list of numbers using heap queue algorithm.,,"import heapq as hq
def heap_queue_largest(nums,n):
  largest_nums = hq.nlargest(n, nums)
  return largest_nums","import heapq as hq
def heap_queue_largest(nums,n)
  largest_nums = hq.nlargest(n, nums)
  return largest_nums",Syntax Error,File I/O
Create a class in Python that simulates a timer object.,,"class Timer:
  def __init__(self):
    self.start_time = 0
    self.end_time = 0
    
  def start(self):
    self.start_time = time.time()
    
  def end(self):
    self.end_time = time.time()

  def elapsed(self):
    return self.end_time - self.start_time","class Timer:
  def __init__(self):
    self.start_time = 0
    self.end_time = 0
    
  def start(self):
    self.start_time = time.time()
    
  def end(self):
    self.end_time = time.time()

  def elapsed(self):
    return self.end_time - self.start_time",correct,File I/O
Create a python function to find out if an item exists in a given list.,,"def is_item_in_list(item, my_list):
    '''This function checks if an item exists in a given list and returns a boolean value.
    Parameters
    ----------
    item: The item to be checked.
    my_list: The list in which the item is to be checked. 
    
    Returns
    --------
    boolean: True if the item is present in the list, and False if it is not.
    '''

    return item in my_list","def is_item_in_list(item, my_list:
    '''This function checks if an item exists in a given list and returns a boolean value.
    Parameters
    ----------
    item: The item to be checked.
    my_list: The list in which the item is to be checked. 
    
    Returns
    --------
    boolean: True if the item is present in the list, and False if it is not.
    '''

    return item in my_list",Syntax Error,File I/O
Write a python function to find minimum possible value for the given periodic function.,,"def floor_Min(A,B,N):
    x = max(B - 1,N)
    return (A*x) // B","def floor_Min(A,B,N):
    x = ma",Incomplete Answer,String Manipulation
Generate a piece of Python code to print the reversed version of a list.,"[1, 2, 3]","print(list(reversed([1, 2, 3])))",print(list(rever,Incomplete Answer,OOP
Design a data structure in Python to store information about students.,,"class Student:
  def __init__(self, name, age, gender, college):
    self.name = name
    self.age = age
    self.gender = gender
    self.college = college","class Student:
  def __init__(self, name, age, gender, college):
    self.name = name
    self.age = age
    self.gender = gender
    self.college = college",correct,OOP
Sort a dictionary by values in Python.,,"dictionary = {'key1':1, 'key2': 3, 'key3': 2}
sorted_dict = {key: value for key, value in sorted(dictionary.items(), key=lambda item: item[1])}","dictionary = {'key1':1, 'key2': 3, 'key3': 2}
sorted_dict = {key: value for key, value in sorted(dictionary.items(), key=lambda item: item[1])}",Syntax Error,File I/O
Write a Python program to return a list that contains all the elements of a given list except the given element x.,"[3, 5, 9, 8], x = 5","def removeElement(list, x):
    new_list = []
    for item in list:
        if item != x:
            new_list.append(item)
    return new_list","def removeElement(list, x):
    new_list = []
    for item in list:
   ",Incomplete Answer,Recursion
Write a Python function to sort a list of dictionaries according to a certain key.,"[{'a': 5, 'b': 3}, {'a': 4, 'b': 1}, {'a': 2, 'b': 8}]","def sort_dict_list(dict_list, sort_key):
  return sorted(dict_list, key=lambda k: k[sort_key])","def sort_dict_list(dict_list, sort_key):
  return sorted(dict_list, key=lambda k: k[sort_key])",Syntax Error,OOP
Create a Python program to remove all occurrences of the given element in a given array.,"arr = [2, 4, 5, 7, 4, 2], element = 4","def remove_element(arr, element):
    arr = [x for x in arr if x != element]
    return arr","def remove_element(arr, element):
    arr = [x for x in arr if x != element]
    return arr",Syntax Error,File I/O
Generate a python function to convert an array to a dictionary,"['a', 1, 'b', 2, 'c', 3]","def array_to_dict(lst):
    output = {}
    for i in range(0, len(lst), 2):
        output[lst[i]] = lst[i+1]
 
    return output

# main program
my_list = ['a', 1, 'b', 2, 'c', 3]
result = array_to_dict(my_list)
print(result)","def array_to_dict(lst):
    output = {}
    for i in range(0, len(lst), 2):
        output[lst[i]] = lst[i+1]
 
    return output

# main program
my_list = ['a', 1, 'b', 2, 'c', 3]
result = array_to_dict(my_list)
print(result)",correct,String Manipulation
Write a function to find the combinations of sums with tuples in the given tuple list.,,"from itertools import combinations 
def find_combinations(test_list):
  res = [(b1 + a1, b2 + a2) for (a1, a2), (b1, b2) in combinations(test_list, 2)]
  return (res) ","from itertools import combinations 
def find_combinations(test_list):
  res = [(b1 + a1, b2 + a2) for (a1, a2), (b1, b2) in combinations(test_list, 2)]
  return (res) ",correct,Loops
Create a naive Bayes classifier model in Python.,,"from sklearn.naive_bayes import GaussianNB

# Create Gaussian Naive Bayes classifier with built-in datasets
gnb = GaussianNB()
# Train the model using the training sets
gnb.fit(X_train, y_train)
# Predict the output using the test set
y_pred = gnb.predict(X_test)","from sklearn.naive_bayes import GaussianNB

# Create Gaussian Naive Bayes classifier with built-in datasets
gnb = GaussianNB()
# Train the model using the training sets
gnb.fit(X_train, y_train)
# Predict the output using the test set
y_pred = gnb.predict(X_test)",correct,String Manipulation
Suggest a way to sort a list of integers in python in ascending order.,"[9, 1, 8, 0, 2]","sorted_list = [9, 1, 8, 0, 2].sort()
print(sorted_list)","sorted_list = [9, 1, 8, 0, 2].sort()
print(sorted_list)",correct,File I/O
Design a Python script for querying and visualizing geospatial data.,,"The script should accept a search query as an input and query a geospatial database. The output should be a visual representation of the data, such as a map, heatmap or chart.","The script should accept a search query as an input and query a geospatial database. The output should be a visual representation of the data, such as a map, heatmap or chart.",correct,String Manipulation
Create a Python program for performing a linear search on a given array of values.,,"def linear_search(arr, x): 
    for i in range (0, len(arr)): 
        if arr[i] == x: 
            return i  
    return -1
  
# Test array 
arr = [ 2, 3, 4, 10, 40 ] 
x = 10
  
# Function call 
result = linear_search(arr, x) 
  
if(result == -1): 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)","def linear_search(arr, x): 
    for i in range (0, len(arr)): 
        if arr[i] == x: 
            return i  
    return -1
  
# Test array 
arr = [ 2, 3, 4, 10, 40 ] 
x = 10
  
# Function call 
result = linear_search(arr, x) 
  
if(result == -1): 
    print(name, ""Element is not present in array"") 
else: 
    print(name, ""Element is present at index"", result)",Syntax Error,String Manipulation
Suggest a completion for the following Python code snippet that implements a linear search on an array.,"def linear_search(arr, target):
    for i in range(len(arr)):","def linear_search(arr, target):
    for i in range(len(arr)):
        if (arr[i] == target):
            return i
    return -1","def linear_search(arr, target):
    for i in range(len(arr)):
 ",Incomplete Answer,Loops
Develop an algorithm in Python to find the minimum number of coins needed to make change for a given amount,n = 5,"def minCoinChange(n):
    coins = [1, 2, 5]
    mins = [0]+ [float('inf')]*n
    for c in coins:
        for i in range(c, n+1):
            mins[i] = min(mins[i], mins[i-c]+1)
    return mins[n]
    
print(minCoinChange(n))","def minCoinChange(n):
    coins = [1, 2, 5]
    mins = [0]+ [float('inf')]*n
    for c in coins:
        for i in range(c, n+1):
            mins[i] = min(mins[i], mins[i-c]+1)
    return mins[n]
    
pritn(minCoinChange(n))",Syntax Error,OOP
Create a machine learning algorithm in Python to classify a given dataset.,Dataset for classification,"from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.20)

from sklearn.ensemble import RandomForestClassifier
clf = RandomForestClassifier(n_estimators=100)
clf.fit(x_train, y_train)
predictions = clf.predict(x_test)","from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.20)

from sklearn.ensemble import RandomForestClassifier
clf = RandomForestClassifier(n_estimators=100)
clf.fit(x_train, y_train)
predictions = clf.predict(x_test)",correct,File I/O
Generate code for rounding a given number to the nearest integer in Python.,Number: 2.6,"def round_nearest_int(num):
    return round(num)

result = round_nearest_int(2.6)
print(result)","def round_nearest_int(num):
    return round(num",Incomplete Answer,File I/O
Write a function to find the nth decagonal number.,,"def is_num_decagonal(n): 
	return 4 * n * n - 3 * n ",def is_num_decagonal(n): ,Incomplete Answer,File I/O
"Given an array of numbers, write a program to remove the duplicates from the array.","[1, 2, 2, 3, 4, 4, 5]","def remove_duplicates(arr):
    return list(set(arr)) # using built-in python set()","def remove_duplicates(arr)
    return list(set(arr)) # using built-in python set()",Syntax Error,Loops
Generate a Python program that computes the Euclidean distance between two points in a two-dimensional space.,"Point A - x: 3, y: 5
Point B - x: 7, y: 6","import math

# Define the two points
pointA = (3, 5) 
pointB = (7, 6)

# Calculate the Euclidean distance
distance = math.sqrt( (pointB[0] - pointA[0])**2 + (pointB[1] - pointA[1])**2 )

print(""The Euclidean distance between the two points is:"", distance)","import math

# Define the two points
pointA = (3, 5) 
pointB = (7, 6)

# Calculate the Euclidean distance
distance = math.sqrt( (pointB[0] - pointA[0])**2 + (pointB[1] - pointA[1])**2 )

print(""The Euclidean distance between the two points is:"", distance)",correct,String Manipulation
Create a Python script to detect if a certain item is in a given list of items. The script should work for any type of item.,"items = [1,2,3,4,5]","def detect_item(items, item):
  if item in items:
    return True
  else:
    return False","def detect_item(items, item):
  if item in items:
    return True
  else:
    return False",correct,Recursion
Write a Python code snippet to print the unique elements of a given list.,,"def print_unique(my_list):
    seen = set()
    for x in my_list:
        if x not in seen:
            print(x)
            seen.add(x)","def print_unique(my_list):
    seen = set()
    for x in my_list:
        if x not in seen:
            print(x)
            seen.add(x)",correct,File I/O
"Write a Python program to create a set from a given list and calculate its intersection, union and difference with another set.","list1 = [10, 20, 30, 40]
list2 = [30, 40, 50, 60]","# create set from list
set1 = set(list1)
set2 = set(list2)

# calculate set intersection
intersection = set1.intersection(set2)

# calculate set union
union = set1.union(set2)

# calculate set difference
difference = set1.difference(set2)","# create set from list
set1 = set(list1)
set2 = set(list2)

# calculate set intersection
intersection = set1.intersection(set2)

# calculate set union
union = set1.union(set2)

# calculate set difference
difference = set1.difference(set2)",Syntax Error,String Manipulation
Write a Python program to print the first 20 prime numbers.,,"n = 20
primes = []
for num in range(2, n+1):
    is_prime = True
    for div in range(2, num):
        if (num % div == 0):
            is_prime = False
            break
    if is_prime:
        primes.append(num)
print(primes)","n = 20
primes = []
for num in range(2, n+1):
    is_prime = True
    for div in range(2, num):
        if (num % div == 0):
            is_prime = False
            break
    if is_prime:
        primes.append(num)
print(primes)",correct,String Manipulation
Write a python function to check if a given number is one less than twice its reverse.,,"def rev(num):    
    rev_num = 0
    while (num > 0):  
        rev_num = (rev_num * 10 + num % 10) 
        num = num // 10  
    return rev_num  
def check(n):    
    return (2 * rev(n) == n + 1)  ","def rev(num):    
    rev_num = 0
    while (num > 0):  
        rev_num = (rev_num * 10 + num % 10) 
        num = num // 10  
    return rev_num  
def check(n):    
    return (2 * rev(n) == n + 1)  ",correct,File I/O
Create a regular expression pattern to match key-value pairs like python:Python,,"pattern = re.compile(r""^(\w+):(\w+)$"")","pattern = re.compile(r""^(\w+):(\w+)$"")",correct,OOP
Design a Python program that can be used to retrieve data from a database.,,"import sqlite3

db = sqlite3.connect('database.db')
cursor = db.cursor()

sql = 'SELECT * FROM table'

cursor.execute(sql)
result = cursor.fetchall()

for row in result:
    print(row)

db.close()","import sqlite3

db = sqlite3.connect('database.db')
cursor = db.cursor()

sql = 'SELECT * FROM table'

cursor.execute(sql)
result = cursor.fetchall()

for row in result:
    print(name, row)

db.close()",Syntax Error,File I/O
Create a python script to concatenate two lists.,"list_1 = [1, 2, 3]
list_2 = [4, 5, 6]","def concat_lists(list_1, list_2):
    return list_1 + list_2

list_1 = [1, 2, 3]
list_2 = [4, 5, 6]

concatenated_list = concat_lists(list_1, list_2)
print(concatenated_list) # [1, 2, 3, 4, 5, 6]","def concat_lists(list_1, list_2):
    return list_1 + list_2

list_1 = [1, 2, 3]
list_2 = [4, 5, 6]

concatenated_list = concat_lists(list_1, list_2)
print(concatenated_list) # [1, 2, 3, 4, 5, 6]",correct,Loops
Generate a Python script to calculate the sum of the following equation: 8x^2 + 5y^2 + 6x - 4y.,,"def calculate_sum(x, y):
    '''This function calculates the sum of the following equation: 8x^2 + 5y^2 + 6x - 4y.'''
    return 8*x**2 + 5*y**2 + 6*x - 4*y

# Call the function
result = calculate_sum(2, 3)

# Print the result
print(""The sum is"", result)","def calculate_sum(x, y:
    '''This function calculates the sum of the following equation: 8x^2 + 5y^2 + 6x - 4y.'''
    return 8*x**2 + 5*y**2 + 6*x - 4*y

# Call the function
result = calculate_sum(2, 3

# Print the result
print(""The sum is"", result",Syntax Error,Loops
Create a generator function in Python to yield the numbers in a given range.,,"def num_range_generator(start, end):
    for num in range(start, end+1):
        yield num","def num_range_generator(start, end):
    for ",Incomplete Answer,String Manipulation
Construct a function in Python that takes a list of strings and returns the original list with each string replaced by its reverse.,"list = ['hello', 'world', 'example']","def reverse_list(lst):
    return [s[::-1] for s in lst]

print(reverse_list(list))
# Output: ['olleh', 'dlrow', 'elpmaxe']","def reverse_list(lst):
    return [s[::-1] for s in lst]

print(reverse_list(list))
# Output: ['olleh', 'dlrow', 'elpmaxe']",correct,File I/O
Develop a Python function to calculate the mean of an array of numbers.,"data = [1, 4, 6]","# Python Function to calculate mean 
def calculateMean(data): 
    sum = 0
    # calculating sum 
    for e in data: 
        sum += e
  
    # calculating mean 
    mean = sum / len(data) 
    return mean
  
# Driver code 
data = [1, 4, 6]
mean = calculateMean(data)
print(""Mean of given data is:"", mean)","# Python Function to calculate mean 
def calculateMean(data) 
    sum = 0
    # calculating sum 
    for e in data 
        sum += e
  
    # calculating mean 
    mean = sum / len(data) 
    return mean
  
# Driver code 
data = [1, 4, 6]
mean = calculateMean(data)
print(""Mean of given data is"", mean)",Syntax Error,File I/O
Write a python program to print the name and age of all customers in a list.,"customers = [
 {'name': 'John', 'age': 25},
 {'name': 'Bob', 'age': 40},
 {'name': 'Alice', 'age': 10},
 {'name': 'Mark', 'age': 35},
]","for customer in customers:
  print(f""Name: {customer['name']}, Age: {customer['age']}"")","for customer in customers:
  print(f""Name: ",Incomplete Answer,String Manipulation
Write a command line utility in Python to spin up a web server.,,"import http.server
import socketserver

PORT = 8000

Handler = http.server.SimpleHTTPRequestHandler

httpd = socketserver.TCPServer(("""", PORT), Handler)

print(""Serving at port"", PORT)
httpd.serve_forever()","import http.server
import socketserver

PORT = 8000

Handler = http.server.SimpleHTTPRequestHandler

httpd = socketserver.TCPServer(("""", PORT), Handler)

print(""Serving at port"", PORT)
httpd.serve_forever()",correct,OOP
Write a Python function to parse an HTML response from a website.,,"import requests
from bs4 import BeautifulSoup

def parse_html(url):
  # Send a get request
  response = requests.get(url)
  
  # Create a BeautifulSoup object
  soup = BeautifulSoup(response.text, 'lxml')

  # Find the required data
  data = soup.find_all('div', class_='content')

  # Return the data
  return data","import requests
from bs4 import BeautifulSoup

def parse_html(url):
  # Send a get request
  response = requests.get(url)
  
  # Create a BeautifulSoup objec",Incomplete Answer,OOP
Refactor a given code snippet into a Python Lambda function.,"def some_method(x, y):
    result = x + y
    return result","some_method = lambda x, y: x + y","some_method = lambda x, y: x + y",Syntax Error,Recursion
Write a function in Python to classify a given number into even or odd.,,"def classify_num(num):
    if (num % 2 == 0):
        return ""Even""
    else:
        return ""Odd""","def classify_num(num):
    if (num % 2 == 0):
        return ""Even""
    else:
        return ""Odd""",Syntax Error,Loops
Create a program in Python that computes the area of a circle using Radius.,,"def get_area(radius): 
    return math.pi*(radius**2)","def get_area(radius: 
    return math.pi*(radius**2",Syntax Error,File I/O
Write a Python function to calculate the Hamming distance between two strings of same length.,"""abc"",
""acd""","def hamming_distance(s1, s2):
    distance = 0

    for char1, char2 in zip(s1, s2):
        if char1 != char2:
            distance += 1
    
    return distance

result = hamming_distance(""abc"", ""acd"")
print(result)","def hamming_distance(s1, s2):
    distance = 0

    for char1, char2 in zip(s1, s2):
        if char1 != char2:
            distance += 1
    
    return distance

result = hamming_distance(""abc"", ""acd"")
print(name, result)",Syntax Error,Recursion
Generate a random string of characters in Python with a length between 8 and 16 characters.,,"import string
import random

def generate_random_string(length):
    random_string = ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))
    return random_string

length = random.randrange(8,16)
random_string = generate_random_string(length)
print(random_string)","import string
import random

def generate_random_string(length)
    random_string = ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))
    return random_string

length = random.randrange(8,16)
random_string = generate_random_string(length)
print(random_string)",Syntax Error,String Manipulation
Develop a function in Python that sorts a dictionary by value in descending order.,"dictionary = {'a': 10, 'b': 20, 'c': 5}","def sort_dict_by_value(dict): 
    sorted_dict = dict(sorted(dict.items(), key = lambda kv: kv[1], reverse = True)) 
    return sorted_dict

sorted_dict = sort_dict_by_value(dictionary)
print(sorted_dict)","def sort_dict_by_value(dict): 
    sorted_dict = dict(sorted(dict.items(), key = lambda kv: kv[1], rev",Incomplete Answer,Recursion
Write a python function to find the minimun number of subsets with distinct elements.,,"def subset(ar, n): 
    res = 0
    ar.sort() 
    for i in range(0, n) : 
        count = 1
        for i in range(n - 1): 
            if ar[i] == ar[i + 1]: 
                count+=1
            else: 
                break 
        res = max(res, count)  
    return res ","def subset(ar, n: 
    res = 0
    ar.sort( 
    for i in range(0, n : 
        count = 1
        for i in range(n - 1: 
            if ar[i] == ar[i + 1]: 
                count+=1
            else: 
                break 
        res = max(res, count  
    return res ",Syntax Error,String Manipulation
Translate the following code written in Python to Java.,"x = 3
y = 5

print(x + y)","public class XPlusY { 
    
    // add two numbers  
 static int add(int x, int y) 
    { 
        return x + y; 
    } 
  
    // Driver method  
    public static void main(String[] args) 
    { 
        int x = 3; 
        int y = 5; 
        System.out.println(""Sum of the two numbers is "" + add(x, y)); 
    } 
}","public class XPlusY { 
    
    // add two numbers  
 static int add(int x, int y) 
    { 
        return x + y; 
    } 
  
    // Driver method  
    public ",Incomplete Answer,File I/O
Write a core Python script that prints the following output.,,"for i in range(1,11):
    for j in range(1, 11):
        print(f'{i} * {j} = {i*j}')
    print()","for i in range(1,11):
    for j in range(1, 11):
        print(f'{i} * {j} = {i*j}')
    print()",correct,File I/O
Design a class in Python that finds the highest number in a given array of integers.,"[3, 5, 1, 8, 11, 12]","class HighestNumberFinder:
    def __init__(self, array):
        self.array = array
    
    def find_highest_number(self):
        highest_number = self.array[0]
        for number in self.array:
            if (number > highest_number):
                highest_number = number
        return highest_number","class HighestNumberFinder:
    def __init__(self, array:
        self.array = array
    
    def find_highest_number(self:
        highest_number = self.array[0]
        for number in self.array:
            if (number > highest_number:
                highest_number = number
        return highest_number",Syntax Error,String Manipulation
Create a Python program that takes a number as an input and computes the factorial of that number.,7,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)
    
num = 7
result = factorial(num)
print(result)","def factorial(n):
if n == 0:
    return 1
else:
    return n * factorial(n-1)

num = 7
result = factorial(num)
print(result)",Syntax Error,OOP
Write a Python program to get the sum of all odd numbers between 0 and 30.,,"# Variable to store the sum
sum = 0

# Iterate over all odd numbers in the range
for i in range(1, 30, 2):
    sum += i
    
# Print the result
print(""The sum of all odd numbers between 0 and 30: "", sum)","# Variable to store the sum
sum = 0

# Iterate over all odd numbers in the range
for i in range(1, 30, 2)
    sum += i
    
# Print the result
print(""The sum of all odd numbers between 0 and 30 "", sum)",Syntax Error,Recursion
Write a function to count the number of elements in a list which are within a specific range.,,"def count_range_in_list(li, min, max):
	ctr = 0
	for x in li:
		if min <= x <= max:
			ctr += 1
	return ctr","def count_range_in_list(li, min, max):
	ctr = 0
	for x",Incomplete Answer,Recursion
Write Python script to replace all occurrences of a given letter in a string with another.,"String: ""fortnite""
Letter to replace: ""t""
Letter to replace with: ""l""","""""""Write Python script to replace all occurrences of a given letter in a string with another.""""""

# Take a string as an input
string = ""fortnite""

# Replace the target letter with the replacement letter
new_string = string.replace(""t"", ""l"")

# Print the new string
print(new_string)","""""""Write Python script to replace all occurrences of a given letter in a string with another.""""""

# Take a string as an input
string = ""fortn",Incomplete Answer,File I/O
Design an algorithm in Python to find all the ways a point on the plane can be reached from the origin.,,"def find_all_ways(x, y):
    if x == 0 and y == 0:
        return [[(0, 0)]]

    paths = []
    if x > 0:
        paths += find_all_ways(x-1, y)
    if y > 0:
        paths += find_all_ways(x, y-1)

    for path in paths:
        path.append((x, y))
    return paths","def find_all_ways(x, y)
    if x == 0 and y == 0
        return [[(0, 0)]]

    paths = []
    if x > 0
        paths += find_all_ways(x-1, y)
    if y > 0
        paths += find_all_ways(x, y-1)

    for path in paths
        path.append((x, y))
    return paths",Syntax Error,Recursion
Create a function in Python for calculating Factorial of a number (n!).,,"def factorial(n): 
  if n == 0:
    return 1
  else:
    return n * factorial(n-1)","def factorial(n): 
  if n == 0:
    return 1
  else:
    return n * factorial(n-1)",correct,Recursion
Generate code in Python to sum all the values of a dictionary.,"dictionary = { 'a': 1, 'b': 2, 'c': 3 }","def sum_dict(dict):
    sum = 0
    for key in dict:
        sum += dict[key]
    return sum

dictionary = { 'a': 1, 'b': 2, 'c': 3 }
print(sum_dict(dictionary)) # 6","def sum_dict(dict:
    sum = 0
    for key in dict:
        sum += dict[key]
    return sum

dictionary = { 'a': 1, 'b': 2, 'c': 3 }
print(sum_dict(dictionary # 6",Syntax Error,Loops
Create an algorithm in Python to generate random strings of a given length.,,"import random

def generate_random_string(length):
  # Generate a random string of given length
  letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
  return ''.join(random.choice(letters) for i in range(length))","import random

def generate_random_string(length):
  # Generate a random string of given length
  letters = 'abcdefghi",Incomplete Answer,Loops
Write a Python script to delete all duplicate characters in a given string,"string = ""mississippi""","def deleteDuplicates(string): 
    result = """"
    for i in string: 
        if i not in result: 
            result = result + i
    return result

print(""The output string is: "", deleteDuplicates(string))","def deleteDuplicates(string): 
    result = """"
    for i in string: 
        if i not in result: 
            result = result + i
    return result

print(""The output string is: "", deleteDuplicates(string))",correct,Loops
Write a Python script to detect if two strings contain the same characters. Output should be true or false.,"s1 = ""abc""
s2 = ""bca""","def is_permutation(s1, s2):
    s1_list = list(s1)
    s2_list = list(s2)
    s1_list.sort()
    s2_list.sort()
    if s1_list == s2_list:
        return True
    else:
        return False

print(is_permutation(""abc"", ""bca"")) # True","def is_permutation(s1, s2):
    s1_list = list(s1)
    s2_list = list(s2)
    s1_list.sort()
    s2_list.sort()
    if s1_list == s2_list:
        return True
    else:
        return False

print(name, is_permutation(""abc"", ""bca"")) # True",Syntax Error,File I/O
Can you create an algorithm in Python for reversing an integer?,x = 2435,"def reverseInteger(x): 
     
    reversed = 0
    while(x > 0): 
        reminder = x % 10
        reversed = (reversed * 10) + reminder 
        x = x // 10
    return reversed 

x = 2435
res = reverseInteger(x) 
print(res)","def reverseInteger(x): 
     
    reversed = 0
    while(x > 0): 
        reminder = x % 10
        reversed = (reversed * 10) + reminder 
        x = x // 10
    return reversed 

x = 2435
res = reverseInteger(x) 
print(res)",correct,File I/O
Create a function in Python that takes an array and returns the element at the middle index.,"[1, 2, 3, 4, 5]","def returnMiddle(arr):
    if len(arr) % 2 == 0:
        return (arr[int(len(arr) / 2) - 1] + arr[int(len(arr) / 2)])/2
    else:
        return arr[int(len(arr) / 2)]
 print(returnMiddle([1, 2, 3, 4, 5]))","def returnMiddle(arr:
    if len(arr % 2 == 0:
        return (arr[int(len(arr / 2 - 1] + arr[int(len(arr / 2]/2
    else:
        return arr[int(len(arr / 2]
 print(returnMiddle([1, 2, 3, 4, 5]",Syntax Error,Recursion
Write a python function to find the sum of absolute differences in all pairs of the given array.,,"def sum_Pairs(arr,n): 
    sum = 0
    for i in range(n - 1,-1,-1): 
        sum += i*arr[i] - (n-1-i) * arr[i] 
    return sum","def sum_Pairs(arr,n): 
    sum = 0
    for i in range(n - 1,-1,",Incomplete Answer,Loops
Create a prediction model in Python that predicts the stock price of Apple.,,"import numpy as np
from sklearn.linear_model import LinearRegression

# Load the data
data = np.genfromtxt('apple_stock.csv', delimiter=',')
X = data[:, :-1] # features 
y = data[:, -1] # target

# Create the regression model 
model = LinearRegression()
model.fit(X, y)

# Make predictions 
predictions = model.predict(X)","import numpy as np
from sklearn.linear_model import LinearRegression

# Load the data
data = np.genfromtxt('apple_stock.csv', delimiter=',')
X = data[:, :-1] # features 
y = data[:, -1] # target

# Create the regression model 
model = LinearRegression()
model.fit(X, y)

# Make predictions 
predictions = model.predict(X)",Syntax Error,File I/O
Generate a Python algorithm to check if a given word is a palindrome.,madam,"def isPalindrome(word): 
    left, right = 0, len(word) - 1
    while right >= left: 
        if not word[left] == word[right]: 
            return False
        left += 1
        right -= 1
    return True","def isPalindrome(word): 
    left, right = 0, len(word) - 1
    while right >= left: 
        if not word[left] == word[right]: 
            return False
        left += 1
        right -= 1
    return True",correct,OOP
Optimize the following Python code to run faster by using appropriate data structures.,"def find_subarrays(arr):
    subarrays = []
    for i in range(len(arr)):
        for j in range(i, len(arr)):
            subarrays.append(arr[i:j+1])
    return subarrays","def find_subarrays(arr):
     subarrays = []
     for i in range(len(arr)):
         subarrays.append(arr[i:])
         for j in range(i+1, len(arr)):
             subarrays.append(arr[i:j+1])
     return subarrays","def find_subarrays(arr):
     subarrays = []
     for i in range(len(arr)):
         subarrays.append(arr[i:])
         for j in range(i+1, len(arr)):
             subarrays.append(arr[i:j+1])
     return subarrays",Syntax Error,String Manipulation
Generate a Python function that takes in a list of words and returns the length of the longest word.,"['Ram', 'Shyam', 'Mohan']","def longest_word_length(words):
   length = 0
   for word in words:
       if len(word) > length:
           length = len(word)
           
   return length","def longest_word_length(words):
   length = 0
   for word in words:
       if ",Incomplete Answer,Loops
Create a simple algorithm in Python to find the mode of a given array of numbers.,"[1, 2, 2, 3, 5, 6, 7]","def mode(arr):
  dict = {}
  for item in arr:
    if item in dict:
      dict[item] += 1
    else:
      dict[item] = 1
  
  max_val = 0
  max_key = 0
  for key, value in dict.items():
    if value > max_val:
      max_val = value
      max_key = key
  
  return max_key

arr = [1, 2, 2, 3, 5, 6, 7]
print(mode(arr))","def mode(arr):
  dict = {}
  for item in arr:
    if item in dict:
      dict[item] += 1
    else:
      dict[item] = 1
  
  max_val = 0
  max_key = 0
  for k",Incomplete Answer,String Manipulation
Develop a web resource monitor in Python that records the amount of data transferred from a given web resource.,,"import requests

def monitor_web_resource(url):
    response = requests.get(url)

    total_data = 0

    while response.status_code == 200:
        total_data += len(response.content)
        response = requests.get(url)

    return total_data

total_data = monitor_web_resource(""http://example.com"")","import requests

def monitor_web_resource(url):
    response = requests.get(url)

    total_data = 0

    while response.status_code == 200:
        t",Incomplete Answer,String Manipulation
Write a Python script to fetch the sale price of a product from an online store.,"Website = www.productstore.com
ProductID = 12345","import requests
url = f'https://www.productstore.com/ProductID={ProductID}&format=json'

resp = requests.get(url)
data = resp.json()
sales_price = data['salesPrice']
print('The sale price of the product is {}'.format(sales_price))","import requests
url = f'https://www.productstore.com/ProductID={ProductID}&format=json'

resp = requests.get(url)
data = resp.json()
sales_price = data['salesPrice']
print('The sale price of the product is {}'.format(sales_price))",correct,String Manipulation
Create a Python program to generate a Fibonacci number sequence.,Length of the sequence = 10,"def generate_Fibonacci_sequence(length):
    # Initialize the sequence
    fib_sequence = [0, 1]

    # Generate the sequence
    for i in range(2, length):
        fib_sequence.append(fib_sequence[i - 1] + fib_sequence[i - 2])

    # Return the sequence
    return fib_sequence

print(generate_Fibonacci_sequence(10))","def generate_Fibonacci_sequence(length):
    # Initialize the sequence
    fib_sequence = [0, 1]

    # Generate the sequence
    for i in range(2, length):
        fib_sequence.append(fib_sequence[i - 1] + fib_sequence[i - 2])

    # Return the sequence
    return fib_sequence

print(generate_Fibonacci_sequence(10))",correct,Recursion
Design a Python program to print out all possible permutations of a 3 character string.,ABC,"def permutation(str):
    if len(str) == 0:
        return []
    if len(str) == 1:
        return [str]
    l = [] 
    for i in range(len(str)):
       m = str[i] 
       remLst = permutation(str[:i] + str[i+1:])
       for p in remLst:
           l.append(m + p)
    return l

string = 'ABC'
l = permutation(string)
for s in l:
    print(s)","def permutation(str):
    if len(str) == 0:
        return []
    if len(str) == 1:
        return [str]
    l = [] 
    for i in range(len(str)):
       m = str[i] 
       remLst = permutation(str[:i] + str[i+1:])
       for p in remLst:
           l.append(m + p)
    return l

string = 'ABC'
l = permutation(string)
for s in l:
    pritn(s)",Syntax Error,Loops
Create a data structure to store and print all the codes for the top 10 programming languages.,"C, C++, Python, Java, C#, JavaScript, PHP, Rust, Swift, Go","codes = {
    'C': 'c',
    'C++': 'cpp',
    'Python': 'py',
    'Java': 'java',
    'C#': 'cs',
    'JavaScript': 'js',
    'PHP': 'php',
    'Rust': 'rs',
    'Swift': 'swift',
    'Go': 'go'
}

for key, value in codes.items():
    print('{}: {}'.format(key, value))","codes = {
    'C' 'c',
    'C++' 'cpp',
    'Python' 'py',
    'Java' 'java',
    'C#' 'cs',
    'JavaScript' 'js',
    'PHP' 'php',
    'Rust' 'rs',
    'Swift' 'swift',
    'Go' 'go'
}

for key, value in codes.items()
    print('{} {}'.format(key, value))",Syntax Error,Recursion
Build a Python script to terminate all running processes.,,"import psutil

# terminate all running processes
for proc in psutil.process_iter():
    proc.terminate()","import psutil

# terminate all running processes
for",Incomplete Answer,Recursion
Create a function using Python to reverse the order of the characters in each word of a given string,string = “Hello World”,"def reverse_words(string): 
  splitted_words = string.split("" "") 

  reversed_words = [word[::-1] for word in splitted_words] 

  reversed_string = "" "".join(reversed_words) 
 
  return reversed_string 

reverse_words(string)","def reverse_words(string) 
  splitted_words = string.split("" "") 

  reversed_words = [word[-1] for word in splitted_words] 

  reversed_string = "" "".join(reversed_words) 
 
  return reversed_string 

reverse_words(string)",Syntax Error,File I/O
"Create a Python class representing a grocery item with the following attributes: name, price, quantity.",,"class GroceryItem:
    def __init__(self, name, price, quantity):
        self.name = name
        self.price = price
        self.quantity = quantity","class GroceryItem:
    def __init__(self, name, price, quantity):
        self.name = name
        self.price = price
        self.quantity = quantity",correct,Recursion
Find the number 10 in a string using a Python regular expression.,"String: ""This string contains the number 10 in it""","re.search(""10"", ""This string contains the number 10 in it"")","re.search(""10"", ""This string contains the number 10 in it"")",Syntax Error,OOP
Write a Python script to generate a text report of the results of a survey of 10 people.,"No. of people who said yes, 4  
No. of people who said no, 6","num_yes = 4
num_no = 6

total_responses = num_yes + num_no

print('Survey Results')
print('Number of people who said yes: {}'.format(num_yes))
print('Number of people who said no: {}'.format(num_no))
print('Total number of responses: {}'.format(total_responses))","num_yes = 4
num_no = 6

total_responses = num_yes + num_no

print('Survey Results')
print('Number of people who said yes: {}'.format(num_yes))
print('Number of people who said no: {}'.format(num_no))
print('Total number of responses: {}'.format(total_responses))",correct,File I/O
Design a polynomial class in Python that stores the coefficients of an n-th degree polynomial function.,,"class Polynomial: 
    def __init__(self, coefficients): 
        self.coefficients = coefficients

    def __call__(self, x):
        result = 0
        for i, c in enumerate(self.coefficients):
            result += c * x**i
        return result","class Polynomial: 
    def __init__(self, coefficients): 
        self.coefficients = coefficients

    def __call__(self, x",Incomplete Answer,Loops
Write a Python program to delete the third element of a list.,"list = [1, 2, 3, 4, 5]","def delete_third_element(list): 
    """"""Function to delete the third element of a list"""""" 
    del list[2] 
    return list

#Example:
print(delete_third_element(list))","def delete_third_element(list): 
    """"""Function to delete the third element of a list"""""" 
    del list[2] 
    return list

#Example:
print(delete_third_element(list))",correct,OOP
"Write a Python function to display the current time, formatted such that it will read ""It is currently 11:15am"".",,"import time

def display_time():
    time_string = time.strftime('%I:%M%p', time.localtime())
    return f'It is currently {time_string}'","import time

def display_time():
    time_string = time.strftime('%I:%M%p', time.localtime())
    return f'It is currently {time_string}'",correct,OOP
Create a Python program which will sort the given array of numbers,"[9, 5, 1, 10]","def sortArray(arr): 
    arr.sort() 
    return arr 
  
# Driver code 
arr = [9, 5, 1, 10] 
print(sortArray(arr)) 
# Output: [1, 5, 9, 10]","def sortArray(arr): 
    arr.sort() 
    return arr 
  
# Driver code 
arr = [9, 5, 1, 10] 
print(sortArray(arr)) 
# Output: [1, 5, 9, 10]",correct,Recursion
Create a histogram of the following data using Python.,"data = [2, 3, 4, 6, 7, 8, 9, 10]","import matplotlib.pyplot as plt

data = [2, 3, 4, 6, 7, 8, 9, 10]

plt.hist(data)
plt.title('Histogram of Wind Direction')
plt.xlabel('Direction (degrees)')
plt.ylabel('Frequency')
plt.show()","import matplotlib.pyplot as plt

data = [2, 3, 4, 6, 7, 8, 9, 10]

plt.hist(data)
plt.title('Histogram of Wind Direction')
plt.xlabel('Direction (degrees)')
plt.ylabel('Frequency')
plt.show()",correct,File I/O
Generate a Python program to return the index of the last occurrence of an item in a given list,,"def last_occurrence(arr, item):
    for i in range(len(arr)-1,-1,-1):
        if arr[i] == item:
            return i
    return -1","def last_occurrence(arr, item:
    for i in range(len(arr-1,-1,-1:
        if arr[i] == item:
            return i
    return -1",Syntax Error,Loops
Write a function in Python to print the Fibonacci sequence up to the nth term.,n = 10,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
    
print(""Fibonacci sequence:"")
for i in range(n):
    print(fibonacci(i))","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
    
print(""Fibonacci sequence:"")
for i in range(n):
    print(fibonacci(i))",correct,Recursion
Create two functions in Python to capitalize and uncapitalize each character of a string.,string = 'hello world',"def capitalize_each_character(string):
  result = ''
  for char in string:
    result += char.capitalize()
  return result

def uncapitalize_each_character(string):
  result = ''
  for char in string:
    result += char.lower()
  return result","def capitalize_each_character(string):
  result = ''
  for char in string:
    result += char.capitalize()
  return resul",Incomplete Answer,Loops
Create a Python program which computes the factorial of a given integer number.,num = 5,"def factorial(num): 
    if num == 0: 
        return 1
    else: 
        return num * factorial(num-1) 

x = 5
print(factorial(x)) 
# 120","def factorial(num): 
    if num == 0: 
        return 1
    else: 
  ",Incomplete Answer,File I/O
"Define a Python class for a car with three attributes: name, color, and doors",,"class Car:
    def __init__(self, name, color, doors):
        self.name = name
        self.color = color
        self.doors = doors","class Car:
    def __init__(self, name, color, doors):
        self.name = name
        self.color = color
        self.doors = doors",correct,OOP
Write a function to convert camel case string to snake case string by using regex.,,"import re
def camel_to_snake(text):
  str1 = re.sub('(.)([A-Z][a-z]+)', r'\1_\2', text)
  return re.sub('([a-z0-9])([A-Z])', r'\1_\2', str1).lower()","import re
def camel_to_snake(text):
  str1 = re.sub('(.)([A-Z][a-z]+)', r'\1_\2', text)
  return re.sub('([a-z0-9])([A-Z])', r'\1_\2', str1).lower()",correct,File I/O
Sum the integers in a Python list.,"List of integers: [1, 2, 3, 4, 5]","def sumList(list): 
    sum = 0
    for ele in list:
        sum += ele     
    return sum
  
list = [1, 2, 3, 4, 5] 
print(""Sum of the elements in given list is :"", sumList(list))","def sumList(list): 
    sum = 0
    for ele in list:
        sum += ele     
    return sum
  
list = [1, 2, 3, 4, 5] 
print(""Sum of the elements in given list is :"", sumList(list))",correct,Loops
Create a Python script to return the average of the given list of numbers.,"[10, 15, 20, 25]","def average(numbers):
 total = 0
 for num in numbers:
 total += num
 return total / len(numbers)

average([10, 15, 20, 25])","def average(numbers):
 total = 0
 for num in numbers:
 total ",Incomplete Answer,Loops
Develop a Python program to generate a random integer from a given range,,"import random

def random_int(low, high):
 return random.randint(low, high)","import random

def random_int(low, hi",Incomplete Answer,String Manipulation
Optimize the following Python code by replacing redundant computations.,"def complex_computation(x):
    tmp1 = 2 * x
    tmp2 = x * x
    return tmp1 + tmp2","def complex_computation(x):
    return x * (2 + x)","def complex_computation(x):
    return x * (2 + x)",correct,String Manipulation
Create a Python script to reverse a given string.,'Hello World',"def reverse_string(string):
    return string[::-1]

result = reverse_string('Hello World')
print(result)","def reverse_string(string)
    return string[-1]

result = reverse_string('Hello World')
print(result)",Syntax Error,File I/O
Write a loop in Python to print out all the prime numbers up to a given number.,,"def print_prime_numbers(num):
    for i in range(2, num+1):
        for j in range(2, i):
            if (i % j) == 0:
                break
        else:
            print(i)","def pritn_prime_numbers(num):
    for i in range(2, num+1):
        for j in range(2, i):
            if (i % j) == 0:
                break
        else:
            pritn(i)",Syntax Error,String Manipulation
"Create a Python program to randomly generate a list of strings of 5, 10 or 15 characters long.",,"import string
import random

def generate_list(length):
 chars = string.ascii_letters + string.digits
 result = [''.join(random.choice(chars) for i in range(length)) for x in range(10)]
 return result

lengths = [5, 10, 15]
results = [generate_list(length) for length in lengths]

print(results)","import string
import random

def generate_list(length):
 chars = string.ascii_letters + string.digits
 result = [''.join(random.choice(chars) for i",Incomplete Answer,File I/O
Write a Python program to convert a list of numbers into a string.,"[2, 3, 10]","def list_to_str(lst):
    result = "","".join(map(str, lst))
    return result

result = list_to_str([2, 3, 10])
print(result)","def list_to_str(lst):
    result = "","".join(map(str, lst))
    return result

result = list_to_str([2, 3, 10])
pritn(result)",Syntax Error,Recursion
Make a Python program that reads a 3x3 matrix and prints the sum of all elements.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

total = 0

for i in range(len(matrix)):
    for j in range(len(matrix[i])):
        total += matrix[i][j]

print(total)","matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

total = 0

for i in range(len(matrix)):
    for j in range(len(matrix[i])):
        total += matrix[i][j]

print(total)",correct,Loops
"Create a Python lambda expression that takes two parameters, a and b, and returns the average of them.",,"avg = lambda a,b : (a + b)/2","avg = lambda a,b : (a + b)/2",correct,OOP
Design a Python program that takes an array of integers and returns the first element that is divisible by 7.,"[41, 42, 43, 44, 45]","def findFirstDivisibleBy7(arr):
    for i in range(0, len(arr)):
        if arr[i] % 7 == 0:
            return arr[i]
    return -1

arr = [41, 42, 43, 44, 45]
result = findFirstDivisibleBy7(arr)
print(result) # 42","def findFirstDivisibleBy7(arr)
    for i in range(0, len(arr))
        if arr[i] % 7 == 0
            return arr[i]
    return -1

arr = [41, 42, 43, 44, 45]
result = findFirstDivisibleBy7(arr)
print(result) # 42",Syntax Error,Loops
Write a function to reverse the elements of a given array in Python.,"[1, 2, 3, 4, 5]","def reverse_array(arr):
    """"""This function reverses the elements of a given array of numbers
    
    Parameters: 
        arr (list): The list of numbers to reverse.
	
    Returns: The reversed array
    """"""
    return arr[::-1]","def reverse_array(arr):
    """"""This function reverses the elements of a given array of numbers
    
    Parameters:",Incomplete Answer,File I/O
Write a Python program to generate a 3x3 grid of random numbers.,,"import random

def generate_grid():
    # create an empty 3x3 grid
    grid = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]

    # generate 9 random numbers between 1 and 10
    for i in range(3):
        for j in range(3):
            grid[i][j] = random.randint(1, 10)

    return grid

result = generate_grid()
print(result)","import random

def generate_grid(:
    # create an empty 3x3 grid
    grid = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]

    # generate 9 random numbers between 1 and 10
    for i in range(3:
        for j in range(3:
            grid[i][j] = random.randint(1, 10

    return grid

result = generate_grid(
print(result",Syntax Error,OOP
Design an algorithm in Python to find the smallest number in a given list.,"[4, 5, 6, 7, 8]","def smallestNumber(nums):
    smallest = nums[0]
    for i in range(1, len(nums)):
        if nums[i] < smallest:
            smallest = nums[i]
    return smallest

nums = [4, 5, 6, 7, 8]
smallestNum = smallestNumber(nums)
print('The smallest number is', smallestNum)","def smallestNumber(nums):
    smallest = nums[0]
    for i in range(1, len(nums)):
        if nums[i] < smallest:
            smallest = nums[i]
    return smallest

nums = [4, 5, 6, 7, 8]
smallestNum = smallestNumber(nums)
print('The smallest number is', smallestNum)",correct,Loops
Rewrite and optimize the following provided code using modern Python library functions.,"count = 0
i = 0
while i < len(words):
    if words[i] == 'the':
        count = count + 1
    i = i + 1","count = 0
for word in words:
    if word == 'the':
        count += 1","count = 0
for word in words:
    if word == 'the':
        count += 1",Syntax Error,Recursion
Translate a Java loop into a while loop in Python.,"for (int i=1; i<=10; i++)
    System.out.println(""Hello World"");","i = 1
while i <= 10:
    print(""Hello World"")
    i += 1","i = 1
while i <= 10:
    pri",Incomplete Answer,OOP
Write a Python program to classify a dataset with 6 classes.,List of sample data,"import pandas as pd

# Load the dataset 
df = pd.read_csv('dataset.csv')

# Split the dataset into features and labels
X = df.drop('label', axis=1).values
y = df['label'].values

# Train the model
from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier()
model.fit(X, y)

# Make predictions on the dataset
predictions = model.predict(X)","import pandas as pd

# Load the dataset 
df = pd.read_csv('dataset.csv')

# Split the dataset into features and labels
X = df.drop('label', axis=1).values
y = df['label'].values

# ",Incomplete Answer,Recursion
Write a Python program to create a dictionary containing the given list of numbers and their squares as values.,"[1,2,3,4,5]","my_list = [1,2,3,4,5]

squares_dictionary = {}

for x in my_list:
  squares_dictionary[x] = x**2

print(squares_dictionary)","my_list = [1,2,3,4,5]

squares_dictionary = {}

for x in my_l",Incomplete Answer,Loops
Write a function to find the square root of a perfect number.,,"import math
def sqrt_root(num):
 sqrt_root = math.pow(num, 0.5)
 return sqrt_root ","import math
def sqrt_root(num):
 sqrt_ro",Incomplete Answer,String Manipulation
Create a Python script for formatting a sentence.,He  went  to the store,"def format_sentence(sentence):
    sentence = sentence.split()
    sentence = [word.capitalize() for word in sentence]
    return ' '.join(sentence)

print(format_sentence(""He went to the store""))","def format_sentence(sentence:
    sentence = sentence.split(
    sentence = [word.capitalize( for word in sentence]
    return ' '.join(sentence

print(format_sentence(""He went to the store""",Syntax Error,Recursion
Suggest a python code to get the common elements of a list of lists.,"list_of_lists = [[1,3,5], [3,5,7], [1,2,3]]","def get_common_elements(list_of_lists): 
    commons = []
    for i in range(len(list_of_lists)): 
        commons = list(set(commons).intersection(list_of_lists[i]))
    return commons","def get_common_elements(list_of_lists): 
    commons = []
    for i in range(len(list_of_lists)): 
        commons = list(set(commons).intersection(list_of_lists[i]))
    return commons",Syntax Error,Recursion
Generate a python statements to insert an item at a specific index in a list.,"list = [1, 2, 4, 5]
item = 3
index = 2","list.insert(index, item)",list.insert(,Incomplete Answer,OOP
"Implement a Python function called “check_prime” which takes an integer as an argument and returns True if the number is prime, and False otherwise.",check_prime(125),"def check_prime(n):
 if n == 1:
 return False

 for i in range(2, int(n ** 0.5) + 1):
 if n % i == 0:
 return False

 return True","def check_prime(n):
 if n == 1:
 return False

 for i in range(2",Incomplete Answer,String Manipulation
Develop a Python program to remove a specific character from a given string.,"string = ""Hello World!"" 
character = 'l'","def remove_char(string, char):
  return string.replace(char, '')","def remove_char(string, char):
  return string.replace(char, '')",correct,File I/O
Write a python program that generates a random password with a length of 16 containing only letters and numbers.,,"import string
import random

def generate_password():
    password_length = 16
    chars = string.ascii_letters + string.digits
    password = ''.join(random.choice(chars) for _ in range(password_length))
    return password

print(generate_password())","import string
import random

def generate_password()
    password_length = 16
    chars = string.ascii_letters + string.digits
    password = ''.join(random.choice(chars) for _ in range(password_length))
    return password

print(generate_password())",Syntax Error,String Manipulation
"Given a JSON object containing a list of key/value pairs, write a Python function to sort the list by value.","{
  ""a"": 23,
  ""b"": 42,
  ""c"": 16
}","def sort_by_value(data):
 sorted_list = sorted(data.items(), key=lambda kv: kv[1])
 return sorted_list
 
print(sort_by_value({""a"": 23, ""b"": 42, ""c"": 16}))
# Output -> [('c', 16), ('a', 23), ('b', 42)]  # sorted by value","def sort_by_value(data:
 sorted_list = sorted(data.items(, key=lambda kv: kv[1]
 return sorted_list
 
print(sort_by_value({""a"": 23, ""b"": 42, ""c"": 16}
# Output -> [('c', 16, ('a', 23, ('b', 42]  # sorted by value",Syntax Error,String Manipulation
Write a function to find the kth element in the given array.,,"def kth_element(arr, n, k):
  for i in range(n):
    for j in range(0, n-i-1):
      if arr[j] > arr[j+1]:
        arr[j], arr[j+1] == arr[j+1], arr[j]
  return arr[k-1]","def kth_element(arr, n, k):
  for i in range(n):
    for j in range(0, n-i-1):
      if arr[j] > arr[j+1]:
        arr[j], arr[j+1] == arr[j+1], arr[j]
  return arr[k-1]",correct,File I/O
Write a python function to find the missing number in a sorted array.,,"def find_missing(ar,N): 
    l = 0
    r = N - 1
    while (l <= r):  
        mid = (l + r) / 2
        mid= int (mid) 
        if (ar[mid] != mid + 1 and ar[mid - 1] == mid): 
            return (mid + 1)  
        elif (ar[mid] != mid + 1): 
            r = mid - 1 
        else: 
            l = mid + 1
    return (-1) ","def find_missing(ar,N): 
    l = 0
    r = N - 1
    while (l <= r):  
        mid = (l + r) / 2
        mid= int (mid) 
        if (ar[mid] != mid + 1 and ar[mid - 1] == mid): 
            return (mid + 1)  
        elif (ar[mid] != mid + 1): 
            r = mid - 1 
        else: 
            l = mid + 1
    return (-1) ",Syntax Error,Recursion
Write a Python program to generate a unique set of random numbers from an existing list of numbers.,"[1, 2, 3, 4, 5, 6, 7]","import random

numbers = [1, 2, 3, 4, 5, 6, 7] 
random_numbers = set()

while len(random_numbers) < 4:
    random_numbers.add(random.choice(numbers))

print(random_numbers)","import random

numbers = [1, 2, 3, 4, 5, 6, 7] 
random_numbers = set()

while len(random_numbers) < 4:
    random_numbers.add(random.choice(numbers))

print(random_numbers)",correct,Recursion
Design an algorithm in Python that sorts an unordered list of three numbers in increasing order.,"List = [3, 1, 2]","def sort_list(input_list):
    output_list = []
    while input_list:
        smallest = input_list[0]
        for i in input_list:
            if i < smallest:
                smallest = i
        output_list.append(smallest)
        input_list.remove(smallest)
    return output_list","def sort_list(input_list):
    output_list = []
    while input_list:
        smallest = input_list[0]
        for i in input_list:
          ",Incomplete Answer,String Manipulation
Write a script in Python to return the cryptographic hash of a string.,string = 'Welcome to the world of programming!',"import hashlib

def get_hash(string):
    sha1 = hashlib.sha1()
    sha1.update(string.encode('utf-8'))
    return sha1.hexdigest()

print(get_hash(string))","import hashlib

def get_hash(string):
    sha1 = hashlib.sha1()
    sha1.update(string.encode('utf-8'))
    return sha1.hexdigest()

print(get_hash(string))",correct,Loops
Design a Python class to store information about student records.,,"class StudentRecord:
    def __init__(self, name, age, gender, gpa):
        self.name = name
        self.age = age
        self.gender = gender
        self.gpa = gpa
    def get_name(self):
        return self.name
    def get_age(self):
        return self.age
    def get_gender(self):
        return self.gender
    def get_gpa(self):
        return self.gpa","class StudentRecord:
    def __init__(self, name, age, gender, gpa):
        self.name = name
        self.age = age
        self.gender = gender
        self.gpa = gpa
    def get_name(self):
        return self.name
    def get_age(self):
        return self.age
    def get_gender(self):
        return self.gender
    def get_gpa(self):
        return self.gpa",correct,String Manipulation
Generate a Python script that can detect whether a given string is a palindrome or not.,,"def is_palindrome(s):
        rev = ''.join(reversed(s)) 
        if (s == rev): 
            return True
        return False

# driver code
s = ""level""
ans = is_palindrome(s) 

if ans == 1: 
    print(""Yes"") 
else: 
    print(""No"")","def is_palindrome(s):
        rev = ''.join(reversed(s)) 
        if (s == rev): 
            return True
        return False

# driver code
s = ""level""
ans = is_palindrome(s) 

if ans == 1: 
    print(""Yes"") 
else: 
    print(""No"")",correct,Recursion
Generate a Python function that sorts a list of numbers using the bubble sort algorithm,"[8,2,11,9,20,7]","def bubbleSort(list): 
	n = len(list) 
	for i in range(n): 
		for j in range(0, n-i-1): 
			if list[j] > list[j+1] : 
				list[j], list[j+1] = list[j+1], list[j] 
	return list

print(bubbleSort([8,2,11,9,20,7]))","def bubbleSort(list): 
	n = len(list) 
	for i in range(n): 
		for j in range(0, n-i-1): 
			if list[j] > ",Incomplete Answer,String Manipulation
Create a Python program to detect palindrome words.,noon,"def is_palindrome(word):
    reversed_word = word[::-1]
    if reversed_word == word:
        return True
    else:
        return False

result = is_palindrome(""noon"")
print(result)","def is_palindrome(word):
    reversed_word = word[::-1]
    if reversed_word == word:
        return True
    else:
        return False

result = is_palindrome(""noon"")
print(result)",correct,Recursion
Create a for loop in Python that prints the numbers 1 to 10.,,"for i in range(1, 11):
    print(i)","for i in range(1, 11):
    print(i)",correct,Loops
"Given a list of tuples, write a Python program to calculate the Euclidean distance between two items in the list.",,"def euclidean_distance(lst):
    distance = 0
    for i in range(len(lst[0])):
        distance += (lst[0][i]-lst[1][i])**2
    return (distance**0.5)","def euclidean_distance(lst:
    distance = 0
    for i in range(len(lst[0]:
        distance += (lst[0][i]-lst[1][i]**2
    return (distance**0.5",Syntax Error,Recursion
Create a python function to calculate the probability of a given event.,An example event is rolling a dice that has 6 sides and the event is rolling a number 6.,"def calculate_probability(event):
    num_outcomes = 6
    num_favorable = 1
    
    probability = num_favorable/num_outcomes
    
    return probability
    
# calculate probability of rolling a 6
probability = calculate_probability(""rolling a 6"")
print(probability)","def calculate_probability(event):
    num_outcomes = 6
    num_favorable = 1
    
    probability = num_favorable/num_outcomes
    
  ",Incomplete Answer,Recursion
"Write a Python program to generate a password of length 10 containing lowercase letters, uppercase letters, and numbers.",,"import string
import random

def generate_password():
    letters = string.ascii_letters + string.digits
    password = ''.join(random.choice(letters) for i in range(10))
    return password

print(generate_password())","import string
import random

def generate_password()
    letters = string.ascii_letters + string.digits
    password = ''.join(random.choice(letters) for i in range(10))
    return password

print(generate_password())",Syntax Error,Recursion
Generate code to calculate the distance between two points in an array in Python.,"Two points in an array: [2, 4] and [10, 6]","from math import sqrt

def calcDistance(p1, p2):
    return sqrt( (p2[0] - p1[0])**2 + (p2[1] - p1[1])**2 )

point1 = [2, 4]
point2 = [10, 6]

distance = calcDistance(point1, point2)
print(""Distance between the two points is"", distance)","from math import sqrt

def calcDistance(p1, p2):
    return sqrt( (p2[0] - p1[0])**2 + (p2[1] - p1[1])**2 )

point1 = [2, 4]
point2 = [10, 6]

distance = calcDistance(point1, point2)
print(""Distance between the two points is"", distance)",correct,Recursion
Develop a biopython program which counts the number of occurrences of a given DNA sequence.,ATGGGCTAG,"from Bio.Seq import Seq
from Bio import SeqIO

seq = Seq(""ATGGGCTAG"")

# Count the occurrence of the DNA sequence
count = seq.count_overlap(seq)

print(count)","from Bio.Seq import Seq
from Bio import SeqIO

seq = Seq(""ATGGGCTAG"")

# Count the occurrence of the DNA sequence
count = seq.count_overlap(seq)

print(count)",correct,String Manipulation
"Write a Python program that takes a string and counts the number of occurrences of each letter, and then prints the results.","""Hello World!""","str = ""Hello World!""
chars = list(str)

# initialize counts as empty dictionary
char_counts = {}

for char in chars:
    if char in char_counts:
        char_counts[char] += 1
    else:
        char_counts[char] = 1

# printing result
for char, count in char_counts.items():
    print(""{} : {}"".format(char, count))","str = ""Hello World!""
chars = list(str)

# initialize counts as empty dictionary
char_counts = {}

for char in chars:
    if char in char_counts:
        char",Incomplete Answer,Loops
Generate a Python program to group a list of integers into even and odd numbers.,"[1, 2, 3, 4, 5, 6]","def group_integers(lst):
 evens = []
 odds = []
 for num in lst:
 if (num % 2 == 0):
 evens.append(num)
 else:
 odds.append(num)
 
 return (evens, odds)
 
 lst = [1, 2, 3, 4, 5, 6]
 result = group_integers(lst)
 
 print(""Even numbers:"", result[0])
 print(""Odd numbers:"", result[1])","def group_integers(lst)
 evens = []
 odds = []
 for num in lst
 if (num % 2 == 0)
 evens.append(num)
 else
 odds.append(num)
 
 return (evens, odds)
 
 lst = [1, 2, 3, 4, 5, 6]
 result = group_integers(lst)
 
 print(""Even numbers"", result[0])
 print(""Odd numbers"", result[1])",Syntax Error,String Manipulation
Write a Python program to simulate rolling two dice and determine the odd/even result.,,"import random

def roll_dice():
    roll1 = random.randint(1, 6)
    roll2 = random.randint(1, 6)
    roll_sum = roll1 + roll2
    print(f""You rolled {roll1} and {roll2}. The total is {roll_sum}, which is {'even' if roll_sum % 2 == 0 else 'odd'}."")
    
roll_dice()","import random

def roll_dice():
    roll1 = random.randint(1, 6)
    roll2 = random.randint(1, 6)
    roll_sum = roll1 + roll2
    print(f""You rolled {roll1} and {roll2}. The total is {roll_sum}, which is {'even' if roll_sum % 2 == 0 else 'odd'}."")
    
roll_dice()",correct,Loops
Create a program to implement a selection sort in Python.,"[5, 3, 2, 4, 1]","def selection_sort(arr):
    n = len(arr)
    for i in range(n-1):
        min_index = i
        for j in range(i+1, n):
            if arr[min_index] > arr[j]:
                min_index = j
        arr[i], arr[min_index] = arr[min_index], arr[i]
    return arr","def selection_sort(arr):
    n = len(arr)
    for i in range(n-1):
        min_index = i
        for j in range(i+1, n):
            if arr[min_index] > arr[j]:
                min_index = j
        arr[i], arr[min_index] = arr[min_index], arr[i]
    return arr",Syntax Error,Loops
Create a program in Python that takes a word as an argument and print it in reverse.,'Hello World',"def reverse(word):
    return word[::-1]

print(reverse('Hello World'))","def reverse(word):
    return word[::-1]

print(reverse('Hello World'))",correct,String Manipulation
Design a python program to extract URLs from a website.,url = 'http://example.com',"from bs4 import BeautifulSoup
import requests

page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')
links = soup.select('a[href]')
for link in links:
    print(link['href'])","from bs4 import BeautifulSoup
import requests

page = requests.get(url)
soup = BeautifulSoup(page",Incomplete Answer,File I/O
Modify a Python program to generate output in JSON format.,"dictionary = {
   ""name"": ""John"",
   ""age"": 30,
   ""car"": [""Ford"", ""BMW"", ""Fiat""]
}","import json

dictionary = {
   ""name"": ""John"",
   ""age"": 30,
   ""car"": [""Ford"", ""BMW"", ""Fiat""]
}

json_data = json.dumps(dictionary)
print(json_data) // Output: {""name"": ""John"", ""age"": 30, ""car"": [""Ford"", ""BMW"", ""Fiat""]}","import json

dictionary = {
   ""name"": ""John"",
   ""age"": 30,
   ""car"": [""Ford"", ""BMW"", ""Fiat""]
}

json_data = json.dumps(dictionary)
pritn(json_data) // Output: {""name"": ""John"", ""age"": 30, ""car"": [""Ford"", ""BMW"", ""Fiat""]}",Syntax Error,Recursion
Write a Python program to iterate through a given list of integers and output the maximum value.,"[1,5,2,3,8,9]","max_value = 0

for value in [1,5,2,3,8,9]:
    if value > max_value:
    max_value = value

print(max_value) # Output: 9","max_value = 0

for value in [1,5,2,3,8,9]:
    if value > ma",Incomplete Answer,String Manipulation
"Create a Python program to generate a random string composed of 8 special characters (e.g., @#$%).",,"import random

def generate_random_string():
   # Inputs: None
   # Output: Random special character string
   special_chars = [x for x in '@#$%^&*']
   random_string = """"
   for _ in range(8):
       random_string += random.choice(special_chars)
   return random_string

print(generate_random_string())","import random

def generate_random_string():
   # Inputs: None
   # Output: Random special character string
   special_chars = [x for x in '@#$%^&*']
 ",Incomplete Answer,File I/O
Write a Python program to generate a random number between the given input numbers.,,"import random

def random_num(start, stop):
    return random.randint(start, stop)


# Example
num = random_num(0, 10)
print(num)","import random

def random_num(start, stop):
    return random.ra",Incomplete Answer,Recursion
"Construct a python program that takes an array of integers as an argument, and returns the second largest number.","arr = [10, 12, 2, 8, 6, 4]","def second_largest(arr):
  max_first = max(arr[0], arr[1])
  max_second = min(arr[0], arr[1])
  for i in range(2, len(arr)):
    if arr[i] > max_first:
      max_second = max_first
      max_first = arr[i]
    else: 
      if arr[i] > max_second:
        max_second = arr[i]
  return max_second

print(second_largest(arr))","def second_largest(arr):
  max_first = max(arr[0], arr[1])
  max_second = min(arr[0], arr[1])
  for i in range(2, len(arr)):
    if arr[i] > max_first:
      max",Incomplete Answer,String Manipulation
Generate a list in Python that contains all the words from a source string that start with a certain letter.,"source_string = ""My dog loves to play in the park!""
letter = ""p""","def generate_list(source_string, letter):
  words = source_string.split()
  result = []
  for word in words:
    if word[0].lower() == letter:
      result.append(word)
  return result

print(generate_list(source_string, letter))","def generate_list(source_string, letter):
  words = source_string.split()
  result = []
  for word in words:
    i",Incomplete Answer,String Manipulation
Write a Python program to do a brute force search for a pair of elements which sum to a given target value.,"[1, 3, 4, 5, 6, 7], 8","# brute force search algorithm
def brute_force_search(arr, target):
	for i in range(len(arr)):
		for j in range(len(arr)):
			if arr[i] + arr[j] == target:
				return arr[i], arr[j]
	return None

# test the algorithm
target = 8
lst = [1, 3, 4, 5, 6, 7]
print(brute_force_search(lst, target))

Output:
pair = (3, 5)","# brute force search algorithm
def brute_force_search(arr, target):
	for i in range(len(arr)):
		for j in range(len(arr)):
			if arr[i] + arr[j] == target:
	",Incomplete Answer,String Manipulation
Create a REST API endpoint in Python that fetches data from a database and returns it as JSON.,"The table ""Users"" has the following columns: Id (primary key), Name, Email, Gender.","@app.route('/users', methods=['GET'])
def get_users():
 users = User.query.all()
 return jsonify([{'Id': user.id, 'Name': user.name, 'Email': user.email, 'Gender': user.gender} for user in users])","@app.route('/users', methods=['GET'])
def get_users():
 users = User.query.all()
 return jsonify([{'Id': user.id, 'Name': user.name, 'Email': user.email, 'Gender': user.gender} for user in users])",correct,File I/O
Generate a function in Python that takes two parameters and returns their product.,,"def multiply(a, b):
    """"""Computes the product of two numbers.""""""
    return a * b","def multiply(a, b):
    """"""Computes the product of two numbers.""""""
    return a * b",correct,Recursion
Write a function to search a literals string in a string and also find the location within the original string where the pattern occurs.,,"import re
def search_literal(pattern,text):
 match = re.search(pattern, text)
 s = match.start()
 e = match.end()
 return (s, e)","import re
def search_literal(pattern,text):
 match = re.search(pattern, text)
 s = match.start()
 e = match.end()
 return (s, e)",correct,OOP
"Given a list of integers, write a Python program to find the maximum value in the array and display its index.","[3, 2, 5, 8, 6]","mylist = [3, 2, 5, 8, 6]

# initialize maximum value and index
maxval = 0
maxindex = 0

# iterate through list
for i, val in enumerate(mylist):
 # check if the current value is greater than the maximum value
 if val > maxval:
  maxval = val
  maxindex = i

# print the result
print('Maximum value:', maxval)
print('Index of maximum value:', maxindex)","mylist = [3, 2, 5, 8, 6]

# initialize maximum value and index
maxval = 0
maxindex = 0

# iterate through list
for i, val in enumerate(mylist):
 # check if the current value is greater than the maximum value
 if val > maxval:
  maxval = val
  maxindex = i

# print the result
print('Maximum value:', maxval)
print('Index of maximum value:', maxindex)",correct,OOP
Write a python function to check if roots of a quadratic equation are reciprocal of each other or not.,,"def Check_Solution(a,b,c): 
    if (a == c): 
        return (""Yes""); 
    else: 
        return (""No""); ","def Check_Solution(a,b,c): 
    if (a == c): 
        return (""Yes""); 
    else: 
        return (""No""); ",correct,Loops
"Given the following Python function, use optimization techniques to reduce the running time of the function.","def functionA(n):
 s = 0
 for i in range(n):
 for j in range(i+1):
 s += j
 return s","def functionA_opt(n):
 s = 0
 s = n*(n+1)*(n+2) // 6
 return s","def functionA_opt(n)
 s = 0
 s = n*(n+1)*(n+2) // 6
 return s",Syntax Error,String Manipulation
Implement a bubble sort in Python.,,"def bubble_sort(lst):
    for i in range(len(lst)-1,0,-1):
        for j in range(i):
            if lst[j] > lst[j+1]:
                lst[j], lst[j+1] = lst[j+1], lst[j]
    return lst","def bubble_sort(lst):
    for i in range(len(lst)-1,0,-1):
        for j in range(i):
            if lst[j] > lst[j+1]:
                lst[j], lst[j+1] = lst[j+1], lst[j]
    return lst",Syntax Error,OOP
Add Python logging capabilities to a given Flask application.,"Example existing application:
from flask import Flask
app = Flask(name)

@app.route('/')
def index():
 return 'Hello World!'","import logging
import sys
from flask import Flask

app = Flask(name)

# Set up logging
app.logger.addHandler(logging.StreamHandler(sys.stdout))
app.logger.setLevel(logging.DEBUG)

@app.route('/')
def index():
 app.logger.info('Processing request to index')
 return 'Hello World!'","import logging
import sys
from flask import Flask

app = Flask(name)

# Set up logging
app.logger.addHandler(logging.StreamHandler(sys.stdout))
app.logger.setLevel(logging.DEBUG)

@app.route('/')
def index():
 app.logger.info('Processing request to index')
 return 'Hello World!'",correct,Recursion
"Create a function in Python to count the number of each letter in the sentence ""Hello world, this is GPT!""",,"def countLetters(sentence): 
    counts = dict() 
    for c in sentence: 
        if c in counts: 
            counts[c] += 1
        else: 
            counts[c] = 1
  
    return counts","def countLetters(sentence): 
    counts = dict() 
    for c in sentence: 
        if c in counts: 
            counts[c] += 1
        else: 
            counts[c] = 1
  
    return counts",correct,OOP
Write a function in Python that computes the median of a given array of numbers.,"[2,3,4,5,6,7,8]","def median(arr):
 arr.sort() 
 n = len(arr) 
 if n % 2 != 0: 
 return arr[n//2] 
 else: 
 return (arr[(n-1)//2] + arr[n//2]) / 2

# driver code 
arr = [2,3,4,5,6,7,8] 
print(median(arr))","def median(arr)
 arr.sort() 
 n = len(arr) 
 if n % 2 != 0 
 return arr[n//2] 
 else 
 return (arr[(n-1)//2] + arr[n//2]) / 2

# driver code 
arr = [2,3,4,5,6,7,8] 
print(median(arr))",Syntax Error,File I/O
Write a Python program to generate a table of all possible combinations for a given set of symbols.,"['A', 'B', 'C']","def print_combinations(symbols):
    for idx in range(1 << len(symbols)):
        combination = [symbol for symbol, flag in zip(symbols, bin(idx)[2:]) if flag == ""1""]
        print(combination)

symbols = ['A', 'B', 'C']
print_combinations(symbols)","def print_combinations(symbols):
    for idx in range(1 << len(symbols)):
        combination = [symbol for symbol, flag in ",Incomplete Answer,Recursion
Create a Python code to check if a single integer is a prime number,int number = 11,"def is_prime(number):
    if number <= 1:
        return False

    for i in range(2, number):
        if number % i == 0:
            return False
    return True","def is_prime(number):
    if number <= 1:
        return False

    for i in range(2, number):
        if number % i == 0:
            return False
    return True",correct,Loops
Create a program in Python to check for palindrome numbers.,121,"def palindrome(num):
    num = str(num)
    if num == num[::-1]:
        print(num + "" is a palindrome number"")
    else: 
        print(num + "" is not a palindrome number"")

palindrome(121)
// Output: 121 is a palindrome number","def palindrome(num):
    num = str(num)
    if num == num[::-1]:
        print(num + "" is a palindrome number"")
  ",Incomplete Answer,String Manipulation
Create a background job in Python to run every 5 minutes.,,"# Importing the necessary module
import schedule

# Defining the job
def job():
    print(""Job executed!"")

# Scheduling the job to run every 5 minutes
schedule.every(5).minutes.do(job)

# Running the job
while True:
    schedule.run_pending()","# Importing the necessary module
import schedule

# Defining the job
def job():
    print(""Job executed!"")

# Scheduling the job to run every 5 minutes
schedule.every(5).minutes.do(job)

# Running the job
while True:
    schedule.run_pending()",correct,String Manipulation
Write a Python program to collect data from an API and store the data in a SQL database.,"import requests

url = 'http://some_api.com/resource1/?format=json'","import sqlite3
import requests

# Connect to the database
db = sqlite3.connect('api_data.db')

# Create the statement
stmt = 'INSERT INTO api_data (data) VALUES (?)'

# Collect and save the data
data = requests.get(url).json()
db.execute(stmt, (data,))
db.commit()
db.close()","import sqlite3
import requests

# Connect to the database
db = sqlite3.connect('api_data.db')

# Create the statement
stmt = 'INSERT INTO",Incomplete Answer,String Manipulation
Write a python program that takes a list of numbers and prints out only the even numbers,"[2, 4, 7, 14, 21]","for num in [2, 4, 7, 14, 21]: 
    if num % 2 == 0: 
        print(num, end = "" "")","for num in [2, 4, 7, 14, 21]: 
    if num % 2 == 0: 
        pritn(num, end = "" "")",Syntax Error,Recursion
Create an alternate version of a given program that produces the same output.,"import math
myString = ""Python Rocks!""
numRounds = math.ceil(len(myString) / 2)
for i in range(1, numRounds+1):
    print(myString[0:i])","import math
myString = ""Python Rocks!""
numRounds = math.floor(len(myString) / 2)
for i in reversed(range(1, numRounds+1)):
    print(myString[i-1::-1] + myString[i::])","import math
myString = ""Python Rocks!""
numRounds = math.floor(len(myString) / 2)
fo",Incomplete Answer,OOP
Write a python function to count the total unset bits from 1 to n.,,"def count_Unset_Bits(n) :  
    cnt = 0;  
    for i in range(1,n + 1) : 
        temp = i;  
        while (temp) :  
            if (temp % 2 == 0) : 
                cnt += 1;  
            temp = temp // 2;  
    return cnt;  ","def count_Unset_Bits(n) :  
    cnt = 0;  
    for i in range(1,n + 1) : 
        temp = i;  
        while (temp) :  
            if (temp % 2 == 0) : 
                cnt += 1;  
            temp = temp // 2;  
    return cnt;  ",correct,OOP
Convert a given code snippet from Swift to Python.,"let username = ""John""
let score = 123","username = ""John""
score = 123","username = ""John""
score = 123",Syntax Error,String Manipulation
Find the maximum value of a 10 element array in Python.,"array = [1, 7, 3, 4, 5, 9, 8, 0, 2, 6]","# Max value in array

def max_val(array):
    max_val = array[0]
    for num in array[1:]:
        if num > max_val:
            max_val = num
    return max_val","# Max value in array

def max_val(array):
    max_val = array[0]
    for num in ",Incomplete Answer,File I/O
Write a Python program to sort a list of tuples by the second element in the tuple.,"tuples = [(""Alice"", 15),(""Bob"", 10),(""Robot"",25)]","def sort_tuples_by_second_element(tuples):
  return sorted(tuples, key=lambda tup: tup[1])","def sort_tuples_by_second_element(tuples):
  return sorted(tuples, key=lambda tup: tup[1])",Syntax Error,OOP
Identify and correct code issues in the following snippet of Python code.,"def foo(x):
    if x > 0
        return x
    else:
        return 0","def foo(x):
    if x > 0:
        return x
    else:
        return 0","def foo(x):
    if x > 0:
        return x
    else:
        return 0",correct,OOP
Generate Python code to calculate the Mean Squared Error (MSE) between a given set of predicted values and actual values.,"y_true = [2.2, 3.7, 4.1, 5.7]
y_pred = [1.8, 2.3, 2.9, 5.9]","def calculate_mse(y_true, y_pred):
    mse = 0
    for i in range(len(y_true)):
        mse += (y_true[i] - y_pred[i])**2
    mse = mse / len(y_true)
    return mse

mse=calculate_mse(y_true, y_pred)
print(mse)
# Output: 0.44000000000000006","def calculate_mse(y_true, y_pred):
    mse = 0
    for i in range(len(y_true)):
        mse += (y_true[i] - y_pred[i])**2
    mse = mse / len(y_true)
    return mse

mse=calculate_mse(y_true, y_pred)
print(name, mse)
# Output: 0.44000000000000006",Syntax Error,Recursion
Update the given Python program to shuffle an array of numbers.,"[1, 2, 3, 4, 5, 6]","import random

def shuffleArray(arr):
    random.shuffle(arr)
    return arr

array = [1, 2, 3, 4, 5, 6]
shuffledArray = shuffleArray(array)
print(shuffledArray)","import random

def shuffleArray(arr):
    random.shuffle(arr)
    return arr

array = [1, 2, 3, 4, 5, 6]
shuffledArray = shuffleArray(array)
print(shuffledArray)",correct,OOP
Create a function in Python to delete all elements from a list which are divisible by 5.,"[1, 10, 15, 20, 25]","def delete_divisible_by_5(my_list):
  new_list = []
  for i in my_list:
    if i % 5 != 0:
      new_list.append(i)
  return new_list

# Test
my_list = [1, 10, 15, 20, 25]

new_list = delete_divisible_by_5(my_list)

print(""List after deletion: "" + str(new_list))","def delete_divisible_by_5(my_list):
  new_list = []
  for i in my_list:
    if i % 5 != 0:
      new_list.append(i)
  return new_list

# Test
my_list = [1, 10, 15, 20, 25]

new_list = delete_divisible_by_5(my_list)

print(""List after deletion: "" + str(new_list))",correct,File I/O
Create a Python class to implement a multiplication table,,"class MultiplicationTable:
    def __init__(self, limit):
        self.limit = limit

    def create_table(self):
        for i in range(1, self.limit+1):
            for j in range(1, self.limit+1):
                print(i*j, sep= '\t', end='')
            print()","class MultiplicationTable:
    def __init__(self, limit):
        self.limit = limit

    def create_table(self):
        for i in r",Incomplete Answer,Recursion
Generate random integers within a given range in Python.,,"import random
def generate_random_integers(start, end):
    return random.randint(start, end)

generate_random_integers(1, 10); //Output: 8","import random
def generate_random_integers(start, end):
    return random.randint(start, end)

generate_random_integers(1, 10); //Output: 8",correct,OOP
"Write a python program to convert a time string ""hh:mm:ss"" into total number of seconds","time = ""08:11:15""",time_in_secs = 8 * 3600 + 11 * 60 + 15,time_in_secs = 8 * ,Incomplete Answer,Recursion
Can you develop a program in Python that prints out the number of words and characters in a given string?,,"def word_and_character_count(string):
    num_words = len(string.split())
    num_characters = len(string)
    print(""Number of words:"", num_words)
    print(""Number of characters:"", num_characters)","def word_and_character_count(string):
    num_words = len(string.split())
    num_characters = len(",Incomplete Answer,String Manipulation
Create a Python program that takes a list of numbers as an input from the user and prints out the number that appears the most in the list.,"1, 1, 2, 3","list_of_numbers = [int(x) for x in input(""Please enter a list of numbers: "").split(',')]

c = collections.Counter(list_of_numbers)

most_common_num = c.most_common(1)[0][0]

print(""The most common number in the list is "" + str(most_common_num))","list_of_numbers = [int(x) for x in input(""Please enter a list of numbers: "").split(',')]

c = collections.Counter(list_of_",Incomplete Answer,Loops
Write a Python script that counts the characters of a given string.,Hello World,"string = 'Hello world'

count = len(string)

print(""Length of the string is"", count)","string = 'Hello world'

count = len(string)

print(""Length of the string is"", count)",correct,Recursion
Implement a function that prints out the numbers from 1 to 50 in python,,"def print_numbers():
    for i in range(1, 51):
        print(i)

print_numbers()","def print_numbers():
    for i in range(1, 51):
        print(name, i)

print_numbers()",Syntax Error,File I/O
Design a data structure in Python to store information about a customer.,"name, phone, email, address","class Customer:
    def __init__(self, name, phone, email, address):
        self.name = name
        self.phone = phone
        self.email = email
        self.address = address

customer = Customer(""John"", ""+123456789"", ""john@example.com"", ""456 Main Street"")","class Customer:
def __init__(self, name, phone, email, address):
    self.name = name
    self.phone = phone
    self.email = email
    self.address = address

customer = Customer(""John"", ""+123456789"", ""john@example.com"", ""456 Main Street"")",Syntax Error,File I/O
Write a function to remove all tuples with all none values in the given tuple list.,,"def remove_tuple(test_list):
  res = [sub for sub in test_list if not all(ele == None for ele in sub)]
  return (str(res)) ","def remove_tuple(test_list):
  res = [sub for sub in test_list if not all(ele == None for ele in sub)]
  return (str(res)) ",correct,Recursion
Create a min-heap data structure in python.,,"import heapq

class MinHeap:
    def __init__(self):
        self.heap_array = []

    def insert(self, value):
        heapq.heappush(self.heap_array, value)

    def pop(self):
        return heapq.heappop(self.heap_array)","import heapq

class MinHeap:
    def __init__(self):
        self.heap_array = []

    def insert(self, value):
",Incomplete Answer,Loops
Write a function to extract the nth element from a given list of tuples.,,"def extract_nth_element(list1, n):
    result = [x[n] for x in list1]
    return result","def extract_nth_element(list1, n):
    result = [x[n] for x in list1]
    return result",correct,Recursion
Generate a program to merge two sorted linked lists in Python.,,"def merge(list1, list2):  
    if list1 is None:  
        return list2  
    if list2 is None:  
        return list1  
    if list1.data < list2.data:  
        list1.next = merge(list1.next, list2)  
        return list1  
    else:  
        list2.next = merge(list1, list2.next)  
        return list2","def merge(list1, list2):  
    if list1 is None:  
        return list2  
    if list2 is None:  
        return list1  
    if list1.data < list2.data: ",Incomplete Answer,File I/O
Write a function to find the circumference of a circle.,,"def circle_circumference(r):
  perimeter=2*3.1415*r
  return perimeter","def circle_circumference(r):
  peri",Incomplete Answer,OOP
Create a Python program to check if a string ends with a given substring.,"s = 'Hello World', substring = 'ld'","def endswith(s, substring): 
    return s.endswith(substring) 


s = 'Hello World'
substring = 'ld'
print(endswith(s, substring)) # prints True","def endswith(s, substring): 
    return s.endswith(substring) 


s = 'Hello World'
substring = 'ld'
print(endswith(s, substring)) # prints True",correct,Loops
Generate a random list of numbers ranging from 1 to 10 without duplicates in Python.,,"import random

# Generate a list of numbers ranging from 1 to 10 without duplicates
numbers = list(range(1,11))
random.shuffle(numbers)

# Print shuffled numbers
print(numbers)","import random

# Generate a list of numbers ranging from 1 to 10 without duplicates
numbers = list(range(1,11))
random.shuffle(numbers)

# Print shuffled numbers
print(numbers)",correct,OOP
Create a program in Python which takes a string and an integer as input and prints the string the given number of times.,"String: Hello
Integer: 3","string = ""Hello""
num = 3

for i in range(num):
    print(string)","string = ""Hello""
num = 3

for i in range(num):
    pritn(string)",Syntax Error,File I/O
Write a python function to check whether a sequence of numbers has a decreasing trend or not.,,"def decreasing_trend(nums):
    if (sorted(nums)== nums):
        return True
    else:
        return False","def decreasing_trend(nums):
if (sorted(nums)== nums):
    return True
else:
    return False",Syntax Error,File I/O
"Given a list of dictionarys, create a python command to add ""hello"" in front of every value in the list.","[{'string' : 'world'}, {'number' : 5}]","[{'string' : 'hello world'}, {'number' : 'hello 5'}]",[{'string' : 'hello world',Incomplete Answer,Loops
Write a script in python that outputs all even numbers between 0 and 10.,,"for number in range(0,11):
  if (number % 2 == 0):
    print(number)","for number in range(0,11:
  if (number % 2 == 0:
    print(number",Syntax Error,OOP
Generate a Python program to calculate the total cost including taxes of an item purchased based on the given inputs.,"price = 22
tax_percentage = 5","price = 22
tax_percentage = 5

total_cost = price * (1 + tax_percentage/100)
print('The total cost is: ', total_cost)","price = 22
tax_percentage = 5

total_cost = price * (1 + t",Incomplete Answer,String Manipulation
Generate a Random Forest classifier in python,,"from sklearn.ensemble import RandomForestClassifier

clf = RandomForestClassifier(n_estimators = 100, criterion = ""entropy"", random_state = 0)","from sklearn.ensemble import RandomForestClassifier

clf = RandomForestClassifier(n_estimators = 100, criterion = ""entropy"", random_state = 0)",Syntax Error,OOP
Generate a Python program which use to generate an array of length N with random numbers based on the given seed.,"N = 10
Seed = 42","import random

def generate_array_with_random_numbers(n, seed):
 random.seed(seed)
 return [random.randint(0, 100) for _ in range(n)]

n = 10
seed = 42
array = generate_array_with_random_numbers(n, seed)

print(array)
# [19, 25, 44, 36, 33, 20, 72, 15, 85, 37]","import random

def generate_array_with_random_numbers(n, seed):
 random.seed(seed)
 return [random.randint(0, 100) for _ in range(",Incomplete Answer,OOP
Create a function in Python to calculate the total of all the characters in a given input string.,string: 'Hello World!',"def char_total(string):
total = 0

for char in string:
 total += ord(char)

return total

print(char_total('Hello World!')) 
# Output: 1116","def char_total(string):
total = 0

for char in string:
 total += ord(",Incomplete Answer,OOP
Write a Python program for sentiment analysis.,,"import nltk
import numpy as np
from nltk.sentiment.vader import SentimentIntensityAnalyzer

def sentiment_analyzer(text):
 sid = SentimentIntensityAnalyzer()
 score = sid.polarity_scores(text)
 return score

# Example test
sentiment_analyzer('This is a good day!')
# {'neg': 0.0, 'neu': 0.508, 'pos': 0.492, 'compound': 0.4404}","import nltk
import numpy as np
from nltk.sentiment.vader import SentimentIntensityAnalyzer

def sentiment_analyzer(text):
 sid = SentimentIntensityAnalyzer()
 score = sid.polarity_scores(text)
 return score

# Example test
sentiment_analyzer('This is a good day!')
# {'neg': 0.0, 'neu': 0.508, 'pos': 0.492, 'compound': 0.4404}",correct,File I/O
Generate a program in Python which creates an ordered dictionary from a given list of tuples.,,"def create_ordered_dict(list_tuple):
    ordered_dict = OrderedDict()
    for key, value in list_tuple:
        ordered_dict[key] = value
    return ordered_dict","def create_ordered_dict(list_tuple:
    ordered_dict = OrderedDict(
    for key, value in list_tuple:
        ordered_dict[key] = value
    return ordered_dict",Syntax Error,Recursion
Write a function in Python to print the reverse of a string.,,"def print_reverse(s):
  print(s[::-1])",def print_reverse(s,Incomplete Answer,Recursion
"Using Python, create a function that takes two numbers as input, and generates a random number between them.",2 and 5,"def random_number_generator(min, max):
    return random.randint(min, max)","def random_number_generator(min, max)
    return random.randint(min, max)",Syntax Error,OOP
Sort a list in Python using the Quick Sort algorithm,"[5, 2, 9, 1, 4, 12]","def quicksort (array) :
    if len(array) <= 1 :
        return array
    else:
        pivot = array[len(array) // 2]
        left = [x for x in array if x < pivot]
        middle = [x for x in array if x == pivot]
        right = [x for x in array if x > pivot]
        return quicksort(left) + middle + quicksort(right)

array = [5, 2, 9, 1, 4, 12]
result = quicksort(array)
print(result)","def quicksort (array) :
    if len(array) <= 1 :
        return array
    else:
        pivot = array[len(array) // 2]
        left = [x for x in array if x < pivot]
        middle = [x for x in ",Incomplete Answer,OOP
Create a program in Python to generate a random 2D matrix of size NxN containing integers between 1 and 10.,N = 10,"import random

n = 10

matrix = [[random.randint(1, 10) for _ in range(n)] for _ in range(n)]

print(matrix)","import random

n = 10

matrix = [[random.randint(1, 10) for _ in range(n)] for _ in range(n)]

print(matrix)",Syntax Error,OOP
Build a regular expression in Python to validate a UK postcode.,,"import re

pattern = r'[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}'

def validate_postcode(postcode):
  return re.match(pattern, postcode) != None","import re

pattern = r'[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][ABD-HJLNP-UW-Z]{2}'

",Incomplete Answer,String Manipulation
Generate a function in Python to calculate the value of an employee’s paycheck given the hours worked and the hourly rate.,,"def calc_paycheck(hours_worked, hourly_rate):
 return hours_worked * hourly_rate","def calc_paycheck(hours_worked, hourly_rate:
 return hours_worked * hourly_rate",Syntax Error,Loops
Generate a random number in the range 0 to 1000 using the Python random library.,,"import random 
random_number = random.randint(0,1000)","import random 
random_number = random.randint(0,1000)",Syntax Error,OOP
Design an algorithm in Python that prints out the squares of each number between 1 and n.,n = 8,"def printSquares(n):
 for num in range(1,n+1):
 sqr = num * num
 print(sqr)

n = 8
printSquares(n)","def printSquares(n):
 for num in range(1,n+1):
 s",Incomplete Answer,Recursion
Design a function in Python to convert the temperature from Celsius to Fahrenheit.,,"def celsiusToFahrenheit(celsius):
  fahrenheit = celsius * 9/5 + 32
  return fahrenheit","def celsiusToFahrenheit(celsius):
  fahrenheit = celsius * 9/5 + 32
  return fahrenheit",correct,OOP
How can you use Python to calculate the mean value of a given list,"[25, 34, 42]","def mean_value(numbers):
    sum = 0
    for n in numbers:
        sum += n
    return sum / len(numbers)","def mean_value(numbers):
    sum = 0
    for n in numbers:
        sum += n
    return sum / len(numbers)",correct,Recursion
Write a function to convert tuple to a string.,,"def tup_string(tup1):
  str =  ''.join(tup1)
  return str","def tup_string(tup1:
  str =  ''.join(tup1
  return str",Syntax Error,Recursion
Design a program in Python to find the roots of a quadratic equation.,,"import math

def find_roots(a, b, c): 
    # calculate the discriminant
    d = (b**2) - (4*a*c)

    # calculate the two solutions to the equation
    sol1 = (-b-math.sqrt(d))/(2*a)
    sol2 = (-b+math.sqrt(d))/(2*a)

    # return the two solutions
    return sol1, sol2","import math

def find_roots(a, b, c): 
    # calculate the discriminant
    d = (b**2) - (4*a*c)

    # calculate the two solutions to the equation
    sol1 = (-b-math.sqrt(d))/(2*a)
    sol2 = (-b+math.sqrt(d))/(2*a)

    # return the two solutions
    return sol1, sol2",Syntax Error,Recursion
Write a Python program to classify a given animal according to its features,"An animal with four legs, a curved tail and feathers","def classify_animal(features):
    if ""four legs"" in features and ""curved tail"" in features:
        if ""feathers"" in features:
            return ""bird""
        else:
            return ""mammal""
    else:
        return ""unknown""

features = ""An animal with four legs, a curved tail and feathers""
print(classify_animal(features)) # bird","def classify_animal(features):
    if ""four legs"" in features and ""curved tail"" in features:
        if ""feathers"" in features:
            return ""bird""
        else:
            return ""mammal""
    else:
        return ""unknown""

features = ""An animal with four legs, a curved tail and feathers""
pritn(classify_animal(features)) # bird",Syntax Error,OOP
Create a Python program that takes a list of integers and returns true if the list contains two distinct numbers whose product is even.,"[1, 2, 3, 4]","def has_even_product(numbers):
 for i in range(len(numbers)):
 for j in range(i+1, len(numbers)):
 if numbers[i] * numbers[j] % 2 == 0:
 return True
 return False","def has_even_product(numbers):
 for i in range(len(numbers)):
 for j in range(i+1, len(numbers)):
 if numbers[i] * numbers[j] % 2 == 0:
 return True
 return False",Syntax Error,Recursion
Design an algorithm in Python to find the minimum of three values.,"3, 2, 1","def find_min(a, b, c): 
    min_val = a 
    if b < min_val: 
        min_val = b 
    if c < min_val: 
        min_val = c 
    return min_val 

print(find_min(3, 2, 1)) # Output: 1","def find_min(a, b, c): 
    min_val = a 
    if b < min_val: 
        min_val = b 
    if c < min_val: 
        min_val = c 
    return min_val 

print(find_min(3, 2, 1)) # Output: 1",correct,String Manipulation
Write a Python code snippet to sort lists of integers in descending order.,"[4, 6, 1, 3, 8]","lst = [4, 6, 1, 3, 8]
lst.sort(reverse=True)
print(lst)  # [8, 6, 4, 3, 1]","lst = [4, 6, 1, 3, 8]
lst.sort(reverse=True)
print(lst)  # [8, 6, 4, 3, 1]",correct,Loops
"Write a Python program to print out the count of vowels, consonants and digits in an input string.",This is an example string including digits123.,"Vowels: 10
Consonants: 12
Digits: 3","Vowels: 10
Conson",Incomplete Answer,Loops
Create a feature extraction function in Python to extract data from a json string.,"{""id"":111,""title"":""This is a sample title"",""body"":""This is a sample body text""}","def feature_extraction(input_str):
    import json
    data = json.loads(input_str)

    features = {
        ""id"": data[""id""],
        ""title"": data[""title""],
        ""body_len"": len(data[""body""])
    }

    return features","def feature_extraction(input_str):
    import json
    data = json.loads(input_str)

    features = {
        ""id"": data[""id""],
        ""title"": data[""title""],
        ""body_len"": len(data[""body""])
    }

    return features",correct,Recursion
Debug the following Python code and make it functional (read the instructions for the code).,"def factorial(n):
 if n == 0:
    return 1
 else:
 return n * factorial(n - 1)
factorial(5)","def factorial(n):
 if n == 0:
    return 1
 else:
 return n * factorial(n - 1)

# call the method
print(factorial(5))","def factorial(n):
 if n == 0:
    return 1
 else:
 return n * factorial(n - 1)

# call the method
print(factorial(5))",correct,Recursion
Generate a Python class for a two-dimensional point that represents a position on a Cartesian plane.,,"class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
        
    # method to get x-position
    def get_x(self):
        return self.x
    
    # method to get y-position
    def get_y(self):
        return self.y
            
    # method to move point
    def move_point(self, dx, dy):
        self.x += dx
        self.y += dy","class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
        
    # method to get x-position
    def get_x(self):
        return self.x
    
    # meth",Incomplete Answer,OOP
Write a python function to find the maximum sum of elements of list in a list of lists.,,"def maximum_Sum(list1): 
    maxi = -100000
    for x in list1: 
        sum = 0 
        for y in x: 
            sum+= y      
        maxi = max(sum,maxi)     
    return maxi ","def maximum_Sum(list1): 
    maxi = -100000
    for x in list1: 
        sum = 0 
       ",Incomplete Answer,String Manipulation
Write a function to find all the values in a list that are greater than a specified number.,,"def greater_specificnum(list,num):
 greater_specificnum=all(x >= num for x in list)
 return greater_specificnum","def greater_specificnum(list,num):
 greater_specificnum=all(x >= num for x in list)
 return greater_specificnum",correct,Recursion
Generate a program in Python that takes two strings and returns a list containing the combined string.,"(""Hello "", ""World!"")","def combine_strings(str1, str2):
 return [str1 + str2]

combined_string = combine_strings(""Hello "", ""World!"")
print(combined_string) # [""Hello World!""]","def combine_strings(str1, str2):
 return [str1 + str2]

combined_string = c",Incomplete Answer,Loops
Create an algorithm in Python to search for a value in a linked list.,,"def search(head, key): 
    current = head 
    while current is not None: 
        if current.data == key: 
            return current 
        current = current.next
    return None","def search(head, key): 
    current = head 
    while current is not None: 
        if curr",Incomplete Answer,File I/O
Write a function in Python to display all the words beginning with a given alphabet in a given string.,"str = ""This is a sample sentence""","def all_words_beginning_with(str, alphabet):
  words = str.split()
  result = []
  for word in words:
    if word[0].upper() == alphabet.upper():
      result.append(word)
  
  return result","def all_words_beginning_with(str, alphabet)
  words = str.split()
  result = []
  for word in words
    if word[0].upper() == alphabet.upper()
      result.append(word)
  
  return result",Syntax Error,File I/O
Optimize a given piece of Python code so that it runs faster without compromising on the integrity of the output.,"def get_elements(numbers_list):
 result = []
 for x in range(len(numbers_list)):
 if x % 2 == 0:
 result.append(numbers_list[x])
 return result","def get_elements(numbers_list):
 result = []
 for x in range(0, len(numbers_list), 2):
 result.append(numbers_list[x])
 return result","def get_elements(numbers_list):
 result = []
 for x in range(0, len(numbers_list), 2):
 result.append(numbers_list[x])
 return result",correct,Loops
Write a Python function to calculate the sum of the digits in a given string of numbers and letters.,,"def sum_string(s):
    sum = 0
    for ch in s:
        if ch.isdigit():
            sum += int(ch)
    return sum","def sum_string(s):
    sum = 0
    for ch in s:
        if ch.isdigit():
            sum += int(ch)
    return sum",correct,Recursion
Update the below Python code to run in multiprocess mode.,"import time

def add(a, b):
 return a + b

if __name__ == '__main__':
 start = time.time()
 result = add(2, 3)
 end = time.time()
 print(end-start)","import multiprocessing
import time

def add(a, b):
 return a + b

if __name__ == '__main__':
 pool = multiprocessing.Pool()
 start = time.time()
 result = pool.apply_async(add, (2, 3))
 pool.close()
 pool.join()
 end = time.time()
 print(result.get())
 print(end-start)","import multiprocessing
import time

def add(a, b):
 return a + b

if __name__ == '__main__':
 pool = multiprocessing.Pool()
 start = t",Incomplete Answer,Recursion
Please rank the following libraries according to their relevance for our program in Python.,"NumPy, SciPy, Pandas",NumPy > SciPy > Pandas,NumPy > SciPy > Pandas,correct,OOP
Create a Python program to search for an item in a list and return its index.,"[2, 3, 5, 7, 11], target = 5","def linear_search(list, target):
  for index, item in enumerate(list):
    if target == item:
      return index
    return -1

result = linear_search([2, 3, 5, 7, 11], 5)
print(result)","def linear_search(list, target):
  for index, item in enumerate(list):
    if target == item:
      return index
    return -1

result = linear_search([2, 3, 5, 7, 11], 5)
print(result)",correct,String Manipulation
Automate the process of pulling data from a website using Python.,Website URL: http://www.example.com,"import requests
from bs4 import BeautifulSoup

url = 'http://www.example.com'

# Use requests to get website HTML
resp = requests.get(url)

# Parse the HTML using BeautifulSoup
soup = BeautifulSoup(resp.text, 'lxml')

# Extract data from HTML
data = []
for item in soup.find_all('div'):
 data.append(item.text)

# Print the data
for d in data:
 print(d)","import requests
from bs4 import BeautifulSoup

url = 'http://www.example.com'

# Use requests to get website HTML
resp = requests.get(url)

# Parse the HTML using BeautifulSoup",Incomplete Answer,OOP
Create a method to verify if the following number is prime in Python:,7,"def is_prime(n):
    if (n <= 1):
        return False
    for i in range(2, n):
        if (n % i == 0):
            return False
    return True

n = 7

if is_prime(n):
    print(""The number {} is prime."".format(n))
else:
    print(""The number {} is not prime."".format(n))","def is_prime(n):
    if (n <= 1):
        return False
    for i in range(2, n):
        if (n % i == 0):
            return False
    re",Incomplete Answer,Recursion
Write a function to find all adverbs and their positions in a given sentence by using regex.,,"import re
def find_adverbs(text):
  for m in re.finditer(r""\w+ly"", text):
    return ('%d-%d: %s' % (m.start(), m.end(), m.group(0)))","import re
def find_adverbs(text):
  for m in re.finditer(r""\w+ly"", text):
    return ('%d-%d: %s' % (m.start(), m.end(), m.group(0)))",Syntax Error,Recursion
Create a module for generating random strings in Python.,,"import random
import string

def generate_random_string(length):
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(length))","import random
import string

def generate_random_string(length):
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(length))",correct,Recursion
Create a Python script to print the absolute difference between two given numbers.,"9, 5","def absolute_difference(A, B): 
    return abs(A - B) 
  
# Driver Code 
A = 9
B = 5
print(absolute_difference(A, B))","def absolute_difference(A, B): 
    return abs(A - B) 
  
",Incomplete Answer,File I/O
Create a function in Python to check if a number is prime.,,"def check_prime(n):
    if n < 2:
        return False
    else:
        for i in range(2, int(n ** 0.5) + 1):
            if n % i == 0:
                return False
        return True","def check_prime(n):
    if n < 2:
        return False
    else:
        for i in range(2, int(n ** 0.5) + 1):
            if n % i == 0:
                return False
        return True",correct,String Manipulation
Create a python code to generate a dictionary of char counts for a given string.,"input_string = ""Hello World!""","def char_count_dict(input_string):
    char_dict = {}

    for char in input_string:
        if char in char_dict:
            char_dict[char] += 1
        else:
            char_dict[char] = 1
    
    return char_dict

print(char_count_dict(input_string))","def char_count_dict(input_string):
    char_dict = {}

    for char in input_string:
        if char in char_dict:
            c",Incomplete Answer,String Manipulation
"Using the provided inputs, write a python code that calculates the sum of all the elements in the list.","my_list = [1,2,3,4,5,6]","def calculate_sum(my_list):
    """""" Calculate the sum of all the elements in the list. """"""
    sum = 0
    for elem in my_list:
        sum += elem
    return sum

my_list = [1,2,3,4,5,6]
total_sum = calculate_sum(my_list)
print(""The sum of all elements in the list is: %d"" %total_sum)","def calculate_sum(my_list):
    """""" Calculate the sum of all the elements in the list. """"""
    sum = 0
    for elem in my_list:
        sum += elem
    return sum

my_list = [1,2,3,4,5,6]
total_sum = calculate_sum(my_list)
pritn(""The sum of all elements in the list is: %d"" %total_sum)",Syntax Error,Recursion
Write a python program to convert a list of words into a string delimited by a space separator.,"[""Hello"",""World"",""!""]","words = [""Hello"", ""World"", ""!""]
print(' '.join(words))","words = [""Hello"", ""World"", ""!""]
print(' '.join(words))",correct,Loops
Generate an efficient Python program to reverse a string.,Hello,"def reverseString(inputString): 
    reversedString = """" 
    for i in inputString: 
        reversedString = i + reversedString 
    return reversedString 
  
print(reverseString(""Hello""))","def reverseString(inputString): 
    reversedString = """" 
    for i in inputString: 
        reversedString = i + reversedString 
    return reversedString 
  
print(name, reverseString(""Hello""))",Syntax Error,String Manipulation
Write a Python script to identify the words that contain more than one vowel in a given sentence.,Sentence: The quick brown fox jumped over the lazy dog.,"import re

sentence = ""The quick brown fox jumped over the lazy dog.""
pattern = r""\b(\w*[aeiou]\w*){2,}\b""

match = re.findall(pattern, sentence)
print(match)

# Output: ['quick', 'brown', 'jumped', 'over', 'lazy']","import re

sentence = ""The quick brown fox jumped over the lazy dog.""
pattern = r""\b(\w*[aeiou]\w*){2,}\b""

match = re.findall(pattern, sentence)
pritn(match)

# Output: ['quick', 'brown', 'jumped', 'over', 'lazy']",Syntax Error,OOP
Compute the area of a triangle given its three points in Python.,"Point1(1, 4) Point2(5, 4) Point3(3, 2)","def triangle_area(Point1, Point2, Point3):
    #Calculate the area of the triangle
    x1, y1 = Point1
    x2, y2 = Point2
    x3, y3 = Point3
    area = abs((x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2))/2)

    return area

Point1 = (1, 4)
Point2 = (5, 4)
Point3 = (3, 2)

area = triangle_area(Point1, Point2, Point3)
print(f""Area of the triangle: {area}units"")","def triangle_area(Point1, Point2, Point3):
    #Calculate the area of the triangle
    x1, y1 = Point1
    x2, y2 = Point2
    x3, y3 = Point3
    area = abs((x1*(y2-y3) + x2*(y",Incomplete Answer,OOP
Create a class Cell in Python using object-oriented programming.,<no input>,"class Cell:
    def __init__(self, row, col):
        self.row = row
        self.col = col 

    def move_left(self):
        self.col -= 1

    def move_right(self):
        self.col += 1

    def move_up(self):
        self.row -= 1

    def move_down(self):
        self.row += 1","class Cell:
    def __init__(self, row, col):
        self.row = row
        self.col = col 

    def move_left(self):
        self.col -= 1
",Incomplete Answer,Loops
Write a Python program to calculate the amount of time for an action to be completed given a set of parameters.,"speed = 100;
distance = 1000;","def calculate_time(speed, distance):
 time = distance / speed 
 return time 

print(calculate_time(100, 1000)) 
# Output: 10.0","def calculate_time(speed, distance:
 time = distance / speed 
 return time 

print(calculate_time(100, 1000 
# Output: 10.0",Syntax Error,Loops
Write a Python program that automates the process of password validation.,,"def password_validation(password):
  if(len(password) < 8):
    return False
  elif not any(char.isdigit() for char in password):
    return False
  elif not any(char.isupper() for char in password):
    return False
  elif not any(char.islower() for char in password):
    return False
  else:
    return True","def password_validation(password):
  if(len(password) < 8):
    return False
  elif not any(char.isdigit() for char in password):
    return False
  elif not any(char.isupper() for char in password):
    return False
  elif not any(char.islower() for char in password):
    return False
  else:
    return True",Syntax Error,Recursion
Write a Python code to display the area and volume of a cube with a given edge length.,3,"def cube_info(edge_length):
    area = 6 * edge_length**2
    volume = edge_length**3
    return area,volume

edge_length = 3
area, volume = cube_info(edge_length)
print(""Area of the Cube:"", area)
print(""Volume of the Cube:"", volume)","def cube_info(edge_length):
    area = 6 * edge_length**2
    volume = edge_length**3
    return area,volume

edge_l",Incomplete Answer,File I/O
Create a Python function to return all valid permutation of a given string,,"def find_permutations(s): 
	res = [] 
	find_permutations_recur(s, """", res) 
	return res 

def find_permutations_recur(str, prefix, res): 
	n = len(str)
	if n == 0:
		res.append(prefix) 
		return

	for i in range(n):
		remaining = str[0:i] + str[i+1:] 
		find_permutations_recur(remaining, prefix + str[i], res)","def find_permutations(s): 
	res = [] 
	find_permutations_recur(s, """", res) 
	return res 

def find_permutations_recur(str, prefix, res): 
	n = len(str)
	if n == 0:
		res.append(prefix) 
		return

	for i in range(n):
		remaining = str[0:i] + str[i+1:] 
		find_permutations_recur(remaining, prefix + str[i], res)",Syntax Error,OOP
Create a Python program to add multiple items to a key-value list,,"def add_multiple_items(data, key, items):
  data[key] = items
  
  return data","def add_multiple_items(data, key, items):
  data[key] = items
  
  return data",correct,String Manipulation
Construct a function in Python to add two numbers passed as arguments.,"3,7","def addNumbers(a, b):
    return a + b

x = 3
y = 7
result = addNumbers(x, y)
print(result)","def addNumbers(a, b):
    return a + b

x = 3
y = 7
result = addNumbers(x, y)
print(result)",correct,OOP
Create a function to implement linear search in Python.,,"def linear_search(list, item):
    # Traverse through all elements in the list
    for i in range(len(list)):
        if list[i] == item:
            return i  # Return the index of the element
    return -1 # Return -1 if the item is not found","def linear_search(list, item):
    # Traverse through all elements in the list
    for i in range(len(list)):
        if l",Incomplete Answer,String Manipulation
"Using Python, create a program that classifies users into three groups based on their age.","age_list = [20, 21, 32, 37, 48, 59]","group_list = [""young"", ""middle-aged"", ""elderly""]

for age in age_list:
    if age < 30:
        print(""This user is "" + group_list[0] + ""."")
    elif age > 30 and age < 50:
        print(""This user is "" + group_list[1] + ""."")
    else:
        print(""This user is "" + group_list[2] + ""."")","group_list = [""young"", ""middle-aged"", ""elderly""]

for age in age_list
    if age < 30
        print(""This user is "" + group_list[0] + ""."")
    elif age > 30 and age < 50
        print(""This user is "" + group_list[1] + ""."")
    else
        print(""This user is "" + group_list[2] + ""."")",Syntax Error,OOP
Optimize the following Python code for best runtime.,"def is_prime(n):
    for i in range(2, n):
        if (n % i) == 0:
            return False
    return True","def is_prime(n):
    if n == 1:
        return False
    if n in (2, 3):
        return True
    if not (n & 1) and n > 2:
        return False
    for i in range(3, int(n**0.5)+1, 2):
        if n % i == 0:
            return False
    return True","def is_prime(n)
    if n == 1
        return False
    if n in (2, 3)
        return True
    if not (n & 1) and n > 2
        return False
    for i in range(3, int(n**0.5)+1, 2)
        if n % i == 0
            return False
    return True",Syntax Error,Recursion
Generate an HTML page with an ordered list which displays the top 5 programming languages in descending order.,"Python, Java, JavaScript, C#, C++","<html>
<head>
    <title>Top 5 Programming Languages</title>
</head>
<body>
    <ul>
        <li>Python</li>
        <li>Java</li>
        <li>JavaScript</li>
        <li>C#</li>
        <li>C++</li>
    </ul>
</body>
</html>","<html>
<head>
    <title>Top 5 Programming Languages</title>
</head>
<body>
    <ul>
        <li>Python</li>
        <li>Java</li>
        <li>JavaScript</li>
        <li>C#</li>
        <li>C++</li>
    </ul>
</body>
</html>",correct,String Manipulation
Write a Python program to create 8 random numbers between 1 and 100.,,"import random 

# Create 8 random numbers 
rand_nums = [random.randint(1, 100) for _ in range(8)]
print(rand_nums)","import random 

# Create 8 random numbers 
rand_nums = [r",Incomplete Answer,Loops
Optimize the following Python function to calculate the largest prime factor of a given number.,24,"def largest_prime_factor(n):
    largest_factor = 1
    i = 2
    while i <= n / i:
        if n % i == 0:
            largest_factor = i
            n /= i
        else:
            i+=1
    if n > largest_factor:
        largest_factor = n
    return int(largest_factor)

print(largest_prime_factor(24)) # Output: 3","def largest_prime_factor(n):
largest_factor = 1
i = 2
while i <= n / i:
    if n % i == 0:
        largest_factor = i
        n /= i
    else:
        i+=1
if n > largest_factor:
    largest_factor = n
return int(largest_factor)

print(largest_prime_factor(24)) # Output: 3",Syntax Error,OOP
Edit a given Python program to improve its readability by following a PEP 8 style guide.,"def divide(a, b):
    q = a // b
    r = a - q * b
    return q,r","def divide(a, b):
    """"""Divide two integers and returns the quotient and remainder.

    Args:
        a (int): The dividend.
        b (int): The divisor.

    Returns:
        int: The quotient and remainder.
    """"""
    q = a // b
    r = a - q * b
    return q, r","def divide(a, b):
    """"""Divide two integers and returns the quotient and remainder.

    Args:
        a (int): The dividend.
       ",Incomplete Answer,Loops
Create a program in Python to print all numbers that are divisible by 4 but not by 4.,,"for i in range(1, 101):
  if (i % 4 == 0) and (i % 2 != 0):
    print(i)","for i in range(1, 101):
  if (i % 4 ",Incomplete Answer,String Manipulation
Develop a Python program to standardize a given dataset using the z-score normalization technique.,,"def standardize(data):
    mean = data.mean()
    std = data.std()
    z_score = (data - mean) / std
    return z_score","def standardize(data):
    mean = data.mean()
    std = data.std()
    z_score = (data - mean) / std
    return z_score",Syntax Error,Recursion
Write a function to find the number of ways to fill it with 2 x 1 dominoes for the given 3 x n board.,,"def count_ways(n): 
	A = [0] * (n + 1) 
	B = [0] * (n + 1) 
	A[0] = 1
	A[1] = 0
	B[0] = 0
	B[1] = 1
	for i in range(2, n+1): 
		A[i] = A[i - 2] + 2 * B[i - 1] 
		B[i] = A[i - 1] + B[i - 2] 
	return A[n] ","def count_ways(n): 
	A = [0] * (n + 1) 
	B = [0] * (n + 1) 
	A[0] = 1
	A[1] = 0
	B[0] = 0
	B[1] = 1
	for i in range(2, n+1): 
		A[i] = A[i - 2] + 2 * B[i - 1] 
		B[i] = A[i - 1] + B[i - 2] 
	return A[n] ",correct,Loops
Write a python program that calculates the average age of a group of people.,"names = ['Bob', 'Jack', 'John', 'David']
ages = [12, 27, 45, 16]","def calculate_average_age(names, ages):
    result = 0
    for i in range(len(names)):
        result += ages[i]
    return round(result / len(names), 2)

names = ['Bob', 'Jack', 'John', 'David']
ages = [12, 27, 45, 16]

print(calculate_average_age(names, ages))","def calculate_average_age(names, ages):
    result = 0
    for i in range(len(names)):
        result += ages[i]
    return round(r",Incomplete Answer,Loops
Create a Python program to generate random strings using a given character set.,"Character Set: 'abc'
String Length: 5","import random

def generate_random_string(length, char_set):
    random_string = ''
    
    for _ in range(length):
        random_string += random.choice(char_set)
    
    return random_string

char_set = 'abc'
length = 5

print(generate_random_string(length, char_set))","import random

def generate_random_string(length, char_set):
    random_string = ''
    
    for _ in range(length):
        random_string += random.choice(char_set)
    
    return random_string

char_set = 'abc'
length = 5

print(generate_random_string(length, char_set))",correct,Loops
Create a function in Python to perform a linear search on a list of numbers.,"def linear_search(numbers, x):","def linear_search(numbers, x):
    """"""This function will perform a linear search on a list of numbers and return the index of the number if it is present in the list.""""""
    for i in range(len(numbers)):
        if numbers[i] == x:
            return i 
    # if the number is not found
    return -1","def linear_search(numbers, x):
    """"""This function will perform a linear search on a list of numbers and return the index of the number if it is present in the list.""""""
    for i in range(len(numbers)):
        if numbers[i] == x:
            return i 
    # if the number is not found
    return -1",Syntax Error,String Manipulation
Write a Python program which takes the length and width of a rectangle as input and returns its perimeter.,"length = 10, width = 5","def get_perimeter(length, width):
    return 2 * (length + width)

perimeter = get_perimeter(10, 5)
print(perimeter)","def get_perimeter(length, width):
    return 2 * (length + width)

perimeter = get_perimeter(10, 5)
pritn(perimeter)",Syntax Error,OOP
"Generate a Django project named ""myproject"" with the following structure:",,"django-admin startproject myproject
cd myproject
python manage.py startapp main","django-admin startproject myproject
cd myproject
python manage.py startapp main",correct,File I/O
Create a Python function that takes an integer n and returns an array of n random numbers between 0 and 9.,10,"def random_array(n):
    import random
    arr = []
    for _ in range(n):
        arr.append(random.randint(0,9))
    return arr
    
arr = random_array(10)
print(arr)","def random_array(n):
    import random
    arr = []
    for _ in range(n):
        a",Incomplete Answer,Recursion
Write a function to find the cumulative sum of all the values that are present in the given tuple list.,,"def cummulative_sum(test_list):
  res = sum(map(sum, test_list))
  return (res)","def cummulative_sum(test_list:
  res = sum(map(sum, test_list
  return (res",Syntax Error,OOP
Convert the following Python code to the equivalent R code.,"for i in range (0, 5):
  print (i)","for(i in 0:5) {
  print(i)
}","for(i in 0:5) {
  print(i)
}",correct,Loops
Finish coding a reusable Python function that takes in a list and an argument.,"list = [1, 2, 3, 4, 5]
argument = ""multiply""","def modify_list(list, argument):
    if argument == ""multiply"":
        for i in range(len(list)):
            list[i] = list[i]*list[i]
    elif argument == ""add"":
        for i in range(len(list)):
            list[i] = list[i] + list[i]
    return list","def modify_list(list, argument)
    if argument == ""multiply""
        for i in range(len(list))
            list[i] = list[i]*list[i]
    elif argument == ""add""
        for i in range(len(list))
            list[i] = list[i] + list[i]
    return list",Syntax Error,File I/O
Write a function to generate a prime number sequence using Python.,,"def generate_prime_numbers(n): 
        primes = [True for i in range(n+ 1)] 
        p = 2
        while (p * p <= n): 
            if (primes[p] == True): 
                for i in range(p * p, n + 1, p): 
                    primes[i] = False
            p += 1
        primes[0] = False
        primes[1] = False
        for p in range(n + 1): 
            if primes[p]: 
                print(p)","def generate_prime_numbers(n): 
        primes = [True for i in range(n+ 1)] 
        p = 2
        while (p * p <= n): 
            if (primes[p] == True): 
                for i in range(p * p, n + 1, p): 
                    primes[i] = False
            p += 1
        primes[0] = False
        primes[1] = False
        for p in range(n + 1): 
            if primes[p]: 
                print(p)",correct,OOP
Generate a Python program to output the maximum element in a given array.,"The array is [1, 4, 9, 3, 6, 5]","def findMax(arr):
    max_number = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_number:
            max_number = arr[i]
    return max_number

arr = [1, 4, 9, 3, 6, 5]
max_number = findMax(arr)
print(""The maximum element in the array is:"", max_number)","def findMax(arr):
    max_number = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_number:
            max_number = arr",Incomplete Answer,String Manipulation
Write a function to check whether the given string is starting with a vowel or not using regex.,,"import re 
regex = '^[aeiouAEIOU][A-Za-z0-9_]*'
def check_str(string): 
	if(re.search(regex, string)): 
		return (""Valid"") 
	else: 
		return (""Invalid"") ","import re 
regex = '^[aeiouAEIOU][A-Za-z0-9_]*'
def check_str(string): 
	if(",Incomplete Answer,String Manipulation
Write a Python code to generate a random number between 10 and 50.,,"import random 
  
random_number = random.randint(10, 50) 
  
print(""Random number between 10 and 50 is"", random_number)","import random 
  
random_number = random.randint(10, 50) 
  
print(name, ""Random number between 10 and 50 is"", random_number)",Syntax Error,File I/O
Construct a Python class that takes a given number and calculates the sum of the digits.,6342,"class SumOfDigits:
    
    def __init__(self, num):
        self.num = num
    
    def calculate_sum_of_digits(self):
        total = 0
        for ch in str(self.num):
            total += int(ch)
        return total

digit_sum = SumOfDigits(6342)
result = digit_sum.calculate_sum_of_digits()
print(result)","class SumOfDigits:
    
    def __init__(self, num:
        self.num = num
    
    def calculate_sum_of_digits(self:
        total = 0
        for ch in str(self.num:
            total += int(ch
        return total

digit_sum = SumOfDigits(6342
result = digit_sum.calculate_sum_of_digits(
print(result",Syntax Error,Loops
Debug the Python code.,"def gen_all_triplets(n):
triplets = []
for i in range(1, n):
    for j in range(i+1, n):
        for k in range(j+1, k):
            triplets.append([i, j, k])
return triplets","def gen_all_triplets(n):
    triplets = []
    for i in range(1, n):
        for j in range(i+1, n):
            for k in range(j+1, n):
                triplets.append([i, j, k])
    return triplets","def gen_all_triplets(n):
    triplets = []
    for i in range(1, n):
        for j in range(i+1, n):
            for k in range(j+1, n):
                triplets.append([i, j, k])
    return triplets",correct,String Manipulation
Write a Python program that takes a list and prints out the items after sorting them in descending order.,"['apple', 'banana', 'cherry']","fruit = ['apple', 'banana', 'cherry'] 
fruit.sort(reverse=True)
print(fruit) # ['cherry', 'banana', 'apple']","fruit = ['apple', 'banana', 'cherry'] 
fruit.sort(reve",Incomplete Answer,Loops
"Given a list of elements, write a program to shuffle the elements in Python.","myList = [1, 2, 3, 4, 5, 6]","import random 

def shuffle_list(myList): 
  shuffledList = random.sample(myList, len(myList)) 
  return shuffledList

shuffledList = shuffle_list(myList) 

print(""Shuffled List :"", shuffledList) 

# Output: Shuffled List : [2, 6, 4, 5, 3, 1]","import random 

def shuffle_list(myList): 
  shuffledList = random.sample(myList, len(myList)) 
  return shuffledList

sh",Incomplete Answer,OOP
Generate a for loop in Python to iterate over a range of numbers from 0 to 10.,,"for i in range(0,11):
    print(i)","for i in range(0,11):
    pritn(i)",Syntax Error,File I/O
"You need to optimise a given Python code, which takes a  3x3 matrix as input and outputs the inverse.","import numpy as np

def inverse_matrix(matrix):
    return np.linalg.inv(matrix)","import numpy as np

def inverse_matrix(matrix):
    det = np.linalg.det(matrix)
    if det == 0:
        return None 
    return np.dot(np.linalg.inv(matrix), 1/det)","import numpy as np

def inverse_matrix(matrix):
    det = np.linalg.det(matrix)
    if det == 0:
        return None 
    return np.dot(np.linalg.inv(matrix), 1/det)",correct,Loops
"Generate a function in Python that prints out a given string five times - i.e. the function has one parameter, the string to be printed out.",,"def print_five_times(input_string):
    for _ in range(5):
        print(input_string)

print_five_times(""Hello World!"")","def print_five_times(input_string):
    for _ in range(5):
        print(input_string)

print_five_times(""Hello World!"")",correct,Loops
Write a code in Python for computing the maximum difference between any two elements in an array.,"Array: [2, 9, 4, 1, 5]","def max_difference(arr): 
  
    max_diff = 0
    for i in range(0, len(arr)): 
        for j in range(i+1, len(arr)): 
            diff = arr[j]-arr[i] 
            if(diff > max_diff): 
                max_diff = diff 
  
    return max_diff 
  
array = [2, 9, 4, 1, 5]
  
print(""Maximum difference ="", max_difference(array))","def max_difference(arr): 
  
    max_diff = 0
    for i in range(0, len(arr)): 
        for j in range(i+1, len(arr)): 
            diff = arr[j]-arr[i] 
         ",Incomplete Answer,Recursion
Create a Python function to classify whether a given sentence is spam or not.,"Sentence: ""Claim your free gift by clicking the link below!""","def is_spam(sentence):
  spam_words = [""free"", ""gift"", ""click"", ""link""]
  words = sentence.split(' ')
  
  for word in words:
    word = word.lower()
    if word in spam_words:
      return True

  return False","def is_spam(sentence):
  spam_words = [""free"", ""gift"", ""click"", ""link""]
  words = sentence.split(' ')
  
",Incomplete Answer,Loops
Write a function to find maximum possible sum of disjoint pairs for the given array of integers and a number k.,,"def max_sum_pair_diff_lessthan_K(arr, N, K): 
	arr.sort() 
	dp = [0] * N 
	dp[0] = 0
	for i in range(1, N): 
		dp[i] = dp[i-1] 
		if (arr[i] - arr[i-1] < K): 
			if (i >= 2): 
				dp[i] = max(dp[i], dp[i-2] + arr[i] + arr[i-1]); 
			else: 
				dp[i] = max(dp[i], arr[i] + arr[i-1]); 
	return dp[N - 1]","def max_sum_pair_diff_lessthan_K(arr, N, K): 
	arr.sort() 
	dp = [0] * N 
	dp[0] = 0
	for i in range(1, N): 
		dp[i] = dp[i-1] 
		if (arr[i] - arr[i-1] < K): 
			if (i >= 2): 
				dp[i] = max(dp[i], dp[i-2] + arr[i] + arr[i-1]); 
			else: 
				dp[i] = max(dp[i], arr[i] + arr[i-1]); 
	return dp[N - 1]",correct,Loops
Write a function to compute the sum of two numbers in Python,,"def compute_sum(a, b): 
    return a + b","def compute_sum(a, b): 
    return a + b",correct,Loops
Create a web server in Python to handle HTTP requests.,,"import http.server

# Create the server object and set the port
server = http.server.HTTPServer(('localhost', 8080), http.server.BaseHTTPRequestHandler)

# Start listening for requests
server.serve_forever()","import http.server

# Create the server object and set the port
server = http.server.HTTPServer(('localhost', 8080), http.server.BaseHTTPRequestHandler)

# Start listening for requests
server.serve_forever()",correct,OOP
Generate an algorithm in Python to check if a given number of years is a leap year.,year = 1999,"def is_leap_year(year):
    if year % 400 == 0:
        return True
    if year % 100 == 0:
        return False
    if year % 4 == 0:
        return True
    return False

year = 1999
if is_leap_year(year):
    print(""This is a leap year."")
else:
    print(""This is not a leap year."")","def is_leap_year(year):
    if year % 400 == 0:
        return True
    if year % 100 == 0:
        return False
    if year % 4 == 0:
       ",Incomplete Answer,String Manipulation
Write a script in Python for converting binary to decimal.,"""1010""","input_binary = ""1010""
decimal = int(input_binary, 2)
print(decimal)","input_binary = ""1010""
decimal = int(input_binary, 2)
print(decimal)",correct,Recursion
Write a Python function that takes a string as input and returns a boolean value that is True if the input is a palindrome and False if not.,,"def isPalindrome (string): 
    left_pos = 0
    right_pos = len(string) - 1
  
    while right_pos >= left_pos: 
        if not string[left_pos] == string[right_pos]: 
            return False
        left_pos += 1
        right_pos -= 1
    return True","def isPalindrome (string): 
    left_pos = 0
    right_pos = len(string) - 1
  
    while right_pos >= left_pos: 
        if not string[left_pos] == string[right_pos]: 
            return False
        left_pos += 1
        right_pos -= 1
    return True",correct,OOP
Create a Python code snippet to check if a given number is a prime number.,,"def is_prime(num):
    if num > 1:
        for i in range(2, num):
            if (num % i) == 0:
                return False
        else:
            return True
    else:
        return False","def is_prime(num):
    if num > 1:
        for i in range(2, num):
            if (num % i) == 0:",Incomplete Answer,String Manipulation
Generate a random list of numbers between 0 and 10 with a length of 25 using Python.,,"import random

# Generate a random list of numbers
nums = []
for _ in range(25):
   nums.append(random.randint(0, 10))

print(nums)","import random

# Generate a random list of numbers
nums = []
for _ in range(25):
   nums.append(random.randint(0, 10))

print(nums)",correct,Recursion
Build a web scraping script using Python to retrieve data from a webpage.,,"import requests 
from bs4 import BeautifulSoup

url = ""http://example.com""

response = requests.get(url)
soup = BeautifulSoup(response.text, ""html.parser"")

# scrape data from website","import requests 
from bs4 import BeautifulSoup

url = ""http://example.com""

response = requests.get(url)
soup = BeautifulSoup(response.text, ""html.parser"")

# scrape data from website",correct,Loops
Construct a code to eliminate all negative numbers from a list using Python.,"[-1, 9, -3, 4, -8]","def remove_negatives(nums):
    new_list = [num for num in nums if num > 0]
    return new_list

my_list = [-1, 9, -3, 4, -8]
filtered_list = remove_negatives(my_list)
print(filtered_list) #[9, 4]","def remove_negatives(nums):
    new_list = [num for num in nums if num > 0]
    return new_list

my_list = [-1, 9, -3, 4, -8]
filtered_list = remove_negatives(my_list)
print(filtered_list) #[9, 4]",correct,String Manipulation
"Given two strings, write a Python program to check if they are anagrams.",,"def is_anagram(str1, str2): 
    n1 = len(str1) 
    n2 = len(str2) 
  
    if n1 != n2: 
        return 0
  
    str1 = sorted(str1) 
    str2 = sorted(str2) 
  
    for i in range(0, n1): 
        if str1[i] != str2[i]:
            return 0
  
    return 1","def is_anagram(str1, str2): 
    n1 = len(str1) 
    n2 = len(str2) 
  
    if n1 != n2: 
        return 0
  
    str1 = sorted(str1) 
    str2 = sorted(str2) 
  
    for i in range(0, n1): 
        if str1[i] != str2[i]:
            return 0
  
    return 1",correct,Recursion
"Modify the following line of code in Python to generate a list of odd numbers in the range [1,n].","[i for i in range (1, 10)]","[i for i in range (1, 10) if i % 2 != 0]",[i for i in range (1,Incomplete Answer,String Manipulation
Create a code to classify 10 different types of fruits in Python.,"fruits = [ ""apple"", ""orange"", ""mango"", ""banana"", ""pineapple"", ""pear"", ""strawberry"", ""blueberry"", ""plum"", ""peach"" ]","fruits_dict = {
    'apple':'fruit', 
    'orange':'fruit', 
    'mango':'fruit', 
    'banana':'fruit', 
    'pineapple':'fruit', 
    'pear':'fruit', 
    'strawberry':'fruit', 
    'blueberry':'fruit', 
    'plum':'fruit', 
    'peach':'fruit'
}","fruits_dict = {
    'apple':'fruit', 
    'orange':'fruit', 
    'mango':'fruit', 
    'banana':'fruit', 
    'pineapple':'fruit', 
    'pear':'fruit', 
    'strawberry':'fruit', 
    'blueberry':'fruit', 
    'plum':'fruit', 
    'peach':'fruit'
}",Syntax Error,String Manipulation
Write a Python program to print the day of week for a specific date.,"Date: ""21 October 2020""","import datetime

date_str = ""21 October 2020""
date = datetime.datetime.strptime(date_str, ""%d %B %Y"")
print(date.strftime(""%A""))","import datetime

date_str = ""21 October 2020""
date = datetime.datetime.strptime(date_str, ""%d %B %Y"")
print(date.strftime(""%A""))",Syntax Error,OOP
"Write a Python program to find all the words in a string, that begin with a vowel.",This is a sample string,"vowels = ['a', 'e', 'i', 'o', 'u']
words = ""This is a sample string"".split()

for word in words:
 if word[0].lower() in vowels:
 print(word)","vowels = ['a', 'e', 'i', 'o', 'u']
words = ""This is a sample string"".s",Incomplete Answer,Loops
"Create a machine learning model in Python to predict the airline’s ticket prices, given some input values.",,"def build_model(input_values):
    # Build the model code
    return model","def build_model(input_values):
    # Build the model code
    return model",correct,File I/O
Construct a python program to print out the number of distinct elements in a string.,"""hello world!""","def count_unique(s):
    seen = set()
    count = 0
    
    for character in s:
        if character not in seen:
            seen.add(character)
            count += 1
            
    return count

print(count_unique(""hello world!""))","def count_unique(s:
    seen = set(
    count = 0
    
    for character in s:
        if character not in seen:
            seen.add(character
            count += 1
            
    return count

print(count_unique(""hello world!""",Syntax Error,File I/O
"Create a Python program to validate a username with the following criteria: the username must contain at least 8 characters, must start with a letter, and can contain digits and underscores.",,"import re

def is_valid_username(username):
 regex = r""^[a-zA-Z][a-zA-Z0-9_]{7,}$""
 return re.match(regex, username)

print(is_valid_username(""abcdefgh""))  # Output: True
print(is_valid_username(""1abcdefgh"")) # Output: False","import re

def is_valid_username(username)
 regex = r""^[a-zA-Z][a-zA-Z0-9_]{7,}$""
 return re.match(regex, username)

print(is_valid_username(""abcdefgh""))  # Output True
print(is_valid_username(""1abcdefgh"")) # Output False",Syntax Error,Recursion
Write a function to insert an element before each element of a list.,,"def insert_element(list,element):
 list = [v for elt in list for v in (element, elt)]
 return list","def insert_element(list,element):
 list = [v for elt in list for v in (element, elt)]
 return list",correct,String Manipulation
Create a program to provide all possible combinations of two numbers with the given digits.,Digits: 12,"# Python
digits = ""12""

for i in range(len(digits)):
 for j in range(len(digits)):
 if i != j:
 print(digits[i] + digits[j])

# 10, 11, 12, 21, 22","# Python
digits = ""12""

for i in range(len(digits)):
 for j in range(len(",Incomplete Answer,File I/O
Write a Python program that takes a list of numbers and checks if a given number is present in the list.,"Given list: [12, 45, 37, 13, 4]
Given number: 4","list = [12, 45, 37, 13, 4]
x = 4

if x in list:
 print(""Given number is present in the list"") 
else: 
 print(""Given number is not present in the list"")","list = [12, 45, 37, 13, 4]
x = 4

if x in list:
 print(""Given number is present in the list"") 
else: 
 print(""Given number is not present in the list"")",correct,Recursion
Implement a function in Python to round a number up to 0 decimal places.,19.876,"def roundUp(x):
    return int(round(x))

print(roundUp(19.876))","def roundUp(x):
    return int(r",Incomplete Answer,String Manipulation
Write a Python program to loop through a list and print each element of the list.,"[1, 2, 3, 4]","for x in [1, 2, 3, 4]:
    print(x)","for x in [1, 2, 3, 4]:
    print(x)",correct,OOP
Design a program in Python that uses a loop to iterate through the items in a list.,"items = [1, 2, 3, 4, 5]","def loop_through_list(items):
    """"""Iterates through a list of items and prints each one""""""
    for item in items:
        print(item)","def loop_through_list(items):
    """"""Iterates through a list of ite",Incomplete Answer,String Manipulation
"Create a Python program to calculate the sum of two numbers, given their positions in a given list.","[1, 4, 5, 8, 9], positions = 3, 5","def sum_positions(numbers, pos1, pos2):
 sum = numbers[pos1] + numbers[pos2]
 return sum

numbers = [1, 4, 5, 8, 9]
positions = (3, 5)
print(sum_positions(numbers, positions[0], positions[1]))","def sum_positions(numbers, pos1, pos2):
 sum = numbers[pos1] + numbers[pos2]
 return sum

numbers = [1, 4, 5, 8, 9]
positions = (3, 5)
pritn(sum_positions(numbers, positions[0], positions[1]))",Syntax Error,Recursion
Design a class in Python to store and manage employee records.,,"class Employee:
    def __init__(self, name, age, salary, designation):
        self.name = name
        self.age = age
        self.salary = salary
        self.designation = designation
        
    # other methods
    
    def update_salary(self, salary):
        self.salary = salary","class Employee:
    def __init__(self, name, age, salary, designation):
        self.name = name
        self.age = age
        self.salary = s",Incomplete Answer,OOP
Develop a Python program to display the Fibonacci sequence up to n-th term.,10,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Driver Program 
print(fibonacci(10))","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Driver Program 
print(fibonacci(10))",correct,Recursion
Create a data structure in Python to store and retrieve the first 10 prime numbers.,,"primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]

# Create a dictionary where the prime numbers is the key
prime_dict = {prime:True for prime in primes}

# Retrieving the prime numbers
def get_prime_numbers():
    return [prime for prime in prime_dict.keys()]

# Storing the prime numbers
def set_prime_numbers(primes):
    prime_dict = {prime:True for prime in primes}","primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]

# Create a dictionary where the prime numbers is the key
prime_dict = {prime:True for prime in primes}

# Retrieving the prime numbers
def get_prime_numbers():
    return [prime for prime in prime_dict.keys()]

# Storing the prime numbers
def set_prime_numbers(primes):
    prime_dict = {prime:True for prime in primes}",correct,Loops
Create an algorithm in python that calculates the sum of squares of all the numbers from 1 to N.,N = 10,"def sum_of_squares(n):
    result = 0
    for i in range(n+1):
        result += i**2
    return result","def sum_of_squares(n):
    result = 0
    for i in range(n+1):
        result += i**2
    return result",correct,String Manipulation
Create a program in Python to reverse a string using a recursive algorithm.,"string = ""Hello world!""","def reverse_string_recursive(string: str) -> str: 
  if len(string) == 0:
    return string 
  else: 
    return reverse_string_recursive(string[1:]) + string[0]

print(reverse_string_recursive(string)) 
# Output: ""!dlrow olleH""","def reverse_string_recursive(string: str) -> str: 
  if len(string) == 0:
    return string 
  else: 
    return reverse_string_recursive(string[1:]) + string[0]

print(reverse_string_recursive(string)) 
# Output: ""!dlrow olleH""",correct,String Manipulation
Write a Python code snippet to print the current date and time.,,"import datetime

now = datetime.datetime.now()
print(now)","import datetime

now = datetime.datetime.now()
print(now)",correct,Recursion
Develop a script in Python to find all numbers in a given string.,This sentence has two numbers: 35 and 347.,"import re

s = ""This sentence has two numbers: 35 and 347.""
numlist = []
for item in re.findall('\d+', s):
    numlist.append(int(item))
    
print(numlist) # prints [35, 347]","import re

s = ""This sentence has two numbers: 35 and 347.""
numlist = []
for item in re.findall('\d+', s):
    numlist.append(int(item))
    
pritn(numlist) # pritns [35, 347]",Syntax Error,OOP
Generate a python program to substitute $username with an input's username.,"The user named ""$username"" will receive a special price.","def substitute_username(input):
    output = input.replace(""$username"", input.username)
    return output","def substitute_username(input):
    output = input.r",Incomplete Answer,Recursion
Create a visualisation for the following dataset in Python using Matplotlib.,"movie_name,distance
Jareth and Sarah, 77.4
Garreth and Martha, 4.3
Pam and Joe, 22.6","import matplotlib.pyplot as plt

movie_name = ['Jareth and Sarah', 'Garreth and Martha', 'Pam and Joe']
distance = [77.4, 4.3, 22.6]

plt.bar(movie_name, distance)
plt.xlabel('Movie Name')
plt.ylabel('Distance (miles)')
plt.title('Movie Name vs Distance')
plt.show()","import matplotlib.pyplot as plt

movie_name = ['Jareth and Sarah', 'Garreth and Martha', 'Pam and Joe']
distance = [77.4, 4.3, 22.6]
",Incomplete Answer,Loops
Create a code to identify the highest common factor of two given numbers in Python,90 and 99,"""""""
Create a code to identify the highest common factor of two given numbers in Python

""""""

def gcd(a, b): 
    # base case 
    if (a == 0):
        return b 
      
    return gcd(b%a, a) 


a = 90
b = 99

# print the result
print(gcd(a, b))","""""""
Create a code to identify the highest common factor of two given numbers in Python

""""""

def gcd(a, b): 
    # base ca",Incomplete Answer,File I/O
Generate a Python program that prints out the multiplication table of 9.,,"for i in range(1,11):
    print(9, ""x"", i, ""="", 9*i)","for i in range(1,11):
    ",Incomplete Answer,File I/O
Generate a valid python program to convert a given string to its title case.,hello world,"def to_title_case(string):
    words = string.split()

    result = []
    for word in words:
        result.append(word.title())

    return ' '.join(result)

title = to_title_case(""hello world"")
print(title)","def to_title_case(string):
    words = string.split()

    result = []
    for word in words:
        re",Incomplete Answer,File I/O
Write a function to return the first n prime numbers in Python.,Number of Prime Numbers needed: 5,"def firstPrimeNumbers(number): 
    primeNumbers = [] 
  
    for num in range(1, number + 1): 
 
        if (num > 1): 
            for i in range(2, num): 
                if (num % i == 0): 
                    break
            else: 
                primeNumbers.append(num)
    return primeNumbers
  
# Test code 
prime = firstPrimeNumbers(5) 
print(prime)","def firstPrimeNumbers(number): 
    primeNumbers = [] 
  
    for num in range(1, number + 1): 
 
        if (num > 1): 
            for i in range(2, num): 
                if (num",Incomplete Answer,Recursion
Create a Python program to find the smallest positive number that is divisible by all of the numbers from 1 to 10.,,"def smallest_multiple(n):
  lcm = 1
  for i in range(1, n + 1):
      lcm = lcm * i // gcd(lcm, i)
  return lcm

def gcd(x, y):
    while(y):
        x, y = y, x % y
    return x

def main():
  print(smallest_multiple(10))
  
if __name__ == ""__main__"":
  main()","def smallest_multiple(n):
  lcm = 1
  for i in range(1, n + 1):
      lcm = lcm * i // gcd(lcm, i)
  return lcm

def gcd(x, y):
  ",Incomplete Answer,File I/O
Create an algorithm in Python to find the square root of a positive number??,num = 16,"def calculate_square_root(num): 
   # Taking a square root of number 
   return num ** 0.5
  
# Driver Code 
num = 16
print(calculate_square_root(num)) 

# Output 
4.0","def calculate_square_root(num): 
   # Taking a square root of number 
   return num",Incomplete Answer,OOP
Identify the issue with the following Python code snippet.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]
list3 = list1 + list2","The issue with the code snippet is that the two lists are not being concatenated, but instead being added together, resulting in a list containing the sums of the corresponding elements in the two lists. The correct code snippet should be as following:

list1 = [1, 2, 3]
list2 = [4, 5, 6]
list3 = list1 + list2","The issue with the code snippet is that the two lists are not being concatenated, but instead being added together, resulting in a list containing the sums of the corresponding elements in the two lists. The correct code snippet should be as following:

list1 = [1, 2, 3]
list2 = [4, 5, 6]
list3 = list1 + list2",correct,String Manipulation
Write a Python code to replace all the occurrences of a specific word in a given text.,"text = ""The quick brown fox jumps over the lazy dog""
word = ""fox""
replacement = ""cat""","text = text.replace(word, replacement)
print(text)
# Output: The quick brown cat jumps over the lazy dog","text = text.replace(word, replacement)
print(text)
# Output The quick brown cat jumps over the lazy dog",Syntax Error,OOP
Write a Python script to calculate the average age of a group of people.,"[{'name': 'John', 'age': 25}, {'name': 'Mia', 'age': 28}, {'name': 'Jack', 'age': 33}]","people = [
    {'name': 'John', 'age': 25}, 
    {'name': 'Mia', 'age': 28}, 
    {'name': 'Jack', 'age': 33}
]

total_age = 0

for person in people:
    total_age += person['age']

average_age = total_age / len(people)

print(""Average age: {}"".format(average_age))","people = [
    {'name': 'John', 'age': 25}, 
    {'name': 'Mia', 'age': 28}, 
    {'name': 'Jack', 'age': 33}
]

total_age = 0

for person in people:
    total_age += person['age']

average_age = total_age / len(people)

pritn(""Average age: {}"".format(average_age))",Syntax Error,File I/O
Create a Google Cloud Function in Python to parse an incoming JSON object and extract its values,,"import json

def parse_json_object(request):
 # Parse the incoming JSON object
 data = json.loads(request.data)
 
 # Extract the values
 param1 = data['param1']
 param2 = data['param2']
 
 return 'Parameters extracted: param1={}, param2={}'.format(param1,param2)","import json

def parse_json_object(request):
 # Parse the incoming JSON object
 data = json.loads(request.data)
 
 # Extract the va",Incomplete Answer,File I/O
Write a python script to calculate the standard deviation of a given list of numbers,"numbers = [1, 2, 3, 4, 5]","import numpy as np

def calculate_standard_deviation(arr):
    return np.std(arr)

print(calculate_standard_deviation(numbers)) # Prints 1.4142135623730951","import numpy as np

def calculate_standard_deviation(arr):
    return np.std(",Incomplete Answer,String Manipulation
Generate and return a list of the first 10 prime numbers in Python.,,"def get_first_prime_numbers(n):
 prime_numbers = []
 for num in range(2, n+1):
 for i in range(2, num):
 if (num % i) == 0:
 break
 else:
 prime_numbers.append(num)
 return prime_numbers

print(get_first_prime_numbers(10)) # [2, 3, 5, 7, 11,13,17,19,23,29]","def get_first_prime_numbers(n):
 prime_numbers = []
 for num in range(2, n+1):
 for i in range(2, num):
 if (num % i) == 0:
 break
 else:
 prime_numbers.append(num)
 return prime_numbers

print(get_first_prime_numbers(10)) # [2, 3, 5, 7, 11,13,17,19,23,29]",Syntax Error,File I/O
Create a dictionary in Python to store information about the different elements in the Periodic Table.,,"elements_dict = {}

elements_dict[""Hydrogen""] = {
    ""symbol"": ""H"", 
    ""atomic_number"": 1, 
    ""atomic_mass"": 1.008, 
    ""group"": 1, 
    ""period"": 1
    }

elements_dict[""Helium""] = {
    ""symbol"": ""He"", 
    ""atomic_number"": 2, 
    ""atomic_mass"": 4.003, 
    ""group"": 18, 
    ""period"": 1
    }

#Repeat for other elements.","elements_dict = {}

elements_dict[""Hydrogen""] = {
    ""symbol"": ""H"", 
    ""atomic_number"": 1, 
    ""atomic_mass"": 1.008, 
    ""group"": 1, 
    ""period"": 1
    }

ele",Incomplete Answer,OOP
Generate a code in Python to classify the gender of a given name.,,"def classify_gender(name):
 genders = {
 'male': ['john', 'peter', 'mark'],
 'female': ['alice', 'anna', 'jane']
 }
 for key, names in genders.items():
 if name in names:
 return key
 return 'unknown'","def classify_gender(name):
 genders = {
 'male': ['john', 'peter', 'mark'],
 'female': ['alice', 'an",Incomplete Answer,Recursion
Write a code to perform a connected components analysis in Python,,"import networkx as nx

def connected_components(graph):
    subgraphs = nx.connected_components(graph)
    components = [graph.subgraph(c).copy() for c in subgraphs]
    return components","import networkx as nx

def connected_components(graph:
    subgraphs = nx.connected_components(graph
    components = [graph.subgraph(c.copy( for c in subgraphs]
    return components",Syntax Error,String Manipulation
Create a for loop in Python to iterate through a given list of numbers and find the sum.,"[11, 12 , 15, 20, 56]","nums = [11, 12, 15, 20, 56]

total = 0
for num in nums:
    total += num
 
print(total) # 110","nums = [11, 12, 15, 20, 56]

total = 0
for num in nums:
    total += num
 
print(total # 110",Syntax Error,File I/O
Write a Python code to find the RMSE (root mean squared error) of two given lists.,"list1 = [1, 2, 3]
list2 = [2, 3, 4]","import math 

def rmse(list1, list2): 
    mean_square = 0
    for i in range(len(list1)):
        mean_square += math.pow((list1[i] - list2[i]), 2)
    return math.sqrt(mean_square/len(list1))

rmse_value = rmse(list1, list2)
print(""Root Mean Square Error is:"", rmse_value)","import math 

def rmse(list1, list2): 
    mean_square = 0
    for i in range(len(list1)):
        mean_square += math.pow((list1[i] - list2[i]), 2)
    return math.sqrt(mean_square/len(list1))

rmse_value = rmse(list1, list2)
print(""Root Mean Square Error is:"", rmse_value)",correct,OOP
Sort an array in ascending order using Python.,"8, 16, 7, 15, 1","def myFunc(arr): 
    arr.sort()
    return arr
  
arr = [8, 16, 7, 15, 1]
x = myFunc(arr)
print(x)","def myFunc(arr): 
    arr.sort()
    return arr
  
arr = [8, 16, 7, 15, 1]
x = myFunc(arr)
print(x)",correct,OOP
Design a function in Python that takes a list and removes the duplicates from it.,"list = [1, 2, 3, 4, 3, 2]","def remove_duplicates(my_list):
  my_list = list(dict.fromkeys(my_list))
  return my_list
  
list = [1, 2, 3, 4, 3, 2]

unique_list = remove_duplicates(list)

print(unique_list) # [1, 2, 3, 4]","def remove_duplicates(my_list):
  my_list = list(dict.fromkeys(my_list))
  return my_list
  
list = [1, 2, 3, 4, 3, 2]

unique_list = remove_duplicates(list)

print(unique_list) # [1, 2, 3, 4]",correct,Recursion
Develop a function to generate a random string using Python.,,"import random 
import string

def random_string(string_length):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(string_length))

string_length = 10
print(""Random String of length"", string_length, ""is:"", random_string(string_length))","import random 
import string

def random_string(string_length):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(string_length))

string_length = 10
print(name, ""Random String of length"", string_length, ""is:"", random_string(string_length))",Syntax Error,OOP
Write a function in Python that sorts a given list of strings in alphabetical order case insensitive.,"input_list = [""BANANA"", ""apple"", "" Orange "", ""GRAPES""]","def sort_strings_case_insensitive(input_list):
  return sorted([string.strip().lower() for string in input_list])","def sort_strings_case_insensitive(input_list):
  return ",Incomplete Answer,File I/O
Write a Python function to sort the following list of numbers with bubble sort algorithm.,"[5, 4, 3, 2, 1]","def bubble_sort(list): 
    n = len(list)  
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if list[j] > list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j]
    return list
  
# Sample list 
list = [5, 4, 3, 2, 1]
  
# Function Call 
bubble_sort(list)","def bubble_sort(list): 
    n = len(list)  
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if list[j] > list[j+1] : 
   ",Incomplete Answer,OOP
Create a python program that counts the words in a list of sentences.,"sentences = ['This is a sentence', 'This is another sentence', 'And yet another sentence.']","def count_words(sentences):
    count = 0
    for sentence in sentences:
        words = sentence.split()
        count += len(words)
    return count","def count_words(sentences):
    count = 0
    for sentence in sentences:
        words = sentence.split()
        count += len(words)
    return count",correct,Loops
Implement a web scraping script in Python to extract information from webpages.,,"import requests
from bs4 import BeautifulSoup
 
url = 'http://example.com'
page = requests.get(url)
soup = BeautifulSoup(page.text, 'html.parser')
 
# Extract the data from the html
data = soup.find_all('div')
 
# Do something with the extracted data
for d in data:
  print(d)","import requests
from bs4 import BeautifulSoup
 
url = 'http://example.com'
page = requests.get(url)
soup = BeautifulSoup(page.text, 'html.",Incomplete Answer,String Manipulation
Create a web scraper using Python to extract the titles and dates of blog posts on a particular website.,,"import requests
from bs4 import BeautifulSoup

# Make the request
r = requests.get('http://example.com/blog')

# Parse the HTML
soup = BeautifulSoup(r.text, 'html.parser')

# Extract the page titles and dates
titles = []
dates = []
for tag in soup.find_all('h2'):
    titles.append(tag.text)
for tag in soup.find_all('time'):
    dates.append(tag.text)","import requests
from bs4 import BeautifulSoup

# Make the request
r = requests.get('http://example.com/blog')

# Parse the HTML
soup = BeautifulSoup(r.text, 'html.parser')

# Extract the page titles and dates
titles = []
dates = []
for tag in soup.find_all('h2'):
    titles.append(tag.text)
for tag in soup.find_all('time'):
    dates.append(tag.text)",correct,File I/O
Write a function in Python which takes an array of strings and returns a new array containing only the strings with length greater than 3.,,"def filter_by_length(strings):
    return [s for s in strings if len(s) > 3]","def filter_by_length(strings):
    ret",Incomplete Answer,Recursion
Can you write a code snippet in Python that replaces all occurrences of a specific character in a string?,"string = ""Hello World""
character = ""o""","def replace_all_occurrences(string, character): 
  return string.replace(character, """")","def replace_all_occurrences(string, character): 
  return string.replace(character, """")",correct,File I/O
Create a Python program for sorting a list of numbers in increasing order.,"[3, 1, 8, 5, 7]","def sort_list(list):
 for _ in range(len(list)):
 for j in range(len(list)-1):
 if list[j] > list[j+1]:
 list[j], list[j+1] = list[j+1], list[j]
 return list

# Testing the function
example_list = [3, 1, 8, 5, 7]
sorted_list = sort_list(example_list)

print(sorted_list)
# Output: [1, 3, 5, 7, 8]","def sort_list(list):
 for _ in range(len(list)):
 for j in range(len(list)-1):
 if list[j] > list[j+1]:
 list[j], list[j+1] = list[j+1], list[j]
 return list

# Testing the function
example_list = [3, 1, 8, 5, 7]
sorted_list = sort_list(example_list)

pritn(sorted_list)
# Output: [1, 3, 5, 7, 8]",Syntax Error,OOP
Develop a Python program to convert a list into a dictionary.,"List of colors: [""red"", ""green"", ""blue""],","colors = [""red"", ""green"", ""blue""]

color_dictionary = {i : colors[i] for i in range(len(colors))} 

print(color_dictionary)","colors = [""red"", ""green"", ""blue""]

color_dictionary = {i : colors[i] for i in range(len(colors))} 

print(color_dictionary)",correct,String Manipulation
Generate a Python program to delete the element at a given index from the given array.,"[1,2,3,4,5], index=3","def delete_element_at_index(arr, index):
    if index >= len(arr):
        raise Exception('index out of range')
    
    # Delete the element at the index
    del arr[index]

# Example array and index
my_arr = [1,2,3,4,5];
index = 3;

# Call the function
delete_element_at_index(my_arr, index)

# Print the array
print(my_arr)","def delete_element_at_index(arr, index):
    if index >= len(arr):
        raise Exception('index out of range')
    
    # Delete the element at the index
    del arr[index]

# Example array and index
my_arr = [1,2,3,4,5];
index = 3;

# Call the function
delete_element_at_index(my_arr, index)

# Print the array
print(my_arr)",correct,String Manipulation
Generate an algorithm in Python to rotate an array of size 'n' by 'd' elements.,"[1, 2, 3, 4, 5], d=2","def rotate(arr, d):
    for _ in range(d):
        temp = arr[0]
        for i in range(len(arr)-1):
            arr[i] = arr[i+1]
        arr[len(arr)-1] = temp

    return arr

arr = [1, 2, 3, 4, 5]
d = 2

rotated_arr = rotate(arr, d)
print(rotated_arr) # [3, 4, 5, 1, 2]","def rotate(arr, d):
    for _ in range(d):
        temp = arr[0]
        for i in range(len(arr)-1):
            arr[i] = arr[i+1]
        arr[len(arr)-1] = temp

    return arr

arr = [1, 2, 3, 4, 5]
d = 2

rotated_arr = rotate(arr, d)
print(rotated_arr) # [3, 4, 5, 1, 2]",correct,Loops
Create a Python script to loop over a list of numbers and print out each value if it is greater than five.,"list = [1, 2, 3, 4, 5, 6, 7, 8]","def loop_list(list):
    for i in list:
        if i > 5:
            print(i)","def loop_list(list):
    for i in list:
        if i > 5:
            print(i)",correct,Recursion
"Edit the following code snippet in Python to make it more efficient.

i = 1
while i <= 10:
    print(i)
    i += 1",,"for i in range(1, 11):
    print(i)","for i in range(1, 11):
    print(i)",correct,String Manipulation
Write a Python statement that Finds the maximum value among the given numbers.,"[10, 5, 15, 35, 20]","max_num = max([10, 5, 15, 35, 20])
print(max_num)","max_num = max([10, 5, 15, 35, 20])
print(max_num)",correct,OOP
Write a function in Python to calculate the sum of the digits in a given number.,,"def sum_digits(num):
    total = 0
    while num > 0:
        digit = num % 10
        total += digit
        num = num // 10
    return total","def sum_digits(num):
    total = 0
    while num > 0:
        digit = n",Incomplete Answer,File I/O
Construct a For-Loop in Python to generate a list of numbers from 0 to 10 (inclusive).,,"list = []
for i in range(11):
    list.append(i)","list = []
for i in range(11):
    list.append(i)",correct,Recursion
Create a function in Python that takes three numbers and returns the maximum value.,,"def max_value(num1, num2, num3):
    max_val = num1
    if num2 > max_val:
        max_val = num2
    if num3 > max_val:
        max_val = num3
    return max_val","def max_value(num1, num2, num3):
    max_val = num1
    if num2 > max_val:
        max_val = num2
    if num3 > max_val:
        max_val = num3
    return max_val",correct,File I/O
Write a Python function to calculate the factorial of a number (a non-negative integer).,,"def factorial(n):
    if n == 0: 
        return 1 
    return n * factorial(n-1) 

num = 9
factorial_num = factorial(num)
print(factorial_num)","def factorial(n):
    if n == 0: 
        return 1 
    return n * fact",Incomplete Answer,OOP
Make a prediction model in Python and classify a given set of data into two different categories,"Data: 
[1, 2, 3, 4, 5]

Category 1: Even
Category 2: Odd","def predict_model(arr):
    labels = []
    for num in arr:
        if num % 2 == 0:
            labels.append('Even')
        else:
            labels.append('Odd')
    return labels

result = predict_model([1, 2, 3, 4, 5])
print(result)","def predict_model(arr):
    labels = []
    for num in arr:
        if num % 2 == 0:
            labels.append('Even')
",Incomplete Answer,OOP
Create a Python function that takes a string and returns the longest prefix that is a palindrome.,"The input string is ""abca"".","def longest_prefix_palindrome(s):
  if len(s) <= 1: 
    return s
  
  max_length = 0
  for i in range(1,len(s)): 
    if s[:i] == s[i-1::-1]:
       max_length = i 
  
  return s[:max_length] 

print(longest_prefix_palindrome(""abca""))","def longest_prefix_palindrome(s:
  if len(s <= 1: 
    return s
  
  max_length = 0
  for i in range(1,len(s: 
    if s[:i] == s[i-1::-1]:
       max_length = i 
  
  return s[:max_length] 

print(longest_prefix_palindrome(""abca""",Syntax Error,String Manipulation
"Given an array of numbers, create an algorithm in Python to find the maximum sum of any subarray.",,"def max_subarray_sum(arr):
  max_sum = 0
  for i in range(len(arr)):
    for j in range(i, len(arr)):
      current_sum = 0
      for k in range(i, j+1):
        current_sum += arr[k]
      max_sum = max(max_sum, current_sum)
  return max_sum

arr = [1, 8, -1, 3, 4, -2]
result = max_subarray_sum(arr)
print(result) # 17","def max_subarray_sum(arr):
  max_sum = 0
  for i in range(len(arr)):
    for j in range(i, len(arr)):
      current_sum = 0
      for k in range(i, j+1):
      ",Incomplete Answer,Loops
Write a python function to find the last digit in factorial of a given number.,,"def last_Digit_Factorial(n): 
    if (n == 0): return 1
    elif (n <= 2): return n  
    elif (n == 3): return 6
    elif (n == 4): return 4 
    else: 
      return 0","def last_Digit_Factorial(n): 
    if (n == 0): return 1
    elif (n <= 2): return n  
    elif (n == 3): return 6
    elif (n == 4): return 4 
    else: 
      return 0",correct,Recursion
Generate a Python program to print the numbers from 1 to 10 using a for loop.,,"for num in range(1, 11):
    print(num)","for num in range(1, 11)
    print(num)",Syntax Error,File I/O
Edit the following Python code to sort a list of numbers in reversed order.,"numbers = [15, 2, 5, 12, 8]",numbers.sort(reverse=True),numbers.sort(reverse=True),Syntax Error,Recursion
Create a Python program to find the square root of the sum of two numbers without using the sqrt() function.,"Num1 = 4
Num2 = 9","# Python program
import math 

def square_root(a, b): 
    return math.sqrt(a*a + b*b)
  
Num1 = 4
Num2 = 9

print(""Square root of the sum of two numbers:"", square_root(Num1, Num2))","# Python program
import math 

def square_root(a, b): 
    return math.sqrt(a*a + b*b)
  
Num1 = 4
Num2 = 9

print(""Square root of the sum of two numbers:"", square_root(Num1, Num2))",correct,String Manipulation
Design a Python program to record data from a given list of dictionaries.,"[{'name':'John', 'age':25, 'team':'A'}, {'name':'Mark', 'age':30, 'team':'B'}]","data = [
    {'name': 'John', 'age': 25, 'team': 'A'}, 
    {'name': 'Mark', 'age': 30, 'team': 'B'}
]

records = []
for item in data:
    record = {}
    for key, value in item.items():
        record[key] = value
    records.append(record)

print(records)","data = [
    {'name': 'John', 'age': 25, 'team': 'A'}, 
    {'name': 'Mark', 'age': 30, 'team': 'B'}
]

records = []
for item in",Incomplete Answer,String Manipulation
Design a Python program that analyses the sentiment of a given text.,"""I love programming""","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

text = ""I love programming""

sid = SentimentIntensityAnalyzer()
scores = sid.polarity_scores(text)

if scores['compound'] > 0.0:
 print(""Positive sentiment"")
elif scores['compound'] == 0.0:
 print(""Neutral sentiment"")
else:
 print(""Negative sentiment"")

# Output: Positive sentiment","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

text = ""I love programming""

sid = SentimentIntensityAnalyzer()
scores = sid.polarity_scores(text)

if scores['compound'] > 0.0:
 print(""Positive sentiment"")
elif scores['compound'] == 0.0:
 print(""Neutral sentiment"")
else:
 print(""Negative sentiment"")

# Output: Positive sentiment",correct,File I/O
Create a program in Python to delete all the elements from the list which have a value greater than a given number.,"list = [1, 5, 6, 8, 9, 10], num = 7","def removeGreaterNum(list, num): 
  
    return [x for x in list if x < num] 
      
list = [1, 5, 6, 8, 9, 10] 
num = 7
print(removeGreaterNum(list, num))","def removeGreaterNum(list, num): 
  
    return [x for x in list if x < num] 
      
list = [1, 5, 6, 8, 9, 10] 
num = 7
print(removeGreaterNum(list, num))",correct,Recursion
Write a code to create a web server using Flask framework in Python.,,"from flask import Flask 

app = Flask(__name__) 
  
@app.route('/') 
def home(): 
    return 'Welcome!'
  
if __name__ == '__main__': 
    app.run()","from flask import Flask 

app = Flask(__name__) 
  
@app.route('/') 
def home(): 
    return 'Welcome!'
  
if __name__ == '__main__': 
    app.run()",correct,File I/O
Develop a python program which can generate a random array of integers,,"import random

def get_random_array(max_size):
    arr = []

    for _ in range(random.randint(0, max_size)):
        arr.append(random.randint(0, max_size))
    
    return arr","import random

def get_random_array(max_size):
    arr = []

    for _ in range(random.randint(0, max_size)):
        arr.append(random.randint(0, max_size))
    
    return arr",correct,OOP
Produce a Python program to compute the Fibonacci number for a given integer.,8,"def getFibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return getFibonacci(n-1)+getFibonacci(n-2) 

number = 8
fibonacci_number = getFibonacci(number)
print(fibonacci_number)","def getFibonacci(n): 
    if n<0: 
        pritn(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return getFibonacci(n-1)+getFibonacci(n-2) 

number = 8
fibonacci_number = getFibonacci(number)
pritn(fibonacci_number)",Syntax Error,Recursion
Create a Python script to output the maximum number from a set of user-inputted numbers.,,"def find_max_number(numbers):
    maximum = numbers[0]
    for i in numbers:
        if i > maximum:
            maximum = i
    return maximum","def find_max_number(numbers:
    maximum = numbers[0]
    for i in numbers:
        if i > maximum:
            maximum = i
    return maximum",Syntax Error,Recursion
Design a program in Python to delete all the odd numbers from an array.,"[1, 2, 3, 4, 5, 6]","def delete_odd_numbers(arr):
  new_arr = []
  for i in arr:
    if i % 2 != 0:
      continue
    else:
      new_arr.append(i)
  return new_arr

arr = [1, 2, 3, 4, 5, 6]
print(delete_odd_numbers(arr))","def delete_odd_numbers(arr):
  new_arr = []
  for i in arr:
    if i % 2 != 0:
      continue
    el",Incomplete Answer,OOP
"Create a python program to calculate the average of the three numbers 55, 48 and 65",,"def calculate_average(a, b, c):
    """"""
    Calculate the average of the three numbers
    """"""
    return (a + b + c)/3

if __name__ == '__main__':
    result = calculate_average(55, 48, 65)
    print('Average of 55, 48 and 65 is', result)","def calculate_average(a, b, c):
    """"""
    Calculate the average of the three numbers
    """"""
    return (a + b + c)/3",Incomplete Answer,Recursion
Create an API in Python for generating a random password.,,"import random
import string

def generate_random_password():
  # Choose a length for the password
  length = 8
  
  # Create the password
  password = ''.join(random.choice(string.ascii_letters + string.digits) for i in range(length))
  
  print(""Generated Password:"", password)
  
  return password

generate_random_password()","import random
import string

def generate_random_password():
  # Choose a length for the password
  length = 8
  
  # Create the password
  password = ''.join(random.choice(string.ascii_letters + string.digits) for i in range(length))
  
  print(""Generated Password:"", password)
  
  return password

generate_random_password()",Syntax Error,Recursion
Optimize a Python program to check for prime numbers,"def isPrime(n):
  for i in range(2, n):
    if n % i == 0:
      return False
  return True

num = 23
if isPrime(num):
  print(""Number is prime"")
else:
  print(""Number is not prime"")","def isPrime(n):
 if n <= 1:
 return False
 for i in range(2, int(n ** 0.5) + 1):
 if n % i == 0:
 return False
 return True

num = 23
if isPrime(num):
 print(""Number is prime"")
else:
 print(""Number is not prime"")","def isPrime(n):
 if n <= 1:
 return False
 for i in range(2, int(n ** 0.5) + 1):
 if n % i == 0:
 return F",Incomplete Answer,OOP
Write a python function to find the first repeated character in a given string.,,"def first_Repeated_Char(str): 
    h = {}
    for ch in str:
        if ch in h: 
            return ch;
        else: 
            h[ch] = 0
    return '\0'","def first_Repeated_Char(str): 
h = {}
for ch in str:
    if ch in h: 
        return ch;
    else: 
        h[ch] = 0
return '\0'",Syntax Error,String Manipulation
"Design a Python program to solve the following problem: Given two strings of equal length, print the number of differences.","str1 = ""abcd"", str2 = ""abcx""","def diff_characters(str1, str2):
 diff_count = 0

 for i in range(len(str1)):
     if str1[i] != str2[i]:
         diff_count += 1

 return diff_count

str1 = ""abcd""
str2 = ""abcx""

print(diff_characters(str1, str2))

# Output: 1","def diff_characters(str1, str2):
 diff_count = 0

 for i in range(len(str1)):
     if str1[i] != str2[i]:
         diff_count += 1

 return diff_count

str1 = ""abcd""
str2 = ""abcx""

print(diff_characters(str1, str2))

# Output: 1",correct,Loops
Write a Python script to generate all the possible words for a given set of characters.,"""abc""","import itertools

characters = 'abc'
words = [''.join(word) for word in itertools.product(characters, repeat=3)]

print (words)

# output: ['aaa', 'aab', 'aac', 'aba', 'abb', 'abc', 'aca', 'acb', 'acc', 'baa', 'bab', 'bac', 'bba', 'bbb', 'bbc', 'bca', 'bcb', 'bcc', 'caa', 'cab', 'cac', 'cba', 'cbb', 'cbc', 'cca', 'ccb', 'ccc']","import itertools

characters = 'abc'
words = [''.join(word for word in itertools.product(characters, repeat=3]

print (words

# output: ['aaa', 'aab', 'aac', 'aba', 'abb', 'abc', 'aca', 'acb', 'acc', 'baa', 'bab', 'bac', 'bba', 'bbb', 'bbc', 'bca', 'bcb', 'bcc', 'caa', 'cab', 'cac', 'cba', 'cbb', 'cbc', 'cca', 'ccb', 'ccc']",Syntax Error,OOP
Write a python function to find the volume of a triangular prism.,,"def find_Volume(l,b,h) : 
    return ((l * b * h) / 2) ","def find_Volume(l,b,h) : 
 ",Incomplete Answer,Loops
Write a function to locate the right insertion point for a specified value in sorted order.,,"import bisect
def right_insertion(a, x):
    i = bisect.bisect_right(a, x)
    return i","import bisect
def right_insertion(a, x):
    i = bisect.bisect_right(a, x)
    return i",Syntax Error,Loops
"Create a Python application that receives user input, manipulates the data, and generates output.",John is 10 years old,"user_input = input(""What is your name and age: "")
name, age = user_input.split()
print(f""Hi {name}, you are {int(age)+1} years old"")
# Output: Hi John, you are 11 years old","user_input = input(""What is your name and age: ""
name, age = user_input.split(
print(f""Hi {name}, you are {int(age+1} years old""
# Output: Hi John, you are 11 years old",Syntax Error,OOP
Write Python code to generate a list of prime numbers between 2 and 1000.,,"def generate_prime_numbers(lower, upper):
  prime_numbers = []
  for num in range(lower, upper + 1):
    if num > 1:
      for i in range(2, num):
        if (num % i) == 0:
          break
      else:
        prime_numbers.append(num)
  return prime_numbers","def generate_prime_numbers(lower, upper):
  prime_numbers = []
  for num in range(lower, upper + 1):
    if num > 1:
      for i in range(2, num):
        if (num % i) == 0:
          break
      else:
        prime_numbers.append(num)
  return prime_numbers",Syntax Error,Recursion
Write python code to return the maximum number in a list.,"nums = [1, 15, 20, 6]","def find_max(nums):
    '''Returns the maximum number in the list.'''
    max_val = nums[0]
    for num in nums:
        if num > max_val:
            max_val = num
    
    return max_val","def find_max(nums):
    '''Returns the maximum number in the list.'''
    max_val = nums[0]
  ",Incomplete Answer,OOP
"Create a Python class to implement a queue with methods push() to insert an element, pop() to remove an element, and peek() to return the top element of the queue.",,"class Queue:
 def __init__(self):
 self.queue = []

 def push(self, item):
 self.queue.append(item)

 def pop(self):
 return self.queue.pop(0)

 def peek(self):
 return self.queue[0]

# Usage example
q = Queue()
q.push(1)
q.push(2)
q.push(3)

print(q.pop()) # 1 
print(q.peek()) # 2","class Queue:
 def __init__(self):
 self.queue = []

 def push(self, item):
 self.queue.append(item)

 def pop(self):
 return self.queue.pop(0)

 def peek(self):
 return self.queue[0]

# Usage example
q = Queue()
q.push(1)
q.push(2)
q.push(3)

print(q.pop()) # 1 
print(q.peek()) # 2",correct,Loops
Write a Python program to find the top 3 highest scores in a given tennis game.,"game_scores = [20, 24, 27, 30, 18, 28, 15, 25, 30, 22, 28]","# find the top 3 highest scores
game_scores = [20, 24, 27, 30, 18, 28, 15, 25, 30, 22, 28]

top_scores = sorted(game_scores, reverse=True)[:3]

print(""The top 3 highest scores are:"", top_scores)","# find the top 3 highest scores
game_scores = [20, 24, 27, 30, 18, 28, 15, 25, 30, 22, 28]

top_s",Incomplete Answer,OOP
Generate a list of the first 10 Fibonacci numbers in Python.,,"n=10
result=[]

# first two numbers
result.append(0)
result.append(1)

# iteration for generating Fibonacci numbers
for i in range(2, n):
    result.append(result[i-2] + result[i-1])

# print the result
print(result)","n=10
result=[]

# first two numbers
result.append(0)
result.append(1)

# iteration for generating Fibonacci numbers
for i in range(2, n):
    result.append(result[i-2] + result[i-1])

# pritn the result
pritn(result)",Syntax Error,File I/O
Create a python class that simulates an invoice with information about the item and the cost.,"Example of an Invoice:

Item: Pen
Price: $3","class Invoice:
    def __init__(self, item, price):
        self.item = item
        self.price = price
    
    def get_item(self):
        return self.item
    
    def get_price(self):
        return self.price

invoice = Invoice(""Pen"", 3)","class Invoice:
    def __init__(self, item, price):
        self.item = item
        self.price = price
    
    def get_item(self):
        return self.item
    
    def get_price(self):
        return self.price

invoice = Invoice(""Pen"", 3)",Syntax Error,Recursion
Generate a Python program that takes a string and capitalizes the first character of each word.,"""this is an example""","def capitalize_string(str):
    words = str.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    return "" "".join(capitalized_words)

capitalized_string = capitalize_string(""this is an example"")
print(capitalized_string)","def capitalize_string(str):
    words = str.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    return "" "".join(capitalized_words)

capitalized_string = capitalize_string(""this is an example"")
print(capitalized_string)",correct,File I/O
Create a Python program for implementing a linear search algorithm.,"[4, 6, 5, 2, 9]","def linearSearch(arr, key): 
 for idx, num in enumerate(arr):
 if num == key:
 return idx
 
 return -1","def linearSearch(arr, key): 
 for idx, num in enume",Incomplete Answer,String Manipulation
Create a Python program to check if the given number is divisible by 3 or not.,12,"def is_divisible_by_3(n):
  return (n % 3 == 0)

n = 12
if is_divisible_by_3(n):
  print(str(n) + ' is divisible by 3.')
else:
  print(str(n) + ' is not divisible by 3.')","def is_divisible_by_3(n):
  return (n % 3 == 0)

n = 12
if is_divisible_by_3(n):
  pritn(str(n) + ' is divisible by 3.')
else:
  pritn(str(n) + ' is not divisible by 3.')",Syntax Error,String Manipulation
Generate a script that prints the first 10 numbers in the Fibonacci sequence in Python.,,"a, b = 0, 1
for _ in range(10):
 print(a, end=' ')
 a, b = b, a + b
# 0 1 1 2 3 5 8 13 21 34","a, b = 0, 1
for _ in range(10):
 print(a, end=",Incomplete Answer,Recursion
Develop a Python program that plays all the notes of a particular key (say F Sharp Major),,"def play_f_sharp_major():
    key_notes = ['F#', 'G#', 'A', 'A#', 'B', 'C#', 'D#']

    for note in key_notes:
        play_note(note)","def play_f_sharp_major():
    key_notes = ['F#', 'G#', 'A', 'A#', '",Incomplete Answer,File I/O
"In a Python class, create a method to compute the average of n numbers without using the average function.",,"class AverageCalculator:
    def average(self, nums):
        sum = 0
        for i in range(len(nums)):
            sum += nums[i]

        return sum / len(nums)","class AverageCalculator:
    def average(self, nums):
        sum = 0
        for i in range(len(nums)):
            sum += nums[i]

        return sum / len(nums)",correct,Loops
Construct a Python program to capture the mouse position.,,"import pyautogui

def get_mouse_pos():
    x, y = pyautogui.position()
    return (x, y)","import pyautogui

def get_mouse_pos():
    x, y = pyautogui.position()
    return (x, y)",correct,OOP
Construct a function in Python to check if the provided year is a leap year.,,"def is_leap_year(year):
    if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):
        return True
    else:
        return False","def is_leap_year(year):
    if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):
        return True
    else:
        return False",correct,OOP
"Create an SHA-2 encryption algorithm in Python using a provided string ""abc"".",abc,"import hashlib

s = 'abc'.encode(""utf-8"")

hash_object = hashlib.sha256(s)
hex_dig = hash_object.hexdigest()
print(hex_dig)","import hashlib

s = 'abc'.encode(""utf-8"")

hash_object = hashlib.sha256(s)
hex_dig = hash_object.hexdigest()
print(hex_dig)",Syntax Error,Loops
"Given the following input JSON data, write a Python program to print out all the elements that have an even length.","Input data:{""apple"":[""red"",""green""],""pear"":[""green""],""grapes"":[""green"",""red""],""banana"":[""yellow""]}","import json

data = '{""apple"":[""red"",""green""],""pear"":[""green""],""grapes"":[""green"",""red""],""banana"":[""yellow""]}'

json_data = json.loads(data)

for item in json_data.items():
    if len(item[1]) % 2 == 0:
        print(item[0])","import json

data = '{""apple"":[""red"",""green""],""pear"":[""green""],""grapes"":[""green"",""red""],""banana"":[""yellow""]}'

json_data = json.loads(data)

for item in json_data.items():
if len(item[1]) % 2 == 0:
    print(item[0])",Syntax Error,String Manipulation
Create a Python function to input a string and then return the number of vowels found in the string.,hello,"def count_vowels(string):
 vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
 count = 0
 for letter in string.lower():
 if letter in vowels:
  count += 1
 return count

output = count_vowels(""Hello"")
print(output)  # output = 2","def count_vowels(string):
 vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
 count = 0
 for letter in string.lower():
 i",Incomplete Answer,OOP
Write a code in Python to print the following pattern:,,"for i in range(5):
    for j in range(i+1):
        print(""*"", end="""")
    print("""")

for i in range(5, 0, -1):
    for j in range(i):
        print(""*"", end="""")
    print("""")","for i in range(5):
    for j in range(i+1):
        print(""*"", end="""")
    print("""")

f",Incomplete Answer,File I/O
Write a Python program to ask the user for two numbers and output their sum.,,"num1 = float(input(""Please enter the first number: ""))
num2 = float(input(""Please enter the second number: ""))

print(""The sum of the two numbers is: "" + str(num1 + num2))","num1 = float(input(""Please enter the first number: ""))
num2 = float(input(""Please enter the second number: ""))

print(""The sum of the two numbers is: "" + str(num1 + num2))",correct,Recursion
Design a web scraper using Python to scrape data from a given ecommerce website.,,"import requests
from bs4 import BeautifulSoup

# Scrape webpage with requests
website_url = <url of the webpage>
r = requests.get(website_url)

# Parse webpage using BeautifulSoup
soup = BeautifulSoup(r.content, 'html.parser')

# Find specific elements with tags, ids, classes etc
data = soup.find_all(<element tag/id/class>)

# Store scraped data
<store data in a list/dictionary>","import requests
from bs4 import BeautifulSoup

# Scrape webpage with requests
website_url = <url of the webpage>
r = requests.get(website_url)

# Parse webpage using BeautifulSoup
soup = BeautifulSoup(r.content, 'html.parser')

# Find specific elements with tags, ids, classes etc
data = soup.find_all(<element tag/id/class>)

# Store scraped data
<store data in a list/dictionary>",correct,String Manipulation
What Python statement should be used to make a copy of a list x?,,y = x.copy(),y = x.,Incomplete Answer,Loops
Design a program in Python that takes two integers as inputs and outputs the greatest common divisor of the two integers.,,"def gcd(a,b): 
  
    # base case  
    if (a == 0): 
        return b 
              
    if (b == 0): 
        return a 
  
    if (a == b): 
        return a 
  
    if (a > b): 
        return gcd(a-b, b) 
                  
    return gcd(a, b-a)","def gcd(a,b): 
  
    # base case  
    if (a == 0): 
        return b 
              
    if (b == 0): 
        return a 
  ",Incomplete Answer,OOP
Create an algorithm in Python to sort an array using selection sort.,"[4, 1, 6, 5, 7, 2, 0]","def selection_sort(arr):
    for i in range(len(arr)):
        min_index = i
        
        for j in range(i + 1, len(arr)):
            if arr[min_index] > arr[j]:
                min_index = j
                
        arr[i], arr[min_index] = arr[min_index], arr[i]
        
    return arr

arr = [4, 1, 6, 5, 7, 2, 0]
print(selection_sort(arr))","def selection_sort(arr):
    for i in range(len(arr)):
        min_index = i
        
        for j in range(i + 1, len(arr)):
            if arr[min_index] > arr[j]:
       ",Incomplete Answer,Loops
Come up with a Python object-oriented program to represent a circle.,,"class Circle:
    def __init__(self, radius):
        self.radius = radius
    
    def get_area(self):
        return 3.14 * self.radius * self.radius","class Circle:
    def __init__(self, radius):
        self.radius = radius
    
    def get_area(self):
        return 3.14 * self.radius * self.radius",correct,Recursion
Write a python function to remove duplicates from an array.,"[1, 2, 3, 3, 3, 4, 5, 6]","""""""
Remove duplicates from an array
""""""

def remove_duplicates(arr):
    # Create a set 
    seen = set()
    
    # Traverse the array
    for i in range(len(arr)):
        if arr[i] not in seen:
            seen.add(arr[i])
            
    return seen

if __name__ == '__main__':
    arr = [1, 2, 3, 3, 3, 4, 5, 6]
    print(remove_duplicates(arr))","""""""
Remove duplicates from an array
""""""

def remove_duplicates(arr):
    # Create a set 
    seen = set()
    
    # Traverse the array
    for i in range(len(arr)):
        if arr[i] not in seen:
            seen.add(arr[i])
            
    return seen

if __name__ == '__main__':
    arr = [1, 2, 3, 3, 3, 4, 5, 6]
    print(remove_duplicates(arr))",correct,Recursion
Write a Python program to sort a list of tuples using a given key.,"[(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]","def sort_list(lst, key): 
    return sorted(lst, key = lambda x: x[key]) 

# Driver code 
lst = [(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)] 
key = 1
print(sort_list(lst, key))","def sort_list(lst, key): 
    return sorted(lst, key = lambda x: x[key]) 

# Driver co",Incomplete Answer,File I/O
How would you modify a program to generate random numbers without replication in Python?,,"import random

def generate_random_numbers(length):
    numbers = []
    while len(numbers) < length:
        num = random.randint(0, length)
        if num not in numbers:
            numbers.append(num)
    return numbers

random_numbers = generate_random_numbers(10)","import random

def generate_random_numbers(length):
    numbers = []
    while len(numbers) < length:
        num = random.randint(0, ",Incomplete Answer,File I/O
Create a function in Python to calculate the area of a triangle given its base and height.,,"def triangle_area(base, height):
  return (base * height) / 2","def triangle_area(base, height):
  return (base * height) / 2",Syntax Error,String Manipulation
Create a Python script that processes a sentence and classifies it as positive or negative.,The food was really bad.,"import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentence = ""The food was really bad.""

sentiment_analyzer = SentimentIntensityAnalyzer()
score = sentiment_analyzer.polarity_scores(sentence)

if score['compound'] > 0:
 sentiment = 'positive'
elif score['compound'] < 0:
 sentiment = 'negative'

print(f'The sentence is {sentiment}.')","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentence = ""The food was really bad.""

sentiment_analyzer = SentimentIntensityAnalyzer()
score = sentiment_analyzer.polarity_scores(sentence)

if score['compound'] > 0
 sentiment = 'positive'
elif score['compound'] < 0
 sentiment = 'negative'

print(f'The sentence is {sentiment}.')",Syntax Error,Recursion
"Design a Python program for comparing two strings and printing ""Equal"" if the strings are equal, or ""Not Equal"" if the strings are not equal.","string1 = ""hello""
string2 = ""world""","if string1 == string2:
    print(""Equal"")
else:
    print(""Not Equal"")","if string1 == string2:
    print(""E",Incomplete Answer,File I/O
Optimize a given Python code segment to run it faster.,"a = 10
   b = 0
   while a > 0:
     b += 1
     a -= 1","a = 10
b = 0
while a > 0:
 b += a
 a //= 2","a = 10
b = 0
while a > 0
 b += a
 a //= 2",Syntax Error,File I/O
Write a function using Python to scramble a word.,word: hello,"import random

def scramble_word(word):
    # Convert the word to a list
    word_list = list(word)
    #Scramble the Letters
    random.shuffle(word_list)
    #Convert back to a string
    scrambled_word = ''.join(word_list)
    return scrambled_word

if __name__ == '__main__':
    print(scramble_word('hello'))","import random

def scramble_word(word):
    # Convert the word to a list
    word_list = list(word)
    #Scramble the Letters
    random.shuffle(word_list)
    #Convert back to a string
    scrambled_word = ''.join(word_list)
    return scrambled_word

if __name__ == '__main__':
    print(scramble_word('hello'))",correct,Loops
Write a function in Python that takes two integer numbers and returns the maximum of the two.,,"def maximum_of_two(a,b):
    if a > b:
        return a
    else:
        return b","def maximum_of_two(a,b):
    if a > b:
        return a
    else:
        return b",correct,Recursion
Design a Python program that finds maximum sum of an array,"Array: [1,-3,7,12,-4,8]","def max_sum(arr): 
    n = len(arr) 
    max_sum_so_far = 0
  
    for i in range(n): 
        max_ending_here = 0
          
        for j in range(i, n): 
            max_ending_here += arr[j] 
            if (max_sum_so_far < max_ending_here): 
                max_sum_so_far = max_ending_here 
  
    return max_sum_so_far

result = max_sum([1,-3,7,12,-4,8])
print(result)","def max_sum(arr): 
    n = len(arr) 
    max_sum_so_far = 0
  
    for i in range(n): 
        max_ending_here = 0
          
        for j in range(i, n): 
            max_ending_here += ",Incomplete Answer,File I/O
Can you convert this Python code to Ruby?,"def my_func(a, b): 
    return a + b","def my_func(a, b)
  a + b
end","def my_func(a, b)
  a + b
end",correct,String Manipulation
Create a web API in Python Flask that returns the factorial of the provided number.,5,"from flask import Flask, request

app = Flask(__name__)

@app.route('/factorial', methods=['POST'])
def factorial():
 num = request.json['num']
 result = 1
 for i in range(2, num + 1):
  result *= i
 return { 'factorial': result }

if __name__ == '__main__':
 app.run(debug=True)","from flask import Flask, request

app = Flask(__name__)

@app.route('/factorial', methods=['POST'])
def factorial():
 num = request.json['num']
 result = 1
 for i in range(2, num + 1):
  result *= i
 return { 'factorial': result }

if __name__ == '__main__':
 app.run(debug=True)",Syntax Error,Recursion
Design a Python program to accept two numbers from the user and swap them using a variable.,,"num1 = int(input(""Enter the first number: ""))
num2 = int(input(""Enter the second number: ""))

temp = num1
num1 = num2
num2 = temp

print(""After swapping:"")
print(""First number:"", num1)
print(""Second number:"", num2)","num1 = int(input(""Enter the first number: ""))
num2 = int(input(""Enter the second number: ""))

temp = num1
num1 = num2
num2 = temp

print(""After swapping:"")
print(""First number:"", num1)
print(""Second number:"", num2)",correct,String Manipulation
Generate a program in Python that returns a list of all prime numbers between two given numbers.,"start = 5
end = 100","def primes(start, end):
    prime_list = []
    for i in range(start, end + 1):
        is_prime = True
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            prime_list.append(i)
    return prime_list

prime_numbers = primes(start, end)
print(prime_numbers)","def primes(start, end):
    prime_list = []
    for i in range(start, end + 1):
        is_prime = True
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            prime_list.append(i)
    return prime_list

prime_numbers = primes(start, end)
print(prime_numbers)",correct,Recursion
Create a Python function that takes an integer argument and prints the prime factors of that number.,num = 30,"def find_prime_factors(num): 
    factors = []
    
    i = 2
    while i * i <= num: 
        if num % i: 
            i += 1
        else:
            num //= i
            factors.append(i)

    if num > 1:
        factors.append(num)

    print(factors)

find_prime_factors(num)","def find_prime_factors(num) 
    factors = []
    
    i = 2
    while i * i <= num 
        if num % i 
            i += 1
        else
            num //= i
            factors.append(i)

    if num > 1
        factors.append(num)

    print(factors)

find_prime_factors(num)",Syntax Error,String Manipulation
Write a Python function to rotate a list by n items to the left.,"list = [1, 2, 3, 4, 5]","def rotate(list, n): 
    return list[n:] + list[:n]","def rotate(list, n): 
    ",Incomplete Answer,OOP
Create a HTML page which displays your favorite programming language.,,"<!DOCTYPE html>
<html>
    <head>
        <title>My Favorite Programming Language</title>
    </head>
    <body>
        <h1>My favorite programming language is Python!</h1>
    </body>
</html>","<!DOCTYPE html>
<html>
    <head>
        <title>My Favorite Programming Language</title>
    </head>
    <body>
        <h1>My favorite programming language is Python!</h1>
    </body>
</html>",correct,Loops
Write a Python program to return the first prime number greater than 5.,,"def prime_number(num):
    while True:
        is_prime = True
        for i in range(2,num):
            if (num % i == 0):
                is_prime = False
        if is_prime:
            return num
        num += 1

x = prime_number(5)
print(x)","def prime_number(num):
    while True:
        is_prime = True
        for i in range(2,num):
            if (num % i == 0):",Incomplete Answer,File I/O
Design a data structure in Python that can store employee information.,,"class Employee:
  """"""This class stores the information of an employee""""""

  def __init__(self, name, id, salary, department):
    self.name = name
    self.id = id
    self.salary = salary
    self.department = department","class Employee:
  """"""This class stores the information of an employee""""""

  def __init__(self, name, id, salary, department):
    self.name = name
    self.id = id
    self.salary = salary
    self.department = department",correct,Loops
"Optimize the following Python code to reduce running time.

def add_arrays(arr1, arr2):
  result = []
  for i in range(len(arr1)):
    result.append(arr1[i] + arr2[i])
  return result",,"def add_arrays(arr1, arr2):
  return [x + y for x, y in zip(arr1, arr2)]","def add_arrays(arr1, arr2):
  return [x + y for x, y in zip(arr1, arr2)]",Syntax Error,Loops
Write a Python program that creates a dictionary of emails and passwords based on the given input.,"A list of emails and passwords:
[
    ('John', 'j12345'),
    ('Adam', 'a12345'),
    ('Alex', 'a54321')
]","def create_email_password_dict(data):
 email_password_dict = {}
 for name, password in data:
 email_password_dict[name.lower() + '@example.com'] = password
 return email_password_dict

email_password_dict = create_email_password_dict(information)","def create_email_password_dict(data):
 email_password_dict = {}
 for name, password in data:
 email_password_dict[name.lower() + '@example.com'] = password
 return email_password_dict

email_password_dict = create_email_password_dict(information)",correct,File I/O
Correct the errors and run this Python code.,"print(""Hello&%World"")","print(""Hello World"")","print(""Hello World"")",correct,String Manipulation
Create a python program that outputs a sentence when given an input of two words.,"words = [""red"", ""apple""]","words = [""red"", ""apple""]

sentence = words[0] + "" "" + words[1]
print(sentence)","words = [""red"", ""apple""]

sentence = words[0] + "" "" + words[1]
print(sentence)",correct,OOP
Create a Python program to search for a given query from a given array of strings using regular expressions.,"query = 'ab+c'
string_array = ['abc', 'def', 'ghi', 'abcd', 'abcde']","import re

query = 'ab+c'
string_array = ['abc', 'def', 'ghi', 'abcd', 'abcde']

for string in string_array:
    if re.search(query, string):
        print(string)

# Output:
# abc
# abcd
# abcde","import re

query = 'ab+c'
string_array = ['abc', 'def', 'ghi', 'abcd', 'abcde']

for string in string_array:
    if re.search(query, string):
        print(string)

# Output:
# abc
# abcd
# abcde",correct,File I/O
Create a Python list containing numbers 8 to 100 in increments of 8.,,"my_list = [8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 100]","my_list = [8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 100]",correct,Recursion
Write a function to sort a list of lists by a given index of the inner list.,,"from operator import itemgetter
def index_on_inner_list(list_data, index_no):
    result = sorted(list_data, key=itemgetter(index_no))
    return result","from operator import itemgetter
def index_on_inner_list(list_data, index_no):
    result = sorted(list_data, key=itemgetter(index_no))
    return result",correct,Loops
Edit a Python program to calculate the product of two numbers.,"def product(num1, num2):
 return 0","def product(num1, num2):
 return num1 * num2","def product(num1, num2):
 return num1 * num2",correct,OOP
Implement a function in Python to generate sequence of numbers based on a given start and end value.,,"def sequence_generator(start, end):
    return list(range(start, end + 1))","def sequence_generator(start, end):
 ",Incomplete Answer,String Manipulation
"In Python, explain when to use ""try"", ""except"" and ""finally"".",,"The ""try"" block is used to test a piece of code to see if any errors occur while executing that code. If an error occurs, the code in the ""except"" block will be executed. The ""finally"" block is used to execute code regardless of whether an error occurs or not. The ""finally"" block should be used for cleanup tasks, such as releasing resources or closing files.","The ""try"" block is used to test a piece of code to see if any errors occur while executing that code. If an error occurs, the code in the ""except"" block will be executed. The ""finally"" block is used to execute code regardless of whether an error occurs or not. The ""finally"" block should be used for cleanup tasks, such as releasing resources or closing files.",correct,Recursion
Develop a function in Python to remove all the whitespaces from a given string.,,"def remove_whitespace(s):
    return s.replace("" "", """")","def remove_whitespace(s):
 ",Incomplete Answer,Loops
"Design a Python program to find the difference between two provided times. The two times should be provided as strings in the format ""[HH:mm:ss]"".","time1 = ""08:30:15""
time2 = ""10:20:20""","from datetime import datetime

def time_diff(time1, time2):
 t1 = datetime.strptime(time1, ""%H:%M:%S"")
 t2 = datetime.strptime(time2, ""%H:%M:%S"")
 return (t2 - t1).total_seconds()

print(time_diff('08:30:15', '10:20:20')) // 7200.0","from datetime import datetime

def time_diff(time1, time2)
 t1 = datetime.strptime(time1, ""%H%M%S"")
 t2 = datetime.strptime(time2, ""%H%M%S"")
 return (t2 - t1).total_seconds()

print(time_diff('083015', '102020')) // 7200.0",Syntax Error,Recursion
You are required to write a Python program to optimize an equation.,x + x + y + y + y,"def optimize_equation(equation):
    variables = []
    for term in equation.split('+'):
        var, count = term.strip().split(' ')
        variables.append((var, int(count)))

    new_equation = """"
    for var, count in variables:
        new_equation += (var + '^' + str(count)) + ' + '
    return new_equation[:-3]

equation = 'x + x + y + y + y'

print(optimize_equation(equation))","def optimize_equation(equation):
    variables = []
    for term in equation.split('+'):
        var, count = term.strip().split(' ')
        variables.append((var, int(count)))

    new_equation = """"
    for var, count in variables:
        new_equation += (var + '^' + str(count)) + ' + '
    return new_equation[:-3]

equation = 'x + x + y + y + y'

print(optimize_equation(equation))",correct,String Manipulation
"Create a Python program to remove all the elements in a given array, which are divisible by a certain number.","[23, 45, 12, 35, 29], 3","# Enter the Array
arr = [23, 45, 12, 35, 29] 
 
# Enter the Number
num = 3
 
# Print the New Array
new_arr = [x for x in arr if x % num != 0] 
 
# Print the Result
print(new_arr)","# Enter the Array
arr = [23, 45, 12, 35, 29] 
 
# Enter the Number
num = 3
 
# Print the New Array
new_arr = [x for x in arr if x % num != 0] 
 
# Print the Result
print(new_arr)",Syntax Error,Loops
Create a Python script that takes a number and a power as parameters and calculates the result.,Example input: number=2 power=3,"def power(number, power):
 return number**power

print(power(2, 3)) # Output: 8","def power(number, power):
 return numbe",Incomplete Answer,String Manipulation
Write a Python program to get all the information associated with an IPv4 address.,"IPv4 address = ""8.8.8.8""","import socket
ip =  ""8.8.8.8""
address_info = socket.getaddrinfo(ip, None)

for info in address_info:
    print(""IP version :"", info[0])
    print(""IP address as string:"", info[4][0])
    print(""IP address as tuple:"", info[4])
    print(""IP protocol:"", info[6])","import socket
ip =  ""8.8.8.8""
address_info = socket.getaddrinfo(ip, None)

for info in address_info:
    print(""IP version :"", inf",Incomplete Answer,Loops
Write a python function to find two distinct numbers such that their lcm lies within the given range.,,"def answer(L,R): 
    if (2 * L <= R): 
        return (L ,2*L)
    else: 
        return (-1) ","def answer(L,R): 
    if (2 * L <= R): 
       ",Incomplete Answer,String Manipulation
Write a Python program to analyze the sentiment of a text document using Natural Language Processing.,,"import nltk
from textblob import TextBlob

def analyze_sentiment(text):
    sentiment = TextBlob(text).sentiment
    if sentiment.polarity > 0:
        print('Positive sentiment')
    elif sentiment.polarity < 0:
        print('Negative sentiment')
    else:
        print('Neutral sentiment')","import nltk
from textblob import TextBlob

def analyze_sentiment(text):
    sentiment = TextBlob(text).sentiment
    if sentiment.polarity > 0:
        print(name, 'Positive sentiment')
    elif sentiment.polarity < 0:
        print(name, 'Negative sentiment')
    else:
        print(name, 'Neutral sentiment')",Syntax Error,OOP
Write a Python program to Reverse the word sequence of a given sentence,This is a test,"def reverse_sentence(sent):
    words = sent.split("" "")
    reversed_words = words[::-1]
    result = "" "".join(reversed_words)
    return result

sentence = ""This is a test""
print(reverse_sentence(sentence))

# Output
test a is This","def reverse_sentence(sent):
    words = sent.split("" "")
    reversed_words = words[::-1]
    result = "" "".join(reversed_words)
    return result

sentence = ""This is a test""
print(name, reverse_sentence(sentence))

# Output
test a is This",Syntax Error,File I/O
Write an algorithm in Python to determine the largest number in an array.,"arr = [10, 8, 12, 4, 6]","def find_max(arr): 
    max_val = arr[0] 
  
    for i in range(1, len(arr)): 
        if arr[i] > max_val: 
            max_val = arr[i] 
  
    return max_val 
  
# Driver code 
arr = [10, 8, 12, 4, 6]
result = find_max(arr) 
print(result) 

# Output: 12","def find_max(arr): 
    max_val = arr[0] 
  
    for i in range(1, len(arr)): 
        if arr[i] > max_val: 
            max_val",Incomplete Answer,OOP
Write a function to move all the numbers in it to the given string.,,"def move_num(test_str):
  res = ''
  dig = ''
  for ele in test_str:
    if ele.isdigit():
      dig += ele
    else:
      res += ele
  res += dig
  return (res) ","def move_num(test_str):
  res = ''
  dig = ''
  for ele in test_str:
    if ele.is",Incomplete Answer,File I/O
Write an algorithm in Python to sort an array of numbers in descending order.,"[13, 11, 7, 4, 2]","def descendingSort(arr): 
    arr.sort(reverse=True) 
    return arr
  
arr = [13, 11, 7, 4, 2]
result = descendingSort(arr) 
  
print (result)","def descendingSort(arr): 
    arr.sort(reverse=True) 
    return arr
  
arr = [13, 11, 7, 4, 2]
result = descendingSort(arr) 
  
print (result)",Syntax Error,Loops
Create a Python script for web scraping data from a website using the BeautifulSoup library.,,"import requests
from bs4 import BeautifulSoup
url = ""<website url>""

# Make request to website
r = requests.get(url)

# Get the HTML of the page
html = r.text

# Parse HTML using BeautifulSoup
soup = BeautifulSoup(html, 'html.parser')

# Extract desired info from the page
data = soup.find_all('div', {'class': 'content'})

# Print the data
print(data)","import requests
from bs4 import BeautifulSoup
url = ""<website url>""

# Make request to website
r = requests.get(url)

# Get the HTML of the page
html = r.text

# Parse HTML using BeautifulSoup
soup = BeautifulSoup(html, 'html.parser')

# Extract desired info from the page
data = soup.find_all('div', {'class' 'content'})

# Print the data
print(data)",Syntax Error,OOP
Create a Python program that creates a new list containing only even numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","# create a list
original_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]

# create a new list with only even numbers 
even_list = [num for num in original_list if num % 2 == 0] 
  
# display the even list 
print(even_list)","# create a list
original_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]

# create a new list with only even numbers 
even_list = [num for num in original_list if num % 2 == 0] 
  
# display the even list 
pritn(even_list)",Syntax Error,OOP
Create a Python script to remove all empty elements from a list.,"list = [""a"", """", ""b"", """", ""c"", """"]","list = [""a"", """", ""b"", """", ""c"", """"] 

result = [element for element in list if len(element) > 0] 

print(result)","list = [""a"", """", ""b"", """", ""c"", """"] 

result = [element for element in list if len(element) > 0] 

print(result)",correct,OOP
Generate python code to rotate an array to the left.,"arr = [1, 2, 3, 4, 5]","def rotate_left(arr):
    first_element = arr[0]
    for i in range(len(arr) - 1):
        arr[i] = arr[i + 1]
    arr[len(arr) - 1] = first_element

rotate_left(arr)","def rotate_left(arr):
    first_element = arr[0]
    for i in range(len(arr) - 1):
",Incomplete Answer,OOP
Write a Python script that takes in the arguments x and y and prints the result of p + q.,"p = 5
q = 7","def calculate_sum(x, y):
    """"""
    Takes in the arguments x and y and prints the result of p + q.
    Args:
        x: first argument.
        y: second argument.
    Returns:
        result: the sum of the two arguments.
    """"""
    result = x + y
    return result

p = 5
q = 7
result = calculate_sum(p, q)
print(result)","def calculate_sum(x, y:
    """"""
    Takes in the arguments x and y and prints the result of p + q.
    Args:
        x: first argument.
        y: second argument.
    Returns:
        result: the sum of the two arguments.
    """"""
    result = x + y
    return result

p = 5
q = 7
result = calculate_sum(p, q
print(result",Syntax Error,File I/O
"Create a new Python class named ""Student"" with name and age as attributes.",,"class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age","class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age",Syntax Error,File I/O
Develop a Python function to print out a Pascals triangle using n number of rows.,,"def pascals_triangle(n):
 result = []
 for row_num in range(n):
 row = [1]
 for j in range(1, row_num):
 prev_row = result[row_num-1]
 row.append(prev_row[j-1] + prev_row[j])
 row.append(1)
 result.append(row)
 return result

num_rows = 6
print(pascals_triangle(num_rows))","def pascals_triangle(n)
 result = []
 for row_num in range(n)
 row = [1]
 for j in range(1, row_num)
 prev_row = result[row_num-1]
 row.append(prev_row[j-1] + prev_row[j])
 row.append(1)
 result.append(row)
 return result

num_rows = 6
print(pascals_triangle(num_rows))",Syntax Error,OOP
Write a Python function that takes an array of numbers and returns an array with the greatest and smallest values.,"[3, 4, 2, 8, 15, 6]","def min_max(arr):
  min_val = min(arr)
  max_val = max(arr)
  return [min_val, max_val]

result = min_max([3, 4, 2, 8, 15, 6])
print(result)","def min_max(arr):
  min_val = min(arr)
  max_val = max(arr)
  return [",Incomplete Answer,Loops
Produce a Python program to print odd numbers from 1 to 10.,,"for num in range(1, 11): 
    if num % 2 != 0: 
        print(num)","for num in range(1, 11): 
    if ",Incomplete Answer,OOP
Create a Python program that prints out the Fibonacci sequence up to the nth number given as input.,n = 10,"def fibonacci(n):
    fib_list = [0 , 1]

    for i in range(2 , n):
        fib_list.append(fib_list[i - 2] + fib_list[i - 1])

    return fib_list[:n]

print(fibonacci(n))","def fibonacci(n):
    fib_list = [0 , 1]

    for i in range(2 , n):
        fib_list.",Incomplete Answer,File I/O
Generate a Python code to take in a list and split it into two halves.,,"def split_list(list):
    size = len(list)
    split_index = size//2 # Floor value
    return list[:split_index], list[split_index:]

list = [1,2,3,4,5,6,7] 
first_half, second_half = split_list(list)
print(first_half)
print(second_half)","def split_list(list):
    size = len(list)
    split_index = size//2 # Floor value
    return list[:split_index], list[split_index:]

list = [1,2,3,4,5,6,7] 
first_half, second_half = split_list(list)
print(name, first_half)
print(name, second_half)",Syntax Error,OOP
"Create a python function to check if a given string contains a specific substring. The function should loop through the string and find the substring, and return a boolean value indicating if the substring was found or not.","myString = ""Hello World!""
substring = ""World""","def checkIfStringContainsSubstring(myString, substring):
  for i in range(len(myString) - len(substring) + 1):
    if myString[i:i+len(substring)] == substring:
      return True
  return False","def checkIfStringContainsSubstring(myString, substring:
  for i in range(len(myString - len(substring + 1:
    if myString[i:i+len(substring] == substring:
      return True
  return False",Syntax Error,Recursion
"Create a Python class to store employee information such as name, ID, and salary.",,"class Employee:
    def __init__(self, name, id, salary):
        self.name = name
        self.id = id
        self.salary = salary

    def get_name(self):
        return self.name

    def get_id(self):
        return self.id

    def get_salary(self):
        return self.salary","class Employee:
    def __init__(self, name, id, salary):
        self.name = name
        self.id = id
        self.salary = salary

    def get_name(self):
        return self.name

    def get_id(self):
        return self.id

    def get_salary(self):
        return self.salary",correct,Loops
Create a class in Python that calculates the total and average of 3 numbers.,,"class Calculator:
    def __init__(self, num1, num2, num3):
        self.num1 = num1
        self.num2 = num2
        self.num3 = num3

    def total(self):
        return self.num1 + self.num2 + self.num3

    def average(self):
        return self.total() / 3","class Calculator:
def __init__(self, num1, num2, num3):
    self.num1 = num1
    self.num2 = num2
    self.num3 = num3

def total(self):
    return self.num1 + self.num2 + self.num3

def average(self):
    return self.total() / 3",Syntax Error,OOP
Write a function in Python to remove all occurrences of a specific character from a string.,"string = ""computer science""
remove_char = ""c""","def remove_char_from_string(string, remove_char):
    new_string = """"
    for char in string:
        if char != remove_char:
            new_string += char
    return new_string

if __name__ == '__main__':
     string = ""computer science""
     remove_char = ""c""
     print(remove_char_from_string(string, remove_char))","def remove_char_from_string(string, remove_char)
    new_string = """"
    for char in string
        if char != remove_char
            new_string += char
    return new_string

if __name__ == '__main__'
     string = ""computer science""
     remove_char = ""c""
     print(remove_char_from_string(string, remove_char))",Syntax Error,Loops
"Construct a Python program that creates the following string: ""999,888,777,666,555"".",,"# This program creates the string ""999,888,777,666,555"".

# create a list of numbers
list = [999, 888, 777, 666, 555]

# join the values in the list
output = "","".join([str(item) for item in list])

# print the output 
print(output) # Outputs: 999,888,777,666,555","# This program creates the string ""999,888,777,666,555"".

# create a list of numbers
list = [999, 888, 777, 666, 555]

# join the values in the list
output = "","".join([str(item) for item in list])

# print the output 
print(name, output) # Outputs: 999,888,777,666,555",Syntax Error,OOP
Write a function to find the second smallest number in a list.,,"def second_smallest(numbers):
  if (len(numbers)<2):
    return
  if ((len(numbers)==2)  and (numbers[0] == numbers[1]) ):
    return
  dup_items = set()
  uniq_items = []
  for x in numbers:
    if x not in dup_items:
      uniq_items.append(x)
      dup_items.add(x)
  uniq_items.sort()    
  return  uniq_items[1] ","def second_smallest(numbers):
  if (len(numbers)<2):
    return
  if ((len(numbers)==2)  and (numbers[0] == numbers[1]) ):
    return
  dup_items = set()
  uniq_items = []
  for x in numbers:
    if x not in dup_items:
      uniq_items.append(x)
      dup_items.add(x)
  uniq_items.sort()    
  return  uniq_items[1] ",correct,OOP
Rewrite the following CoffeeScript program in Python code.,"coffeeConvert = (x) ->
 x * 60","def coffeeConvert(x):
 return x * 60","def coffeeConvert(x):
 return x * 60",Syntax Error,Recursion
Generate a python program that create a pandas dataframe from a dictionary column.,"data_dict = {'name': ['Bob', 'Alice', 'John'],
             'age': [18, 20, 19]}","import pandas as pd

df = pd.DataFrame(data_dict)","import pandas as pd

df ",Incomplete Answer,OOP
Write an algorithm in Python to find the maximum and minimum elements in a given array of integers.,"[3, 5, 8, 1, 10]","def findMinMax(arr):
    min = arr[0]
    max = arr[0]
    for i in range(1, len(arr)):
        if arr[i] < min:
            min = arr[i]
        elif arr[i] > max:
            max = arr[i]
    return min, max

arr = [3, 5, 8, 1, 10]

min_val, max_val = findMinMax(arr)
print(min_val, max_val)","def findMinMax(arr):
    min = arr[0]
    max = arr[0]
    for i in range(1, len(arr)):
        if arr[i] < min:
            min = arr[i]
        elif arr[i] > max:
            max = arr[i]
    return min, max

arr = [3, 5, 8, 1, 10]

min_val, max_val = findMinMax(arr)
print(min_val, max_val)",correct,Loops
Write a Python script that randomly shuffles a list of strings.,"[""Apple"", ""Orange"", ""Banana"", ""Strawberry""]","import random

list = [""Apple"", ""Orange"", ""Banana"", ""Strawberry""]
random.shuffle(list)

for item in list:
    print(item)","import random

list = [""Apple"", ""Orange"", ""Banana"", ""Strawbe",Incomplete Answer,OOP
Create a Python class to represent a family tree.,,"class FamilyTree:
    def __init__(self):
        self.nodes = []

    def add_node(self, node):
        self.nodes.append(node)

    def get_all_descendants(self, node):
        descendants = []
        for n in self.nodes:
            if n.parent == node:
                descendants.append(n)
                descendants.extend(self.get_all_descendants(n))
        return descendants","class FamilyTree:
    def __init__(self):
        self.nodes = []

    def add_node(self, node):
        self.nodes.append(node)

    def get_all_descendants(self, node):
        descendants = ",Incomplete Answer,OOP
Create a Python program to extract data from webpages using the BeautifulSoup library.,,"from bs4 import BeautifulSoup
import requests

# Get the page
url = 'http://example.com'
page = requests.get(url)

# Use BeautifulSoup for parsing
soup = BeautifulSoup(page.content, 'html.parser')

# Get the data
data = soup.find_all('div', class_='datacontainer')

# Print the data
for item in data:
 print(item.text)","from bs4 import BeautifulSoup
import requests

# Get the page
url = 'http://example.com'
page = requests.get(url)

# Use BeautifulSoup for parsing
soup = Beaut",Incomplete Answer,OOP
Create a class in Python that takes a list of numbers as input and returns the product of all the numbers.,"[5, 4, 9, 10]","class ProductCalculator:
    def __init__(self, num_list):
        self.num_list = num_list
    
    def find_product(self):
        product = 1
        for num in self.num_list:
            product *= num
        return product

# example usage
num_list = [5, 4, 9, 10]
calc = ProductCalculator(num_list)
product = calc.find_product()
print(product)","class ProductCalculator:
    def __init__(self, num_list):
        self.num_list = num_list
    
    def find_product(self):
        product = 1
        for num in self.num_li",Incomplete Answer,OOP
Classify a set of programming language names into high-level languages and low-level languages.,"JavaScript, Python, C, Assembly","High Level Languages: 
1. JavaScript 
2. Python

Low Level Languages: 
1. C 
2. Assembly","High Level Languages: 
1. JavaScript 
2. Python

Low Level Languages: 
1. C 
2. Assembly",Syntax Error,String Manipulation
Can you convert a given HTML page into PDF using Python?,,"from xhtml2pdf import pisa
 
# open the page
with open('input.html', 'r') as f:
    html = f.read()
 
# convert to PDF
pdf = pisa.CreatePDF(html, open('output.pdf', 'wb'))
 
# print the result
if not pdf.err:
    print('PDF created successfully')
else:
    print('Error creating PDF')","from xhtml2pdf import pisa
 
# open the page
with open('input.html', 'r' as f:
    html = f.read(
 
# convert to PDF
pdf = pisa.CreatePDF(html, open('output.pdf', 'wb'
 
# print the result
if not pdf.err:
    print('PDF created successfully'
else:
    print('Error creating PDF'",Syntax Error,String Manipulation
Write a python loop to print all the numbers from 1 to 10.,,"for i in range(1,11):
    print(i)","for i in range(1,",Incomplete Answer,Loops
You need to generate a function in Python that takes a word and prints out the number of vowels in that word.,,"def count_vowels(word):
    vowels = 'aeiou'
    count = 0
    for char in word:
        if char in vowels:
            count += 1
    return count","def count_vowels(word)
    vowels = 'aeiou'
    count = 0
    for char in word
        if char in vowels
            count += 1
    return count",Syntax Error,Recursion
Design a Python class to represent a Tic-Tac-Toe game board.,,"class TicTacToe:
    def __init__(self):
        self.board = [['-' for x in range (3)] for y in range(3)]

    def print_board(self):
        for row in range(3):
            print(' | '.join(self.board[row]))

    def make_move(self, x,y, mark):
        self.board[x][y] = mark","class TicTacToe:
    def __init__(self):
        self.board = [['-' for x in range (3)] for y in range(3)]

    def print_board(self):
    ",Incomplete Answer,File I/O
Write a Python program to detect cycles in a type of linked list.,,"def detect_cycles(head): 
    slow_p = head 
    fast_p = head 

    while slow_p and fast_p and fast_p.next: 
        slow_p = slow_p.next
        fast_p = fast_p.next.next

        if slow_p == fast_p: 
            return True 

    return False","def detect_cycles(head): 
    slow_p = head 
    fast_p = head 

    while slow_p and fast_p and fast_p.next: 
        slow_p = slow_p.next
        fast_p = fast_p.next.next

        if slow_p == fast_p: 
            return True 

    return False",correct,OOP
"Create a script in Python which receives a list of numbers, and prints the sorted list in ascending order.","List of numbers: [7, 3, 4, 2]","list_of_numbers = [7, 3, 4, 2]

# sort the list
list_of_numbers.sort()

# print the sorted list
print(list_of_numbers)","list_of_numbers = [7, 3, 4, 2]

# sort the list
list_of_numbers.sort()

# print the sorted list
print(list_of_numbers)",Syntax Error,File I/O
Develop a Python program to find and print the first non-repeating character from a given string.,"""Hello, world!""","def non_repeating_character(string):
    for c in string:
        if string.count(c) == 1:
            return c
    return 'No result'

print(non_repeating_character('Hello, world!'))","def non_repeating_character(string:
    for c in string:
        if string.count(c == 1:
            return c
    return 'No result'

print(non_repeating_character('Hello, world!'",Syntax Error,Loops
Transform the following Python code to achieve the same result with better performance,"def classify_number_bigger_5(number):
    result = []
    for n in number:
        if n > 5:
            result.append(1)
        else:
            result.append(0)
    return result","def classify_number_bigger_5(number):
    return [1 if n > 5 else 0 for n in number]","def classify_number_bigger_5(number):
    return [1 if n > 5 else 0 for n in number]",Syntax Error,String Manipulation
"Given a list of numbers, create a program to find the maximum number using Python.","numbers = [1,2,3,4,5,6]","def find_max(numbers):
    maximum = numbers[0]
    for num in numbers:
        if num > maximum:
            maximum = num
    return maximum

if __name__ == ""__main__"":
    numbers = [1,2,3,4,5,6]
    print(find_max(numbers))","def find_max(numbers):
    maximum = numbers[0]
    for num in numbers:
        if num > maximum:
            max",Incomplete Answer,String Manipulation
Generate a Python program to insert an element into a given sorted array.,"The sorted array is [1, 2, 3, 5] and the new element is 4.","def insert(arr, x):
    i = len(arr)-1
    while (i >= 0 and x < arr[i]):
        arr[i+1] = arr[i]
        i = i-1
    arr[i+1] = x
    return arr
  
# Input array and element 
arr = [1, 2, 3, 5] 
x = 4
  
# Calling Insert Function 
arr = insert(arr, x) 
  
# Print the modified array 
print(arr)","def insert(arr, x):
    i = len(arr)-1
    while (i >= 0 and x < arr[i]):
        arr[i+1] = arr[i]
        i = i-1
    arr[i+1] = x
    return arr
",Incomplete Answer,Loops
Generate a Python function that takes two integer arguments and returns the greatest of them.,,"def greatest_of_two_integers(x, y):
    if x > y:
        return x
    elif y > x:
        return y
    else:
        return x","def greatest_of_two_integers(x, y):
    if x > y:
        retur",Incomplete Answer,Loops
"Write a Python program to print out the Fibonacci sequence, up to the 100th number in the sequence.",,"def fibonacci(n):
 a, b = 0, 1
 while a < n:
 print(a, end=' ')
 a, b = b, a + b
 print()

fibonacci(100)","def fibonacci(n:
 a, b = 0, 1
 while a < n:
 print(a, end=' '
 a, b = b, a + b
 print(

fibonacci(100",Syntax Error,Recursion
Write a Python program to compare two lists of numbers and return any combination of numbers that occur in both lists.,"list1=[1,2,3,4,5,6]
list2=[3,4,5,7,8,9]","combinedList = [] 

for num1 in list1:
 for num2 in list2:
 if num1 == num2:
 combinedList.append(num1)

print(combinedList) # [3,4,5]","combinedList = [] 

for num1 in list1:
 for num2 in list2:
 if num1 == num2:
 combinedList.append(num1

print(combinedList # [3,4,5]",Syntax Error,Recursion
Generate a program in python that converts a given sequence of strings into a list,"""This is a test""","def convert_str_list(x):
    return x.split()

print(convert_str_list(""This is a test""))","def convert_str_list(x):
    return x.split(",Incomplete Answer,OOP
Create a Python synthetic dataset including 1000 samples and 10 continuous attributes.,,"import numpy as np

# set seed for generating random numbers
np.random.seed(101)

# number of samples and attributes
n_samples = 1000
n_attributes = 10

# generate random samples
data = np.random.rand(n_samples, n_attributes)","import numpy as np

# set seed for generating random numbers
np.random.seed(101)

# number of samples and attrib",Incomplete Answer,File I/O
Generate a code in Python to print the length of the given string.,Hello world,"string = 'Hello world'

# print the length of string
print(len(string))","string = 'Hello world'

# print the",Incomplete Answer,Loops
"Design a Python class for a 'Movie' object that contains a movie title, release year, and rating.",,"class Movie:
    def __init__(self, title, year, rating):
        self.title = title
        self.year = year
        self.rating = rating","class Movie:
    def __init__(self, title, year, rating):
        sel",Incomplete Answer,File I/O
Suggest a Python code to identify the median element of a given list,"example_list = [10,20,30,40]","def find_median(example_list):
    example_list.sort()
    if len(example_list) % 2 == 0:
        median = (example_list[int(len(example_list)/2)-1] + example_list[int(len(example_list)/2)])/2
    else:
        median = example_list[int((len(example_list)-1)/2)]
    return median","def find_median(example_list):
    example_list.sort()
    if len(example_list) % 2 == 0:
        median = (example_list[int(len(example_list)/2)-1] + example_list[int(len(example_list)/2)])/2
    else:
        median = example_list[int((len(example_list)-1)/2)]
    return median",correct,String Manipulation
Implement an algorithm in Python to sort a list of integers.,"List: [3, 9, 8, 5, 6, 4, 2, 1, 10, 7]","def sort(arr):
 for i in range(len(arr)):
 min_idx = i
 for j in range(i+1, len(arr)):
 if arr[min_idx] > arr[j]:
 min_idx = j
 arr[i], arr[min_idx] = arr[min_idx], arr[i]

list = [3, 9, 8, 5, 6, 4, 2, 1, 10, 7]
sort(list)
print(list) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def sort(arr)
 for i in range(len(arr))
 min_idx = i
 for j in range(i+1, len(arr))
 if arr[min_idx] > arr[j]
 min_idx = j
 arr[i], arr[min_idx] = arr[min_idx], arr[i]

list = [3, 9, 8, 5, 6, 4, 2, 1, 10, 7]
sort(list)
print(list) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",Syntax Error,OOP
Design a class in Python to store details of a person,"Name: John
Age: 34","class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

person = Person('John', 34)","class Person:
def __init__(self, name, age):
    self.name = name
    self.age = age

person = Person('John', 34)",Syntax Error,String Manipulation
Create a python program that takes a string and prints the reverse of it.,Hello,"""""""
Create a python program that takes a string and prints the reverse of it
""""""

# Get the input string 
my_string = input('Enter a string: ') 

# Reverse the string 
rev_string = my_string[::-1] 

# Print the reversed string
print(rev_string)","""""""
Create a python program that takes a string and prints the reverse of it
""""""

# Get the input string 
my_string = input('Enter a string: ') 

# Reverse the string 
rev_string = my_string[::-1] 

# Print the reversed string
print(rev_string)",correct,Recursion
Generate a function in Python to return the highest value in a dictionary for the given key.,"dictionary = {'A': 10, 'B': 20, 'C': 30, 'D': 40}","def highestValue(dictionary, key): 
    highest = 0 
    for key,value in dictionary.items(): 
        if value > highest: 
            highest = value 
    return highest 

highestValue(dictionary, key)","def highestValue(dictionary, key): 
    highest = 0 
    for key,value in dictionary.items(): 
        if value > highest: 
            highest = value 
    return highest 

highestValue(dictionary, key)",correct,File I/O
Design a Python program to reverse the words in a sentence.,The quick brown fox,"def reverse_words(sentence):
    words = sentence.split("" "")
    reversed_words = reversed(words)
    reversed_sentence = "" "".join(reversed_words)
    return reversed_sentence

result = reverse_words(""The quick brown fox"")
print(result)","def reverse_words(sentence):
    words = sentence.split("" "")
    reversed_words = reversed(words)
    reversed_sentenc",Incomplete Answer,File I/O
"Using regular expression, construct a pattern in Python to identify strings of the form ""word1word2word3word4word5"".",,"import re
pattern = r""\b(\w+)\b(\w+)\b(\w+)\b(\w+)\b(\w+)\b""","import re
pattern = r""\b(\w+)\b(\w+)\b(\w+)\b(\w+)\b(\w+)\b""",correct,OOP
Develop a Python program to count the frequency of each word in a given string.,"string = ""This is a string""","def countFreq(str): 
      
    # break the string into words  
    str = str.split("" "")  
      
    # Count each word using Dictionary  
    freq = {} 
    for word in str: 
        if word in freq: 
            freq[word] += 1
        else: 
            freq[word] = 1
    return freq","def countFreq(str): 
      
    # break the string into words  
    str = str.split("" "")  
      
    # Count each word using Dictionary  
    freq = {} 
    for word in str: 
        if word in freq: 
            freq[word] += 1
        else: 
            freq[word] = 1
    return freq",correct,Recursion
Implement a program in Python to generate a multiplication table for the given integer.,,"def multiplication_table(n): 
  
    for i in range(1, 11): 
        print(""{0:>2} X {1:2} = {2:2}"".format(n, i, n*i)) 
  
multiplication_table(6)","def multiplication_table(n): 
  
    for i in range(1, 11): 
        prin",Incomplete Answer,String Manipulation
Write a Python program to find the maximum possible sum of a sequence of consecutive numbers in a given array of integers.,"[2, 6, -2, -3, 8, 4]","def max_sum_sequence(arr):
    curr_max = 0
    max_so_far = 0
  
    for i in range(0, len(arr)):
        curr_max = max(arr[i], curr_max + arr[i])
        max_so_far = max(max_so_far, curr_max)
      
    return max_so_far

arr = [2, 6, -2, -3, 8, 4]
max_sum = max_sum_sequence(arr)
print(max_sum)","def max_sum_sequence(arr):
    curr_max = 0
    max_so_far = 0
  
    for i in range(0, len(arr)):
        curr_max = max(arr[i], curr_max + arr[i])
",Incomplete Answer,Loops
Generate an optimized python program to calculate the sum of all digits in a given positive integer number.,123456,"input_number = 123456 

def find_sum_of_digits(number): 
    n = number 
    sum = 0
    while n > 0:
        sum += n % 10
        n //= 10
    return sum 

sum_of_digits = find_sum_of_digits(input_number) 
print(""Sum of all digits in {} is {}."" .format(input_number,sum_of_digits))","input_number = 123456 

def find_sum_of_digits(number): 
    n = number 
    sum = 0
    while n > 0:
        sum += n % 10
        n //= 10
    return sum 

sum_of_digits = find_sum_of_digits(input_number) 
print(""Sum of all digits in {} is {}."" .format(input_number,sum_of_digits))",correct,OOP
Create a code snippet in Python that calculates the sum of the digits of a number.,123,"def sum_of_digits(number):
  sum_digits = 0
  while number > 0:
    sum_digits += (number % 10)
    number //= 10
  return sum_digits
  
print(sum_of_digits(123))","def sum_of_digits(number:
  sum_digits = 0
  while number > 0:
    sum_digits += (number % 10
    number //= 10
  return sum_digits
  
print(sum_of_digits(123",Syntax Error,Loops
Create a function in Python to return the media according to the following criteria:,"Given a list of numbers [1, 4, 7, 8, 10, 15, 21],","def get_median(num_list):
    sorted_list = sorted(num_list)
    length = len(sorted_list)
    if (length % 2 == 0):
        median = (sorted_list[length//2] + sorted_list[length//2 -1])/2.0
    else:
        median = sorted_list[length//2]
    return median","def get_median(num_list):
    sorted_list = sorted(num_list)
    length = len(sorted_list)
    if (length % 2 == 0):
        median = (sorted_list[length//2] + sorted_list[length//2 -1])/2.0
    else:
        median = sorted_list[length//2]
    return median",correct,File I/O
Create a Python program to sort a given list according to the second element,"list = [[2,4], [3,2], [4,1], [1,3]]","def sortList(list):
    list.sort(key=lambda x: x[1]) 
    return list

list = [[2,4], [3,2], [4,1], [1,3]]
sorted_list = sortList(list)

print(sorted_list)

# output
[[4, 1], [3, 2], [1, 3], [2, 4]]","def sortList(list):
list.sort(key=lambda x: x[1]) 
return list

list = [[2,4], [3,2], [4,1], [1,3]]
sorted_list = sortList(list)

print(sorted_list)

# output
[[4, 1], [3, 2], [1, 3], [2, 4]]",Syntax Error,Recursion
Write a function in Python to sort the data in lexicographical order.,"[""red"", ""blue"", ""green"", ""purple"", ""pink"", ""black"", ""white""]","def sortLexicographical(data):
    return sorted(data, key=lambda x:x[0])

sorted_data = sortLexicographical([""red"", ""blue"", ""green"", ""purple"", ""pink"", ""black"", ""white""])
print(sorted_data)","def sortLexicographical(data):
    return sorted(data, key=lambda x:x[0])

sorted_data = sortL",Incomplete Answer,File I/O
"Write a function in Python to generate a list of integers from 0 to 10,000, inclusive.",,"def generate_list():  
  my_list = []
  for i in range(0, 10001):
    my_list.append(i)

  return my_list","def generate_list():  
  my_list = []
  for i in range(0, 10001):
    my_list.append(i)

  return my_list",Syntax Error,OOP
Construct a Python program that prints out all the numbers from 1 to a given number n.,,"def print_numbers(n):
 for num in range(1, n+1):
 print(num)","def print_numbers(n):
 for num",Incomplete Answer,Recursion
Craft a Python function to convert a given string to an integer,,"def string_to_int(string):
    result = 0
    for char in string:
        result = result*10 + (ord(char) - ord('0')) 
    return result","def string_to_int(string):
    result = 0
    for char in string:
  ",Incomplete Answer,String Manipulation
Write a function to find the list of lists with minimum length.,,"def min_length(list1):
   min_length = min(len(x) for x in  list1 )  
   min_list = min((x) for x in   list1)
   return(min_length, min_list)     ","def min_length(list1):
   min_length = min(len(x) for x in  list1 )  
   min_list = min((x) for x in   list1)
   return(min_length, min_list)     ",Syntax Error,Loops
Design a recursive Python function that prints the Fibonacci series from 0 to n.,7,"def fibonacci(n):
  if n == 0:
    return 0
  elif n == 1:
    return 1
  else:
    return fibonacci(n - 1) + fibonacci(n - 2)
    
for i in range(0, n + 1):
    print(fibonacci(i))","def fibonacci(n)
  if n == 0
    return 0
  elif n == 1
    return 1
  else
    return fibonacci(n - 1) + fibonacci(n - 2)
    
for i in range(0, n + 1)
    print(fibonacci(i))",Syntax Error,OOP
Construct a for-loop in Python to repeat a code snipet 10 times.,,"for i in range(10):
    print(""This code is being repeated 10 times"")","for i in range(10):
    print(""Thi",Incomplete Answer,Loops
Write a function to find the n - cheap price items from a given dataset using heap queue algorithm.,,"import heapq
def cheap_items(items,n):
  cheap_items = heapq.nsmallest(n, items, key=lambda s: s['price'])
  return cheap_items","import heapq
def cheap_items(items,n):
  cheap_items = heapq.ns",Incomplete Answer,Recursion
Create a basic web scraper in Python to parse HTML.,<p>This is some text</p><a href='www.example.com/'>Click Here</a>,"#import library
import bs4

#store HTML data
html_data = '<p>This is some text</p><a href='www.example.com/'>Click Here</a>'

#parse HTML data
soup = bs4.BeautifulSoup(html_data, 'html.parser')

#get all tags
all_tags = soup.find_all()

#print result
for tag in all_tags:
 print(tag)","#import library
import bs4

#store HTML data
html_data = '<p>This is some text</p><a href='www.example.com/'>Click Here</a>'

#parse HTML data
soup = bs4.BeautifulSoup(html_data, 'html.parser'

#get all tags
all_tags = soup.find_all(

#print result
for tag in all_tags:
 print(tag",Syntax Error,String Manipulation
"Given a list of [x,y] coordinates, write a Python program to check whether the two points are on a straight line or not.","points = [[3,3], [2,2], [1,1]]","def line_checker(points):
    is_straight = True
    ref_x, ref_y = points[0]
    for i in range(1, len(points)):
        x, y = points[i]
        if (ref_y - y) * (ref_x - x) != 0:
            is_straight = False
            break
    return is_straight

points = [[3,3], [2,2], [1,1]]

print(line_checker(points))","def line_checker(points):
    is_straight = True
    ref_x, ref_y = points[0]
    for i in range(1, len(points)):
        x, y = points[i]
        if (ref_y ",Incomplete Answer,OOP
Create a basic Python application that prints out the prime numbers between 0 and 1000.,,"primes = []

for num in range(2, 1001):  
  
 for i in range(2, num):
  if (num % i) == 0:
   break
 else:
  primes.append(num)

print(primes)","primes = []

for num in range(2, 1001):  
  
 for i in range(2, num):
  if (num % i) == 0:
   break
 else:
  primes.append(num)

print(name, primes)",Syntax Error,Recursion
Edit the given python program to display the sum of all even numbers in the given list.,"list = [1, 2, 3, 4, 5]","list = [1, 2, 3, 4, 5]

total = 0
for num in list:
  if (num % 2 == 0):
    total += num
print (total)","list = [1, 2, 3, 4, 5]

total = 0
for num in list:
  if (num % 2 == 0:
    total += num
print (total",Syntax Error,Recursion
"Write a loop in Python to print the words ""hello world"" 3 times.",,"for i in range(3):
    print(""Hello World"")","for i in range(3):
  ",Incomplete Answer,OOP
Convert the following Python function to C++,"def sum_list(numbers):
    result = 0
    for n in numbers:
        result += n
    return result","int sum_list(vector<int>& numbers) {
  int result = 0;
  for (auto& n : numbers) {
    result += n;
  }
  return result;
}","int sum_list(vector<int>& numbers) {
  int result = 0;
  for (auto& n : numbers) {
    result += n;
  }
  return result;
}",correct,File I/O
Create a function for adding two numbers in Python.,,"def add(num1, num2):
    return num1 + num2

print(add(1, 2))","def add(num1, num2):
    return num1 + num2

print(add(1, 2))",correct,OOP
Assign a constant to the value of Pi in a Python program.,,PI = 3.141592653589793,PI = 3.141592653589793,Syntax Error,Recursion
Create a python function to calculate the factorial of a integer input.,,"def factorial(n):
    """"""Calculate the factorial of an integer.""""""
    if n <= 1:
        return 1
    return n*factorial(n-1)","def factorial(n):
    """"""Calculate the factorial of an integer.""""""
    if n <= 1:
        return 1
    return n*factorial(n-1)",Syntax Error,Loops
Generate a Python function that takes as input a UTF-8 encoded string and returns a string where the characters in odd positions of the original string are repeated.,string = ‘HelloWorld’,"def repeat_char(s):
    result = ''
    for i,c in enumerate(s):
        if i % 2 == 0:
            result += c
        else:
            result += c*2
    return result

print(repeat_char('HelloWorld'))
# Output: HeellooWorrlld","def repeat_char(s):
    result = ''
    for i,c in enumerate(s):
        if i % 2 == 0:
            result += c
        else:
            result += c*2
    return result

pritn(repeat_char('HelloWorld'))
# Output: HeellooWorrlld",Syntax Error,Recursion
Design a function in Python to sort a list of numbers in increasing order using a recursive insertion sort algorithm.,"[3, 7, 4, 9, 5, 2, 6, 1]","def recursiveInsertionSort(arr):
    for i in range(1, len(arr)):
        currElem = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > currElem:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = currElem
    return arr","def recursiveInsertionSort(arr):
    for i in range(1, len(arr)):
        currElem = arr[i]
        j = i - 1
        while ",Incomplete Answer,String Manipulation
Generate a program in Python for sorting the elements of an array in descending order.,"[2, 4, 1, 6, 5]","def sort_descending(arr):
    # Sort array from largest to smallest
    arr.sort(reverse=True)

    # Print result
    print(arr)

# Test
arr = [2, 4, 1, 6, 5]
sort_descending(arr)
# Output: [6, 5, 4, 2, 1]","def sort_descending(arr)
    # Sort array from largest to smallest
    arr.sort(reverse=True)

    # Print result
    print(arr)

# Test
arr = [2, 4, 1, 6, 5]
sort_descending(arr)
# Output [6, 5, 4, 2, 1]",Syntax Error,OOP
Create a Python program to check if a given sentence is a pangram or not. A pangram is a sentence that contains all the letters of the alphabet at least once.,,"import string

def is_pangram(sentence):
    sentence = sentence.lower()
    alphabet = string.ascii_lowercase
    for letter in alphabet:
        if letter not in sentence:
            return False
    return True","import string

def is_pangram(sentence):
    sentence = sentence.lower()
    alphabet = string.ascii_lowerc",Incomplete Answer,File I/O
Develop a Python function that removes duplicate elements from a given list and returns a list with unique elements.,"my_list = [1,2,3,3,4,5,5,5,6,7,7]","def remove_duplicates(my_list):
 new_list = []

 for item in my_list:
 if item not in new_list:
 new_list.append(item)

 return new_list

my_list = [1,2,3,3,4,5,5,5,6,7,7]
my_list = remove_duplicates(my_list)
print(my_list)
# [1, 2, 3, 4, 5, 6, 7]","def remove_duplicates(my_list):
 new_list = []

 for item in my_list:
 if item not in new_list:
 new_list.append(item)

 return new_list

my_list = [1,2,3,3,4,5,5,5,6,7,7]
my_list = remove_duplicates(my_list)
print(my_list)
# [1, 2, 3, 4, 5, 6, 7]",correct,OOP
Create a list of even numbers from 0 to 30 in one line of Python.,,"even_numbers = [num for num in range(0, 31) if num % 2 == 0]",even_numbers = [num for num in,Incomplete Answer,Recursion
Generate a random number in Python between 2 inclusive numbers.,"int min = 1;
int max = 6;","import random

num = random.randint(min, max)
print(num)","import random

num = random.randint(min, max)
print(num)",Syntax Error,Loops
Port a Java code snippet to Python 3.,"public class Foo {
  public int foo( int a, int b ) {
    return a + b;
  }
}","def foo(a, b):
 return a + b","def foo(a, b):
 return a + b",Syntax Error,String Manipulation
Write a Python program to generate a bar chart visualizing a dataset.,"data = [3, 5, 2, 8, 9, 10]","import matplotlib.pyplot as plt

#create data
data = [3, 5, 2, 8, 9, 10]

#set plot size
plt.figure(figsize=(5, 2))

#generate the bar chart
plt.bar([str(i) for i in range(1, len(data)+1)], data)
plt.show()","import matplotlib.pyplot as plt

#create data
data = [3, 5, 2, 8, 9, 10]

#set plot size
plt.figure(fig",Incomplete Answer,Loops
Suggest a completion for the following Python code so that it prints all the numbers between 0 and 10 (inclusive).,for num in range(11),"for num in range(11):
    print(num)",for num in range(1,Incomplete Answer,Recursion
Create a Python function to calculate the volume of a cube by taking its side length as input.,side_length = 5,"def cube_volume(side_length):
    return side_length ** 3

volume = cube_volume(side_length)
print(f""Volume of cube is {volume}"")","def cube_volume(side_length:
    return side_length ** 3

volume = cube_volume(side_length
print(f""Volume of cube is {volume}""",Syntax Error,File I/O
Create a hierarchical clustering algorithm in Python to group data points into clusters.,"data_points=[1,2,3,4,5]","import numpy as np
from scipy.cluster.hierarchy import dendrogram, linkage

# define the data points
data_points = np.array([1,2,3,4,5])

# create the linkage matrix
linkage_matrix = linkage(data_points, 'ward')

# generate the dendrogram
dendrogram(linkage_matrix)","import numpy as np
from scipy.cluster.hierarchy import dendrogram, linkage

# define the data points
data_points = np.array([1,2,3,4,5])

# create the linkage matrix
linkage_matrix = linkage(data_points, 'ward')

# generate the dendrogram
dendrogram(linkage_matrix)",correct,Recursion
Create a Python script to split a string into an array of substrings based on a given delimiter.,"text = ""one-two-three-four""","def split(text, delimiter):
  substring = []
  temp = """"
   
  for i in text:
    if i != delimiter:
      temp += i
    else:
      substring.append(temp)
      temp = """"
  substring.append(temp)
  
  return substring
    
text = ""one-two-three-four""
print(""Original String: ""+text)

print(""Split String:"",split(text,'-'))","def split(text, delimiter):
  substring = []
  temp = """"
   
  for i in text:
    if i != delimiter:
      temp += i
    else:
      substring.append(temp)
     ",Incomplete Answer,String Manipulation
Write a python program that generates a random IP address.,,"import random

def generate_random_IP():
    ip = """"
    for i in range(4):
        ip += str(random.randint(0, 255))
        if i != 3:
            ip += "".""
    return ip","import random

def generate_random_IP():
    ip = """"
    for i in range(4):
        ip += str(random.randint(0, 255))
        if i != 3:
            ip += "".""
    return ip",Syntax Error,OOP
Write a function to find whether an array is subset of another array.,,"def is_subset(arr1, m, arr2, n): 
	hashset = set() 
	for i in range(0, m): 
		hashset.add(arr1[i]) 
	for i in range(0, n): 
		if arr2[i] in hashset: 
			continue
		else: 
			return False
	return True		","def is_subset(arr1, m, arr2, n: 
	hashset = set( 
	for i in range(0, m: 
		hashset.add(arr1[i] 
	for i in range(0, n: 
		if arr2[i] in hashset: 
			continue
		else: 
			return False
	return True		",Syntax Error,String Manipulation
Optimize the following Python code by replacing the two for loops with one.,"list1 = [1,2,3]
list2 = [4,5,6]
for i in list1:
  for j in list2:
    print(i * j)","list1 = [1,2,3]
list2 = [4,5,6]
 
for i,j in zip(list1, list2):
    print(i * j)","list1 = [1,2,3]
list2 = [4,5,6]
 
for i,j in zip(list1, list2):
    print(i * j)",correct,Recursion
Write a method in Python to check whether two strings are an anagram of each other.,"string1 = ""abcde"";
string2 = ""edcba"";","def isAnagram(string1, string2):
 s1 = sorted(string1)
 s2 = sorted(string2)
 
 return s1 == s2","def isAnagram(string1, string2):
 s1 = sorted(string1)
 s2 = sorted(string2)
 
 return s1 == s2",Syntax Error,Recursion
Create an algorithm in Python to calculate the sum of all numbers between two given numbers.,"10, 20","def sumInRange(lower_limit, upper_limit): 
    
    # initialize sum variable 
    sum = 0; 
  
    # calculate sum of all numbers between 
    # lower_limit & upper_limit 
    for i in range(lower_limit, upper_limit + 1): 
        sum += i 
    
    # return the output 
    return sum;","def sumInRange(lower_limit, upper_limit): 
    
    # initialize sum variable 
    sum = 0; 
  
    # calculate sum of all numbers between 
   ",Incomplete Answer,String Manipulation
Create an optimized Python program to print all prime numbers in a given range.,Apr-15,"def is_prime(n):
    if n <= 1:
        return False
  
    for i in range(2, n):
        if n % i == 0:
            return False
  
    return True
 
start = 4
end = 15
 
for num in range(start, end+1):
   if is_prime(num):
       print(num)","def is_prime(n):
    if n <= 1:
        return False
  
    for i in range(2, n):
        if n % i == 0:
            retu",Incomplete Answer,Loops
"Create a Python program to generate random passwords that contains numbers, alphabets (upper and lower) and special characters",,"import random
 
# define string of all characters
string = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~<>?'
 
# specify length of random password
length = 8
 
# generate random password
random_password = """"
for i in range(length):
    random_password = random_password + random.choice(string)

print(random_password)","import random
 
# define string of all characters
string = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~<>?'
 
# specify length of random passw",Incomplete Answer,Recursion
Edit the following Python program to remove the redundant lines.,"def foo(list):        
    list.append(1)         
    list.append(2)
    list.append(3)       
    list.append(1)
    list.append(2)
    return list

list = [1, 2, 3]","def foo(list):        
    list.append(1)         
    list.append(2)
    list.append(3)
    return list

list = [1, 2, 3]","def foo(list):        
list.append(1)         
list.append(2)
list.append(3)
return list

list = [1, 2, 3]",Syntax Error,Recursion
Write a Python program to combine two lists by alternating elements,"list1 = [11, 22, 33] 
list2 = [1, 2, 3]","def combine_list(list1, list2):
  combined_list = []
  for i in range(max(len(list1), len(list2))):
    if i < len(list1):
      combined_list.append(list1[i])
    if i < len(list2):
      combined_list.append(list2[i])
  return combined_list","def combine_list(list1, list2)
  combined_list = []
  for i in range(max(len(list1), len(list2)))
    if i < len(list1)
      combined_list.append(list1[i])
    if i < len(list2)
      combined_list.append(list2[i])
  return combined_list",Syntax Error,Loops
Create a Python function that prints the next prime number after a given number.,19,"def is_prime(n):
 
 if n <= 1:
 return False
 
 for i in range(2, int(n**0.5)+1):
 if n % i == 0:
 return False
 
 return True
 
 
def next_prime(num):
 
 if is_prime(num):
 num += 1
 
 while (True):
 if is_prime(num):
 return num
 
 num += 1
 
 
num = 19
print(next_prime(num))
# Output: 23","def is_prime(n)
 
 if n <= 1
 return False
 
 for i in range(2, int(n**0.5)+1)
 if n % i == 0
 return False
 
 return True
 
 
def next_prime(num)
 
 if is_prime(num)
 num += 1
 
 while (True)
 if is_prime(num)
 return num
 
 num += 1
 
 
num = 19
print(next_prime(num))
# Output 23",Syntax Error,String Manipulation
Create a list in Python that stores the names of 10 different fruits.,,"fruits = ['apple', 'banana', 'grape', 'pineapple', 'strawberry', 'orange', 'mango', 'pear', 'peach', 'kiwi']","fruits = ['apple', 'banana', 'grape', 'pineapple', 'strawberry', 'orange', 'mango', 'pear', 'peach', 'kiwi']",correct,Recursion
Create a Python program to read a web page and print all of the links and their text,,"import re
from urllib.request import urlopen

html = urlopen(""http://www.example.com/"").read().decode('utf-8')
links = re.findall(""<a href=(.*?)>(.*?)</a>"", html) 
 
for link in links:
    print(""Link: "", link[0])
    print(""Text: "", link[1])","import re
from urllib.request import urlopen

html = urlopen(""http://www.example.com/"").read().decode('utf-8')
links = re.findall(""<a href=(.*?)>(.*?)</a>"", html) 
 
for link in links:
    print(""Link: "", link[0])
    print(""Text: "", link[1])",correct,Recursion
Write a Python program to find the area of a triangle given its lengths of sides.,"a = 7, b = 6, c = 8","def triangle_area(a, b, c): 
	s = (a + b + c) / 2
	return (s*(s-a)*(s-b)*(s-c)) ** 0.5

result = triangle_area(7, 6, 8)
print(result)","def triangle_area(a, b, c): 
	s = (a + b + c) / 2
	return (s*(s-a)*(s-b)*(s-c)) ** 0.5

result = triangle_area(7, 6, 8)
print(result)",Syntax Error,OOP
"Write a script in Python to generate random strings containing uppercase, lowercase, and numeric characters up to a length of 8.",,"import random
import string

def random_string(stringLength=8):
    letters_and_numbers = string.ascii_uppercase + string.ascii_lowercase + string.digits
    return ''.join(random.choice(letters_and_numbers) for i in range(stringLength))","import random
import string

def random_string(stringLength=8):
    letters_and_numbers = string.ascii_uppercase + str",Incomplete Answer,String Manipulation
Write a for loop to iterate over the given list in Python.,"list = [3,7,11,13]","for x in list:
    print(x)","for x in list:
    print(x)",correct,Loops
Create a Python program to determine if a given character is an uppercase or lowercase alpha character.,,"def check_alpha_case(char):
    """"""
    Determine if a given character is an uppercase or lowercase alpha character.
    char: the character to be checked
    """"""
    if char.isalpha() and char.isupper():
        return ""uppercase""
    elif char.isalpha() and char.islower():
        return ""lowercase""
    else:
        return False","def check_alpha_case(char):
    """"""
    Determine if a given character is an uppercase or lowercase alpha character.
    char: the character to be checked
    """"""
   ",Incomplete Answer,File I/O
Write a python program to shuffle a given list in random order.,"[3, 8, 2, 5, 4]","import random

def shuffle_list(lst):
    random.shuffle(lst)
    return lst

print(shuffle_list([3, 8, 2, 5, 4])) # prints [2, 3, 5, 4, 8] or any other combination","import random

def shuffle_list(lst):
    random.shuffle(lst)
    return lst

print(shuffle_list([3, 8, 2, 5, 4])) # prints [2, 3, 5, 4, 8] or any other combination",correct,File I/O
Write a Python function to check if a given list of numbers is sorted in ascending order or not.,"list_numbers = [5, 8, 9, 11, 1]","def is_sorted_asc(list_numbers):
 for i in range(len(list_numbers) - 1):
 if list_numbers[i] > list_numbers[i + 1]:
 return False
 return True
 
result = is_sorted_asc(list_numbers)
print(result) # False","def is_sorted_asc(list_numbers)
 for i in range(len(list_numbers) - 1)
 if list_numbers[i] > list_numbers[i + 1]
 return False
 return True
 
result = is_sorted_asc(list_numbers)
print(result) # False",Syntax Error,OOP
Write a function to extract the frequency of unique tuples in the given list order irrespective.,,"def extract_freq(test_list):
  res = len(list(set(tuple(sorted(sub)) for sub in test_list)))
  return (res)","def extract_freq(test_list):
  res = len(list(set(tuple(sorted(sub)) for sub in test_list)))
  return (res)",Syntax Error,File I/O
Transform the following code from JavaScript to Python.,"if (cur_price > max_price) {
  max_price = cur_price;
}","if cur_price > max_price:
  max_price = cur_price","if cur_price > max_price:
  max_price = cur_price",correct,Loops
Write a function to find the union of elements of the given tuples.,,"def union_elements(test_tup1, test_tup2):
  res = tuple(set(test_tup1 + test_tup2))
  return (res) ","def union_elements(test_tup1, test_tup2):
  res =",Incomplete Answer,Recursion
Write a function in Python that returns an object of the following time and date: Sunday March 7 5:30 PM.,,"from datetime import datetime

def get_date_time():
    dt = datetime(year=2021, month=3, day=7, hour=17, minute=30)
    return dt

date_time = get_date_time()
print(date_time) # will output 2021-03-07 17:30:00","from datetime import datetime

def get_date_time():
    dt = datetime(year=2021, month=3, day=7, hour=17, minute=30)
    return dt

date_time = get_date_time()
print(name, date_time) # will output 2021-03-07 17:30:00",Syntax Error,Loops
Generate Python code to print the following output.,,"for i in range(1, 6):
  for j in range(i):
    print(""*"", end="""")
  print()","for i in range(1, 6):
  for j in rang",Incomplete Answer,Loops
Update a given MongoDB document using Python.,"db.collection.updateOne(
    { ""name"": ""John Doe"" },
    {
        $set:{
            ""age"": 28
        }
    }
)","import pymongo

# Open connection
client = pymongo.MongoClient(""mongodb://localhost:27017/"")
db = client[""mydatabase""]

# Update document
db.collection.update_one(
    {""name"": ""John Doe""},
    {""$set"": {""age"": 28}}
)

# Close connection
client.close()","import pymongo

# Open connection
client = pymongo.MongoClient(""mongodb://localhost:27017/"")
db = client[""mydatabase""]

# Update document
db.collection.update_one(
    {""name"": ""John Doe""},
    {""$set"": {""age"": 28}}
)

# Close connection
client.close()",Syntax Error,Loops
Write a Python code snippet to remove the last element from a list.,"example_list = [3, 1, 5, 7, 4, 8, 2]","def remove_last_element(lst):
    last_index = len(lst) - 1
    del lst[last_index]

example_list = [3, 1, 5, 7, 4, 8, 2]
remove_last_element(example_list)
print(example_list) 
# Output: [3, 1, 5, 7, 4, 8]","def remove_last_element(lst)
    last_index = len(lst) - 1
    del lst[last_index]

example_list = [3, 1, 5, 7, 4, 8, 2]
remove_last_element(example_list)
print(example_list) 
# Output [3, 1, 5, 7, 4, 8]",Syntax Error,Recursion
Generate a python code to find the sum of the n terms of a series given the first term and the common ratio,"[a, r], n","def find_sum_series(a, r, n):
    sum = 0
    for i in range(1, n + 1):
        sum = sum + a*(r**(i - 1))
    return sum","def find_sum_series(a, r, n):
    sum = 0
    for i in range(1, n + 1):
        sum = sum + a*(r**(i - 1))
    return sum",Syntax Error,OOP
Construct a function in Python that takes a list of integers and a number and returns the number of occurrences of the number in the list.,,"def count_occurrences(lst, num):
    count = 0
    for item in lst:
        if item == num:
            count += 1
    return count","def count_occurrences(lst, num):
    count = 0
    for item in ls",Incomplete Answer,Recursion
Write a Python program to get the sum of a given array of numbers.,"[1, 2, 3]","def get_sum(nums):
    sum = 0
    for num in nums:
        sum += num
    return sum

result = get_sum([1, 2, 3])
print(result)
# Output: 6","def get_sum(nums):
    sum = 0
    for num in nums:
        sum += num",Incomplete Answer,OOP
Create an algorithm in Python to print the binary representation of a given number.,23,"def binary_rep(num):
    binary_string = """"
    while num>0:
        remainder = num%2
        binary_string = str(remainder) + binary_string
        num = num//2

    print(binary_string)

binary_rep(23) # prints 10111","def binary_rep(num:
    binary_string = """"
    while num>0:
        remainder = num%2
        binary_string = str(remainder + binary_string
        num = num//2

    print(binary_string

binary_rep(23 # prints 10111",Syntax Error,Recursion
Write a Python program to take a string as input and return a new string with all vowels removed.,,"def remove_vowels(string):
    # compile regex
    regex = re.compile('[aeiou]', re.IGNORECASE)
    # replace matching characters with an empty string
    return regex.sub('', string)","def remove_vowels(string):
    # compile regex
    regex = re.compile('[aeiou]', re.IGNOREC",Incomplete Answer,File I/O
Create a Python script to calculate the circumference of a circle given its radius.,radius = 5,"def calc_circumference(radius):
  circumference = 2 * 3.14 * radius
  return circumference
  
circumference = calc_circumference(radius)
print(circumference)","def calc_circumference(radius):
  circumference = 2 * 3.14 * radius
  return c",Incomplete Answer,OOP
"Edit the following Python code to print ""Hello World"" in a loop 10 times.","for i in range(5):
    print(""Hello World"")","for i in range(10):
    print(""Hello World"")","for i in range(10):
    print(name, ""Hello World"")",Syntax Error,OOP
Implement a function in Python that prints the average of the two numbers passed as arguments.,"x=15
y=20","def compute_average(x, y):
	return (x + y) / 2

print(compute_average(x,y))","def compute_average(x, y):
	return (x",Incomplete Answer,OOP
Generate a list of the top 10 common words in a given list of words.,"['Python', 'programming', 'language', 'is', 'powerful', 'and', 'versatile']","from collections import Counter

words = ['Python', 'programming', 'language', 'is', 'powerful', 'and', 'versatile']

word_counts = Counter(words)
top_10 = word_counts.most_common(10)
print (top_10)","from collections import Counter

words = ['Python', 'programming', 'language', 'is', 'powerful', 'and', 'versatile']

word_counts = Counter(words
top_10 = word_counts.most_common(10
print (top_10",Syntax Error,File I/O
Write a python program to filter a list of numbers and remove those that are divisible by 3.,"nums = [12, 14, 16, 18, 20, 21, 24]","def filter_list(nums):
    return [num for num in nums if num % 3 != 0]

print(filter_list(nums)) # Output: [12, 14, 20, 21]","def filter_list(nums:
    return [num for num in nums if num % 3 != 0]

print(filter_list(nums # Output: [12, 14, 20, 21]",Syntax Error,Loops
Design a solution in Python that creates a deep copy of an array of numbers.,"[1,2,3,4,5]","original_list = [1,2,3,4,5]

# Create a copy of the original list
copied_list = original_list[:]

# Modify the copied list so we can verify that it is a deep copy
copied_list[0] = 10

# Print both lists - the original list should be unchanged
print(""Original list:"", original_list)
print(""Copied list:"", copied_list)","original_list = [1,2,3,4,5]

# Create a copy of the original list
copied_list = original_list[:]

# Modify the copied list so we can verify that it is a deep copy
copied_list[0] = 10

# Print both lists - the original list should be unchanged
print(""Original list:"", original_list)
print(""Copied list:"", copied_list)",Syntax Error,File I/O
Write a Python program that takes in a list of strings and prints out the string with the most characters,"[“Hello”, “World”, “How”, “Are”, “You”]","longest_str = """"
for string in list_of_strings:
    if len(string) > len(longest_str):
        longest_str = string

print(longest_str)","longest_str = """"
for string in list_of_strings:
    if len(string) ",Incomplete Answer,File I/O
Create a basic script in Python that can automatically sort a list of items by price.,"items = [
    {
        'name': 'Sprite',
        'price': 1.99
    },
    {
        'name': 'Coca Cola',
        'price': 3.99
    },
    {
        'name': 'Pepsi',
        'price': 2.99
    }
]","items.sort(key=lambda x: x['price'])

print(items)
# Output:
[{'name': 'Sprite', 'price': 1.99},
{'name': 'Pepsi', 'price': 2.99},
{'name': 'Coca Cola', 'price': 3.99}]","items.sort(key=lambda x: x['price'])

print(items)
# Output:
[{'name': 'Sprite', 'pr",Incomplete Answer,Recursion
Design a Python algorithm to merge two sorted lists.,,"def merge_two_lists(list1, list2):
    merged_list = []
        
    while list1 and list2:
        if list1[0] < list2[0]:
            merged_list.append(list1.pop(0))
        else:
            merged_list.append(list2.pop(0))
    merged_list.extend(list1 or list2)
    return merged_list","def merge_two_lists(list1, list2):
    merged_list = []
        
    while list1 and list2:
        if list1[0] < list2[0]:
            merged_list.append(list1.pop(0))
        else:
            merged_list.append(list2.pop(0))
    merged_list.extend(list1 or list2)
    return merged_list",correct,Loops
"Given a list of integers, write a Python function to find the largest consecutive sum of elements in the list.","nums = [1, 2, -5, 9, 0, 10]","def largest_consecutive_sum(nums):
    max_sum = 0
    total_sum = 0
    for num in nums:
        total_sum += num
        if total_sum > max_sum:
            max_sum = total_sum
    return max_sum","def largest_consecutive_sum(nums):
    max_sum = 0
    total_sum = 0
    for num in nums:
        total_sum += num
        if total_sum > max_sum:
            max_sum = total_sum
    return max_sum",correct,Loops
Create a search algorithm in Python that takes two inputs 'word' and 'text' and returns true if the word is present in the text.,"word = ""code""
text = ""Today I wrote some code in Python""","def search(word, text):
    words = text.split()
    for w in words:
        if w == word:
            return True
    return False","def search(word, text):
    words = text.split()
    for w in wor",Incomplete Answer,Loops
Write a Python program to generate a random color palette of five colors.,,"import random

# List of ten random colors
colors = [""#000000"", ""#FFFFFF"", ""#A52A2A"", ""#008080"", ""#DAA520"", ""#008000"", ""#FF00FF"", ""#808080"", ""#800000"", ""#808000"", ""#FFC0CB""]

# Function that randomly selects five colors from the list
def generate_colors():
 random.shuffle(colors)
 palette = colors[:5]
 return palette

# Generates and prints random color palette
print (generate_colors())","import random

# List of ten random colors
colors = [""#000000"", ""#FFFFFF"", ""#A52A2A"", ""#008080"", ""#DAA520"", ""#008000"", ""#FF00FF"", ""#808080"", ""#800000"", ""#808000"", ""#FFC0CB""]

# Function that randomly selects five colors from the list
def generate_colors(:
 random.shuffle(colors
 palette = colors[:5]
 return palette

# Generates and prints random color palette
print (generate_colors(",Syntax Error,Recursion
Create a function in Python that takes two strings as parameters and returns the string that has the longest length.,"string1=""Python""
string2=""Programming""","def longest_string(string1, string2):
    if len(string1) > len(string2):
        return string1
    else:
        return string2

string1=""Python""
string2=""Programming""

print(longest_string(string1, string2))","def longest_string(string1, string2):
    if len(string1) > len(string2):
        return string1
    else:
        return string2

string1=""Python""
string2=""Programming""

print(longest_string(string1, string2))",correct,OOP
Create a web scraper using Python that collects data from the given URL - http://example.com/,http://example.com/,"import requests
from lxml import html

# Get the response
resp = requests.get('http://example.com/')

# Parse the response
doc = html.fromstring(resp.text)

# Extract the data
data = doc.xpath('//div/span/text()')

# Print out the data
print(data)","import requests
from lxml import html

# Get the response
resp = requests.get('http://example.com/')

# Parse the response
doc = html.fromstring(resp.text)

# Extract the data
data = doc.xpath('//div/span/text()')

# Print out the data
pritn(data)",Syntax Error,Recursion
Create a Python program to compute the greatest common divisor (GCD) for two given numbers.,24 and 32,"def gcd(x, y):
 
    # Using Euclidean algorithm 
    while(y): 
        x, y = y, x % y 
  
    return x 
  
# Driver Code 
a = 24
b = 32
  
gcd = gcd(a, b) 
print(""GCD of"", a, ""and"", b, ""is:"", gcd)","def gcd(x, y):
 
    # Using Euclidean algorithm 
    while(y): 
        x, y = y, x % y 
  
    return x 
  
# Driver Code 
a = 24
b = 32
  
gcd = gcd(a, b) 
print(""GCD of"", a, ""and"", b, ""is:"", gcd)",correct,String Manipulation
Compose a program in Python to convert every word of a given string to uppercase letters.,"sentence = ""the quick brown fox jumps over the lazy dog""","def to_uppercase(sentence):
    words = sentence.split(' ')
    new_sentence = []
    for word in words:
        new_sentence.append(word.upper())
    return ' '.join(new_sentence)

if __name__ == '__main__':
    print(to_uppercase(sentence))","def to_uppercase(sentence):
    words = sentence.split(' ')
    new_sentence = []
    for word in words:
        new_sent",Incomplete Answer,OOP
Write a function to find the surface area of a cylinder.,,"def surfacearea_cylinder(r,h):
  surfacearea=((2*3.1415*r*r) +(2*3.1415*r*h))
  return surfacearea","def surfacearea_cylinder(r,h):
  surfacearea=((2*",Incomplete Answer,Loops
Generate python code to encode a given string in base64.,string = 'This is a test string.',"def base64_encode(string):
    encoded_string = base64.b64encode(string.encode('utf-8')) 
    return encoded_string.decode('utf-8')","def base64_encode(string):
    encoded_string = base64.b64encode(string.encode('utf-8')) 
    return encoded_string.decode('utf-8')",correct,OOP
Maxminizing a Black-Box function (Python),"A Black box function:

def black_box (x):
  return x ** 2 + 40","import scipy.optimize

# define the black box function
def black_box(x):
    return x ** 2 + 40

# set the initial parameters 
start = (0, 0)

# minimize the black box function
res = scipy.optimize.minimize(black_box, start, method=""L-BFGS-B"")

# print the result
print(res.x) # prints [0.]","import scipy.optimize

# define the black box function
def black_box(x):
    return x ** 2 + 40

# set the initial parameters 
start = (0, 0)

# minimize the black box function
res = scipy.optimize.minimize(black_box, start, method=""L-BFGS-B"")

# print the result
print(res.x) # prints [0.]",correct,String Manipulation
Write a Python class for Polygon which has the ability to compute the perimeter of a polygon.,,"class Polygon:
    def __init__(self, num_of_sides):
        self.number_of_sides = num_of_sides
        self.sides = [0 for i in range(num_of_sides)]

    def input_sides(self, sides):
        self.sides = sides

    def perimeter(self):
        peri = 0
        for side in self.sides:
            peri += side
        return peri","class Polygon:
    def __init__(self, num_of_sides):
        self.number_of_sides = num_of_sides
        self.sides = [0 for i in range(num_of_sides)]

    def input_sides(self, sides):
        self.sides = sides

    def perimeter(self):
        peri = 0
        for side in self.sides:
            peri += side
        return peri",correct,Recursion
Write a Python code to handle this data loading task.,Problem: Load a CSV file that contains data from multiple sources and store it in a DataFrame.,"import pandas as pd

def load_data(csv_file):
    '''This function will load the CSV file and store the data in a DataFrame'''
    
    data = pd.read_csv(csv_file, sep=',', encoding='utf-8')
    return pd.DataFrame(data)","import pandas as pd

def load_data(csv_file):
    '''This function will load the CSV file and store the data in a DataFrame'''
    
    data = pd.read_csv(csv_file, sep=',', encoding='utf-8')
    return pd.DataFrame(data)",correct,File I/O
Edit this Python function such that it takes an optional parameter x.,"def add_two_numbers(a, b):
    return a + b","def add_two_numbers(a, b, x=0):
    return a + b + x","def add_two_numbers(a, b, x=0):
    return a + b + x",Syntax Error,Loops
Edit the following Python code to make it run without any errors,"def find_sum(x):
  sum = 0;
  for i in x:
      sum += i
  return","def find_sum(x):
    sum = 0
    for i in x:
        sum += i
    return sum","def find_sum(x):
    sum = 0
    for i",Incomplete Answer,Loops
Write a function to insert a given string at the beginning of all items in a list.,,"def add_string(list,string):
 add_string=[string.format(i) for i in  list]
 return add_string","def add_string(list,string):
 add_string=[stri",Incomplete Answer,Recursion
Write a python function to convert a given string list to a tuple.,,"def string_list_to_tuple(str1):
    result = tuple(x for x in str1 if not x.isspace()) 
    return result","def string_list_to_tuple(str1):
    result = tuple(x",Incomplete Answer,Loops
Calculate the square root of 68 using Python.,,"import math

# Calculate the square root of 68
sqrt_num = math.sqrt(68)

# Print the result
print(""The square root of 68 is:"", sqrt_num)","import math

# Calculate the square root of 68
sqrt_num = math.sqrt(68

# Print the result
print(""The square root of 68 is:"", sqrt_num",Syntax Error,Loops
"Create a program in Python to convert a given number of days to years, months and days.",,"def convert_to_ymd(days):
  years = days // 365
  months = (days % 365) // 30
  days = (days % 365) % 30
  return years, months, days","def convert_to_ymd(days):
  years = days // 365
  months = (days % 365) // 30
  days = (days % 365) % 30
  return years, months, days",correct,Loops
Generate a Python code to compute the area of a triangle given its three sides.,"s1 = 3
s2 = 4
s3 = 5","def calculate_area(s1, s2, s3):
    # calculate the semi-perimeter
    s = (s1 + s2 + s3) / 2
    # calculate area using Heron's formula
    area = (s*(s-s1)*(s-s2)*(s-s3)) ** 0.5
    return area

if __name__==""__main__"":
    s1 = 3
    s2 = 4
    s3 = 5
    area = calculate_area(s1, s2, s3)
    print(""Area of triangle is: {:.2f}"".format(area))","def calculate_area(s1, s2, s3):
    # calculate the semi-perimeter
    s = (s1 + s2 + s3) / 2
    # calculate area using Heron's formula
    area = (s*(s-s1)*(s-s2)*(s-s3)) ** 0.5
    return area

if __name__==""__main__"":
    s1 = 3
    s2 = 4
    s3 = 5
    area = calculate_area(s1, s2, s3)
    pritn(""Area of triangle is: {:.2f}"".format(area))",Syntax Error,Loops
Design a Random Forest classifier for commercial lending in Python.,,"from sklearn.ensemble import RandomForestClassifier

# Create a random forest classifier
clf = RandomForestClassifier(max_depth=5, random_state=0, n_estimators=100)

# Train the classifier
clf.fit(X_train, y_train)

# Predict new values
y_pred = clf.predict(X_test)","from sklearn.ensemble import RandomForestClassifier

# Create a random forest classifier
clf = RandomForestClassifier(max_depth=5, random_state=0, n_estimators=100)

# Train the classifier
clf.fit(X_train, y_train)

# Predict new values
y_pred = clf.predict(X_test)",correct,File I/O
Create a python program to generate the 1st 10 Fibonacci numbers.,,"def generate_fibonacci():
    """"""This program generates the 1st 10 Fibonacci numbers.""""""
    a, b = 0, 1
    result = []
    for i in range(1, 11):
        a, b = b, a + b
        result.append(a)
    return result","def generate_fibonacci():
    """"""This program generates the 1st 10 Fibonacci numbers.""""""
    a, b = 0, 1
  ",Incomplete Answer,Loops
Write a Python script to rewrite the four-digit year of birth in the YYYY-MM-DD format.,Year: 1985,"def formatYear (birthYear):
 return str(birthYear)+""-01-01""","def formatYear (birthYear):
 ",Incomplete Answer,Recursion
Create a feature in Python to extract the category information from a given URL.,No input,"def extract_category_from_url(url):
    # Extract the hostname from the URL
    hostname = urlparse(url).hostname
    # Split the hostname on '/'
    categories = hostname.split('/')
    return categories","def extract_category_from_url(url):
    # Extract the hostname from the URL
    hostname = urlparse(ur",Incomplete Answer,OOP
Write a python function to find minimum sum of factors of a given number.,,"def find_Min_Sum(num): 
    sum = 0
    i = 2
    while(i * i <= num): 
        while(num % i == 0): 
            sum += i 
            num /= i 
        i += 1
    sum += num 
    return sum","def find_Min_Sum(num): 
    sum = 0
    i = 2
    while(i * i <= num): 
        while(num % i ==",Incomplete Answer,Recursion
Generate a python program to find the year of the oldest movie,"[{'title': 'The matrix', 'releaseYear': 1999 },
 {'title': 'Titanic', 'releaseYear': 1997 },
 {'title': 'Transformers', 'releaseYear': 2006 },
 {'title': 'Wall-E', 'releaseYear': 2008 }]","def oldest_movie(movies):
    oldest_year = movies[0][""releaseYear""]
    for movie in movies: 
        if movie[""releaseYear""] < oldest_year:
            oldest_year = movie[""releaseYear""]
    return oldest_year","def oldest_movie(movies):
    oldest_year = movies[0][""releaseYear""]
    for movie in movies: 
        if",Incomplete Answer,String Manipulation
Write a function to get a lucid number smaller than or equal to n.,,"def get_ludic(n):
	ludics = []
	for i in range(1, n + 1):
		ludics.append(i)
	index = 1
	while(index != len(ludics)):
		first_ludic = ludics[index]
		remove_index = index + first_ludic
		while(remove_index < len(ludics)):
			ludics.remove(ludics[remove_index])
			remove_index = remove_index + first_ludic - 1
		index += 1
	return ludics","def get_ludic(n):
	ludics = []
	for i in range(1, n + 1):
		ludics.append(i)
	index = 1
	while(index != len(ludics)):
		first_ludic = ludics[index]
		remove_index = in",Incomplete Answer,OOP
Write a blank Python program to convert celsius to fahrenheit.,,"def celsius_to_fahrenheit(celsius):
    """"""
    This function converts the given celsius value to its corresponding fahrenheit value
    """"""
    fahrenheit = (celsius * (9/5)) + 32
    return fahrenheit","def celsius_to_fahrenheit(celsius):
""""""
This function converts the given celsius value to its corresponding fahrenheit value
""""""
fahrenheit = (celsius * (9/5)) + 32
return fahrenheit",Syntax Error,File I/O
Write a recursive Python function to calculate a factorial of positive integer,,"def factorial(n): 
    if n == 0: 
        return 1
    else: 
        return n * factorial(n-1)","def factorial(n) 
    if n == 0 
        return 1
    else 
        return n * factorial(n-1)",Syntax Error,String Manipulation
Write a Python program to make a web crawler that fetches all the links on a webpage.,,"import requests
from bs4 import BeautifulSoup 

def get_all_links(url):
  # make a GET request to fetch the raw HTML content
  html_content = requests.get(url).text
  
  # parse the html content
  soup = BeautifulSoup(html_content, ""lxml"")
  
  # fetch all anchors
  links = soup.find_all(""a"")

  for link in links:
    print(link.get(""href""))

get_all_links(""https://www.example.com"")","import requests
from bs4 import BeautifulSoup 

def get_all_links(url):
  # make a GET request to fetch the raw HTML content
  html_content = requests.get(url).text
  
  # parse the html content
  soup = BeautifulSoup(html_content, ""lxml"")
  
  # fetch all anchors
  links = soup.find_all(""a"")

  for link in links:
    print(name, link.get(""href""))

get_all_links(""https://www.example.com"")",Syntax Error,Recursion
Explain the concept of lists and dictionaries in Python.,,Lists in Python are sequences of different data types that are ordered and mutable. They allow us to store multiple items in a single variable. Dictionaries are unordered sets of key-value pairs that are used for storing data. Keys must be unique and of immutable data type whereas values may not be. Dictionaries are used for mapping purposes and can be used for more powerful data access.,Lists in Python are sequences of different data types that are ordered and mutable. They allow us to store multiple items in a single variable. Dictionaries are unordered sets of key-value pairs that are used for storing data. Keys must be unique and of immutable data type whereas values may not be. Dictionaries are used for mapping purposes and can be used for more powerful data access.,Syntax Error,File I/O
Create a Completion function in Python that takes a string and returns a list of strings that match the input string.,string = “th”,"def completion(string):
  results = []
  words = [""the"", ""that"", ""this"", ""those"", ""thing"", ""think"", ""thought""]
  for word in words:
    if len(word) > 2 and word.startswith(string):
      results.append(word)
  return results
  
print(completion(""th"")) # Output: [""those"", ""think"", ""thought""]","def completion(string):
  results = []
  words = [""the"", ""that"", ""this"", ""those"", ""thing"", ""think"", ""thought""]
  for word in words:
    if len(word) > 2 and word.startswith(string):
      results.append(word)
  return results
  
print(completion(""th"")) # Output: [""those"", ""think"", ""thought""]",correct,String Manipulation
Create a python script that extracts the first ten words from a given text.,The quick brown fox jumps over the lazy dog,"import re

text = ""The quick brown fox jumps over the lazy dog""

# Extract words using a regular expression
words_list = re.findall(r""[\w']+"", text)

# Print the first ten words
print(words_list[:10])","import re

text = ""The quick brown fox jumps over the lazy dog""

# Extract words using a regular exp",Incomplete Answer,Recursion
Implement a decision tree model in Python for classifying a dataset.,"""data.csv"": 5 numerical features and one output label (0 or 1)","import numpy as np
from sklearn import tree

# Load the data
data = np.genfromtxt(""data.csv"", delimiter="","")
X = data[:,:-1]
y = data[:,-1]

# Create and train the decision tree model
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)

# Use the model to predict values
predictions = clf.predict(X)","import numpy as np
from sklearn import tree

# Load the data
data = np.genfromtxt(""data.csv"", delimiter="","")
X = data[:,:-1]
y = data[:,-1]

# Create and train the decision tree model
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)

# Use the model to predict values
predictions = clf.predict(X)",correct,File I/O
Can you design a function in Python for reversing a list?,"[1,2,3,4,5]","def reverse_list(list): 
    return list[::-1]","def reverse_list(list: 
    return list[::-1]",Syntax Error,String Manipulation
"Create a Python function, that when called with a string argument, will return all of the possible substrings of that string.",,"def all_substrings(string):
  sub_strings = []
  for i in range(len(string)):
    for j in range(i+1, len(string)+1):
      sub_strings.append(string[i:j])
  return sub_strings","def all_substrings(string):
  sub_strings = []
  for i in range(len(string)):
    for j ",Incomplete Answer,Loops
Write a socket program in Python to send and receive data.,,"import socket

HOST = '127.0.0.1'  # The server's hostname or IP address
PORT = 65432        # The port used by the server

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.connect((HOST, PORT))
    s.sendall(b'Hello, world')
    data = s.recv(1024)

print('Received', repr(data))","import socket

HOST = '127.0.0.1'  # The server's hostname or IP address
PORT = 65432        # The port used by the server

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.connect((HOST, PORT))
    s.sendall(b'Hello, world')
    data = s.recv(1024)

print('Received', repr(data))",correct,Recursion
Write a python function to find the first digit in factorial of a given number.,,"import math 
def first_Digit(n) : 
    fact = 1
    for i in range(2,n + 1) : 
        fact = fact * i 
        while (fact % 10 == 0) :  
            fact = int(fact / 10) 
    while (fact >= 10) : 
        fact = int(fact / 10) 
    return math.floor(fact) ","import math 
def first_Digit(n) : 
    fact = 1
    for i in range(2,n + 1) : 
        fact = fact * i 
        while (fact % 10 == 0) :  
            fact = int(fact / 10) 
    while (fact >= 10) : 
        fact = int(fact / 10) 
    return math.floor(fact) ",correct,Recursion
Write a “while” loop to display all even numbers up to the nth term in Python.,,"num = 1
while num <= n:
    if num % 2 == 0:
        print(num)
    num += 1","num = 1
while num <= n:
    if num % 2",Incomplete Answer,File I/O
Write a function to add two lists using map and lambda function.,,"def add_list(nums1,nums2):
  result = map(lambda x, y: x + y, nums1, nums2)
  return list(result)","def add_list(nums1,nums2)
  result = map(lambda x, y x + y, nums1, nums2)
  return list(result)",Syntax Error,OOP
Create a Python program to search through a list of names and print out any names that contain the letter 'a'.,"names = [""John"", ""Paul"", ""George"", ""Ringo"", ""Adam"", ""Peter"", ""Alice"", ""Karen"", ""Jerry""]","names = [""John"", ""Paul"", ""George"", ""Ringo"", ""Adam"", ""Peter"", ""Alice"", ""Karen"", ""Jerry""]

for name in names:
 if 'a' in name:
 print(name)

# Output
Adam
Alice
Karen","names = [""John"", ""Paul"", ""George"", ""Ringo"", ""Adam"", ""Peter"", ""Alice"", ""Karen"", ""Jerry""]

for name in names:
 if 'a' in name:
 print(name, name)

# Output
Adam
Alice
Karen",Syntax Error,String Manipulation
Generate a Python script that outputs the first ten perfect squares from 1 to 100.,,"for i in range(1, 11):
    print(str(i**2))","for i in range(1, 11)
    print(str(i**2))",Syntax Error,String Manipulation
Write a Python program to find the sum of all integers in a given list that are multiples of 8.,"4, 8, 12, 17, 30","# Initializing list 
l = [4, 8, 12, 17, 30] 

# Function to calculate sum 
def sum_multiples(l): 
	sum = 0
	
	# iterating over list 
	for num in l: 
		
		# checking for multiples of 8 
		if num % 8 == 0: 
			sum += num 
			
	return sum

# Driver code 
print(sum_multiples(l)) 
# Output: 20","# Initializing list 
l = [4, 8, 12, 17, 30] 

# Function to calculate sum 
def sum_multiples(l): 
	sum = 0
	
	# iterating over list 
	for num in",Incomplete Answer,Recursion
Create a function to convert a string to a list using Python.,"text = ""This is a sentence.""","def string_to_list(text):
    lst = text.split()
    return lst

text = ""This is a sentence.""
print(string_to_list(text))","def string_to_list(text):
    lst = text.split()
    return lst

text = ""This is a sentence.""
print(string_to_list(text))",correct,OOP
Write a Python program to create a list of powers of x for any given x.,x = 2,"def power_list(x):
    return [x**i for i in range(16)]","def power_list(x):
return [x**i for i in range(16)]",Syntax Error,String Manipulation
Generate a code to merge two python dictionaries and update the values.,"dict_1 = {
    'a': 1,
    'b': 2
}

dict_2 = {
    'b': 3,
    'c': 4
}","def merge_dicts(dict_1, dict_2):
    # copy both dictionaries
    merged_dict = dict_1.copy()  
    merged_dict.update(dict_2)  
    return merged_dict

print(merge_dicts(dict_1, dict_2))","def merge_dicts(dict_1, dict_2):
    # copy both dictionaries
    merged_dict = dict_1.copy()  
    merged_dict.update(dict_2)  
    return merged_dict

print(merge_dicts(dict_1, dict_2))",correct,Recursion
Can you generate a Python loop to print out each item in a given list?,,"myList = [""item1"", ""item2"", ""item3""]

for item in myList:
    print(item)","myList = [""item1"", ""item2"", ""item3""]

for item in myList:
    pritn(item)",Syntax Error,OOP
Rewrite the code in Python to improve its readability.,"import math
def area(r):
 return math.pi*r**2","import math

def calculate_area(radius):
    return math.pi * (radius ** 2)","import math

def calculate_area(radius):
    return math.pi * (radius ** 2)",correct,Recursion
Identify (classify) the programming language used in the following code snippet.,"# Start code
mylist = [1, 2, 3, 'hello']
for item in mylist:
    print(item)
# End code",Python,Python,Syntax Error,String Manipulation
Build a sorting algorithm in Python that sorts an array of integers.,"[5, 3, 1, 4, 2]","def sort_arr(arr):
    for i in range(len(arr)): 
        min_idx = i 
        for j in range(i+1, len(arr)): 
            if arr[min_idx] > arr[j]: 
                min_idx = j

        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr

result = sort_arr([5, 3, 1, 4, 2])
print(result)","def sort_arr(arr):
    for i in range(len(arr)): 
        min_idx = i 
        for j in range(i+1, len(arr)): 
            if arr[min_idx] > arr[j]",Incomplete Answer,File I/O
Write a function to find frequency of the elements in a given list of lists using collections module.,,"from collections import Counter
from itertools import chain
def freq_element(nums):
  result = Counter(chain.from_iterable(nums))
  return result","from collections import Counter
from itertools import chain
def freq_element(nums):
  result = Counter(chain.from_iterable(nums))
  return result",Syntax Error,Loops
Create a Python program that takes a given list and returns a new list without any duplicates.,"[1, 2, 2, 3, 4, 5, 5, 6]","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    
    return new_list","def remove_duplicates(lst):
new_list = []
for i in lst:
    if i not in new_list:
        new_list.append(i)

return new_list",Syntax Error,String Manipulation
Write a Python program to generate all possible permutations of a given set of elements.,"[1, 2, 3]","def permutations(elements):
    if len(elements) <=1:
        yield elements
    else:
        for perm in permutations(elements[1:]):
            for i in range(len(elements)):
                yield perm[:i] + elements[0:1] + perm[i:]

result = list(permutations([1, 2, 3]))
print(result)","def permutations(elements):
    if len(elements) <=1:
        yield elements
    else:
        for perm in permutations(elements[1:]):
            for i in range(len(elements)):
                yield perm[:i] + elements[0:1] + perm[i:]

result = list(permutations([1, 2, 3]))
print(result)",correct,OOP
Can you implement a function in Python that takes a list of two numbers as input and returns the sum of the two numbers?,"[5, 10]","def add(nums):
    return nums[0] + nums[1]

print(add([5, 10]))  #Prints 15","def add(nums:
    return nums[0] + nums[1]

print(add([5, 10]  #Prints 15",Syntax Error,File I/O
Build an API endpoint in Python with Flask to return the current date and time.,,"from flask import Flask
import datetime

app = Flask(__name__)

@app.route('/date_time')
def get_date_time():
   return datetime.datetime.now()

if __name__ == '__main__':
    app.run()","from flask import Flask
import datetime

app = Flask(__name__)

@app.route('/date_time')
def get_date_time():
   return datetime.datetime.now()

if __name__ == '__main__':
    app.run()",correct,File I/O
Create a Python program that takes an expression as input and evaluates it.,4 + 7,"def calculate(expr):
    return eval(expr)

result = calculate(""4 + 7"")
print(result)","def calculate(expr):
return eval(expr)

result = calculate(""4 + 7"")
print(result)",Syntax Error,Recursion
"Using Python, detect if the given string is a palindrome or not.",madam,"def isPalindrome(s): 
    s = s.lower()
    return s == s[::-1]

string_input = ""madam""
palindrome_status = isPalindrome(string_input)

if palindrome_status:
    print(""The given string is a Palindrome"")
else:
    print(""The given string is not a Palindrome"")","def isPalindrome(s): 
    s = s.lower()
    return s == s[::-1]

string_input = ""madam""
palindrome_status = isPalindrome(string_input)

if palindrome_status:
    pritn(""The given string is a Palindrome"")
else:
    pritn(""The given string is not a Palindrome"")",Syntax Error,File I/O
Write a function to re-arrange the given tuples based on the given ordered list.,,"def re_arrange_tuples(test_list, ord_list):
  temp = dict(test_list)
  res = [(key, temp[key]) for key in ord_list]
  return (res) ","def re_arrange_tuples(test_list, ord_list):
  temp = dict(test_lis",Incomplete Answer,File I/O
Compose a line of Python code to insert an element into a given list.,"list1 = [1, 3, 7, 8]
element = 5","list1 = [1, 3, 7, 8]
element = 5

list1.insert(2, element)
print(""New list:"", list1)","list1 = [1, 3, 7, 8]
element = 5

list1.insert(2, element)
print(""New list:"", list1)",correct,File I/O
Classify the following Python code as a function or a class.,"import math

class Circle:
   def __init__(self, radius):
      self.radius = radius

   def area(self):
      return math.pi * self.radius**2",Class,Class,Incomplete Answer,String Manipulation
Convert the following Regular Expression matching code to a Regular Expression replacement code in Python.,"re_match = ""\w+@\w+\.\w+""","import re

re_match = ""\w+@\w+\.\w+""
re_replace = ""<valid email>""

print(re.sub(re_match, re_replace, ""my_email@example.com""))","import re

re_match = ""\w+@\w+\.\w+""
re_replace = ""<valid email>""

print(re.sub(re_match, re_replace, ""my_email@example.com""",Syntax Error,Recursion
Create an algorithm in Python to search for a given item in a dictionary.,"Dictionary = {'name': 'john', 'age': 22, 'city': 'New York'}, item = 'John'","def search(dict, item): 
    for key, value in dict.items(): 
        if item == value: 
            return True 
    return False

dict = {'name': 'john', 'age': 22, 'city': 'New York'}
item = 'John'
print(search(dict, item))","def search(dict, item): 
    for key, value in dict.items(): 
        if item == value: 
            return True 
    return False

dict = {'name': 'john', 'age': 22, 'city': 'New York'}
item = 'John'
print(search(dict, item))",correct,File I/O
Design an algorithm in Python for finding out the factorial of a given number.,7,"def factorial(n):
 fact = 1
 for i in range(2,n+1):
  fact = fact * i
 return fact","def factorial(n):
 fact = 1
 for i in ran",Incomplete Answer,Recursion
Find the smallest element in a 2D array using Python.,"arr = [[2, 5, 8],
       [1, 4, 7]]","def find_smallest_element_2D(arr):
    smallest = float('inf')
    for row in arr:
        smallest = min(smallest, min(row))
    return smallest","def find_smallest_element_2D(arr):
    smallest = float('inf')
    for row in arr:
        smallest = min(smallest, min(row))
    return smallest",correct,Loops
"Create a class in Python that describes a student. This class should have public attributes for their name, age, grade level and major.",,"class Student:
 def __init__(self, name, age, grade, major):
  self.name = name
  self.age = age
  self.grade = grade
  self.major = major","class Student
 def __init__(self, name, age, grade, major)
  self.name = name
  self.age = age
  self.grade = grade
  self.major = major",Syntax Error,OOP
Suggest a Python program that prints out the unique strings in a list of strings.,"['hello', 'world', 'hello', 'moon', 'sun']","list_of_strings = ['hello', 'world', 'hello', 'moon', 'sun']
unique_strings = set(list_of_strings)

for string in unique_strings:
    print(string)","list_of_strings = ['hello', 'world', 'hello', 'moon', 'sun']
unique_strings = set(list_of_strings)

for string in unique_strings:
    print(string)",correct,String Manipulation
Compose a function to find the maximum value in an array in Python.,"[1, 4, 2]","def find_max_value(arr):
    max_value = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_value:
            max_value = arr[i]
    return max_value

array = [1,4,2]
res = find_max_value(array)
print (res)","def find_max_value(arr):
    max_value = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_value",Incomplete Answer,Loops
"Write a python program to evaluate the expressions of the form ""x op y"" (op is any of the +,-,*,/,%)",,"def evaluate_expr(expr): 
    op, x, y = expr.split() 
    if op == '+' : 
        return float(x) + float(y) 
    if op == '-' : 
        return float(x) - float(y) 
    if op == '*' :
        return float(x) * float(y) 
    if op == '/' :
        return float(x) / float(y) 
    if op == '%':
        return float(x) % float(y)","def evaluate_expr(expr): 
    op, x, y = expr.split() 
    if op == '+' : 
        return float(x) + float(y) 
    if op == '-' : 
        return float(x) - float(y) 
    if op == '*' :
        return float(x) * float(y) 
    if op == '/' :
        return float(x) / float(y) 
    if op == '%':
        return float(x) % float(y)",correct,String Manipulation
Create a Python function to calculate the magnitude of a 2D vector.,,"def calc_magnitude(v1):
 return math.sqrt(v1[0]**2 + v1[1]**2)","def calc_magnitude(v1):
 return",Incomplete Answer,OOP
code a recursive function in Python that accepts a list of integers and prints the sum of all even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8]","def print_even_sum(L): 
    if len(L) == 0: 
        return 0
  
    if L[0] % 2 == 0: 
        return L[0] + print_even_sum(L[1:]) 
    else: 
        return print_even_sum(L[1:]) 
  
L = [1, 2, 3, 4, 5, 6, 7, 8] 
print(""Sum of even numbers in the list:"", print_even_sum(L))","def print_even_sum(L): 
    if len(L) == 0: 
        return 0
  
    if L[0] % 2 == 0: 
        return L[0] + print_even_sum(L[1:]) 
    ",Incomplete Answer,File I/O
Create a program in Python that prints out the first 10 prime numbers.,"""<noinput>""","import math

def is_prime(n):
    if n == 1:
        return False
    
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

prime_nums = []

for i in range(2, 1000):  
    if is_prime(i):
        prime_nums.append(i)
        if len(prime_nums) == 10:
            break

for item in prime_nums:
    print(item)","import math

def is_prime(n):
    if n == 1:
        return False
    
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

p",Incomplete Answer,String Manipulation
"Write a python program to generate random passwords of 8 characters, containing uppercase and lowercase alphabets and numbers.",,"import string
import random

def generate_password():
    characters = string.ascii_letters + string.digits
    return ''.join(random.choice(characters) for i in range (8)) 

print(generate_password())","import string
import random

def generate_password():
    characters = string.ascii_letters + string",Incomplete Answer,File I/O
Write a Python program to convert miles to kilometers,miles=10,"miles = 10
kilometers = miles * 1.60934
print(f""{miles} miles is equal to {kilometers} kilometers"")","miles = 10
kilometers = miles * 1.60934
print(f""{",Incomplete Answer,Recursion
Generate an efficient implementation of quicksort in Python.,No input.,"def quicksort(arr):
    if len(arr) <= 1:
        return arr
        
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)

result = quicksort([3,6,8,10,1,2,1])
print(result)","def quicksort(arr):
if len(arr) <= 1:
    return arr
    
pivot = arr[len(arr) // 2]
left = [x for x in arr if x < pivot]
middle = [x for x in arr if x == pivot]
right = [x for x in arr if x > pivot]
return quicksort(left) + middle + quicksort(right)

result = quicksort([3,6,8,10,1,2,1])
print(result)",Syntax Error,Recursion
Create an algorithm to automate sorting of a list of integers in descending order in Python.,,"def bubbleSort(list): 
    for num in range(len(list)-1,0,-1): 
        for i in range(num): 
            if list[i] < list[i+1]: 
                temp = list[i] 
                list[i] = list[i+1] 
                list[i+1] = temp 
  
list = [54,26,93,17,77,31,44,55,20] 
bubbleSort(list) 
print(""Sorted list:"")
for i in range(len(list)): 
    print(list[i],end="" "")","def bubbleSort(list): 
    for num in range(len(list)-1,0,-1): 
        for i in range(num): 
            if list[i] < list[i+1]: 
                temp = list[i] 
                list[i] = list[i+1] 
                list[i+1] = temp 
  
list = [54,26,93,17,77,31,44,55,20] 
bubbleSort(list) 
print(""Sorted list:"")
for i in range(len(list)): 
    print(list[i],end="" "")",correct,File I/O
Generate a Python class to define a complex number and an operator overloading function to add two complex numbers.,,"class ComplexNumber:
    def __init__(self, real, imaginary):
        self.real = real
        self.imaginary = imaginary
    
    def __add__(self, other):
        return ComplexNumber(self.real + other.real, 
                    self.imaginary + other.imaginary)","class ComplexNumber:
    def __init__(self, real, imaginary):
        self.real = real
        self.imaginary = imaginary
    
    def __add__(self, other):
        return ComplexNumber(self.real + other.real, 
                    self.imaginary + other.imaginary)",correct,OOP
Write a function to remove a given item from a python list.,"[1, 4, 8, 2], 8","def remove_item(lst, item):
    while item in lst:
        lst.remove(item)
    return lst

print(remove_item([1, 4, 8, 2], 8)) # prints [1, 4, 2]","def remove_item(lst, item):
    while item in lst:
        lst.remove(ite",Incomplete Answer,Recursion
Write a python script that displays the greatest common divisor (GCD) of two positive integers?,"12, 24","def gcd(a, b): 
    if a == 0 : 
        return b 
      
    return gcd(b % a, a) 
      
a = 12
b = 24
gcd = gcd(a, b) 
print(gcd)","def gcd(a, b): 
    if a == 0 : 
        return b 
      
    retu",Incomplete Answer,Loops
Design an algorithm in Python that calculates the sum of all numbers in an array.,"numbers = [2, 4, 6, 8]","def sum_array(arr): 
 
    total = 0
    for item in arr: 
        total += item 
 
    return total
 
print(sum_array([2, 4, 6, 8])) 
# Output: 20","def sum_array(arr) 
 
    total = 0
    for item in arr 
        total += item 
 
    return total
 
print(sum_array([2, 4, 6, 8])) 
# Output 20",Syntax Error,File I/O
Write a Python program to sort a list of tuples by increasing order of the second item of each tuple.,,"def sort_list(list_of_tuples): 
    list_of_tuples.sort(key = lambda x: x[1]) 
    return list_of_tuples","def sort_list(list_of_tuples): 
    list_of_tuples.s",Incomplete Answer,OOP
Generate code to sort a list of dictionaries based on the value of a given key in Python.,,"def sort_dicts_by_key(data, key):
    return sorted(data, key=lambda k: k[key])","def sort_dicts_by_key(data, key):
    return sorted(data, key=lambda k: k[key])",correct,Recursion
Create a class in Python containing an add_student() method.,,"class StudentList:
    def __init__(self):
        self.students = []

    def add_student(self, student):
        self.students.append(student)","class StudentList:
    def __init__(self):
        self.students = []

    def add_student(self, student):
        self.students.append(student)",correct,OOP
Create a Python script for downloading a web page's HTML content.,http://example.com,"import requests
 
url = 'http://example.com'
 
r = requests.get(url)
html = r.text
 
with open('page.html', 'w') as f:
 f.write(html)","import requests
 
url = 'http://example.com'
 
r = requests.get(ur",Incomplete Answer,String Manipulation
"Create an optimization function to maximize a given function over a range of values in Python. The range should be given by [-5, 5], and the function is sin(x)","[-5, 5]","import numpy as np
from scipy import optimize

def optimization_function(x):
 return np.sin(x)

res = optimize.minimize_scalar(optimization_function, bounds=[-5, 5])

print(res.x)
# Result: -0.90898","import numpy as np
from scipy import optimize

def optimization_function(x):
 return np.sin(x)

res = optimize.minimize_scalar(optimization_function, bounds=[-5, 5])

print(name, res.x)
# Result: -0.90898",Syntax Error,Recursion
Write a Python program to parse a JSON data and print the values.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","""""""
Write a Python program to parse a JSON data and print the values
""""""

import json

# Load the input data as a json string
data = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'

# Parse the json string into a dictionary
parsed_data = json.loads(data)

# Print out the values
for key, value in parsed_data.items():
    print(f'{key}: {value}')","""""""
Write a Python program to parse a JSON data and print the values
""""""

import json

# Load the input data as a json string
data = '{""name"": ""John"", ""age"": 30, ""city"": ""New",Incomplete Answer,Loops
Write a python function to count numeric values in a given string.,,"def number_ctr(str):
      number_ctr= 0
      for i in range(len(str)):
          if str[i] >= '0' and str[i] <= '9': number_ctr += 1     
      return  number_ctr","def number_ctr(str):
      number_ctr= 0
      for i in range(len(str)):
          if str[i] >= '0' and str[i] <= '9': number_ctr += 1     
      return  number_ctr",Syntax Error,Loops
Write a script in python to crawl a web page,,"import requests
url = 'http://www.example.com'
response = requests.get(url)
if response.status_code == 200:
    html_contents = response.content
    # Parse the html_contents and store the data","import requests
url = 'http://www.example.com'
response = requests.get(url)
if response.status_code == 200:
    html_contents = response.content
    # Parse the html_contents and store the data",correct,Recursion
Write a function to find numbers divisible by m and n from a list of numbers using lambda function.,,"def div_of_nums(nums,m,n):
 result = list(filter(lambda x: (x % m == 0 and x % n == 0), nums)) 
 return result","def div_of_nums(nums,m,n)
 result = list(filter(lambda x (x % m == 0 and x % n == 0), nums)) 
 return result",Syntax Error,Recursion
Create a Python program to generate all combinations of 3 elements from an array.,"array = [1, 2, 3, 4]","def comb3(arr):
    result = []
    for i in range(len(arr)):
       for j in range(i+1, len(arr)):
           for k in range(j+1, len(arr)):
               t = [arr[i],arr[j],arr[k]]
               result.append(t)
    return result","def comb3(arr):
    result = []
    for i in range(len(arr)):
       for j in range(i+1, len(arr)):
           for k",Incomplete Answer,File I/O
Write a Python program to convert a given date in the format mm/dd/yyyy to its equivalent day of the week.,,"import datetime
date_string = input(""Enter date in mm/dd/yyyy format:"")
date = datetime.datetime.strptime(date_string, ""%m/%d/%Y"")
weekday = date.strftime(""%A"")
print(""The day for the date"",date_string,""is"",weekday)","import datetime
date_string = input(""Enter date in mm/dd/yyyy format:"")
date = datetime.datetime.strptime(d",Incomplete Answer,Recursion
Write a Python function to recognize a date (in “DD/MM/YYYY” format) in a string,The deadline is 23/05/2020,"def recognize_date(s):
    '''This function recognizes a date (in DD/MM/YYYY format) in a string.'''
    # Regex for DD/MM/YYYY format
    format_regex = re.compile(r'\d{2}/\d{2}/\d{4}') 
    match = format_regex.search(s)
    if match:
        date = match.group()
        return date
    else:
        return None","def recognize_date(s):
    '''This function recognizes a date (in DD/MM/YYYY format) in a string.'''
    # Regex for DD/MM/YYYY format
    format_regex = re.compile(r'\d{2}/\d{2}/\d{4}') 
    match = format_regex.search(s)
    if match:
        date = match.group()
        return date
    else:
        return None",Syntax Error,Recursion
Convert a given sentence to uppercase using Python.,This is a sample sentence.,"sentence = ""This is a sample sentence.""
output = sentence.upper()
print(output)","sentence = ""This is a sample sentence.""
output = sentence.upper()
print(output)",correct,Recursion
Develop a Python script to generate a set of random numbers within a given range.,,"import random

start = int(input(""Enter start range: ""))
end = int(input(""Enter end range: ""))
numbers = int(input(""Enter the amount of numbers: ""))

result = random.sample(range(start, end), numbers)

print(""Randomly generated numbers:"", result)","import random

start = int(input(""Enter start range: ""))
end = int(input(""Enter end range: ""))
numbers = int(input(""Enter t",Incomplete Answer,String Manipulation
Create a Python statement that prints a list of numbers 0 to n (inclusive).,n = 10,"for i in range(n+1):
    print(i)","for i in range(n+1):
    print(name, i)",Syntax Error,Recursion
"Write a function in Python that takes two parameters, a positive integer n and a list of numbers, and returns the sum of the first n elements of the list.","n = 3, nums = [5, 8, 20, 3]","def func(n, nums):
  res = 0
  for i in range(n):
    res += nums[i]
  return res","def func(n, nums):
  res = 0
  for i in range(n):
    res += nums[i]
  return res",correct,Recursion
Create a function to calculate the sum of two values in Python.,< noinput >,"def add_two_numbers(x, y):
    sum = x + y
    return sum","def add_two_numbers(x, y):
 ",Incomplete Answer,OOP
Write a function to check if the common elements between two given lists are in the same order or not.,,"def same_order(l1, l2):
    common_elements = set(l1) & set(l2)
    l1 = [e for e in l1 if e in common_elements]
    l2 = [e for e in l2 if e in common_elements]
    return l1 == l2","def same_order(l1, l2):
    common_elements = set(l1) & set(l2)
    l1 = [e for e in l1 if",Incomplete Answer,Loops
Write a Python program to create a 1D array of random numbers from 1 to 100.,5,"import random

# Create a 1-dimensional array of size 5
array = [0] * 5

# Fill the array with random numbers
for i in range(len(array)):
 array[i] = random.randint(1,100)

print(array)

# Output:
# [83, 5, 46, 69, 89]","import random

# Create a 1-dimensional array of size 5
array = [0] * 5

# Fill the array with random numbers
for i in range(len(array))
 array[i] = random.randint(1,100)

print(array)

# Output
# [83, 5, 46, 69, 89]",Syntax Error,OOP
Create a module in Python to scrape the web for a particular website.,https://www.example.com/,"import requests
from bs4 import BeautifulSoup

def scrape_website(url):
    response = requests.get(url)
    html = response.text
 
    soup = BeautifulSoup(html, 'html.parser')
    return soup

if __name__ == '__main__':
    url = 'https://www.example.com/'
    soup = scrape_website(url)
    print(soup)","import requests
from bs4 import BeautifulSoup

def scrape_website(url):
    response = requests.get(url)
    html = response.text
 
    soup = BeautifulSoup(html, 'html.parser')
    return soup

if __name__ == '__main__':
    url = 'https://www.example.com/'
    soup = scrape_website(url)
    print(soup)",correct,Loops
Generate a Python program which creates an acronym for a given sentence.,,"def create_acronym(sentence):
    acronym = ''
    words = sentence.split(' ')
    for word in words:
        acronym += word[0].upper()
    return acronym","def create_acronym(sentence)
    acronym = ''
    words = sentence.split(' ')
    for word in words
        acronym += word[0].upper()
    return acronym",Syntax Error,Loops
Create a Python script that will take an array of numbers and generate the maximum possible combination using those numbers.,"[4, 2, 8, 12]","def generatemaxcombo(arr):
    max_combo = []
    value = 1
    for x in arr:
        value = value * x
        max_combo.append(value)
    return max_combo

arr = [4, 2, 8, 12]
max_combo = generatemaxcombo(arr)

print(""The maximum combination of {} is: {}"".format(arr, max_combo))","def generatemaxcombo(arr):
    max_combo = []
    value = 1
    for x in arr:
        value = value * x
        max_combo.append(value)
    ",Incomplete Answer,OOP
Implement a Python parser to print return a list of words from a given string.,"""Hello, World!""","def parse_words(string):
    words = []

    for word in string.split("" ""):
        words.append(word.strip(""!,.? \n\t\r\""\'-""))
    return words

result = parse_words(""Hello, World!"")
print(result)
##
Output: ['Hello', 'World']","def parse_words(string):
    words = []

    for word in string.split("" ""):
        words.append(word.strip(""!,.? \n\t\r\""\'-""))
    return words

result = parse_words(""Hello, World!"")
print(name, result)
##
Output: ['Hello', 'World']",Syntax Error,OOP
"Create a Python class named ""Dog"" that will keep track of a breed, a name, age and person information.",,"class Dog:
def __init__(self, breed, name, age, person):
 self.breed = breed
 self.name = name
 self.age = age
 self.person = person

def get_breed(self):
 return self.breed

def get_name(self):
 return self.name

def get_age(self):
 return self.age

def get_person(self):
 return self.person","class Dog:
def __init__(self, breed, name, age, person):
 self.breed = breed
 self.name = name
 self.age = age
 self.person = person

def get_breed(self):
 return self.breed

def get_name(self):
 return self.name

def get_age(self):
 return self.age

def get_person(self):
 return self.person",correct,OOP
"Using Python, create a function that takes as input a list of numbers and returns the median of the list.",,"def median(nums):
    sorted_nums = sorted(nums)
    length = len(nums)
    if length % 2 == 0:
        return (sorted_nums[length//2] + sorted_nums[length//2 - 1]) / 2
    else:
        return sorted_nums[length//2]","def median(nums):
    sorted_nums = sorted(nums)
    length = len(nums)
    if length % 2 == 0:
        retu",Incomplete Answer,Loops
Create a Python program to find all the solutions to a given equation.,ax^2 + bx + c = 0,"import cmath

a = int(input(""Enter a: ""))
b = int(input(""Enter b: ""))
c = int(input(""Enter c: ""))

#calculate the discriminant
d = (b**2) - (4*a*c)

# find two solutions
sol1 = (-b-cmath.sqrt(d))/(2*a)
sol2 = (-b+cmath.sqrt(d))/(2*a)

print('The solutions are {0} and {1}'.format(sol1,sol2))","import cmath

a = int(input(""Enter a: ""))
b = int(input(""Enter b: ""))
c = int(input(""Enter c: ""))

#calculate the discriminant
d = (b**2) - (4*a*",Incomplete Answer,Loops
Write a Python script to check if the given string is a palindrome.,"string_to_test = ""racecar""","def is_palindrome(string_to_test):
    reverse = reversed(string_to_test)
    if list(string_to_test) == list(reverse):
        return True
    return False","def is_palindrome(string_to_test):
    reverse = reversed(string_to_test)
    ",Incomplete Answer,Recursion
Generate a random 6-digit number using Python,No input,"import random

def generate_random_number(): 
    random_number = random.randint(100000, 999999) 
    return random_number

generatedNumber = generate_random_number() 
print(generatedNumber)","import random

def generate_random_number(): 
    random_number = random.randint(100000, 999999) 
    return random_number

generatedNumber = generate_random_number() 
print(generatedNumber)",correct,Recursion
Develop a Python program to generate a set of random numbers from 1 to 100 with no duplicates.,,"import random

def generate_random_numbers():
    random_numbers = set()
    while len(random_numbers) < 100: 
        random_numbers.add(random.randint(1, 100)) 

    return random_numbers","import random

def generate_random_numbers()
    random_numbers = set()
    while len(random_numbers) < 100 
        random_numbers.add(random.randint(1, 100)) 

    return random_numbers",Syntax Error,File I/O
Can you create a Python script to extract email addresses from a raw text?,"""John Doe john@example.com, Jane Doe jane@example.com, Kevin Smith kevin@example.com""","import re

text = ""John Doe john@example.com, Jane Doe jane@example.com, Kevin Smith kevin@example.com""

emails = re.findall(r""[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+"",
                    text)

print(emails) # ['john@example.com', 'jane@example.com', 'kevin@example.com']","import re

text = ""John Doe john@example.com, Jane Doe jane@example.com, Kevin Smith kevin@example.com""

emails = re.findall(r""[a-zA-Z0-9_.+",Incomplete Answer,File I/O
"Create an algorithm in Python to print the numbers from 1 to n in increasing order, except for any numbers which are divisible by 3 should be printed as ""Fizz"".",`n = 20`,"def fizz(n):
    for i in range(1, n+1):
        if i % 3 == 0:
            print(""Fizz"")
        else:
            print(i)

#example
fizz(20) # prints 1, 2, Fizz, 4, 5, Fizz, 7, 8, Fizz, 10, 11, Fizz, 13, 14, Fizz, 16, 17, Fizz, 19, 20","def fizz(n)
    for i in range(1, n+1)
        if i % 3 == 0
            print(""Fizz"")
        else
            print(i)

#example
fizz(20) # prints 1, 2, Fizz, 4, 5, Fizz, 7, 8, Fizz, 10, 11, Fizz, 13, 14, Fizz, 16, 17, Fizz, 19, 20",Syntax Error,Recursion
Write a function to divide two lists using map and lambda function.,,"def div_list(nums1,nums2):
  result = map(lambda x, y: x / y, nums1, nums2)
  return list(result)","def div_list(nums1,nums2):
  result = map(lambda x, y: x / y, nums1, nums2)
  return list(result)",Syntax Error,File I/O
Write a function in Python to compute the sum of all elements in a given 2-dimensional array.,"[[2, 3], [2, 5], [5, 6], [4, 5]]","def arraySum(arr): 
  sum = 0
  for sublist in arr: 
    for item in sublist: 
      sum = sum + item 
  return sum 

print(arraySum([[2, 3], [2, 5], [5, 6], [4, 5]])) 

# Output: 29","def arraySum(arr): 
  sum = 0
  for sublist in arr: 
    for item in sublist: 
      sum = ",Incomplete Answer,String Manipulation
Write a Python program to check if a given string is a rotation of another given string.,"str1 = ""waterbottle""
str2 = ""erbottlewat""","def is_rotation(str1, str2):
 if len(str1) != len(str2):
  return False
 
 concat_str2 = str2 * 2
 
 return str1 in concat_str2
 
is_rotation(str1, str2)","def is_rotation(str1, str2):
 if len(str1) != len(str2):
  return False
 
 c",Incomplete Answer,Recursion
Create a sigmoid function in Python.,,"def sigmoid(x): 
    return 1 / (1 + math.exp(-x))","def sigmoid(x): 
    return 1 / (1 + math.exp(-x))",correct,Loops
Write a python function to find maximum possible value for the given periodic function.,,"def floor_Max(A,B,N):
    x = min(B - 1,N)
    return (A*x) // B","def floor_Max(A,B,N):
x = min(B - 1,N)
return (A*x) // B",Syntax Error,File I/O
Develop an algorithm to print all permutations of a given string in Python.,,"def permute(s):
    if len(s) == 1:
        return [s]
    permutations = []
    for i, a in enumerate(s):
        others = s[:i] + s[i+1:]
        for p in permute(others):
            permutations.append(a + p)
    return permutations","def permute(s):
    if len(s) == 1:
        return [s]
    permutations = []
    for i, a in enumerate(s):
        others = s[:i] + s[i+1:]
        for p in permute(others):
            permutations.append(a + p)
    return permutations",correct,Recursion
"Create a Python program to create a list of unique emails from a given list of emails, by removing any duplicates.","myList = [""test1@example.com"", ""test2@example.com"", ""test1@example.com"", ""test3@example.com""]","def remove_duplicates(myList):
    unique_list = []
    for item in myList:
        if item not in unique_list:
            unique_list.append(item)
    return unique_list

result = remove_duplicates(myList)
print(result)","def remove_duplicates(myList):
    unique_list = []
    for item in myList:
        if item not in unique_list:
            unique_list.append(item)
    return unique_list

result = remove_duplicates(myList)
print(result)",correct,Recursion
Design a Python program to read in a list of integers and remove any duplicates from the list.,,"def remove_duplicates(lst):
  unique_list = []
  for item in lst:
    if item not in unique_list:
      unique_list.append(item)
  return unique_list

lst = [1, 2, 3, 4, 5, 1, 2, 3]
unique_list = remove_duplicates(lst)
print(unique_list)

# Output
[1, 2, 3, 4, 5]","def remove_duplicates(lst):
  unique_list = []
  for item in lst:
    if item not in unique_list:
      unique_list.append(item)
  return unique_list

lst = [1, 2, 3, 4, 5, 1, 2, 3]
unique_list = remove_duplicates(lst)
pritn(unique_list)

# Output
[1, 2, 3, 4, 5]",Syntax Error,File I/O
Review this code and make any necessary changes in Python to make it more efficient.,"def add_items(items): 
    total = 0 
    for item in items: 
        total += item 
    return total","def add_items(items): 
    return sum(items)","def add_items(items): 
    return sum(items)",correct,String Manipulation
Create a function in Python that takes two parameters 'a' and 'b' and returns the remainder when 'a' is divided by 'b'.,,"def get_remainder(a, b):
    return a % b","def get_remainder(a, b:
    return a % b",Syntax Error,Recursion
Write a function in Python that takes a string as input and returns a count of the number of vowels found in the string.,,"def count_vowels(string):
    vowels = 0
    for i in string:
        if(i == 'a' or i == 'e' or i == 'i' or i == 'o' or i == 'u'):
            vowels = vowels + 1
    return vowels","def count_vowels(string):
    vowels = 0
    for i in string:
        if(i == 'a' or i == 'e' or i == 'i' or i == 'o' or i == 'u'):
            vowels = vowels + 1
    return vowels",Syntax Error,Loops
Create a Python function to compute the nth Fibonacci number of a provided number n.,n = 5,"def fibonacci(n): 
	if n<0: 
		print(""Incorrect input"") 
		
	# First Fibonacci number is 0 
	elif n==1: 
		return 0
	# Second Fibonacci number is 1 
	elif n==2: 
		return 1
	else: 
		return fibonacci(n-1)+fibonacci(n-2) 

print(fibonacci(5)) # Outputs 3","def fibonacci(n: 
	if n<0: 
		print(""Incorrect input"" 
		
	# First Fibonacci number is 0 
	elif n==1: 
		return 0
	# Second Fibonacci number is 1 
	elif n==2: 
		return 1
	else: 
		return fibonacci(n-1+fibonacci(n-2 

print(fibonacci(5 # Outputs 3",Syntax Error,File I/O
Create a loop in Python that sums to a given number.,,"target_sum = 10

current_sum = 0
i = 0

while current_sum < target_sum:
  current_sum = current_sum + i
  i = i + 1

print(i - 1)","target_sum = 10

current_sum = 0
i = 0

while current_sum < target_sum:
  current_sum = current_sum + i
  i = i + 1

print(i - 1)",correct,String Manipulation
Create a Python function that checks if a given number is a multiple of 6.,,"def is_multiple_of_six(num):
    if num % 6 == 0:
        return True
    else:
        return False","def is_multiple_of_six(num):
    if num % 6 == 0:
        return True
    else:
        return False",Syntax Error,String Manipulation
Write a Python program to solve linear equations of two variables.,,"def solve_linear_equations(a,b,c,d,e,f):
    x = (e*d - b*f) / (a*d - b*c)
    y = (a*f - e*c) / (a*d - b*c)
    return (x,y)

a,b,c,d,e,f = 1,2,3,4,5,6
solution = solve_linear_equations(a,b,c,d,e,f)
print(solution)","def solve_linear_equations(a,b,c,d,e,f):
    x = (e*d - b*f) / (a*d - b*c)
    y = (a*f - e*c) / (a*d - b*c)
    return (x,y)

a,b,c,d,e,f = 1,2,3,4,5,6
solution = solve_linear_equations(a,b,c,d,e,f)
print(solution)",correct,File I/O
Create a Python script to capture a range of numbers (as multiples of 100).,Start = 20 and End = 400,"# Python code to capture a range of numbers 
# Multiples of 100 

start = 20
end = 400
  
# printing multiples of 100 in the given range 
for num in range(start, end + 1): 
      
    # checking if the current number is multiple of 100 
    if num % 100 == 0: 
        print(num, end="" "")","# Python code to capture a range of numbers 
# Multiples of 100 

start = 20
end = 400
  
# printing multiples of 100 in the given range 
for nu",Incomplete Answer,File I/O
Write a function to find the demlo number for the given number.,,"def find_demlo(s): 
	l = len(s) 
	res = """" 
	for i in range(1,l+1): 
		res = res + str(i) 
	for i in range(l-1,0,-1): 
		res = res + str(i) 
	return res 	","def find_demlo(s): 
	l = len(s) 
	res = """" 
	for i in range(1,l+1): 
		res = res + str(i) 
	for i in range(l-1,0,-1): 
		res = res + str(i) 
	return res 	",Syntax Error,String Manipulation
Design a Python program to generate a random password containing both lowercase and uppercase characters.,<no input>,"import random
import string

def generate_random_password():
  charset = string.ascii_letters + string.digits
  return ''.join(random.sample(charset, 8))

print(generate_random_password())","import random
import string

def generate_random_password():
  charset = string.ascii_letters ",Incomplete Answer,File I/O
Write a Python program to compare two given dictionaries and find common elements.,,"def compare_dictionaries(dict1, dict2):
    common_elements = []
    for key1 in dict1:
        if key1 in dict2:
            common_elements.append(key1)
    return common_elements","def compare_dictionaries(dict1, dict2):
    common_elements = []
    for key1 in dict1:
        if key1 in dict2:
            common_elements.append(key1)
    return common_elements",Syntax Error,Loops
Create a function in Python that will take a sentence as an argument and return a boolean depending on whether or not it is a palindrome.,"sentence = ""Able was I ere I saw Elba""","def is_palindrome(sentence): 
    rev=(sentence.lower()).replace("" "","""")
    return rev == rev[::-1]","def is_palindrome(sentence): 
    rev=(sentence.lower()).replace("" "","""")
    return rev == rev[::-1]",correct,OOP
Create a Python program to calculate the average of a given list of integers while ignoring any values greater than 10.,"[1, 5, 9, 10, 12, 15]","def average_ignoring_ten(numbers):
    total = 0
    number_of_numbers = 0
    
    for number in numbers:
        if number <= 10:
            total += number
            number_of_numbers += 1
    
    return total / number_of_numbers","def average_ignoring_ten(numbers):
    total = 0
    number_of_numbers = 0
    
    for number in numbers:
        if ",Incomplete Answer,Loops
Write a function to calculate the number of digits and letters in a string.,,"def dig_let(s):
 d=l=0
 for c in s:
    if c.isdigit():
        d=d+1
    elif c.isalpha():
        l=l+1
    else:
        pass
 return (l,d)","def dig_let(s):
 d=l=0
 for c in s:
    if c.isdigit():
        d=d+1
    elif c.isalpha():
        l=l+1
    else:
        pass
 return (l,d)",correct,Loops
Write a function to find a pair with the highest product from a given array of integers.,,"def max_product(arr): 
    arr_len = len(arr) 
    if (arr_len < 2): 
        return None     
    x = arr[0]; y = arr[1]    
    for i in range(0, arr_len): 
        for j in range(i + 1, arr_len): 
            if (arr[i] * arr[j] > x * y): 
                x = arr[i]; y = arr[j] 
    return x,y   ","def max_product(arr: 
    arr_len = len(arr 
    if (arr_len < 2: 
        return None     
    x = arr[0]; y = arr[1]    
    for i in range(0, arr_len: 
        for j in range(i + 1, arr_len: 
            if (arr[i] * arr[j] > x * y: 
                x = arr[i]; y = arr[j] 
    return x,y   ",Syntax Error,String Manipulation
"Build a basic calculator in Python to support addition, subtraction, multiplication, and division.",,"def calculator(operation, num1, num2): 
    if operation == 'add': 
        return num1+num2 
    elif operation == 'subtract': 
        return num1-num2 
    elif operation == 'multiply': 
        return num1*num2 
    elif operation == 'divide': 
        return num1//num2 
    else: 
        print(""Invalid operation"")
        return","def calculator(operation, num1, num2): 
    if operation == 'add': 
        return num1+num2 
    elif operation == 'subtract': 
        return num1-num2 
    elif oper",Incomplete Answer,File I/O
Create a Python class for a rectangle with properties for the length and width and methods for finding the area and perimeter.,No Input,"class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width
    def area(self):
        return self.length * self.width
    def perimeter(self):
        return (2 * self.length) + (2 * self.width)","class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width
    def area",Incomplete Answer,Loops
Create a class in Python that represents a rectangle shape.,,"class Rectangle:
    # Initialize object
    def __init__(self, width, height):
        self.width = width
        self.height = height
    
    # Return area
    def get_area(self):
        return self.width * self.height
    
    # Return perimeter
    def get_perimeter(self):
        return 2 * (self.width + self.height)","class Rectangle:
    # Initialize object
    def __init__(self, width, height):
        self.width = width
        self.height = height
    
    # Return area
    def get_area(self):
        return self.width * self.height
    
    # Return perimeter
    def get_perimeter(self):
        return 2 * (self.width + self.height)",Syntax Error,Loops
Generate a Python program that takes in two dates and prints the gap between them in number of days.,,"from datetime import datetime

def days_gap(date1, date2):
    d1 = datetime.strptime(date1,""%m/%d/%Y"")
    d2 = datetime.strptime(date2,""%m/%d/%Y"")
    day_gap = abs((d2 - d1).days)
    return day_gap","from datetime import datetime

def days_gap(date1, date2):
    d1 = datetime.strptime(date1,""%m/%d/%Y"")
    d2 = datetime.strptime(date2,""%m/%d/%Y"")
    day_gap = abs((d2 - d1).days)
    return day_gap",correct,String Manipulation
Create a Python program that takes an email message as input and prints the sender's email address.,"Email Message:
From: ""John Doe"" <john.doe@example.com>
To: ""Jane Doe"" <jane.doe@example.com>
Subject: Example Email","import re

email_message = """""" 
From: ""John Doe"" <john.doe@example.com>
To: ""Jane Doe"" <jane.doe@example.com>
Subject: Example Email
""""""

sender_email = re.findall(r'From: .+?<(.+?)>', email_message)

print('Sender\'s email address:', sender_email[0])","import re

email_message = """""" 
From: ""John Doe"" <john.doe@example.com>
To: ""Jane Doe"" <jane.doe@example.com>
Subject: Example Email
""""""

sender_email = re.findall(r'From: .+?<(.+?)>', email_message)

print('Sender\'s email address:', sender_email[0])",correct,Loops
Generate a random 6-digits number in Python.,,"import random

number = random.randint(100000, 999999)
print(number)","import random

number = random.randint(100000, 999999)
print(number)",Syntax Error,String Manipulation
Write a python function to find odd numbers from a mixed list.,,"def Split(list): 
    od_li = [] 
    for i in list: 
        if (i % 2 != 0): 
            od_li.append(i)  
    return od_li","def Split(list): 
    od_li = [] 
    for i in list: 
        ",Incomplete Answer,File I/O
Optimize the following Python code for efficiency.,"def search(list, query): 
    if query in list: 
        return True 
    else: 
        return False","def search(list, query): 
    return query in list","def search(list, query): 
    return query in list",correct,Loops
Generate Python classes from the given JSON.,"{
""name"": ""Employee"",
""attributes"": {
""emp_id"": {
""type"": ""int""
},
""name"": {
""type"": ""string""
},
""department"": {
""type"": ""string""
},
""salary"": {
""type"": ""float""
}
}
}","class Employee:
    def __init__(self, emp_id, name, department, salary):
        self.emp_id = emp_id
        self.name = name
        self.department = department
        self.salary = salary","class Employee:
    def __init__(self, emp_id, name, department, salary):
        self.emp_id = emp_id
        self.name = name
        self.department = department
        self.salary = salary",correct,File I/O
Create a function in Python to sort this list of high-scores in descending order.,"[150, 160, 233, 700, 800, 1200]","def sortScores(scores):
    return sorted(scores, reverse=True)","def sortScores(scores):
    return sorted(scores, reverse=True)",Syntax Error,Recursion
Create a function in Python that takes a list of strings and returns only the strings with length of 5.,"array = [""Hello"", ""Hi"", ""Hola"", ""Bye"", ""Goodbye""]","def five_length_strings(arr):
    return [string for string in arr if len(string) == 5]

output = five_length_strings([""Hello"", ""Hi"", ""Hola"", ""Bye"", ""Goodbye""])

print(output) # Output: ['Hello', 'Hola', 'Bye']","def five_length_strings(arr):
    return [string for string in arr if len(string) == 5]

output = five_length_strings([""Hello"", ""Hi"", ""Hola"", ""Bye"", ""Goodbye""])

print(output) # Output: ['Hello', 'Hola', 'Bye']",correct,String Manipulation
Write a Python function to calculate the total cost of a shopping cart given a list of items. The items list should contain the item name and price.,"items = [('Apple', 2.25), ('Banana', 0.75), ('Lemon', 1.50)]","def calculateTotalCost(items):
 total_cost = 0
 for item in items:
  total_cost += item[1]
 return total_cost

# Usage
total_cost = calculateTotalCost(items)
print(total_cost)","def calculateTotalCost(items):
 total_cost = 0
 for item in items:
  total_cost += item",Incomplete Answer,Loops
Create a program that takes a numerical array and returns a reversed array in Python.,"[1,2,3,4,5]","def reverse_array(array):
    reversed_array = array[::-1]
    return reversed_array

reversed_array = reverse_array([1,2,3,4,5])
print(reversed_array)","def reverse_array(array):
    reversed_array = array[::-1]
    return rever",Incomplete Answer,Loops
"Given an array of integers and a target number, write a Python function to return the two numbers from the array that add up to the target number.","[1, 2, 3, 4, 5], 9","def two_sum(arr, target): 
    for i in range(0, len(arr)-1): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == target: 
                return [arr[i], arr[j]]","def two_sum(arr, target): 
    for i in range(0, len(arr)-1): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == target: 
                return [arr[i], arr[j]]",correct,File I/O
Create a Python program to generate a random number between 1 to 100.,,"import random

number = random.randint(1, 100)
print(number)","import random

number = random.randint(1, 100)
print(number)",Syntax Error,Loops
Generate a Python program that implements linear search,,"def linear_search(mylist, x):
    for i in range(len(mylist)):
        if mylist[i] == x:
            return i

    return -1","def linear_search(mylist, x):
    for i in range(len(mylist)):
        if mylist[i] == x:
            return i

    return -1",correct,File I/O
Create a program in Python that converts a given number into its corresponding binary representation in 8 bits.,10,"def int_to_bin(n):
 bin_num = bin(n)
 bin_num = bin_num[2:].zfill(8)
 return bin_num

print(int_to_bin(10)) # Output: 00001010","def int_to_bin(n):
 bin_num = bin(n)
 bin_num = bin_num[2:].zfill(8)
 return bin_num

print(int_to_bin(10)) # Output: 00001010",correct,OOP
Generate a Python program to evaluate a mathematical expression?,"expression = ""2 * (3 + 5)""","def evaluate(expression):
    return eval(expression)

print(evaluate(expression))

# Output
16","def evaluate(expression):
    return eval(expression)

pritn(evaluate(expression))

# Output
16",Syntax Error,String Manipulation
"Construct a Python class to represent a Country that contains its name, population, and area.",,"class Country:
    def __init__(self, name, population, area):
        self.name = name
        self.population = population
        self. area = area","class Country:
    def __init__(self, name, population, area):
        self.name = name
        self.population = population
        self. area = area",correct,Loops
Write a Python function to edit the given input string such that all consecutive duplicate characters in the string are removed.,"inputstring = ""aabbcccdddd""","def remove_duplicates(inputstring):
    result = """"
    for i in range(len(inputstring)):
        if i == 0 or inputstring[i] != inputstring[i-1]:
            result += inputstring[i]
    return result","def remove_duplicates(inputstring):
    result = """"
    for i in range(len(inputstring)):
        if",Incomplete Answer,String Manipulation
Define a class method in Python to initialize an object's fields.,,"class SomeClass:

    def __init__(self, field1, field2):
        self.field1 = field1
        self.field2 = field2","class SomeClass:

    def __init__(self, field1, field2):",Incomplete Answer,File I/O
Create a web scraper using Python's BeautifulSoup library to extract news articles from a website.,,"import requests
from bs4 import BeautifulSoup

url = '<URL to scrape>'
page = requests.get(url)
soup = BeautifulSoup(page.text, 'html.parser')

# Find all the articles
articles = soup.find_all('article')

# Loop through the articles and print their titles
for article in articles:
 print(article.h2.text)","import requests
from bs4 import BeautifulSoup

url = '<URL to scrape>'
page = requests.get(url)
soup = BeautifulSoup(page.text, 'html.parser')

# Find all the articles
articles = soup.find_all('article')

# Loop through the articles and print their titles
for article in articles:
 print(article.h2.text)",correct,File I/O
Write a python for loop to iterate over a list of numbers and compute the sum of all numbers greater than 0,"[-1, 5, -7, 10, -2]","sum = 18

# using a for-loop
sum = 0
for num in [-1, 5, -7, 10, -2]:
  if num > 0:
    sum += num

print(sum)

Output: 18","sum = 18

# using a for-loop
sum = 0
for num in [-1, 5, -7, 10, -2]:
  if num > 0:
    sum += num

print(sum)

Output: 18",correct,OOP
Develop a machine learning model in Python to predict housing prices in a given city.,,"from sklearn.linear_model import LinearRegression

X_train, y_train, X_test, y_test = load_data(city)

model = LinearRegression()
model.fit(X_train, y_train)
predictions = model.predict(X_test)","from sklearn.linear_model import LinearRegression

X_train, y_train, X_test, y_test = load_data(city

model = LinearRegression(
model.fit(X_train, y_train
predictions = model.predict(X_test",Syntax Error,Loops
Generate a Python 2D list containing a 10x10 checkerboard pattern,,"board = [[0]*10 for _ in range(10)]
for i in range(10):
 for j in range(10):
  if i%2 == j%2:
   board[i][j] = 1
print board","board = [[0]*10 for _ in range(10]
for i in range(10:
 for j in range(10:
  if i%2 == j%2:
   board[i][j] = 1
print board",Syntax Error,Recursion
Create a Python function to compute the root mean square (RMS) of an array of values.,"values = [3,4,5,6,7]","import math

def computeRMS(values):
    # calculate the mean
    mean = sum(values)/len(values)
    # calculate the sum of the squares
    squares_sum = sum([val**2 for val in values])
    # calculate the RMS
    rms = math.sqrt(squares_sum/len(values))
    
    return rms
    
values = [3,4,5,6,7]
rms = computeRMS(values)
print(""Root mean square is: "", rms)","import math

def computeRMS(values):
# calculate the mean
mean = sum(values)/len(values)
# calculate the sum of the squares
squares_sum = sum([val**2 for val in values])
# calculate the RMS
rms = math.sqrt(squares_sum/len(values))

return rms

values = [3,4,5,6,7]
rms = computeRMS(values)
print(""Root mean square is: "", rms)",Syntax Error,Loops
Produce a Python script that counts the number of words in a sentence,"Sentence: ""The quick brown fox jumps over the lazy dog""","sentence = ""The quick brown fox jumps over the lazy dog""

words = sentence.split()
print(""The sentence has"", len(words), ""words."")","sentence = ""The quick brown fox jumps over the lazy dog""

words = sentence.split()
print(""The sentence has"", len(words), ""words."")",correct,File I/O
"Create a Python class called ""Person"" with fields for ""name"" and ""age"". The class should also include an initialization function and a method to say hello.",,"class Person:
 def __init__(self, name, age):
 self.name = name
 self.age = age

 def say_hello(self):
 print('Hello, my name is {} and I am {} years old'.format(self.name, self.age))","class Person:
 def __init__(self, name, age):
 self.name = name
 self.age = age

 def say_hello(self):
 print(name, 'Hello, my name is {} and I am {} years old'.format(self.name, self.age))",Syntax Error,String Manipulation
Write a python code to calculate the square of any given number.,num = 5,"""""""
Calculate the square of a given number
""""""

def square_num(num):
    return num * num

if __name__==""__main__"":
    num = 5
    square = square_num(num)
    print(""Square of ""+str(num)+"" is ""+str(square))","""""""
Calculate the square of a given number
""""""

def square_num(num):
    return num * num

if __name__==",Incomplete Answer,String Manipulation
Write a python script to format a list of numbers into a tabular form.,"[2, 3, 4, 5, 6]","def format_list(list_in):
   list_out = []

   for n in list_in:
      list_out.append('|'+str(n).ljust(2)+'|')
   
   header = '--|--+'
   header_line = '--|'+'--'*len(list_out)+'|'
   
   list_out = [header] + list_out + [header_line]
   
   return '\n'.join(list_out)

print(format_list([2, 3, 4, 5, 6]))

# Output:
--|--+
|2 |
|3 |
|4 |
|5 |
|6 |
--|---|","def format_list(list_in):
   list_out = []

   for n in list_in:
      list_out.append('|'+str(n).ljust(2)+'|')
   
   header = '--|--+'
   header_line = '--|'+'--'*len(list_out)+",Incomplete Answer,File I/O
Create a Python script to scrape a website and extract the main content of any webpage.,URL: www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
html = requests.get(url).content
soup = BeautifulSoup(html, 'html.parser')

content = soup.find(""div"", {""class"": ""main-content""}).text

print(content)","import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
html = requests.get(url).content
soup = BeautifulSoup(html, 'html.parser')

content = soup.find(""div"", {""class"": ""main-content""}).text

print(content)",correct,Loops
Develop a function to generate all combinations of a given list in Python.,"[1, 2, 3]","def all_combinations(list_of_numbers): 
    if len(list_of_numbers) == 0: 
        return [] 
  
    if len(list_of_numbers) == 1: 
        return [list_of_numbers] 
  
    combinations = [] 
    for combination in all_combinations(list_of_numbers[1:]): 
        combinations.append(combination) 
        combinations.append([list_of_numbers[0]] + combination) 
  
    return combinations","def all_combinations(list_of_numbers): 
    if len(list_of_numbers) == 0: 
        return [] 
  
    if len(list_of_numbers) == 1: 
        return [list_of_numbers] 
  
    combinations = [] 
    for combination in all_combinations(list_of_numbers[1:]): 
        combinations.append(combination) 
        combinations.append([list_of_numbers[0]] + combination) 
  
    return combinations",Syntax Error,OOP
Write a matrix multiplication algorithm in Python using two-dimensional lists.,,"def matrix_mul(A,B):
 if len(A[0]) != len(B):
   raise ValueError('The column of matrix A must be equal to the row of matrix B')
 
 # Create the result matrix C
 C = [[sum(A[i][k] * B[k][j] for k in range(len(B))) for j in range(len(B[0]))] for i in range(len(A))]
 
 return C
 
 A = [[1,2], [3,4]]
 B = [[5,6], [7,8]]
 
 product = matrix_mul(A,B)
 
 print(product)","def matrix_mul(A,B):
 if len(A[0]) != len(B):
   raise ValueError('The column of matrix A must be equal to the row of matrix B')
 
 # Create the result matrix C
 C = [[sum(A[i][k] * ",Incomplete Answer,Loops
Write a Python function that takes two strings of equal length and returns the number of characters that are different between them.,"firstString = 'abcd'
secondString = 'abec'","def diff_characters(firstString, secondString):
 if len(firstString) != len(secondString):
 return -1

 diff_characters = 0
 for i in range(len(firstString)):
 if firstString[i] != secondString[i]:
 diff_characters +=1
 
 return diff_characters","def diff_characters(firstString, secondString):
 if len(firstString) != len(secondString):
 return -1

 diff_characters = ",Incomplete Answer,OOP
Create a Python function to delete all data stored in a Python dictionary,,"def clear_dictionary(d): 
    keys = list(d.keys()) 
    for key in keys: 
        del d[key]","def clear_dictionary(d): 
    keys = list(d.keys()) 
    for key in keys: 
        del d[key]",correct,OOP
"Classify the following statement as a valid Python statement, an invalid Python statement or a comment.","print(""Hello Python!"")",Valid Python statement.,Valid Python statement.,correct,Recursion
Create a function in Python to get the largest element in a given list.,"[4,8,2,9,10]","def get_largest_element(nums):
    largest = nums[0]
    for i in range(1, len(nums)):
        if nums[i] > largest:
            largest = nums[i]
    return largest

# Test the function
numbers = [4,8,2,9,10]
print(get_largest_element(numbers)) # Output: 10","def get_largest_element(nums):
    largest = nums[0]
    for i in range(1, len(nums)):
        if nums[i] > largest:
            largest = nums[i]
    return largest

# Test the function
numbers = [4,8,2,9,10]
print(get_largest_element(numbers)) # Output: 10",correct,Loops
Write a function in Python that prints the multiplication table of a given number.,number=7,"def print_multiplication_table(number): 
    for i in range(1, 11): 
        print(number,""X"",i,""="",number*i)","def pritn_multiplication_table(number): 
    for i in range(1, 11): 
        pritn(number,""X"",i,""="",number*i)",Syntax Error,OOP
"In Python, create a list comprehension to extract the elements which are even in the given list.","list = [1, 2, 3, 4, 5, 6, 7, 8, 9]",even_list = [x for x in list if x%2 == 0],even_list = [x for x,Incomplete Answer,OOP
Write a function to remove every other element in a Python list in place.,"[1, 2, 3, 4, 5, 6]","def remove_other_list_elements_inplace(list_elements):
    list_elements[:] = [element for index, element in enumerate(list_elements) if (index + 1) % 2 == 1]
    return list_elements 

sample_list = [1,2,3,4,5,6]
print(""Original List:"", sample_list) 

remove_other_list_elements_inplace(sample_list)
print(""Modified List:"", sample_list)","def remove_other_list_elements_inplace(list_elements):
list_elements[:] = [element for index, element in enumerate(list_elements) if (index + 1) % 2 == 1]
return list_elements 

sample_list = [1,2,3,4,5,6]
print(""Original List:"", sample_list) 

remove_other_list_elements_inplace(sample_list)
print(""Modified List:"", sample_list)",Syntax Error,File I/O
Create a Python program to find the two smallest integers in an array and print the output.,"[5, 7, 12, 3, 8]","def findSmallestInteger(arr):
    smallest = float('inf')
    second_smallest = float('inf')
    for num in arr:
        if num < smallest:
            second_smallest = smallest 
            smallest = num
        if num < second_smallest and num > smallest:
            second_smallest = num
    return (smallest, second_smallest)","def findSmallestInteger(arr):
smallest = float('inf')
second_smallest = float('inf')
for num in arr:
    if num < smallest:
        second_smallest = smallest 
        smallest = num
    if num < second_smallest and num > smallest:
        second_smallest = num
return (smallest, second_smallest)",Syntax Error,Recursion
Create a function in Python that takes a list of integers as input and returns a list of the sorted integers.,"[5, 7, 3, 2, 9]","def sort_list_of_integers(lst):
    lst.sort()
    return lst

print(sort_list_of_integers([5, 7, 3, 2, 9])) # Output: [2, 3, 5, 7, 9]","def sort_list_of_integers(lst):
    lst.sort()
    return lst

pritn(sort_list_of_integers([5, 7, 3, 2, 9])) # Output: [2, 3, 5, 7, 9]",Syntax Error,File I/O
Develop a simple Python program to read a text document and output the number of words in it.,,"# Read file
with open('text_document.txt', 'r') as file:
    data = file.read()

# Calculate number of words   
word_count = len(data.split())

# Output
print(f""Number of words: {word_count}"")","# Read file
with open('text_document.txt', 'r') as file:
    data = file.read()

# Calculate number of words   
word_count = len(data.split())

# Output
print(f""Number of words: {word_count}"")",correct,String Manipulation
Generate a 10 digit random phone number using Python.,,"import random

def get_random_phone_number():
    """"""Generates a 10 digit random phone number""""""
    phone_number = ''
    for i in range(10):
        phone_number += str(random.randint(0, 9))
    return phone_number

print(get_random_phone_number())","import random

def get_random_phone_number():
    """"""Generates a 10 digit random phone number""""""
    phone_number = ''
    fo",Incomplete Answer,Loops
Write a Python code to convert a given list of strings to all lowercase.,"['CoDE', 'OF', 'LinK']","def to_lowercase(strings):
    return [string.lower() for string in strings]
    
result = to_lowercase(['CoDE', 'OF', 'LinK'])
print(result)","def to_lowercase(strings):
return [string.lower() for string in strings]

result = to_lowercase(['CoDE', 'OF', 'LinK'])
print(result)",Syntax Error,String Manipulation
"Create a Python program to sort a list of numbers by their absolute value (e.g. sort [2,-5, -1, 3] in ascending order).","[2,-5, -1, 3]","def abs_sort(arr):
    return sorted(arr, key=abs)

abs_sort([2,-5, -1, 3])","def abs_sort(arr):
    return sorted(arr, key=abs)

abs_sort([2,-5, -1, 3])",correct,Loops
Create a function in Python to split a list into sublists of given length x.,,"def split_list(list, x):
    return [list[i * x:(i + 1) * x] for i in range((len(list) + x - 1) // x )]","def split_list(list, x):
    return [list[i * x:(i + 1) * x] for i in range((len(list) + x - 1) // x )]",Syntax Error,OOP
Code a Python program to concatenate two lists.,"[1, 2, 3] and [4, 5, 6]","list1 = [1, 2, 3] 
list2 = [4, 5, 6] 
  
# using + 
list3 = list1 + list2 
  
# printing list3 
print(list3) 

# using extend() 
list1.extend(list2) 
  
# printing list1 
print(list1)","list1 = [1, 2, 3] 
list2 = [4, 5, 6] 
  
# using + 
list3 = list1 + list2 
  
# printing list3 
print(list3) 

# using extend() 
list1.extend(list2) 
  
# printing list1 
print(list1)",correct,File I/O
Write a Python program to optimize a list of numbers so that every follower is greater than its predecessor.,"[3, 8, 2, 6, 10]","def optimized_list(arr):
n = len(arr)
for i in range(n):
 j = i+1
 while(j < n):
  if arr[i] > arr[j]:
   temp = arr[i]
   arr[i] = arr[j]
   arr[j] = temp
  j+=1
 
return arr
 
arr = [3, 8, 2, 6, 10]
result = optimized_list(arr)
print(result) #[2, 3, 6, 8, 10]","def optimized_list(arr):
n = len(arr)
for i in range(n):
 j = i+1
 while(j < n):
  if arr[i] > arr[j]:
   temp = arr[i]
   arr[i] ",Incomplete Answer,Recursion
Create an optimization function in Python that takes in a list of integers and finds the smallest number that is greater than all of the other numbers in the list.,"[1, 2, 3, 4]","def optimize(arr):
    smallest = None
    
    for num in arr:
        if (smallest is None) or (num > smallest):
            smallest = num
    
    return smallest + 1

x = [1, 2, 3, 4]
result = optimize(x)

print(result) # 5","def optimize(arr):
    smallest = None
    
    for num in arr:
        if (smallest is None) or (num > smallest):",Incomplete Answer,Loops
Write a Python program to determine the maximum of two numbers.,"a = 15, b = 20","def get_max(a, b):
    if a > b:
        return a
    else:
        return b

a = 15
b = 20

max_value = get_max(a, b)
print(""The maximum value is:"", max_value)","def get_max(a, b):
    if a > b:
        return a
    else:
        return b

a = 15
b = 20

max_value = get_max(a, b)
print(name, ""The maximum value is:"", max_value)",Syntax Error,File I/O
Write a Python snippet that prints all the stdout of a given command.,,"import subprocess

command = 'ls'
process = subprocess.run([command], stdout=subprocess.PIPE, stderr=subprocess.STDOUT, universal_newlines=True)

for line in process.stdout.splitlines():
    print( line )","import subprocess

command = 'ls'
process = subprocess.run([command], stdout=subprocess.PIPE, stderr=s",Incomplete Answer,Recursion
Create a neural network class in Python that computes the derivative of a given function.,,"class NNClass:
    def __init__(self):
        pass
   
    def forward(self, x):
        self.x = x
 
    def backward(self, dy):
        dFdx = dy * (1/self.x)
        return dFdx","class NNClass:
    def __init__(self):
        pass
   
    def forward(self, x):
        ",Incomplete Answer,Recursion
Write a Python script to print the frequency of occurrence of characters in a given string.,"text = ""Hello World""","def char_frequency(text):
    chars = {}
    for c in text:
        if c not in chars:
            chars[c] = 0
        chars[c] += 1
    return chars
    
print(char_frequency(text))","def char_frequency(text):
chars = {}
for c in text:
    if c not in chars:
        chars[c] = 0
    chars[c] += 1
return chars

print(char_frequency(text))",Syntax Error,Recursion
Write a Python program to check whether a given number is an Armstrong number. Armstrong numbers are the numbers that are equal to the sum of the cubes of their individual digits.,,"def is_armstrong_number(n):
 s = 0
 for digit in str(n):
 s += int(digit)**3
 return s == n","def is_armstrong_number(n):
 s = 0
 for digit",Incomplete Answer,OOP
Write a Python program to convert a unix timestamp to UTC time.,1594842400,"import time

timestamp = 1594842400
utc_time = time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(timestamp))

print(utc_time) # Output: 2020-07-17 02:00:00","import time

timestamp = 1594842400
utc_time = time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(timestamp))

print(utc_time) # Output: 2020-07-17 02:00:00",correct,File I/O
Edit a Python program given to produce a new program with different outputs according to the given criteria.,none,"def double(value): 
    return value * 2

def triple(value): 
    return value * 3

def quad(value):
    return value * 4

def calculate_value(n): 
    if n > 10: 
        return double(n) 
    elif n > 5: 
        return triple(n) 
    else: 
        return quad(n) 
    
print(calculate_value(-2))
print(calculate_value(8)) 
print(calculate_value(13))","def double(value): 
    return value * 2

def triple(value): 
    return value * 3

def quad(value):
    return value * 4

def calculate_value(n): 
    if n > 10: 
        return double(n) 
    elif n > 5: 
        return triple(n) 
    else: 
        return quad(n) 
    
print(name, calculate_value(-2))
print(name, calculate_value(8)) 
print(name, calculate_value(13))",Syntax Error,Recursion
"Write a Python program to build a simple calculator. The calculator should be able to take two inputs and add, subtract, multiply, or divide them.",,"def calculate(x,y,op):
 if op == ""+"":
  return x+y
 elif op == ""-"":
  return x-y
 elif op == ""*"":
  return x*y
 elif op == ""/"":
  return x/y
 else:
  return ""Invalid operator""

# Function call
print(calculate(4,8,""*""))
# Output: 32","def calculate(x,y,op):
 if op == ""+"":
  return x+y
 elif op == ""-"":
  return x-y
 elif op == ""*"":
  return x*y
 eli",Incomplete Answer,OOP
Create a Python script to automatically fill out a web form with a given set of data.,"The name ""John Doe"" 
The email ""john.doe@example.com""","import requests

url = 'https://www.example.com/form-url'

name = 'John Doe'
email = 'john.doe@example.com'

data = {
 'name' : name,
 'email' : email
}

response = requests.post(url, data)","import requests

url = 'https://www.example.com/form-url'

name = 'John Doe'
email = 'john.doe",Incomplete Answer,String Manipulation
"Create a Python program which prints ""Hello, World!""",,"print(""Hello, World!"")","print(""Hello, World!"")",correct,Loops
Create an algorithm to reverse a given string without using the built-in python reverse function,,"""""""
Reverse a given string without using the built-in python reverse function.
""""""

def reverse_string(in_str):
    rev_str = ''
    for i in range(len(in_str) - 1, -1, -1):
        rev_str += in_str[i]
    return rev_str

if __name__ == '__main__':
    in_str = 'reverse me'
    rev_str = reverse_string(in_str)
    print(rev_str)","""""""
Reverse a given string without using the built-in python reverse function.
""""""

def reverse_string(in_str:
    rev_str = ''
    for i in range(len(in_str - 1, -1, -1:
        rev_str += in_str[i]
    return rev_str

if __name__ == '__main__':
    in_str = 'reverse me'
    rev_str = reverse_string(in_str
    print(rev_str",Syntax Error,String Manipulation
Convert the following Python function into C++,"def test_func(A, B):
 return A + B","#include <iostream>

int test_func(int A, int B)
{
 return A + B;
}

int main()
{
 int A = 10;
 int B = 20;
 
 std::cout << ""The value of A + B = "" << test_func(A, B) << std::endl;
 
 return 0;
}","#include <iostream>

int test_func(int A, int B)
{
 return A + B;
}

int main()
{
 int A = 10;
 i",Incomplete Answer,File I/O
Write a Python program to convert a given list of strings into a dictionary where each string is a key and its index in the list is its corresponding value.,,"def list_to_dict(lst):
 return {x:i for i,x in enumerate(lst)}","def list_to_dict(lst):
 return ",Incomplete Answer,Recursion
Generate a single line of code to add a new item to an existing list in Python.,,existing_list.append(new_item),existing_list.a,Incomplete Answer,OOP
Create a program to parse a JSON object into a Python dictionary.,,"import json

def parse_json(json_obj):
    json_dict = json.loads(json_obj)
    return json_dict","import json

def parse_json(json_obj):
    json_dict = json.loads(json_obj)
    return json_dict",correct,Loops
Use a Python program to print out the first five odd numbers.,,"for num in range(1,11):
    if num % 2 != 0:
        print(num)","for num in range(1,11):
    if num % 2 != 0:
        print(name, num)",Syntax Error,Recursion
Generate a Python program to print all possible permutations of a given string.,"Input string: ""ABC""","from itertools import permutations 
  
# Get all permutations of length 2 
# and length 2 
perm = permutations(""ABC"", 2) 
  
# Print the obtained permutations 
for i in list(perm): 
    print(i) 

# Get all permutations of length 3 
# and length 3 
perm = permutations(""ABC"") 
  
# Print the obtained permutations 
for i in list(perm): 
    print(i)","from itertools import permutations 
  
# Get all permutations of length 2 
# and length 2 
perm = permutations(""ABC"", 2) 
  
# Print the obtained permutations 
for i in list(",Incomplete Answer,Loops
Write a Python program to calculate the total amount of taxes to be paid by a customer for an online purchase. The input should include the cost of the item and the tax rate.,"Item cost: 700, Tax rate: 10%","def calculate_total_tax(cost, rate):
 """"""Calculate the total amount of taxes to be paid""""""
 tax = cost * rate/100
 total = cost + tax

 return total

total_amount = calculate_total_tax(700, 10)
print(f""The total amount, including taxes, is {total_amount}"") # 770","def calculate_total_tax(cost, rate):
 """"""Calculate the total amount of taxes to be paid""""""
 tax = cost * rate/100
 total = cost + t",Incomplete Answer,File I/O
Can you program a web scraper in Python to extract specific data from a website?,,"import requests
from bs4 import BeautifulSoup

url = ""example.com""
response = requests.get(url)
html = response.text

soup = BeautifulSoup(html, ""html.parser"")
data = soup.find_all(class_=""data-class"")

for item in data:
    # Extract the data you need here
    # ...","import requests
from bs4 import BeautifulSoup

url = ""example.com""
response = requests.get(url)
html = response.text

soup = Beautifu",Incomplete Answer,Recursion
Optimize the provided Python code to run in linear time.,"def function(arr):
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]","def function(arr):
    for i in range(len(arr)):
        min_idx = i
        for j in range(i+1, len(arr)):
            if arr[min_idx] > arr[j]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]","def function(arr):
    for i in range(len(arr)):
        min_idx = i
        for j in range(i+1, len(arr)):
            if arr[min_idx] > arr[j]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]",correct,String Manipulation
Create a Python program to calculate factorials recursively.,,"def factorial(n):
  # Base Case
  if n == 0:
    return 1
  # Recursive Case
  else:
    return n * factorial(n-1)

#Testing
num = int(input(""Enter a number to calculate it's factorial: ""))

print(f""The factorial of {num} is { factorial(num)})","def factorial(n):
  # Base Case
  if n == 0:
    return 1
  # Recursive Case
  else:
    return n * factorial(n-1)

#Testing
num = int(input(""Enter a number to calculate it's factorial: ""))

print(f""The factorial of {num} is { factorial(num)})",correct,OOP
"Given the following array of numbers, write a Python code snippet to sort it in descending order.","[9, 2, 4, 7, 6]","numbers = [9, 2, 4, 7, 6]
numbers.sort(reverse=True)
print(numbers)","numbers = [9, 2, 4, 7, 6]
numbers",Incomplete Answer,String Manipulation
Convert this pseudocode into a working Python program.,"""FOR EACH item IN the list:
    IF item is less than 10:
        PRINT ""less than 10""
    ELSE: 
        PRINT ""greater than 10""""","list = [3, 5, 9, 15, 22]
for item in list:
    if item < 10:
        print(""less than 10"")
    else:
        print(""greater than 10"")","list = [3, 5, 9, 15, 22]
for item in list:
    if item < 10:
        pritn(""less than 10"")
    else:
        pritn(""greater than 10"")",Syntax Error,String Manipulation
Modify a Python program to accept a string argument and evaluate the length of it,,"import sys

def len_string(str):
    len_str = 0
    for char in str:
        len_str += 1
    return len_str

if __name__ == ""__main__"":
    if len(sys.argv) == 2:
        string = sys.argv[1]
        print(""Length of the string is"", len_string(string))
    else:
        print(""Please provide a string argument."")","import sys

def len_string(str)
    len_str = 0
    for char in str
        len_str += 1
    return len_str

if __name__ == ""__main__""
    if len(sys.argv) == 2
        string = sys.argv[1]
        print(""Length of the string is"", len_string(string))
    else
        print(""Please provide a string argument."")",Syntax Error,OOP
Count the number of unique items in a list using dictionaries in Python.,"list = [1, 2, 5, 9, 10, 1, 3, 9, 1, 2]","def count_unique(list):
    unique = {}
    for item in list:
        if item not in unique:
            unique[item] = 1
        else:
            unique[item] += 1
    return len(unique)","def count_unique(list):
    unique = {}
    for item in list:
        if item not in unique:
 ",Incomplete Answer,Loops
Create a Python class that holds a list of student objects,,"class StudentList:
    def __init__(self):
        self.students = []

    def add_student(self, student):
        self.students.append(student)

    def remove_student(self, student):
        self.students.remove(student)","class StudentList:
    def __init__(self):
        self.students = []

    def add_student(self, student):
        self.students.append(student)

    def remove_student(self, student):
        self.students.remove(student)",correct,Loops
Design a program to filter out strings in a list that have length 3.,"['ada', 'python', 'ruby', 'egg', 'coffee']","def filter_by_length(list):
    """"""
    Filters out strings in the given list that have length 3.
    """"""
    filtered_list = [word for word in list if len(word) == 3]
    return filtered_list

if __name__ == '__main__':
    list = ['ada', 'python', 'ruby', 'egg', 'coffee']
    print(filter_by_length(list))","def filter_by_length(list)
    """"""
    Filters out strings in the given list that have length 3.
    """"""
    filtered_list = [word for word in list if len(word) == 3]
    return filtered_list

if __name__ == '__main__'
    list = ['ada', 'python', 'ruby', 'egg', 'coffee']
    print(filter_by_length(list))",Syntax Error,Recursion
Create a Python dictionary to store the number of occurrences of each character of the given string.,String = “abracadabra”,str_dict = {i:list(str).count(i) for i in set(str)},str_dict = {ilist(str).count(i) for i in set(str)},Syntax Error,Recursion
Create a function in Python that takes a number N and returns the sum of the first N odd numbers.,N = 5,"def sum_of_odds(N):
    return sum([i for i in range(1, 2*N + 1, 2)])

N = 5
print(sum_of_odds(N))","def sum_of_odds(N)
    return sum([i for i in range(1, 2*N + 1, 2)])

N = 5
print(sum_of_odds(N))",Syntax Error,File I/O
Create a function in Python to calculate the difference between two dates.,"(2020, 4, 1), (2021, 4, 16)","from datetime import date

def diff_dates(date1, date2): 
    return abs(date2 - date1).days 

date1 = date(2020, 4, 1) 
date2 = date(2021, 4, 16) 
difference = diff_dates(date1, date2) 

print(difference, ""days"")","from datetime import date

def diff_dates(date1, date2): 
    return abs(date2 - date1).days 

date1 = dat",Incomplete Answer,Loops
Generate a Python program to print the Fibonacci series up to n-th term.,The n value is 6.,"def Fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
print(Fibonacci(6))","def Fibonacci(n): 
a = 0
b = 1
if n < 0: 
    print(""Incorrect input"") 
elif n == 0: 
    return a 
elif n == 1: 
    return b 
else: 
    for i in range(2,n): 
        c = a + b 
        a = b 
        b = c 
    return b 
  
print(Fibonacci(6))",Syntax Error,Loops
Write a python program to calculate maximum revenue.,"prices = [10, 7, 5, 8, 11, 9]","def max_revenue(prices):
    diff = [prices[i + 1] - prices[i] for i in range(len(prices) - 1)] 
    max_diff = 0
    for i in range(len(diff)): 
        for j in range(i + 1, len(diff) + 1): 
            current_diff = sum(diff[i:j]) 
            if current_diff > max_diff: 
                max_diff = current_diff 
 
    return max_diff","def max_revenue(prices):
    diff = [prices[i + 1] - prices[i] for i in range(len(prices) - 1)] 
    max_diff = 0
    for i in range(len(diff)): 
        for j in range(i + 1, len(diff) + 1): 
            current_diff = sum(diff[i:j]) 
            if current_diff > max_diff: 
                max_diff = current_diff 
 
    return max_diff",Syntax Error,Recursion
"Develop an algorithm in Python for reversing words in a string, making sure to avoid memory errors.",,"def reverse_words(s):
  # Split the string into an array
  words = s.split()
  # Reverse words array
  words.reverse()
  # Join the reversed words array to 
  # create the reversed string
  return "" "".join(words)","def reverse_words(s):
  # Split the string into an array
  words = s.split()
  # Reverse words array
  words.reverse()
  # Join the reversed words array to 
  # create the reversed string
  return "" "".join(words)",correct,Recursion
Write a python function to interchange the first and last elements in a list.,,"def swap_List(newList): 
    size = len(newList) 
    temp = newList[0] 
    newList[0] = newList[size - 1] 
    newList[size - 1] = temp  
    return newList ","def swap_List(newList): 
    size = len(newList) 
    temp = newList[0] 
    newList[0] = newList[size - 1] 
    newList[size - 1] = temp  
    return newList ",correct,String Manipulation
Design a Python script to return the output of a description tag given an HTML page.,"<html>
  <body>
    <p>This is a sample text</p>
    <description>This is a description tag </description>
  </body>
</html>","from bs4 import BeautifulSoup
def get_description(html_str):
  soup = BeautifulSoup(html_str, ""lxml"")
  description = soup.find(""description"")
  return description.get_text()","from bs4 import BeautifulSoup
def get_description(html_str):
  soup = BeautifulSoup(htm",Incomplete Answer,Loops
Create a Python class to represent a college student and its attributes.,,"class CollegeStudent:
    def __init__(self, name, age, major):
        self.name = name
        self.age = age
        self.major = major
    
    def get_name(self):
        return self.name
    
    def get_age(self):
        return self.age
    
    def get_major(self):
        return self.major","class CollegeStudent
    def __init__(self, name, age, major)
        self.name = name
        self.age = age
        self.major = major
    
    def get_name(self)
        return self.name
    
    def get_age(self)
        return self.age
    
    def get_major(self)
        return self.major",Syntax Error,File I/O
"Generate a Python function that reverses a given string, and test the function with an input of ""Hello"".","""Hello""","def reverse(string):
    return string[::-1]

print(reverse('Hello')) #prints ""olleH""","def reverse(string):
    return string[::-1]

print(reverse('Hello')) #prints ""olleH""",correct,Recursion
Given two strings S and T. Generate a Python program to count the number of distinct substrings of T in S.,,"def count_substring(S, T):
  count = 0
  for i in range(len(S)):
    for j in range(len(T)):
      if(S[i:i+j+1] == T):
        count += 1
  return count","def count_substring(S, T):
  count = 0
  for i in range(len(S)):
    for j i",Incomplete Answer,File I/O
Create a Python program that takes two strings as input and outputs a single concatenated string.,"""Hello "", ""world!""","def concat_strings(a, b):
    return a + b

result = concat_strings(""Hello "", ""world!"")
print(result)","def concat_strings(a, b:
    return a + b

result = concat_strings(""Hello "", ""world!""
print(result",Syntax Error,String Manipulation
Generate a Python script to sort the given list of words.,"['bubble', 'selection', 'quicksort', 'insertion']","# function to sort the given list of words
def sort_words(words):
    # sort the list of words in alphabetical order
    words.sort()

    # print the sorted list of words
    print(words)

# driver code
words = ['bubble', 'selection', 'quicksort', 'insertion']
sort_words(words)

# output
['bubble', 'insertion', 'quicksort', 'selection']","# function to sort the given list of words
def sort_words(words):
    # sort the list of words in alphabetical order
    words.sort()

    # print the sorted list of words
    print(words)

# driver code
words = ['bubble', 'selection', 'quicksort', 'insertion']
sort_words(words)

# output
['bubble', 'insertion', 'quicksort', 'selection']",correct,File I/O
Create a Python program to sum the elements of two lists.,"list1 = [1,2,3,4]
list2 = [5,6,7,8]","def sum_list(list1, list2):
    result = []
 
    for i in range(len(list1)):
        result.append(list1[i] + list2[i])
 
    return result
 
list1 = [1,2,3,4]
list2 = [5,6,7,8]
 
print(sum_list(list1, list2))","def sum_list(list1, list2):
    result = []
 
    for i in range(len(list1)):
        result.append(list1",Incomplete Answer,OOP
Write a Python program to remove duplicate characters from a given string.,"string = ""Hello World !""","string = ""Hello World !""

result = """" 
for char in string:
    if char not in result: 
        result += char

print(""String after removing duplicate characters:"", result)","string = ""Hello World !""

result = """" 
for char in string:
    if char not in result:",Incomplete Answer,Recursion
Design an algorithm in Python to generate all permutations of a given list.,,"def permute(nums):
  res = [] 
  backtrack(nums, res, [])
  return res

def backtrack(nums, res, temp):
  if(len(temp) == len(nums)):
    res.append(temp[:])
  else:
    for num in nums:
      if num not in temp:
        temp.append(num)
        backtrack(nums, res, temp)
        temp.pop()

#print the result 
nums = [1, 2, 3]
perms = permute(nums)
print(perms)","def permute(nums):
  res = [] 
  backtrack(nums, res, [])
  return res

def backtrack(nums, res, temp):
  if(len(temp) == len(nums)):
    res.append(temp[:])
  else:
    for num in ",Incomplete Answer,File I/O
Write a Python function to filter out strings that contain numbers.,"[""apple"",""hello123"",""hi12345"", ""good15""]","def filter_numbers(strings): 
    return [s for s in strings if not any(c.isdigit() for c in s)]

if __name__ == '__main__':
    strings = [""apple"",""hello123"",""hi12345"", ""good15""]
    print (filter_numbers(strings))","def filter_numbers(strings): 
    return [s for s in strings if not any(c.isdigit() for c in s)]

if __name",Incomplete Answer,Recursion
Write a Python code snippet to filter out elements from a given list lst where the element is not greater than 5.,"[3, 7, 2, 4, 6, 8]",filtered_lst = [x for x in lst if x <= 5],filtered_lst = [x for x in lst if x <= 5],Syntax Error,Loops
Design a class in Python to store customer information.,,"class Customer:
    def __init__(self, name, address, contact_number):
        self.name = name
        self.address = address
        self.contact_number = contact_number","class Customer:
    def __init__(self, name, address, contact_number:
        self.name = name
        self.address = address
        self.contact_number = contact_number",Syntax Error,Loops
Generate a Python program to find the maximum value in a list of numbers.,"[23, 12, 48, 61]","def find_max(list_of_numbers):
    max_val = max(list_of_numbers)
    return max_val

list_nums = [23, 12, 48, 61]
max_val = find_max(list_nums)
print(max_val)","def find_max(list_of_numbers):
    max_val = max(list_of_numbers)
    return ma",Incomplete Answer,OOP
Create a Python program that prints the following numbers in a comma seperated list.,"1, 8, 10, 15, 12","print("", "".join([str(x) for x in [1, 8, 10, 15, 12]]))","print("", "".join([str(x) for x in [1, 8, 10, 15, 12]]))",Syntax Error,String Manipulation
Create a class structure to represent a student in Python.,,"class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    def getName(self):
        return self.name
    
    def setName(self, name):
        self.name = name
    
    def getAge(self):
        return self.age
    
    def setAge(self, age):
        self.age = age","class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    def getName(self):
        return self.name
    
 ",Incomplete Answer,String Manipulation
Write a code in Python to optimize this objective function.,Objective function: x + y^2 + z^3,"import scipy.optimize

def objective(variables):
    x,y,z = variables
    return x + y*y + z*z*z

x0 = [0,0,0] # Initial guess of variables

# Perform the optimization
res = scipy.optimize.minimize(
    objective, 
    x0,
    method='nelder-mead',
    options={'xtol': 1e-8, 'disp': True}
)

# Print resultant variables
print(res.x)

# Print minimal value
print(res.fun)","import scipy.optimize

def objective(variables):
    x,y,z = variables
    return x + y*y + z*z*z

x0 = [0,0,0] # Initial guess of variables

# Perform the optimization
res = scipy.optimize.minimize(
    objective, 
    x0,
    method='nelder-mead',
    options={'xtol': 1e-8, 'disp': True}
)

# Print resultant variables
pritn(res.x)

# Print minimal value
pritn(res.fun)",Syntax Error,OOP
"You need to read code and detect the language it is written in (for example, Python, JavaScript, etc).",,Python,Python,Incomplete Answer,String Manipulation
Develop a Python script that determines the average age of people in a given list.,"[{""name"":""john"",""age"":20},{""name"":""jack"",""age"":25},{""name"":""jason"",""age"":30}]","def find_average_age(people_list):
    ages_sum = 0
    for person in people_list:
        ages_sum += person['age']
    return ages_sum / len(people_list)

people_list = [{""name"":""john"",""age"":20},{""name"":""jack"",""age"":25},{""name"":""jason"",""age"":30}] 
average_age = find_average_age(people_list)
print(average_age)","def find_average_age(people_list):
    ages_sum = 0
    for person in people_list:
        ages_sum += person['age']
    return ages_sum / len(people_list)

people_list = [{""name"":""john"",""age"":20},{""name"":""jack"",""age"":25},{""name"":""jason"",""age"":30}] 
average_age = find_average_age(people_list)
pritn(average_age)",Syntax Error,String Manipulation
Write a Python program to calculate the standard deviation of a given list of numbers.,"[1, 2, 3, 4]","def calculate_sd(lst):
    avg = sum(lst) / len(lst)
    return (sum([(x - avg)**2 for x in lst]) / len(lst)) ** 0.5","def calculate_sd(lst):
    avg = sum(lst) / len(lst)
    return (sum([(x - avg)**2 for x in lst]) / len(lst)) ** 0.5",correct,OOP
Generate a data structure in python to represent a Queue.,,"class Queue(): 
  
    def __init__(self): 
        self.items = [] 
  
    def isEmpty(self): 
        return self.items == []  
  
    def enqueue(self, item): 
        self.items.insert(0, item)
        
    def dequeue(self):
        return self.items.pop() 
  
    def size(self): 
        return len(self.items)","class Queue(): 
  
    def __init__(self): 
        self.items = [] 
  
    def isEmpty(self): 
        return self.items == []  
  
    def enqueue(self, item): 
        self.items.insert(0, item)
        
    def dequeue(self):
        return self.items.pop() 
  
    def size(self): 
        return len(self.items)",correct,Recursion
Write a Python program to detect the largest word in a sentence. The program should take a string as input and return the largest word found in it.,This sentence has seven words.,"def find_largest_word(sentence):
 splits = sentence.split(' ')
 largest_word = """"
 for word in splits:
 if len(word) > len(largest_word):
 largest_word = word
 return largest_word

print(find_largest_word(""This sentence has seven words.""))
# Output: ""sentence""","def find_largest_word(sentence):
 splits = sentence.split(' ')
 largest_word = """"
 for word in splits:
 if len(word) > len(largest",Incomplete Answer,Recursion
Develop a function in Python that takes a list of numbers as an argument and returns the difference between the maximum and minimum value.,"[3, 4, 7, 8, 12]","def maxMinDifference(arr):
    return max(arr)-min(arr)

result = maxMinDifference([3, 4, 7, 8, 12])
print(result)","def maxMinDifference(arr):
    return max(arr)-min(arr)

",Incomplete Answer,OOP
Create a Python script to create a data visualisation of the data provided.,"[5, 10, 15, 20, 25, 30, 35, 40, 45]","import matplotlib.pyplot as plt 
data = [5, 10, 15, 20, 25, 30, 35, 40, 45]
plt.plot(data) 

# formatting the text
plt.title('Data Visualisation') 
plt.xlabel('Data Points') 
plt.ylabel('Value') 

# function to show the plot 
plt.show()","import matplotlib.pyplot as plt 
data = [5, 10, 15, 20, 25, 30, 35, 40, 45]
plt.plot(data) 

# formatting the text
plt.title('Data Visualisation') 
plt.xlabel('Data Points') 
plt.ylabel('Value') 

# function to show the plot 
plt.show()",correct,String Manipulation
Write a Python program to sort a given list of strings based on their length.,"list1 = [""apple"", ""orange"", ""banana"", ""mango""]","def sort_str_by_length(list1):
 return sorted(list1, key=len)","def sort_str_by_length(list1):
 return sorted(list1, key=len)",correct,File I/O
What is the output of this Python code?,"a = 3
b = 1
print(a+b)",4,4,Syntax Error,File I/O
Devise a Python program to create a list of five random integer numbers between -100 to 100.,,"import random

# Function to get five random numbers 
def getRandomNumbers(lower, upper):
    numbers = []
    # Generate 5 numbers
    for _ in range(5):
        numbers.append(random.randint(lower, upper))
    return numbers

# Generate five random numbers between -100 to 100
randomNumbers = getRandomNumbers(-100, 100)
print('Random Numbers = ', randomNumbers)","import random

# Function to get five random numbers 
def getRandomNumbers(lower, upper)
    numbers = []
    # Generate 5 numbers
    for _ in range(5)
        numbers.append(random.randint(lower, upper))
    return numbers

# Generate five random numbers between -100 to 100
randomNumbers = getRandomNumbers(-100, 100)
print('Random Numbers = ', randomNumbers)",Syntax Error,File I/O
Create a design pattern to make a python program more efficient.,,"The Factory Pattern is a design pattern that can be used to create an efficient Python program. This pattern is used when a program needs to create an object based on a specific type of input. For example, if an application needs to create objects for different types of data, it can use the Factory Pattern to create these objects in a more efficient manner.","The Factory Pattern is a design pattern that can be used to create an efficient Python program. This pattern is used when a program needs to create an object based on a specific type of input. For example, if an application needs to create objects for different types of data, it can use the Factory Pattern to create these objects in a more efficient manner.",correct,OOP
Write a Python script to extract the text of all comments from a given HTML page.,,"from bs4 import BeautifulSoup 

# Get the page contents 
with open('example.html', 'r') as html_file:
	soup = BeautifulSoup(html_file, 'lxml')

# Extract the comments 
comments = soup.find_all(""div"", class_=""comment"")

# Print the extracted comments
for comment in comments:
	print(comment.text)","from bs4 import BeautifulSoup 

# Get the page contents 
with open('example.html', 'r') as html_file:
	soup = BeautifulSoup(html_file, 'lxml')

# E",Incomplete Answer,Recursion
What Python code can you write that takes two strings and returns whether they are anagrams?,"str1 = ""abcd""
str2 = ""cbda""","def is_anagram(str1, str2):
    if len(str1) != len(str2):
        return False

    str1_counts = collections.Counter(str1)
    str2_counts = collections.Counter(str2)
    
    for char in str1_counts:
        if str1_counts[char] != str2_counts[char]:
            return False
    return True","def is_anagram(str1, str2):
    if len(str1) != len(str2):
        return False

    str1_counts = collections.Counter(str1)
    str2_counts = coll",Incomplete Answer,String Manipulation
Build a basic text-based game in Python that prompts the user to enter a number between 0 and 10.,,"import random

def game():
 num = random.randint(0, 10)
 num_guesses = 0

 while True:
 guesses = int(input('Guess a number between 0 and 10: '))
 num_guesses += 1

 if guesses == num:
 print(f'You guessed correctly in {num_guesses} guesses! The number was {num}')
 break
 else:
 print('Wrong guess. Try again.')
 
game()","import random

def game():
 num = random.randint(0, 10)
 num_guesses = 0

 while True:
 guesses = int(input('Guess a number between 0 and 10: '))
 num_guesses += 1

 if guesses == num:
 print(f'You guessed correctly in {num_guesses} guesses! The number was {num}')
 break
 else:
 print('Wrong guess. Try again.')
 
game()",correct,String Manipulation
Generate a code snippet to insert a key-value pair into a given dictionary.,"dict = {'I': 1, 'love': 2, 'coding': 3}
key = 'Python'
value = 10",dict['Python'] = 10,dict['Python'] = 10,correct,File I/O
Write a function in Python that accepts a list of numbers and returns the  highest and lowest values in the list.,"numbers = [2, 18, 9, 22, 10, 17, 24]","def max_min(numbers):
  '''returns a tuple containing highest and lowest values in a given list'''
  return (max(numbers), min(numbers))","def max_min(numbers):
  '''returns a tuple containing highest and lowest values in a given list'''
  return (max(numbers), min(numbers))",Syntax Error,Recursion
Identify which of the following are palindromes in Python.,"words = ['radar', 'mom', 'dad', 'civic']","palindromes = []

for word in words:
    if word == word[::-1]:
        palindromes.append(word)

print(palindromes) # prints ['radar', 'mom', 'dad', 'civic']","palindromes = []

for word in words:
    if word == word[::-1]:
        palindr",Incomplete Answer,OOP
Write a function to sum elements in two lists.,,"def sum_list(lst1,lst2):
  res_list = [lst1[i] + lst2[i] for i in range(len(lst1))] 
  return res_list","def sum_list(lst1,lst2):
  res_list = [lst1[i] + ls",Incomplete Answer,String Manipulation
Construct a Python program to get the first 100 prime numbers,,"def get_prime_numbers(n):
    prime_numbers = []
    for num in range(2, n+1): 
        for i in range(2, num): 
            if num % i == 0:
                break
        else:
            prime_numbers.append(num) 
    return prime_numbers

print(get_prime_numbers(100))","def get_prime_numbers(n):
    prime_numbers = []
    for num in range(2, n+1): 
        for i in range(2, num): 
            if num % i == 0:
                break
        else:
            prime_numbers.append(num) 
    return prime_numbers

print(get_prime_numbers(100))",correct,String Manipulation
"Create a program in Python which takes an input string, and sorts it alphabetically",Fortnite,"def sort_string(string): 
    return ''.join(sorted(string)) 
  
string = ""Fortnite""
print(sort_string(string))","def sort_string(string): 
return ''.join(sorted(string)) 
  
string = ""Fortnite""
print(sort_string(string))",Syntax Error,File I/O
"Create a command-line chatbot in Python that can respond to simple questions like ""What is your name?""",,"import cmd

class Bot(cmd.Cmd):
 prompt = 'Bot> '
 
 def do_greet(self, args):
 print('Hello! My name is Bot.')

def do_name(self, args):
 print('My name is Bot.')

if __name__ == '__main__':
 Bot().cmdloop()","import cmd

class Bot(cmd.Cmd):
 prompt = 'Bot> '
 
 def do_greet(self, args):
 print('Hello! My name is Bot.')

def do_name(self, args):
 print('My name is Bot.')

if __name__ == '__main__':
 Bot().cmdloop()",correct,String Manipulation
Create a Python class called Rectangle to represent a two-dimensional rectangle with a length and width.,,"class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width

    def area(self):
        return self.length * self.width","class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width

    def area(self):
        return self.length * self.width",correct,Loops
Create a program in Python to generate a list of prime numbers up to N,,"def prime_list(N):
    isPrime = [True for i in range(N + 1)]
    p = 2
    while p * p <= N:
        if isPrime[p]:
            for i in range(p * p, N + 1, p):
                isPrime[i] = False
        p += 1
    prime_nums = []
    for p in range(2, N):
        if isPrime[p]:
            prime_nums.append(p)
    return prime_nums","def prime_list(N):
    isPrime = [True for i in range(N + 1)]
    p = 2
    while p * p <= N:
        if isPrime[p]:
            for i in range(p * p, N + 1, p):
                isPrime[i] = False
        p += 1
    prime_nums = []
    for p in range(2, N):
        if isPrime[p]:
            prime_nums.append(p)
    return prime_nums",correct,Recursion
Write a Python script to print out all prime numbers in a given list.,"[4, 15, 22, 50, 119]","import math

def is_prime(n):
    for i in range(2, int(math.sqrt(n))+1):
        if n % i == 0: 
            return False
    return True

input_list = [4, 15, 22, 50, 119]

for num in input_list:
    if is_prime(num):
        print(num)

# Output: 
# 4
# 15
# 50
# 119","import math

def is_prime(n):
    for i in range(2, int(math.sqrt(n))+1):
        if n % i == 0: 
            return False
    return T",Incomplete Answer,String Manipulation
"Create a Python object that contains two attributes, ""Name"" and ""Age"".",,"class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

person = Person(""John"", 25)","class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

person = Person(""John"", 25)",correct,Loops
Create a program in Python to add the elements of two given lists.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","list1 = [1, 2, 3]
list2 = [4, 5, 6]

def addLists(list1, list2):
    result = [] 
    for i in range(0, len(list1)):
        result.append(list1[i] + list2[i])
    return result

print(addLists(list1, list2))","list1 = [1, 2, 3]
list2 = [4, 5, 6]

def addLists(list1, list2):
    result = [] 
    for i in range(0, ",Incomplete Answer,String Manipulation
Write a Python program to generate a random permutation of a given sequence.,"sequence = [1, 2, 3]","from random import shuffle

sequence = [1, 2, 3]
shuffle(sequence)
print(sequence)","from random import shuffle

sequence = [1, 2, 3]
shuffle(sequence)
pritn(sequence)",Syntax Error,Recursion
Write Python code to generate a random string of length 8,,"import string
import random

def generate_random_string():
    """"""
    Generate a random string of 8 characters
    """"""
    
    # Character sets
    chars = string.ascii_lowercase + string.ascii_uppercase + string.digits
    # Length of random string
    length = 8
    
    # Generate random string
    random_string = ''.join(random.sample(chars, length))

    return random_string

print(generate_random_string())","import string
import random

def generate_random_string()
    """"""
    Generate a random string of 8 characters
    """"""
    
    # Character sets
    chars = string.ascii_lowercase + string.ascii_uppercase + string.digits
    # Length of random string
    length = 8
    
    # Generate random string
    random_string = ''.join(random.sample(chars, length))

    return random_string

print(generate_random_string())",Syntax Error,OOP
"Create a Python code snippet to print ""Hello World!"" 10 times in the console.",,"for i in range(10):
 print(""Hello World!"")","for i in range(10):
 ",Incomplete Answer,Loops
Write a Python program to find the maximum and minimum value of a given array.,"[-2, 15, 4, 8, 11]","def min_max(data):
    min_val = min(data)
    max_val = max(data)
    return min_val, max_val
 
min_val, max_val = min_max([-2, 15, 4, 8, 11])
 
print('Minimum Value: ', min_val)
print('Maximum Value: ', max_val)","def min_max(data):
    min_val = min(data)
    max_val = max(data)
    return min_val, max_val
 
min_val, max_val = min_max([-2, 15, 4, 8, 11])
 
print('Minimum Value: ', min_val)
print('Maximum Value: ', max_val)",correct,String Manipulation
Build a list comprehension in Python to print numbers divisible by 3 and not divisible by 7 in the range of 30 to 50,Range: 30 to 50,"divisible_by_3_or_7 = [n for n in range(30,51) if n % 3 == 0 and n % 7 != 0]
print(divisible_by_3_or_7) # output: [30, 33, 36, 39, 42, 45, 48]","divisible_by_3_or_7 = [n for n in range(30,51) if n % 3 == 0 and n % 7 != 0]
print(divisible_by_3_or_7) # output: [30, 33, 36, 39, 42, 45, 48]",correct,Loops
Construct an algorithm in Golang to capitalize all the letters in a given string,"string = ""python""","package main

import (
	""strings""
)

func capitalize(string string) string {
	return strings.ToUpper(string)
}

func main() {
	string := ""python""
	fmt.Println(capitalize(string))
}","package main

import (
	""strings""
)

func capitalize(string string) string {
	return strings.ToUpper(string)
}

func main() {
	string := ""python""
	fmt.Println(capitalize(string))
}",correct,OOP
Design a class in Python to represent a circle.,< noinput >,"class Circle:
    """"""Class to represent a circle.""""""
    def __init__(self, radius):
        """"""Initialize the circle.""""""
        self.radius = radius

    def get_area(self):
        """"""Calculate and return the area of the circle.""""""
        return 3.14 * self.radius * self.radius","class Circle:
    """"""Class to represent a circle.""""""
    def __init__(self, radius):
        """"""Initialize the circle.""""""
        self.radius = radius

    def get_area(self):
        """"""Calculate and return the area of the circle.""""""
        return 3.14 * self.radius * self.radius",correct,String Manipulation
Implement a basic spell checker in Python that takes as input a given text and finds all the misspelled words.,,"from spellchecker import SpellChecker

spell = SpellChecker() 

# Find all the possible words that are misspelled
misspelled = spell.unknown(text.split())

# Print out each misspelled word and its correction
for word in misspelled:
    print(f'Incorrect word: {word}\tCorrection: {spell.correction(word)}')","from spellchecker import SpellChecker

spell = SpellChecker() 

# Find all the possible words that are misspelled
misspelled = spell.unknown(text.split()",Incomplete Answer,Loops
Create a Python code to check if two DNA sequences are equal.,"ATTCTCA, ATTCCTA","def equal(dna1, dna2):
    if (dna1 ==dna2):
        return True
    else:
        return False
dna1 = 'ATTCTCA'
dna2 = 'ATTCCTA'

print(equal(dna1,dna2))","def equal(dna1, dna2):
    if (dna1 ==dna2):
        return True
    else:
        return False
dna1 = 'ATTCTCA'
dna2 = 'ATTCCTA'

print(equal(dna1,dna2))",correct,Loops
How would you optimize the following Python code?,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)","def factorial(n):
    if n == 0:
        return 1
    else:
        # Use dynamic programming
        # to store the intermediate results
        memory = {}
        if n in memory:
            return memory[n]
        else:
            memory[n] = n * factorial(n - 1)
            return memory[n]","def factorial(n):
    if n == 0:
        return 1
    else:
        # Use dynamic programming
        # to store the intermediate results
        memory = {}
        if n in memory:
            return memory[n]
        else:
            memory[n] = n * factorial(n - 1)
            return memory[n]",Syntax Error,Loops
Write a python function to find the average of odd numbers till a given odd number.,,"def average_Odd(n) : 
    if (n%2==0) : 
        return (""Invalid Input"") 
        return -1 
    sm =0
    count =0
    while (n>=1) : 
        count=count+1
        sm = sm + n 
        n = n-2
    return sm//count ","def average_Odd(n) : 
    if (n%2==0) : 
        return (""Invalid Input"") 
        return -1 
    sm =0
    count =0
    while (n>=1) : 
        count=count+1
        sm = sm + n 
        n = n-2
    return sm//count ",correct,String Manipulation
Write a function to calculate the maximum aggregate from the list of tuples.,,"from collections import defaultdict
def max_aggregate(stdata):
    temp = defaultdict(int)
    for name, marks in stdata:
        temp[name] += marks
    return max(temp.items(), key=lambda x: x[1])","from collections import defaultdict
def max_aggregate(stdata):
    temp = defaultdict(int)
    for",Incomplete Answer,OOP
Create a Python program to calculate the factorial of an integer,7,"def factorial(n): 
    if n == 0 or n == 1: 
        return 1
    else: 
       return n * factorial(n - 1)

result = factorial(7)
print(result)","def factorial(n): 
    if n == 0 or n == 1: 
        return 1
    else: 
       return n * factorial(n - 1)

result = factorial(7)
pritn(result)",Syntax Error,String Manipulation
Write a Python code snippet to calculate the sum of the first 100 prime numbers.,,"def is_prime(num):
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

prime_sum = 0 
count = 0
num = 2

while count < 100:
    if is_prime(num):
        prime_sum += num
        count += 1
    num += 1

print(prime_sum)","def is_prime(num):
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

prime_sum = 0 
co",Incomplete Answer,OOP
Create a Python script to sort a list of tuples by the second element in the tuple in ascending order.,"myList = [('Tom',7),('Harry',5),('Bob',8)]","def sortList(myList): 
 # sort list by second element  
 myList.sort(key = lambda x: x[1]) 
  
 # printing the sorted list  
 print (""The sorted list in ascending order is : "") 
 for i in range(len(myList)): 
  print(myList[i]), 

myList = [('Tom',7),('Harry',5),('Bob',8)]
sortList(myList)","def sortList(myList): 
 # sort list by second element  
 myList.sort(key = lambda x: x[1]) 
  
 # printing the sorted list  
 print (""The sorted ",Incomplete Answer,OOP
Generate a python program for validating a phone number.,"Phone numbers should be in 10-digit format (no dashes, hyphens, etc.).","def valid_phone_number(phone):
    phone = str(phone)
    return len(phone) == 10 and phone.isdigit()","def valid_phone_number(phone):
    phone = str(pho",Incomplete Answer,Loops
Edit this Python code to be more efficient.,"def find_min(items):
    min = items[0]
    for item in items:
        if item < min:
            min = item
    return min","def find_min(items):
    min = float('inf')
    for item in items:
        if item < min:
            min = item
    return min","def find_min(items):
min = float('inf')
for item in items:
    if item < min:
        min = item
return min",Syntax Error,String Manipulation
Create a Python program that takes a sentence as input and returns a dictionary of the words and their frequencies,This is a sample sentence.,"def word_frequency(sentence):
    words = sentence.split()
    freq = {word: words.count(word) for word in words}
    return freq

sentence = 'This is a sample sentence.'
result = word_frequency(sentence)
print(result)","def word_frequency(sentence):
    words = sentence.split()
    freq = {word: words.count(word) for word in wo",Incomplete Answer,Recursion
Compute the frequency of the words in a sentence using Python.,"sentence = ""Hi there, how are you?""","def compute_word_frequency(sentence):
    words = sentence.split()
    frequency = {}

    for word in words:
        if word in frequency:
            frequency[word] += 1
        else:
            frequency[word] = 1
    return frequency","def compute_word_frequency(sentence):
    words = sentence.split()
    frequency = {}

    for word in words:
        if word in frequency:
            frequency[word] += 1
        else:
            frequency[word] = 1
    return frequency",correct,OOP
Write a Python program to find all prime numbers less than a given number.,,"def find_primes(n): 
    primes = []
    for i in range(2, n+1):
        is_prime = True
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(i)
    
    return primes

print(find_primes(10)) # prints [2, 3, 5, 7]","def find_primes(n): 
    primes = []
    for i in range(2, n+1):
        is_prime = True
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(i)
    
    return primes

print(find_primes(10)) # prints [2, 3, 5, 7]",correct,String Manipulation
Write a function to check if the two given strings are permutations of each other.,,"def check_permutation(str1, str2):
  n1=len(str1)
  n2=len(str2)
  if(n1!=n2):
    return False
  a=sorted(str1)
  str1="" "".join(a)
  b=sorted(str2)
  str2="" "".join(b)
  for i in range(0, n1, 1):
    if(str1[i] != str2[i]):
      return False
  return True","def check_permutation(str1, str2):
  n1=len(str1)
  n2=len(str2)
  if(n1!=n2):
    return False
  a=sorted(str1)
  str1="" "".join",Incomplete Answer,Loops
Create a Python program that takes a string as input and prints all permutations of it in lexicographical order.,ABC,"def permutations(string):
 if len(string) == 0:
 return

 else:
 first_char = string[0]
 remainder = string[1:]
 permutations(remainder)
 for perm in permutations(remainder):
 for i in range(len(perm)+1):
 result = perm[:i] + first_char + perm[i:]
 print(result)

permutations(""ABC"") #run the code

# Output
ABC
ACB
BAC
BCA
CBA
CAB","def permutations(string)
 if len(string) == 0
 return

 else
 first_char = string[0]
 remainder = string[1]
 permutations(remainder)
 for perm in permutations(remainder)
 for i in range(len(perm)+1)
 result = perm[i] + first_char + perm[i]
 print(result)

permutations(""ABC"") #run the code

# Output
ABC
ACB
BAC
BCA
CBA
CAB",Syntax Error,String Manipulation
Create a Python function to identify the number of even numbers present in a given list of numbers.,"list = [1, 2, 3, 4, 5]","def countEvenNum(list):
    return len([x for x in list if x % 2 == 0])

list = [1, 2, 3, 4, 5]
print(countEvenNum(list))","def countEvenNum(list):
    return len([x for x in list if x % 2 == 0])

list = [1, 2, 3, 4, 5]
print(countEvenNum(list))",correct,Recursion
Create a Python program to log the current time (in the given timezone) every 20 minutes.,Timezone: America/Los_Angeles,"import time
import datetime
from pytz import timezone

def logtime(tz):
 while True:
 currtime = datetime.datetime.now(tz)
 print(""The current time is"", currtime.strftime(""%H:%M:%S""))
 time.sleep(60 * 20)

logtime(timezone('America/Los_Angeles'))","import time
import datetime
from pytz import timezone

def logtime(tz)
 while True
 currtime = datetime.datetime.now(tz)
 print(""The current time is"", currtime.strftime(""%H%M%S""))
 time.sleep(60 * 20)

logtime(timezone('America/Los_Angeles'))",Syntax Error,Loops
Write a Python function to check if a string contains only numbers.,,"def checkNum(s): 
    flag = True
    for i in s: 
        if i.isdigit() == False: 
            flag = False
            break
  
    return flag","def checkNum(s): 
    flag = True
    for i in s: 
        if i.isdigit()",Incomplete Answer,OOP
"Write a Python program to print the numbers from 1 to 10 in ascending order, separated by a space.",,"for i in range(1, 11):
    print(i, end = ' ')","for i in range(1, 11)
    print(i, end = ' ')",Syntax Error,Recursion
Develop a Python program to remove duplicate characters in a given string.,"""Hello World""","def remove_duplicate(my_string):
    char_seen = []
    for character in my_string:
        if character not in char_seen:
            char_seen.append(character)
    return ''.join(char_seen)

print(remove_duplicate(""Hello World"")) #Helo Wrld","def remove_duplicate(my_string):
    char_seen = []
    for character in my_string:
        if character not in char_seen:
            char_seen.append(character)
    return ''.join(char_seen)

pritn(remove_duplicate(""Hello World"")) #Helo Wrld",Syntax Error,Recursion
"Generate a program in Python to take in two strings as input, and output a list of all thewords in both strings.","String 1: I want to make a difference
String 2: The journey to success is long","def string_to_list(s1, s2):
    s1_list = s1.split()
    s2_list = s2.split()
    output_list = s1_list + s2_list
    return output_list

words = string_to_list(""I want to make a difference"", ""The journey to success is long"")
print(words)","def string_to_list(s1, s2):
    s1_list = s1.split()
    s2_list = s2.split()
    output_list = s1_list + s2_list
    return output_list

words = string_to_list(""I want to make a difference"", ""The journey to success is long"")
print(name, words)",Syntax Error,Loops
Create a function in Python that checks if a given number is a prime.,15,"def isPrime(n):
    if n < 2:
        return False
    for i in range(2, int(sqrt(n))+1):
        if n % i == 0:
            return False
    return True","def isPrime(n):
    if n < 2:
        return False
    for i in range(2, int(sqrt(n))+1):
        if n % i == 0:
            return False
    return True",Syntax Error,Recursion
Write a Python program to filter a list of numbers so only even numbers are kept.,"[2, 7, 3, 6, 10, 11, 13]","new_list = [x for x in input_list if x % 2 == 0]
print(new_list) # Output: [2, 6, 10]",new_list = [x for x in input_list if x % 2,Incomplete Answer,Recursion
Write a Python script to implement an iterator that iterates over a given array.,"[2, 5, 6, 8, 9]","def iterator(array):
  index = 0
  while (index < len(array)):
    yield array[index]
    index += 1

given_array = [2, 5, 6, 8, 9]
iterating = iterator(given_array)

for value in iterating:
  print(value)","def iterator(array):
  index = 0
  while (index < len(array)):
    yield array[index]
    index += 1

given_array = [2, 5, 6, 8, 9]
iterating = iterator(given_array)

for value in iterating:
  print(value)",correct,Loops
Perform sentiment analysis on a given text using Python.,This movie was an amazing experience!,"from textblob import TextBlob

text = ""This movie was an amazing experience!""
blob = TextBlob(text)
print(""Sentiment score: "", blob.sentiment.polarity)","from textblob import TextBlob

text = ""This movie was an amazing experience",Incomplete Answer,OOP
Write a Python program to find the most common letter in the given string.,"str = ""hello world""","str = ""hello world""

from collections import Counter

def most_common_letter(str):
    letters_count = Counter(str).most_common()
    return letters_count[0][0]

print(most_common_letter(str))","str = ""hello world""

from collections import Counter

def most_common_letter(str):
    letters_count = Counter(str).most_common()
    return letters_count[0][0]

print(most_common_letter(str))",correct,Recursion
Write a function to find the top or bottom surface area of a cylinder.,,"def topbottom_surfacearea(r):
  toporbottomarea=3.1415*r*r
  return toporbottomarea","def topbottom_surfacearea(r):
  toporbottomarea=3.1415*r*r
  return toporbottomarea",Syntax Error,String Manipulation
"Write a Python function that creates a JSON response with fields for score and data. The data field should contain a message that varies depending on the score value. If the score is 0, the message should state ""Try again"". If the score is 1, the message should state ""Well done"".",score = 0,"def create_response(score):
 if score == 0:
  message = ""Try again""  
 elif score == 1:
  message = ""Well done""
 else:
  message = """"
 
 return {""score"": score, ""message"": message}","def create_response(score:
 if score == 0:
  message = ""Try again""  
 elif score == 1:
  message = ""Well done""
 else:
  message = """"
 
 return {""score"": score, ""message"": message}",Syntax Error,Loops
Write a Python program to scrape the text from a web page and remove all the html tags.,<p>This is a sample web page.<br>This text has <b>some</b> <i>html</i> tags.</p>,"import re

text = ""<p>This is a sample web page.<br>This text has <b>some</b> <i>html</i> tags.</p>""

cleaned_text = re.sub(r'<.*?>', '', text)

print(cleaned_text)
# Output: This is a sample web page.This text has some html tags.","import re

text = ""<p>This is a sample web page.<br>This text has <b>some</b> <i>html</i> tags.</p>""

cleaned_text = re.sub(r'<.*?>', '', text)

print(cleaned_text)
# Output This is a sample web page.This text has some html tags.",Syntax Error,OOP
Build a Python script for replacing punctuation with spaces.,,"def remove_punctuation(s):
    punctuation = """"""!""#$%&'()*+, -./:;<=>?@[\]^_`{|}~""""""
    s_no_punct = """"
    for ch in s:
        if ch not in punctuation:
            s_no_punct += ch
        else:
            s_no_punct += "" ""
    return s_no_punct

s = ""Hello, world!""
s_no_punct = remove_punctuation(s)
print(s_no_punct) # Output: ""Hello  world ""","def remove_punctuation(s):
    punctuation = """"""!""#$%&'()*+, -./:;<=>?@[\]^_`{|}~""""""
    s_no_punct = """"
    for ch in s:
        if ch not in punctuation:
            s_no_punct += ch
        else:
            s_no_punct += "" ""
    return s_no_punct

s = ""Hello, world!""
s_no_punct = remove_punctuation(s)
print(s_no_punct) # Output: ""Hello  world """,correct,File I/O
Generate a Python program to generate a random permutation of the integers in a given list,,"from random import shuffle 

def random_permutation(lst): 
    shuffle(lst) 
    return lst","from random import shuffle 

def random_permutation(lst): 
    shuffle(lst) 
    return lst",correct,Recursion
Create a Python program to compare two list and return a new combined list,"list_a = [1, 2, 3]
list_b = [4, 5, 6]","def combine_list(list_a, list_b):
    combined_list = []
    for a in list_a:
        combined_list.append(a)
    for b in list_b:
        combined_list.append(b)
    return combined_list","def combine_list(list_a, list_b)
    combined_list = []
    for a in list_a
        combined_list.append(a)
    for b in list_b
        combined_list.append(b)
    return combined_list",Syntax Error,File I/O
You are given a list containing integers. Generate a Python program to find the median of that list.,"list = [5, 3, 8, 1, 9, 2]","def find_median(list): 
    list = sorted(list) 
    mid = len(list) // 2 
    if len(list) % 2 == 0: 
        return (list[mid] + list[mid - 1]) / 2 
    else: 
        return list[mid] 

find_median(list)","def find_median(list): 
    list = sorted(list) 
    mid = len(list) // 2 
    if len(list) % 2 == 0: 
",Incomplete Answer,Loops
Compile a given python code that uses a specific library or package into an executable.,,"import py_compile
py_compile.compile(""<python_code_file>"", cfile=""<executable_name>"", doraise=True)","import py_compile
py_compile.compile(""<python_code_file>"", cfile=""<executable_name>"", doraise=True)",correct,String Manipulation
Create a function in Python to initialize an array with two parameters.,"params: (4, 5)","def initialize_array(rows, cols): 
    array = [[0 for i in range(cols)] for j in range(rows)]
    return array","def initialize_array(rows, cols): 
    array = [[0 for i in range(cols)] for j in range(rows)]
    return array",correct,File I/O
Write a Python program to solve the Tower of Hanoi problem.,,"def towers_of_hanoi(n, from_rod, aux_rod, to_rod): 
    if n == 1: 
        print(""Move disk 1 from rod"",from_rod,""to rod"",to_rod)
        return
    towers_of_hanoi(n-1, from_rod, to_rod, aux_rod) 
    print(""Move disk"",n,""from rod"",from_rod,""to rod"",to_rod) 
    towers_of_hanoi(n-1, aux_rod, from_rod, to_rod) 
          
# Driver code  
n = 4
towers_of_hanoi(n, 'A', 'B', 'C')","def towers_of_hanoi(n, from_rod, aux_rod, to_rod) 
    if n == 1 
        print(""Move disk 1 from rod"",from_rod,""to rod"",to_rod)
        return
    towers_of_hanoi(n-1, from_rod, to_rod, aux_rod) 
    print(""Move disk"",n,""from rod"",from_rod,""to rod"",to_rod) 
    towers_of_hanoi(n-1, aux_rod, from_rod, to_rod) 
          
# Driver code  
n = 4
towers_of_hanoi(n, 'A', 'B', 'C')",Syntax Error,File I/O
Construct a Python program that finds the maximum number in a given sequence of integers.,"7, 3, 12, 9, 4","sequence = [7, 3, 12, 9, 4]
maxnum = 0

for num in sequence:
 if num > maxnum:
  maxnum = num

print(maxnum) # Output: 12","sequence = [7, 3, 12, 9, 4]
maxnum = 0

for num in sequence:",Incomplete Answer,File I/O
Create an array in Python that contains the numbers 1-10 in ascending order.,,"my_array = [1,2,3,4,5,6,7,8,9,10]","my_array = [1,2,",Incomplete Answer,String Manipulation
"Edit the following Python program to return true if the following string contains the word ""Hello"".",def check_hello(s):,"def check_hello(s):
    return 'Hello' in s","def check_hello(s):
    return 'Hello' in s",correct,File I/O
Create a vectorized implementation in Python to solve the given problem.,"def add(a, b):
    c = []
    for i in range(len(a)):
        c.append(a[i] + b[i])
    return c","import numpy as np
def add_vector(a, b):
    return np.add(a,b)","import numpy as np
def add_vector(a, b)
    return np.add(a,b)",Syntax Error,OOP
Write a function in Python which will take an array of numbers and return the numbers in descending order.,"Example Array: [1, 12, 3, 8]","def sortDescending(arr):
    return sorted(arr, reverse=True)

print(sortDescending([1, 12, 3, 8]))","def sortDescending(arr):
    return sorted(arr, r",Incomplete Answer,Loops
Create a Python code snippet to calculate the average of the following array.,"items = [1, 5, 6, 4, 8, 9]","def get_average(array):
    array_length = len(array)
    total_sum = 0
    for i in array:
        total_sum += i
    average = total_sum / array_length
    return average

print(get_average(items))","def get_average(array):
    array_length = len(array)
    total_sum = 0
    for i in array:
       ",Incomplete Answer,OOP
Debug the following python code snippet so that it returns a list of even numbers from the given list of numbers.,"ls = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","ls = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
result = []

for num in ls:
 if num % 2 == 0:
 result.append(num)
 
print(result) # prints [2, 4, 6, 8, 10]","ls = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
result = []

for num in ls:
 if num",Incomplete Answer,File I/O
Create a Spark program in Python that generates a new dataframe from an existing dataframe by removing duplicates,,"from pyspark.sql import functions as F

def removeDuplicates(df):
 df = df.dropDuplicates()
 df = df.orderBy(F.desc(""date""))
 return df","from pyspark.sql import functions as F

def removeDuplicates(df):
 ",Incomplete Answer,OOP
Generate a list comprehension of python that adds two to each element of a given list.,"list = [1, 2, 3, 4]","list = [x+2 for x in [1, 2, 3, 4]]",list = [x+2 for x,Incomplete Answer,Recursion
Write a Python program to split a given list into two lists based on a given condition.,"list = [1, 2, 3, 4, 5, 6, 7, 8]","list = [1, 2, 3, 4, 5, 6, 7, 8]

#Split the list into two lists based on a given condition
list_a = [x for x in list if x % 2 == 0]
list_b = [x for x in list if x % 2 != 0]

print(list_a) #[2, 4, 6, 8]
print(list_b) #[1, 3, 5, 7]","list = [1, 2, 3, 4, 5, 6, 7, 8]

#Split the list into two lists based on a given condition
list_a = [x for x in li",Incomplete Answer,OOP
Build a Hash Table in Python to store key-value pairs.,,"class HashTable:
    def __init__(self):
        self.table = {}
    
    def put(self, key, value):
        self.table[key] = value
    
    def get(self, key):
        return self.table.get(key)","class HashTable:
    def __init__(self):
        self.table = {}
    
    def put(self, key, value",Incomplete Answer,OOP
Construct a Python program that shuffles a deck of cards.,A standard deck of cards with 52 cards,"import random

# A standard deck of cards with 52 cards
deck = [2, 3, 4, 5, 6, 7, 8, 9, 10, 
        'J', 'Q', 'K', 'A', 
        2, 3, 4, 5, 6, 7, 8, 9, 10, 
        'J', 'Q', 'K', 'A',
        2, 3, 4, 5, 6, 7, 8, 9, 10, 
        'J', 'Q', 'K', 'A',
        2, 3, 4, 5, 6, 7, 8, 9, 10, 
        'J', 'Q', 'K', 'A']

# Shuffle the deck
random.shuffle(deck)
print(deck)","import random

# A standard deck of cards with 52 cards
deck = [2, 3, 4, 5, 6, 7, 8, 9, 10, 
        'J', 'Q', 'K', 'A', 
        2, 3, 4, 5, 6, 7, 8, 9, 10, 
        'J', 'Q', 'K', 'A",Incomplete Answer,OOP
Create a Python function to remove duplicate elements from a given array.,"array = [1, 2, 5, 2, 1, 9]","def remove_duplicates(array): 
    result = set() 
    for element in array: 
        result.add(element) 
  
    return list(result) 
  
result = remove_duplicates(array) 
print(result)","def remove_duplicates(array): 
    result = set() 
    for element in array: 
        result.",Incomplete Answer,String Manipulation
"Using Python, generate a program for solving linear equations.","x + 2y = 8
3x – 4y = -2","def solution(coefficients):
	# get the coefficients of the equations
	a = coefficients[0][0] 
	b = coefficients[0][1] 
	c = coefficients[0][2] 
	d = coefficients[1][0] 
	e = coefficients[1][1] 
	f = coefficients[1][2] 

	# solve for x and y
	y = (a*f - c*d)/(a*e - b*d) 
	x = (c*e - b*f)/(a*e - b*d) 

	# return the solutions
	return x, y


# example
solution([[1, 2, 8], [3, -4, -2]])","def solution(coefficients)
	# get the coefficients of the equations
	a = coefficients[0][0] 
	b = coefficients[0][1] 
	c = coefficients[0][2] 
	d = coefficients[1][0] 
	e = coefficients[1][1] 
	f = coefficients[1][2] 

	# solve for x and y
	y = (a*f - c*d)/(a*e - b*d) 
	x = (c*e - b*f)/(a*e - b*d) 

	# return the solutions
	return x, y


# example
solution([[1, 2, 8], [3, -4, -2]])",Syntax Error,String Manipulation
Create a Python program to analyze the sentiment of a given sentence.,sentence = 'I am very happy to be here',"from textblob import TextBlob

sentence = 'I am very happy to be here'
sentiment = TextBlob(sentence).polarity

if sentiment > 0:
    print(""Sentiment: Positive"")
elif sentiment == 0:
    print(""Sentiment: Neutral"")
else:
    print(""Sentiment: Negative"")","from textblob import TextBlob

sentence = 'I am very happy to be here'
sentiment = TextBlob(sentence).polarity

if sentiment > 0
    print(""Sentiment Positive"")
elif sentiment == 0
    print(""Sentiment Neutral"")
else
    print(""Sentiment Negative"")",Syntax Error,Loops
Write a python script to extract the text from a HTML page and count the number of words.,"<html>
<head>
    <title>My Page</title>
</head>
<body>
    <p>This is a test page</p>
</body>
</html>","from bs4 import BeautifulSoup
import re

html_doc = <input>
soup = BeautifulSoup(html_doc, 'html.parser')
text = soup.get_text()
words = re.findall(r'\w+', text)
print (len(words))","from bs4 import BeautifulSoup
import re

html_doc = <input>
soup = BeautifulSoup(html_doc,",Incomplete Answer,String Manipulation
Write a method in Python to print each element in a given dictionary.,"{
    ""Alice"": 23,
    ""Bob"": 30,
    ""John"": 27
}","def printDict(dictionary): 
    for key in dictionary: 
        print(""{}: {}"".format(key, dictionary[key])) 

dict = {
    ""Alice"": 23,
    ""Bob"": 30,
    ""John"": 27
}
printDict(dict)","def printDict(dictionary): 
    for key in dictionary: 
        print(""{}: {}"".format(key, dictionary[key])) 

dict = {
    ""Alice"": 23,
    ""Bob"": 30,
    ""John"": 27
}
printDict(dict)",correct,Recursion
Write a function to solve the fibonacci sequence using recursion.,,"def fibonacci(n):
  if n == 1 or n == 2:
    return 1
  else:
    return (fibonacci(n - 1) + (fibonacci(n - 2)))","def fibonacci(n):
  if n == 1 or n == 2:
    return 1
 ",Incomplete Answer,Loops
Create a Python program to classify the digits in a dataset,"Features: [0.25, 0.33, 0.46, 0.83, 0.14]
Labels: [0, 0, 1, 1, 0]","import numpy as np 
from sklearn.svm import SVC 

features = np.array([[0.25, 0.33, 0.46, 0.83, 0.14]]) 
labels = np.array([0, 0, 1, 1, 0]) 
clf = SVC() 
clf.fit(features, labels) 

# predicting the class of the following data 
test_data = np.array([[0.36, 0.22, 0.91, 0.81, 0.12]]) 
result = clf.predict(test_data) 
print(result)","import numpy as np 
from sklearn.svm import SVC 

features = np.array([[0.25, 0.33, 0.46, 0.83, 0.14]]) 
labels = np.array([0, 0, 1, 1, 0]) 
clf = SVC() 
clf.fit(features, labels) 

# predicting the class of the following data 
test_data = np.array([[0.36, 0.22, 0.91, 0.81, 0.12]]) 
result = clf.predict(test_data) 
print(result)",correct,File I/O
Generate and return a 4-dimensional array containing random numbers from 0 to 1 in Python.,,"import numpy as np

def random_array():
 return np.random.random((4, 4, 4, 4))","import numpy as np

def random_array():",Incomplete Answer,OOP
Create a function in Python to sort a list of dictionaries by a particular key.,Example of a list of dictionaries,"def sort_list(lst, key):
    # Sorts a list of dictionaries
    return sorted(lst, key=lambda k: k[key])","def sort_list(lst, key):
    # Sorts a list of dictionaries
    return sorted(lst, key=lambda k: k[key])",correct,Loops
Write a Python script to print the armstrong numbers between 0 and 1000.,,"for num in range (0, 1000):
    order = len(str(num))
    s = 0
    x = num
    while x > 0:
        d = x % 10
        x = x // 10
        s += d ** order
    if num == s:
        print(num)","for num in range (0, 1000):
order = len(str(num))
s = 0
x = num
while x > 0:
    d = x % 10
    x = x // 10
    s += d ** order
if num == s:
    print(num)",Syntax Error,OOP
"Create a python program which takes a sentance as the input, split it into words, and prints all the words on a new line.",This is a sentence,"sentence = ""This is a sentence""
words = sentence.split()
 
for word in words:
    print(word)","sentence = ""This is a sentence""
words = sentence.split()
 
for word in words:
    print(name, word)",Syntax Error,Recursion
Write a Python program to check if a given number is a prime number or not.,,"def is_prime(num):
  if num <= 1:
    return False
  
  for i in range(2, num):
    if num % i == 0:
      return False
  
  return True","def is_prime(num):
  if num <= 1:
    return False
  
  for i in ran",Incomplete Answer,Loops
"Using an AI library in Python (e.g. Scikit-learn), implement a neural network for a classification problem.",,"import numpy as np
from sklearn.neural_network import MLPClassifier

X = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y = np.array([0, 1, 1, 0])

clf = MLPClassifier(solver='lbfgs', alpha=1e-5, hidden_layer_sizes=(5, 2), random_state=1)
clf.fit(X, y)

predictions = clf.predict(X)","import numpy as np
from sklearn.neural_network import MLPClassifier

X = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y = np.array([0, 1, 1, 0])

clf = MLPClassifier(solver='lbfgs', alpha=1e-5, hidden_layer_sizes=(5, 2), random_state=1)
clf.fit(X, y)

predictions = clf.predict(X)",Syntax Error,Loops
"Write a Python function to generate a random number between 1 and 5, given two numbers X and Y.","4, 8","import random

def generate_random_number(x, y):
    start = min(x, y)
    end = max(x, y)
    return random.randint(start, end)

result = generate_random_number(4, 8)
print(result)","import random

def generate_random_number(x, y):
    start = min(x, y)
    end = max(x, y)
    return random.randint(start, end)

result = generate_random_number(4, 8)
print(name, result)",Syntax Error,OOP
Generate a Python function that returns the maximum of two given numbers.,,"def maxOfTwo Numbers(num1, num2):
	if num1 > num2:
		return num1
	else:
		return num2

print(maxOfTwoNumbers(4, 6))","def maxOfTwo Numbers(num1, num2):
	if num1 > num2:
		return num1
	else:
		return num2

print(maxOfTwoNumbers(4, 6))",Syntax Error,Loops
Generate a Python program to split a given string into uppercase and lowercase letters.,"string=""GPTIsForever""","def case_split(string):
    string_list =list(string)
    upper_list = []
    lower_list = []
    
    for i in string_list:
        if i.isupper():
            upper_list.append(i)
        else:
            lower_list.append(i)
    return ''.join(upper_list), ''.join(lower_list)","def case_split(string):
    string_list =list(string)
    upper_list = []
    lower_list = []
    
    for i in string_list:
        if i.is",Incomplete Answer,String Manipulation
Create a Python program to classify a given set of data using a k-nearest neighbors algorithm.,"data = [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]]","import numpy as np
from sklearn.neighbors import KNeighborsClassifier

data = np.array([[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]])

# Create the model
model = KNeighborsClassifier()

# Train the model
model.fit(data[:, 0].reshape(-1, 1), data[:, 1].reshape(-1, 1))

# Output the result
print(model.predict([[2]])) # [[3]]","import numpy as np
from sklearn.neighbors import KNeighborsClassifier

data = np.array([[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]])

# Create the model
model = KNeighborsClassifier()

# Train the model
model.fit(data[:, 0].reshape(-1, 1), data[:, 1].reshape(-1, 1))

# Output the result
print(model.predict([[2]])) # [[3]]",correct,String Manipulation
Develop a function in Python to calculate the circumference of a circle.,,"def calculate_circumference(radius):
    circumference = 2 * 3.14 * radius
    return circumference

if __name__ == '__main__':
    radius = 10
    circumference = calculate_circumference(radius)
    print(circumference)","def calculate_circumference(radius):
    circumference = 2 * 3.14 * radius
    return circumference

if __name",Incomplete Answer,OOP
Determine the maximum of two values in Python without using the max function.,"x = 7
y = 3","# Determine the maximum of two values in Python
# without using the max function

x = 7
y = 3

# if x is greater than y, 
# then x is the max
if x > y:
    max_value = x
# if y is greater than x, 
# then y is the max
else:
    max_value = y

print(max_value)","# Determine the maximum of two values in Python
# without using the max function

x = 7
y = 3

# if x is greater than y, 
# then x is the max
if x > y:
    max_value = x
# if y is greater than x, 
# then y is the max
else:
    max_value = y

print(max_value)",correct,Loops
"Given an URL as a string, write a program in Python to find the domain name.","url = ""https://www.google.com""","def get_domain_name(url): 
    return url.split(""/"")[2]

print(get_domain_name(""https://www.google.com""))  # prints www.google.com","def get_domain_name(url): 
    return url.split(""/"")[2]

pritn(get_domain_name(""https://www.google.com""))  # pritns www.google.com",Syntax Error,Recursion
Optimize a Python script's performance by refactoring the code to use multiprocessing.,"def process_list_data(data):
 for record in data:
  # Process the data

list_data = [1,2,3,4,5]

process_list_data(list_data)","from multiprocessing import Pool

def process_data(record):
 # Process the data

def process_list_data(data):
 with Pool() as p:
 p.map(process_data, data)

list_data = [1,2,3,4,5]

process_list_data(list_data)","from multiprocessing import Pool

def process_data(record):
 # Process the data

def process_list_data(data):
 with Pool() as p:
 p.map(process_data, data)

list_data = [1,2,3,4,5]

process_list_data(list_data)",correct,Loops
Sort the list in the following python code using the bubble sort algorithm.,"arr = [1, 10, 5, 4, 8]","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]

bubble_sort(arr)","def bubble_sort(arr: 
    n = len(arr 
    for i in range(n: 
        for j in range(0, n-i-1: 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]

bubble_sort(arr",Syntax Error,Loops
Write a Python program to convert a binary number to decimal.,,"def bin_to_dec(binary):
    decimal, i, n = 0, 0, 0
    while(binary != 0): 
        dec = binary % 10
        decimal = decimal + dec * pow(2, i) 
        binary = binary//10
        i += 1
    return decimal","def bin_to_dec(binary):
    decimal, i, n = 0, 0, 0
    while(binary != 0): 
        dec = binary % 10
 ",Incomplete Answer,String Manipulation
Construct a method in Python that reverses a given string,,"def reverse(s):
    if len(s) == 0: 
        return s 
    else: 
        return reverse(s[1:]) + s[0]","def reverse(s):
if len(s) == 0: 
    return s 
else: 
    return reverse(s[1:]) + s[0]",Syntax Error,String Manipulation
Create a function in Python for evaluating a given expression.,"expression = ""2 * (3 + 4)""","def eval_expr(expr):
    return eval(expr)

print(eval_expr(""2 * (3 + 4)""))
# 14","def eval_expr(expr):
    return eval(exp",Incomplete Answer,Loops
Create a Python script that takes a given text string and outputs the number of words in the string.,Text string: “I love programming”,"def wordCount(text):
    words = text.split(' ')

    return len(words)

print(wordCount(""I love programming""))  # 3","def wordCount(text):
    words = text.split(' ')

    retu",Incomplete Answer,String Manipulation
Write a Python program to join two given lists.,"list1 = [1, 2, 3] 
list2 = [4, 5, 6]","def join_lists(list1, list2):
    return list1 + list2

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

joined_list = join_lists(list1, list2)
print(joined_list)","def join_lists(list1, list2:
    return list1 + list2

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

joined_list = join_lists(list1, list2
print(joined_list",Syntax Error,OOP
Build a Python program to sort values,"Sort the array [9, 3, 1, 8, 5] in ascending order.","def sort_ascending(arr):
    # Bubble sort
    for i in range(len(arr) - 1):
        for j in range(len(arr) - 1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    
    return arr","def sort_ascending(arr):
    # Bubble sort
    for i in range(len(arr) - 1):
        for j in range(len(arr) -",Incomplete Answer,OOP
Create a K-Means Clustering algorithm in Python.,,"# Import KMeans
from sklearn.cluster import KMeans

# Create KMeans object
kmeans = KMeans(n_clusters=3, random_state=0)

# Train the model
kmeans.fit(X)

# Get the labels
labels = kmeans.labels_

# Get the cluster centroids
centroids = kmeans.cluster_centers_","# Import KMeans
from sklearn.cluster import KMeans

# Create KMeans object
kmeans = KMeans(n_clusters=3, random_state=0)

# Train the model
kmeans.fit(X)

# Get the labels
labels = kmeans.labels_

# Get the cluster centroids
centroids = kmeans.cluster_centers_",Syntax Error,String Manipulation
Optimize a Python program to print all odd numbers between 0 and 50,,"# Using for loop 
for num in range(0, 51): 
 if num % 2 != 0: 
 print(num, end = "" "") 

# Output: 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49","# Using for loop 
for num in range(0, 51): 
 if num % 2 != 0: 
 print(num, end = "" ",Incomplete Answer,String Manipulation
Write a function to count all the distinct pairs having a difference of k in any array.,,"def count_pairs(arr, n, k):
  count=0;
  for i in range(0,n):
    for j in range(i+1, n):
      if arr[i] - arr[j] == k or arr[j] - arr[i] == k:
        count += 1
  return count","def count_pairs(arr, n, k):
  count=0;
  for i in range(0,n):
    for j in range(i+1, n):
      if arr[i] - arr[j] == k or arr[j] - arr[i] == k:
        count += 1
  return count",correct,Loops
Generate a Python program to calculate the area of a rectangle given two parameters representing the length and the width.,,"def area_rectangle(length, width):
 return length * width

print(area_rectangle(2, 3)) # Output: 6","def area_rectangle(length, width):
 return length * width

print(name, area_rectangle(2, 3)) # Output: 6",Syntax Error,Loops
Suggest a method to improve the efficiency of the following Python program.,"s = 'abcdefghijklmnopqrstuvwxyz'

def func(s):
    s_list = []
    for c in s:
        if c not in s_list:
            s_list.append(c)
    
    return s_list","s = 'abcdefghijklmnopqrstuvwxyz'

def func(s):
    s_list = set()
    for c in s:
        s_list.add(c)
    
    return list(s_list)","s = 'abcdefghijklmnopqrstuvwxyz'

def func(s):
    s_list = set()
",Incomplete Answer,Loops
Create a class in Python that defines an item in an inventory system.,,"class Item:
    def __init__(self, name, description, price):
        self.name = name
        self.description = description
        self.price = price

    def print_info(self):
        print(""Name:"", self.name)
        print(""Description:"", self.description)
        print(""Price:"", self.price)","class Item:
    def __init__(self, name, description, price:
        self.name = name
        self.description = description
        self.price = price

    def print_info(self:
        print(""Name:"", self.name
        print(""Description:"", self.description
        print(""Price:"", self.price",Syntax Error,Recursion
"Using the given functions, write a Python program that takes an n-dimensional vector vector as an argument and returns its norm.","def vector_length(vector): 
    return math.sqrt(sum(c * c for c in vector))","def vector_norm(vector):
    return vector_length(vector)

vector = [1, 2, 3]
norm = vector_norm(vector)
print(norm)","def vector_norm(vector):
    return vector_length(vector)

vector = [1, 2, 3]
norm = vector_norm(vector)
print(norm)",correct,File I/O
Write a Python function to filter strings using a filter function as a parameter.,,"def filter_strings(strings, filter_function):
    filtered = []
    for string in strings:
        if filter_function(string):
            filtered.append(string)
    return filtered","def filter_strings(strings, filter_function):
    filtered = []
    for string in strings:
        if filter_function(string):
            filtered.append(string)
    return filtered",correct,File I/O
"Generate a function in Python to print ""Hello World!"" every second.",,"import time

def printHelloWorld():
  while True:
    print(""Hello World!"")
    time.sleep(1) 

printHelloWorld()","import time

def printHelloWorld():
  while True:
    pr",Incomplete Answer,Recursion
Design a class representing a car using Python.,,"class Car():

    def __init__(self, model, make, color, engine_power, num_wheels):
        self.model = model
        self.make = make
        self.color = color
        self.engine_power = engine_power
        self.num_wheels = num_wheels

    def start_engine(self):
        print(""Engine started."")

    def stop_engine(self):
        print(""Engine stopped."")","class Car():

    def __init__(self, model, make, color, engine_power, num_wheels):
        self.model = model
        self.make = make
        self.color = color
        self.engine_power = engine_power
        self.num_wheels = num_wheels

    def start_engine(self):
        pritn(""Engine started."")

    def stop_engine(self):
        pritn(""Engine stopped."")",Syntax Error,OOP
Construct an HTTP request in Python which requests a resource from a given URL.,,"import requests 

response = requests.get('<url>')","import requests 

response = requests.get('<url>')",Syntax Error,Recursion
Create a Python program that prints a Fibonacci sequence.,length = 10,"def fibonacci(length):
  fibonacci_list = [1, 1]
  while len(fibonacci_list) < length:
    last_item = fibonacci_list[-1]
    second_last_item = fibonacci_list[-2]
    next_item = last_item + second_last_item
    fibonacci_list.append(next_item)
  return fibonacci_list

length = 10
print(fibonacci(length))","def fibonacci(length):
  fibonacci_list = [1, 1]
  while len(fibonacci_list) < length:
    last_item = fibonacci_list[-1]
    second_last_item = fibonacc",Incomplete Answer,OOP
Construct a program in Python that determines the largest prime factor of a number.,number = 300,"def find_largest_prime_factor(number):
  i = 2
  while i < number // 2:
    if number % i == 0:
      number = number // i
      i = 2
    else:
      i += 1
  return number

print(find_largest_prime_factor(300))","def find_largest_prime_factor(number):
  i = 2
  while i < number // 2:
    if number % i == 0:
      numb",Incomplete Answer,OOP
Devise an algorithm in Python to determine if a given number is even or odd.,,"def is_even(num):
    if num % 2 == 0:
        return True
    else:
        return False","def is_even(num):
    if num % 2 == 0:
     ",Incomplete Answer,Recursion
Write a Python code that takes a given list of numbers and returns the mode of that list.,"List = [1,2,3,4,2,2,2,5]","def find_mode(List): 
    max_count = 0
    modes = [] 
    for num in List: 
        current_count = List.count(num) 
        if current_count > max_count: 
            max_count = current_count 
            modes = [num] 
        elif current_count == max_count: 
            modes.append(num) 
    return modes","def find_mode(List): 
    max_count = 0
    modes = [] 
    for num in List: 
        current_count = List.count(num) 
        if current_count > max_count: 
            max_count = current_count 
            modes = [num] 
        elif current_count == max_count: 
            modes.append(num) 
    return modes",correct,String Manipulation
Generate a python program to calculate the square root of a number,,"def sqrt_calc(num):
    return num**0.5",def sqrt_calc(num):,Incomplete Answer,Loops
Write a python program to extract text data from a PDF document.,,"import PyPDF2

# Load file
file= open(your_pdf_filename, 'rb')
reader= PyPDF2.PdfFileReader(file)

# Read text
text = ''
for page in reader.pages:
 text += page.extractText()

# Close file
file.close()

# Print result
print(text)","import PyPDF2

# Load file
file= open(your_pdf_filename, 'rb')
reader= PyPDF2.PdfFileReader(file)

# Read text
tex",Incomplete Answer,File I/O
Write a function in python which creates a list containing the squares of all numbers between 1 and 100,,"def create_squares_list():
    squares_list = []
    for i in range(1, 101):
        squares_list.append(i**2)
    return squares_list","def create_squares_list():
    squares_list = []
    for i in range",Incomplete Answer,Loops
Find the maximum of three numbers using a Python program.,"5, 11, 6","def findMaxNum(a, b, c):
    maxNum = a
    if b > maxNum:
        maxNum = b
    if c > maxNum:
        maxNum = c
    return maxNum

maxNum = findMaxNum(5, 11, 6)
print(maxNum)","def findMaxNum(a, b, c):
    maxNum = a
    if b > maxNum:
        maxNum = b
    if c > maxNum:
        maxNum = c
    return maxNum

maxNum = findMaxNum(5, 11, 6)
print(maxNum)",correct,String Manipulation
Create a Python function to print out all the prime numbers between two integers.,"start = 10, end = 25","def print_primes(start, end):
 for n in range(start, end + 1):
 if is_prime(n):
 print(n)
 
def is_prime(n):
 if n <= 1:
 return False
 elif n <= 3:
 return True
 elif (n % 2 == 0) or (n % 3 == 0):
 return False
 
 i = 5
 while i ** 2 <= n:
 if (n % i == 0) or (n % (i + 2) == 0):
 return False
 i += 6
 
 return True

print_primes(10, 25)","def print_primes(start, end):
 for n in range(start, end + 1):
 if is_prime(n):
 print(n)
 
def is_prime(n):
 if n <= 1:
 return False
 elif n <= 3:
 return True
 elif (n % 2 == 0) or (n % 3 == 0):
 return False
 
 i = 5
 while i ** 2 <= n:
 if (n % i == 0) or (n % (i + 2) == 0):
 return False
 i += 6
 
 return True

print_primes(10, 25)",correct,OOP
"Update the given python object with field name ""address"", value as ""London""","{""name"": ""John"", ""age"": 25}","{'name': 'John', 'age': 25, 'address': 'London'}","{'name': 'John', 'age': 25, 'address': 'London'}",Syntax Error,Recursion
Generate a Python program to apply custom formatting for the following output.,"Given a list of strings, output a HTML table with data in the strings","def create_html_table(slist):
    table_html = ""<table>""
    for str in slist:
        table_html += ""<tr>""
        table_html += ""<td>"" + str + ""</td>"" 
        table_html += ""</tr>""

    table_html += ""</table>""
    return table_html","def create_html_table(slist):
    table_html = ""<table>""
    for str in slist:
        table_html += ""<tr>""
        table_html += ""<td>"" + str + ""</td>"" 
        table_html += ""</tr>""

    table_html += ""</table>""
    return table_html",correct,Recursion
Design a program in Python which generates a random mathematical equation with two numbers.,,"import random

def generateRandomEquation():
    num1 = random.randint(0,9)
    num2 = random.randint(0,9)
    op = random.choice(['+','-','*','/'])
    equation = str(num1) + op + str(num2)
    return equation

print(generateRandomEquation())","import random

def generateRandomEquation()
    num1 = random.randint(0,9)
    num2 = random.randint(0,9)
    op = random.choice(['+','-','*','/'])
    equation = str(num1) + op + str(num2)
    return equation

print(generateRandomEquation())",Syntax Error,Loops
Create a post request in Python using the requests library to roll a die on a website.,,"import requests

url = 'http://roll-dice-game.com/roll'

payload = {
 'number-of-dice': 1
}

r = requests.post(url, data=payload)

print(r.text)

# Output: The dice rolled a 3!","import requests

url = 'http://roll-dice-game.com/roll'

payload = {
 'number-of-dice': ",Incomplete Answer,File I/O
Write a code to sort a list of strings according to their lengths,"[""Python"", ""is"", ""a"", ""programming"", ""language""]","def sortByLength(strings):
    """"""Sort a list of strings according to their lengths""""""
    # Sort the list using a key function
    return sorted(strings, key=len)

if __name__ == '__main__':
    strings = [""Python"", ""is"", ""a"", ""programming"", ""language""]
    print(sortByLength(strings))","def sortByLength(strings):
    """"""Sort a list of strings according to their lengths""""""
    # Sort the list using a key function
    return sorted(strings, key=len)

if __name__ == '__main__':
    strings = [""Python"", ""is"", ""a"", ""programming"", ""language""]
    print(sortByLength(strings))",correct,Loops
Write a codesnippet in Python to generate 5 random integers between 1 and 10.,,"import random

rand_nums = [random.randint(1,10) for x in range(5)]
print(rand_nums)","import random

rand_nums = [random.randint",Incomplete Answer,Loops
Design a program that takes a date as input and calculates the day of the week that date falls on.,31-05-20,"#!/usr/bin/env python3

import datetime

def dayOfWeek(date):
   year,month,day = map(int,date.split('/'))
   dayNumber = datetime.date(year, month, day).weekday()
 
   return [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""][dayNumber]","#!/usr/bin/env python3

import datetime

def dayOfWeek(date):
   year,month,day = map(int,date.split('/'))
   dayNumber = datetime.date(year, month, day).weekday()
 
   return [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""][dayNumber]",correct,Loops
Create a Python script which takes two numbers as arguments and returns the maximum of the two numbers.,"Number1: 8
Number2: 4","def maxNumber(num1, num2):
 if num1 > num2:
   return num1
 else:
   return num2

if __name__ == '__main__':
 num1 = 8
 num2 = 4
 print(maxNumber(num1, num2))","def maxNumber(num1, num2):
 if num1 > num2:
   return num1
 else:
   return num2

if __name__ == '__main__':
 num1 = 8
 num2 = 4
 print(maxNumber(num1, num2))",Syntax Error,Loops
Write a python script that prints the 20th Fibonacci number.,,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    
    elif n == 0: 
        return a 
    
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 

print(fibonacci(20))","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    
    elif n == 0: 
        return a 
    
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 

print(fibonacci(20))",correct,File I/O
Write a function to check whether the given month number contains 31 days or not.,,"def check_monthnumb_number(monthnum2):
  if(monthnum2==1 or monthnum2==3 or monthnum2==5 or monthnum2==7 or monthnum2==8 or monthnum2==10 or monthnum2==12):
    return True
  else:
    return False","def check_monthnumb_number(monthnum2):
  if(monthnum2==1 or monthnum2==3 or monthnum2==5 or monthnum2==7 or monthnum2==8 or monthnum2==10 or monthnum2==12):
    return True
  else:
    return False",Syntax Error,Loops
Write a Python program to retrieve the latest top 50 news headlines from The Guardian.,,"import requests
import bs4

# Retrieve the latest top 50 news headlines from The Guardian
url = 'https://www.theguardian.com/'
resp = requests.get(url)
soup = bs4.BeautifulSoup(resp.text, features=""html.parser"")
headlines = soup.find_all('h3')
top_50_headlines = [h3.text for h3 in headlines[:50]]
print(top_50_headlines)","import requests
import bs4

# Retrieve the latest top 50 news headlines from The Guardian
url = 'https://www.theguardian.com/'
resp = requests.get(url)
soup = b",Incomplete Answer,Recursion
Write a Python program to calculate the total cost of a shopping cart containing multiple items. The program should take a list of items and their prices as input and output the total cost.,"items = {'apple': 2.99, 'banana': 0.99, 'mango': 4.98}","totalCost = 0
for item, price in items.items():
totalCost += price

print(f'Total cost of the cart is {totalCost}')","totalCost = 0
for item, price in items.items():
totalCost += price

print(f'Total cost of the cart is {totalCost}')",correct,Recursion
Generate a Python program to construct a hash table that stores strings as keys and integers as values.,,"def create_hash_table():
    hash_table = dict(zip(list_of_strings, list_of_integers))
    return hash_table","def create_hash_table():
    hash_table = dict(zip(lis",Incomplete Answer,String Manipulation
Design a Python program to randomize a list of given integers using an optimized Fisher-Yates algorithm.,,"def randomized_list(num_list):
    for i in range(len(num_list)-1,0,-1):
        j = random.randint(0,i)
        num_list[i],num_list[j] = num_list[j],num_list[i]
    return num_list","def randomized_list(num_list):
    for i in range(len(num_list)-1,0,-1):
        j = random.randint(0,i)
        num_list[i],num_list[j] = num_list[j],num_list[i]
    return num_list",correct,Loops
Create a python program which will take user name as input and print the same,,"name = input(""Enter your name: "")
print(""Hello "" + name + ""!"")","name = input(""Enter your name: "")
print(""Hello "" + name + ""!"")",Syntax Error,String Manipulation
Create a class in Python that represents a student with two instance variables and a constructor to assign values to those variables.,,"class Student: 
    def  __init__(self, name, grade): 
        self.name = name
        self.grade = grade 
  
    def getGrade(self): 
        return self.grade","class Student: 
def  __init__(self, name, grade): 
    self.name = name
    self.grade = grade 
  
def getGrade(self): 
    return self.grade",Syntax Error,OOP
Modify a given Python code to make it run faster.,Python code,"# original code 
def find_sum(numbers):
  total = 0
  for number in numbers:
    total += number
  return total 

# modified code 
def find_sum(numbers):
  return sum(numbers)","# original code 
def find_sum(numbers):
  total = 0
  for number in numbers:
    total ",Incomplete Answer,File I/O
Optimize performance of an existing code snippet by making use of Python's list comprehensions.,"numbers = [1, 2, 3, 4, 5]
squares = []
for n in numbers:
 squares.append(n*n)","numbers = [1, 2, 3, 4, 5]
squares = [n*n for n in numbers]","numbers = [1, 2, 3, 4, 5]
squares = [n*n for n in numbers]",Syntax Error,Recursion
Generate a Python program to round a floating point number to a certain number of decimal places.,"2.71828, 3","def round_float(num, decimal_ places):
    '''
    Function to round a floating point number to a certain number of decimal places
    '''
    return round(num, decimal_places)

result = round_float(2.71828, 3)
print(result)","def round_float(num, decimal_ places):
    '''
    Function to round a floating point number to a certain number",Incomplete Answer,OOP
Generate code to construct a decision tree in Python.,,"from sklearn.tree import DecisionTreeClassifier

#Initialize the model
model = DecisionTreeClassifier(random_state=1)

# fit the model
model.fit(X, y)

# predict the target for test set
model.predict(X_test)","from sklearn.tree import DecisionTreeClassifier

#Initialize the model
model = DecisionTreeClassifier(random_state=1)

# fit the model
model.fit(X, y)

# predict the target for test set
model.predict(X_test)",Syntax Error,Recursion
Implement a Python function to check if all n numbers in an array are equal.,"[1,1,1]","def checkEqual(arr):
    if len(arr) == 0:
        return False
    return all(arr[0] == x for x in arr)","def checkEqual(arr):
    if len(arr) == 0:
        return False
    return all(arr[0] == x for x in arr)",correct,OOP
Generate a Python program that determines whether a given array is a palindrome or not.,"[3,2,1,1,2,3]","def is_palindrome(arr):
    if arr == arr[::-1]:
        return True
    return False

result = is_palindrome([3, 2, 1, 1, 2, 3])
print(result) # Output: True","def is_palindrome(arr):
    if arr == arr[::-1]:
        return True
    return",Incomplete Answer,OOP
Write an algorithm in Python that finds the maximum of three numbers.,,"def find_max(a, b, c):
    if a > b and a > c:
        max_num = a
    elif b > a and b > c:
        max_num = b
    else:
        max_num = c
 
    return max_num
 
 max_number = find_max(7, 5, 9)
 
 print(""The maximum of three numbers is:"", max_number)","def find_max(a, b, c):
    if a > b and a > c:
        max_num = a
    elif b > a and b > c:
        max_num = b
    else:
        max_num = c
 
    return max_num
 
 max_number = find_max(7, 5, 9)
 
 print(""The maximum of three numbers is:"", max_number)",correct,Loops
Write a Python program to find the sum of the given series 1 + 1/2 + 1/3 +...... + 1/100.,,"sum = 0
for i in range(1,101):
    sum += 1/i

print(sum)","sum = 0
for i in range(1,101",Incomplete Answer,Recursion
Create a neural network in Python for a binary classification problem with two classes.,,"import keras
from keras.models import Sequential
from keras.layers import Dense, Activation, Dropout

# Create the model
model = Sequential()
model.add(Dense(32, input_shape=(2,)))
model.add(Activation('relu'))
model.add(Dense(2))
model.add(Activation('softmax'))

# Compile the model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])","import keras
from keras.models import Sequential
from keras.layers import Dense, Activation, Dropout

# Create the model
model = Sequential()
model.add(Dense(32, input_shape=(2,)))
mode",Incomplete Answer,File I/O
Generate a program in Python to output the top 3 numbers from an array of integers,"[7, 13, 5, 8, 50, 11, 64, 48]","def top_three(numbers):
    sorted_numbers = sorted(numbers, reverse=True)
    return sorted_numbers[:3]

print(top_three([7, 13, 5, 8, 50, 11, 64, 48]))","def top_three(numbers):
    sorted_numbers = sorted(numbers, reverse=True)
    return sorted_numbers[:3]

print(top_three([7, 13, 5, 8, 50, 11, 64, 48]))",correct,OOP
Write a Python program that can detect the language of a given piece of text.,"The text is: ""Bonjour tout le monde""","import detect_language

text = ""Bonjour tout le monde""
language = detect_language.detect(text)
print(language) # fr","import detect_language

text = ""Bonjour tout le monde""
la",Incomplete Answer,File I/O
Generate a python script to return the longest word in a given sentence.,This is a sentence with multiple words.,"def longestWord(sentence):
    words = sentence.split(' ')
    longest = ''
    for word in words:
        if len(word) > len(longest):
            longest = word
    return longest","def longestWord(sentence):
words = sentence.split(' ')
longest = ''
for word in words:
    if len(word) > len(longest):
        longest = word
return longest",Syntax Error,Recursion
Create a python function which takes a list as an argument and returns the largest number in the list.,"numbers = [20, 9, 5, 10]","def largest_number(numbers):
    largest = numbers[0]
    for num in numbers:
        if num > largest:
            largest = num
    return largest

largest = largest_number(numbers)
print('The largest number in the list is: ', largest)","def largest_number(numbers):
    largest = numbers[0]
    for num in numbers:
        if num > largest:
            la",Incomplete Answer,File I/O
"Create a function in Python to optimize the following function with respect to its two variables x, and y.","f(x,y) = 2x^3 + 3y^2 + y + 5","import numpy as np 
import scipy.optimize as opt 

def func(x): 
	return 2*np.power(x[0], 3) + 3*np.power(x[1],2) + x[1] + 5

opt.minimize(func, ([0, 0]), method='nelder-mead', 
options={'xtol': 1e-8, 'disp': True})","import numpy as np 
import scipy.optimize as opt 

def func(x): 
	return 2*np.power(x[0], 3) + 3*np.power(x[1],2) + x[1] + 5

opt.minimize(func, ([0, 0]), method='nelder-mead', 
options={'xtol': 1e-8, 'disp': True})",correct,String Manipulation
Create a function in Python that takes a list of numbers andarranges them in ascending order.,"nums = [4, 5, 2, 1, 6, 5]","def sort_ascending(nums):
    sorted_list = sorted(nums) 
  
    return sorted_list

print(sort_ascending(nums)) # [1, 2, 4, 5, 5, 6]","def sort_ascending(nums):
    sorted_list = sorted(nums) 
  
    return sorted_list

print(sort_ascending(nums)) # [1, 2, 4, 5, 5, 6]",correct,OOP
"Write a Python program that performs sentiment analysis on a given sentence and labels it as ""positive"", ""negative"" or ""neutral"".","Sample sentence - ""Life is beautiful""","def sentiment_analysis(sentence):
  # Use sentiment analyzer API here   
  sentiment = sentiment_analyzer.polarity_scores(sentence)
  if sentiment['compound'] > 0:
    return 'positive'
  elif sentiment['compound'] < 0:
    return 'negative'
  else:
    return 'neutral'","def sentiment_analysis(sentence):
  # Use sentiment analyzer API here   
  sentiment = sentiment_analyzer.polarity_scores(sentence)
  if sentiment['compound'] > 0:
    return 'positive'
  elif sentiment['compound'] < 0:
    return 'negative'
  else:
    return 'neutral'",correct,File I/O
Generate a Python class that stores the details of customer orders.,,"class Order:
 def __init__(self, customer_name, customer_address, order_items):
 self.customer_name = customer_name 
 self.customer_address = customer_address
 self.order_items = order_items
 
 def get_order_details(self):
 return f""Customer name: {self.customer_name}, Address: {self.customer_address}, Order items: {self.order_items}""","class Order:
 def __init__(self, customer_name, customer_address, order_items):
 self.customer_name = customer_name 
 self.customer_address = customer_address
 self.order_items = order_items
 
 def get_order_details(self):
 return f""Customer name: {self.customer_name}, Address: {self.customer_address}, Order items: {self.order_items}""",Syntax Error,Recursion
Write a regular expression in Python to match a pattern of email addresses.,,"import re

pattern = r'^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$'","import re

pattern = r'^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$'",Syntax Error,File I/O
Generate a python program to parse a string and extract the number of vowels.,"Input string: “Hello World!""","def count_vowels(s):
    vowels = [""a"", ""e"", ""i"" , ""o"", ""u""]
    count = 0 
    for character in s.lower():
        if character in vowels:
            count += 1
    print(""Number of vowels :"", count)","def count_vowels(s):
    vowels = [""a"", ""e"", ""i"" , ""o"", ""u""]
    count = 0 
    for character in s.l",Incomplete Answer,Recursion
"Convert the string ""Hello World"" to lowercase using Python.",,"""hello world"".lower()","""hello world"".lower()",correct,String Manipulation
Write a python function to check whether a given sequence is linear or not.,,"def Seq_Linear(seq_nums):
  seq_nums = [seq_nums[x] - seq_nums[x-1] for x in range(1, len(seq_nums))]
  if len(set(seq_nums)) == 1: 
    return ""Linear Sequence""
  else:
    return ""Non Linear Sequence""","def Seq_Linear(seq_nums):
  seq_nums = [seq_nums[x] - seq_nums[x-1] for x in range(1, len(seq_nums))]
  if len(set(seq_nums)) == 1: 
    return ""Linear Sequence""
  else:
    return ""Non Linear Sequence""",correct,Loops
Design a Python program to remove all the elements from a list that are not a prime number.,"[1, 2, 3, 4, 5, 6, 7, 8]","def remove_non_primes(my_list):
    result = []
    for num in my_list:
        prime = True
        for i in range(2, num):
            if num % i == 0:
                prime = False
                break
        if prime:
            result.append(num)
    return result

result = remove_non_primes([1, 2, 3, 4, 5, 6, 7, 8])
print(result)","def remove_non_primes(my_list):
    result = []
    for num in my_list:
        prime = True
        for i in range(2, num):
            if num % i == 0:
                ",Incomplete Answer,File I/O
Write a python function that accepts a number n as input and outputs its nth prime number.,,"def nth_prime(n):
  
 num_primes = 0
 curr_num = 2
 
 while num_primes < n:
   is_prime = True
   for i in range(2, curr_num):
       if curr_num % i == 0:
           is_prime = False
           break
   if is_prime:
       num_primes += 1
   curr_num += 1

return curr_num - 1","def nth_prime(n):
  
 num_primes = 0
 curr_num = 2
 
 while num_primes < n:
   is_prime = True
   for i in range(2, curr_num):
       if curr_num % i == 0:
           is_prime = False
           break
   if is_prime:
       num_primes += 1
   curr_num += 1

return curr_num - 1",correct,File I/O
Generate a correct python statement to add two given numbers.,"num1 = 10
num2 = 20",sum = num1 + num2,sum = num1 + num2,Syntax Error,Loops
Write a function to swap two numbers.,,"def swap_numbers(a,b):
 temp = a
 a = b
 b = temp
 return (a,b)","def swap_numbers(a,b):
 temp = a",Incomplete Answer,File I/O
Optimize a given Python script by running in parallel.,,"import concurrent.futures

def thread_function(script):
  // Code to run the given script in parallel

with concurrent.futures.ThreadPoolExecutor() as executor:
  executor.map(thread_function, scripts)","import concurrent.futures

def thread_function(script):
  // Code to run the given script in paralle",Incomplete Answer,File I/O
"Design a class in Python with instance attributes for name, height, and age of a person.",,"class Person:
 def __init__(self, name, height, age):
 self.name = name
 self.height = height
 self.age = age","class Person:
 def __init__(self, name, height, age):
 self.name = name
 self.height = height
 self.age = age",correct,OOP
Create a Python program that takes a sentence as an input and outputs all the words with their part of speech.,This is a sentence.,"import nltk

sentence = 'This is a sentence.'
words = nltk.word_tokenize(sentence)

for word in words:
 print(f'{word}: {nltk.pos_tag([word])[0][1]}')","import nltk

sentence = 'This is a sentence.'
words = nltk.word_tokenize(se",Incomplete Answer,OOP
Create a python program to filter out all the even numbers from a given list.,"[3, 4, 5, 6, 7]","def filter_even_numbers(numbers):
    even_numbers = []
    for i in numbers:
        if i % 2 == 0:
            even_numbers.append(i)
    return even_numbers
    
    
filtered = filter_even_numbers([3, 4, 5, 6, 7])
print(filtered)","def filter_even_numbers(numbers)
    even_numbers = []
    for i in numbers
        if i % 2 == 0
            even_numbers.append(i)
    return even_numbers
    
    
filtered = filter_even_numbers([3, 4, 5, 6, 7])
print(filtered)",Syntax Error,String Manipulation
Write a Python program to find all the roots of a given quadratic equation.,"a = 2, b = 5, c = -3","def quadratic_roots(a, b, c):
    # Calculate the discriminant 
    discriminant = (b**2) - (4*a*c)

    # Compute the root
    root1 = (-b + discriminant**0.5)/(2*a) 
    root2 = (-b - discriminant**0.5)/(2*a)

    # Print the roots
    print(""The roots are {0} and {1}"".format(root1, root2))

quadratic_roots(2, 5, -3)","def quadratic_roots(a, b, c):
    # Calculate the discriminant 
    discriminant = (b**2) - (4*a*c)

    # Compute the root
    root1 = (-b + discriminant**0.5)",Incomplete Answer,File I/O
Write a Python script to get the sum of two numbers and check the correctness of the result.,"two_number = [4, 7]","# Get the numbers
two_numbers = [4, 7]

# Compute the sum
result = two_numbers[0] + two_numbers[1]

# Check the correctness of the result
if result != 11:
    print(""The result is wrong!"")
else:
    print(""The result is correct!"")","# Get the numbers
two_numbers = [4, 7]

# Compute the sum
result = two_numbers[0] + two_numbers[1]

# Check the correctness of the result
if result != 11:
    print(""The result is wrong!"")
else:
    print(""The result is correct!"")",correct,File I/O
Develop a python code that prints the longest word in a list.,"The list is [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""].","def longest_word(word_list): 
    maxLen = len(max(word_list, key = len)) 
    return [x for x in word_list if len(x) == maxLen] 
  
list = [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""]
  
print(longest_word(list)) # Output: [""Welcome"", ""universe""]","def longest_word(word_list): 
    maxLen = len(max(word_list, key = len)) 
    return [x for x in word_list if len(x) == maxLen] 
  
list = [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""]
  
print(name, longest_word(list)) # Output: [""Welcome"", ""universe""]",Syntax Error,String Manipulation
"Write a function in Python to validate a given email address given strings of type ""email@example.com"".",,"import re

def validate_email(email):
 regex = '^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$'
 if(re.search(regex,email)): 
  return True
 else:  
  return False","import re

def validate_email(email):
 regex = '^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$'
 if(re.search(regex,email)): 
  return True
 else:  
  return False",Syntax Error,File I/O
Write a python program to generate a random letter of the alphabet.,,"import random 
  
# create a list of all the letters in the alphabet
alphabet = [""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", 
             ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o"", ""p"", 
             ""q"", ""r"", ""s"", ""t"", ""u"", ""v"", ""w"", ""x"", 
             ""y"", ""z""] 
  
# generate a random letter
random_letter = random.choice(alphabet)
print(random_letter)","import random 
  
# create a list of all the letters in the alphabet
alphabet = [""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", 
             ""i"", ""j"", ""k"", ""l"", ""m"", ""n"", ""o"", ""p"", 
             ""q"", ""r"", ""s"", ""t"", ""u"", ""v"", ""w"", ""x"", 
             ""y"", ""z""] 
  
# generate a random letter
random_letter = random.choice(alphabet)
print(random_letter)",correct,OOP
Write a Python script to parse a given string and construct a dictionary from its content.,"""bio: John Smith, age: 32""","def parse_string(s):
    info = s.split("", "")

    result = {}
    for item in info:
        k, v = item.split("": "")
        result[k] = v

    return result

result = parse_string(""bio: John Smith, age: 32"")
print(result)","def parse_string(s):
    info = s.split("", "")

    result = {}
    for item in info:
        k, v = item.split("": "")
        result[k] = v

    return result

result = parse_string(""bio: John Smith, age: 32"")
print(result)",correct,Loops
Modify the given Python program to optimize the memory allocation and improve the execution time of the program,"import pandas as pd
data = pd.read_csv('dataset.csv')","import pandas as pd

# Load the dataset with memory optimization
data = pd.read_csv('dataset.csv', low_memory=True)

# Optimize the data to reduce the size 
data = data.drop_duplicates(keep=False)

# Optimize the data to increase the performance 
data = data.apply(pd.to_numeric, errors='coerce')","import pandas as pd

# Load the dataset with memory optimization
data = pd.read_csv('dataset.csv', low_memory=True)

# Optimize the data to reduce the size 
data = data.drop_duplicates(keep=False)

# Optimize the data to increase the performance 
data = data.apply(pd.to_numeric, errors='coerce')",Syntax Error,String Manipulation
"Write a Python script to find all the divisible numbers in a given range (1 to n), where n is a positive integer provided by the user.",,"def find_divisible_numbers(n):
  divisibles = []
  for i in range(1, n+1):
    if i % 3 == 0:
      divisibles.append(i)
  return divisibles

find_divisible_numbers(20)","def find_divisible_numbers(n)
  divisibles = []
  for i in range(1, n+1)
    if i % 3 == 0
      divisibles.append(i)
  return divisibles

find_divisible_numbers(20)",Syntax Error,OOP
Rewrite the following function in Python to use recursion instead of a loop,"def factorial_iterative(n):
    factorial = 1
    while n > 1:
        factorial = factorial * n
        n -= 1
    return factorial","def factorial_recursive(n):
    # Base case: 
    # n is 1, return 1
    if n == 1:
        return 1
    # Recursive case: 
    # return n * (n-1)
    return n * factorial_recursive(n - 1)

# Test
print(factorial_recursive(5))","def factorial_recursive(n):
    # Base case: 
    # n is 1, return 1
    if n == 1:
        return 1
    # Recursive case: 
    # return n * (n-1)
    return n * factorial_recursive(n - 1)

# Test
print(factorial_recursive(5))",correct,Loops
"Write a Python program to convert a given number of days into years, months and days.",Days = 500,"def convert_days_wm(Days):
    y = Days//365
    m = (Days%365)//30
    d = (Days%365)%30
    return y, m, d","def convert_days_wm(Days):
    y = Days//365
    m = (",Incomplete Answer,Loops
Create a Python script that orders a list of strings alphabetically from a to z.,"[""Banana"", ""Apple"", ""Orange"", ""Pear""]","def sort_list(list):
    list.sort()
    return list

sorted_list = sort_list([""Banana"", ""Apple"", ""Orange"", ""Pear""])
print(sorted_list)","def sort_list(list):
    list.sort()
    return list

sorted_list = sort_list([""Banana"", ""Apple"", ""Orange"", ""Pear""])
print(sorted_list)",correct,Recursion
Write a script in Python to generate a dictionary of words from a given string.,def words_dict(string):,"def words_dict(string):
    """"""This function returns a dictionary with words as keys and their count as values.""""""
    words = string.split()
    word_dict = {}
    
    for word in words:
        if word in word_dict:
            word_dict[word] += 1
        else: 
            word_dict[word] = 1
    
    return word_dict","def words_dict(string):
    """"""This function returns a dictionary with words as keys and their count as values.""""""
    words = string.split()
    word_dict = {}
    
    for word in words:
        if word in word_dict:
            word_dict[word] += 1
        else: 
            word_dict[word] = 1
    
    return word_dict",correct,Loops
Design a Python web crawler that takes a URL as an input and prints out a list of all the hyperlinks on the page.,https://www.example.com,"import requests 
from bs4 import BeautifulSoup 

def crawl_page(url): 
    page = requests.get(url) 
    soup = BeautifulSoup(page.content, 'html.parser') 
    return [link.get('href') for link in soup.find_all('a')] 

url = ""https://www.example.com""
links = crawl_page(url)
for link in links:
 print(link)","import requests 
from bs4 import BeautifulSoup 

def crawl_page(url) 
    page = requests.get(url) 
    soup = BeautifulSoup(page.content, 'html.parser') 
    return [link.get('href') for link in soup.find_all('a')] 

url = ""https//www.example.com""
links = crawl_page(url)
for link in links
 print(link)",Syntax Error,String Manipulation
Write a loop in Python that accumulates the sum of the numbers in an array.,"[1, 2, 3]","sum = 0

for num in [1, 2, 3]:
    sum += num

print(sum)","sum = 0

for num in [1, 2, 3]:
    sum += num

pritn(sum)",Syntax Error,Recursion
Write a function in Python to Print a given string in Reverse order.,"string = ""Welcome to my site!""","def reverseString(string):
    revString = ''
    for i in range(len(string)-1, -1, -1):
        revString += string[i]
    return revString","def reverseString(string):
    revString = ''
    for i in range(len(s",Incomplete Answer,OOP
Create a Python function which takes an integer as input and prints it in binary.,,"def int_to_binary(n):
    if n == 0:
        return '0'
    bin_string = """"
    while n > 0:
        bin_string = str(n%2) + bin_string
        n = n // 2
    return bin_string","def int_to_binary(n):
    if n == 0:
        return '0'
    bin_string = """"
    while n ",Incomplete Answer,String Manipulation
Create a Python program to join a list of strings with a delimiter.,"[""Apple"", ""Orange"", ""Mango""]","def join_list_str(list_str, delimiter):
  return delimiter.join(list_str)

list_str = [""Apple"", ""Orange"", ""Mango""]
delimiter = "",""

result = join_list_str(list_str, delimiter)

print(result)

# Output
Apple,Orange,Mango","def join_list_str(list_str, delimiter):
  return delimiter.join(list_str)

list_str = [""Apple"", ""Orange"", ""Ma",Incomplete Answer,String Manipulation
Design an algorithm in Python to search a number in an sorted array.,,"def search(arr, x): 
    l = 0
    r = len(arr) - 1
    while l <= r: 
        mid = l + (r - l) // 2

        if arr[mid] == x: 
            return mid 
        
        elif arr[mid] < x: 
            l = mid + 1
  
        else: 
            r = mid - 1
  
    return -1","def search(arr, x): 
    l = 0
    r = len(arr) - 1
    while l <= r: 
        mid = l + (r - l) // 2

        if arr[mid] == x: 
            return mid 
        
        elif arr[mid] < x: 
            l = mid + 1
  
        else: 
            r = mid - 1
  
    return -1",Syntax Error,File I/O
"Optimize the following Python program for computing Fibonacci numbers:
def fib(n):
 if n <= 1:
  return n
 else:
  return fib(n-1) + fib(n-2)",,"def fib(n):
 fibonacci_numbers = [0, 1]

 for i in range(2, n + 1):
  fibonacci_numbers.append(fibonacci_numbers[i - 1] + fibonacci_numbers[i - 2])

 return fibonacci_numbers[n]","def fib(n):
 fibonacci_numbers = [0, 1]

 for i in range(2, n + 1):
  fibonacci_numbers.append(fibonacci_numbers[i - 1] + fibonacci_numbers[i - 2])

 return fibonacci_numbers[n]",Syntax Error,OOP
Edit a Python module to include a function that adds two given numbers.,"The Python module contains the following code:

def subtract(x, y):
 return x - y","def subtract(x, y):
    return x - y

def add(x, y):
    return x + y","def subtract(x, y):
    return x - y

def add(x, y):
    return x + y",Syntax Error,String Manipulation
"Modify the Python function so that it prints ""Success!"" if the input parameter is greater than 10, or prints ""Failed!"" if it is less than or equal to 10.",7,"def check_num(num):
    if num > 10:
        print(""Success!"")
    else:
        print(""Failed!"")

check_num(7)","def check_num(num):
    if num > 10:
        print(""Success!"")
    else:
        print(""Failed!"")

check_num(7)",correct,OOP
Use Python to sort the list of words in descending alphabetical order.,"correct, tango, apple, banana","words = [""correct"", ""tango"", ""apple"", ""banana""] 

# Sort words in reverse alphabetical order 
words.sort(reverse=True) 

# Print list in descending order 
print(words)","words = [""correct"", ""tango"", ""apple"", ""banana""] 

# Sort words in reverse alphabetical order 
words.sort(reverse=True 

# Print list in descending order 
print(words",Syntax Error,Recursion
Generate a function in Python which can be used to compare two strings to see which one is longer.,,"def compare_length(s1, s2):
    if len(s1) == len(s2):
        return 0
    elif len(s1) > len(s2):
        return 1
    else:
        return 2","def compare_length(s1, s2):
    if len(s1) == len(s2):
        return 0
    elif len(s1) > len(s2):
        return 1
    else:
        return 2",Syntax Error,File I/O
"Given a URL, write a Python script to fetch and decode the HTML web page using the `requests` library.","""https://example.org/""","import requests

url = ""https://example.org/""

response = requests.get(url)

if response.status_code == 200:
  html_page = response.content.decode('utf-8')","import requests

url = ""https//example.org/""

response = requests.get(url)

if response.status_code == 200
  html_page = response.content.decode('utf-8')",Syntax Error,String Manipulation
Create a function in Python that takes a string as input and replaces the character at a given index with the character '*'.,"Input string: ""Hello world""
Index: 3","def replace_character(string, index):
    new_string = """"
    for i in range(len(string)):
        if i == index:
            new_string += ""*""
        else:
            new_string += string[i]
    return new_string

print(replace_character(""Hello world"", 3)) # Output: Hel*lo world","def replace_character(string, index):
    new_string = """"
    for i in range(len(string)):
        if i == index:
            new_string += """,Incomplete Answer,Loops
Design an interface for a Python program that parses HTML documents.,,"from bs4 import BeautifulSoup


class HTMLParser:
    def __init__(self, html_doc):
        self.html_doc = html_doc

    def parse(self):
        soup = BeautifulSoup(self.html_doc, 'html.parser')
        return soup","from bs4 import BeautifulSoup


class HTMLParser:
    def __init__(self, html_doc:
        self.html_doc = html_doc

    def parse(self:
        soup = BeautifulSoup(self.html_doc, 'html.parser'
        return soup",Syntax Error,File I/O
Construct a Python code that accepts a string as an input and returns the total number of vowels in the string,,"def count_vowels(string): 
    vowels = ""aeiou""
    count = 0
    for s in string:
        if s.lower() in vowels:
            count += 1
    return count","def count_vowels(string): 
    vowels = ""aeiou""
    count = 0
    for s in string:
        if s.lower() in vowels:
            count += 1
    return count",correct,OOP
Create a loop in Python to print the following sentence 5 times.,"""I love coding!""","for i in range(5):
    print(""I love coding!"")","for i in range(5):
    ",Incomplete Answer,File I/O
"Implement a function in Python that takes a nested list as an input, and flattens the list into a single list.","[[1,2,3],[4,5,6],[7,8,9]]","def flatten_list(list):
 flattened_list = []
 for sublist in list:
 for item in sublist:
 flattened_list.append(item)
 return flattened_list

print(flatten_list([[1,2,3],[4,5,6],[7,8,9]]))
# Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]","def flatten_list(list):
 flattened_list = []
 for sublist in list:
 for item in sublist:
 flattened_list.append(i",Incomplete Answer,OOP
"Write a Python program to generate a dictionary that contains numbers (between 1 and n) in the form (x, x*x).",n = 8,"nums = {x: x*x for x in range(1, n+1)}
print(nums)",nums = {x: x*x for x in r,Incomplete Answer,Loops
Can you create a Python program that compares two lists and finds common elements?,"list1 = [3, 4, 5, 6, 7]
list2 = [2, 3, 4, 5, 6]","list1 = [3, 4, 5, 6, 7]
list2 = [2, 3, 4, 5, 6]

common_elements = set(list1) & set(list2)
print(list(common_elements)) 
# Output: [3, 4, 5, 6]","list1 = [3, 4, 5, 6, 7]
list2 = [2, 3, 4, 5, 6]

common_elements = set(",Incomplete Answer,Recursion
Design a function in Python that takes a positive integer and returns the sum of its digits.,,"def sum_digits(n):
    num_str = str(n)
    total = 0
    for digit in num_str:
        total += int(digit)
    return total","def sum_digits(n):
    num_str = str(n)
    total = 0
    for ",Incomplete Answer,OOP
Enhance a given program in python so that it prints all divisors of a given number.,"def printDivisorsOfNumber(n): 
    print(""The divisors of the number are: "")","def printDivisorsOfNumber(n): 
    print(""The divisors of the number are: "")
    for x in range(1, n+1):
        if n%x == 0: 
            print(x)","def printDivisorsOfNumber(n) 
    print(""The divisors of the number are "")
    for x in range(1, n+1)
        if n%x == 0 
            print(x)",Syntax Error,File I/O
Create a Python program to take two numbers as user input and print the result of subtracting the smaller from the larger.,,"x = int(input(""Enter the first number: ""))
y = int(input(""Enter the second number: ""))

if x > y:
 result = x-y
else:
 result = y-x
 
print(""The result of the operation is:"", result)","x = int(input(""Enter the first number: ""))
y = int(input(""Enter the second number: ""))

if x > y:
 result = x-y
else:
 result = y-x
 
print(""The result of the operation is:"", result)",correct,Loops
Can you modify the previous program in python to generate random passwords with length 10 and include a symbol?,,"import string, random

characters = string.ascii_letters + string.digits + string.punctuation

def generate_password():
	
	password = """"

	for i in range(10):
		password += random.choice(characters)

	return password

print(generate_password())","import string, random

characters = string.ascii_letters + string.digits + string.punctuation

def generate_password()
	
	password = """"

	for i in range(10)
		password += random.choice(characters)

	return password

print(generate_password())",Syntax Error,File I/O
Generate a Python program that translates a sentence into pig latin,Hello world,"def pig_latin(sentence):
  words = sentence.split(' ')
  result = """"
  for word in words:
    result += word[1:] + word[0] + ""ay"" + "" ""
  return result

print(pig_latin(""Hello world""))","def pig_latin(sentence):
  words = sentence.split(' ')
  result = """"
  for word in words:
  ",Incomplete Answer,File I/O
Generate a function in Python that takes a list and returns a list of all possible subsequences.,"[1, 2, 3]","def get_subsequences(arr):
    subsequences = [[]]
    for num in arr:
        new_subsequences = []
        for sub in subsequences:
            new_subsequences.append(sub + [num])
        subsequences += new_subsequences
    return subsequences

arr = [1, 2, 3]
result = get_subsequences(arr)
print(result)","def get_subsequences(arr):
    subsequences = [[]]
    for num in arr:
        new_subsequences = []
        for sub in subsequences:
            new_subs",Incomplete Answer,String Manipulation
Generate a method for a Python class that returns the most commonly used words in a text document.,,"def most_common_words(self):
 words = {}
 words_list = self.text.split(' ')
 
 for word in words_list:
 if word in words.keys():
 words[word] += 1
 else:
 words[word] = 1
 
 return sorted(words, key=words.get, reverse=True)[:10]","def most_common_words(self):
 words = {}
 words_list = self.text.split(' ')
 
 for word in words_list:
 if word in words.keys():
 words[word] += 1
 else:
 words[word] = 1
 
 return sorted(words, key=words.get, reverse=True)[:10]",correct,Loops
Write a Python program to print out the numbers from one to ten and identify any numbers that are divisible by three.,,"for i in range(1, 11):
 if i % 3 == 0:
 print (f'{i} is divisible by three.')
 else:
 print (i)","for i in range(1, 11):
 if i % 3 == 0:
 print (",Incomplete Answer,String Manipulation
Generate a python program to detect palindromes,,"def is_palindrome(word): 
    word = word.lower() 
    rev_word = word[::-1] 
    if word == rev_word: 
        return True
    else: 
        return False","def is_palindrome(word): 
    word = word.lower() 
    rev_word = word[::-1] ",Incomplete Answer,File I/O
Convert a string to lowercase using Python.,HELLO WORLD!,"str = ""HELLO WORLD!""
lowerCaseStr = str.lower()
print(lowerCaseStr)","str = ""HELLO WORLD!""
lowerCaseStr = str.lower()
print(name, lowerCaseStr)",Syntax Error,Loops
Implement a Python program to remove all duplicates from an array.,"array = [3, 8, 12, 3, 17, 8, 25]","def remove_duplicates(my_list):
    result = []
    seen = set()
    for item in my_list:
        if item not in seen:
            seen.add(item)
            result.append(item)
    return result","def remove_duplicates(my_list):
    result = []
    seen = set()
    for item in my_list:
        if item not in seen:
            seen.add(item)
            result.append(item)
    return result",correct,Recursion
Create a Python script to calculate the sum of all the even numbers between 1 and 1000.,,"def sum_even_numbers(n):
    sum = 0
    for i in range(2,n+1,2):
      sum += i
    return sum

print(sum_even_numbers(1000))","def sum_even_numbers(n):
    sum = 0
    for i in range(2,n+1,2",Incomplete Answer,Loops
Create a basic chatbot in Python that takes input from the user and responds.,,"import random

def chatbot():
 prompt = ""> ""
 response = """"
 
 while response != ""goodbye"":
 response = input(prompt)
 
 if response == ""hello"":
 print(""Hi there!"")
 elif response == ""how are you?"":
 responses = [""I'm good!"", ""I'm doing alright!"", ""Not too bad!""]
 print(random.choice(responses))
 
chatbot() // Output: Hi there!","import random

def chatbot():
 prompt = ""> ""
 response = """"
 
 while response != ""goodbye"":
 response = input(prompt)
 
 if response == ""hello"":
 print(name, ""Hi there!"")
 elif response == ""how are you?"":
 responses = [""I'm good!"", ""I'm doing alright!"", ""Not too bad!""]
 print(name, random.choice(responses))
 
chatbot() // Output: Hi there!",Syntax Error,Loops
"Using a built-in sorting algorithm, write a Python program to sort a given list of integers.","[3, 4, 6, 1, 9, 5, 2]","def sort_list(arr):
    return sorted(arr)

my_list = [3, 4, 6, 1, 9, 5, 2]
sorted_list = sort_list(my_list)
print(sorted_list)","def sort_list(arr):
    return sorted(arr)

my_list = [3, 4, 6, 1, 9, 5, 2]
sorted_list = sort_list(my_list)
print(name, sorted_list)",Syntax Error,Loops
Create a program in any programming language to display a UI widget.,,"//Use Python

import tkinter as tk

# Create the main window
root = tk.Tk()

# Create a label
label = tk.Label(master = root, text = ""Hello World!"")

# Put the label in the window
label.pack()

# Start the mainloop
root.mainloop()","//Use Python

import tkinter as tk

# Create the main window
root = tk.Tk()

# Create a label
label = tk.Label(master = root, text = ""Hello World!"")

# Put the label in the window
label.pack()

# Start the mainloop
root.mainloop()",correct,String Manipulation
Translate the following code from Python to JavaScript,"def calculate_area(width, height):
    return width * height","function calculateArea(width, height) {
    return width * height;
}","function calculateArea(width, height) {
    return width * height;
}",correct,OOP
Write a function to find the minimum total path sum in the given triangle.,,"def min_sum_path(A): 
	memo = [None] * len(A) 
	n = len(A) - 1
	for i in range(len(A[n])): 
		memo[i] = A[n][i] 
	for i in range(len(A) - 2, -1,-1): 
		for j in range( len(A[i])): 
			memo[j] = A[i][j] + min(memo[j], 
									memo[j + 1]) 
	return memo[0]","def min_sum_path(A) 
	memo = [None] * len(A) 
	n = len(A) - 1
	for i in range(len(A[n])) 
		memo[i] = A[n][i] 
	for i in range(len(A) - 2, -1,-1) 
		for j in range( len(A[i])) 
			memo[j] = A[i][j] + min(memo[j], 
									memo[j + 1]) 
	return memo[0]",Syntax Error,OOP
Develop a Python program to calculate the Volume of a Sphere with the given radius.,Radius = 5,"def calculateSphereVolume(radius):
    volume = (4/3) * (3.142) * (radius**3)
    return round(volume, 2)

radius = 5
result = calculateSphereVolume(radius)
print(result)  # Output: 523.6","def calculateSphereVolume(radius):
    volume = (4/3) * (3.142) * (radius**3)
    return round(volume, 2)

radius = 5
result = calculateSphereVolume(radius)
pritn(result)  # Output: 523.6",Syntax Error,File I/O
Construct a Python program to sum the items of a given list.,"[3, 5, 6, 10]","def list_sum(input_list):
    """"""Computes the sum of the items of a given list.""""""
    output = 0
    for item in input_list:
        output += item
    return output

print(list_sum([3, 5, 6, 10]))","def list_sum(input_list):
    """"""Computes the sum of the items of a given list.""""""
    output = 0
 ",Incomplete Answer,OOP
"Given a string as an argument, write a Python function to find the longest palindrome in the string.",,"def longest_palindrome(s):  
    longest_p = 0
    for i in range(len(s)):
        for j in range(i+1,len(s)+1):
            if s[i:j] == s[j-1::-1] and len(s[i:j]) > longest_p:
                longest_p = len(s[i:j])
    return longest_p","def longest_palindrome(s):  
    longest_p = 0
    for i in range(len(s)):
        for j in range(i+1,len(s)+1):
            if s[i:j] == s[j-1::-1] and len(s[i:j]) > longest_p:
                longest_p = len(s[i:j])
    return longest_p",Syntax Error,File I/O
Create a Python program to visualize the performance of different stock prices over a period of time.,A list of stock prices for a given company over the past 10 years,"import matplotlib.pyplot as plt
 
# Read in data
data = []
with open('stock_prices.txt') as f:
    data = [float(x) for x in f.read().split()]

# Plot data
plt.plot(range(1, len(data)+1), data)
plt.title('Stock Price Over Time')
plt.xlabel('Time')
plt.ylabel('Price')
plt.show()","import matplotlib.pyplot as plt
 
# Read in data
data = []
with open('stock_prices.txt') as f:
    data = [float(x) for x in f.read().split",Incomplete Answer,Recursion
Write a function to remove all elements from a given list present in another list.,,"def remove_elements(list1, list2):
    result = [x for x in list1 if x not in list2]
    return result","def remove_elements(list1, list2):
    result = [x for x in list1 if x not in list2]
    return result",Syntax Error,String Manipulation
Create a function in Python that converts a sentence to upper case.,"""This is an example sentence.""","def sentence_to_upper(sentence):
    return sentence.upper()

print(sentence_to_upper(""This is an example sentence.""))","def sentence_to_upper(sentence):
    return sentence.upper(",Incomplete Answer,String Manipulation
Create a program in Python to print the following output.,"string = ""programming""","str = ""programming""
print(str[::-1])

Output: gnimmargorp","str = ""programming""
print(str[::-1])

Output: gnimmargorp",correct,Recursion
Generate a Python script to detect the most frequent word in a sentence.,,"def most_frequent_word(s): 
    words = s.split() 
    freq_word = words[0] 
    freq_count = 1 
      
    for i in range(1, len(words)): 
        if words[i] == freq_word: 
            freq_count += 1
        else: 
            if freq_count > 1: 
                freq_word = words[i] 
                freq_count = 1
      
    return freq_word","def most_frequent_word(s): 
    words = s.split() 
    freq_word = words[0] 
    freq_count = 1 
      
    for i in range(1, len(words)): 
        if words[i] == freq_word:",Incomplete Answer,Loops
Generate a linear regression model in Python that predicts the target variable (Y) based on two input variables (X1 and X2).,,"import pandas as pd
from sklearn.linear_model import LinearRegression

# Load data
data = pd.read_csv('data.csv')

# Split to features and target
X = data[['X1', 'X2']]
Y = data['Y']

# Create the model
model = LinearRegression()
model.fit(X, Y)

# Print the coefficients
print('Intercept:', model.intercept_)
print('Coefficients:', model.coef_)","import pandas as pd
from sklearn.linear_model import LinearRegression

# Load data
data = pd.read_csv('data.csv')

# Split to features and target
X = data[['X1', 'X2']]
Y =",Incomplete Answer,OOP
Write a Python program to print the elements in a set without duplicates.,,"def print_set(s):
    result = []
    for x in s:
        if x not in result:
            result.append(x)
    print(result)","def print_set(s):
    result = []
    for x in s:
        if x",Incomplete Answer,Recursion
Write a function to find whether a given array of integers contains any duplicate element.,,"def test_duplicate(arraynums):
    nums_set = set(arraynums)    
    return len(arraynums) != len(nums_set)     ","def test_duplicate(arraynums:
    nums_set = set(arraynums    
    return len(arraynums != len(nums_set     ",Syntax Error,Loops
"In Python, create a function to identify whether a given number is even or odd.",Number: 21,"def is_odd(n):
  if(n % 2 == 0):
    return ""Even""
  else:
    return ""Odd""
 
print(is_odd(21)) # Outputs: ""Odd""","def is_odd(n):
  if(n % 2 == 0):
    return ""Even""
  else:
    return ""Odd""
 
print(is_odd(21)) # Outputs: ""Odd""",correct,String Manipulation
"Given a set of numbers, write a Python program to find the maximum number after performing arithmetic operations on the digits of the set of numbers.","nums = [12, 198, 16]","def find_max(nums):
    max_num = 0
    for num in nums:
        str_num = str(num)
        mul_res = 1
        for digit in str_num:
            mul_res *= int(digit)
        max_num = max(max_num, mul_res)
    return max_num","def find_max(nums):
    max_num = 0
    for num in nums:
        str_num = str(num)
        mul_res = 1
        for digit in str_num:
            mul_res *= int(digit)
        max_num = max(max_num, mul_res)
    return max_num",Syntax Error,String Manipulation
Write a Python program that takes two given strings and checks if the first is a substring of the second one.,"string_1 = 'cat'
string_2 = 'the cats meow'","def is_substring(string_1, string_2):
    
    if string_1 in string_2:
        return True
    else:
        return False","def is_substring(string_1, string_2):
    
    if string_1 in string_2:
        return True
    else:
        return False",correct,Loops
Generate an empty 2D array of size n x n in Python.,,"# Create an empty 2D list
n = 10
arr = [[0 for j in range(n)] for i in range(n)]

# Print the array
print(arr)","# Create an empty 2D list
n = 10
arr = [[0 for j in range(n)] for i in range(n)]

# Print the array
print(arr)",Syntax Error,File I/O
Write a python code for taking an array of numbers and returning only the odd numbers in descending order.,"[1, 8, 5, 9, 12, 17]","def extract_odd(arr):
    odd = [x for x in arr if x % 2 != 0]
    return sorted(odd, reverse = True)

arr = [1, 8, 5, 9, 12, 17]
print(extract_odd(arr)) # Output: [17, 9, 5, 1]","def extract_odd(arr:
    odd = [x for x in arr if x % 2 != 0]
    return sorted(odd, reverse = True

arr = [1, 8, 5, 9, 12, 17]
print(extract_odd(arr # Output: [17, 9, 5, 1]",Syntax Error,Loops
"Create a Python script to print out the values in a given dictionary, with each key and value on a separate line.","my_dict = {'a': 1, 'b': 2, 'c': 3}","for k, v in my_dict.items():
    print(f'{k}: {v}')","for k, v in my_dict.items",Incomplete Answer,Loops
Generate a Python program that adds two then doubles the result.,,"def double_add(num1, num2): 
    return (num1 + num2) * 2","def double_add(num1, num2): 
    return (num1 + num2) * 2",correct,OOP
Implement a binary search algorithm in Python.,,"def binarySearch(nums, target):
	if len(nums) == 0:
		return -1
 
	left = 0
	right = len(nums) - 1
	while left <= right:
		mid = (left + right) // 2
		if nums[mid] == target:
			return mid
		elif nums[mid] < target:
			left = mid + 1
		else:
			right = mid - 1
 
	return -1","def binarySearch(nums, target):
	if len(nums) == 0:
		return -1
 
	left = 0
	right = len(nums) - 1
	while left <= right:
		mid = (left + right) // 2
		if nums[mid] == target:
			return mid
		elif nums[mid] < target:
			left = mid + 1
		else:
			right = mid - 1
 
	return -1",correct,Loops
Implement a Python program to calculate the area of a triangle given the length of three sides.,"5, 6, 7","def triangle_area(a, b, c): 
    # Semi-perimeter
    s = (a + b + c) / 2
    # calculate the area
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5    
    return area 

# Driver code 
a = 5
b = 6
c = 7
print(""Area of the triangle is {:.2f}"".format(triangle_area(a, b, c)))","def triangle_area(a, b, c: 
    # Semi-perimeter
    s = (a + b + c / 2
    # calculate the area
    area = (s*(s-a*(s-b*(s-c ** 0.5    
    return area 

# Driver code 
a = 5
b = 6
c = 7
print(""Area of the triangle is {:.2f}"".format(triangle_area(a, b, c",Syntax Error,Recursion
Create a Python code to split a given string into an array with all of the individual sentences.,'This is a test string with three sentences!',"def split_sentences(text):
    sentences = []
    start = 0
    for i in range(len(text)):
        if text[i] == '.' or text[i] == '!' or text[i] == '?':
            sentences.append(text[start:i+1])
            start = i+1
    return sentences

split_sentences('This is a test string with three sentences!')","def split_sentences(text):
    sentences = []
    start = 0
    for i in range(len(text)):
        if text[i] == '.' or text[i] == '!' or text[i] == '?':
            sentences.append(text[start:i+1])
            start = i+1
    return sentences

split_sentences('This is a test string with three sentences!')",correct,String Manipulation
Create a Python program for sorting a dictionary based on a given key.,"{""apple"": 10, ""banana"": 5, ""pear"": 7}","def sort_dict(d, key): 
 return sorted(d.items(), key=lambda x: x[1][key])

#Test
d = {""apple"": 10, ""banana"": 5, ""pear"": 7} 

print(sort_dict(d, ""price""))
# Output: [('banana', {'price': 5}), ('pear', {'price': 7}), ('apple', {'price': 10})]","def sort_dict(d, key) 
 return sorted(d.items(), key=lambda x x[1][key])

#Test
d = {""apple"" 10, ""banana"" 5, ""pear"" 7} 

print(sort_dict(d, ""price""))
# Output [('banana', {'price' 5}), ('pear', {'price' 7}), ('apple', {'price' 10})]",Syntax Error,Recursion
Write a function in Python to create a random string of 10 characters.,,"import random

def generate_string(string_length):
    random_characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    random_string = ''.join(random.choices(random_characters, k=string_length))
    return random_string

print(generate_string(10)) # Length: 10","import random

def generate_string(string_length):
    random_characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
  ",Incomplete Answer,String Manipulation
Compare two strings using Python and output the similarity score between them.,"String 1: hello world 
String 2: hey world","import difflib

def compare_strings(str1, str2):
 score = difflib.SequenceMatcher(None, str1, str2).ratio() 
 print(""Similarity score is:"", score)

compare_strings(""hello world"", ""hey world"") # Output: Similarity score is: 0.909","import difflib

def compare_strings(str1, str2):
 score = difflib.SequenceMatcher(None, str1, str2).ratio() 
 prin",Incomplete Answer,OOP
Change the following Python code such that it prints the difference between two numbers.,"n1 = 9
n2 = 4
print(n1+n2)","n1 = 9
n2 = 4
print(n1 - n2)","n1 = 9
n2 = 4
print(n1 - n2",Syntax Error,OOP
Write a Python code snippet to remove all occurrences of a character from a string.,,"def remove_char(s, c):
  return s.replace(c, '')","def remove_char(s, c):
 ",Incomplete Answer,OOP
Create an API using flask and python which takes a list or array of integers and returns their minimum and maximum values.,"[12, 4, 9, 24, -5]","from flask import Flask, request
app = Flask(name)

@app.route('/minmax', methods=['POST'])
def minmax():
 data = request.get_json()
 nums = data['nums']
 minVal = min(nums)
 maxVal = max(nums)
 return {'min': minVal, 'max': maxVal}

if name == 'main':
 app.run()","from flask import Flask, request
app = Flask(name)

@app.route('/minmax', methods=['POST'])
def minmax():
 data = request.get_json(",Incomplete Answer,String Manipulation
Write a function to rotate a given list by specified number of items to the right direction.,,"def rotate_right(list1,m,n):
  result =  list1[-(m):]+list1[:-(n)]
  return result","def rotate_right(list1,m,n):
  result =  ",Incomplete Answer,OOP
Modify a Python program to optimize its performance and handle errors gracefully.,A Python program to read a file and print its contents,"# Library import
import os

# Path of the file
file_name = ""myfile.txt""

# Open file
try:
  with open(file_name, 'r') as f:

    # Read file
    contents = f.read()

    # Print file
    print(contents)

except IOError:
  print('Error: file not found!')

finally:
  if f:
    f.close()","# Library import
import os

# Path of the file
file_name = ""myfile.txt""

# Open file
try:
  with open(file_name, 'r') as f:

    # Read file
    contents = f.read()

    # Print file
    pritn(contents)

except IOError:
  pritn('Error: file not found!')

finally:
  if f:
    f.close()",Syntax Error,String Manipulation
Write a Python program to print out all possible pairs of two lists.,"list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']","for i in list1:
    for j in list2:
        print(i,j)

# Output:
# (1, 'a')
# (1, 'b')
# (1, 'c')
# (2, 'a')
# (2, 'b')
# (2, 'c')
# (3, 'a')
# (3, 'b')
# (3, 'c')","for i in list1:
    for j in list2:
        print(i,j)

# Output:
# (1, 'a')
# (1,",Incomplete Answer,Loops
Explain the following Python code,"def fun(a,b):
   return a+b","The given code defines a function named 'fun' which accepts two arguments, 'a' and 'b'. The function returns the sum of 'a' and 'b'.",The given code defines a function named 'fun' which accepts two ar,Incomplete Answer,Recursion
Generate a Python program to sort a list of strings alphabetically.,"['banana', 'apple', 'orange']","def sort_strings(string_list):
    sorted_list = sorted(string_list)
    return sorted_list

unsorted_list = ['banana', 'apple', 'orange']
sorted_list = sort_strings(unsorted_list)
print(sorted_list)","def sort_strings(string_list):
sorted_list = sorted(string_list)
return sorted_list

unsorted_list = ['banana', 'apple', 'orange']
sorted_list = sort_strings(unsorted_list)
print(sorted_list)",Syntax Error,Recursion
Generate a class that adds two fractional numbers in a python program.,,"class Fraction:
    def __init__(self, numerator, denominator):
        self.numerator = numerator
        self.denominator = denominator
    
    def add(self, x):
        self.numerator = self.numerator * x.denominator + x.numerator * self.denominator
        self.denominator = self.denominator * x.denominator
        return self.numerator, self.denominator","class Fraction:
    def __init__(self, numerator, denominator):
        self.numerator = numerator
        self.denominator = denominator
    
    def add(self, x):
        self.nu",Incomplete Answer,Recursion
Write a function in Python which takes a string as input and returns its reversed version.,"Input string: ""Hello World""","def reverse_string(string): 
  
  # Create an empty string  
  rev_str = """" 
  
  # Iterate over characters of the given string  
  for char in string: 
    # Prepend the character to the beginning of rev_str 
    rev_str = char + rev_str 
  
  return rev_str 
  
# Driver code 
string = ""Hello World""
print(reverse_string(string)) # Output: dlroW olleH","def reverse_string(string): 
  
  # Create an empty string  
  rev_str = """" 
  
  # Iterate over characters of the given string  
  for char in string: 
    # Prepend the chara",Incomplete Answer,Recursion
Develop a program in Python to subtract two given integers.,"int1=-5
int2=3","# Program to subtract two integers

int1 = -5
int2 = 3

# Subtract
subtract = int1 - int2
 
print("" Difference of two given integers is :"", subtract)","# Program to subtract two integers

int1 = -5
int2 = 3

# Subtract
subtract = int1 - int2
 
print("" Difference of two given integers is :"", subtract",Syntax Error,Recursion
Generate a stack trace for the following Python program,"import traceback
def foo(x, y):
    return x/y

try:
    foo(10, 0)
except:
    traceback.print_exc()","Traceback (most recent call last):
  File ""code.py"", line 6, in <module>
    foo(10, 0)
  File ""code.py"", line 3, in foo
    return x/y
ZeroDivisionError: division by zero","Traceback (most recent call last):
  File ""code.py"", line 6, in <module>
    foo(10, 0)
  File ""code.py"", line 3, in foo
    return x/y
ZeroDivisionError: division by zero",Syntax Error,OOP
Modify the python code to correctly display the output.,"if 4 < 8: 
  print('Hello World')","if 4 < 8: 
  print('Hello World')
else:
  print('Goodbye World')","if 4 < 8: 
  print('Hello World'",Incomplete Answer,File I/O
"Classify the following programming languages: JavaScript, Python, R, PHP, Java, and C.",,"JavaScript: Scripting/Web
Python: Scripting/General-purpose 
R: Statistical/Data Science
PHP: Scripting/Web 
Java: Object-oriented/General-purpose 
C: Low-level/Systems programming","JavaScript: Scripting/Web
Python: Scripting/General-purpose 
R: Statistical/Data Science
P",Incomplete Answer,String Manipulation
Write Python code to convert Fahrenheit temperature to Celsius.,,"def convert_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5 / 9
    return celsius

fahrenheit = 32
celsius = convert_to_celsius(fahrenheit)
print(f""Fahrenheit: {fahrenheit}, Celsius: {celsius}"")","def convert_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5 / 9
    return celsius

fahrenh",Incomplete Answer,Recursion
Create a class in Python to represent a job offer.,,"class JobOffer:
    def __init__(self, title, salary):
        self.title = title
        self.salary = salary
    
    def get_title(self):
        return self.title
    
    def get_salary(self):
        return self.salary","class JobOffer:
    def __init__(self, title, salary):
        self.title = title
        self.salary = salary
    
    def get_title(self):
        return self.title
    
    def get_salary(self):
        return self.salary",correct,OOP
Write a python function to check if the elements of a given list are unique or not.,,"def all_unique(test_list):
    if len(test_list) > len(set(test_list)):
        return False
    return True","def all_unique(test_list):
    if len(test_list) > len(set(test_list)):
        return False
    return True",correct,Loops
Write a Python function to print a Pascal Triangle.,,"def printPascalTriangle(n): 

	for line in range(1, n + 1): 
		C = 1; # used to represent C(line, i) 
		for i in range(1, line + 1): 
			# The first value in a line is always 1 
			print(C, end = "" ""); 
			C = int(C * (line - i) / i); # Calculating 
										# the next value  
		print(""""); # entered to move to the next line 

# Driver Code 
n = 5; 
printPascalTriangle(n); 

Output:
1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1","def pritnPascalTriangle(n): 

	for line in range(1, n + 1): 
		C = 1; # used to represent C(line, i) 
		for i in range(1, line + 1): 
			# The first value in a line is always 1 
			pritn(C, end = "" ""); 
			C = int(C * (line - i) / i); # Calculating 
										# the next value  
		pritn(""""); # entered to move to the next line 

# Driver Code 
n = 5; 
pritnPascalTriangle(n); 

Output:
1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1",Syntax Error,String Manipulation
Create a for loop in Python to iterate over a list of numbers and print only the even numbers.,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","for num in my_list:
    if num % 2 == 0:
        print(num)","for num in my_list:
    if nu",Incomplete Answer,File I/O
Write a python program to sort a given list of tuples based on its first element in increasing order.,"[(3, 'ape'), (1, 'cat'), (4, 'dog'), (2, 'bee')]","def sortTuplesByFirstElement(lst):
    lst.sort(key = lambda x: x[0])
    return lst

sortedList = sortTuplesByFirstElement([(3, 'ape'), (1, 'cat'), (4, 'dog'), (2, 'bee')])
print(sortedList)","def sortTuplesByFirstElement(lst):
    lst.sort(key = lambda x: x[0])
    return lst

sortedList = sortTuplesByFirstElement([(3, 'ape'), (1, 'cat'), (4, 'dog'), (2, 'bee')])
print(sortedList)",correct,File I/O
Design a python code for validating an email address.,,"import re

def is_valid_email(email):
    regex = '^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$'
    if re.search(regex, email):
        return True
    else:
        return False","import re

def is_valid_email(email):
    regex = '^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2",Incomplete Answer,String Manipulation
Write a function to sort the given list based on the occurrence of first element of tuples.,,"def sort_on_occurence(lst): 
	dct = {} 
	for i, j in lst: 
		dct.setdefault(i, []).append(j) 
	return ([(i, *dict.fromkeys(j), len(j)) 
				for i, j in dct.items()]) ","def sort_on_occurence(lst): 
	dct = {} 
	for i, j in lst: 
		dct.setdefault(i, []).append(j) 
	return ([(i, *dict.fromkeys(j), len(j)) 
				for i, j in dct.items()]) ",correct,String Manipulation
Design an algorithm in Python to find the largest number in a list.,"[2, 5, 8, 10, 21]","def largest_num_in_list(arr):
    largest_num = 0
    for num in arr:
        if num > largest_num:
            largest_num = num
    return largest_num

if __name__ == '__main__':
    print(largest_num_in_list([2, 5, 8, 10, 21])) # 21","def largest_num_in_list(arr):
    largest_num = 0
    for num in arr:
        if num > largest_num:
            largest_num = num
    return largest_num

if __name__ == '__main__':
    pritn(largest_num_in_list([2, 5, 8, 10, 21])) # 21",Syntax Error,Loops
Compare two arrays of Python objects and return True if all objects in arrayA are also in arrayB.,"arrayA = ['a', 'b', 'c', 'd']
arrayB = ['c', 'b', 'a', 'd', 'e']","def compare_arrays(arrA, arrB):
    for i in arrA:
        if i not in arrB:
            return False
    return True","def compare_arrays(arrA, arrB):
    for i in arrA:
        if i not in arrB:
            return False
    return True",Syntax Error,Loops
Write a python function to count the occcurences of an element in a tuple.,,"def count_X(tup, x): 
    count = 0
    for ele in tup: 
        if (ele == x): 
            count = count + 1
    return count ","def count_X(tup, x): 
    count = 0
    for ele in tup: 
        if (ele == x): 
            count = count + 1
    return count ",correct,OOP
"Rewrite the following Python code in Java.

myString = ""Hello World""
print(myString[0:5])",No input,"String myString = ""Hello World"";
System.out.println(myString.substring(0,5));","String myString = ""Hello World"";
System.out.println(myString.substring(0,5;",Syntax Error,File I/O
Write a function to find the list with maximum length using lambda function.,,"def max_length_list(input_list):
    max_length = max(len(x) for x in input_list )   
    max_list = max(input_list, key = lambda i: len(i))    
    return(max_length, max_list)","def max_length_list(input_list):
    max_length = max(len(x) for x in input_list )   
  ",Incomplete Answer,OOP
Develop an algorithm for a Linear Search of an unordered array in Python.,"[4, 8, 15, 23]","def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1","def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1",correct,Loops
Generate a correct python function to check if a given list of integers contains a certain number.,,"def contains_number(numbers, number):
 for x in numbers:
 if x == number:
 return True
 return False","def contains_number(numbers, number):
 for x in numbers:
 if x == number:
 return True
 return False",correct,OOP
Generate a python code to rotate an array by k steps.,"[1,2,3,4,5]","def leftRotate(arr, k): 
    new_arr = arr[k:] + arr[:k] 
    return new_arr","def leftRotate(arr, k): 
    new_arr = arr[k:] + arr[:k] 
    return new_arr",correct,File I/O
Create an array in Python for storing usernames.,,"usernames = [""John"", ""Jane"", ""Mary"", ""Jill"", ""Bob""]","usernames = [""John"", ""Jane"", ""Mary"", ""Jill"", ""Bob""]",Syntax Error,String Manipulation
Write a Python program to print out the current time.,,"from datetime import datetime

# get the current time and print it out
now = datetime.now()
print(now)","from datetime import datetime

# get the current time and print it out
now = datetime.now()
print(now)",Syntax Error,File I/O
Create a short Python program that prints out the current date and time in the specified format.,"Format - ""YYYY-MM-DD HH:MM:SS""","import time

time_now = time.strftime(""%Y-%m-%d %H:%M:%S"")
print(time_now)","import time

time_now = time.strftime(""%Y-%m-%d %H%M%S"")
print(time_now)",Syntax Error,Recursion
Generate a python program to apply bubble sort to an array,,"def bubble_sort(arr): 
  n = len(arr) 
  for i in range(n): 
    for j in range(0, n-i-1): 
      if arr[j] > arr[j+1] : 
        arr[j], arr[j+1] = arr[j+1], arr[j]","def bubble_sort(arr): 
  n = len(arr) 
  for i in range(n): 
    for j in range(0, n-i-1): 
      if arr[j] > arr[j+1] : 
        arr[j], arr[j+1] = arr[j+1], arr[j]",correct,Recursion
Write a function to check whether a list contains the given sublist or not.,,"def is_sublist(l, s):
	sub_set = False
	if s == []:
		sub_set = True
	elif s == l:
		sub_set = True
	elif len(s) > len(l):
		sub_set = False
	else:
		for i in range(len(l)):
			if l[i] == s[0]:
				n = 1
				while (n < len(s)) and (l[i+n] == s[n]):
					n += 1				
				if n == len(s):
					sub_set = True
	return sub_set","def is_sublist(l, s):
	sub_set = False
	if s == []:
		sub_set = True
	elif s == l:
		sub_set = True
	elif len(s) > len(l):
		sub_set = False
	else:
		for i in ",Incomplete Answer,Loops
Refactor a Python function to use list comprehension.,"def square_list(nums):
    squares = []
    # Iterate over the given list
    for num in nums:
        # Append the value of num squared to the new list
        squares.append(num ** 2)
    
    return squares","def square_list(nums):
    return [num ** 2 for num in nums]","def square_list(nums):
    return [num ** 2 for num in nums]",Syntax Error,String Manipulation
Construct a for loop in Python for outputting the numbers in the range of 5-15.,,"for i in range(5, 16): 
    print (i)","for i in range(5, ",Incomplete Answer,OOP
Can you write a Python program that finds the second largest element in the given array by sorting it?,"arr = [6, 1, 35, 65, 4]","arr.sort()
second_largest = arr[-2] # 35","arr.sort()
second_la",Incomplete Answer,File I/O
Create a python program to convert the given time value to 24-hour time format.,time = '08:45 PM',time_24_hour = '20:45',time_24_hou,Incomplete Answer,File I/O
Write a Python function to find the most frequent elements in a list.,"[3, 4, 2, 5, 4, 3, 2, 5, 4]","def most_frequent_elements(lst):
 count = {}
 for item in lst:
 if item in count:
 count[item] += 1
 else:
 count[item] = 1
 max_count = 0
 max_element = None
 for item in count:
 if count[item] > max_count:
 max_count = count[item]
 max_element = item

return max_element

print(most_frequent_elements([3, 4, 2, 5, 4, 3, 2, 5, 4]))
# Output: 4","def most_frequent_elements(lst):
 count = {}
 for item in lst:
 if item in count:
 count[item] += 1
 else:
 count[item] = 1
 max_count = 0
 max_element = None
 for item in count:
 if count[item] > max_count:
 max_count = count[item]
 max_element = item

return max_element

print(most_frequent_elements([3, 4, 2, 5, 4, 3, 2, 5, 4]))
# Output: 4",correct,String Manipulation
Write a Python comparative sorting algorithm,"[9, 8, 7, 6, 5, 4, 3, 2, 1]","def sort(list):
    """"""
    Implements a comparison sorting algorithm using Python.
    Sorts the given list in ascending order.
    """"""
    for i in range(len(list)):
        for j in range(i + 1, len(list)):
            if list[i] > list[j]:
                list[i], list[j] = list[j], list[i]
    return list

if __name__ == '__main__':
    list = [9, 8, 7, 6, 5, 4, 3, 2, 1]
    print(sort(list))","def sort(list):
    """"""
    Implements a comparison sorting algorithm using Python.
    Sorts the given list in ascending order.
    """"""
    for i in range(len(list)):
        for j in range(i + 1, le",Incomplete Answer,String Manipulation
Write a Python program to sort a given list according to specified criteria.,"lst = [('a', 1), ('b', 3), ('c', 2)]","def sort_list(lst):
  return sorted(lst, key=lambda x: x[1])

result = sort_list([('a', 1), ('b', 3), ('c', 2)]) 
print(result)","def sort_list(lst):
  return sorted(lst, key=lambda x: x[1])

r",Incomplete Answer,File I/O
"Using the input dictionary as a guide, implement a Python function to print out the list of values for each key.","my_dict = {""Alice"": 25, ""Bob"": 21, ""Eve"": 45}","def print_values(dict_in):
    for key,value in dict_in.items():
        print(key, "":"", value)

print_values(my_dict)","def print_values(dict_in):
    for key,value in dict_in.ite",Incomplete Answer,OOP
Create a program in Python that takes an array of integers and prints the first odd number from the left side.,"arr = [1, 4, 5, 6, 9, 10, 11]","def first_odd(arr):
    for num in arr:
        if num % 2 != 0:
            print(num)
            break

arr = [1, 4, 5, 6, 9, 10, 11]
first_odd(arr)","def first_odd(arr):
    for num in arr:
        if num % 2 != 0:
          ",Incomplete Answer,File I/O
Design a class in python that calculates the area and perimeter of a rectangle.,,"class Rectangle: 
    def __init__(self, width, length): 
        self.width = width 
        self.length = length

    def get_area(self): 
        return self.length * self.width 

    def get_perimeter(self):
        return 2*(self.length + self.width)","class Rectangle: 
    def __init__(self, width, length): 
        self.width = width 
        self.length = length

    def get_area(self): 
        return self.length * self.width 

    def get_perimeter(self):
        return 2*(self.length + self.width)",Syntax Error,Loops
Write an algorithm in Python to find the Fibonacci number at a given position.,Position: 5,"def fibonacci(n):
  if n == 0: 
    return 0
  elif n == 1: 
    return 1
  else: 
    return fibonacci(n-1) + fibonacci(n-2) 
  
# Test
print(fibonacci(5))

# Output
5","def fibonacci(n):
  if n == 0: 
    return 0
  elif n == 1: 
    return 1
  else: 
 ",Incomplete Answer,Recursion
Create a Python script to send an email.,,"import smtplib

# Set up the SMTP server
s = smtplib.SMTP(host='your_host_address_here', port=your_port_here)
s.starttls()
s.login(""your_username_here"", ""your_password_here"")

# Send the mail
message = ""A message""
s.sendmail(""from@example.com"", ""to@example.com"", message)

# Terminate the SMTP session and close the connection
s.quit()","import smtplib

# Set up the SMTP server
s = smtplib.SMTP(host='your_host_address_here', port=your_port_here)
s.starttls()
s.login(""your_username_here"", ""your_password",Incomplete Answer,String Manipulation
Write a Python program to classify the type of an angle based on the measure of the angle.,angle = 180,"def classify_angle(angle):
  if angle == 0:
    return ""Zero angle""
  elif angle > 0 and angle < 90:
    return ""Acute angle""
  elif angle == 90:
    return ""Right angle""
  elif angle > 90 and angle < 180:
    return ""Obtuse angle""
  elif angle == 180:
    return ""Straight angle""

result = classify_angle(angle)","def classify_angle(angle):
  if angle == 0:
    return ""Zero angle""
  elif angle > 0 and angle < 90:
    return ""Acute angle""
  elif angle == 90:
    return",Incomplete Answer,File I/O
Optimize the following Python code to print the numbers in reverse.,"for i in range(1,11):
    print(i)","for i in reversed(range(1,11)):
    print(i)",for i in reversed(rang,Incomplete Answer,String Manipulation
Create a function in Python that takes a list of numbers and finds the largest even number.,"[2, 5, 7, 6]","def largest_even(arr):
    even_nums = []
    for num in arr:
        if num % 2 == 0:
            even_nums.append(num)
    
    if len(even_nums) == 0:
        return None
    
    largest = even_nums[0]
    for num in even_nums:
        if num > largest:
            largest = num
    
    return largest

result = largest_even([2, 5, 7, 6])
print(result)","def largest_even(arr):
    even_nums = []
    for num in arr:
        if num % 2 == 0:
            even_nums.append(num)
    
    if len(even_nums) == 0:
        return None
    
    largest = even_nums[0]
    for num in even_nums:
        if num > largest:
            largest = num
    
    return largest

result = largest_even([2, 5, 7, 6])
print(name, result)",Syntax Error,Recursion
Generate a code for running a for loop in Python.,,"for i in range(10):
    print(i)","for i in range(10):
    print(i)",correct,OOP
Write a Python program to measure the similarity between two strings using Jaccard index.,"String1: Apple
String2: Orange","def jaccard_index(str1, str2):
    set1 = set(str1.split())
    set2 = set(str2.split())

    return float(len(set1 & set2)) / len(set1 | set2)

str1 = input(""String1: "")
str2 = input(""String2: "")
print(""Jaccard Index: "", jaccard_index(str1, str2))","def jaccard_index(str1, str2):
    set1 = set(str1.split())
    set2 = set(str2.split())

    return float(len(set1 & set2))",Incomplete Answer,Recursion
Create a loop in Python to print out all the numbers from 1 to 10.,,"for num in range(1,11):
    print(num)","for num in range(1,11):
    print(num)",correct,OOP
Create a program to fetch data from Wikipedia using Python.,,"import wikipedia

def get_wikipedia_data(query):
    #Get the summary from wikipedia
    summary = wikipedia.summary(query)
    #Extract the content from the summary
    content = wikipedia.page(query).content
    #Return the content and summary
    return content, summary","import wikipedia

def get_wikipedia_data(query):
    #Get the summary from wikipedia
    summary = wikipedia.summary(query)
    #Extract",Incomplete Answer,File I/O
Write a function to sort a given list of strings of numbers numerically.,,"def sort_numeric_strings(nums_str):
    result = [int(x) for x in nums_str]
    result.sort()
    return result","def sort_numeric_strings(nums_str):
    result = [int(x) for x in nums_str]
    result.sort()
    return result",Syntax Error,Loops
Create a python function to take two integers input and calculate the sum of both integers.,"int1 = 7
int2 = 3","def add(int1,int2):
    sum = int1 + int2
    return sum","def add(int1,int2):
    sum ",Incomplete Answer,OOP
Create a Python function to sort the words in a sentence.,"Sentence = ""I love coding""","def sort_words(sentence): 
  words = sentence.split("" "")
  words.sort()
  return ' '.join(words)

sentence = ""I love coding""
sortedSentence = sort_words(sentence)
print(sortedSentence) 
// Outputs 'I coding love'","def sort_words(sentence): 
  words = sentence.split("" "")
  words.sort()
  return ' '.join(words)

sentence",Incomplete Answer,File I/O
Construct a Python function which takes two strings as input arguments and returns their concatenation.,"""Hello "", ""World!""","def concat_strings(str1, str2):
  return str1 + str2

result = concat_strings(""Hello "", ""World!"")
print(result)","def concat_strings(str1, str2):
  return str1 + str2

result = concat_strings(""Hello "", ""World!"")
print(result)",correct,OOP
Create a program in Python that adds two numbers together.,"5, 10","def add(x, y): 
    return x + y 
  
x = 5
y = 10

print(add(x, y))","def add(x, y): 
    return x + y ",Incomplete Answer,String Manipulation
Generate a json response from a python method that takes two parameters and returns a dictionary of key-value mappings.,"param1 = 'key1'
param2 = 'value1'","def generate_response(param1, param2):
    # dictionary of key-value mappings
    key_value_mappings = {
        param1: param2
    }

    # create json response
    json_response = json.dumps(key_value_mappings)

    return json_response","def generate_response(param1, param2):
    # dictionary of key-value mappings
    key_value_mappings = {
        param1: param2
    }

    # create json response
    json_response = json.dumps(key_value_mappings)

    return json_response",correct,String Manipulation
Implement a Python program to find all substrings of a given string.,,"def all_substrings(input_string):
 substrings = []
 for i in range(len(input_string)):
  for j in range(i + 1, len(input_string) + 1):
   substring = input_string[i:j]
   substrings.append(substring)
 
 return substrings
 
#example:
all_substrings(""Hello"") # returns ['H', 'He', 'Hel', 'Hell', 'Hello', 'e', 'el', 'ell', 'ello', 'l', 'll', 'llo', 'l', 'lo', 'o']","def all_substrings(input_string):
 substrings = []
 for i in range(len(input_string)):
  for j in range(i + 1, len(input_string) + 1):
   substring = input_string[i:j]
   substrings",Incomplete Answer,Loops
Develop a system in Python for detecting plagiarism.,,"import difflib

def plagiarism_detector(string_a, string_b):
    sequence = difflib.SequenceMatcher(None, string_a, string_b)
    similarity = sequence.ratio() * 100
    print('Similarity = {:.2f}%'.format(similarity))

plagiarism_detector('The quick brown fox', 'The quick brown fox jumps over the lazy dog')","import difflib

def plagiarism_detector(string_a, string_b:
    sequence = difflib.SequenceMatcher(None, string_a, string_b
    similarity = sequence.ratio( * 100
    print('Similarity = {:.2f}%'.format(similarity

plagiarism_detector('The quick brown fox', 'The quick brown fox jumps over the lazy dog'",Syntax Error,Loops
Create a recursive function for generating a Fibonacci sequence in Python.,,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

print(Fibonacci(5)) # Output: 3","def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

print(Fibonacci(5)) # Output: 3",correct,File I/O
Write a python function that determines if a given number is within a given range of numbers,,"def is_in_range(n, start, end):
  if n >= start and n <= end:
    return True
  else:
    return False","def is_in_range(n, start, end):
  if n >= start and",Incomplete Answer,Recursion
Write a function to find maximum of three numbers.,,"def max_of_three(num1,num2,num3): 
    if (num1 >= num2) and (num1 >= num3):
       lnum = num1
    elif (num2 >= num1) and (num2 >= num3):
       lnum = num2
    else:
       lnum = num3
    return lnum","def max_of_three(num1,num2,num3): 
    if (num1 >= num2) and (num1 >= num3):
       lnum = num1
    elif (num2 >= num1) and (num2 >= num3):
       lnum = num2
    else:
       lnum = num3
    return lnum",correct,Recursion
Write a Python program to optimize the following code such that it runs faster.,"xx = [4, -4, 2, -2]
s = 0
for i in xx:
     if i > 0:
         s += i","xx = [4, -4, 2, -2]
s = 0
for i in xx:
    s += max(i, 0)

if __name__ == ""__main__"":
    xx = [4, -4, 2, -2]
    s = 0
    for i in xx:
        s += max(i, 0)
    print(s) # Output: 6","xx = [4, -4, 2, -2]
s = 0
for i in xx:
    s += max(i, 0)

if __name__ == ""__main__"":
    xx = [4, -4, 2, -2]
    s = 0
    for i in xx:
        s += max(i, 0)
    print(s) # Output: 6",correct,Recursion
Implement a function in Python that prints out the contents of a given list with even indices only.,"my_list = [1, 5, 10, 15, 20]","def print_even_indices(my_list):
    for i in range(len(my_list)):
        if i % 2 == 0:
            print(my_list[i])
            
print_even_indices(my_list)","def print_even_indices(my_list:
    for i in range(len(my_list:
        if i % 2 == 0:
            print(my_list[i]
            
print_even_indices(my_list",Syntax Error,String Manipulation
Create a for loop in python to loop through a list of numbers.,"[1, 5, 8]","for num in [1, 5, 8]: 
    print(num)","for num in [1, 5, 8]: 
    print(name, num)",Syntax Error,OOP
Make necessary changes to the given code to make it compatible with Python 3,"# Python 2
print ""Hello World!""","# Python 3
print(""Hello World!"")","# Python 3
print",Incomplete Answer,File I/O
Write a Python program for searching a 2-dimensional array for a target value.,"arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
target = 8","def search(arr, target):
 for row in arr:
  for element in row:
   if element == target:
    return True
 return False

result = search(arr, target)
print(result) # True","def search(arr, target):
 for row in arr:
  for element in row:
   if element == tar",Incomplete Answer,String Manipulation
Generate a Python Regular Expression to match any number greater than 5 and even.,,"import re
pattern = re.compile(r'[6-9]|[2-4][0-9]')","import re
pattern = re.compile(r'[6-9]|[2-4][0-9]')",correct,Recursion
Write a Python program to generate a random string containing lowercase and uppercase letters with a length of 8 characters.,,"import random

def generate_string(length):
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(length))

print(generate_string(8))","import random

def generate_string(length):
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(length))

print(generate_string(8))",correct,File I/O
Generate a function to return the all the vowels from a string in Python.,,"def get_vowels(string):
 vowels = 'aeiou'
 return [char for char in string if char in vowels]","def get_vowels(string):
 vowels = 'aeiou'
 ret",Incomplete Answer,File I/O
Write a Python program to make a prediction using a Support Vector Machine (SVM),"X = [[0, 0], [1, 1]]
y = [0, 1]","import numpy as np
from sklearn import svm

X = np.array([[0, 0], [1, 1]])
y = np.array([0, 1])

clf = svm.SVC(kernel='linear')
clf.fit(X, y)

prediction = clf.predict([[2., 2.]])
print(prediction)","import numpy as np
from sklearn import svm

X = np.array([[0, 0], [1, 1]])
y = np.array([0, 1])

c",Incomplete Answer,String Manipulation
Write a Python program to use a type hint to check if a variable is an instance of a particular class.,,"def check_type(variable, class_name):
    if isinstance(variable, class_name):
        print(""It is an instance of the class"")
    else:
        print(""It is not an instance of the class"")","def check_type(variable, class_name):
    if isinstance(variable, class_name):
        print(""It is an instance of the class"")
    else:
        print(""It is not an instance of the class"")",correct,OOP
Create a Lambda function in Python to return the maximum of three numbers.,,"max_func = lambda a, b, c : max(a,b,c)
print(max_func(3, 12, 7))","max_func = lambda a, b, c : max(",Incomplete Answer,OOP
Develop a function in Python to randomly select one element from a given array.,"[1, 2, 3, 4]","import random

def randomElement(arr):
    return random.choice(arr)","import random

def randomElement(a",Incomplete Answer,Loops
Create a Python program to render a grid of numbers and letters.,,"def print_grid(rows, columns):
 for i in range(rows):
  for j in range(columns):
   print(chr(i*j+65), end=' ')
  print('\n')

print_grid(5,5)

#Output:
A  B  C  D  E  
A  C  E  G  I 
A  F  K  P  U 
A  I  P  W  E 
A  N  U  E  N","def print_grid(rows, columns):
 for i in range(rows):
  for j in range(columns):
   print(chr(i*j+65), end=' ')
 ",Incomplete Answer,Loops
Write a Python program to compute the square of a given number.,5,"def square(num):
    return num ** 2","def square(num:
    return num ** 2",Syntax Error,OOP
Suggest a code optimization to make this python snippet run faster.,"def add_numbers_in_list(l):
    sum = 0
    for i in l:
        sum += i
    return sum","def add_numbers_in_list(l):
    total = 0
    for i in range(0, len(l), 2):
        total += (l[i] + l[i+1]) if (i+1 < len(l)) else l[i]
    return total","def add_numbers_in_list(l):
    total = 0
    for i in range(0, len(l), 2):
        total += (l[i] + l[i+1]) if (i+1 < len(l)) else l[i]
    return total",correct,Recursion
Assemble a Python program to measure similarity,Compute the similarity between two strings.,"def compute_similarity(s1, s2):
    len1 = len(s1)
    len2 = len(s2)
    max_len = max(len1, len2)
    count = 0

    for i in range(max_len):
        if i >= len1 or i >= len2:
            break
        if s1[i] == s2[i]:
            count += 1
    
    return count / max_len","def compute_similarity(s1, s2):
len1 = len(s1)
len2 = len(s2)
max_len = max(len1, len2)
count = 0

for i in range(max_len):
    if i >= len1 or i >= len2:
        break
    if s1[i] == s2[i]:
        count += 1

return count / max_len",Syntax Error,OOP
Write a function to check whether all dictionaries in a list are empty or not.,,"def empty_dit(list1):
 empty_dit=all(not d for d in list1)
 return empty_dit","def empty_dit(list1):
 empty_dit=all(n",Incomplete Answer,OOP
"Create a Python version of the classic ""Hello World!"" program.",,"print(""Hello World!"")","print(""Hello World!""",Syntax Error,File I/O
Create a Python function to sort an array of numbers based on their size.,"[5, 1, 2, 6, 4, 3]","def sort_array(arr):
    arr.sort()
    return arr","def sort_array(arr):
    ",Incomplete Answer,Loops
Write a Python program to detect the most frequently occurring element in a given array.,"array = [1, 3, 1, 4, 5, 3, 4, 3]","from collections import Counter

def most_frequent_element(array):
  return Counter(array).most_common(1)[0][0]
  
# Driver code 
print(most_frequent_element([1, 3, 1, 4, 5, 3, 4, 3]))","from collections import Counter

def most_frequent_element(array):
  return Counter(array).m",Incomplete Answer,File I/O
Write a code in python to remove given character from a given string.,"given_string = ""Hello world!""
character = ""l""","def remove_char(given_string, character):
    new_string =  given_string.replace(character, """")
    return new_string","def remove_char(given_string, character):
    new_string =",Incomplete Answer,File I/O
How would you write a code to flatten a given nested list in Python?,"nested_list = [1, [2, [3, 4], 5], 6]","def flatten_list(nested_list):
    flattened_list = []
    for item in nested_list:
        if type(item) == list:
            flattened_list.extend(flatten_list (item))
        else:
            flattened_list.append(item)
    return flattened_list","def flatten_list(nested_list)
    flattened_list = []
    for item in nested_list
        if type(item) == list
            flattened_list.extend(flatten_list (item))
        else
            flattened_list.append(item)
    return flattened_list",Syntax Error,OOP
"Create a class in Python to represent a car and its properties such as make, model, color, number of wheels etc.",,"class Car():
    #initialize car
    def __init__(self, make, model, color, wheels):
        self.make = make
        self.model = model
        self.color = color
        self.wheels = wheels
    
    #string representation
    def __str__(self):
        return '{}, {}, {}, {}'.format(self.make, self.model, self.color, self.wheels)","class Car():
    #initialize car
    def __init__(self, make, model, color, wheels):
        self.make = make
        self.model = model
        self.color = color
        self.wheels = wheels
    
    #string representation
    def __str__(self):
        return '{}, {}, {}, {}'.format(self.make, self.model, self.color, self.wheels)",correct,Loops
Generate an appropriate Python command to edit the following list such that all the negative numbers are replaced with 0.,"[-1, 5, 9, -8, 2]","def filter_negative(nums):
    return [max(0, n) for n in nums]","def filter_negative(nums):
    ",Incomplete Answer,OOP
Identify the data type of the following input and provide a code to convert it to an integer in Python.,"""123""","input_type = type(""123"") # str

converted_int = int(""123"") # 123","input_type = type(""123"") # str

converted_int = int(""123"") # 123",correct,File I/O
Debug the given Python code.,"def calculate_sum(a, b):
   sum = a + b 
   return 

c = calculate_sum(2, 3)
print(""The sum is"", c)","def calculate_sum(a, b):
   sum = a + b 
   return sum 

c = calculate_sum(2, 3)
print(""The sum is"", c)","def calculate_sum(a, b):
   sum = a + b 
   return ",Incomplete Answer,OOP
Create a Python program to print out the following message and its variables.,Name: John,"name = ""John""

print(""Hello "" + name + ""!"")  # Outputs: ""Hello John!""","name = ""John""

print(""Hello "" + na",Incomplete Answer,String Manipulation
Create a function to return the second largest element in a python list.,,"def second_largest_elem(lst):
    lst.sort()
    return lst[-2]","def second_largest_elem(lst):
    lst.sort()
    return lst[-2]",correct,String Manipulation
Write a Python function that takes an array of integers as input and computes the average of the elements.,"array = [1, 2, 3, 4]","def compute_average(arr):
 sum = 0
 for i in arr:
 sum += i
 return sum / len(arr)
 
 arr = [1, 2, 3, 4]
 avg = compute_average(arr)
 print(""Average of array elements is:"", avg)","def compute_average(arr):
 sum = 0
 for i in arr:
 sum += i
 return sum / len(arr)
 
 ar",Incomplete Answer,Loops
Write a Python function to generate a multiplication table for a given number.,Number: 9,"def generate_table(num):
    # print the table heading
    print(""MULTIPLICATION TABLE FOR {}"".format(num))
    # generate the table
    for i in range(1, 11):
        print(""{} x {} = {}"".format(num, i, num*i))

# generate table for 9
generate_table(9)","def generate_table(num):
    # print the table heading
    print(""MULTIPLICATION TABLE FOR {}"".format(num))
    # generate the table
    for i in range(1, 11):
        print(""{} x {} = {}"".format(num, i, num*i))

# generate table for 9
generate_table(9)",correct,File I/O
Generate a Python script to classify the given data points according to their label.,"data_points = [(2,2),(3,3),(4,4)]
labels = ['x', 'y',]","def classify_data_points(data_points, labels):
    classified_data_points = []
    for data_point in data_points:
        if data_point[0] == data_point[1]:
            classified_data_points.append((data_point, labels[0]))
        else:
            classified_data_points.append((data_point, labels[1]))
    return classified_data_points","def classify_data_points(data_points, labels):
    classified_data_points = []
    for data_point in data_points:
        if data_point[0] == data_point[1]:
            ",Incomplete Answer,Loops
"Create a Python class for a Person, with first name and last name attributes.",,"class Person:
    def __init__(self, first_name, last_name):
        self.first_name = first_name
        self.last_name = last_name

person = Person(""John"", ""Doe"")
print(person.first_name, person.last_name)","class Person:
    def __init__(self, first_name, last_name):
        self.first_name = first_name
     ",Incomplete Answer,File I/O
Generate a valid python code to find the length of string without using built-in functions,,"def length_of_string(string): 
    count = 0
    for char in string: 
        count += 1
    return count","def length_of_string(string) 
    count = 0
    for char in string 
        count += 1
    return count",Syntax Error,OOP
Write a Python program to classify a given set of data into any two classes.,"data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def classify_data(data):
 class_1 = []
 class_2 = []

 for value in data:
 if value % 2 == 0:
 class_1.append(value)
 else:
 class_2.append(value)

 return class_1, class_2","def classify_data(data):
 class_1 = []
 class_2 = []

 for value in data:
 if value % 2 == 0:
 class_1.append(value)
 else:
 class_2.append(value)

 return class_1, class_2",Syntax Error,File I/O
Develop a program in Python to classify the sentiment of a given sentence.,,"from textblob import TextBlob

def sentiment_classifier(sentence):
  sentiment_score = TextBlob(sentence).sentiment.polarity
  if sentiment_score > 0:
    return 'positive'
  elif sentiment_score < 0:
    return 'negative'
  else:
    return 'neutral'","from textblob import TextBlob

def sentiment_classifier(sentence:
  sentiment_score = TextBlob(sentence.sentiment.polarity
  if sentiment_score > 0:
    return 'positive'
  elif sentiment_score < 0:
    return 'negative'
  else:
    return 'neutral'",Syntax Error,Loops
"Create a program in Python to calculate the sum of the first n positive integers, using recursion.",n = 5,"def calculateSum(n):
    if n <= 0:
        return 0
    else:
        return n + calculateSum(n-1)

result = calculateSum(5)
print(result)","def calculateSum(n:
    if n <= 0:
        return 0
    else:
        return n + calculateSum(n-1

result = calculateSum(5
print(result",Syntax Error,Recursion
Generate a Python program that adds a given number to an array.,Number: 5,"def add_to_array(num, array):
  for i in range(len(array)):
    array[i] += num

  return array","def add_to_array(num, array):
  for i in range(len(array)):
    array[i] += num

  return array",correct,String Manipulation
Create a program to search for a substring in a string and return the starting position of the substring.,"String: ""Python is powerful & fun""
Substring: ""pow""","string = ""Python is powerful & fun""
substring = ""pow""
 
start_pos = string.find(substring)
if start_pos == -1:
    print(""substring not found"")
else:
    print(""substring found at position:"", start_pos)","string = ""Python is powerful & fun""
substring = ""pow""
 
start_pos = string.find(substring
if start_pos == -1:
    print(""substring not found""
else:
    print(""substring found at position:"", start_pos",Syntax Error,Loops
Create a Python script to send an email.,,"import smtplib

def send_email(sender, recipient, subject, message):
    # set up the audience and message
    message = """"""\

From: %s
To: %s
Subject: %s

%s
"""""" % (sender, recipient, subject, message)

    # set up the SMTP connection and send the message
    session = smtplib.SMTP('smtp.example.com', 25)
    session.login(""sender_username"", ""sender_password"")
    session.sendmail(sender, recipient, message)
    session.quit()","import smtplib

def send_email(sender, recipient, subject, message):
    # set up the audience and message
    message = """"""\

From: %s
To: %s
Subject: %s

%s
"""""" % (sender, recipient, subject, message)

    # set up the SMTP connection and send the message
    session = smtplib.SMTP('smtp.example.com', 25)
    session.login(""sender_username"", ""sender_password"")
    session.sendmail(sender, recipient, message)
    session.quit()",Syntax Error,File I/O
"Create a python class called Student that can store students' information, such as name, gender, and age.",,"class Student():
    def __init__(self, name, gender, age):
        self.name = name
        self.gender = gender
        self.age = age

    def get_name(self):
        return self.name

    def get_gender(self):
        return self.gender

    def get_age(self):
        return self.age","class Student():
def __init__(self, name, gender, age):
    self.name = name
    self.gender = gender
    self.age = age

def get_name(self):
    return self.name

def get_gender(self):
    return self.gender

def get_age(self):
    return self.age",Syntax Error,Loops
Create a function in Python that takes a list of numbers as an argument and prints the highest value in the list.,"[13, 6, 8, -2, 20]","def get_largest(nums):
    largest = nums[0]
    for num in nums[1:]:
        if num > largest:
            largest = num
    return largest

print(get_largest([13, 6, 8, -2, 20]))","def get_largest(nums):
    largest = nums[0]
    for num in nums[1:]:
        if num > largest:
            largest = num
    return largest

print(get_largest([13, 6, 8, -2, 20]))",correct,OOP
Write a function in Python to return the kth smallest element in the given array.,"arr = [7, 10, 4, 3, 20, 15]
k=3","def find_kth_smallest(arr, k):
    """"""
    This function finds the kth smallest element in an array. 
    :param arr: array of integers
    :param k: integer
    :return: kth smallest element
    """"""
    sorted_arr = sorted(arr)
    return sorted_arr[k-1]","def find_kth_smallest(arr, k)
    """"""
    This function finds the kth smallest element in an array. 
    param arr array of integers
    param k integer
    return kth smallest element
    """"""
    sorted_arr = sorted(arr)
    return sorted_arr[k-1]",Syntax Error,String Manipulation
Design a program in Python to find the largest of three numbers.,"2, 5, 7","def getMax(a,b,c):
    if a > b and a > c:
        return a
    elif b > a and b > c:
        return b
    else:
        return c

print(getMax(2, 5, 7))","def getMax(a,b,c):
    if a > b and a > c:
        return a
    elif b > a and b > c:
        return b
    else:
        return c

print(getMax(2, 5, 7))",correct,Recursion
Generate a Python program to search an array of strings and return the string that contains a given substring.,"array = [""apple"", ""banana"", ""pear"", ""kiwi""]
query = ""ana""","def searchArray(array, query):
    results = []
    for string in array:
        if query in string:
            results.append(string)
    return results

array = [""apple"", ""banana"", ""pear"", ""kiwi""]
query = ""ana""

print(searchArray(array, query))","def searchArray(array, query):
    results = []
    for string in array:
        if query in string:
            results.ap",Incomplete Answer,Recursion
Write a function in Python which takes a question string and returns the answer.,What is the capital of China?,"def answer_question(question):
    if question == 'What is the capital of China?':
        return 'Beijing'
    else:
        return 'I don\'t know'","def answer_question(question)
    if question == 'What is the capital of China?'
        return 'Beijing'
    else
        return 'I don\'t know'",Syntax Error,Loops
"Given a sentence, generate a dictionary with the most frequently used words.","""Python is an interpreted, high-level, general-purpose programming language.""","freq_words_dict = {
    'python': 2,
    'is': 1,
    'an': 1,
    'interpreted': 1,
    'high-level': 1,
    'general-purpose': 1,
    'programming': 1,
    'language': 1
}","freq_words_dict = {
    'python': 2,
    'is': 1,
    'an': 1,
    'interpreted': 1,
    'high-level': 1,
    'general-purpose': 1,
    'programming': 1,
    'language': 1
}",correct,OOP
Create a function that concatenates two lists in Python.,,"def concatenate_lists(list1, list2):
    return list1 + list2","def concatenate_lists(list1, l",Incomplete Answer,Loops
Create a Python program that computes the median of an array of numbers.,"[5, 4, 3, 2, 1]","def median(array):
    sorted_array = sorted(array)
    length = len(sorted_array)
    if (length % 2 == 0):
        median = (sorted_array[length//2] + sorted_array[length//2 - 1]) / 2
    else:
        median = sorted_array[length//2]

    return median

array = [5, 4, 3, 2, 1]
print(median(array))  # Output: 3","def median(array):
    sorted_array = sorted(array)
    length = len(sorted_array)
    if (length % 2 == 0):
        median = (sorted_array[length//2] + sort",Incomplete Answer,OOP
Design an algorithm in Python that sorts an unordered array of numbers from low to high.,"[2, 5, 1, 8, 7, 4]","def sort(arr): 
  for i in range(len(arr)): 
    minIdx = i 
    for j in range(i+1, len(arr)): 
      if arr[minIdx] > arr[j]: 
        minIdx = j       
    arr[i], arr[minIdx] = arr[minIdx], arr[i]
  return arr","def sort(arr): 
  for i in range(len(arr)): 
minIdx = i 
for j in range(i+1, len(arr)): 
  if arr[minIdx] > arr[j]: 
    minIdx = j       
arr[i], arr[minIdx] = arr[minIdx], arr[i]
  return arr",Syntax Error,Recursion
Can you write a program in Python to remove the duplicate elements in a list?,"[5, 9, 2, 4, 5, 9, 2]","def remove_duplicates(arr):
    new_arr = []
    for item in arr:
        if item not in new_arr:
            new_arr.append(item)
    return new_arr

my_list = [5, 9, 2, 4, 5, 9, 2]
print(remove_duplicates(my_list))
# Output: [5, 9, 2, 4]","def remove_duplicates(arr):
    new_arr = []
    for item in arr:
        if item not in new_arr:
            new_arr.append(item)
    return new_arr

my_list = [5, 9, 2, 4, 5, 9, 2]
print(remove_duplicates(my_list))
# Output: [5, 9, 2, 4]",correct,String Manipulation
Generate an efficient python code which finds the most frequent element in an array.,"arr = [3, 2, 1, 3, 4, 2]","# Find the most frequent element in the array
most_freq = 0
count = 0

for x in arr:
    freq = arr.count(x)
    if freq > count:
        most_freq = x
        count = freq

# Print the most frequent element
print(""Most frequent element:"",most_freq)","# Find the most frequent element in the array
most_freq = 0
count = 0

for x in arr:
    freq = arr.count(x)
    if freq > count:
        most_freq = x
        count = freq

# Print the most frequent element
print(""Most frequent element:"",most_freq)",correct,Recursion
Develop a Python code for computing the length of a string.,,"def get_length(string):
    length = 0
    for char in string:
        length += 1
    return length","def get_length(string):
    length = 0
    for cha",Incomplete Answer,Loops
How would you convert the following pseudocode into python?,"IF A > B {
 PRINT “A is greater than B”
} ELSE {
 PRINT “B is greater than A”
}","if A > B:
    print(""A is greater than B"")
else:
    print(""B is greater than A"")","if A > B:
    print(""A is greater than B"")
else:
    print(""B is greater than A"")",correct,String Manipulation
Create a text tokenizer using regular expression in Python.,,"import re
 
def tokenizeText(text):
    tokens = re.findall(r'\w+', text)
    return tokens","import re
 
def tokenizeText(text):
    token",Incomplete Answer,Loops
Write a function to find all pairs in an integer array whose sum is equal to a given number.,,"def get_pairs_count(arr, n, sum):
    count = 0 
    for i in range(0, n):
        for j in range(i + 1, n):
            if arr[i] + arr[j] == sum:
                count += 1
    return count","def get_pairs_count(arr, n, sum):
    count = 0 
    for i in range(0, n):
        for j in range(i + 1, n):
            if arr[i] + arr[j] == sum:
                count += 1
    return count",correct,OOP
Design a Python program to print out the list of prime numbers up to the input value.,25,"def printPrimeNum(n): 
  
    prime_list = [] 
   
    for num in range(2, n + 1): 
        prime = True
        for i in range(2, num): 
            if (num % i == 0): 
                prime = False
        if prime:
            prime_list.append(num) 
              
    print(prime_list)
  
  
num = 25 
printPrimeNum(num)","def printPrimeNum(n): 
  
    prime_list = [] 
   
    for num in range(2, n + 1): 
        prime = True
        for i in range(2, num): 
            if (num % i ",Incomplete Answer,String Manipulation
Create a function in Python to remove all non-alphanumeric characters in a string.,,"import re

def remove_non_alphanum(str):
 return re.sub(r'[^\w]', '', str)","import re

def remove_non_alphanum(str):
 return re.sub(r'[^\w]', '', str)",Syntax Error,Loops
Implement a Python program that takes an input string and returns the first character that appears more than once in that string.,"input_string = ""programming""","def find_duplicate_char(input_string):
 char_count = {}
 for char in input_string:
  if char in char_count:
   return char
  else:
   char_count[char] = 1
 return 'No duplicates found'

input_string = ""programming""
print(find_duplicate_char(input_string))

# Output:
# 'r'","def find_duplicate_char(input_string):
 char_count = {}
 for char in input_string:
  if char in char_count:
   return char
  else:
   ch",Incomplete Answer,OOP
Create a function for checking if a string is palindrome using Python.,,"def is_palindrome(text):
    reverse = text[::-1] # reverse the string
    return text == reverse","def is_palindrome(text):
    reverse = text[::-1] # reverse the string
    return text == reverse",Syntax Error,OOP
Generate a python program that matches regular expression pattern.,"pattern = ""\d+""
text = ""I have 3 cats and 5 dogs""","import re

def regex_match(pattern, text):
    regex = re.compile(pattern)
    matches = regex.findall(text)
    return matches","import re

def regex_match(pattern, text):
    regex = re.compi",Incomplete Answer,Loops
Create a python program to test if a number is even or odd.,,"def is_even(num):
    if num%2==0:
        return True
    else:
        return False","def is_even(num):
    if num%2==0:
       ",Incomplete Answer,OOP
Implement a sorting algorithm in Python.,"list of integer numbers: [98, 86, 100, 5, 34, 22]","def bubble_sort(items):
    for pass_num in range(len(items) - 1, 0, -1):
        for idx in range(pass_num):
            if items[idx] > items[idx + 1]:
                items[idx], items[idx + 1] = items[idx + 1], items[idx]

numbers = [98, 86, 100, 5, 34, 22]
bubble_sort(numbers)

print(numbers)","def bubble_sort(items):
    for pass_num in range(len(items) - 1, 0, -1):
        for idx in range(pass_num):
            if items[idx] > items[idx + 1]:
                items[idx], items[idx + 1] = items[idx + 1], items[idx]

numbers = [98, 86, 100, 5, 34, 22]
bubble_sort(numbers)

print(numbers)",correct,OOP
Compose a function in Python to take two numbers as input and return the greatest number.,5 and 8,"def getGreatestNumber(a, b):
    if a > b:
        return a
    return b

greatest_num = getGreatestNumber(5, 8)
print(""Greatest number is"", greatest_num)","def getGreatestNumber(a, b):
    if a > b:
        return a
    return b

greatest_num = getGreatestNumber(5, 8)
print(""Greatest number is"", greatest_num)",correct,OOP
Write a python script to generates random numbers between 0 and 9 that are divisible by 3.,,"def generate_random_divisible_number():
    import random
    while True:
        # Generate a random number
        process = random.randint(0, 9)
        # Check if the number is divisible by 3
        if process % 3 == 0:
            # If it is divisible, return it
            return process","def generate_random_divisible_number()
    import random
    while True
        # Generate a random number
        process = random.randint(0, 9)
        # Check if the number is divisible by 3
        if process % 3 == 0
            # If it is divisible, return it
            return process",Syntax Error,String Manipulation
Generate a Python program that takes one string argument and prints it to the console.,,"import sys

if __name__ == ""__main__"":
    arg = sys.argv[1]
    print(arg)","import sys

if __name__ == ""__main__""",Incomplete Answer,String Manipulation
"Generate a list of strings in Python containing all possible combinations of letters ""a"" and ""b"", with the length of each string being 5.",,"import itertools

words = [''.join(i) for i in itertools.product('ab', repeat = 5)]
print(words)","import itertools

words = [''.join(i) for i in itertools.product('ab', repeat = 5)]
pritn(words)",Syntax Error,String Manipulation
Write a Python program to print the key of the element in a dictionary that has the maximum value.,"{'a': 3, 'b': 6, 'c': 9, 'd': 12}","dictionary = {'a': 3, 'b': 6, 'c': 9, 'd': 12}

max_value = max(dictionary.values())
for key, value in dictionary.items():
 if value == max_value:
 print(key)","dictionary = {'a': 3, 'b': 6, 'c': 9, 'd': 12}

max_value = max(dictionary.values())
for key, value in dictionary.items():
 if value == max_value:
 print(key)",correct,String Manipulation
Develop a natural language processing (NLP) model in Python that takes a sentence as an input and returns the subject and predicate of the sentence.,The cat is happy.,"def parse_sentence(sentence):
 tokens = nltk.word_tokenize(sentence)
 tagged_tokens = nltk.pos_tag(tokens)
 subject = None
 predicate = None
 for token, tag in tagged_tokens:
 if tag == 'NN':
 subject = token
 elif tag == 'VBP':
 predicate = token
 return subject, predicate","def parse_sentence(sentence):
 tokens = nltk.word_tokenize(sentence)
 tagged_tokens = nltk.pos_tag(tokens)
 subject = None
 predicate = None
 for token, tag in tagged_tokens:
 if tag == 'NN':
 subject = token
 elif tag == 'VBP':
 predicate = token
 return subject, predicate",Syntax Error,OOP
Create a website using the Django web framework.,,"# create a new Django project
$ django-admin startproject mysite

# create a new application 
$ python manage.py startapp myapp

# add the new application in INSTALLED_APPS in the settings.py file 
INSTALLED_APPS = [ 
    'myapp',
    ...
]

# define the urls in urls.py file 
urlpatterns = [ 
    path('', myapp.views.index, name='index'), 
    ...
]","# create a new Django project
$ django-admin startproject mysite

# create a new application 
$ python manage.py startapp myapp

# add the new application in INSTALLED_APPS in the settings.py file 
INSTALLED_APPS = [ 
    'myapp',
    ...
]

# define the urls in urls.py file 
urlpatterns = [ 
    path('', myapp.views.index, name='index'), 
    ...
]",correct,OOP
Write a function in Python that takes an array of integers as an input and returns an array with only the distinct numbers from the input.,"[1, 2, 3, 4, 4, 5, 5]","def distinct_numbers(arr):
 return list(set(arr))","def distinct_numbers(arr):
 return list(set(arr))",Syntax Error,Recursion
Create a python function that reads comma-separated values to generate a dataframe.,"Name, Age, City
Jane, 36, London
John, 24, Paris","def csv_to_df(csv):
    # Create an empty list
    df = []

    # Add each row as a list
    lines = csv.split(""\n"")
    for line in lines:
        df.append(line.split("",""))

    # Convert list into a DataFrame
    import pandas as pd
    df = pd.DataFrame(df[1:], columns=df[0])
    return df","def csv_to_df(csv):
    # Create an empty list
    df = []

    # Add each row as a list
    lines = csv.split(""\n"")
    for line in lines:
       ",Incomplete Answer,String Manipulation
Write a basic HTML parser in Python that extracts the data from a given webpage.,,"import requests
from bs4 import BeautifulSoup
 
URL = 'http://example.com'
 
page = requests.get(URL)
soup = BeautifulSoup(page.content, 'html.parser')
 
# find all links
links = soup.find_all('a')
for link in links:
    print(link.get('href'))
 
# find all text
texts = soup.find_all('p')
for text in texts:
    print(text.get_text())","import requests
from bs4 import BeautifulSoup
 
URL = 'http://example.com'
 
page = requests.get(URL)
soup = BeautifulSoup(page.content, 'html.parser')
 
# find all links
links = soup.find_all('a')
for link in links:
    print(link.get('href'))
 
# find all text
texts = soup.find_all('p')
for text in texts:
    print(text.get_text())",correct,File I/O
"Generate a program in Python to remove all vowels from a sentence, and print the resulting string to the console.",This is a sentence,"def remove_vowels(word):
    new_word = """"
    for i in word:
        if i not in ""aeiouAEIOU"":
            new_word += i
    return new_word

sentence = ""This is a sentence""
print(remove_vowels(sentence))","def remove_vowels(word):
    new_word = """"
    for i in word:
        if i not in ""aeiouAEIOU"":
      ",Incomplete Answer,String Manipulation
Create a Python class to manage a shopping cart.,,"class ShoppingCart:
    def __init__(self):
        self.cart = [] 
  
    def add_item(self, item):
        self.cart.append(item)
  
    def remove_item(self, item):
        self.cart.remove(item)
  
    def get_total(self):
        total = 0
        for item in self.cart:
            total += item.price
        return total","class ShoppingCart:
    def __init__(self):
        self.cart = [] 
  
    def add_item(self, item):
        self.cart.append(item)
  
    def remove_item(self, item):
        self.cart.remove(item)
  
    def get_total(self):
        total = 0
        for item in self.cart:
            total += item.price
        return total",correct,Recursion
Write a Python script which can remove all the punctuation characters from a text.,,"import string

def remove_punctuation(text):
    #convert punctuation chars into a string
    punctuation_chars = ''.join(string.punctuation)
    
    #iterate through input text and replace punctuation chars with an empty string
    for char in punctuation_chars:
        if char in text:
            text = text.replace(char, '')
    
    return text","import string

def remove_punctuation(text):
    #convert punctuation chars into a string
    punctuation_chars = ''.join(string.punctuation)
    
    #iterate through input te",Incomplete Answer,String Manipulation
Develop a Python program to calculate the largest sum of a consecutive sequence of n numbers given in an array.,"array = [1, 2, -5, 4, 5, 7, -8]","def max_consecutive_sum(array):
    max_val = 0
    cur_man = 0
    for x in array:
        cur_man = max(cur_man + x, 0)
        max_val = max(cur_man, max_val)
    return max_val","def max_consecutive_sum(array):
    max_val = 0
    cur_man = 0
    for x in array:
        cur_man = max(cur_man + x, 0)
        max_val = max(cur_man, max_val)
    return max_val",correct,Loops
Compress a given folder using GZip in Python.,folder /files,"import gzip 
import shutil 

# Source files to compress 
source = '/files'
  
# Destination to store compressed files 
destination = '/files/compressed'
  
# set the compression level 
compression_level = 3

shutil.make_archive(destination, 'gz', source, compression_level)","import gzip 
import shutil 

# Source files to compress 
source = '/files'
  
# Destination to store compressed files 
destination = '/f",Incomplete Answer,String Manipulation
Write a code to remove a specific value from a list in Python.,"mylist = [10, 20, 30, 40, 10]
value = 10","mylist = [10, 20, 30, 40, 10]
value_to_remove = 10

# new list after value is removed
new_list = [item for item in mylist if item != value_to_remove] 

print(new_list)","mylist = [10, 20, 30, 40, 10]
value_to_remove = 10

# new list after value is removed
new_list = [item for item in mylist if item != value_to_remove] 

print(new_list)",correct,OOP
Develop a Python function to compare two given dictionaries.,"d1 = {'a':1, 'b':2}
d2 = {'a':2, 'b':1}","def compare_dictionaries(d1, d2):
  for key in d1:
    if key not in d2 or d1[key] != d2[key]: 
      return False
  return True","def compare_dictionaries(d1, d2):
  for key in d1:
    if key no",Incomplete Answer,File I/O
Optimize the following code snippet for accessing an element in a Python list.,"my_list = [1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

if len(my_list) > 0:
  element = my_list[0]
else:
  element = None","my_list = [1, 2, 3, 4, 5]

if len(my_list) > 0
  element = my_list[0]
else
  element = None",Syntax Error,String Manipulation
Develop a program in Python for printing an asterisk triangle consisting of n rows.,5,"def asterisk_triangle(n):
    for i in range(n):
        for j in range(i+1):
            print('*', end="" "")
        print()

n = 5
asterisk_triangle(n)","def asterisk_triangle(n):
    for i in range(n):
        for j in range(i+1)",Incomplete Answer,Loops
Produce a python program that calculates the prime factors of a given positive integer.,,"def prime_factors(num):
    """"""Returns the prime factors of a given positive integer.
    
    Args:
        num (int): Positive integer.
        
    Returns:
        list: List of prime factors.
    """"""
    factors = []
    d = 2
    while num > 1:
        while num % d == 0:
            factors.append(d)
            num /= d
        d += 1
    return factors","def prime_factors(num):
    """"""Returns the prime factors of a given positive integer.
    
    Args:
        num (int): Positive integer.
        
    Returns:
        list: List of prime factors.
    """"""
    factors = []
    d = 2
    while num > 1:
        while num % d == 0:
            factors.append(d)
            num /= d
        d += 1
    return factors",Syntax Error,String Manipulation
Write a python program to round a float value to the next decimal place.,,"def round_up(value):
    """"""Rounds up a number to the next decimal.""""""
    return int(value * 10) / 10","def round_up(value):
    """"""Rounds up a number to the next decimal.""""""
    return int(value * 10) / 10",correct,OOP
Generate a python program to check the sum of two numbers and determine if they are equal or not.,Compare a = 4 and b = 6,"def compare_sum(a, b):
  if a + b == 10:
    return True
  else:
    return False","def compare_sum(a, b):
  if a + b == 10:",Incomplete Answer,OOP
Write a Python program to add two numbers taken as input from the user.,,"# get two numbers from the user
num1 = float(input(""Enter first number: ""))
num2 = float(input(""Enter second number: ""))

# calculate the result
result = num1 + num2

# display the result
print(""The sum of {0} and {1} is {2}"".format(num1, num2, result))","# get two numbers from the user
num1 = float(input(""Enter first number: ""))
num2 = float(input(""Enter second number: ""))

# ca",Incomplete Answer,Loops
Write a Python program to calculate the simple interest on a loan of $1000 over 10 years at an interest rate of 5%.,,"loan_amount = 1000
interest_rate = 5
number_of_years = 10

simple_interest = loan_amount * (interest_rate/100) * number_of_years

print(""Simple interest = %.2f"" %simple_interest)","loan_amount = 1000
interest_rate = 5
number_of_years = 10

simple_interest = loan_amount * (interest_rate/100) * number_of_years

print(""Simple interest = %.2f"" %simple_interest)",Syntax Error,String Manipulation
Build a function in Python to test whether a string is a palindrome.,"""aba""","def is_palindrome(s): 
    # Reverse the string 
    rev = s[::-1] 
  
    # Check if the string is equal to its reverse 
    if (s == rev): 
        return True
    return False
  
# Driver code 
s = ""aba""
ans = is_palindrome(s) 
  
if ans == 1: 
    print(""Yes"") 
else: 
    print(""No"")","def is_palindrome(s): 
    # Reverse the string 
    rev = s[::-1] 
  
    # Check if the string is equal to its reverse 
    if (s == rev): 
        return True
    return False
  
# Driver code 
s = ""aba""
ans = is_palindrome(s) 
  
if ans == 1: 
    print(""Yes"") 
else: 
    print(""No"")",correct,Recursion
Generate code in Python to find the factorial of a given number.,,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n*factorial(n-1)","def factorial(n):
    if n == 0:
        return 1
    else:
        return n*factorial(n-1)",Syntax Error,String Manipulation
Create a lambda expression in Python that takes two arguments and returns their product.,,"product = lambda x, y: x * y","product = lambda x, y: x * y",correct,OOP
Write a Python program to detect out-of-range values in a given column of a data set.,"column = ""Salary""
dataset = {
 ""John"": {""Salary"": 75000, ""Age"": 30},
 ""Sam"": {""Salary"": 90000, ""Age"": 45},
 ""Jill"": {""Salary"": 120000, ""Age"": 25},
 ""Thomas"": {""Salary"": 80000, ""Age"": 40}
}","for row in dataset.values():
 salary = row['Salary']
 if salary < 40000 or salary > 100000:
 print(""Out-of-range value: {}"".format(salary))","for row in dataset.values():
 salary = row['Salary']
 if salary < 400",Incomplete Answer,Recursion
Create a Python script for implementing a linear search in an array of integers.,,"def linear_search(arr, key): 
    n = len(arr) 
  
    for i in range(0, n): 
        if arr[i] == key: 
            return i
    return -1","def linear_search(arr, key): 
    n = len(arr) 
  
    for i in range(0, n): 
        if arr[i] == key: 
            return i
    return -1",correct,Recursion
Write a function to find sequences of lowercase letters joined with an underscore.,,"import re
def text_lowercase_underscore(text):
        patterns = '^[a-z]+_[a-z]+$'
        if re.search(patterns,  text):
                return 'Found a match!'
        else:
                return('Not matched!')","import re
def text_lowercase_underscore(text):
        patterns = '^[a-z]+_[a-z]+$'
        if re.search(patterns,  text):
                return 'Found a match!'
        else:
                return('Not matched!')",Syntax Error,OOP
Generate a Python function to convert a given sentence into a list of words.,"Convert ""This is a sentence""","def split_sentence(sentence):
    return sentence.split("" "")

sentence = ""This is a sentence""

words = split_sentence(sentence)
print(words)","def split_sentence(sentence):
    return sentence.split("" "")

sentence",Incomplete Answer,File I/O
Write a python function to toggle only first and last bits of a given number.,,"def take_L_and_F_set_bits(n) : 
    n = n | n >> 1
    n = n | n >> 2
    n = n | n >> 4
    n = n | n >> 8
    n = n | n >> 16 
    return ((n + 1) >> 1) + 1      
def toggle_F_and_L_bits(n) :  
    if (n == 1) : 
        return 0 
    return n ^ take_L_and_F_set_bits(n) ","def take_L_and_F_set_bits(n) : 
    n = n | n >> 1
    n = n | n >> 2
    n = n | n >> 4
    n = n | n >> 8
    n = n | n >> 16 
    re",Incomplete Answer,Loops
Design a REST-API in Python using Flask that displays the current date and time when a GET request is sent.,,"from flask import Flask, jsonify
from datetime import datetime

app = Flask(__name__)

@app.route('/time', methods=['GET'])
def time():
  time = {
    'time': datetime.now()
  }
  return jsonify(time)

if __name__ == '__main__':
  app.run()","from flask import Flask, jsonify
from datetime import datetime

app = Flask(__name__)

@app.route('/time', methods=['GET",Incomplete Answer,OOP
Create a machine learning model using Python and Scikit-Learn that can classify emails as either spam or ham.,CSV file containing features extracted from Spam and Ham emails.,Machine learning model using Python and Scikit-Learn that can classify emails as either spam or ham.,Machine learning model using Python and Scikit-Learn that can classify emails as either spam or ham.,correct,String Manipulation
Implement a K-Means clustering algorithm in Python to cluster the given set of points into three clusters.,"dataset = [[2, 4], [5, 8], [3, 7], [9, 2], [7, 1]]","import numpy as np 
from sklearn.cluster import KMeans 

dataset = [[2, 4], [5, 8], [3, 7], [9, 2], [7, 1]]

X = np.array(dataset) 

kmeans = KMeans(n_clusters=3, random_state=0).fit(X)

labels = kmeans.labels_

for i in range(len(X)):
 print(""datapoint:"", X[i], ""belongs to cluster"", labels[i])","import numpy as np 
from sklearn.cluster import KMeans 

dataset = [[2, 4], [5, 8], [3, 7], [9, 2], [7, 1]]

X = np.array(dataset) 

kmeans = KMean",Incomplete Answer,Recursion
Design a Python algorithm to compute the total number of inversions in an array of integers.,"[2, 4, 1, 3, 5]","def count_inversions(arr): 
  inversion_count = 0  
  for i in range(len(arr)): 
    for j in range(i + 1, len(arr)): 
        if arr[i] > arr[j]: 
            inversion_count += 1
  
  return inversion_count","def count_inversions(arr): 
  inversion_count = 0  
  for i in range(len(arr)): 
    for j in range(i + 1, len(arr)): 
        if arr[i] > arr[j]: 
            inversion_count += 1
  
  return inversion_count",Syntax Error,Recursion
Write a Python function to calculate the difference between two dates in days.,"(11/22/2016, 12/30/2016)","def days_difference(date1, date2): 
    from datetime import datetime 
    difference = datetime.strptime(date1, '%m/%d/%Y') - datetime.strptime(date2, '%m/%d/%Y') 
    return abs(difference.days)","def days_difference(date1, date2) 
    from datetime import datetime 
    difference = datetime.strptime(date1, '%m/%d/%Y') - datetime.strptime(date2, '%m/%d/%Y') 
    return abs(difference.days)",Syntax Error,OOP
Perform automatic code refactoring on a python program that calculates the factorial of a given number.,"def factorial(num):
 if num < 0:
  return ""Error: Must be a positive integer""
 elif num <= 1:
  return 1
 else:
  return num * factorial(num-1)","def factorial(num: int):
 if num < 0:
  return ""Error: Must be a positive integer""
 elif num <= 1:
  return 1
 else:
  return num * factorial(num-1)","def factorial(num: int):
 if num < 0:
  return ""Error: Must be a positive ",Incomplete Answer,Recursion
Build a function in Python to fetch records from a MongoDB database.,"host = ""hostname""
port = ""27017""
database_name = ""dbname""
collection_name = ""users""","import pymongo

def fetchRecords(host, port, database_name, collection_name):
    client = pymongo.MongoClient(host, int(port))
    db = client[database_name]
    collection = db[ collection_name ]
    records = collection.find({})
    return records","import pymongo

def fetchRecords(host, port, database_name, collection_name):
    client = pymongo.MongoClient(host, int(port",Incomplete Answer,File I/O
Create a Python function to filter a dictionary that contains strings only.,"{'name': 'John', 'age': 20, 'likes': ['apple', 'banana']}","def filterStringDict(input):
    result = {}
    for key, value in input.items():
        # Check if value is a string
        if isinstance(value, str):
            # Add to result
            result[key] = value
    return result","def filterStringDict(input):
    result = {}
    for key, value in input.items():
        # Check if value is a string
        if isinstance(value, str):
            # Add to result
            result[key] = value
    return result",correct,File I/O
Create a program using Python to classify the type of company an advertising company can be.,"The advertising company can be classified into the following types: Automotive, Food & Beverage, Finance, Technology, and Others.","def classify_company(company):
 if company in [""AUTOMOTIVE"", ""FOOD & BEVERAGE"", ""FINANCE"", ""TECHNOLOGY""]:
 return company
 else:
 return ""OTHER""","def classify_company(company):
 if company in [""AUTOMOTIVE"", ""FOOD & BEV",Incomplete Answer,Loops
Program a Python function to calculate the average of a list of integers.,"[1, 3, 5, 3, 7, 1]","def avg_list(lst): 
  sum_lst = 0
  for i in range(len(lst)): 
    sum_lst = sum_lst + lst[i] 
  return sum_lst/len(lst) 
  
print(avg_list([1, 3, 5, 3, 7, 1]))","def avg_list(lst): 
  sum_lst = 0
  for i in range(len(lst)): 
    sum_lst = sum_lst + lst[i] 
  return sum_lst/len(lst) 
  
print(avg_list([1, 3, 5, 3, 7, 1]))",correct,File I/O
Create a Python script to extract email addresses from an input text and save them in an array.,,"import re

text = ""Some text here with an email example@test.com and another test@example.com""

matches = re.findall(r'[\w\.-]+@[\w\.-]+\.\w+', text)

print(matches)
# Output: ['example@test.com', 'test@example.com']","import re

text = ""Some text here with an email example@test.com and another test@example.com""

matches = re",Incomplete Answer,String Manipulation
"Create a Python script that reads an integer, n, from the user and prints out the value of n factorial.",8,"# Get input from the user
n = int(input(""Enter a number: ""))

# Calculate the factorial of the number
factorial = 1
while n > 1:
    factorial *= n
    n -= 1

# Print out the result
print(""The factorial of the given number is:"", factorial)","# Get input from the user
n = int(input(""Enter a number: ""))

# Calculate the factorial of the number
factorial = 1
whil",Incomplete Answer,File I/O
Write a python program to find the maximum value in the given list of numbers.,"[-2, 6, 8, -10]","def find_max(nums):
    max_val = nums[0]
    for num in nums[1:]:
        if num > max_val:
            max_val = num
    return max_val","def find_max(nums):
    max_val = nums[0]
    for num in nums[1:]:
 ",Incomplete Answer,File I/O
Write a function to find the largest subset where each pair is divisible.,,"def largest_subset(a, n):
	dp = [0 for i in range(n)]
	dp[n - 1] = 1; 
	for i in range(n - 2, -1, -1):
		mxm = 0;
		for j in range(i + 1, n):
			if a[j] % a[i] == 0 or a[i] % a[j] == 0:
				mxm = max(mxm, dp[j])
		dp[i] = 1 + mxm
	return max(dp)","def largest_subset(a, n):
	dp = [0 for i in range(n)]
	dp[n - 1] = 1; 
	for i in range(n - 2, -1, -1):
		mxm = 0;
		for j in range(i + 1, n):
			if a[j] % a[i] == 0 or a[i] % a[j] == 0:
				mxm = max(mxm, dp[j])
		dp[i] = 1 + mxm
	return max(dp)",Syntax Error,String Manipulation
Write a function to count the element frequency in the mixed nested tuple.,,"def flatten(test_tuple): 
	for tup in test_tuple: 
		if isinstance(tup, tuple): 
			yield from flatten(tup) 
		else: 
			yield tup 
def count_element_freq(test_tuple):
  res = {}
  for ele in flatten(test_tuple):
    if ele not in res:
      res[ele] = 0
    res[ele] += 1
  return (res) ","def flatten(test_tuple) 
	for tup in test_tuple 
		if isinstance(tup, tuple) 
			yield from flatten(tup) 
		else 
			yield tup 
def count_element_freq(test_tuple)
  res = {}
  for ele in flatten(test_tuple)
    if ele not in res
      res[ele] = 0
    res[ele] += 1
  return (res) ",Syntax Error,Loops
Write a Python program to insert a given string at the beginning of all items in a list.,"mylist=[""one"",""two"",""three""]","# Insert the given string at the beginning of all list items 
new_list = [""prefix_"" + item for item in mylist]

# Print the new list 
print(new_list) # Output: [""prefix_one"", ""prefix_two"", ""prefix_three""]","# Insert the given string at the beginning of all list items 
new_list = [""prefix_"" + item for item in",Incomplete Answer,String Manipulation
Write a Python code snippet to flatten the given list.,"my_list = [2, 3, [4, 5, [6]], [7, 8]]","my_list = [2, 3, [4, 5, [6]], [7, 8]]
new_list = []
def flatten(lst):
    for item in lst:
        if isinstance(item, list):
            flatten(item)
        else:
            new_list.append(item)

flatten(my_list)
print(new_list)","my_list = [2, 3, [4, 5, [6]], [7, 8]]
new_list = []
def flatten(lst:
    for item in lst:
        if isinstance(item, list:
            flatten(item
        else:
            new_list.append(item

flatten(my_list
print(new_list",Syntax Error,Loops
Generate a function in Python for finding the maximum value in a list of numbers with time complexity O(n).,"num_list = [3, 7, 4, 2, 8, 16, 1, 9, 10]","def max_val(num_list):
	if len(num_list) == 0:
		return None
	
	max_num = num_list[0]
	
	for num in num_list:
		if num > max_num:
			max_num = num
	
	return max_num","def max_val(num_list):
	if len(num_list) == 0:
		return None
	
	max_num = num_list[0]
	
	for num in num_list:
		if num > max_num:
			max_num = num
	
	return max_num",correct,File I/O
Create a Python class called Student that contains attributes for a students name and grade.,,"class Student:
    def __init__(self, name, grade):
        self.name = name
        self.grade = grade","class Student:
    def __init__(self, name, grade):",Incomplete Answer,String Manipulation
Create a program in Python that takes a list of words and an integer n and returns a list of words that appear at least n times in the given list.,"words =['a', 'b', 'a', 'c', 'd', 'a', 'x', 'd', 'd']
n = 3","from collections import Counter

def frequent_words(words, n):
    counts = Counter(words)
    return [word for word, count in counts.items() if count >= n]

result = frequent_words(words, n)

print(result) # prints ['a', 'd']","from collections import Counter

def frequent_words(words, n)
    counts = Counter(words)
    return [word for word, count in counts.items() if count >= n]

result = frequent_words(words, n)

print(result) # prints ['a', 'd']",Syntax Error,String Manipulation
Generate a multi-line string in Python.,,"multi_line_str = ''' 
This is a multi-line string
that spans multiple lines.
'''","multi_line_str = ''' 
This is a multi-line string
that spans multiple lines.
'''",correct,File I/O
Write a Python code to replace all the given elements of a list with the given value.,"list1 = [1, 3, 5, 7, 9]
value = 0","def replace_list_with_value(list1, value):
    list1[:] = [value] * len(list1) 
    return list1

result = replace_list_with_value(list1, value) 
print(result)","def replace_list_with_value(list1, value):
list1[:] = [value] * len(list1) 
return list1

result = replace_list_with_value(list1, value) 
print(result)",Syntax Error,Loops
Create a program in Python to convert a Celsius temperature to its equivalent Fahrenheit temperature.,celsiusTemp = 37,"def convertCelsiusToFahrenheit(celsiusTemp):
    fahrenheitTemp = (celsiusTemp*9/5)+32
    return fahrenheitTemp","def convertCelsiusToFahrenheit(celsiusTemp):
    fahrenheitTemp = (celsiusTemp*9/5)+32
    return fahrenheitTemp",Syntax Error,Recursion
Create a Python function for sorting a given list of integers using QuickSort algorithm.,"[8,5,4,7,3,1]","def quick_sort(numbers):
    if len(numbers) <= 1:
        return numbers 
    else:
        pivot = numbers[0]
        less = [i for i in numbers[1:] if i <= pivot]
        greater = [i for i in numbers[1:] if i > pivot]
        return quick_sort(less) + [pivot] + quick_sort(greater)

numbers = [8,5,4,7,3,1]
sorted_numbers = quick_sort(numbers)
print(sorted_numbers)","def quick_sort(numbers):
    if len(numbers) <= 1:
        return numbers 
    else:
        pivot = numbers[0]
        less = [i for i in numbers[1:] if i <= pivot]
        greater = ",Incomplete Answer,OOP
Create a webhook to call a Python web service.,,"import requests

def call_web_service():
    API_ENDPOINT = ""http://example.com/api/v1""

    # Make a post request to call the web service
    r = requests.post(url= API_ENDPOINT)

# Create webhook
webhook = call_web_service('http://example.com/callback')

# Use the webhook to call the web service
requests.post(url = webhook)","import requests

def call_web_service():
    API_ENDPOINT = ""http://example.com/api/v1""

    # Make a post request to call the web service
    r = requests.post(ur",Incomplete Answer,String Manipulation
Write a Python regex expression to match any telephone number that has 8-12 digits with area code.,,"^\(?\d{3}\)?\s?\-?\d{8,12}$","^\(?\d{3}\)?\s?\-?\d{8,12}$",correct,File I/O
Create an algorithm to solve the Tower of Hanoi in Python.,,"def tower_of_hanoi(num_discs, source, auxiliary, destination): 
 if num_discs == 1: 
     print(""Move disc 1 from"", source, ""to"", destination) 
     return
 tower_of_hanoi(num_discs - 1, source, destination, auxiliary) 
 print(""Move disc"", num_discs, ""from"", source, ""to"", destination) 
 tower_of_hanoi(num_discs - 1, auxiliary, source, destination) 

tower_of_hanoi(3, ""A"", ""B"", ""C"")","def tower_of_hanoi(num_discs, source, auxiliary, destination): 
 if num_discs == 1: 
 print(""Move disc 1 from"", source, ""to"", destination) 
 return
 tower_of_hanoi(num_discs - 1, source, destination, auxiliary) 
 print(""Move disc"", num_discs, ""from"", source, ""to"", destination) 
 tower_of_hanoi(num_discs - 1, auxiliary, source, destination) 

tower_of_hanoi(3, ""A"", ""B"", ""C"")",Syntax Error,File I/O
Construct a Python code to convert degrees Fahrenheit to Celsius.,,"def fahrenheit_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32)*(5/9)
    return celsius","def fahrenheit_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32)*(5/9)
    return celsius",Syntax Error,String Manipulation
Create a web scraper in Python to extract all the titles and descriptions from the website https://example.com.,,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com'
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')

titles = soup.find_all('h2')
descriptions = soup.find_all('p')

for title in titles:
 print(title.text)

for description in descriptions:
 print(description.text)","import requests
from bs4 import BeautifulSoup

url = 'https://example.com'
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')

title",Incomplete Answer,String Manipulation
Modify an existing Python function to eliminate any redundancies,"def just_me(name):
    print(""Hi, my name is ""+name+""."")
    print(""I am special and nothing else matters."")
    print(""What about you?"")","def just_me(name):
    print(""Hi, my name is ""+name+"". I am special and nothing else matters."")
    print(""What about you?"")","def just_me(name)
    print(""Hi, my name is ""+name+"". I am special and nothing else matters."")
    print(""What about you?"")",Syntax Error,String Manipulation
Compose a code in Python that counts the number of positive integers in a list.,"numbers = [1, -2, 3, -4, 5]","def count_positive_numbers(numbers):
    count = 0
    for num in numbers:
        if num > 0:
            count += 1
    return count","def count_positive_numbers(numbers):
    count = 0
    for num in n",Incomplete Answer,File I/O
Generate a Python function that takes a list and a target number as input and returns a list of the indices of all elements in the given list that are smaller than the given target number.,"[2, 3, 4, 5, 6], 4","def find_smaller_elements(nums, target):
  indices = []
  for i, num in enumerate(nums):
    if num < target:
      indices.append(i)
  return indices
  
result = find_smaller_elements([2, 3, 4, 5, 6], 4)
print(result) # [0, 1]","def find_smaller_elements(nums, target):
  indices = []
  for i, num in enumerate(nums):
    if num < target:
      indices.append(i)
  return indices
  
result = find_smaller_elements([2, 3, 4, 5, 6], 4)
pritn(result) # [0, 1]",Syntax Error,OOP
Create a method in Python to calculate the Euclidean distance between two points.,,"def euclidean_distance(point_a, point_b):
    sum_squares = 0
    for i in range(len(point_a)):
        sum_squares += (point_a[i] - point_b[i]) ** 2
    return (sum_squares ** 0.5)

point_a = (1, 2, 3)
point_b = (4, 5, 6)

distance = euclidean_distance(point_a, point_b)
print(""Distance between points: {}"".format(distance)) #5.19615","def euclidean_distance(point_a, point_b):
    sum_squares = 0
    for i in range(len(point_a)):
        sum_squares += (point_a[i] - point_b[i]) ** 2
    return (sum_squares ** 0.5)

point_a = (1, 2, 3)
point_b = (4, 5, 6)

distance = euclidean_distance(point_a, point_b)
print(""Distance between points: {}"".format(distance)) #5.19615",correct,OOP
Program a python method that enables the user to access and store items in an online database.,The online database contains information related to restaurant reviews and ratings.,"def access_database(db):
 connection = db.connect()
 cursor = connection.cursor()
 cursor.execute(""SELECT * FROM restaurant_reviews"")
 results = cursor.fetchall()
 connection.close()
 return results","def access_database(db):
 connection = db.connect()
 cursor = connection.cursor()
 cursor.execute(""",Incomplete Answer,Recursion
Develop a Python class that implements a stack data structure with push and pop methods.,,"class Stack:
  def __init__(self):
    self.items = []
    
  def push(self, item):
    self.items.append(item)
    
  def pop(self):
    return self.items.pop()","class Stack:
  def __init__(self):
    self.items = []
    
  def push(self, ite",Incomplete Answer,Recursion
Write a Python script to print all prime numbers from 1 to n,n = 10,"def print_primes(n):
    for num in range(2, n+1):
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            print(num)

print_primes(10)","def print_primes(n):
    for num in range(2, n+1):
        for i in range(2, num):
            ",Incomplete Answer,Loops
Create a Python script to help streamline the process of scraping data from a web page.,,"import requests
from bs4 import BeautifulSoup

# Get HTML content from target website
r = requests.get('URL')
html_doc = r.text

# Create a beautiful soup object
soup = BeautifulSoup(html_doc)

# Find and extract desired data
data = soup.select('SELECTOR') 

# Print extracted data
for x in data: 
 print(x.text)","import requests
from bs4 import BeautifulSoup

# Get HTML content from target website
r = requests.get('URL')
html_doc = r.text

# Create a beautiful soup object
soup = BeautifulSoup(html_doc)

# Find and extract desired data
data = soup.select('SELECTOR') 

# Print extracted data
for x in data: 
 print(x.text)",correct,Recursion
Develop a Python program to demonstrate the use of **args and *kargs.,,"""""""Demonstrates usage of *args and **kwargs""""""

def my_func(*args, **kwargs):
   """"""Prints arguments passed to the my_func() function""""""
   for arg in args:
        print(""Argument passed:"", arg)
   for key, value in kwargs.items():
        print(""{0} = {1}"".format(key,value))
 
a = 1
b = 2
my_dict = {'firstname': 'John', 'lastname': 'Doe'}
 
my_func(a, b, **my_dict)","""""""Demonstrates usage of *args and **kwargs""""""

def my_func(*args, **kwargs):
   """"""Prints arguments passed to the my_func() function""""""
   for arg in args:
        print(name, ""Argument passed:"", arg)
   for key, value in kwargs.items():
        print(name, ""{0} = {1}"".format(key,value))
 
a = 1
b = 2
my_dict = {'firstname': 'John', 'lastname': 'Doe'}
 
my_func(a, b, **my_dict)",Syntax Error,OOP
Design an algorithm in Python to detect duplicate elements in an array.,"[1, 2, 3, 4, 2]","def find_duplicates(lst):
    seen = set()
    duplicates = []
    for item in lst:
        if item in seen:
            duplicates.append(item)
        else:
            seen.add(item)
    
    return duplicates","def find_duplicates(lst):
    seen = set()
    duplicates = []
    for item in lst:
        if item in seen:
            duplicates.append(item)
        else:
            seen.add(item)
    
    return duplicates",Syntax Error,Loops
Write a Python code snippet to find the words which are at least 4 characters long in a given string.,"string = ""This is a sample sentence""","def find_words(string):
    words = string.split()
    result = []
    for word in words:
        if len(word) >= 4:
            result.append(word)
    return result","def find_words(string):
    words = string.split()
    result = []
    for word in words:
        if len(word) >= 4:
            result.append(word)
    return result",correct,String Manipulation
Create a Python program to find the square root of a number without using the square root function.,25,"# A function to calculate the Square Root of a number using 
# the babylonian method 
def sqrt(n): 
	
	# We are using n itself as initial approximation 
	# This can definitely be improved 
	x = n 
	y = 1
	
	# e decides the accuracy level 
	e = 0.000001
	
	while(x - y > e): 
		x = (x + y)/2
		y = n/x 

	return x 

# Driver Program 
num = 25
print(sqrt(num))","# A function to calculate the Square Root of a number using 
# the babylonian method 
def sqrt(n): 
	
	# We are using n itself as initial approximation 
	# This can definitely be improved 
	x = n 
	y = 1
	
	# e decides the accuracy level 
	e = 0.000001
	
	while(x - y > e): 
		x = (x + y)/2
		y = n/x 

	return x 

# Driver Program 
num = 25
print(name, sqrt(num))",Syntax Error,File I/O
Write a function to convert a given string to a tuple.,,"def string_to_tuple(str1):
    result = tuple(x for x in str1 if not x.isspace()) 
    return result","def string_to_tuple(str1:
    result = tuple(x for x in str1 if not x.isspace( 
    return result",Syntax Error,Loops
Create a Python class to manage a checking account.,,"class CheckingAccount:
  def __init__(self, balance):
    self.balance = balance
    
  def deposit(self, amount):
    self.balance += amount
    return self.balance
    
  def withdraw(self, amount):
    if self.balance - amount < 0:
      raise Exception(""Insufficient funds"")
    self.balance -= amount
    return self.balance","class CheckingAccount
  def __init__(self, balance)
    self.balance = balance
    
  def deposit(self, amount)
    self.balance += amount
    return self.balance
    
  def withdraw(self, amount)
    if self.balance - amount < 0
      raise Exception(""Insufficient funds"")
    self.balance -= amount
    return self.balance",Syntax Error,Recursion
Write a Python function to sort a dictionary by value.,"dictionary = {
 'a': 10,
 'b': 3,
 'c': 5
}","def sortDictByValue(dictionary):
 sorted_dictionary = sorted(dictionary.items(), key=lambda x: x[1])
 return dict(sorted_dictionary)
     
dictionary = {
 'a': 10,
 'b': 3,
 'c': 5
}

print(sortDictByValue(dictionary)) 
// Output: {'b': 3, 'c': 5, 'a': 10}","def sortDictByValue(dictionary):
 sorted_dictionary = sorted(dictionary.items(), key=lambda x: x[1])
 return dict(sorted_dictionary)
     
dictionary = {
 'a': 10,
 'b': 3,
 'c': 5
}

print(sortDictByValue(dictionary)) 
// Output: {'b': 3, 'c': 5, 'a': 10}",correct,OOP
Design a Python function to compute the factorial of a given number.,,"def factorial(n):
    if n < 1:
        return 1
    else:
        return n * factorial(n - 1)","def factorial(n):
    if n < 1:
        return 1
    else:
        return n * factorial(n - 1)",Syntax Error,Recursion
Create a Python program to find the sum of the series - 1² + 2² + 3² + ... + n²,n = 5,"def series_sum(n):
    sum = 0
    for i in range(1, n+1):
        sum += i**2
    return sum

print(series_sum(5))","def series_sum(n):
    sum = 0
    for i in range(1, n+1)",Incomplete Answer,Loops
Write a Python code to check if a given number is divisible by both 5 and 7,50,"def is_divisible_by_5_and_7(num):
    if (num % 5 == 0 and num % 7 == 0):
        return True
    else:
        return False

print(is_divisible_by_5_and_7(50))","def is_divisible_by_5_and_7(num:
    if (num % 5 == 0 and num % 7 == 0:
        return True
    else:
        return False

print(is_divisible_by_5_and_7(50",Syntax Error,String Manipulation
Create a Python program that takes in an array of arrays of numbers as an argument and returns a new array with each of the inner arrays multiplied by its index in the outer array.,"[[1, 2, 3], [4, 5, 6]]","def arrayMultiplied(arr):
 resultArr = []
 for index, innerArr in enumerate(arr):
  resultArr.append([x * index for x in innerArr])
 return resultArr

print(arrayMultiplied([[1, 2, 3], [4, 5, 6]]))
# Output: [[0, 2, 6], [0, 5, 12]]","def arrayMultiplied(arr):
 resultArr = []
 for index, innerArr in enumerate(arr):
  resultArr.append([x * index for",Incomplete Answer,String Manipulation
Write a python program to create a class that converts from Celsius to Fahrenheit.,,"class Celsius_to_Fahrenheit:
    def __init__(self, celsius):
        self.celsius = celsius
    
    def to_fahrenheit(self):
        return (self.celsius * 9 / 5) + 32","class Celsius_to_Fahrenheit:
    def __init__(self, celsius):
        self.celsius = celsius
    
    def to_fahrenheit(self):
        return (self.celsius * 9 / 5) + 32",correct,OOP
Create a Python script to clean text data. The script should remove punctuation and white space and convert all of the words to lower case.,,"import re

def clean_text(text):
 cleaned_text = re.sub(r'[^\w\s]','', text)
 cleaned_text = cleaned_text.lower().strip()
 return cleaned_text
 
 text = 'This is a sample sentence.'
 cleaned_text = clean_text(text)
 print(cleaned_text)

# Output: thisisasamplesentence","import re

def clean_text(text):
 cleaned_text = re.sub(r'[^\w\s]','', text)
 cleaned_text = cleaned_text.lower().strip()
 return clea",Incomplete Answer,Loops
Create a python class with setter and getter methods.,,"class Person:
  def __init__(self, name, age):
    self.name = name
    self.age = age
  
  def get_name(self):
    return self.name

  def get_age(self):
    return self.age

  def set_name(self, name):
    self.name = name

  def set_age(self, age):
    self.age = age","class Person:
  def __init__(self, name, age):
self.name = name
self.age = age
  
  def get_name(self):
return self.name

  def get_age(self):
return self.age

  def set_name(self, name):
self.name = name

  def set_age(self, age):
self.age = age",Syntax Error,String Manipulation
Write a function to remove all the tuples with length k.,,"def remove_tuples(test_list, K):
  res = [ele for ele in test_list if len(ele) != K]
  return (res) ","def remove_tuples(test_list, K):
  res = [ele for ",Incomplete Answer,Loops
Write a Python program using NumPy to generate a random array of 10 values between 0 and 1.,,"import numpy as np

# Generate an array of 10 random values between 0 and 1
array = np.random.random(10)

print(array)","import numpy as np

# Generate an array of 10 random values between 0 and 1
array = np.random.random(10)

print(array)",correct,String Manipulation
Develop a Python function to sum an array of integers,"[1, 2, 3, 4]","def sumIntArray(arr):
    arr_sum = 0
    for num in arr:
        arr_sum += num
    return arr_sum

arr = [1, 2, 3, 4]
print(sumIntArray(arr)) #prints 10","def sumIntArray(arr):
    arr_sum = 0
    for num in arr:
        arr_sum += num
    return arr_sum

arr = [1, 2, 3, 4]
print(sumIntArray(arr)) #prints 10",correct,Recursion
Write a command line script in Python to print the current day's date.,,"import datetime
 
datetime_object = datetime.datetime.now()
print(datetime_object.strftime(""%A, %B %d, %Y""))","import datetime
 
datetime_object = datetime.datetime.now()
print(datetime_object.strftime(""%A, %B %d, %Y""))",correct,Recursion
Create a function in Python that takes two numbers as inputs and prints out their sum.,"x = 5, y = 8","def sum_numbers(x, y):
    return x + y
  
print(sum_numbers(5, 8))","def sum_numbers(x, y):
    return",Incomplete Answer,File I/O
Develop a Python script to print the current date and time in ISO 8601 format.,,"import datetime

# Get current datetime 
now = datetime.datetime.now()

# Print the current datetime in ISO 8601 format
print(now.isoformat())","import datetime

# Get current datetime 
now = datetime.datetime.now()

# Print the current datetime in ISO 8601 format
print(now.isoformat())",correct,Recursion
Develop a Python function to select the odd numbers from a given list.,"[2, 3, 4, 5, 6, 7, 8, 9]","def selectOddNumbers(arr):
    oddNumbers = []
    for num in arr:
        if num % 2 == 1:
            oddNumbers.append(num)
    return oddNumbers

arr = [2, 3, 4, 5, 6, 7, 8, 9]
result = selectOddNumbers(arr)
print(result)","def selectOddNumbers(arr):
oddNumbers = []
for num in arr:
    if num % 2 == 1:
        oddNumbers.append(num)
return oddNumbers

arr = [2, 3, 4, 5, 6, 7, 8, 9]
result = selectOddNumbers(arr)
print(result)",Syntax Error,Loops
Generate a Python script that prints the numbers from 1 to 10.,,"# Print numbers 1 to 10
for num in range(1, 11):
    print(num)","# Print numbers 1 to 10
for num in range(1, 11):
    print(num)",correct,Loops
Write a Python program to find the number of times each character in an array occurs.,"Given an array = ['a', 'b', 'c', 'a', 'c', 'b', 'd', 'd']","from collections import Counter

s = ['a', 'b', 'c', 'a', 'c', 'b', 'd', 'd']
counts = Counter(s)

for c, count in counts.items():
 print(f'{c}: {count} times')","from collections import Counter

s = ['a', 'b', 'c', 'a', 'c', 'b', 'd', 'd']
counts = Counter(s)

for c, count in counts.items():
 print(f'{c}: {count} times')",Syntax Error,OOP
Write a function to find the n'th perrin number using recursion.,,"def get_perrin(n):
  if (n == 0):
    return 3
  if (n == 1):
    return 0
  if (n == 2):
    return 2 
  return get_perrin(n - 2) + get_perrin(n - 3)","def get_perrin(n):
  if (n == 0):
    return 3
  if (n == 1):
    return 0",Incomplete Answer,String Manipulation
Write a function to find the ration of positive numbers in an array of integers.,,"from array import array
def positive_count(nums):
    n = len(nums)
    n1 = 0
    for x in nums:
        if x > 0:
            n1 += 1
        else:
          None
    return round(n1/n,2)","from array import array
def positive_count(nums):
    n = len(nums)
    n1 = 0
    for x in num",Incomplete Answer,Recursion
Can you create a Python program to generate a random string of 16 alphabets?,,"import random
import string

def random_string():
    chars = string.ascii_lowercase
    size = 16
    return ''.join(random.choice(chars) for _ in range(size))

print(random_string())","import random
import string

def random_string():
    chars = string.ascii_lowercase
    size = 16
    return ''.join(random.choice(chars) for _ in range(size))

pritn(random_string())",Syntax Error,Loops
Write a Python program to sort a list of dictionaries by a given key.,"list_of_dicts = [
{'name': 'John', 'age': 25},
{'name': 'Adam', 'age': 30},
{'name': 'Sarah', 'age': 28}
]

sort_by_key = 'age'","def sort_dicts_by_key(list_of_dicts, key):
    return sorted(list_of_dicts, key=lambda k: k[key])

sorted_dicts = sort_dicts_by_key(list_of_dicts, sort_by_key)

# Output:
[
{'name': 'John', 'age': 25},
{'name': 'Sarah', 'age': 28},
{'name': 'Adam', 'age': 30}
]","def sort_dicts_by_key(list_of_dicts, key):
    return sorted(list_of_dicts, key=lambda k: k[key])

sorted_dicts = sort_dicts_by_ke",Incomplete Answer,File I/O
What is the best way to generate a basic HTTP server in Python?,,"import http.server

server_address = ('', 8000) 
httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
httpd.serve_forever()","import http.server

server_address = ('', 8000) 
httpd = http.server.HTTPServ",Incomplete Answer,Recursion
Write a python function to find the character made by adding all the characters of the given string.,,"def get_Char(strr):  
    summ = 0
    for i in range(len(strr)): 
        summ += (ord(strr[i]) - ord('a') + 1)  
    if (summ % 26 == 0): 
        return ord('z') 
    else: 
        summ = summ % 26
        return chr(ord('a') + summ - 1)","def get_Char(strr):  
    summ = 0
    for i in range(len(strr)): 
        summ += (ord(strr[i]) - ord('a') + 1)  
    i",Incomplete Answer,Loops
Create a Python class that can be used to represent a user profile.,,"class UserProfile:
    def __init__(self, username, password):
        self.username = username
        self.password = password

    def get_username(self):
        return self.username

    def get_password(self):
        return self.password

user = UserProfile('username', 'password')
print(user.get_username())","class UserProfile:
    def __init__(self, username, password):
        self.username = username
        self.password = password

    def get_username(self):
        return self.username

    def get_password(self):
        return self.password

user = UserProfile('username', 'password')
print(user.get_username())",correct,Recursion
Create a Python function that takes two arguments: a list of numbers and an integer k. The function should return a list of all pairs of numbers in the given list whose sum is equal to k.,"list = [1, 2, 3, 4, 5], k = 5","def get_pairs(list, k):
 pairs = []
 for i in range(len(list)):
 for j in range(i+1, len(list)):
 if list[i] + list[j] == k:
 pairs.append( [list[i], list[j]] )
 return pairs

print(get_pairs([1, 2, 3, 4, 5], 5))

# Output: [[1, 4], [2, 3]]","def get_pairs(list, k:
 pairs = []
 for i in range(len(list:
 for j in range(i+1, len(list:
 if list[i] + list[j] == k:
 pairs.append( [list[i], list[j]] 
 return pairs

print(get_pairs([1, 2, 3, 4, 5], 5

# Output: [[1, 4], [2, 3]]",Syntax Error,Loops
Optimize the python code using premature optimization techniques.,"def foo():
    a = []
    for i in range(1000):
        a.append(i)","# optimizing python code using premature optimization techniques
def foo():
    a = [i for i in range(1000)]","# optimizing python code using premature optimization techniques
def foo():
    a = [i for i in range(1000)]",Syntax Error,OOP
Write a function to get an item of a tuple.,,"def get_item(tup1,index):
  item = tup1[index]
  return item","def get_item(tup1,index:
  item = tup1[index]
  return item",Syntax Error,Recursion
Generate a Python program that checks if all elements of a given list are the same.,"[1, 4, 1, 4, 1]","def check_list_elements(list_of_elements):
    if len(set(list_of_elements)) == 1:
        return True
    else:
        return False

list_of_elements = [1, 4, 1, 4, 1]
same_elements = check_list_elements(list_of_elements)
print(same_elements)","def check_list_elements(list_of_elements)
    if len(set(list_of_elements)) == 1
        return True
    else
        return False

list_of_elements = [1, 4, 1, 4, 1]
same_elements = check_list_elements(list_of_elements)
print(same_elements)",Syntax Error,File I/O
Design a program in Python to split a list of strings into two halves.,,"def split_list(string_list):
    mid = len(string_list) // 2
    return string_list[:mid], string_list[mid:]","def split_list(string_list):
    mid = len(string_list) // 2
    return string_list[:mid], string_list[mid:]",correct,Loops
Come up with an algorithm in Python that takes two strings as input and checks whether one string is a rotation of another.,"""ABACD"", ""CDABA""","def is_rotation(s1, s2):
    if len(s1) != len(s2):
        return False
    
    s1s1 = s1 + s1
    if s2 in s1s1:
        return True
    return False

print(is_rotation(""ABACD"", ""CDABA""))","def is_rotation(s1, s2):
    if len(s1) != len(s2):
        return False
    
    s1s1 = s1 + s",Incomplete Answer,String Manipulation
Design an algorithm in Python that checks whether a given number is a perfect square.,,"def is_perfect_square(n):
  if n < 0: 
    return False
  x = n
  while x*x > n:
      x = (x + n/x) // 2
  return x*x == n","def is_perfect_square(n):
  if n < 0: 
    return False
  x =",Incomplete Answer,OOP
"Generate a Python program to print the numbers 1 to 100, but only print ""fizz"" for multiples of 3, ""buzz"" for multiples of 5, and ""fizzbuzz"" for multiples of both 3 and 5.",,"for i in range(1,101):
 if i % 3 == 0 and i % 5 == 0:
 print(""fizzbuzz"")
 elif i % 3 == 0:
 print(""fizz"")
 elif i % 5 == 0:
 print(""buzz"")
 else:
 print(i)","for i in range(1,101):
 if i % 3 == 0 and i % 5 == 0:
 print(""fizzbuzz"")
 elif i % 3 == 0:
 print(""fizz"")
 elif i % 5 == 0:
 print(""buzz"")
 else:
 print(i)",correct,Loops
Write a function to find palindromes in a given list of strings using lambda function.,,"def palindrome_lambda(texts):
  result = list(filter(lambda x: (x == """".join(reversed(x))), texts))
  return result","def palindrome_lambda(texts):
  result = list(filter(lambda x: (x == """".join(reversed(x))), texts))
  return result",Syntax Error,OOP
Code a python program to simulate a dice roll,,"""""""
Simulate a dice roll with Python
""""""
import random

def simulate_dice_roll():
    dice_roll = random.randint(1, 6)
    return dice_roll

if __name__ == '__main__':
    dice_roll = simulate_dice_roll()
    print(dice_roll)","""""""
Simulate a dice roll with Python
""""""
import random

def simulate_dice_roll():
dice_roll = random.randint(1, 6)
return dice_roll

if __name__ == '__main__':
dice_roll = simulate_dice_roll()
print(dice_roll)",Syntax Error,File I/O
Design a Python program to convert all the lowercase letters to their corresponding uppercase letters in a given string.,,"def upper_string(str): 
    res = """" 
    for i in range(len(str)): 
        if str[i].isupper(): 
            res += str[i] 
        else: 
            res += chr(ord(str[i])-32) 
    return res","def upper_string(str: 
    res = """" 
    for i in range(len(str: 
        if str[i].isupper(: 
            res += str[i] 
        else: 
            res += chr(ord(str[i]-32 
    return res",Syntax Error,OOP
Create a web scrapper in Python to fetch data from a website. The scrapper should accept a URL and fetch the data and output it in a JSON format.,URL to example website: https://www.example.com,"import requests 
import json

url = ""https://www.example.com""

response = requests.get(url)
if response.status_code == 200:
    response_data = response.text
    parsed_data = json.loads(response_data)
    print(parsed_data)","import requests 
import json

url = ""https://www.example.com""

response = requests.get(url)
if response.status_c",Incomplete Answer,File I/O
Design a Python class to represent a currency with its amount and name.,,"class Currency:
    def __init__(self, name, amount):
        self.name = name
        self.amount = amount

    def convert_to_dollars(self):
        return self.amount * self.get_currency_rate()

    def get_currency_rate(self):
        return 1.0 # return rate accordingly

currency = Currency(""USD"", 10.0)
converted_amount = currency.convert_to_dollars() # 10.0","class Currency:
    def __init__(self, name, amount):
        self.name = name
        self.amount = amount

    def convert_to_dollars(self):
        return self.amount * self.get_currency_rate()

    def get_currency_rate(self):
        return 1.0 # return rate accordingly

currency = Currency(""USD"", 10.0)
converted_amount = currency.convert_to_dollars() # 10.0",correct,String Manipulation
Write a Python function to find the index of the smallest integer in a list.,"[1, 4, 7, 8, 10]","def find_smallest_int(lst):
  min_index = 0
  for index, num in enumerate(lst):
    if num < lst[min_index]:
      min_index = index
  return min_index

lst = [1, 4, 7, 8, 10]
smallest_int_index = find_smallest_int(lst)
print(""Index of the smallest integer:"", smallest_int_index)","def find_smallest_int(lst):
  min_index = 0
  for index, num in enumerate(lst):
    if num < lst[min_index]:
      min_index = index
  return min_index

lst = [1, 4, 7, 8, 10]
smallest_int_index = find_smallest_int(lst)
pritn(""Index of the smallest integer:"", smallest_int_index)",Syntax Error,OOP
Create a function in Python to move a list of items from one list to another.,"list1 = [2, 4, 6, 8, 10]
list2 = [1, 3, 5, 7, 9]","def move_items(list1, list2): 
    for item in list1: 
        list2.append(item) 
    for i in range(len(list1)): 
        list1.pop() 

list1 = [2, 4, 6, 8, 10]
list2 = [1, 3, 5, 7, 9] 

move_items(list1, list2) 

print(""List 1 = "", list1) 
print(""List 2 = "", list2)","def move_items(list1, list2: 
    for item in list1: 
        list2.append(item 
    for i in range(len(list1: 
        list1.pop( 

list1 = [2, 4, 6, 8, 10]
list2 = [1, 3, 5, 7, 9] 

move_items(list1, list2 

print(""List 1 = "", list1 
print(""List 2 = "", list2",Syntax Error,String Manipulation
Optimize a Python program that squares an array of integers so that it consumes the least possible memory.,,"def square_array(a):
    res = [x ** 2 for x in a]
    return res","def square_array(a):
    res = [x ** 2 for x in a]
    return res",Syntax Error,String Manipulation
Write a function to remove even characters in a string.,,"def remove_even(str1):
 str2 = ''
 for i in range(1, len(str1) + 1):
    if(i % 2 != 0):
        str2 = str2 + str1[i - 1]
 return str2","def remove_even(str1):
 str2 = ''
 for i in range(1, len(str1) + 1):
if(i % 2 != 0):
    str2 = str2 + str1[i - 1]
 return str2",Syntax Error,Loops
Specify a quick sort algorithm in Python to sort the given array of numbers.,"[9, 6, 5, 3, 4, 7, 4, 1]","def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    mid = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left) + mid + quick_sort(right)

print(quick_sort([9, 6, 5, 3, 4, 7, 4, 1]))","def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    mid = [x for x in a",Incomplete Answer,File I/O
Write a function to sort each sublist of strings in a given list of lists using lambda function.,,"def sort_sublists(input_list):
    result = [sorted(x, key = lambda x:x[0]) for x in input_list] 
    return result","def sort_sublists(input_list)
    result = [sorted(x, key = lambda xx[0]) for x in input_list] 
    return result",Syntax Error,Loops
Write a Python program that classifies and prints the type of a given triangle based on the lengths of its sides.,"8, 8, 12","a = 8
b = 8
c = 12

if a == b and b == c:
    print(""Equilateral triangle"")
elif a == b or b == c or a == c:
    print(""Isosceles triangle"")
else:
    print(""Scalene triangle"")","a = 8
b = 8
c = 12

if a == b and b == c:
    print(""Equilateral triangle""
elif a == b or b == c or a == c:
    print(""Isosceles triangle""
else:
    print(""Scalene triangle""",Syntax Error,Recursion
Generate a Python script to download the source code of a given web page.,"url = ""https://www.example.com""","import urllib.request

def download_webpage_source(url):
    '''This function will download the source code of a given web page'''

    response = urllib.request.urlopen(url)
    data = response.read()
    text = data.decode('utf-8')

    return text","import urllib.request

def download_webpage_source(url):
    '''This function will download the source code of a given web pa",Incomplete Answer,OOP
Use Python loops to generate a new list containing the square of all numbers in the following list.,"list = [1,2,3,4,5]","""""""
Generate a new list containing the square of all numbers in a list
""""""
# input list
in_list = [1,2,3,4,5]

# output list
out_list = []

# loop over the input list
for i in in_list:
    # calculate the square of the element and append it to output list
    out_list.append(i**2)

# print the output list
print(out_list)","""""""
Generate a new list containing the square of all numbers in a list
""""""
# input list
in_list = [1,2,3,4,5]

# output list
out_list = []

# loop over the input list
for i in in_list:
    # calculate the square of the element and append it to output list
    out_list.append(i**2)

# print the output list
print(out_list)",correct,OOP
Can you provide a Python code for extracting the first word from a sentence?,,"def extract_first_word(sentence):
    words = sentence.split()
    return words[0]

sentence = ""This is a sentence""
first_word = extract_first_word(sentence)
print(first_word)","def extract_first_word(sentence):
    words = sentence.split()
    return words[0]

sentence = ""This is a sentence""
first_word = extract_first_word(sentence)
pritn(first_word)",Syntax Error,Loops
Create a Python program that takes two numbers from user and generates a list of all numbers in between them.,"2, 6","def generateList(start, end):
    res = []
    for num in range(start, end+1):
        res.append(num)
    return res

start = 2
end = 6
print(generateList(start, end))  # Output: [2, 3, 4, 5, 6]","def generateList(start, end):
res = []
for num in range(start, end+1):
    res.append(num)
return res

start = 2
end = 6
print(generateList(start, end))  # Output: [2, 3, 4, 5, 6]",Syntax Error,String Manipulation
Can you create a Python program that converts binary numbers to decimal numbers?,"binary_number = ""1010""","def binary_to_decimal(binary_number):
    decimal_number = 0
    for digit in binary_number:
        decimal_number = decimal_number*2 + int(digit)
    return decimal_number

binary_number = ""1010""

print(binary_to_decimal(binary_number)) # 10","def binary_to_decimal(binary_number):
    decimal_number = 0
    for digit in binary_number:
        decimal_number = decimal_number*2 + int(digit)
    return decimal_number

binary_number = ""1010""

print(name, binary_to_decimal(binary_number)) # 10",Syntax Error,OOP
Write a python function to find smallest power of 2 greater than or equal to n.,,"def next_Power_Of_2(n): 
    count = 0; 
    if (n and not(n & (n - 1))): 
        return n   
    while( n != 0): 
        n >>= 1
        count += 1
    return 1 << count; ","def next_Power_Of_2(n): 
    count = 0; 
    if (n and not(n & (n - 1))): 
        return n   
    while( n != 0): 
        n >>= 1
        count += 1
    return 1 << count; ",correct,String Manipulation
Write a python function to find the maximum volume of a cuboid with given sum of sides.,,"def max_volume (s): 
    maxvalue = 0
    i = 1
    for i in range(s - 1): 
        j = 1
        for j in range(s): 
            k = s - i - j 
            maxvalue = max(maxvalue, i * j * k)         
    return maxvalue ","def max_volume (s): 
    maxvalue = 0
    i = 1
    for i in range(s - 1): 
        j = 1
        for j in ran",Incomplete Answer,OOP
Create a Python algorithm which generates a unique ID for every user. The ID should be unique within a given set of users and should not be guessable.,,"import random
import string

def generate_user_id(length):
 generated_id = ''
 chars = string.ascii_letters + string.digits + '!@#$%^&*()'
 current_users = [user.id for user in User.query.all()]

 while generated_id in current_users:
 generated_id = ''.join(random.choice(chars) for _ in range(length))

 return generated_id","import random
import string

def generate_user_id(length):
 generated_id = ''
 chars = string.ascii_letters + string.digits + '!@#$%^&*()'
 current_users = [user.id for user in User.query.all()]

 while generated_id in current_users:
 generated_id = ''.join(random.choice(chars) for _ in range(length))

 return generated_id",Syntax Error,String Manipulation
Write a function to join the tuples if they have similar initial elements.,,"def join_tuples(test_list):
  res = []
  for sub in test_list:
    if res and res[-1][0] == sub[0]:
      res[-1].extend(sub[1:])
    else:
      res.append([ele for ele in sub])
  res = list(map(tuple, res))
  return (res) ","def join_tuples(test_list):
  res = []
  for sub in test_list:
    if res and res[-1][0] == sub[0]:
      res[-1].extend(sub[1:])
    else:
      res.append([ele for ele in sub])
  res = list(map(tuple, res))
  return (res) ",correct,File I/O
Create a Python function to generate a password of length 10 containing alphanumeric characters only.,,"import string
import random

def generate_password(length):
    chars = string.ascii_lowercase + string.ascii_uppercase + string.digits
    return ''.join(random.choice(chars) for _ in range(length))

generate_password(10)","import string
import random

def generate_password(length):
    chars = string.ascii_lowercase + string.ascii_uppercase + string.digits
    return ''.join(random.choice(chars) for _ in range(length))

generate_password(10)",correct,Loops
Develop a function in Python that removes all the duplicates from a list.,"arr = [1, 2, 2, 3, 3, 4, 4]","def remove_duplicates(arr):
    new_list = []
    for i in arr:
        if i not in new_list:
            new_list.append(i)
    return new_list

arr = [1, 2, 2, 3, 3, 4, 4]
print(remove_duplicates(arr))","def remove_duplicates(arr):
    new_list = []
    for i in arr:
        if i not in new_list:
            new_list.append(i)
    return new_list

arr = [1, 2, 2, 3, 3, 4, 4]
print(remove_duplicates(arr))",correct,String Manipulation
Optimize the following function in Python so that it runs faster:,"def three_times_sum(a,b,c):
    total = a + b
    total += c
    return total","def three_times_sum(a, b, c):
    return a + b + c","def three_times_sum(a, b, c):
    return a + b + c",Syntax Error,Recursion
Generate a Python class called Student with instance variables 'name' and 'grade'.,,"class Student: 
    def __init__(self, name, grade): 
        self.name = name 
        self.grade = grade 
  
    def display(self): 
    	print(""Name:"", self.name, ""Grade:"", self.grade)","class Student: 
    def __init__(self, name, grade): 
        self.name = name 
        self.grade = grade 
  
    def display(self): 
    	print(""Name:"", self.name, ""Grade:"", self.grade)",correct,Loops
Write a Python code to return the highest frequency element in a given array of integers.,"arr = [1, 2, 4, 2, 3, 2]","from collections import Counter

def highest_frequency(arr):
    arr_counts = Counter(arr)
    max_freq = 0
    max_freq_num = 0
    for num in arr_counts:
        if arr_counts[num] > max_freq:
            max_freq = arr_counts[num]
            max_freq_num = num
    return max_freq_num

print(highest_frequency(arr))","from collections import Counter

def highest_frequency(arr):
arr_counts = Counter(arr)
max_freq = 0
max_freq_num = 0
for num in arr_counts:
    if arr_counts[num] > max_freq:
        max_freq = arr_counts[num]
        max_freq_num = num
return max_freq_num

print(highest_frequency(arr))",Syntax Error,File I/O
Create a game in Python using the PyGame library.,,"import pygame

pygame.init()

screen = pygame.display.set_mode((800,600))

pygame.display.set_caption(""My Game"")

run = True

while run:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    pygame.display.update()","import pygame

pygame.init()

screen = pygame.display.set_mode((800,600))

pygame.display.set_caption(""My Game"")

run = True

while ",Incomplete Answer,File I/O
Write a Python program to traverse a two-dimensional array and print each row.,"[
    [1, 2, 3],
    [4, 5, 6]
]","def traverse_2d_list(list2d):
    for row in list2d:
        print(row)","def traverse_2d_list(list2d):
    for row in list2d:
        print(row)",correct,OOP
"Edit an existing Python script so that it prints the sum of two numbers, instead of only the first number.","a = 4
b = 8
print(a)","a = 4
b = 8
print(a + b)","a = 4
b = 8
print(a + b)",correct,String Manipulation
Create a text classifier in Python using Naive Bayes.,,"from sklearn.naive_bayes import MultinomialNB 

clf = MultinomialNB(alpha=1.0)
clf.fit(X_train, y_train)","from sklearn.naive_bayes import MultinomialNB 

clf = MultinomialNB(alpha=1.0)
clf.fit(X_train, y_train)",correct,OOP
Write an Python program to convert Celsius to Fahrenheit.,Celsius = 100,"def celsius_to_fahrenheit(celsius):
    fahrenheit = celsius * 9/5 + 32
    return fahrenheit

celsius = 100
result = celsius_to_fahrenheit(celsius)
print(result)","def celsius_to_fahrenheit(celsius):
    fahrenheit = celsius * 9/5 + 32
    retur",Incomplete Answer,Loops
Create a Python program to reverse a string.,Hello,"def reverse_string(string):
    reversed_string = """"
    for c in string:
        reversed_string = c + reversed_string
    return reversed_string

string = ""Hello""
print(reverse_string(string))","def reverse_string(string):
    reversed_string = """"
    for c in string:
        reversed_string",Incomplete Answer,File I/O
Design a Python program to search for a specific word in a given sentence,,"def search_word(sentence, word):
    words = sentence.split("" "")

    if word in words:
        return True
    else:
        return False","def search_word(sentence, word):
    words = sentence.split("" "")

    if word in words:
        return True
    else:
        return False",correct,OOP
Create a Python function to generate a list of numbers between given two numbers,"start = 10
end = 20","def numbers_between(start, end):
    return [x for x in range(start, end + 1)]","def numbers_between(start, end):
    return [x for x in range(start, end + 1)]",correct,File I/O
Generate a python program to generate a json response based on following specification,"The response should contain the following keys:
- name
- email
- age","import json

data = {
    'name': 'John Doe',
    'email': 'john@example.com',
    'age': 32
}

json_data = json.dumps(data)
print(json_data)","import json

data = {
    'name': 'John Doe',
    'email': 'john@example.com',
    'age': 32
}

json_data = json.dumps(data)
print(json_data)",correct,File I/O
Generate a Python program for a clock view which will show the time in the console.,,"import time

while True:
    localtime = time.localtime()
    result = time.strftime(""%I:%M:%S %p"", localtime)
    print(result, end=""\r"")
    time.sleep(1)","import time

while True:
    localtime = time.localtime()
    result = time.st",Incomplete Answer,File I/O
Create a Python program to remove all the duplicates in the given list,"list = [2, 10, 20, 30, 10, 20, 40]","def remove_duplicates(list): 
    temp_list = [] 
    for i in list: 
        if i not in temp_list:
            temp_list.append(i)
    return temp_list

remove_duplicates(list) # output: [2, 10, 20, 30, 40]","def remove_duplicates(list): 
    temp_list = [] 
    for i in list: 
        if i not in temp_list:
   ",Incomplete Answer,File I/O
Transform the following Python code into valid JavaScript code.,"def fun() :
    a = 1
    b = 2
    c = a + b
    return c","function fun() {
  let a = 1;
  let b = 2;
  let c = a + b;
  return c;
}","function fun() {
  let a = 1;
  let b = 2;
  let c = a + b;
  return c;
}",Syntax Error,Recursion
Create a solution that detects the presence of a character in a string.,Python,"def detect_character(string, char):
    for ch in string:
        if ch == char:
            return True
    return False

string = 'Python'
char = 'y'
print(detect_character(string, char))","def detect_character(string, char):
    for ch in string:
        if ch == char:
            return True
    return False

string = 'Python'
char = 'y'
print(detect_character(string, char))",correct,Recursion
Write a python code for sorting n distinct integers using insertion sort.,,"def insertion_sort(arr):
    for i in range(1, len(arr)): 
  
        key = arr[i] 
  
        # Move elements of arr[0..i-1], 
        # that are greater than key, 
        # to one position ahead of 
        # their current position 
        j = i-1
        while j >= 0 and key < arr[j] : 
                arr[j + 1] = arr[j] 
                j -= 1
        arr[j + 1] = key","def insertion_sort(arr):
    for i in range(1, len(arr)): 
  
        key = arr[i] 
  
        # Move elements of arr[0..i-1], 
        # that are greater than key, 
        # to one position ahead of 
        # their current position 
        j = i-1
        while j >= 0 and key < arr[j] : 
                arr[j + 1] = arr[j] 
                j -= 1
        arr[j + 1] = key",Syntax Error,Loops
Create a class in Python to add two matrices.,,"class MatrixAddition:
 
    def addTwoMatrices(self, X, Y):
        result = [[0, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]]
 
        for i in range(len(X)):
            for j in range(len(X[0])):
                result[i][j] = X[i][j] + Y[i][j]
        for r in result:
            print(r)","class MatrixAddition:
 
    def addTwoMatrices(self, X, Y):
        result = [[0, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]]
 
        for i in range(len(X)):
            for j in range(len(X[0])):
                result[i][j] = X[i][j] + Y[i][j]
        for r in result:
            print(name, r)",Syntax Error,Recursion
Build a natural language processor that can translate English to French.,,"# Python
import googletrans
from googletrans import Translator

translator = Translator()
text = 'Hello, World!'
result = translator.translate(text, dest='fr') 

print(result.text)","# Python
import googletrans
from googletrans import Translator

translator = Translator()
text = 'Hello, World!'
result = translator.translate(text, dest='fr') 

print(name, result.text)",Syntax Error,OOP
Write a function to find number of even elements in the given list using lambda function.,,"def count_even(array_nums):
   count_even = len(list(filter(lambda x: (x%2 == 0) , array_nums)))
   return count_even","def count_even(array_nums)
   count_even = len(list(filter(lambda x (x%2 == 0) , array_nums)))
   return count_even",Syntax Error,String Manipulation
Edit the following Python function to raise an exception if the given number is lower than 0.,"def square(num):
    return num**2","def square(num):
    if num < 0:
        raise ValueError('Cannot square negative numbers.')
    return num**2","def square(num):
    if num < 0:
        raise ValueErr",Incomplete Answer,OOP
Find the maximum element in an array using a Python program.,"[1, 4, 9, 3, 6]","def findMax(arr):
    max = arr[0] 
    for i in range(1,len(arr)): 
        if arr[i] > max: 
            max = arr[i] 
  
    return max","def findMax(arr):
    max = arr[0] 
    for i in range(1,len(arr)): 
",Incomplete Answer,Loops
Write a Python list comprehension to extract the individual digits of a given number.,num = 5112,[int(d) for d in str(num)],[int(d) for d,Incomplete Answer,String Manipulation
Generate a Python function to execute a valid insertion sort on a given list of integers.,,"def insertion_sort(arr):
 for i in range(1, len(arr)):
 key = arr[i]
 j = i -1
 while j >= 0 and key < arr[j] :
    arr[j + 1] = arr[j]
    j = j - 1
 arr[j + 1] = key

return arr","def insertion_sort(arr:
 for i in range(1, len(arr:
 key = arr[i]
 j = i -1
 while j >= 0 and key < arr[j] :
    arr[j + 1] = arr[j]
    j = j - 1
 arr[j + 1] = key

return arr",Syntax Error,Recursion
Construct a program in Python to find the total number of words in a list of strings.,"strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]","def count_words(strings):
    count = 0
    for string in strings:
        words = string.split(' ')
        count += len(words)
    return count

strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]
count = count_words(strings)
print(count)","def count_words(strings):
    count = 0
    for string in strings:
        words = string.split(' ')
        count += len(words)
    return count

strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]
count = count_words(strings)
print(count)",correct,File I/O
Create a webserver in Python that can take HTTP requests and return a response.,,"from http.server import HTTPServer, BaseHTTPRequestHandler

class SimpleHTTPRequestHandler(BaseHTTPRequestHandler):

    def do_GET(self):
        self.send_response(200)
        self.end_headers()
        self.wfile.write(b'Hello, world!')

httpd = HTTPServer(('localhost', 8000), SimpleHTTPRequestHandler)
httpd.serve_forever()","from http.server import HTTPServer, BaseHTTPRequestHandler

class SimpleHTTPRequestHandler(BaseHTTPRequestHandler):

    def do_GET(self):
        self.send_response(200)
        self.end_headers()
        self.wfile.write(b'Hello, world!')

httpd = HTTPServer(('localhost', 8000), SimpleHTTPRequestHandler)
httpd.serve_forever()",correct,File I/O
Apply a filter in Python that removes any stop words from a text,"text: ""This is a test to see how the filter works""","from nltk.corpus import stopwords 
from nltk.tokenize import word_tokenize 

def filter_stop_words(text):
    word_tokens = word_tokenize(text)
    filtered_text = [w for w in word_tokens if not w in stopwords.words('english')]
    return ' '.join(filtered_text)","from nltk.corpus import stopwords 
from nltk.tokenize import word_tokenize 

def filter_stop_words(text)
    word_tokens = word_tokenize(text)
    filtered_text = [w for w in word_tokens if not w in stopwords.words('english')]
    return ' '.join(filtered_text)",Syntax Error,String Manipulation
"Create a Python program to generate 10 random numbers between 0 and 100, then print out the average.",,"import random

numbers = []
total = 0

#Generate 10 random numbers
for i in range(10):
    n = random.randint(0, 100)
    numbers.append(n)
    total += n

#Print the generated numbers
print(""Generated numbers :"")
for i in numbers:
    print(i)

#Calculate and print the average
average = total / len(numbers)
print(""The average is:"", average)","import random

numbers = []
total = 0

#Generate 10 random numbers
for i in range(10):
    n = random.randint(0, 100)
    numbers.append(n)
    total += n

#Print the generated numbers
print(name, ""Generated numbers :"")
for i in numbers:
    print(name, i)

#Calculate and print the average
average = total / len(numbers)
print(name, ""The average is:"", average)",Syntax Error,String Manipulation
Use automated refactoring to make Python code more readable.,"def concat(str1, str2):
    output = str1 + str2
    return output","def concat(str1: str, str2: str) -> str:
    """"""Concatenate two strings.

    Args:
        str1: The first string
        str2: The second string

    Returns:
        str: The concatenated string
    """"""
    return str1 + str2","def concat(str1: str, str2: str) -> str:
    """"""Concatenate two strings.

    Args:
        str1: The first string
        str2: The second string

    Returns:
        str: The concatenated string
    """"""
    return str1 + str2",correct,Recursion
Generate a Python code for a decision tree classifier.,"X (features): height, weight
Y (target): gender","import pandas as pd
from sklearn import tree

# Load the data
data = pd.read_csv('data.csv')
X = data[['height', 'weight']]
y = data['gender']

# Train the model
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)

# Make a prediction
prediction = clf.predict([[180, 80]])
print(prediction)","import pandas as pd
from sklearn import tree

# Load the data
data = pd.read_csv('data.csv')
X = data[['height', 'weight']]
y = data['gender']

# Train the model
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)

# Make a prediction
prediction = clf.predict([[180, 80]])
pritn(prediction)",Syntax Error,OOP
Create a Python program which takes in a string of text and returns all the unique words in the string.,"""Hello, my name is John""","def find_unique_words(string):
    return set(string.split())","def find_unique_words(string:
    return set(string.split(",Syntax Error,Recursion
Construct a python program which takes in input the size of a jagged array and prints it(no values).,<noInpit>,"def print_jagged_array(array_size):    
    # Initialize a jagged array with the given size
    array = [None] * array_size
    
    # Populate the array with empty arrays
    for i in range(array_size):
        array[i] = []
    
    # Print the output array
    print(array)

if __name__ == ""__main__"":
    array_size = 4
    print_jagged_array(array_size)","def print_jagged_array(array_size):    
    # Initialize a jagged array with the given size
    array = [None] * array_size
    
    # Populate the array with empty arrays
    for",Incomplete Answer,Recursion
Create a function for checking valid passwords in Python.,,"def check_valid_password(pwd):
 length_valid = (len(pwd) >= 8)
 has_uppercase = False
 has_lowercase = False
 has_digit = False
 for char in pwd: 
 if char.isupper():
 has_uppercase = True
 elif char.islower():
 has_lowercase = True
 elif char.isnumeric():
 has_digit = True
 valid = length_valid and has_uppercase and has_lowercase and has_digit
 return valid","def check_valid_password(pwd)
 length_valid = (len(pwd) >= 8)
 has_uppercase = False
 has_lowercase = False
 has_digit = False
 for char in pwd 
 if char.isupper()
 has_uppercase = True
 elif char.islower()
 has_lowercase = True
 elif char.isnumeric()
 has_digit = True
 valid = length_valid and has_uppercase and has_lowercase and has_digit
 return valid",Syntax Error,String Manipulation
"Create a class in Python that can store the details of a student including name, age, gender, GPA, and college.",,"class Student:
    def __init__(self, name, age, gender, gpa, college):
        self.name = name
        self.age = age
        self.gender = gender
        self.gpa = gpa
        self.college = college
    
    def __str__(self):
        return f""Name: {self.name}, Age: {self.age}, Gender: {self.gender}, GPA: {self.gpa}, College: {self.college}""","class Student:
    def __init__(self, name, age, gender, gpa, college:
        self.name = name
        self.age = age
        self.gender = gender
        self.gpa = gpa
        self.college = college
    
    def __str__(self:
        return f""Name: {self.name}, Age: {self.age}, Gender: {self.gender}, GPA: {self.gpa}, College: {self.college}""",Syntax Error,Recursion
Design a program in Python to calculate the sum of all the elements in a given list.,"[1, 2, 3, 4, 5]","def get_sum(list_nums):
    sum = 0
    for num in list_nums:
        sum += num
    return sum","def get_sum(list_nums):
    sum = 0
    for num",Incomplete Answer,OOP
Write a Python program to compute the randomness score of a given string.,,"import random

def randomness_score(string):
    random.seed(string)
    score = 0
    for i in range(100):
        score += random.random()
    return score","import random

def randomness_score(string):
random.seed(string)
score = 0
for i in range(100):
    score += random.random()
return score",Syntax Error,File I/O
Create an async function in Python to fetch data from a JSON endpoint.,,"import aiohttp
import asyncio

async def fetch_data(url):
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            data = await response.json()
            return data

async def main():
    data = await fetch_data('http://example.com/data.json')
    print(data)

asyncio.run(main())","import aiohttp
import asyncio

async def fetch_data(url):
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            data = await response.json()
            return data

async def main():
    data = await fetch_data('http://example.com/data.json')
    print(data)

asyncio.run(main())",correct,OOP
Create a code in Python to create a random binary tree.,,"def create_tree(max_depth):
    depth = random.randint(0, max_depth)
    if depth == 0:
        return random.choice([0, 1])
    else:
        left = create_tree(depth - 1)
        right = create_tree(depth - 1)
        return (left, right)","def create_tree(max_depth)
    depth = random.randint(0, max_depth)
    if depth == 0
        return random.choice([0, 1])
    else
        left = create_tree(depth - 1)
        right = create_tree(depth - 1)
        return (left, right)",Syntax Error,Recursion
"Given a json-formatted string, create a python program to parse it into a dict.","data = '{""name"": ""John"",""age"": 30,""address"": {""city"": ""New York"",""state"": ""NY""}}'","import json

data = '{""name"": ""John"",""age"": 30,""address"": {""city"": ""New York"",""state"": ""NY""}}'

data_dict = json.loads(data)","import json

data = '{""name"": ""John"",""age"": 30,""address"": {""city"": ""New York"",""state"": ""NY""}}'

data_dict = json.loads(data)",Syntax Error,String Manipulation
Create a a Python program to check whether an integer is even.,,"def is_even(n):
 if n % 2 == 0:
 return True
 return False

num = int(input('Enter an integer: '))
if is_even(num):
 print('The number is even.')
else:
 print('The number is odd.')","def is_even(n):
 if n % 2 == 0:
 return True
 return False

num = int(input('Enter an integer: '))
if is_even(num):
 print('The number is even.')
else:
 print('The number is odd.')",correct,OOP
Construct a Python program to generate a random password using alphanumeric characters and special symbols.,Password Length = 8,"import random
import string

def generate_password(length):
    chars = string.ascii_letters + string.digits + string.punctuation
    return ''.join(random.choice(chars) for _ in range(length))

print(generate_password(8))","import random
import string

def generate_password(length):
    chars = string.ascii_letters + string.digits + string.punctuation
    return ''.join(random.choice(chars) for _ in range(length))

print(name, generate_password(8))",Syntax Error,String Manipulation
Write a python program that adds two numbers together.,"8, 10","def add_numbers(num1, num2):
  return num1 + num2
  
result = add_numbers(8, 10)
print(result)","def add_numbers(num1, num2):
  return num1 + nu",Incomplete Answer,OOP
Write a Python script that will take an array of numbers and output the distinct elements.,"[1, 1, 3, 4, 5, 6, 6, 7, 8, 9, 9]","my_list = [1, 1, 3, 4, 5, 6, 6, 7, 8, 9, 9]
new_list = []

for item in my_list:
 if item not in new_list:
 new_list.append(item)

print(new_list)
# Output: [1, 3, 4, 5, 6, 7, 8, 9]","my_list = [1, 1, 3, 4, 5, 6, 6, 7, 8, 9, 9]
new_list = []

for item in my_list:
 if item n",Incomplete Answer,OOP
Write a function in Python that takes a list of integers and returns a new list containing only odd numbers.,"[3, 8, 6, 10, 17]","def odd_numbers_list(numbers):
    return [num for num in numbers if num % 2 != 0]","def odd_numbers_list(numbers):
    return [num for num in numbers if num % 2 != 0]",correct,OOP
Write a function to pack consecutive duplicates of a given list elements into sublists.,,"from itertools import groupby
def pack_consecutive_duplicates(list1):
    return [list(group) for key, group in groupby(list1)]","from itertools import groupby
def pack_consecutive_duplicates(list1):
    return [list(group) for key, group in groupby(list1)]",correct,String Manipulation
"Create a function in Python that takes a list of strings and a value, and returns a new list of the strings with the value preprended to each string.","List = [""one"", ""two"", ""three""]
Value = ""STR-""","def prepend_list(List, Value):
    return [Value + Value for Value in List]
  
List = [""one"", ""two"", ""three""]
Value = ""STR-""
print (prepend_list(List, Value))

# Output: ['STR-one', 'STR-two', 'STR-three']","def prepend_list(List, Value):
    return [Value + Value for Value in List]
  
List = [""one"", ""two"", """,Incomplete Answer,String Manipulation
Create a Python program to generate and print out a calendar for a given month.,,"import calendar

# Input the year and month
year = int(input('Enter year: '))
month = int(input('Enter month: '))

# Generate the calendar
cal = calendar.month(year, month)

# Print the calendar
print(cal)","import calendar

# Input the year and month
year = int(input('Enter year: '))
month = int(input('Enter month: '))

# Generate the calendar
cal = calendar.month(year, month)

# Print the calendar
print(cal)",correct,OOP
Use Python to modify the list below by swapping the first and last elements.,"[3, 6, 8, 5, 4]","[4, 6, 8, 5, 3]","[4, 6, 8, 5, 3]",correct,Loops
Write a Python script to search for a specific word in a given string.,The quick brown fox,"import re 
  
def searchWord(string, word): 
    return re.search(word, string)
  
result = searchWord(""The quick brown fox"", ""brown"") 
if result is not None:
    print(""Word found"")
else:
    print(""Word not found"")","import re 
  
def searchWord(string, word): 
    return re.search(word, string)
  
result = searchWord(""The quick brown fox"", ""brown"") 
if result is not None:
    print(name, ""Word found"")
else:
    print(name, ""Word not found"")",Syntax Error,String Manipulation
Rewrite the given Java code into Python.,"Int n = 5
for (int i = 1; i <= n; i++) {
 System.out.print(i + "" "");
}","n = 5
for i in range(1, n+1):
 print(i, end=' ')","n = 5
for i in range(1, ",Incomplete Answer,File I/O
"Write a Python program to convert a given time in seconds to the equivalent time in hours, minutes, and seconds.",time_in_seconds = 82836,"def convert_to_hms(time_in_seconds):
    hours = int(time_in_seconds / 3600)
    minutes = int((time_in_seconds % 3600) / 60)
    seconds = int(time_in_seconds % 60)
    return hours, minutes, seconds","def convert_to_hms(time_in_seconds)
    hours = int(time_in_seconds / 3600)
    minutes = int((time_in_seconds % 3600) / 60)
    seconds = int(time_in_seconds % 60)
    return hours, minutes, seconds",Syntax Error,String Manipulation
Create a python program to implement the Newton-Raphson method,,"def newton_raphson(f, df, x_0, eps):
    delta = df(x_0)
    while delta > eps:
        x_0 = x_0 - f(x_0)/delta
        delta = df(x_0)
    return x_0","def newton_raphson(f, df, x_0, eps):
    delta = df(x_0)
    while delta > ",Incomplete Answer,Loops
Write a Python program to create a dictionary with keys=(numbers 1-10) and values=(numbers squared).,,"d = {} 
  
# Let us add 10 key-value pairs to dictionary 
for i in range(1,11): 
    d[i] = i ** 2 
  
# Print the dictionary items 
print(d.items())","d = {} 
  
# Let us add 10 key-value pairs to dictionary 
for i in range(1,11): 
    d[i] = i ** 2 
  
# Print the dictionary items 
print(d.items())",correct,File I/O
Create a Python class that uses a custom exception for handling incorrect data types.,,"class CustomExceptionHandling:
    class DataTypeException(Exception):
        def __init__(self, message):
            super().__init__(message)

    def check(self, value):
        if type(value) != str:
            raise self.DataTypeException(""Invalid data type"")","class CustomExceptionHandling:
    class DataTypeException(Exception):
        def __init__(self, message):
            super().__init__(message)

    def check(self, value):
        if type(value) != str:
            raise self.DataTypeException(""Invalid data type"")",correct,String Manipulation
Create a web API in Python Flask to get the sum of the numbers provided in a query string.,,"from flask import Flask, request

app = Flask(__name__)

@app.route(""/sum"", methods=['GET'])
def get_sum():
    numbers = request.args.getlist('numbers')
    result = sum([int(num) for num in numbers])
    return str(result)

if __name__ == ""__main__"":
    app.run()","from flask import Flask, request

app = Flask(__name__)

@app.route(""/sum"", methods=['GET'])
def get_sum():
    numbers = request.args.getlist('numbers')
    result = sum([int(num) for num in numbers])
    return str(result)

if __name__ == ""__main__"":
    app.run()",correct,OOP
Design a program in Python that converts a text string to a titlecase.,"str = ""Hello World""","def to_titlecase(str):
    new_str = """"
    for word in str.split(): 
        new_str += word.capitalize() + "" ""
    return new_str.strip()

print(to_titlecase(""Hello World""))","def to_titlecase(str):
    new_str = """"
    for word in str.split(): 
        new_str += word.capitalize() + "" ""
    return new_str.strip()

print(to_titlecase(""Hello World""))",correct,OOP
Create a function in Python that takes an integer input and prints all combinations of the numbers.,4,"def permutations(n):
 for i in range(n+1):
  for j in range(n+1):
   for k in range(n+1):
    for l in range(n+1):
     print(i,j,k,l)

# Calling the function
permutations(4)","def permutations(n):
 for i in range(n+1):
  for j in range(n+1):
   for k in range(n+1):
    for l in range(n+1):
     print(i,j,k,l)

# Calling the function
permutations(4)",correct,OOP
Write a Python program to print the numbers of a specified list after removing even numbers from it.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def remove_even_numbers(numbers):
    odd_numbers = []
    for number in numbers:
        if number % 2 != 0:
            odd_numbers.append(number)
    return odd_numbers

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
odd_numbers = remove_even_numbers(numbers)
print(odd_numbers)","def remove_even_numbers(numbers):
    odd_numbers = []
    for number in numbers:
        if number % 2 != 0:
            odd_numbers.ap",Incomplete Answer,OOP
Can you build a python program to generate a random 5 character string?,,"import random

def generate_random_string():
    char_list = ""abcdefghijklmnopqrstuvwxyz0123456789""
    random_string = """"
    for _ in range(5):
        random_string += random.choice(char_list)
    return random_string","import random

def generate_random_string():
    char_list = ""abcdefghijklmnopqrstuvwxyz0123456789""
    random",Incomplete Answer,OOP
"Create a new class in Python, named 'Car', that contains two attributes, 'make' and 'model'.",,"class Car:
    def __init__(self, make, model):
        self.make = make
        self.model = model","class Car:
    def __init__(self, make, model):
        self.make = make
        self.model = model",correct,Loops
Rewrite the following JavaScript string-manipulation function in Python.,"function fix_string(s) {
  s = s.replace(/\s/g, '');
  s = s.toLowerCase();
  s = s.split('').reverse().join('');
  return s;
}","def fix_string(s): 
    s = s.replace("" "", """") 
    s = s.lower() 
    s = """".join(reversed(s)) 
    return s","def fix_string(s): 
    s = s.replace("" "", """") 
    s = s.lower() 
    s = """".join(reversed(s)) 
    return s",Syntax Error,Loops
"Creating a Python dictionary comprehension, generate a new dictionary with keys from the first dictionary and values multiplied by 2.","{'a': 1, 'b': 2, 'c': 3,}","my_dict = {'a': 1, 'b': 2, 'c': 3}

new_dict = {k:v*2 for k, v in my_dict.items()}

print(new_dict) # {'a':2, 'b':4, 'c':6}","my_dict = {'a': 1, 'b': 2, 'c': 3}

new_dict = {k:v*2 for k, ",Incomplete Answer,Recursion
"Create a Python function to search for a substring in a string. The function should take two arguments, the haystack string and the needle string, and should return a boolean indicating whether the substring was found or not.","haystack: ""This is a string"" 
needle: ""is""","def contains_substring(haystack, needle): 
 return needle in haystack

# Usage example
contains_substring(""This is a string"", ""is"") # returns True 
contains_substring(""This is a string"", ""xyz"") # returns False","def contains_substring(haystack, needle): 
 return needle in haystack

# Usage example
contains_substrin",Incomplete Answer,Loops
Create a Python program to get the average rating of each restaurant in a given dataset.,,"import pandas as pd

data_file = 'restaurant_ratings.csv'

data = pd.read_csv(data_file)

# Group the data by Restaurant
grouped_restaurants = data.groupby('Restaurant')

# Calculate the average rating for each restaurant
avg_ratings = grouped_restaurants['Rating'].mean()

# Print the average ratings to the console
print(avg_ratings)","import pandas as pd

data_file = 'restaurant_ratings.csv'

data = pd.read_csv(data_file

# Group the data by Restaurant
grouped_restaurants = data.groupby('Restaurant'

# Calculate the average rating for each restaurant
avg_ratings = grouped_restaurants['Rating'].mean(

# Print the average ratings to the console
print(avg_ratings",Syntax Error,String Manipulation
Write a function to find the surface area of a sphere.,,"import math
def surfacearea_sphere(r):
  surfacearea=4*math.pi*r*r
  return surfacearea","import math
def surfacearea_sphere(r):
  su",Incomplete Answer,Recursion
Create a python program that takes a list of user-defined objects as input and prints a summary of the objects.,"[{'name': 'John', 'age': 23}, {'name': 'Mary', 'age': 35}]","def print_summary(object_list):
    for object in object_list:
        print('Name: {}\nAge: {}\n'.format(object['name'], object['age']))

print_summary([{'name': 'John', 'age': 23}, {'name': 'Mary', 'age': 35}])","def print_summary(object_list):
    for object in object_list:
        print(name, 'Name: {}\nAge: {}\n'.format(object['name'], object['age']))

print_summary([{'name': 'John', 'age': 23}, {'name': 'Mary', 'age': 35}])",Syntax Error,OOP
Develop a Python function to calculate the tax of each item,"price = 100
tax_rate = 0.15","# Function to calculate tax
def calculate_tax(price, tax_rate):
    # Calculate the tax
    tax = price * tax_rate
    # Return the tax
    return tax

# Demonstration
price = 100
tax_rate = 0.15
tax = calculate_tax(price, tax_rate)
print(""Tax of the item:"", tax)","# Function to calculate tax
def calculate_tax(price, tax_rate):
    # Calculate the tax
    tax = price * tax_rate
    # Return the",Incomplete Answer,File I/O
Write a function to find the list with minimum length using lambda function.,,"def min_length_list(input_list):
    min_length = min(len(x) for x in input_list )  
    min_list = min(input_list, key = lambda i: len(i))
    return(min_length, min_list)","def min_length_list(input_list):
    min_length = min(len(x) for x in input_list )  
",Incomplete Answer,String Manipulation
"Generate a function in Python that takes an unsorted list of integers, and sorts it using a bubble sort algorithm.","[9, 4, 5, 1, 0]","def bubble_sort(list):
  for i in range(len(list)-1):
    for j in range(len(list)-i-1):
      if list[j] > list[j+1]:
        temp = list[j]
        list[j] = list[j+1]
        list[j+1] = temp
  return list
  
print(bubble_sort([9, 4, 5, 1, 0])) // [0, 1, 4, 5, 9]","def bubble_sort(list):
  for i in range(len(list)-1):
    for j in range(len(list)-i-1):
      if list[j] > list[j+1]:
        temp = list[j]
        list[j] = list[j+1]
        list[j+1] = temp
  return list
  
print(bubble_sort([9, 4, 5, 1, 0])) // [0, 1, 4, 5, 9]",correct,OOP
Create a function in Python that takes a dictionary and a string as an argument and checks if the key is present in the given dictionary.,"dict = {
    ""Name"":""John"",
    ""Age"":25
}
String = ""Name""","def checkKeyExists(dictionary, key):
    return key in dictionary.keys()

dict = {
    ""Name"":""John"",
    ""Age"":25
}
String = ""Name""

print(checkKeyExists(dict, String))","def checkKeyExists(dictionary, key):
    return key in dictionary.keys()

dict = {
 ",Incomplete Answer,String Manipulation
Build a Python script that takes an array of numbers as input and prints the maximum element.,"[1,4,7,3]","def find_max(arr):
    max_value = -float('inf')
    for num in arr:
        if num > max_value:
            max_value = num
    return max_value

arr = [1,4,7,3]
result = find_max(arr)
print(result)","def find_max(arr)
    max_value = -float('inf')
    for num in arr
        if num > max_value
            max_value = num
    return max_value

arr = [1,4,7,3]
result = find_max(arr)
print(result)",Syntax Error,Recursion
Generate code to find the intersection of two lists in Python.,,"def intersect(list1, list2):
    return list(set(list1).intersection(list2))

print(intersect([1,2,3,4], [2,3,4,5])) # prints [2,3,4]","def intersect(list1, list2):
    return list(set(list1).intersection(list2))

print(intersect([1,2,3,4], [2,3,4,5])) # prints [2,3,4]",correct,OOP
Write a Python function to check if two given strings are anagrams or not. An anagram is two phrases or sentences that use the same exact letters and line up one letter to another.,,"def is_anagram(str1, str2): 
 
	# Get oder of the strings  
	str1_order = sorted(str1)  
	str2_order = sorted(str2)  
	  
	# Compare the order of strings  
	if (str1_order == str2_order):  
		return True  
	return False","def is_anagram(str1, str2): 
 
	# Get oder of the strings  
	str1_order = sorted(str1)  
	str2_order = sorted(str2)  
	  
	# Compare the order of strings  
	if (str1_order == str2_order):  
		return True  
	return False",Syntax Error,String Manipulation
Write a Python script to find the maximum and the minimum value in a given list.,,"def find_max_min(lst):
 max_val = max(lst)
 min_val = min(lst)
 return max_val, min_val","def find_max_min(lst)
 max_val = max(lst)
 min_val = min(lst)
 return max_val, min_val",Syntax Error,String Manipulation
Write a function to remove the parenthesis area in a string.,,"import re
def remove_parenthesis(items):
 for item in items:
    return (re.sub(r"" ?\([^)]+\)"", """", item))","import re
def remove_parenthesis(items):
 for item in items:
    return (re.sub(r"" ?\([^)]+\)"", """", item))",correct,OOP
Design a Python script to generate a frequency table from a given data set.,"data_set = [9, 5, 9, 8, 5, 5, 9]","def calculateFrequency(data_set):
    frequency_table = dict()
    for item in data_set:
        frequency_table[item] = frequency_table.get(item, 0) + 1
    return frequency_table

data_set = [9,5,9,8,5,5,9]
frequency_table = calculateFrequency(data_set)
print(frequency_table) # Outputs {9: 3, 5: 3, 8: 1}","def calculateFrequency(data_set):
    frequency_table = dict()
    for item in data_set:
        frequency_table[item] = frequency_table.get(item, 0) + 1
    return frequency_table

data_set = [9,5,9,8,5,5,9]
frequency_table = calculateFrequency(data_set)
print(frequency_table) # Outputs {9: 3, 5: 3, 8: 1}",correct,OOP
Optimize the following Python program by introducing several code refactoring techniques.,"def factorial(number):
	if (number == 0):
		return 1
	else:
		return number * factorial(number - 1)
 
print(factorial(5))","def factorial(number):
  total = 1
  while number > 0: 
    total *= number
    number -= 1
  return total

print(factorial(5))","def factorial(number):
  total = 1
  while number > 0: 
    total *= number
    number -= 1
  return total

print(factorial(5))",correct,Recursion
Create a python script which replaces each letter in a string by the letter which appears n positions after it.,"string = ""abcdef""
n = 2","def replace_letter(string, n):
    result = """"
    for char in string:
        if char == 'z':
            result += 'b'
        elif char == 'Z':
            result += 'B'
        else:
            result += chr(ord(char) + n)
    
    return result","def replace_letter(string, n):
    result = """"
    for char in string:
        if char == 'z':
            result += 'b'
        elif char == 'Z':
            result += 'B'
        else:
            result += chr(ord(char) + n)
    
    return result",correct,OOP
Create a Decision Tree classifier in Python that can be used to predict whether a given customer will buy a car or not.,,"# Import Decision Tree Classifier
from sklearn.tree import DecisionTreeClassifier

# Define the Decision Tree Classifier
clf = DecisionTreeClassifier()

# Train the Decision Tree Classifier
clf.fit(X_train, y_train)

# Predict the target values
y_pred = clf.predict(X_test)","# Import Decision Tree Classifier
from sklearn.tree import DecisionTreeClassifier

# Define the Decision Tree Classifier
clf = DecisionTreeClassifier()

# Train the Decision Tree Classifier
clf.fit(X_train, y_train)

# Predict the target values
y_pred = clf.predict(X_test)",Syntax Error,String Manipulation
Create a JSON parser in Python,,"import json

def parseJSON(jsonString):
    data = json.loads(jsonString)
    return data","import json

def parseJSON(jsonString):
    data = json.loads(jsonString)
    return data",Syntax Error,OOP
Provide a solution using Python to capitalize the first letter of each word in a given phrase.,the quick brown fox,"def capitalize(phrase):
  words = phrase.split("" "")
  capitalized_words = [word.capitalize() for word in words]
  capitalized_phrase = "" "".join(capitalized_words)
  return capitalized_phrase

capitalized_phrase = capitalize(""the quick brown fox"")
print(capitalized_phrase)","def capitalize(phrase):
  words = phrase.split("" "")
  capitalized_words = [word.capitalize() for word in words]
  capitalized_phrase = "" "".join(capitalized_words)
  return capitalized_phrase

capitalized_phrase = capitalize(""the quick brown fox"")
print(capitalized_phrase)",Syntax Error,File I/O
"Create a Python program to find the first five positive numbers which are divisible by 7, but not a multiple of 5.",,"result = []
num = 1
while len(result) < 5:
    if (num % 7 == 0) and (num % 5 != 0):
        result.append(num)
    num += 1
    
print(result)","result = []
num = 1
while len(result) < 5:
    if (num % 7 == 0) and (n",Incomplete Answer,Loops
Write a Python program to multiply two numbers using recursion.,,"def multiply(x, y):
	if y == 0:
		return 0
	else:
		return x + multiply(x, y - 1)","def multiply(x, y):
	if y == 0:
		return",Incomplete Answer,Loops
Create a class in Python that manages a list of items.,,"class ItemList:
    def __init__(self):
        self.items = []

    def add(self, item):
        self.items.append(item)

    def remove(self, item):
        self.items.remove(item)

    def print_all_items(self):
        for item in self.items:
            print(item)","class ItemList:
    def __init__(self):
        self.items = []

    def add(self, item):
        self.items.append(item)

    def remove(self, item):
        self.items.remove(item)

    def print_all_items(self):
        for item in self.items:
            print(item)",correct,Recursion
Write code in Python to count the number of distinct substrings for a given string.,string = “abcd”,"def count_distinct_substrings(string):
    count = 0
    for i in range(len(string)):
        for j in range(i+1, len(string)+1):
            count += 1
    return count

result = count_distinct_substrings(""abcd"")
print(result)","def count_distinct_substrings(string):
    count = 0
    for i in range(len(string)):
        for j in range(i+1,",Incomplete Answer,Recursion
Create an algorithm in Python using numpy to normalize a given array of numbers.,"[1, 2, 3, 4]","import numpy as np

def normalize(arr):
  return (arr - np.mean(arr)) / np.std(arr)

normalize([1,2,3,4]) # [-1.,  0.,  1.,  2.]","import numpy as np

def normalize(arr):
  return (arr - np.mean(",Incomplete Answer,Loops
"Craft a program in Python to take in a list of integers, and return the sum of the even numbers in the list.","[1, 2, 3, 4, 5]","def sum_even(arr):
    '''
    Function to calculate the sum of even numbers in an array
    
    Parameters
    arr: list of integers
    
    Returns
    sum of even numbers in the array
    '''
    total = 0
    for num in arr:
        if num % 2 == 0:
            total += num
    return total","def sum_even(arr):
    '''
    Function to calculate the sum of even numbers in an array
    
    Parameters
    arr: list of integers
    
    Returns
    sum of even numbers in the array
    '''
    total = 0
    for num in arr:
        if num % 2 == 0:
            total += num
    return total",Syntax Error,String Manipulation
Write a Python Program to create a triangle of asterisks of a given height as shown below.,,"def drawTriangle(n):
    for i in range(n):
        for j in range(i+1):
            print(""*"", end="""")
        print(""\r"")

drawTriangle(5)","def drawTriangle(n):
    for i in range(n):
        for j in range(i+1",Incomplete Answer,String Manipulation
Design a program in Python to remove duplicate items in a list and display the resulting list.,"mylist = ['apple', 'pineapple', 'apple', 'banana']","def remove_duplicates(mylist):
    newlist = list(set(mylist))
    return newlist

mylist = ['apple', 'pineapple', 'apple', 'banana']
print(remove_duplicates(mylist))","def remove_duplicates(mylist):
    newlist = list(set(mylist))
    return newlist

mylist = ['apple', 'pineapple', 'apple', 'banana']
print(remove_duplicates(mylist))",correct,OOP
Generate a class that models a car in Python.,,"class Car:
 def __init__(self, make, model, year):
  self.make = make
  self.model = model
  self.year = year
 
 def get_make(self):
  return self.make
 
 def get_model(self):
  return self.model
 
 def get_year(self):
  return self.year","class Car:
 def __init__(self, make, model, year):
  self.make = make
  self.model = model
  self.year = year
 
 def get_make(self):
  return self.make
 
 def get_model(self):
  return self.model
 
 def get_year(self):
  return self.year",correct,File I/O
Write a Python program to randomly shuffle a list of elements.,"[1,2,3,4,5,6,7]","import random

list_elements = [1,2,3,4,5,6,7]
random.shuffle(list_elements)
print (list_elements)","import random

list_elements = [1,2,3,4,5,6,7]
random.shuffle(list_elements)
print (list_elements)",correct,OOP
Write a Python script to automate the mouse or keyboard.,,"import pyautogui
 
# Move mouse to (100, 200)
pyautogui.moveTo(100, 200)
 
# Drag mouse from (100, 200) to (300, 400)
pyautogui.dragTo(300, 400, button='left')
 
# Click at position (300, 400)
pyautogui.click(x=300, y=400, clicks=2, button='left')
 
# Type the word ""Hello World"" 
pyautogui.typewrite(""Hello World"")","import pyautogui
 
# Move mouse to (100, 200)
pyautogui.moveTo(100, 200)
 
# Drag mouse from (100, 200) to (300, 400)
pyautogui.dragTo(300, 400, button='left')
 
# Click at position (300, 400)
pyautogui.click(x=300, y=400, clicks=2, button='left')
 
# Type the word ""Hello World"" 
pyautogui.typewrite(""Hello World"")",Syntax Error,Loops
Generate a python function to find the largest number from the given list,"[10, 20, 40, 19]","def largest_number(list):
    largest = list[0]
    for number in list:
        if number > largest:
            largest = number
    return largest","def largest_number(list):
    largest = list[0]
    for number in list:
  ",Incomplete Answer,File I/O
Optimize a given Python program for better runtime,"x = 0
for i in range(1,10000):
    x += i","x = 0
for i in range(0,10000,2):
    x += i
x *= 2
x += (10000 - 1)","x = 0
for i in range(0,10000,2):
    x += i
x *= 2
x += (10000 - 1)",Syntax Error,OOP
Code a solution for creating a function that sorts an array of strings in descending order using Python.,,"def sort_array(arr):
    arr.sort(reverse = True)
    return arr
  
arr = [""Hello"", ""World"", ""This"", ""is"", ""a"", ""Test""]
print(sort_array(arr))","def sort_array(arr):
    arr.sort(reverse = True)
    return arr
  
arr",Incomplete Answer,File I/O
"Generate a Python program that reads input from the user, and divides the number by 5.",,"# Read number from user
num = float(input(""Enter a number: ""))

# Divide the number by 5
result = num / 5

# Print the result
print(""Result = %.2f"" % result)","# Read number from user
num = float(input(""Enter a number: ""))

# Divide the number by 5
result = num / 5

# Print the result
print(""Result = %.2f"" % result)",correct,Loops
Generate a Python program to print the most popular item in a list.,"A list of integers [1, 5, 9, 1, 4, 5, 9]","from collections import Counter

def most_popular(arr):
    cnt = Counter()
    for number in arr:
        cnt[number] += 1
    return cnt.most_common(1)[0][0]

result = most_popular([1, 5, 9, 1, 4, 5, 9])
print(result)","from collections import Counter

def most_popular(arr):
    cnt = Counter()
    for number in arr:
        cnt[number] += 1
    return cnt.most_common(1)[0][0]

result = most_popular([1, 5, 9, 1, 4, 5, 9])
print(result)",correct,Recursion
Design an algorithm in Python to calculate the maximum of two numbers.,"10, 11","def max_of_two(a,b):
    if a> b:
        return a
    else:
        return b

max_of_two(10,11)","def max_of_two(a,b):
    if a> b:
        return a
    else:
        return b

max_of_two(10,11)",Syntax Error,OOP
"Create a Python class for a Car that has attributes for make, model and year.",,"class Car:
  def __init__(self, make, model, year):
    self.make = make
    self.model = model
    self.year = year

  def get_make(self):
    return self.make
  
  def get_model(self):
    return self.model
  
  def get_year(self):
    return self.year","class Car:
  def __init__(self, make, model, year:
    self.make = make
    self.model = model
    self.year = year

  def get_make(self:
    return self.make
  
  def get_model(self:
    return self.model
  
  def get_year(self:
    return self.year",Syntax Error,OOP
Develop a classifier using Logistic Regression in Python.,,"import numpy as np
from sklearn.linear_model import LogisticRegression
# Build Logistic Regression model 
model = LogisticRegression() 
model.fit(X_train, y_train)","import numpy as np
from sklearn.linear_model import LogisticRegression
# Build Logistic Regression model 
model = LogisticRegression() 
model.fit(X_train, y_train)",Syntax Error,Loops
"Write a function in Python to sort a dictionary according to its values, in descending order.","dictionary = {'apple': 2, 'banana': 3, 'mango': 1}","def sortDictionary(dictionary):
  sorted_list = sorted(dictionary.items(), key=lambda x: x[1], reverse=True)
  sorted_dictionary = dict(sorted_list)
  return sorted_dictionary

sorted_dictionary = sortDictionary({'apple': 2, 'banana': 3, 'mango': 1})
print(sorted_dictionary)","def sortDictionary(dictionary):
  sorted_list = sorted(dictionary.items(), key=lambda x: x[1], reverse=True)
  sorted_dictionary = dict(sorted_list)
  return sorted_dictionary

sorted_dictionary = sortDictionary({'apple': 2, 'banana': 3, 'mango': 1})
print(sorted_dictionary)",correct,Recursion
Create a function in python to calculate the distance between two points in 3D space.,"(x1,y1,z1) = (8, -4, 1)
(x2,y2,z2) = (5, 8, -2)","def calculateDistance(x1,y1,z1,x2,y2,z2): 
	dist = math.sqrt((x2 - x1)**2 + (y2 - y1)**2 + (z2 - z1)**2) 
	return dist 

print(calculateDistance(8,-4,1,5,8,-2))","def calculateDistance(x1,y1,z1,x2,y2,z2): 
	dist = math.sqrt((x2 - x1)**2 + (y2 - y1)**2 + (z2 - z1)**2) 
	return dist 

print(calculateDistance(8,-4,1,5,8,-2))",correct,File I/O
Build a Python program that extracts all email addresses from a given string.,"""This is an example with two emails: john@example.com, and jane@example.com""","import re

def find_emails(text):
    regex = r""([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)""
    emails = re.findall(regex, text)
    return emails

emails = find_emails(""This is an example with two emails: john@example.com, and jane@example.com"")
print(emails)","import re

def find_emails(text):
regex = r""([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)""
emails = re.findall(regex, text)
return emails

emails = find_emails(""This is an example with two emails: john@example.com, and jane@example.com"")
print(emails)",Syntax Error,OOP
Write a function to count total characters in a string.,,"def count_charac(str1):
 total = 0
 for i in str1:
    total = total + 1
 return total","def count_charac(str1):
 total = 0
 for i i",Incomplete Answer,String Manipulation
Create a python program that clean up the given text.,Hello \t   world!,"def clean_text(text):
    return text.replace(""\t"", """").strip()","def clean_text(text):
    retur",Incomplete Answer,OOP
Create a web scraper in Python that retrieves the top 10 headlines from a website's news section.,,"import requests
from bs4 import BeautifulSoup

url = 'http://example.com/news'
response = requests.get(url)
soup = BeautifulSoup(response.text, ""html.parser"")

headlines = soup.find_all(""h2"", class_=""headline"")
for headline in headlines[:10]:
 print(headline.string)","import requests
from bs4 import BeautifulSoup

url = 'http://example.com/news'
response = requests.get(url)
soup = BeautifulSoup(response.text, ""html.parser"")

headlines = soup.find_all(""h2"", class_=""headline"")
for headline in headlines[:10]:
 print(headline.string)",Syntax Error,Loops
Write a function to print the first n lucky numbers.,,"def lucky_num(n):
 List=range(-1,n*n+9,2)
 i=2
 while List[i:]:List=sorted(set(List)-set(List[List[i]::List[i]]));i+=1
 return List[1:n+1]","def lucky_num(n):
 List=range(-1,n*n+9,2)
 i=2
 while List[i:]:List=sorted(set(List)-set(List[List[i]::List[i]]));i+=1
 return List[1:n+1]",Syntax Error,OOP
Create a Python dictionary for alphabetical order of numeric input,"[2, 3, 1]","def createDict(arr):
  res = {}
  for i in range(len(arr)):
    res[arr[i]] = i + 1
  return res

d = createDict([2, 3, 1])
print(d)","def createDict(arr)
  res = {}
  for i in range(len(arr))
    res[arr[i]] = i + 1
  return res

d = createDict([2, 3, 1])
print(d)",Syntax Error,Recursion
Compose a Python program to move zeros in a given list to the end.,"[1,0,2,3,0,4,5,0]","def move_zeroes(nums):
    """"""
    Moves all the zeros in a given list to the end.
    @param nums: List
    @return: List
    """"""
    i = 0
    for num in nums:
        if num != 0:
            nums[i] = num
            i += 1
    while i < len(nums):
        nums[i] = 0
        i += 1
    return nums","def move_zeroes(nums):
    """"""
    Moves all the zeros in a given list to the end.
    @param nums: List
    @return: List
    """"""
    i = 0
    for nu",Incomplete Answer,Loops
Create a python program that outputs a given number of random numbers within a given range,"max_num = 100
num_of_nums = 10","import random

def get_n_random_numbers(max_num, num_of_nums):
    random_numbers = []
    for _ in range(num_of_nums):
        random_numbers.append(random.randrange(max_num))
    return random_numbers","import random

def get_n_random_numbers(max_num, num_of_nums):
    random_numbers = []
    for _ in r",Incomplete Answer,String Manipulation
Write a python function to find the difference between sum of even and odd digits.,,"def is_Diff(n): 
    return (n % 11 == 0) ","def is_Diff(n: 
    return (n % 11 == 0 ",Syntax Error,OOP
Write a Python script to query the IMDB database and get all movies released in 2020 with 9 or 10 rating.,,"import requests

API_ENDPOINT = 'https://imdb-api.com/'

# Sending get request and saving the response as response object
resp = requests.get(API_ENDPOINT + 'movie/{' + 'release_date:2020%2Creview:9:10' + '}')

# Extracting data in json format
data = resp.json()

# Printing the output
print(data)","import requests

API_ENDPOINT = 'https://imdb-api.com/'

# Sending get request and saving the response as response object
resp = requests.get(API_ENDPOINT + 'movie/{' + 'release_date:2020%2Creview:9:10' + '}')

# Extracting data in json format
data = resp.json()

# Printing the output
print(data)",correct,File I/O
Out put the first 3 characters of a given string.,Python,"string = ""Python""

print(string[:3])","string = ""Python""

print(string[3])",Syntax Error,Loops
Provide an example of how to generate a key-value Python dictionary from a list.,,"my_list = [1, 2, 3, 4]
my_dict = {list_val:list_val**2 for list_val in my_list}
print(my_dict)
# {1: 1, 2: 4, 3: 9, 4: 16}","my_list = [1, 2, 3, 4]
my_dict = {list_val:list_val**2 for li",Incomplete Answer,String Manipulation
Create a binary search algorithm in Python,,"def binary_search(item, lst):
    start = 0
    end = len(lst) - 1
    while start <= end:
        mid = (start + end) // 2
        if lst[mid] == item:
            return mid
        elif lst[mid] < item:
            start = mid + 1
        else:
            end = mid - 1
    return -1","def binary_search(item, lst):
    start = 0
    end = len(lst) - 1
    while start <= end:
        mid = (start + end) // 2
        if lst[mid] == item:
            return mid
        elif lst[mid] < item:
            start = mid + 1
        else:
            end = mid - 1
    return -1",Syntax Error,OOP
Write a python program to a calculate the area of a circle given its radius.,radius = 8,"import math

radius = 8
area = math.pi * radius * radius
print(area)","import math

radius = 8
area = math.pi * radius * radius
print(area)",Syntax Error,Recursion
"Create a Python class for a calculator that can add, subtract, divide and multiply two numbers.",,"class Calculator:
 
 def __init__(self):
  pass
 
 def add(self, a, b):
  return a + b
 
 def subtract(self, a, b):
  return a - b
 
 def divide(self, a, b):
  return a / b
 
 def multiply(self, a, b):
  return a * b","class Calculator:
 
 def __init__(self):
  pass
 
 def add(self, a, b):
  return a + b
 
 def subtract(self,",Incomplete Answer,Loops
Generate a Python program that counts the number of words and the average word length in a given sentence.,,"def count_words(sentence):
  words = sentence.split()
  num_words = len(words)
  total_len = 0
  for word in words:
    total_len += len(word)
  avg_word_len = total_len / num_words
  return (num_words, avg_word_len)","def count_words(sentence):
  words = sentence.split()
  num_words = len(words)
  total_len = 0
  for word in",Incomplete Answer,Loops
Write an optimized sequential search algorithm in Python that takes a list of numbers and a target number as input and returns the index of the target if it exists in the list.,"[1, 2, 3, 4, 5, 6], target = 4","def find_target(nums, target):
  for i in range(len(nums)):
    if nums[i] == target:
      return i
  return -1","def find_target(nums, target)
  for i in range(len(nums))
    if nums[i] == target
      return i
  return -1",Syntax Error,Loops
Edit the following Python code to remove duplicate values in the given array.,"arr = [1, 2, 4, 2, 5, 4]","arr = [1, 2, 4, 5]
 
unique_arr = []
 
for element in arr:
    if element not in unique_arr:
        unique_arr.append(element)
 
print(unique_arr) # [1, 2, 4, 5]","arr = [1, 2, 4, 5]
 
unique_arr = []
 
for element in arr:
    if element not in ",Incomplete Answer,String Manipulation
Optimize a Python program for calculating the sum of the first N numbers.,n = 20,"def get_sum(n):
    return (n*(n+1)) // 2

n = 20
sum_of_num = get_sum(n)

print(""Sum of first"", n, ""numbers is"", sum_of_num)","def get_sum(n):
    return (n*(n+1)) // 2

n = 20
sum_of_num = get_sum(n)

print(""Sum of first"", n, ""numbers is"", sum_of_num)",correct,Recursion
Create a python program for creating a dictionaries of char count in a given string.,"string = ""Hello World""","def get_char_count(s):
    """"""
    This function returns a dictionary of character count in a given string.
    :param s: string
    :return: dictionary
    """"""
    char_count = dict()
    for char in s:
        if char not in char_count.keys():
            char_count[char] = 1
        else:
            char_count[char] += 1
    return char_count","def get_char_count(s):
    """"""
    This function returns a dictionary of character count in a given string.
    :param s: string
    :return: dictionary
    """"""
    char_coun",Incomplete Answer,Recursion
Debug existing Python code to update a field in a table.,"Context:

Table: records

Columns: id, name, value

# Incorrect Python code
cur.execure('UPDATE records SET value = ? WHERE name = ?', (value, name))","cur.execute('UPDATE records SET value = ? WHERE name = ?', (value, name))
conn.commit() # Added statement to commit changes to the database.","cur.execute('UPDATE records SET value = ? WHERE name = ?', (value, name))
conn.commit() # Added statement to commit changes to the database.",correct,Recursion
Create an AI assistant in Python that can tell jokes.,,"import random

jokes = [
   'Why did the chicken cross the playground? To get to the other slide!',
   'Why did the monkey fall out of the tree? Because it was dead!',
   'Why did the dinosaur go to the dentist? Because he had a toothache!'
]

def tell_joke():
   joke = random.choice(jokes)
   print(joke)

tell_joke()","import random

jokes = [
   'Why did the chicken cross the playground? To get to the other slide!',
   'Why did the monkey fall out of the tree? Because it was",Incomplete Answer,String Manipulation
Can you build an algorithm in Python to check whether a given number is a prime or not?,7,"def is_prime(num):
    if num < 2:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

print(is_prime(7))","def is_prime(num):
    if num < 2:
        return False
    for i in range(2, num):
",Incomplete Answer,Recursion
Develop a function to delete duplicates from a given string in Python.,"string=""mississippi""","def remove_duplicates(string):
    new_string = """"
    for char in string:
        if char not in new_string:
            new_string += char
    return new_string

no_duplicates = remove_duplicates(""mississippi"")
print(no_duplicates)","def remove_duplicates(string):
    new_string = """"
    for char in string:
        if char not in new_string:
            new_string += char
    return new_string

no_duplicates = remove_duplicates(""mississippi"")
print(no_duplicates)",correct,String Manipulation
Create a user input validation in Python to restrict user input to a number between 0 and 10.,,"def validate_input(user_input):
  if user_input < 0 or user_input > 10:
    raise ValueError('Input should be between 0 and 10')
  else:
    return user_input

# take user input
user_input = int(input('Enter a number between 0 and 10: '))

# validate and print the result
validated_input = validate_input(user_input)
print('Validated input: ', validated_input)","def validate_input(user_input):
  if user_input < 0 or user_input > 10:
    raise ValueError('Input should be between 0 and 10')
  else:
    return user_input

# take user input
us",Incomplete Answer,OOP
Create a lambda expression in Python to filter a list of integer greater than 50.,"[45, 12, 52, 89, 33, 99]","list1 = [45, 12, 52, 89, 33, 99]
filtered_list = list(filter(lambda x: x > 50, list1))

print(filtered_list)","list1 = [45, 12, 52, 89, 33, 99]
filtered_list = list(filter(lambda x: x > 50, list1))

print(filtered_list)",correct,Recursion
Suggest a way to get a substring of a given string in Python.,,"def substring(string, start, end):
    '''This function takes a string, start index and end index, and returns the substring between the two given indexes.'''
    return string[start:end]","def substring(string, start, end):
    '''This function takes a string, start index and end index, and returns the substring between the two given indexes.'''
    return string[start:end]",Syntax Error,File I/O
Develop a Python program to check if a list contains any duplicates,"nums = [1, 4, 5, 1]","def contains_duplicates(nums):
    seen = set()
    for num in nums:
        if num in seen:
            return True
        seen.add(num)
    return False

if __name__ == '__main__':
    nums = [1, 4, 5, 1]
    contains = contains_duplicates(nums)
    if contains:
        print('The list contains duplicates.')
    else:
        print('The list doesn\'t contain duplicates.')","def contains_duplicates(nums):
    seen = set()
    for num in nums:
        if num in seen:
            return True
        seen.add(num)
    return False

if __name__ == '__main__':
    nums = [1, 4, 5, 1]
    contains = contains_duplicates(nums)
    if contains:
        print('The list contains duplicates.')
    else:
        print('The list doesn\'t contain duplicates.')",correct,Loops
Generate a program in Python that will check if a given number is a palindrome.,123321,"def is_palindrome(n):
 n = str(n)
 
 return n == n[::-1]
 
num = 123321
if is_palindrome(num):
 print(f""{num} is a palindrome"")
else:
 print(f""{num} is not a palindrome"")","def is_palindrome(n):
 n = str(n)
 
 return n == n[::-1]
 
num = 123321
if is_palindr",Incomplete Answer,Loops
Write a function to find the maximum value in a given heterogeneous list.,,"def max_val(listval):
     max_val = max(i for i in listval if isinstance(i, int)) 
     return(max_val)","def max_val(listval):
     max_val = max(i for i in ",Incomplete Answer,File I/O
Develop a web scraper in Python which can extract information from HTML page.,,"import requests
from bs4 import BeautifulSoup
 
def scrape_data(url):
 response = requests.get(url)
 
 if response.status_code == 200:
  html_data = response.text
  soup = BeautifulSoup(html_data, 'html.parser')
  
  # extract data here
 
 else:
  print(""Invalid response!"")
 
scrape_data('https://example.com')","import requests
from bs4 import BeautifulSoup
 
def scrape_data(url):
 response = requests.get(url)
 
 if response.status_code == 200:
  html_data = response.text
  soup = BeautifulSoup(html_data, 'html.parser')
  
  # extract data here
 
 else:
  print(""Invalid response!"")
 
scrape_data('https://example.com')",correct,String Manipulation
Write an algorithm in Python to find the number of inversions in an array.,,"def countInversions(arr):
	# To store counts of inversions
	count = 0

	# Iterating from first element
	for i in range(len(arr)):
		# To find number of elements smaller than arr[i]
		# which are on right side of arr[i]
		for j in range(i + 1, len(arr)):
			if arr[i] > arr[j]:
				count += 1
	return count","def countInversions(arr):
	# To store counts of inversions
	count = 0

	# Iterating from first element
	for i in range(len(arr)):
		# To find number of ",Incomplete Answer,Recursion
Write a function in Python that takes a list of words as an argument and outputs a string of comma separated words.,"words = ['cat', 'dog', 'bird']","def listToString(words):
 return ', '.join(words)",def listToString(words):,Incomplete Answer,String Manipulation
Generate a code snippet in Python to convert a given number to its binary format.,245,"def toBinary(num):
   result = """"
   while num > 0:
      result = str(num % 2) + result
      num = num // 2
   return result

print(toBinary(245))  # output: 11110101","def toBinary(num):
   result = """"
   while num > 0:
      result = str(num % 2) + result
      num = num // 2
   return result

print(toBinary(245))  # output: 11110101",correct,Recursion
Write a python program to classify the source of an error.,Error message: Connection timed out,"def classify_error(message):
    if 'Connection timed out' in message:
        return 'Network'
    else:
        return 'Other'","def classify_error(message):
    if 'Connection timed out' in message:
        return 'Network'
    else:
        return 'Other'",correct,Loops
Construct a machine learning model in Python for predicting the prices of apartments in your city.,,"#Import Data
import pandas as pd
data = pd.read_csv(‘data.csv’)

#Prepare Data
X = data[['size', 'location', 'bedrooms']]
y = data['price']

#Train Model
from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X,y)

#Test Model
test_X = [[1500, 'downtown', 3]]
test_y = model.predict(test_X)
print(test_y)","#Import Data
import pandas as pd
data = pd.read_csv(‘data.csv’)

#Prepare Data
X = data[['size', 'location', 'bedrooms']]
y = data['price']

#Train Model
from sklearn.l",Incomplete Answer,File I/O
Read the following data structure and create an equivalent dictionary in Python.,"height: 150cm
age: 20
name: John","data = {
    'height': '150cm',
    'age': 20,
    'name': 'John'
}","data = {
    'height': '150cm',
    'age': 20,
    'name': 'John'
}",Syntax Error,String Manipulation
Generate a Python program to test the equality of two given strings,"St1= ""Python""
St2= ""Programming""","if st1 == st2:
    print(""Strings are equal."")
else:
    print(""Strings are not equal."")","if st1 == st2:
    print(""Strings are equal."")
else:
    print(""Strings are not equal."")",correct,File I/O
Create a Python program to display a multiplication table of size n x n.,3,"n = 3

for i in range(1, n+1):
    for j in range(1, n+1):
        print(f'{i} x {j} = {i*j}', end='\t')
    print()","n = 3

for i in range(1, n+1)
    for j in range(1, n+1)
        print(f'{i} x {j} = {i*j}', end='\t')
    print()",Syntax Error,String Manipulation
Write a Python program to call a given API with an input parameter and store the result in a variable.,"API URL: ""https://example.org/api?name=test""","import requests

url = 'https://example.org/api?name=test'
response = requests.get(url)
data = response.json()
result = data['result']","import requests

url = 'https://example.org/api?name=test'
response = requests.get(url)
data = response.json()
result = data['result']",correct,Recursion
Write a function to find the longest chain which can be formed from the given set of pairs.,,"class Pair(object): 
	def __init__(self, a, b): 
		self.a = a 
		self.b = b 
def max_chain_length(arr, n): 
	max = 0
	mcl = [1 for i in range(n)] 
	for i in range(1, n): 
		for j in range(0, i): 
			if (arr[i].a > arr[j].b and
				mcl[i] < mcl[j] + 1): 
				mcl[i] = mcl[j] + 1
	for i in range(n): 
		if (max < mcl[i]): 
			max = mcl[i] 
	return max","class Pair(object) 
	def __init__(self, a, b) 
		self.a = a 
		self.b = b 
def max_chain_length(arr, n) 
	max = 0
	mcl = [1 for i in range(n)] 
	for i in range(1, n) 
		for j in range(0, i) 
			if (arr[i].a > arr[j].b and
				mcl[i] < mcl[j] + 1) 
				mcl[i] = mcl[j] + 1
	for i in range(n) 
		if (max < mcl[i]) 
			max = mcl[i] 
	return max",Syntax Error,File I/O
Design a function in Python that computes the area of a triangle given its base length and height.,base_length = 8,"def triangle_area(base_length, height):
    area = 0.5 * base_length * height
    return area","def triangle_area(base_length, height):
    ar",Incomplete Answer,OOP
Create a Python program that takes in an array and returns an array with each element multiplied by two.,"[2, 3, 4]","def double_array_elements(arr):
    new_arr = []
    for num in arr:
        new_arr.append(num * 2)
    return new_arr

arr = [2, 3, 4]

new_arr = double_array_elements(arr)
print(new_arr) # [4, 6, 8]","def double_array_elements(arr):
    new_arr = []
    for num in arr:
        new_arr.append(num * 2)",Incomplete Answer,OOP
Write a function to find the lateral surface area of a cylinder.,,"def lateralsuface_cylinder(r,h):
  lateralsurface= 2*3.1415*r*h
  return lateralsurface","def lateralsuface_cylinder(r,h):
  lateralsurface= 2*3.1415*r*h
  return lateralsurface",Syntax Error,String Manipulation
Write a Python function to sort the given list of tuples based on their second elements.,,"def sort_tuples_by_second(tuples):
 tuple_order = sorted(tuples, key=lambda x: x[1])
 return tuple_order","def sort_tuples_by_second(tuples):
 tuple_order = so",Incomplete Answer,File I/O
"Pick two languages from Python, Java, C++ and Go. Write a function in both languages that takes in two integer numbers and returns the sum of them.",,"#Python

def add(a, b):
 return a + b

#Java

public static int add(int a, int b) {
 return a + b;
}

#C++

int add(int a, int b) {
 return a + b;
}

#Go

func add(a int, b int) int {
 return a + b
}","#Python

def add(a, b):
 return a + b

#Java

public static int add(int a, int b) {
 return a + b;
",Incomplete Answer,Recursion
Write a Python program to generate random passwords of length 8.,,"import random

def generate_password(): 
    s = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@#$0123456789""
    p =  """".join(random.sample(s,8))
    return p

print(generate_password())","import random

def generate_password() 
    s = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@#$0123456789""
    p =  """".join(random.sample(s,8))
    return p

print(generate_password())",Syntax Error,Recursion
Come up with a python program to find the longest common prefix in a list of strings.,"[""hello"", ""hey"", ""hi"", ""have""]","def longest_common_prefix(strings):
    if len(strings) == 0: 
        return ''

    prefix = strings[0]
    for s in strings:
        i = 0 
        while i < len(prefix) and i < len(s) and s[i] == prefix[i]: 
            i += 1 
        prefix = prefix[:i] 
    return prefix 

print(longest_common_prefix([""hello"", ""hey"", ""hi"", ""have""]))  # Output: h","def longest_common_prefix(strings):
if len(strings) == 0: 
    return ''

prefix = strings[0]
for s in strings:
    i = 0 
    while i < len(prefix) and i < len(s) and s[i] == prefix[i]: 
        i += 1 
    prefix = prefix[:i] 
return prefix 

print(longest_common_prefix([""hello"", ""hey"", ""hi"", ""have""]))  # Output: h",Syntax Error,File I/O
"Create a function in Python that takes two parameters, an array and an integer, and returns a new array with all of the elements of the array multiplied by the integer.","array = [1, 2, 3]
int = 4","def multiply_by_int(array, int):
    new_array = []
    for elem in array:
        new_array.append(elem * int)
    return new_array","def multiply_by_int(array, int):
    new_array = []
    for elem in array:
        new_array.append(elem * int)
    return new_array",correct,Recursion
Generate a Python function that takes a list of strings and returns a dictionary with each string as the key and the length of the string as the value.,"['one', 'two', 'three', 'four']","def count_lengths(strings):
  return {string : len(string) for string in strings}

strings = ['one', 'two', 'three', 'four']

print(count_lengths(strings))
# Output: {'one': 3, 'two': 3, 'three': 5, 'four': 4}","def count_lengths(strings):
  return {string : len(string) for string in strings}

strings = ['one', 'tw",Incomplete Answer,Recursion
Create an algorithm in Python to calculate the Fibonacci sequence up to n terms.,,"def f_Fibonacci(n): 
  a = 0
  b = 1
  if n < 0: 
    print(""Incorrect input"") 
  elif n == 0: 
    return a 
  elif n == 1: 
    return b 
  else: 
    for i in range(2,n): 
      c = a + b 
      a = b 
      b = c 
    return b","def f_Fibonacci(n): 
  a = 0
  b = 1
  if n < 0: 
print(""Incorrect input"") 
  elif n == 0: 
return a 
  elif n == 1: 
return b 
  else: 
for i in range(2,n): 
  c = a + b 
  a = b 
  b = c 
return b",Syntax Error,String Manipulation
Clean the following dataset using Python to remove any irrelevant entries.,"data = [
    [1, 'John', 'Apple'],
    [2, 'Allan', ''],
    [3, 'Kim', 'Orange'],
    [4, '', 'Banana'],
    [5, 'Sam', 'Kiwi']
]","def clean_data(data):
    cleaned_data = []
    for row in data:
        if row[1] != '' and row[2] != '':
            cleaned_data.append(row)
    
    return cleaned_data","def clean_data(data):
    cleaned_data = []
    for row in data:
        if row[1] != ",Incomplete Answer,Loops
Generate a list of distinct values from an array of integers using a python program.,"[50, 20, 30, 40, 10]","unique_list = list(set([50, 20, 30, 40, 10]))
print(unique_list)","unique_list = list(set([50, 20, 30, 40, 10]))
pritn(unique_list)",Syntax Error,Recursion
Develop a code to sort the following  Python dictionary by its values from low to high.,"students = {
    'Jacob': 95.5, 
    'Leah': 91.8,
    'Sebastian': 98.4,
    'David': 95.1,
    'Joseph': 90.4
}","def sort_dict_by_values(students):
    sorted_students = sorted(students, key=students.get)
    return [sorted_students, [students[key] for key in sorted_students]]

print(sort_dict_by_values(students))","def sort_dict_by_values(students):
    sorted_students = sorted(students, key=students.get)
    return [sorted_students, [students[key] for key in sorted_students]]

print(sort_dict_by_values(students))",correct,File I/O
Generate a Python program to identify the last occurrence of an element in a list.,"element: 8
list: [3, 1, 4, 5, 8, 6, 8]","def last_occurrence(x, lst):
  last_index = -1
  for i in range(len(lst)):
    if lst[i] == x:
      last_index = i
  return last_index","def last_occurrence(x, lst):
  last_index = -1
  for i in range(len(lst)):
    if lst[i] == x:
      last_index = i
  return last_index",correct,Recursion
Write a function to match two words from a list of words starting with letter 'p'.,,"import re
def start_withp(words):
 for w in words:
        m = re.match(""(P\w+)\W(P\w+)"", w)
        if m:
            return m.groups()","import re
def start_withp(words):
 for w in words:
        m = re.m",Incomplete Answer,OOP
Develop a Python script to print the prime factors of a given positive integer.,,"def primeFactors(n): 
      
    factors = []
    while n % 2 == 0: 
        factors.append(2) 
        n = n / 2
  
    for i in range(3, int(sqrt(n))+1, 2): 
          
        while n % i== 0: 
            factors.append(i) 
            n = n / i 
          
    if n > 2: 
        factors.append(n) 
  
    return factors 
  
n = 315
print(primeFactors(n))","def primeFactors(n) 
      
    factors = []
    while n % 2 == 0 
        factors.append(2) 
        n = n / 2
  
    for i in range(3, int(sqrt(n))+1, 2) 
          
        while n % i== 0 
            factors.append(i) 
            n = n / i 
          
    if n > 2 
        factors.append(n) 
  
    return factors 
  
n = 315
print(primeFactors(n))",Syntax Error,File I/O
Write a function to extract elements that occur singly in the given tuple list.,,"def extract_singly(test_list):
  res = []
  temp = set()
  for inner in test_list:
    for ele in inner:
      if not ele in temp:
        temp.add(ele)
        res.append(ele)
  return (res) ","def extract_singly(test_list):
  res = []
  temp = set()
  for inner in test_list:
    for ele i",Incomplete Answer,Recursion
Create a Python script that takes a list of integers and finds the highest value.,"[2, 5, 3, 4, 8]","The highest value is 8.

list_ints = [2, 5, 3, 4, 8]

highest_value = max(list_ints)

print('The highest value is ' + str(highest_value) + '.')","The highest value is 8.

list_ints = [2, 5, 3, 4, 8]

highest_value = max(list_ints)

print('The highest value is ' + str(highest_value) + '.')",correct,String Manipulation
Create a program in Python to to compute the sum of all the numbers present in a given string.,string = 'The sum of 5 and 9 is 14',"def sum_of_numbers_in_string(string):
    number_list = []
    for word in string.split(' '):
        if word.isdigit():
            number_list.append(int(word))

    return sum(number_list)","def sum_of_numbers_in_string(string):
number_list = []
for word in string.split(' '):
    if word.isdigit():
        number_list.append(int(word))

return sum(number_list)",Syntax Error,File I/O
Create a CGI script in Python to process form data from an HTML page.,,"#!/usr/bin/env python
 
import cgi
 
#Get form data
form = cgi.FieldStorage()
 
name = form.getvalue('name')
age = form.getvalue('age')

# Display the results
print ""Content-type: text/html""
print
print ""<html>""
print ""<body>""
print ""<p>Hi, %s! You are %s years old.</p>"" % (name, age)
print ""</body>""
print ""</html>""","#!/usr/bin/env python
 
import cgi
 
#Get form data
form = cgi.FieldStorage()
 
name = form.getvalue('name')
age = form.getvalue('age')

# Display the results",Incomplete Answer,Recursion
Create a PDF document from a Word document using Python.,word file,"import win32com.client

# word file to be converted
wordFile =  r'filename.docx'

# Open the word file
word = win32com.client.Dispatch(""Word.Application"")
doc = word.Documents.Open(wordFile)

# Set the pdf parameters
pdf_format_id = 17
file_name = r'filename.pdf'

# Save the file as pdf
doc.SaveAs(file_name, FileFormat=pdf_format_id)

# Close the word file
word.Quit()","import win32com.client

# word file to be converted
wordFile =  r'filename.docx'

# Open the word file
word = win32com.client.Dispatch(""Word.Application"")
doc = word.Documents.Open(wordFile)

# Set the pdf parameters
pdf_format_id = 17
file_name = r'filename.pdf'

# Save the file as pdf
doc.SaveAs(file_name, FileFormat=pdf_format_id)

# Close the word file
word.Quit()",Syntax Error,File I/O
Design a program in Python that outputs the N-th Fibonacci number.,,"def nth_fibonacci_number(n):
    if n == 0:
        return 0
    if n == 1:
        return 1
    
    a = 0
    b = 1
    for i in range(2, n+1):
        c = a + b
        a = b
        b = c
    
    return c","def nth_fibonacci_number(n:
    if n == 0:
        return 0
    if n == 1:
        return 1
    
    a = 0
    b = 1
    for i in range(2, n+1:
        c = a + b
        a = b
        b = c
    
    return c",Syntax Error,Loops
Write a python function to count number of cubes of size k in a cube of size n.,,"def No_of_cubes(N,K):
    No = 0
    No = (N - K + 1)
    No = pow(No, 3)
    return No","def No_of_cubes(N,K):
    No = 0
    No = (",Incomplete Answer,Loops
Create a Python program to find the n'th Fibonacci number.,,"def fibonacci_number(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return (fibonacci_number(n-1) + fibonacci_number(n-2))

n = int(input(""Enter the n'th Fibonacci number: ""))

print(""Fibonacci number at %d is: %d"" % (n,fibonacci_number(n)))","def fibonacci_number(n)
    if n == 0
        return 0
    elif n == 1
        return 1
    else
        return (fibonacci_number(n-1) + fibonacci_number(n-2))

n = int(input(""Enter the n'th Fibonacci number ""))

print(""Fibonacci number at %d is %d"" % (n,fibonacci_number(n)))",Syntax Error,String Manipulation
Edit the following Python program to take user input.,"name = ""John""
print(""Hello World"")","name = input(""Please enter your name: "")
print(""Hello {name}"".format(name=name))","name = input(""Please enter your name: "")",Incomplete Answer,OOP
Write a python function to find sum of products of all possible subarrays.,,"def sum_Of_Subarray_Prod(arr,n):
    ans = 0
    res = 0
    i = n - 1
    while (i >= 0):
        incr = arr[i]*(1 + res)
        ans += incr
        res = incr
        i -= 1
    return (ans)","def sum_Of_Subarray_Prod(arr,n):
    ans = 0
    res = 0
    i = n - 1
    while (i >= 0):
        incr = arr[i]*(1 + res)
        ans += incr
        res = incr
        i -= 1
    return (ans)",correct,OOP
Construct a Python class with the following atributes and methods.,"Attributes: name, ID
Methods: setName, setID, getName, getID","class MyClass:
    def __init__(self):
        self.name = """"
        self.ID = 0
 
    def setName(self, name):
        self.name = name
    
    def setID(self, ID):
        self.ID = ID
 
    def getName(self):
        return self.name
 
    def getID(self):
        return self.ID","class MyClass:
    def __init__(self):
        self.name = """"
        self.ID = 0
 
    def setName(self, name):
        self.name = name
    
    def setID(self, ID):
        self.ID = ID
 
    def getName(self):
        return self.name
 
    def getID(self):
        return self.ID",correct,Loops
Generate a Python class to check whether a string contains all the vowels or not.,,"class CheckVowel():
    def __init__(self, string):
        self.string = string

    def check_vowel(self):
        vowels = ""aeiouAEIOU""
        for char in self.string:
            if char not in vowels:
                return False
        return True","class CheckVowel():
    def __init__(self, string):
        self.string = string

    def check_vowel(self):
        vowels = ""aeiouAEIOU""
        for char in self.string:
            if char not in vowels:
                return False
        return True",correct,Loops
Create a Python program to group words of the same length together,"words = ['hello', 'world', 'word', 'whale', 'panda']","def group_words(words):
    # Function to group words of the same length together
    groups = {}
    
    for word in words:
        length = len(word)
        if length not in groups:
            groups[length] = []
        groups[length].append(word)
    return groups","def group_words(words):
# Function to group words of the same length together
groups = {}

for word in words:
    length = len(word)
    if length not in groups:
        groups[length] = []
    groups[length].append(word)
return groups",Syntax Error,Loops
Create a Python program to generate a list of random integers with the size,5,"import random

def generate_random_int_list(n):
  return [random.randint(0,10) for i in range(n)]","import random

def generate_random_int_list(n)
  return [random.randint(0,10) for i in range(n)]",Syntax Error,Recursion
Design a class in Python that stores student information.,,"class Student:
    def __init__(self, name, age, class_name, grade):
        self.name = name
        self.age = age
        self.class_name = class_name
        self.grade = grade

    def get_name(self):
        return self.name 
    
    def get_age(self):
        return self.age

    def get_class_name(self):
        return self.class_name

    def get_grade(self):
        return self.grade","class Student:
    def __init__(self, name, age, class_name, grade):
        self.name = name
        self.age = age
        self.class_name = class_name
        self.grade = grade

    def get_name",Incomplete Answer,String Manipulation
"Generate a Python dictionary from two arrays, such that the first array serves as keys and the second array serves as values.","keys = ['name', 'age', 'gender']
values = ['John', 24, 'male']","my_dict = {
    'name': 'John',
    'age': 24,
    'gender': 'male'
}","my_dict = {
    'name': 'John',
    'age': 24,
    'gender': 'male'
}",Syntax Error,Recursion
Develop a Python program to clearly understand the concept of recursion.,,"# This program is to understand recursion in Python.

# Define a recursive function to calculate the factorial of a number
def factorial(n):
   if n == 1:
      return 1
   else:
      return n * factorial(n - 1)

# Calculate factorial of number 5
result = factorial(5)
print(""Factorial of 5 is "", result) 

# Output: Factorial of 5 is 120","# This program is to understand recursion in Python.

# Define a recursive function to calculate the factorial of a number
def factorial(n):
   if n == 1:
      return 1",Incomplete Answer,OOP
Write a Python program to search an element in a list using linear search.,,"def linear_search(lst, x):
    for i in range(len(lst)):
        if lst[i] == x:
            return i
 
    return -1","def linear_search(lst, x):
    for i in range(len(lst)):
 ",Incomplete Answer,Recursion
Write a Python program to encrypt a sentence using substitution cipher.,"""Hello, world!""","def encrypt(text):
    encrypted_text = """"
    for letter in text:
        if letter.isalpha(): 
            encrypted_text += chr(ord(letter) + 2)
        else:
            encrypted_text += letter

    return encrypted_text

text = ""Hello, world!""
encrypted_text = encrypt(text)
print(encrypted_text)","def encrypt(text):
    encrypted_text = """"
    for letter in text:
        if letter.isalpha(): 
            encrypted_text += chr(ord(letter) + 2)
        else:
            encrypted_text += letter

    return encrypted_text

text = ""Hello, world!""
encrypted_text = encrypt(text)
print(encrypted_text)",correct,Loops
Write a python function to check whether the given array is monotonic or not.,,"def is_Monotonic(A): 
    return (all(A[i] <= A[i + 1] for i in range(len(A) - 1)) or
            all(A[i] >= A[i + 1] for i in range(len(A) - 1))) ","def is_Monotonic(A): 
    return (all(A[i] <= A[i + 1] for i in range(len(",Incomplete Answer,OOP
"Write a function in Python that takes two parameters ""n"" and ""k"" and returns the number of ways to jump ""k"" steps, starting from 0, taking 1 or 2 steps at a time, and not going beyond n.","n = 4, k = 4","def steps(n, k):
 if k == 0 or n == k:
  return 1
 if n > k:
  return steps(n-1, k-1) + steps(n-2, k-1)
 else:
  return 0","def steps(n, k):
 if k == 0 or n == k:
  return 1
 if n > k:",Incomplete Answer,OOP
Can you write a Python3 program to calculate the number of times a character appears in a given string?,"""Hello World!""","str1 = ""Hello World!""

char = 'l'
count = 0

for i in str1:
     if i == char:
          count = count + 1

# Print the result 
print (f'The character {char} appears {count} times in the string {str1}')","str1 = ""Hello World!""

char = 'l'
count = 0

for i in str1:
     if i == char:
          count = coun",Incomplete Answer,File I/O
Generate a Python class to represent a 3-dimensional vector.,,"class Vector3D:
    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z
    
    def length(self):
        return (self.x**2 + self.y**2 + self.z**2)**0.5","class Vector3D:
    def __init__(self, x, y, z):
        self.x = x
        self.y = y
       ",Incomplete Answer,Recursion
Convert a given list of integers to a string in Python.,"[56, 23, 7]","def list_to_string(int_list):
  return ' '.join(str(x) for x in int_list)

int_list = [56, 23, 7]
print(list_to_string(int_list))","def list_to_string(int_list):
  return ' '.join(str(x) for x in int_list)

int_list = [56, 23, 7]
print(list_to_string(int_list))",correct,OOP
Generate a Python method to format a given string in the desired manner.,"""I am learning python""","def format_string(string):
  return string.lower().title()","def format_string(string):
  return string.lower().title()",Syntax Error,OOP
Create a Python dictionary from two given lists.,"list1 = ['a', 'b', 'c'] 
list2 = [1, 2, 3]","dict1 = dict(zip(list1, list2)) 
print(dict1)","dict1 = dict(zip(list1, list2)) 
print(dict1)",correct,String Manipulation
Create a Python program to make a copy of an array.,,"""""""
Create a Python program to make a copy of an array. 
""""""

def copy_array(arr):
    return arr[:]

if __name__ == '__main__':
    arr = [1,2,3,4,5]
    print(copy_array(arr))","""""""
Create a Python program to make a copy of an array. 
""""""

def copy_array(arr):
    r",Incomplete Answer,OOP
Identfy the techniques used in the code snippet to achieve concurrent execution.,"import threading 

 def func1():","The code snippet uses the threading module from Python to achieve concurrent execution. This is done by using the Thread class to create new threads and using the start() method to start each thread. The Thread class also provides methods for synchronization and communication between the threads, such as the Lock and Condition Objects.","The code snippet uses the threading module from Python to achieve concurrent execution. This is done by using the Thread class to create new threads and using the start( method to start each thread. The Thread class also provides methods for synchronization and communication between the threads, such as the Lock and Condition Objects.",Syntax Error,Recursion
Create a decision tree classifier in Python to distinguish cats and dogs.,,"import numpy as np
from sklearn import tree

# Create the data
x = np.array([[0, 0], [1, 1]])
y = np.array([0, 1])

# Train the tree
clf = tree.DecisionTreeClassifier()
clf = clf.fit(x, y)","import numpy as np
from sklearn import tree

# Create the data
x = np.array([[0, 0], [1, 1]])
y = np.array([0, 1])

# Train the tree
clf = tree.DecisionTreeClassifier()
clf = clf.fit(x, y)",correct,OOP
Create a code that would prompt the user for a given number and print out the Python equivalent of the given number.,number = 10,"def user_number(number):
    number_py = '{}'.format(number)
    print(""The Python equivalent of {} is {}"".format(number, number_py))","def user_number(number):
    number_py = '{}'.format(number)
    p",Incomplete Answer,Recursion
Rewrite this JavaScript code in Python.,"let arr = [1, 2, 3, 4, 5]
arr.forEach(function(element) {
    console.log(element * 2)
});","arr = [1, 2, 3, 4, 5]
for element in arr:
   print(element * 2)","arr = [1, 2, 3, 4, 5]
for element in arr:
   print(element * 2)",correct,Recursion
Create a program in Python to simulate the queue data structure.,,"class Queue(object):
    def __init__(self):
        self.items = []

    def isEmpty(self):
        return self.items == []

    def enqueue(self, item):
        self.items.insert(0, item)

    def dequeue(self):
        return self.items.pop()

    def size(self):
        return len(self.items)","class Queue(object)
    def __init__(self)
        self.items = []

    def isEmpty(self)
        return self.items == []

    def enqueue(self, item)
        self.items.insert(0, item)

    def dequeue(self)
        return self.items.pop()

    def size(self)
        return len(self.items)",Syntax Error,Recursion
Create a python program to cluster a given dataset using K-Means clustering.,,"""""""
Cluster a given dataset using K-Means clustering
""""""
import numpy as np
from sklearn.cluster import KMeans

def cluster_dataset(X, n_clusters):
    kmeans = KMeans(n_clusters=n_clusters, random_state=0).fit(X)
    return kmeans.labels_

if __name__ == '__main__':
    X = np.array([[1, 2], [1, 4], [1, 0],
                [10, 2], [10, 4], [10, 0]])
    print(cluster_dataset(X, n_clusters=2))","""""""
Cluster a given dataset using K-Means clustering
""""""
import numpy as np
from sklearn.cluster import KMeans

def cluster_dataset(X, n_clusters):
    kmeans = KMeans(n_clusters=n_clusters, random_",Incomplete Answer,Loops
Create an algorithm in Python to implement insertion sort.,,"def insertionSort(array): 
    for i in range(1, len(array)): 
        key = array[i] 
        j = i-1
        while j >=0 and key < array[j] : 
                array[j+1] = array[j] 
                j -= 1
        array[j+1] = key 
  
array = [12, 11, 13, 5, 6] 
insertionSort(array) 

print(array)","def insertionSort(array): 
    for i in range(1, len(array)): 
        key = array[i] 
        j = i-1
        while j >=0 and key < array[j] : 
    ",Incomplete Answer,OOP
Create a python program to find the length of the longest run of 1s in the binary form of a positive integer.,,"def longest_run_of_ones(n):
    max = 0
    count = 0
    while n > 0:
        if n % 2 == 1:
            count += 1
        else:
            if count > max:
                max = count
            count = 0
        n //= 2
    if count > max:
        max = count
    return max","def longest_run_of_ones(n):
    max = 0
    count = 0
    while n > 0:
        if n % 2 == 1:
            count += 1
        else:
            if count > max:
                max = count
            count = 0
        n //= 2
    if count > max:
        max = count
    return max",correct,OOP
Write a Python program that takes a single integer as input and prints out the table of its multiplication.,,"def print_table(n):
    for i in range(1, 11):
        print('{0} x {1} = {2}'.format(n ,i , n*i))

print_table(4)","def print_table(n)
    for i in range(1, 11)
        print('{0} x {1} = {2}'.format(n ,i , n*i))

print_table(4)",Syntax Error,OOP
Create a Python program to remove repeating numbers from an array.,"[2, 3, 3, 4, 5, 4]","def removeRepeats(arr):
    result = []
    seen = set()
    for num in arr:
        if num not in seen:
            result.append(num)
            seen.add(num)
     return result

res = removeRepeats([2, 3, 3, 4, 5, 4])
print(res)","def removeRepeats(arr):
result = []
seen = set()
for num in arr:
    if num not in seen:
        result.append(num)
        seen.add(num)
 return result

res = removeRepeats([2, 3, 3, 4, 5, 4])
print(res)",Syntax Error,Loops
Write a python program that takes a single argument and returns the first 10 characters of the argument string.,,"# Get the first 10 characters of a string
def get_first_10_chars(string):
 return string[0:10]

str = 'Hello, world!'
print(get_first_10_chars(str))","# Get the first 10 characters of a string
def get_first_10_chars(string):
 return string[0:10]

str = 'Hello, world!'
print(get_first_10_chars(str))",Syntax Error,File I/O
"Given two strings, write a python function to check whether one string is a substring of another.","String1 = ""abc""
String2 = ""abcdef""","def is_substring(string1, string2): 
    if string1 in string2:
        return True
    else:
        return False","def is_substring(string1, string2): 
    if string1 in string2:
        return True
    else:
        return False",Syntax Error,Loops
Design a Python program to determine if a number is odd or even.,,"def is_even(num):
 if num % 2 == 0:
 return True
 else:
 return False

number = int(input(""Enter a number: ""))

if is_even(number):
 print(""The number is even"")
else:
 print(""The number is odd"")","def is_even(num):
 if num % 2 == 0:
 return True
 else:
 return False

number = int(input(""Enter a number: ""))

if is_even(number):
 print(""The number is even"")
else:
 print(""The number is odd"")",correct,File I/O
Design an algorithm in Python to convert a binary string into its decimal representation.,"""1010""","def binaryToDecimals(binary_number):
  decimal = 0
  for i, digit in enumerate(reversed(binary_number)):
    decimal += int(digit) * (2**i)
  return decimal

print (binaryToDecimals(""1010""))  # Output 10","def binaryToDecimals(binary_number):
  decimal = 0
  for i, digit in enumerate(reversed(binary_number)):
    decimal += int(digit) * (2**i)
  return decimal

print (binaryToDecimals(""1010""))  # Output 10",correct,Loops
Write a python function to check whether an array can be sorted or not by picking only the corner elements.,,"def check(arr,n): 
    g = 0 
    for i in range(1,n): 
        if (arr[i] - arr[i - 1] > 0 and g == 1): 
            return False
        if (arr[i] - arr[i] < 0): 
            g = 1
    return True","def check(arr,n): 
    g = 0 
    for i in range(1,n): 
        if (arr[i] - arr[i - 1] > 0 and g == 1): 
            return False
        if (arr[i] - arr[i] < 0): 
            g = 1
    return True",Syntax Error,File I/O
Create a class called Player in Python and add two class methods called attack and defend.,,"class Player:
    
    def __init__(self):
        pass
    
    def attack(self):
        print(""The Player is attacking!"")
    
    def defend(self):
        print(""The Player is defending!"")","class Player:
    
    def __init__(self):
        pass
    
    def attack(self):
        print(""The Player is attacking!"")
    
    def defend(self):
        print(""The Player is defending!"")",correct,OOP
Design a Python program to find the sum of the two largest numbers in a list.,"[1, 3, 5, 7, 9]","def find_sum_of_largest(lst):
  lst.sort()
  return lst[-1] + lst[-2]

print(find_sum_of_largest([1, 3, 5, 7, 9]))","def find_sum_of_largest(lst):
  lst.sort()
  return lst[-",Incomplete Answer,Recursion
Generate a code to create an array in python of size n.,n = 5,array = [None] * n,array = [None] * n,correct,Recursion
"Given a string “Python Exercises”, write a Python function to convert it into “python exercises”.",,"def convert_string(input_string): 
    return input_string.lower()","def convert_string(input_string): 
    return input_string.lower()",correct,File I/O
Use a Python list comprehension to generate a new list which contains only even numbers in the number range from 1 to 10.,,"even_numbers = [x for x in range(1, 11) if x % 2 == 0]","even_numbers = [x for x in range(1, 11) if x % 2 == 0]",Syntax Error,File I/O
Create a function in Python to optimize a cost function using gradient descent.,A cost function of the form f(x) = x^2 + 10.,"def optimize(x, alpha):
 grad = 2 * x
 x = x - alpha * grad
 return x

for i in range(1000):
 x = optimize(x, 0.1) 

print(x) # Output: 0.0","def optimize(x, alpha):
 grad = 2 * x
 x = x - alpha * grad
 return x",Incomplete Answer,Loops
Write a function in Python that takes a single string argument and prints it out in reverse.,"""Hello World!""","def printReverseString(in_str): 
  
    reversed_str = in_str[::-1] 
    print(reversed_str) 

printReverseString(""Hello World!"")","def printReverseString(in_str: 
  
    reversed_str = in_str[::-1] 
    print(reversed_str 

printReverseString(""Hello World!""",Syntax Error,Recursion
Develop a Python code which can search for a name in a list and return the position of the name in the list.,"[""John"", ""Richard"", ""Paul"", ""Ringo""]","def search(name_list, name): 
    for i in range(len(name_list)): 
        if name_list[i] == name: 
            return i 
    return -1","def search(name_list, name): 
    for i in range(len(name_list)): 
 ",Incomplete Answer,String Manipulation
Create a Python dictionary comprehension to remove all odd numbers from the provided list.,"[1, 2, 3, 4, 5]","even_dict = {k: v for k, v in enumerate([1, 2, 3, 4, 5]) if v % 2 == 0}","even_dict = {k: v for k, v in enume",Incomplete Answer,OOP
Write a code to create a class in Python for Employee with two private attributes: first_name and last_name.,,"class Employee:
    
    def __init__(self, first_name, last_name):
        self.__first_name = first_name
        self.__last_name = last_name
    
    @property
    def first_name(self):
        return self.__first_name
    
    @property
    def last_name(self):
        return self.__last_name","class Employee:
    
    def __init__(self, first_name, last_name):
        self.__first_name = first_name
        self.__last_name = last_name
    
    @property
    def first_name(self):
        return self.__first_name
    
    @property
    def last_name(self):
        return self.__last_name",Syntax Error,String Manipulation
"Write a Python program to replace all occurrences of the word ""hello"" with ""hi"".",This is a sentence with hello,"updated_sentence = sentence.replace(""hello"", ""hi"")",updated_sentence = senten,Incomplete Answer,Loops
Improve the following Python program,"def get_product_listing(product_category):
    listings = []
    for product in product_category:
        listings.append(product.get_listing())
    return listings","def get_product_listing(product_category):
    return [product.get_listing() for product in product_category]","def get_product_listing(product_category):
    return ",Incomplete Answer,Recursion
Create a python script to encode a string using Base64,,"import base64

def encode_base64(string):
    encoded_bytes = base64.b64encode(string.encode(""utf-8""))
    return encoded_bytes.decode(""utf-8"")","import base64

def encode_base64(string:
    encoded_bytes = base64.b64encode(string.encode(""utf-8""
    return encoded_bytes.decode(""utf-8""",Syntax Error,Recursion
Develop a recursive solution in Python to calculate the Fibonacci sequence up to the nth term.,n = 7,"def fibonacci_sequence(n): 
    if n <= 1: 
        return n 
    else: 
        return(fibonacci_sequence(n-1) + fibonacci_sequence(n-2)) 

print(""The Fibonacci sequence up to the nth term:"") 
for i in range(7): 
    print(fibonacci_sequence(i))","def fibonacci_sequence(n): 
    if n <= 1: 
        return n 
    else: 
        return(fibonacci_sequence(n-1) + fibonacci_sequence(n-2)) 

print(""The Fibonacci sequence up to the nth term:"") 
for i in range(7): 
    print(fibonacci_sequence(i))",correct,String Manipulation
"Write a Python program that takes two numbers, a and b, and prints the sum of those numbers, (a + b).",,"def add_numbers(a, b):
  print(a + b)

add_numbers(3, 2)","def add_numbers(a, b):
  print(a + b)

add_numbers(3, 2)",correct,String Manipulation
Write a function in Python which takes a number as a parameter and returns the factorial.,5,"def factorial(num):
  if num == 0 or num == 1:
    return 1
  else:
    return num * factorial(num - 1)
  
print(factorial(5))","def factorial(num)
  if num == 0 or num == 1
    return 1
  else
    return num * factorial(num - 1)
  
print(factorial(5))",Syntax Error,Loops
Generate a Python program to find the maximum number in a given set of numbers.,"7, 6, 5, 9, 8","def find_maximum(nums):
    # Initialize the maximum number 
    max_num = nums[0]
    # Loop through the list
    for num in nums:
        # Check if the current number is bigger
        if num > max_num:
            # If it is, save the number
            max_num = num

    return max_num

# call the function
maximum = find_maximum(nums)
print(""The maximum is "" + str(maximum))","def find_maximum(nums):
    # Initialize the maximum number 
    max_num = nums[0]
    # Loop through the list
    for num in nums:
        # Check if the current number is bigger
        if",Incomplete Answer,String Manipulation
Create a function to extract the first key of a given dictionary in Python.,,"def get_first_key(d):
    if d:
        return next(iter(d))
    return None","def get_first_key(d):
    if d:
        return next(iter(d))
    return None",Syntax Error,File I/O
Implement a function in Python to calculate the standard deviation of a list,,"def std_dev(array):
    import math

    mean = sum(array)/len(array)
    sum_of_squared_differences = 0
    for element in array:
        sum_of_squared_differences += (element-mean)**2
    return math.sqrt(sum_of_squared_differences/len(array))","def std_dev(array):
    import math

    mean = sum(array)/len(array)
    sum_of_squared_differences = 0
    for element in",Incomplete Answer,String Manipulation
Write a Python function that takes a list of strings and returns a list of tuples containing each string and the number of characters in that string.,"['foo', 'bar', 'baz']","def list_to_tuples(words):
    # create an empty list
    result = []

    # create a tuple for each string
    for word in words:
        result.append((word, len(word)))
    
    return result

result = list_to_tuples(['foo', 'bar', 'baz'])
print(result)","def list_to_tuples(words):
    # create an empty list
    result = []

    # create a tuple for each string
    for word in words:
        result.append((word, len(word)))
    
    return result

result = list_to_tuples(['foo', 'bar', 'baz'])
pritn(result)",Syntax Error,String Manipulation
Write a Python program that creates a new dictionary from two existing dictionaries.,"dict1 = {'a':1, 'b':2, 'c':3} 
dict2 = {'d':4, 'e':5, 'f':6}",dict3 = {key:dict1[key] if key in dict1 else dict2[key] for key in (dict1.keys() | dict2.keys())},dict3 = {keydict1[key] if key in dict1 else dict2[key] for key in (dict1.keys() | dict2.keys())},Syntax Error,OOP
Create variables in Python to store the number of cats and dogs in a household.,,"num_cats = 0
num_dogs = 0",num_cats = 0,Incomplete Answer,File I/O
Write a python code to create a dictionary that has the first 10 prime numbers as the keys and their squares as the values.,,"primes_dict = {}
for i in range(2, 11):
    is_prime = True
    for j in range(2, i):
        if i % j == 0: 
            is_prime = False 
            break
    if is_prime:
        primes_dict[i] = i**2

print (primes_dict)","primes_dict = {}
for i in range(2, 11):
    is_prime = True
    for j in range(2, i):
        if i % j == 0: 
            is_prime = False 
            break
    if is_prime:
        primes_dict[i] = i**2

print (primes_dict)",Syntax Error,Loops
Write a Python script to print the frequency of all unique words in a given string.,"""Hello world, hello programmer""","words = ""Hello world, hello programmer"".split()

word_freq = {}
for word in words:
    if word not in word_freq:
        word_freq[word] = 1 
    else:
        word_freq[word] += 1

for key, value in word_freq.items():
    print(f""{key} : {value}"")","words = ""Hello world, hello programmer"".split()

word_freq = {}
for word in words:
    if word not in word_freq:
        word_freq[word] = 1 
    else:
        word_freq[word] += 1

for key, value in word_freq.items():
    print(f""{key} : {value}"")",correct,String Manipulation
Write a Python script to find the GCD of two numbers.,"1000, 500","def findGCD(a, b): 
   if (b == 0): 
       return a
   return findGCD(b, a % b)
    
a = 1000
b = 500
print(""GCD of number is: "", findGCD(a, b))","def findGCD(a, b): 
   if (b == 0): 
       return a
   return findGCD(b, a % b)
    
a = 1000
b = 500
print(""GCD of number is: "", findGCD(a, b))",correct,Loops
"Create an array of numbers using python, only using the number 0",,"# Create an array of 10 zeros
arr = [0 for i in range(10)]

# Create an array of 20 zeros
arr = [0 for i in range(20)]

# Create a 3x3 array of zeros
arr = [[0 for i in range(3)] for j in range(3)]

# Create a 5x5 array of zeros
arr = [[0 for i in range(5)] for j in range(5)]","# Create an array of 10 zeros
arr = [0 for i in range(10)]

# Create an array of 20 zeros
arr = [0 for i in range(20)]

# Create a 3x3 arr",Incomplete Answer,String Manipulation
Can you build an algorithm using Python which shuffles the elements of a list?,,"import random
 
def shuffle(list_data):
  # Loop through the indices of the list
  for i in range(len(list_data)-1, 0, -1):
    # Generate a random index
    random_index = random.randint(0, i)
    # Swap the elements
    temp = list_data[i]
    list_data[i] = list_data[random_index]
    list_data[random_index] = temp
 
  # Return the shuffled list
  return list_data","import random
 
def shuffle(list_data):
  # Loop through the indices of the list
  for i in range(len(list_data)-1, 0, -1):
    # Generate a random index
    random_index = random.rand",Incomplete Answer,OOP
"In Python, generate a list of numbers from 0 to 30 with a step size of 5.",,"my_list = list(range(0, 30, 5))
print(my_list)","my_list = list(range(0,",Incomplete Answer,String Manipulation
Calculate the sum of a given list of integers in Python.,"[ 7, 15, 23, 5, 9 ]","def sum_list(my_list):
  total = 0
  for num in my_list:
    total += num
  return total

print(sum_list([7, 15, 23, 5, 9]))","def sum_list(my_list):
  total = 0
  for num in my_list:
    total += num
  return total

pritn(sum_list([7, 15, 23, 5, 9]))",Syntax Error,Recursion
Create a function in Python that will convert a given string of text into its equivalent URL-safe slug format.,This is a sample string,"def url_slug(text):
 '''Takes text and converts it to url-safe slug format.
 
 Args:
 text (str): Text to be converted to slug
 
 Returns:
 str: slugified text
 '''
 
 text = text.lower()
 text = re.sub(r'\s+', '-', text)
 text = re.sub(r'[^\w-]', '', text)
 return text","def url_slug(text):
 '''Takes text and converts it to url-safe slug format.
 
 Args:
 text (str): Text to be converted to slug
 
 Retur",Incomplete Answer,File I/O
"Finish a Python program to select all employees with a salary greater than 10,000.",SELECT *,"SELECT *
FROM employees
WHERE salary > 10000","SELECT *
FROM employees
WHERE salary > 10000",Syntax Error,Loops
Write a function to count sequences of given length having non-negative prefix sums that can be generated by given values.,,"def bin_coff(n, r): 
	val = 1
	if (r > (n - r)): 
		r = (n - r) 
	for i in range(0, r): 
		val *= (n - i) 
		val //= (i + 1) 
	return val 
def find_ways(M): 
	n = M // 2
	a = bin_coff(2 * n, n) 
	b = a // (n + 1) 
	return (b) ","def bin_coff(n, r): 
	val = 1
	if (r > (n - r)): 
		r = (n - r) 
	for i in range(0, r): 
		val *= (n - i) 
		val //= (i + 1) 
	return val 
def find_ways(M): 
	n = M // 2
	a = bin_coff(2 * n, n) 
	b = a // (n + 1) 
	return (b) ",correct,String Manipulation
Improve the following code in Python to find the product of two given numbers without using the multiply operator.,"def multiply(x, y):
    result = 0
    for i in range(x):
        result += y
    return result","def multiply(x, y):
    result = 0
    for i in range(y):
        result += x
    return result

def power(x, y):
    result = 1
    for i in range(y):
        result *= x
    return result","def multiply(x, y):
    result = 0
    for i in range(y):
        result += x
    return result

def power(x, y):
    result = 1
    for i in range(y):
        result *= x
    return result",Syntax Error,String Manipulation
Generate a Python script to convert a text to title case format.,,"def title_case(string):
    convert_string = string.split("" "")
    title_string = """"
    for each_word in convert_string: 
        first_letter = each_word[0].upper()
        other_letters = each_word[1:].lower()
        title_string += first_letter + other_letters + "" ""
    return title_string","def title_case(string):
    convert_string = string.split("" "")
    title_string = """"
    for each_word in convert_string: 
        first_letter = e",Incomplete Answer,String Manipulation
Update the existing code in the following Python program to generate a list of prime numbers in a given range.,,"def generate_prime_numbers(start, end):
    for i in range(start, end + 1):
        is_prime = True
        # check for all numbers from 2 to (i - 1)
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            print(i, end="" "")","def generate_prime_numbers(start, end):
    for i in range(start, end + 1):
        is_prime = True
        # check for all numbers from 2 to (i - 1)
      ",Incomplete Answer,String Manipulation
Suggest improvements to the following Python code.,"def get_fibonacci_series(n):
	series = []
	for i in range(n):
		if i == 0 or i == 1:
			series.append(i)
		else:
			series.append(series[i-1] + series[i-2])
	return series","def get_fibonacci_series(n):
	# Initialize empty list for Fibonacci series 
	series = []
	a = 0
	b = 1
	# Iterate till number of terms required 
	for i in range(n):
		series.append(a)
		c = a + b 
		a = b 
		b = c 
	return series","def get_fibonacci_series(n):
	# Initialize empty list for Fibonacci series 
	series = []
	a = 0
	b = 1
	# Iterate till number of terms required 
	for i in range(n):
		series.append(a)
		c = a + b 
		a = b 
		b = c 
	return series",correct,Loops
"Create a Python class called ""Friend"" with fields ""name"", ""age"" and ""hobbies"".",,"class Friend:
 
  def __init__(self, name, age, hobbies):
    self.name = name
    self.age = age
    self.hobbies = hobbies
    
  def getName(self):
    return self.name
    
  def getAge(self):
    return self.age
    
  def getHobbies(self):
    return self.hobbies","class Friend:
 
  def __init__(self, name, age, hobbies):
self.name = name
self.age = age
self.hobbies = hobbies

  def getName(self):
return self.name

  def getAge(self):
return self.age

  def getHobbies(self):
return self.hobbies",Syntax Error,OOP
Generate a python program that takes an integer and then prints out the factorial of it?,7,"def factorial(num):
    if num <= 1:
        return 1
    else:
        return num * factorial(num - 1) 

n = int(input(""Enter a number: ""))  
print(""Factorial of"",n,""is"",factorial(n))","def factorial(num)
    if num <= 1
        return 1
    else
        return num * factorial(num - 1) 

n = int(input(""Enter a number ""))  
print(""Factorial of"",n,""is"",factorial(n))",Syntax Error,File I/O
Write a Python program to generate a list of squares of values from 1 to a given input number.,,"def generate_squares(n):
    res = []
    for i in range(1, n+1):
        res.append(i**2)
    return res

res = generate_squares(n)","def generate_squares(n):
    res = []
    for i in range(1, n+1):
        res.append(i**2)
    return res

res = generate_squares(n)",correct,File I/O
Create a python program to classify the type of a triangle based on the side lengths.,,"def get_triangle_type(a, b, c):
    if a == b and b == c:
        return ""Equilateral""
    elif a == b or b == c or c == a:
        return ""Isosceles""
    else:
        return ""Scalene""","def get_triangle_type(a, b, c):
    if a == b and b == c:
        return ""Equilateral""
    e",Incomplete Answer,Recursion
Create an algorithm in Python to find the maximum number in a list,"list = [1, 4, 5, 9, 12, 14]","def find_max(list):
    max_num = list[0]
    for num in list:
        if num > max_num:
            max_num = num
    return max_num

max_number = find_max(list)
print(max_number)","def find_max(list):
    max_num = list[0]
    for num in list:
        if num > max_num:
 ",Incomplete Answer,File I/O
"Generate a random password in Python with length 10, containing both lowercase and uppercase characters.",,"import string
import random

def generatePassword():
    # Generate list of lowercase and uppercase letters
    letters = string.ascii_letters
    # Generate a random string with length 10 
    password = ''.join(random.choice(letters) for i in range(10)) 
    return password

print(generatePassword())","import string
import random

def generatePassword():
    # Generate list of lowercase and uppercase letters
    letters = string.ascii_letters
    # Generate a random string with length 10 
    password = ''.join(random.choice(letters) for i in range(10)) 
    return password

print(generatePassword())",correct,Recursion
Create an object-oriented Python program to convert temperatures from Celsius to Fahrenheit and vice-versa.,,"class Temperature:
 def __init__(self, value):
 self.value = value

def to_fahrenheit(self):
 return (self.value * 9/5) + 32

def to_celsius(self):
 return (self.value - 32) * 5/9

temp = Temperature(212)
print(temp.to_celsius())
print(temp.to_fahrenheit())","class Temperature:
 def __init__(self, value):
 self.value = value

def to_fahrenheit(self):
 return (self.value * 9/5) + 32

def to_celsius(self):
 return (self.value - 32) * 5/9

temp = Temperature(212)
pritn(temp.to_celsius())
pritn(temp.to_fahrenheit())",Syntax Error,OOP
"Given a list of student records consisting of student name, roll number, and marks, write a Python program to sort the records based on marks in descending order.","records = [['John Doe', 1, 92], ['Anna Smith', 2, 91], ['Jim Green', 3, 87]]","def sort_by_marks(records):
    # Sort the records list according to the marks 
    sorted_records =sorted(records, key = lambda x: x[2], reverse=True)

    # Return the sorted list
    return sorted_records","def sort_by_marks(records):
    # Sort the records list according to the marks 
    sorted_records =sorted(records, key = lambda x: x[2], reverse=True)

    # Return the sorted list
    return sorted_records",correct,String Manipulation
How would you create a class in Python to store and process data in a Car object?,,"class Car:
    def __init__(self, make, model, color, mileage):
        self.make = make
        self.model = model
        self.color = color
        self.mileage = mileage

    def accelerate(self, speed):
        self.speed = speed

    def decelerate(self, speed):
        self.speed = speed","class Car:
    def __init__(self, make, model, color, mileage):
        self.make = make
        self.model = model
        self.color = color
        self.mileage = mileage

    def accelerate(self, speed):
        self.speed = speed

    def decelerate(self, speed):
        self.speed = speed",correct,String Manipulation
Can you convert a given dictionary into a string using Python?,"{""foo"": ""bar"", ""hello"": ""world""}","dictionary_string = str({""foo"": ""bar"", ""hello"": ""world""})","dictionary_string = str({""foo"": ""bar"", ""hello"": ""world""}",Syntax Error,File I/O
Write a function to find all possible combinations of the elements of a given list.,,"def combinations_list(list1):
    if len(list1) == 0:
        return [[]]
    result = []
    for el in combinations_list(list1[1:]):
        result += [el, el+[list1[0]]]
    return result","def combinations_list(list1):
    if len(list1) == 0:
        return [[]]
    result = []
   ",Incomplete Answer,Recursion
Create an algorithm in Python that reads and stores the following data into a dictionary.,"""John,31;Alice,27;Bob,40""","input_data = ""John,31;Alice,27;Bob,40""
data_dict = {}

temp = input_data.split("";"") 
for i in temp: 
    data = i.split("","") 
    data_dict[data[0]] = data[1] 

print(data_dict)","input_data = ""John,31;Alice,27;Bob,40""
data_dict = {}

temp = input_data.split("";"") 
for i in temp: 
    data = i.split("","") 
    data_dict[data[0]] = data[1] 

print(data_dict)",correct,Recursion
Implement a function for making web requests in Python.,,"import requests

def make_web_request(url):
    '''This function makes an HTTP request to the given URL and returns the response.'''
    response = requests.get(url)
    return response.text","import requests

def make_web_request(url):
    '''This function makes an HTTP request to the g",Incomplete Answer,Loops
"Given a 2D array in Python, write a code to calculate the sum of all elements.","arr = [[1, 2, 3], [4, 5, 6], [7 , 8, 9]]","total = 0
for row in arr: 
    for num in row: 
        total += num 
print(total) # 45","total = 0
for row in arr: 
    for num in r",Incomplete Answer,Recursion
Develop a program in Python to remove all the punctuation from an English sentence.,This is an example sentence!,"def remove_punctuation(sentence):
    punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
    clean_sentence = """" 
    for letter in sentence: 
        if letter not in punctuations: 
            clean_sentence += letter 
    return clean_sentence

sentence = ""This is an example sentence!""
print(remove_punctuation(sentence))","def remove_punctuation(sentence):
    punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
    clean_sentence = """" 
    for letter in sentence: 
        if letter not in punctuations: 
            clean_sentence += letter 
    return clean_sentence

sentence = ""This is an example sentence!""
print(remove_punctuation(sentence))",correct,Recursion
Write a function to remove multiple spaces in a string.,,"import re
def remove_spaces(text):
 return (re.sub(' +',' ',text))","import re
def remove_spaces(text):
 return (re.sub(' +',' ',text))",correct,OOP
Debug the given python program to output b2 instead of a3.,"a1 = 6
a2 = 3
b1 = a1 // a2
a3 = b1 * a2","a1 = 6
a2 = 3
b1 = a1 // a2
b2 = a1 % a2","a1 = 6
a2 = 3
b1 = a1 // a2
b2 = a1 % a2",Syntax Error,Recursion
"In Python, write a program to find the average of all the even numbers in a given list.","list = [1, 7, 8, 10, 12, 17]","def average_even(list):
    even_list = []
    for i in list:
        if i % 2 == 0:
            even_list.append(i)
    return sum(even_list)/len(even_list)","def average_even(list:
    even_list = []
    for i in list:
        if i % 2 == 0:
            even_list.append(i
    return sum(even_list/len(even_list",Syntax Error,File I/O
Edit a given Python program to use regex to extract the phone numbers from the text.,"import re

txt = ""My number is 666-111-1111 and my office number is 888-666-1234.""","import re

txt = ""My number is 666-111-1111 and my office number is 888-666-1234.""

phone_numbers = re.findall(r'\d{3}-\d{3}-\d{4}', txt)
print(phone_numbers) # output: ['666-111-1111', '888-666-1234']","import re

txt = ""My number is 666-111-1111 and my office number is 888-666-1234.""

phone_numbers = re.findall(r'\d{3}-\d{3}-\d{4}', txt)
print(phone_numbers) # output: ['666-111-1111', '888-666-1234']",correct,File I/O
Write a python function to find the minimum length of sublist.,,"def Find_Min_Length(lst):  
    minLength = min(len(x) for x in lst )
    return minLength ","def Find_Min_Length(lst):  
    minLength = min(len(x) for x in lst )
    return minLength ",Syntax Error,Loops
Create a Python program to find all numbers in a given list that are evenly divisible by 4.,"[1, 8, 10, 15, 20, 25]","def find_divisible_by_4(num_list):
    result_list = []
    
    for i in num_list:
        if i % 4 == 0:
            result_list.append(i)
            
    return result_list
 
print(find_divisible_by_4([1, 8, 10, 15, 20, 25]))","def find_divisible_by_4(num_list):
    result_list = []
    
    for i in num_list:
        if i % 4 == 0:
            result_list.append(i)
            
    return result_list
 
print(find_divisible_by_4([1, 8, 10, 15, 20, 25]))",correct,Recursion
Create an endpoint for a Python Flask application which returns JSON data for HTTP GET requests.,,"@app.route('/data', methods=['GET'])
def get_data():
 data = {
 'key1': 'value1',
 'key2': 'value2',
 'key3': 'value3'
 }
 return jsonify(data)","@app.route('/data', methods=['GET'])
def get_data():
 data = {
 'key1':",Incomplete Answer,String Manipulation
Write a Python program to convert a list into a dictionary.,"[1, 2, 3, 4]","input_list = [1, 2, 3, 4]
output_dict = {}

for item in input_list:
  output_dict[item] = None

print(output_dict)","input_list = [1, 2, 3, 4]
output_dict = {}

for item in input_list:
  output_dict[item] = None

print(output_dict",Syntax Error,String Manipulation
Write a python program to parse a given XML document.,,"import xml.etree.ElementTree as ET

def parse_xml(xml_doc):
  # Parse the XML document
  tree = ET.parse(xml_doc)
  # Get the root element
  root = tree.getroot()
  # Iterate through children
  for child in root:
    print(child.tag, child.attrib)

# Function call 
parse_xml(""sample.xml"")","import xml.etree.ElementTree as ET

def parse_xml(xml_doc):
  # Parse the XML document
  tree = ET.parse(xml_doc)
  # Get the root element
  root = tree.getroot()
  # Iterate through children
  for child in root:
    print(child.tag, child.attrib)

# Function call 
parse_xml(""sample.xml"")",correct,Recursion
Create a Python script to check whether a given number is an even number or an odd number.,,"def is_even(n):
 if n % 2 == 0:
 return True
 else:
 return False","def is_even(n):
 if n % 2 == 0:
",Incomplete Answer,Loops
Create a class to represent a stack data structure in Python.,,"class Stack:

    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def is_empty(self):
        return self.items == []","class Stack:

    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def is_empty(self):
        return self.items == []",Syntax Error,Recursion
Use the NumPy library to generate a 3x3 identity matrix in Python.,,"import numpy as np

identity_matrix = np.identity(3)
print(identity_matrix)","import numpy as np

identity_matrix =",Incomplete Answer,File I/O
Write a Python program to extract all the text from a web page.,,"import requests
from bs4 import BeautifulSoup

url = 'http://www.example.com'
res = requests.get(url)
soup = BeautifulSoup(res.text, 'lxml')
text = soup.get_text()
print(text)","import requests
from bs4 import BeautifulSoup

url = 'http://www.example.com'
res = requests.get(url)
soup = BeautifulSoup(res.text, 'lxml')
text = soup.get_text()
pritn(text)",Syntax Error,Loops
Construct a for loop in Python for printing the odd numbers from 1 to 10 (inclusively).,,"for i in range(1, 11):
    if i % 2 != 0:
        print(i)","for i in range(1, 11):
    if",Incomplete Answer,Recursion
Develop a function to search for a character into a given string and return its index if present.,"String: Python
Character: y","#function to search for a character
def search_char(str, char):
	idx = -1
	for i in range(len(str)):
		if str[i] == char:
			idx = i
			break
	return idx
    
#call the function
str = 'Python'
char = 'y'

index = search_char(str, char)
#print the result
if index != -1:
	print('Character found at index:', index)
else:
	print('Character not found')","#function to search for a character
def search_char(str, char):
	idx = -1
	for i in range(len(str)):
		if str[i] == char:
			idx = i
			break
	return idx
    
#call the function
str = 'Python'
char = 'y'

index = search_char(str, char)
#print the result
if index != -1:
	print('Character found at index:', index)
else:
	print('Character not found')",correct,Recursion
Create a Python script to search a list of words for a given word and return its index.,"words = ['GPT', 'model', 'natural', 'language', 'processing'], search = 'language'","def search(words, search):
    for i, word in enumerate(words):
        if word == search:
            return i
    return -1

index = search(words, 'language')
print(index)","def search(words, search):
    for i, word in enumerate(words):
        if word == search:
            return i
    return -1

index = search(words, 'language')
pritn(index)",Syntax Error,File I/O
Generate Python code to search through a given list of integers and return the closest match to the given number.,"[1, 5, 9, 10, 12, 15], search_term = 11","def closest_match(numbers, search_term):
    closest_match = None
    min_diff = float('inf')
    
    for number in numbers:
        diff = abs(number - search_term)
        if diff < min_diff:
            min_diff = diff
            closest_match = number
    
    return closest_match","def closest_match(numbers, search_term):
    closest_match = None
    min_diff = float('inf')
    
    for number in numbers:
        diff = abs(number - search_term)
        if diff < min_diff:
            min_diff = diff
            closest_match = number
    
    return closest_match",correct,OOP
Print the Fibonacci sequence up to a given number in Python.,10,"# Declare a function
def Fibonacci(num):
    a = 0
    b = 1
    
    # Iterate
    for i in range(num):
        print(a, end="" "")
        c = a + b
        a = b
        b = c
    print()
    
# Print the sequence
Fibonacci(10)","# Declare a function
def Fibonacci(num:
    a = 0
    b = 1
    
    # Iterate
    for i in range(num:
        print(a, end="" ""
        c = a + b
        a = b
        b = c
    print(
    
# Print the sequence
Fibonacci(10",Syntax Error,Loops
Generate a Python 3 program to find out the highest common factor of two numbers.,60 and 80,"def find_hcf(x, y): 
  
    if x > y: 
        smaller = y 
    else: 
        smaller = x 
    for i in range(1,smaller + 1): 
        if((x % i == 0) and (y % i == 0)): 
            hcf = i 
              
    return hcf 
      
x = 60
y = 80

hcf = find_hcf(x, y) 
print(""The Highest Common Factor of"", x,""and"", y,""is"", hcf)","def find_hcf(x, y) 
  
    if x > y 
        smaller = y 
    else 
        smaller = x 
    for i in range(1,smaller + 1) 
        if((x % i == 0) and (y % i == 0)) 
            hcf = i 
              
    return hcf 
      
x = 60
y = 80

hcf = find_hcf(x, y) 
print(""The Highest Common Factor of"", x,""and"", y,""is"", hcf)",Syntax Error,File I/O
Write a python function to check whether the triangle is valid or not if sides are given.,,"def check_Validity(a,b,c):  
    if (a + b <= c) or (a + c <= b) or (b + c <= a) : 
        return False
    else: 
        return True        ","def check_Validity(a,b,c)  
    if (a + b <= c) or (a + c <= b) or (b + c <= a)  
        return False
    else 
        return True        ",Syntax Error,OOP
Create an algorithm in Python to generate an array of 20 random numbers between 1 and 100.,,"import random

def generate_array():
  my_array = []
  for i in range(20):
    my_array.append(random.randint(1,100))
  return my_array","import random

def generate_array():
  my_array = []
  for i in range(20):
my_array.append(random.randint(1,100))
  return my_array",Syntax Error,File I/O
Write a function in Python to check if a given array of numbers is in ascending order.,"[3, 5, 7, 9, 16, 19]","def isSorted(arr):
    for i in range(len(arr) - 1):
        if arr[i] > arr[i+1]:
            return False
    return True

print(isSorted([3, 5, 7, 9, 16, 19]))","def isSorted(arr):
    for i in range(len(arr) - 1):
        if arr[i] > arr[i+1]:
            return False
    return True

pritn(isSorted([3, 5, 7, 9, 16, 19]))",Syntax Error,String Manipulation
Modify the existing Python program to add an exception clause.,"def calculate_square(x):
    try:
        return x * x
    except TypeError:
        print(""The argument must be a number"")
        
calculate_square(10)","def calculate_square(x):
    try:
        return x * x
    except TypeError:
        print(""The argument must be a number"")
    except ValueError:
        print(""The argument cannot be a negative number"")
        
calculate_square(10)","def calculate_square(x):
    try:
        return x * x
    except TypeError:
        print(""The argument must be a number"")
    except ValueError:
        print(""The argument cannot be a negative number"")
        
calculate_square(10)",correct,File I/O
Write a function to find the index of the first occurrence of a given number in a sorted array.,,"def find_first_occurrence(A, x):
    (left, right) = (0, len(A) - 1)
    result = -1
    while left <= right:
        mid = (left + right) // 2
        if x == A[mid]:
            result = mid
            right = mid - 1
        elif x < A[mid]:
            right = mid - 1
        else:
            left = mid + 1
    return result","def find_first_occurrence(A, x):
    (left, right) = (0, len(A) - 1)
    result = -1
    while left <= right:
        mid = (left + right) // 2
        if x == A[mid]:
            result = mid
            right = mid - 1
        elif x < A[mid]:
            right = mid - 1
        else:
            left = mid + 1
    return result",correct,File I/O
Design an algorithm in Python that checks if a given number is even or odd.,,"def is_even(n):
   if n % 2 == 0:
    return True
   else:
    return False","def is_even(n):
   if n % 2 == 0:
    return True
   else:
    return False",correct,OOP
Improve the execution time of a given Python program.,"def factorial(n):
    if n==1 or n==0:
        return 1
    return n * factorial(n-1)

num = 4
print(factorial(num))","def factorial(n):
    ans = 1
    while(n > 1):
        ans *= n
        n -= 1
    return ans

num = 4
print(factorial(num))","def factorial(n):
    ans = 1
    while(n > 1):
        ans *= n
        n -= 1
    return ans

num = 4
print(factorial(num))",correct,Loops
Write a Python code to find the factorial of a given number without using inbuilt functions like factorial().,num = 6,"def factorial(num): 
    if num == 0: 
        return 1 
  
    return num * factorial(num - 1) 
  
num = 6
print(""Factorial of"", num, ""is"", factorial(num))","def factorial(num): 
    if num == 0: 
        return 1 
  
    return num * factorial(num - 1) 
  
num = 6
print(""Factorial of"", num, ""is"", factorial(num))",correct,OOP
Create a Python program to reverse the character order in a given string.,,"def reverse_string(s):
 reversed_string = ''.join(reversed(s))
 return reversed_string

string = 'Hello World!'
reversed_string = reverse_string(string)
print(reversed_string)","def reverse_string(s):
 reversed_string = ''.join(reversed(s))
 return reversed_string

string = 'Hello World!'
reversed_string = reverse_string(string)
print(reversed_string)",correct,String Manipulation
Develop a Python program to generate a random string of length 10.,,"import string
import random

def random_string(stringLength=10):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(stringLength))

print(random_string())","import string
import random

def random_string(stringLength=10):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(stringLength))

print(random_string())",correct,File I/O
"Create a stack program in python that can perform the push, pop and size operations.",,"class Stack(object):

    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def size(self):
        return len(self.items)

# testing
stack = Stack()
stack.push(1)
stack.push(5)

print(stack.pop()) # 5
print(stack.size()) # 1","class Stack(object):

    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def size(self):
        return len(self.items)

# testing
stack = Stack()
stack.push(1)
stack.push(5)

print(stack.pop()) # 5
print(stack.size()) # 1",correct,Loops
Create a Python program that will parse a website and get all the links on the page.,,"import requests
from bs4 import BeautifulSoup

URL = 'http://example.com/'

# get the webpage
page = requests.get(URL)

# parse the webpage
soup = BeautifulSoup(page.content, 'html.parser')

# get all links
links = soup.find_all('a')
for link in links:
 print(link.get('href'))","import requests
from bs4 import BeautifulSoup

URL = 'http://example.com/'

# get the webpage
page = requests.get(URL)

# parse the webpage
soup = BeautifulSoup(page.content, 'html.parser')

# get all links
links = soup.find_all('a')
for link in links:
 print(link.get('href'))",Syntax Error,String Manipulation
Generate a random password of 10 characters using Python.,,"import string 
import random 
  
def random_password(): 
    letters_and_digits = string.ascii_letters + string.digits 
    password = ''.join(random.choice(letters_and_digits) for i in range(10))
  
    return password 
  
password = random_password() 
print(""Random Password: "",password)","import string 
import random 
  
def random_password(: 
    letters_and_digits = string.ascii_letters + string.digits 
    password = ''.join(random.choice(letters_and_digits for i in range(10
  
    return password 
  
password = random_password( 
print(""Random Password: "",password",Syntax Error,String Manipulation
Write a Python function to compare two lists and return the elements that are not common in both lists.,"list1=[1, 2, 3, 4, 5]
list2=[4, 5, 6, 7, 8]","def get_unique_elements(list1, list2):
 return list(set(list1) - set(list2))","def get_unique_elements(list1, list2):
 return list(set(list1) - set(list2))",Syntax Error,OOP
Create code that generates the following output using looping concepts in Python.,,"for x in range(1, 10):
    for y in range(1, 10):
        print('{} x {} = {}'.format(x, y, x*y))","for x in range(1, 10):
    for y in range(1, 10):
        print('{} x {} = {}'.format(x, y, x*y))",correct,String Manipulation
"Write a Python program to represent the following data structure:

{
 'Fruits':[
  'Apple',
  'Banana',
  'Orange'
 ],
 'Vegetables':[
  'Carrot',
  'Cucumber',
  'Potato'
 ]
}",,"data = {
 'Fruits':[
  'Apple',
  'Banana',
  'Orange'
 ], 
 'Vegetables':[
  'Carrot',
  'Cucumber',
  'Potato'
 ]
}
 
print(data)","data = {
 'Fruits':[
  'Apple',
  'Banana',
  'Orange'
 ], 
 'Vegetables':[
  'Carrot',
  'Cucumber',
  'Potato'
 ]
}
 
print(data)",correct,Recursion
"Given a binary tree, you need to write a Python program to print out all the nodes at each level.",,"def print_level_order(root):
    if root is None:
        return

    queue = []

    queue.append(root)
    while(len(queue) > 0):
        print(queue[0].data, end="" "")
        node = queue.pop(0)

        if node.left is not None:
            queue.append(node.left)

        if node.right is not None:
            queue.append(node.right)","def print_level_order(root):
    if root is None:
        return

    queue = []

    queue.append(root)
    while(len(queue) > 0):
        print(queue[0].data, end="" "")
        node = queue.pop(0)

        if node.left is not None:
            queue.append(node.left)

        if node.right is not None:
            queue.append(node.right)",correct,Recursion
Generate a Python statement to select unique values from a list.,"seq = [2, 3, 5, 3, 4, 9, 5]","result = set(seq)
print(result)","result = set(seq)
print(name, result)",Syntax Error,OOP
"Using basic Python, create a Fibonacci sequence.",,"def get_fibonacci_sequence(n):
    series = [0,1]
    while len(series) < n:
        series.append(sum(series[-2:]))
    return series

print(get_fibonacci_sequence(10))","def get_fibonacci_sequence(n):
    series = [0,1]
    while len(series) < n:
        series.append(sum(series[-2:]))
    return series

print(get_fibonacci_sequence(10))",correct,Loops
Generate a function in Python to delete a key from a dictionary.,"dictionary = {'a':1,'b':2,'c':3}
key = 'b'","def delete_key(dictionary, key): 
    if key in dictionary: 
        del dictionary[key] 
    else: 
        print('Error! Key not found') 

delete_key(dictionary, key) 
print(dictionary)","def delete_key(dictionary, key): 
    if key in dictionary: 
        del dictionary[key] 
   ",Incomplete Answer,Loops
Write a Python program to convert a list of numeric values into an array of even numbered values.,"[2, 3, 4, 5, 6, 7]",even_arr = [x for x in arr if x % 2 == 0],even_arr = [x for x in arr if x % 2 == 0],Syntax Error,File I/O
Write a function to create a JSON object from a given Python list.,,"import json

def list_to_json(data):
    return json.dumps(data)","import json

def list_to_json(data):
    return json.dumps(data)",correct,File I/O
"Given a list of names, write a program in Python to create a new list with the first letter in each name capitalized.","names = [""kevin"", ""david"", ""james"", ""george""]","def capitalized_list(names):
    new_list = []
    for name in names:
        new_list.append(name.capitalize())
    
    return new_list

print(capitalized_list(names))

# Output
['Kevin', 'David', 'James', 'George']","def capitalized_list(names):
    new_list = []
    for name in names:
        new_list.append(name.capitaliz",Incomplete Answer,Loops
Develop a greedy algorithm in Python to complete a given optimization task.,,"def greedy_solution(arr):
    arr.sort()
    cur_max = arr[0]
    result = [cur_max]
    for i in range(1, len(arr)):
        if arr[i] > cur_max + 1:
            cur_max = arr[i]
            result.append(cur_max)
    return result","def greedy_solution(arr):
    arr.sort()
    cur_max = arr[0]
    result = [cur_max]
    for i in range(1, len(arr)):
        if arr[i] > cur_max + 1:
            cur_max = arr[i]
            result.append(cur_max)
    return result",correct,Loops
"Using the NumPy library, create a Python program to generate a 3X3 array of random integers ranging from 1 to 5.",,"import numpy as np 

a = np.random.randint(1, 6, size=(3,3)) 
print(a)","import numpy as np 

a = np.random.randint(1, 6, size=(3,3)) 
pritn(a)",Syntax Error,Recursion
Generate a script in python to split a given string into words and store them in a list.,"str = ""This is a great day""","def split_str(str):
    words = str.split("" "")
    return words","def split_str(str):
    words = str.split("" "")
    return words",Syntax Error,OOP
Create a class in Python with a method to sort the given array in an ascending order.,"[3, 2, 5, 1, 4]","class Sort: 
    def sort_arr(self, arr):
        arr.sort()
        return arr","class Sort: 
    def sort_arr(self, arr):
        arr.sort()
        return arr",correct,Loops
Create a loop in Python that prints numbers 1 to 10.,,"for i in range(1, 11):
    print(i)","for i in range(1,",Incomplete Answer,Recursion
Generate a Python script to sort an array of strings in case-insensitive order.,"[""Apple"", ""banana"", ""APple""]","def sort_strings(arr):
    arr_lower = [element.lower() for element in arr]
    sorted_lower = sorted(arr_lower)

    sorted_arr = [arr[arr_lower.index(element)] for element in sorted_lower]

    return sorted_arr

arr = [""Apple"", ""banana"", ""APple""]
sorted_arr = sort_strings(arr)
print(sorted_arr) # prints [""APple"", ""Apple"", ""banana""]","def sort_strings(arr):
    arr_lower = [element.lower() for element in arr]
    sorted_lower = sorted(arr_lower)

    sorted_arr = [arr[arr_lower.index(element)] for element in sorted_lower]

    return sorted_arr

arr = [""Apple"", ""banana"", ""APple""]
sorted_arr = sort_strings(arr)
print(sorted_arr) # prints [""APple"", ""Apple"", ""banana""]",correct,File I/O
Create a Python function to parse an HTML to extract all links from the content.,,"from BeautifulSoup import BeautifulSoup

def parseHtml(html):
    soup = BeautifulSoup(html)
    links = []
    for link in soup.findAll('a'):
        links.append(link.get('href'))
    return links","from BeautifulSoup import BeautifulSoup

def parseHtml(html):
    soup = BeautifulSoup(html)
    links = []
    for link in soup.findAll('a'):
        links.append(link.get('href'))
    return links",Syntax Error,Loops
Create a sorting algorithm in Python to organize a given array of numbers.,"Array of numbers: [3, 5, 4, 1, 6]","def bubbleSort(nums): 
    for i in range(len(nums)-1): 
        for j in range(0, len(nums)-i-1): 
            if nums[j] > nums[j+1] : 
                nums[j], nums[j+1] = nums[j+1], nums[j] 
    return nums
  
arr = [3, 5, 4, 1, 6]
print (bubbleSort(arr))","def bubbleSort(nums): 
    for i in range(len(nums)-1): 
        for j in range(0, len(nums)-i-1): 
            if nums[j] > nums",Incomplete Answer,Loops
"Write a Python program to query all 10,000 rows in the provided SQL table.","Table ""Example"" with 10,000 rows","import sqlite3

# connect to SQL database
db = sqlite3.connect('example.db')

# create cursor
cur = db.cursor()

# execute query
cur.execute('SELECT * FROM ""example""')

# fetch all rows
rows = cur.fetchall()

# display all rows
for row in rows:
    print row","import sqlite3

# connect to SQL database
db = sqlite3.connect('example.db')

# create cursor
cur = db.cursor()

# execute query
cur.execute('SELECT * FROM ""example""')

# fetch all rows
rows = cur.fetchall()

# display all rows
for row in rows:
    print row",correct,OOP
Write a function to find the ascii value of a character.,,"def ascii_value(k):
  ch=k
  return ord(ch)","def ascii_value(k):
  ch=k
  return ord(ch)",correct,File I/O
"Write a Python script that processes the list of words, and changes the case of the characters to capital letters.","words = [""elephant"", ""goose"", ""rabbit""]","def capitalize_strings(words):
    capital_words = []
    for word in words:
        capital_words.append(word.upper())
    
    return capital_words

capitalized_words = capitalize_strings(words)
print(capitalized_words)","def capitalize_strings(words):
    capital_words = []
    for word in words:
        capital_words.append(word.upper())
    
    return capital_words

capitalized_words = capitalize_strings(words)
print(capitalized_words)",correct,OOP
Create a Python script that takes a dictionary as an argument and prints the value of each key-value pair.,,"def print_dict(dct):
    for key, value in dct.items():
        print('Key:', key, ', Value:', value)

example_dict = { 'a' : 1, 'b' : 2, 'c' : 3 }
print_dict(example_dict)","def print_dict(dct):
    for key, value in dct.items():
        print('Key:', key, ', ",Incomplete Answer,OOP
Generate an algorithm in Python that finds the number of times an element is present in an array.,"arr = [4, 5, 2, 4, 2]
x = 2","def countOccurrences(arr, x): 
  
    count = 0
    for i in range(len(arr)): 
        if (x == arr[i]): 
            count = count + 1
  
    return count 
  
arr = [4, 5, 2, 4, 2]
x = 2
print(countOccurrences(arr, x))","def countOccurrences(arr, x): 
  
    count = 0
    for i in range(len(arr)): 
        if (x == arr[i]): 
            count = count + 1
  
    return count 
  
arr = [4, 5, 2, 4, 2]
x = 2
print(countOccurrences(arr, x))",correct,File I/O
Edit the following object-oriented Python code to use inheritance.,"class A:
    def __init__(self, x):
        self.x = x
    
    def get_x(self):
        return self.x

class B:
    def modify_x(self, x):
        self.x = x + 1","class A:
    def __init__(self, x):
        self.x = x
    
    def get_x(self):
        return self.x

class B(A):
    def modify_x(self, x):
        A.modify_x(self, x)
        self.x += 1","class A:
    def __init__(self, x):
        self.x = x
    
    def get_x(self):
        return self.x

class B(A):
    def modify_x(self, x):
        A.modify_x(self, x)
        self.x += 1",correct,Recursion
Write a Python program to generate all possible strings by rearranging the characters of a given string.,"String = ""ABC""","def generate_all_strings(string):
   if len(string) == 1: 
       return [string]
    result = []
    for i, letter in enumerate(string):
        for permutation in generate_all_strings(string[:i] + string[i+1:]):
            result += [letter + permutation]
    return result","def generate_all_strings(string):
   if len(string) == 1: 
   return [string]
result = []
for i, letter in enumerate(string):
    for permutation in generate_all_strings(string[:i] + string[i+1:]):
        result += [letter + permutation]
return result",Syntax Error,Loops
Write a Python program to compute the integral of a given function using the trapezoidal rule.,,"def trapezoidal_rule(f, a, b, n):
 # calculate h
 h = (b-a)/n
 # initialize output
 result = 0.0
 # calculate last term
 result += 0.5*f(a) + 0.5*f(b)
 # calculate intermediate terms
 for i in range(1,n):
 result += f(a + i*h)
 # multiply by step size
 result *= h
 return result","def trapezoidal_rule(f, a, b, n):
 # calculate h
 h = (b-a)/n
 # initialize output
 result = 0.0
 # calculate last term
 result += 0.5*f(a) + 0.5*f(b)
 # calculate intermediate terms
 for i in range(1,n):
 result += f(a + i*h)
 # multiply by step size
 result *= h
 return result",correct,File I/O
Design a linear search algorithm in Python that returns the index of an item in an array.,"arr = [1,2,3,4,5]","def linear_search(arr, target):
    """"""
    Searches through a given input array to find the index of a provided target number.
    Returns -1 if the target number is not found.
    """"""
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1","def linear_search(arr, target):
    """"""
    Searches through a given input array to find the index of a provided target number.
    Returns",Incomplete Answer,OOP
Implement a binary search algorithm in Python.,,"def binary_search(array, target):
    left = 0
    right = len(array) - 1

    while left <= right:
        middle = (left + right) // 2
        if array[middle] == target:
            return middle
        elif array[middle] < target:
            left = middle + 1
        else:
            right = middle - 1

    return -1","def binary_search(array, target:
    left = 0
    right = len(array - 1

    while left <= right:
        middle = (left + right // 2
        if array[middle] == target:
            return middle
        elif array[middle] < target:
            left = middle + 1
        else:
            right = middle - 1

    return -1",Syntax Error,OOP
Write a Python program to generate a random password string containing letters and digits.,,"import random
import string 

def generate_password(length): 
    password_characters = string.ascii_letters + string.digits
    return ''.join(random.choice(password_characters) for i in range(length))

password = generate_password(8)
print(""Password is:"", password)","import random
import string 

def generate_password(length): 
    password_characters = string.ascii_letters + string.digits
    return ''.join(random.choice(password_characters) for i in range(length))

password = generate_password(8)
print(""Password is:"", password)",correct,String Manipulation
Create a class in Python with a constructor that initializes 3 variables and a method that prints the values of these variables.,,"class Example:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
    
    def print_values(self):
        print(self.a, self.b, self.c)

example = Example(10, 20, 30)
example.print_values()","class Example:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
    
    def print_values(self):
        print(self.a, self.b, self.c)

example = Example(10, 20, 30)
example.print_values()",correct,Loops
Create a Python program to classify a set of numbers into odd and even.,"[1, 2, 3, 4, 5]","def classify_odd_even(input_list):
    odd_nums = []
    even_nums = []
    for item in input_list:
        if item % 2 == 0:
            even_nums.append(item)
        else:
            odd_nums.append(item)

    return odd_nums, even_nums

input_list = [1, 2, 3, 4, 5]
odd_nums, even_nums = classify_odd_even(input_list)
print(""Odd Numbers: "", odd_nums)
print(""Even Numbers: "", even_nums)","def classify_odd_even(input_list):
    odd_nums = []
    even_nums = []
    for item in input_list:
        if item % 2 == 0:
            even_nums.append(item)
        else:
            odd_nums",Incomplete Answer,Loops
Generate a Python script that takes a list of integers and prints out the sum of their squares.,"data: [1, 2, 3]","data = [1, 2, 3] 
sum = 0 

for number in data: 
 sum += number ** 2 

print(f""The sum of the squares of the given numbers is {sum}."")","data = [1, 2, 3] 
sum = 0 

for number in data: 
 sum += number ** 2 

print(f""The sum of the squares of the given numbers is {sum}."")",correct,Recursion
Design a function in Python to generate a Fibonacci sequence.,,"def Fibonacci(n): 
	if n<0: 
		print(""Incorrect input"") 
	# First Fibonacci number is 0 
	elif n==1: 
		return 0
	# Second Fibonacci number is 1 
	elif n==2: 
		return 1
	else: 
		return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Program 

print(Fibonacci(9))","def Fibonacci(n: 
	if n<0: 
		print(""Incorrect input"" 
	# First Fibonacci number is 0 
	elif n==1: 
		return 0
	# Second Fibonacci number is 1 
	elif n==2: 
		return 1
	else: 
		return Fibonacci(n-1+Fibonacci(n-2 

# Driver Program 

print(Fibonacci(9",Syntax Error,File I/O
Design a Python code snippet that deletes all duplicates in a given list of numbers.,,"def deleteDuplicates(list): 
    final_list = [] 
    for num in list: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list","def deleteDuplicates(list): 
    final_list = [] 
    for num in list: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list",Syntax Error,Loops
Can you write a function in Python that takes in a 2-dimensional array of integers and returns the lowest element in the array?,"[[3, 4, 5], [2, 7, 8], [12, 1, 9]]","def find_min(matrix): 
    result = float('inf') 
    for row in matrix: 
        result = min(result, min(row))
    return result 

matrix = [[3, 4, 5], [2, 7, 8], [12, 1, 9]]
print(find_min(matrix)) # Output: 1","def find_min(matrix): 
    result = float('inf') 
    for row in matrix: 
        result = min(result, min(row))
    return result 

matrix = [[3, 4, 5], [2, 7, 8], [12, 1, 9]]
print(find_min(matrix)) # Output: 1",correct,Recursion
Optimize a function in Python which takes a list and returns the sum of all its elements.,"[1, 2, 3]","def sum_list_elements(lst):
    sum = 0
    for item in lst:
        sum += item
    return sum

print(sum_list_elements([1, 2, 3]))","def sum_list_elements(lst):
    sum = 0
    for item in lst:
        sum += item
    return sum

pritn(sum_list_elements([1, 2, 3]))",Syntax Error,OOP
Create a Python program to read an array of integers and calculate their sum.,"[1, 3, 5, 7]","def calculate_sum(arr):
  sum = 0

  for i in arr:
    sum += i

  return sum

input_array = [1, 3, 5, 7]

result = calculate_sum(input_array)

print(result) # prints 16","def calculate_sum(arr):
  sum = 0

  for i in arr:
    sum += i

  return sum

input_array = [1, 3, 5, 7]

result = calculate_sum(input_array)

print(name, result) # prints 16",Syntax Error,OOP
Generate a valid Python code that will create an empty dictionary,,my_dict = {},my_dict = {},Syntax Error,OOP
Create a function in Python for converting currencies from one type to another.,"currency_from = 'USD'
currency_to = 'EUR'
exchange_rate = 0.9","def convert_currencies(currency_from, currency_to, exchange_rate):
 return currency_fit * exchange_rate 

c = convert_currencies('USD', 'EUR', 0.9)
print(c) # Output: 0.9","def convert_currencies(currency_from, currency_to, exchange_rate)
 return currency_fit * exchange_rate 

c = convert_currencies('USD', 'EUR', 0.9)
print(c) # Output 0.9",Syntax Error,Loops
Write a Python program to create a 3x3x3 array (3D array) filled with zeros.,,"import numpy as np
arr = np.zeros((3, 3, 3))
print(arr)","import numpy as np
arr = np.zeros((3, 3, 3))
pritn(arr)",Syntax Error,File I/O
Optimize an existing Python program to reduce its running time.,"def find_sum(n): 
  
    final_sum = 0
  
    for i in range(n+1): 
        final_sum += i 
      
    return final_sum 

print(find_sum(10))","def find_sum(n): 
   return n * (n + 1) // 2
  
print(find_sum(10))","def find_sum(n): 
   return n * (n + 1) // 2
  
print(find_sum(10))",Syntax Error,File I/O
Come up with a Python program to generate a Fibonacci sequence till n steps,n = 8,"def fibonacci(n):
    numbers = []
    a = 0
    b = 1

    while len(numbers) <= n:
        c = a + b
        numbers.append(c)
        a = b
        b = c
    
    return numbers

if __name__ == '__main__':
    print(fibonacci(8))","def fibonacci(n):
    numbers = []
    a = 0
    b = 1

    while len(numbers) <= n:
        c = a + b
        numbe",Incomplete Answer,String Manipulation
Create a script in Python to generate the nth term of the Fibonacci series.,,"def Fibonacci(n):
 a = 0
 b = 1
 if n < 0:
  print(""Incorrect input"")
 elif n == 0:
  return a
 elif n == 1:
  return b
 else:
  for i in range(2,n):
   c = a + b
   a = b
   b = c
  return b

print(Fibonacci(5))","def Fibonacci(n):
 a = 0
 b = 1
 if n < 0:
  print(""Incorrect input"")
 elif n == 0:
  return a
 elif n == ",Incomplete Answer,Loops
Generate a Python algorithm to generate the following pattern,"""* * * *""","for i in range(4):
    for j in range(4):
        print(""*"", end="" "")
    print()","for i in range(4):
    for j in range(4)",Incomplete Answer,OOP
Construct a Python function that takes in three strings as parameters and returns a list containing sorted versions of the strings.,"""apples"", ""oranges"", ""peaches""","def sort_strings(s1, s2, s3):
    return sorted([s1, s2, s3])

result = sort_strings('apples', 'oranges', 'peaches')
print(result)","def sort_strings(s1, s2, s3):
    return sorted([s1, s2, s3])

result = sort_strings('apples', 'oranges', 'peaches')
print(result)",correct,String Manipulation
Write a python program to detect the occurrence of a given string in another large string.,"String 1: ""This is a test.""
String 2: ""test""","def str_find(str1, str2):
    return str1.find(str2) != -1

str_find(""This is a test."", ""test"")","def str_find(str1, str2):
    return str1.find(",Incomplete Answer,Recursion
Generate a correct python program that reverses a string,"string = ""Hello""","def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string","def reverse_string(string)
    reversed_string = """"
    for char in string
        reversed_string = char + reversed_string
    return reversed_string",Syntax Error,Loops
"Generate code for a Python class called Basket, which should inherit from a List class and have the following methods: add_item(), remove_item(), and get_total().",,"class Basket(list):
 
 def __init__(self):
  super().__init__()
 
 def add_item(self, item):
  self.append(item)
 
 def remove_item(self, item):
  self.remove(item)
 
 def get_total(self):
  total = 0
  for item in self:
   total += item.price
  return total","class Basket(list):
 
 def __init__(self):
  super().__init__()
 
 def add_item(self, item):
  self.append(item)
 
 def remove_it",Incomplete Answer,File I/O
Identify the type of object a Python expression will evaluate to.,expression = 8 + 5,Integer.,Integer.,Syntax Error,File I/O
Write a function to find the ration of zeroes in an array of integers.,,"from array import array
def zero_count(nums):
    n = len(nums)
    n1 = 0
    for x in nums:
        if x == 0:
            n1 += 1
        else:
          None
    return round(n1/n,2)","from array import array
def zero_count(nums):
    n = len(nums)
    n1 = 0
    for x in nums:",Incomplete Answer,Loops
Create a Python program to convert a Celsius temperature to Fahrenheit,,"def celsius_to_fahrenheit(celsius):
	fahrenheit = celsius * 9/5 + 32
	return fahrenheit","def celsius_to_fahrenheit(celsius):
	fahrenheit = celsius * 9/5 + 32
	return fahrenheit",correct,Recursion
Write an algorithm in Python to perform a linear search.,"arr = [1, 5, 7, 8, 10]
key = 7","def linear_search(arr, key):
    for index, element in enumerate(arr):
        if element == key:
            return index
    return -1

print(linear_search(arr, key))","def linear_search(arr, key):
    for index, element in enumerate(arr):
        if el",Incomplete Answer,String Manipulation
Write an algorithm in Python to determine if a number is an Armstrong number or not.,The number is 370.,"def armstrong_number(num):
  digits = [int(x) for x in str(num)]
  n_digits = len(digits)
  sum_of_cubes = 0
  for digit in digits:
    sum_of_cubes += digit ** n_digits
  if sum_of_cubes == num:
    return True
  else:
    return False

armstrong_number(370)","def armstrong_number(num:
  digits = [int(x for x in str(num]
  n_digits = len(digits
  sum_of_cubes = 0
  for digit in digits:
    sum_of_cubes += digit ** n_digits
  if sum_of_cubes == num:
    return True
  else:
    return False

armstrong_number(370",Syntax Error,File I/O
Design a Python script to rank a set of given numbers.,"[3, 8, 2, 9, 5]","def rank(nums): 
    sortedNums = sorted(nums, reverse = True) 
    for i in range(len(sortedNums)): 
        if sortedNums[i] == nums[i]: 
            print (i + 1, end = "" "") 
  
# Driver code 
nums = [3, 8, 2, 9, 5] 
rank(nums)","def rank(nums): 
    sortedNums = sorted(nums, reverse = True) 
    for i in range(len(sortedNums)): 
        if so",Incomplete Answer,OOP
Compute the greatest common divisor of two numbers with Python.,"a = 24
b = 36","def gcd(a, b): 
    if (a == 0): 
        return b 
    return gcd(b % a, a) 
  
print (""GCD("", a, "","", b, "") = "", gcd(a, b))","def gcd(a, b): 
    if (a == 0): 
        return b 
    return gcd(b % a, a) 
  
print (""GCD("", a, "","", b, "") = "", gcd(a, b))",correct,Loops
Create a Python function to remove all the characters of a specified string that appear more than once.,,"def remove_duplicates(string):
    result = """"
    for char in string:
        if string.count(char) == 1:
            result += char
    return result","def remove_duplicates(string:
    result = """"
    for char in string:
        if string.count(char == 1:
            result += char
    return result",Syntax Error,Recursion
Create a basic chatbot in Python to respond to user queries,,"import re

def chatbot_response(user_input):
    user_input = user_input.lower()
    
    # Check for Greeting
    if re.search(""hello|hi|sup"", user_input):
        return ""Hey there!""
    elif re.search(""bye"", user_input):
        return ""Goodbye""
    elif re.search(""what's your name"", user_input):
        return ""My name is ChatBot""
    else:
        return ""I don't understand""","import re

def chatbot_response(user_input):
    user_input = user_input.lower()
    
    # Check for Greeting
    if re.search(""hello|hi|sup"", user_input):
        return ""Hey there!""
    el",Incomplete Answer,OOP
Create a Python program which calculates the mean of a dataset,"data = [2, 4, 6, 8]","def dataset_mean(data):
    return sum(data)/len(data)","def dataset_mean(data):
    return sum(data)/len(data)",correct,Loops
Write a function in Python that receives two numbers as parameters and returns the larger one,,"def larger_num(a, b):
    if a > b:
        return a
    else:
        return b","def larger_num(a, b):
if a > b:
    return a
else:
    return b",Syntax Error,Recursion
Create a virtual environment in Python to manage project dependencies.,,"""""""
Create a virtual environment in Python to manage project dependencies
""""""

# Create the virtual environment
python3 -m venv env

# Activate the virtual environment
source env/bin/activate

# Install project requirements
pip install -r requirements.txt","""""""
Create a virtual environment in Python to manage project dependencies
""""""

# Create the virtual environment
python3 -m venv env

# Activate the virtual environment
source env/bin/activate

# Install project requirements
pip install -r requirements.txt",correct,OOP
Write a Python script to print out all the leap years from 2001 to 2025.,,"for year in range(2001,2026):
    # leap year condition
    if((year%4 == 0 and year%100 != 0) or year%400 == 0):
        print(year, end=' ')","for year in range(2001,2026):
    # leap year condition
    if((year%4 == 0 and year%100 != 0) or year%400 == 0):
        print(year, end=' ')",correct,OOP
Design a command-line interface in Python to accept user input,,"import sys

# collect the user's input
user_input = input('Enter your command: ')

# process the user's input and execute the corresponding command
if user_input == 'exit':
    sys.exit()
elif user_input == 'help':
    print('This is a helpful message.')
else:
    print('Command not recognized, try again.')","import sys

# collect the user's input
user_input = input('Enter your command: ')

# process the user's input and execute the corresponding command
if user_input == 'exit':
    sys.exit()
elif user_input == 'help':
    print('This is a helpful message.')
else:
    print('Command not recognized, try again.')",correct,Recursion
Create a Python function that takes two numbers and returns the biggest of them.,"x = 3, y = 6","def max_of_two(x, y):
    if x > y:
        return x
    else:
        return y
 
x = 3
y = 6
maximum = max_of_two(x, y)
print('The maximum of', x, 'and', y, 'is', maximum)","def max_of_two(x, y:
    if x > y:
        return x
    else:
        return y
 
x = 3
y = 6
maximum = max_of_two(x, y
print('The maximum of', x, 'and', y, 'is', maximum",Syntax Error,String Manipulation
Write a Python program to turn a string into Pig Latin.,"string = ""Hello World""","def toPigLatin(s):
   vowels = ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')
   if s[0] in vowels:
      return s + 'way'
   else:
      return s[1:] + s[0] + 'ay'
      
print(toPigLatin(""Hello World""))","def toPigLatin(s):
   vowels = ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')
   if s[0] in vowels:
",Incomplete Answer,OOP
Write a function to find the n-th rectangular number.,,"def find_rect_num(n):
  return n*(n + 1) ",def find_rect_num(n):,Incomplete Answer,String Manipulation
Write a Python program to multiply two given lists containing integers of the same size.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","# Create a new list with the elements of both lists 
list1 = [1, 2, 3]
list2 = [4, 5, 6]

# Multipliy each element of 2 lists and store in the 3rd list 
list3 = [] 
for x, y in zip(list1, list2): 
    list3.append(x*y) 

# Print the result 
print(list3)

# Output 
[4, 10, 18]","# Create a new list with the elements of both lists 
list1 = [1, 2, 3]
list2 = [4, 5, 6]

# Multipliy each element of 2 lists and store in",Incomplete Answer,Recursion
Generate a Python dictionary of given word frequencies.,"[('cat', 2), ('dog', 5), ('bird', 3)]","wordFrequencies = {
 'cat': 2,
 'dog': 5,
 'bird': 3
}","wordFrequencies = {
 'cat' 2,
 'dog' 5,
 'bird' 3
}",Syntax Error,Recursion
Write a function to find maximum of two numbers.,,"def max_of_two( x, y ):
    if x > y:
        return x
    return y","def max_of_two( x, y ):
    if x > y:
        return x
    return y",correct,File I/O
Generate a Python program to print a square matrix of size n containing the numbers from 11 to n*n.,3,"n = 3

output_matrix = [[0 for x in range(n)] for y in range(n)] 
  
num = 1
  
for i in range (0, n):    
 for j in range(0, n):     
 output_matrix[i][j] = num    
 num = num + 1    
  
for i in range(0, n):
 for j in range(0, n):
 print(output_matrix[i][j], end = "" "")
 print("""")","n = 3

output_matrix = [[0 for x in range(n)] for y in range(n)] 
  
num = 1
  
for i in range (0, n):    
 for j in range(0, n):     
 output_matrix[i][j] = num    
 num = num + 1    
  
for i in range(0, n):
 for j in range(0, n):
 print(output_matrix[i][j], end = "" "")
 print("""")",correct,Loops
Create a function in Python to normalize a given set of tokens.,,"def normalize_tokens(tokens):
    return [tok.lower() for tok in tokens]","def normalize_tokens(tokens):
    re",Incomplete Answer,File I/O
Write a Python function to calculate factorial using recursion.,,"def factorial(n): 
    if n == 0: 
        return 1
    else: 
        return n*factorial(n-1)","def factorial(n): 
    if n == 0: 
        retu",Incomplete Answer,File I/O
"Given a list of words and a length, write a Python program that returns a list of words with length equal or greater than the given length.","words = ['apple', 'toy', 'trees']
length = 5","def search_by_length(words, length):
    result = []
    for word in words:
        if len(word) >= length:
            result.append(word)
    return result

words = ['apple', 'toy', 'trees']
length = 5

print(search_by_length(words, length))","def search_by_length(words, length):
    result = []
    for word in words:
        if len(word) >= length:
            result.append(word)
    return result

words = ['apple', 'toy', 'trees']
length = 5

print(search_by_length(words, length))",correct,File I/O
Create an algorithm in Python to calculate the Fibonacci sequence up to a given number.,,"def fibonacci(n):
  a, b = 0, 1
  while a < n:
    print(a, end=' ')
    a, b = b, a+b

fibonacci(100)","def fibonacci(n):
  a, b = 0, 1
  while a < n:
    ",Incomplete Answer,File I/O
Write a Python program that prints out all possible words from a collection of letters.,"letters = [""a"", ""b"", ""t""]","import itertools

letters = [""a"", ""b"", ""t""]
words = []

# we use itertool's permutations to generate all combinations of letters
Result = itertools.permutations(letters, 3)

# we iterate through the output of itertool's permutation
# and append it to result list of words
for ele in list(Result):
    words.append(''.join(ele))

# printing the result
print(words)","import itertools

letters = [""a"", ""b"", ""t""]
words = []

# we use itertool's permutations to generate all combinations of letters
Result = itertools.permutations(letters, 3)

# we it",Incomplete Answer,File I/O
Use a for-loop in Python to print the ASCII value of each character in a given string.,"string = ""Hello""","for i in range(len(string)):
    print(ord(string[i]))  # Output: 72, 101, 108, 108, 111","for i in range(len(string))
    print(ord(string[i]))  # Output 72, 101, 108, 108, 111",Syntax Error,Recursion
Edit the following Python code to add exception handling for user input.,"name = input('What is your name? ')
print('Hello, ' + name)","try:
  name = input('What is your name? ')
  print('Hello, ' + name)
except:
  print('There was an error parsing your name.')","try:
  name = input('What is your name? ')
  print('Hello, ' + name)
except:
  print('There was an error parsing your name.')",Syntax Error,Recursion
Write a function to check if a nested list is a subset of another nested list.,,"def check_subset_list(list1, list2): 
    l1, l2 = list1[0], list2[0] 
    exist = True
    for i in list2: 
        if i not in list1: 
            exist = False
    return exist ","def check_subset_list(list1, list2): 
    l1, l2 = list1[0], list2[0] 
    exist = True
    for i in list2: 
        if i not in list1: 
            exist = False
    return exist ",correct,String Manipulation
Write a Python program to convert a list of lists into a dictionary where the first element of each list is the key and the rest of the elements are the values.,"list1 = [""apple"", ""red"", ""green""]
list2 = [""banana"", ""yellow"", ""green""]","dict1 = {}
for lst in [list1, list2]:
 key = lst[0]
 val = lst[1:]
 dict1[key] = val

print(dict1)
# Output: {'apple': ['red', 'green'], 'banana': ['yellow', 'green']}","dict1 = {}
for lst in [list1, list2]:
 key = lst[0]
 val = lst[1:]
 dict1[key] = val

print(dict1
# Output: {'apple': ['red', 'green'], 'banana': ['yellow', 'green']}",Syntax Error,OOP
Generate a Python program that takes two strings from the user and compares them to indicate if they are equal.,,"string1 = input(""Enter a string: "")
string2 = input(""Enter another string: "")

if string1 == string2:
 print(""The strings are equal"")
else:
 print(""The strings are not equal"")","string1 = input(""Enter a string: "")
string2 = input(""Enter another string: "")

if strin",Incomplete Answer,Loops
Write a Python program to convert a query string into a dictionary.,"queryString = ""country=usa&city=ny&lang=en&temp=77""","queryString = ""country=usa&city=ny&lang=en&temp=77""

queryDict = {}

for keyValueString in queryString.split('&'):
 key, value = keyValueString.split('=')
 queryDict[key] = value

print(queryDict)
# Output: {'country': 'usa', 'city': 'ny', 'lang': 'en', 'temp': '77'}","queryString = ""country=usa&city=ny&lang=en&temp=77""

queryDict = {}

for keyValueString in queryString.split('&'):
 key, value = keyValueString.split('=')
 queryDict[key] = value

print(queryDict)
# Output: {'country': 'usa', 'city': 'ny', 'lang': 'en', 'temp': '77'}",correct,File I/O
Write a function to count character frequency of a given string.,,"def char_frequency(str1):
    dict = {}
    for n in str1:
        keys = dict.keys()
        if n in keys:
            dict[n] += 1
        else:
            dict[n] = 1
    return dict","def char_frequency(str1:
    dict = {}
    for n in str1:
        keys = dict.keys(
        if n in keys:
            dict[n] += 1
        else:
            dict[n] = 1
    return dict",Syntax Error,OOP
Code a binary search algorithm in Python.,,"def binary_search(array, target):
    lower = 0
    upper = len(array)
    while lower < upper:
        x = lower + (upper - lower) // 2
        val = array[x]
        if target == val:
            return x
        elif target > val:
            if lower == x:
                break
            lower = x
        elif target < val:
            upper = x
    return -1","def binary_search(array, target):
    lower = 0
    upper = len(array)
    while lower < upper:
        x = lower + (upper - lower) // 2
        val = array[x]
        if target == va",Incomplete Answer,String Manipulation
Develop a Python program that calculates the average of a set of numbers based on user input,,"numlist = []
while True:
    user_input = input(""Enter a number: "")
    if user_input == 'done':
        break
    elif user_input == '': 
        continue
    else:
        numlist.append(int(user_input))
print(""Average is: "", sum(numlist) / len(numlist))","numlist = []
while True:
    user_input = input(""Enter a number: "")
    if user_input == 'done':
        break
    elif user_inp",Incomplete Answer,String Manipulation
Write a Python program to generate a list of even numbers between two given numbers.,"Start value = 2
End value = 20","def generate_list(start, end):
    result = []
    for i in range(start, end+1):
        if i%2 == 0:
            result.append(i)
    return result

print(generate_list(2, 20))","def generate_list(start, end):
    result = []
    for i in range(start, end+1):
        if i%2 == 0:
            result.append(i)
    return result

print(generate_list(2, 20))",correct,Recursion
Create a script in Python that can sort the following list of items alphabetically.,"list = ['car', 'apple', 'ball', 'Boat']","def sortAlpha(list):
    list.sort()
    return list","def sortAlpha(list):
    l",Incomplete Answer,String Manipulation
Write an example of a class definition in Python.,,"class Employee:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    def get_name(self):
        return self.name
    
    def get_age(self):
        return self.age
    
    def set_age(self, age):
        self.age = age","class Employee:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    def get_name(self):
        return self.name
    
    def get_age(self):
        return self.age
    
    def set_age(self, age):
        self.age = age",correct,String Manipulation
Create a Python function to optimize a given function towards a minimum,,"def optimize_function(function):
    # Perform optimization
    return min_value","def optimize_function(function):
    # Perform optimization
    return min_value",correct,OOP
Design a FOR loop algorithm in Python to print all numbers starting from one to the given number.,10,"for i in range(1, 11): 
    print(i)","for i in range(1, ",Incomplete Answer,Recursion
Write a function in Python that takes an integer as a parameter and returns the sum of all its positive divisors,,"def sum_of_divisors(n): 
    divisors = [i for i in range(1,n+1) if n%i == 0] 
    return sum(divisors) 
  
n = 24
print(""Sum of the positive divisors of 24 is:"",sum_of_divisors(n))","def sum_of_divisors(n): 
    divisors = [i for i in range(1,n+1) if n%i == 0] 
    return sum(divisors) 
  
n = 24
print(""Sum of the positive divisors of 24 is:"",sum_of_divisors(n))",correct,Loops
Create a quicksort algorithm in Python.,,"def quicksort(array):
    if len(array) < 2:
        return array
    else:
        pivot = array[0] 
        less = [i for i in array[1:] if i <= pivot]
        greater = [i for i in array[1:] if i > pivot]
        return quicksort(less) + [pivot] + quicksort(greater)","def quicksort(array):
    if len(array) < 2:
        return array
    else:
        pivot = array[0] 
        less = [i for i in array",Incomplete Answer,String Manipulation
Generate a JSON string from a Python dict object.,"dict_object = { 'name': 'John Doe', 'age': 40 }","import json

json_obj = json.dumps(dict_object)","import json

json_obj =",Incomplete Answer,OOP
Write an algorithm in Python that identifies and removes duplicates from a given array.,"Array = [2, 3, 4, 3, 2]","def removeDuplicates(array):
 result = []

 for number in array:
 if number not in result:
 result.append(number)

 return result

array = [2, 3, 4, 3, 2]
print(removeDuplicates(array))","def removeDuplicates(array):
 result = []

 for number in array:
 if number not in result:
 result.append(number)

 return result

array = [2, 3, 4, 3, 2]
print(removeDuplicates(array))",correct,Recursion
Develop a Python script for creating a dictionary with all the occurrences of the words in a sentence.,John and Mary went to the school,"sentence = ""John and Mary went to the school""
words = sentence.split()
word_dict = {}

for word in words:
    if word in word_dict:
        word_dict[word] += 1
    else:
        word_dict[word] = 1

print(word_dict)","sentence = ""John and Mary went to the school""
words = sentence.split()
word_dict = {}

for word in words:
  ",Incomplete Answer,String Manipulation
Write a Python program to do data classification.,,"from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier

def classify_data(dataset):
    X, y = dataset.data, dataset.target
    X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)

    knn = KNeighborsClassifier(n_neighbors=3)
    knn.fit(X_train, y_train)
    print(""Accuracy of K-NN: {}"".format(knn.score(X_test, y_test)))","from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier

def classify_data(dataset):
    X, y = dataset.data, dataset.target
    X_trai",Incomplete Answer,Recursion
Find the largest number in an array using Python.,"Array: [1, 10, 5, 6, 9, 8, 20]","arr = [1, 10, 5, 6, 9, 8, 20]

def largest_number(arr):
  largest = arr[0]
  for num in arr:
    if num > largest:
      largest = num

  return largest

largest = largest_number(arr)
print(largest) # 20","arr = [1, 10, 5, 6, 9, 8, 20]

def largest_number(arr):
  largest = arr[0]
  for num in arr:
    if num > largest:
      largest = num

  return largest

largest = largest_number(arr)
print(largest) # 20",correct,File I/O
"Create a Python program to determine if a given string is a palindrome and if so, print it.","String = ""racecar""","# Function to check if a string is a palindrome
def isPalindrome(s):
 # Reverse the string
 rev_s = s[::-1]

 # Check if the string is the same as its reverse
 if (s == rev_s):
 return True
 return False

# Driver code
s = 'racecar'

# Check if the given word is a palindrome
if (isPalindrome(s)):
 print(s)","# Function to check if a string is a palindrome
def isPalindrome(s:
 # Reverse the string
 rev_s = s[::-1]

 # Check if the string is the same as its reverse
 if (s == rev_s:
 return True
 return False

# Driver code
s = 'racecar'

# Check if the given word is a palindrome
if (isPalindrome(s:
 print(s",Syntax Error,OOP
Convert the following pseudo code into a Python Program.,"INPUT n
OUTPUT ""Even"" OR ""Odd""
IF n is divisible by 2
    OUTPUT ""Even""
ELSE
    OUTPUT ""Odd""","n = int(input(""Enter a number: ""))
if n%2 == 0:
    print(""Even"")
else:
    print(""Odd"")","n = int(input(""Enter a number: ""))
if n%2 == 0:
    print(""Even"")
else:
    print(""Odd"")",correct,Loops
Debug the following Python code,"def f1 (x):
 y = x + 1
def f2(x):
 return f1(x)*f1(x)

f2(2)","# define f1 #
def f1(x):
    return x + 1

# define f2 #
def f2(x):
    return f1(x) * f1(x)

# call f2 #
print(f2(2)) #Output: 9","# define f1 #
def f1(x)
    return x + 1

# define f2 #
def f2(x)
    return f1(x) * f1(x)

# call f2 #
print(f2(2)) #Output 9",Syntax Error,File I/O
Write a Python program to generate all the prime numbers between two given numbers.,,"def prime_num_generator(start, end):
    prime_list = [] 
    for num in range(start, end + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.append(num)
    return prime_list","def prime_num_generator(start, end):
    prime_list = [] 
    for num in range(start, end + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.append(num)
    return prime_list",correct,File I/O
Generate a python code to calculate the sum of two numbers given.,"a = 10
b = 20","def calculate_sum(a, b):
    """"""Calculate the sum of two numbers given.
    
    Parameters
    ----------
    a : int
        The first argument.
    b : int
        The second argument.
        
    Returns
    -------
    int
        The sum of the two numbers given.
    """"""
    sum = a + b
    return sum","def calculate_sum(a, b:
    """"""Calculate the sum of two numbers given.
    
    Parameters
    ----------
    a : int
        The first argument.
    b : int
        The second argument.
        
    Returns
    -------
    int
        The sum of the two numbers given.
    """"""
    sum = a + b
    return sum",Syntax Error,String Manipulation
Create a Python script to find the maximum and minimum numbers from a list.,"list1 = [2, 3, 7, 4, 5]","maxnum = max(list1)
minnum = min(list1)
print(""Maximum number is:"", maxnum) 
print(""Minimum number is:"", minnum) 
#prints Maximum number is: 7   Minimum number is: 2","maxnum = max(list1)
minnum = min(list1)
print(""Maximum number is:"", maxnum) 
print(""Minimum number is:"", minnum) 
#prints Maximum number is: 7   Minimum number is: 2",correct,String Manipulation
Create a method in Python that accepts two strings and returns a boolean if the two strings are anagrams.,“listen” and “silent”,"def is_anagram(string1, string2):
    return (sorted(string1) == sorted(string2))

print(is_anagram(""listen"", ""silent"")) # prints True","def is_anagram(string1, string2):
    return (sorted(string1) == so",Incomplete Answer,Loops
Create a function in Python for calculating the surface area of a cube.,The length of one of the sides of the cube,"def cube_area(side):
 return 6 * (side ** 2)","def cube_area(side):
 return 6 * (side ** 2)",correct,String Manipulation
Generate a Python program for merging two sorted lists.,"l1 = [1, 2, 5] 
l2 = [3, 4, 6]","def merge_sorted_lists(l1, l2):
        l3 = l1 + l2
        l3.sort()
        return l3
    
l1 = [1, 2, 5] 
l2 = [3, 4, 6]

result = merge_sorted_lists(l1, l2)
print(result)","def merge_sorted_lists(l1, l2):
        l3 = l1 + l2
        l3.sort()
        return l",Incomplete Answer,File I/O
Define a Python class called Appointment that creates appointment objects.,,"class Appointment():
     
    def __init__(self, date, time, reason):
        self.date = date
        self.time = time
        self.reason = reason
    
    def get_details(self):
        return f"" The appointment is on {self.date}, at {self.time}, for {self.reason}.""","class Appointment():
 
def __init__(self, date, time, reason):
    self.date = date
    self.time = time
    self.reason = reason

def get_details(self):
    return f"" The appointment is on {self.date}, at {self.time}, for {self.reason}.""",Syntax Error,Recursion
Create a method in Python to search through a list and return all elements which are divisible by 5.,"[4, 9, 5, 20, 21, 33]","def find_division_by_5(lst):
    """"""Search through a list and return all elements which are divisible by 5""""""
    result = []
    for item in lst:
        if item % 5 == 0:
            result.append(item)
    
    return result
    
if __name__ == '__main__':
    lst = [4, 9, 5, 20, 21, 33]
    print(find_division_by_5(lst))","def find_division_by_5(lst)
    """"""Search through a list and return all elements which are divisible by 5""""""
    result = []
    for item in lst
        if item % 5 == 0
            result.append(item)
    
    return result
    
if __name__ == '__main__'
    lst = [4, 9, 5, 20, 21, 33]
    print(find_division_by_5(lst))",Syntax Error,String Manipulation
Write a function to find minimum number of coins that make a given value.,,"import sys 
def min_coins(coins, m, V): 
    if (V == 0): 
        return 0
    res = sys.maxsize 
    for i in range(0, m): 
        if (coins[i] <= V): 
            sub_res = min_coins(coins, m, V-coins[i]) 
            if (sub_res != sys.maxsize and sub_res + 1 < res): 
                res = sub_res + 1  
    return res ","import sys 
def min_coins(coins, m, V): 
    if (V == 0): 
        return 0
    res = sys.maxsize 
    for i in range(0, m): 
        if (coins[i] <= V): 
     ",Incomplete Answer,Recursion
"Create a Python script to print the numbers from 1 to 50, but for multiples of 3 print ""Fizz"" instead of the number, for multiples of 5 print ""Buzz"" instead of the number and for multiples of both 3 and 5 print ""FizzBuzz"".",,"for i in range(1, 51):
    if i % 3 == 0 and i % 5 == 0:
        print(""FizzBuzz"")
    elif i % 3 == 0:
        print(""Fizz"")
    elif i % 5 == 0:
        print(""Buzz"")
    else:
        print(i)","for i in range(1, 51):
    if i % 3 == 0 and i % 5 == 0:
        print(""FizzBuzz"")
    elif i % 3 == 0:
        print(""Fizz"")
    elif i % 5 == 0:
        print(""Buzz"")
    else:
        print(i)",correct,Recursion
Generate a Python function that takes a dataframe and returns a new dataframe with only the columns that start with the letter 'A'.,,"def filter_A_columns(df): 
    col_list = [col for col in df.columns if col[0] == 'A']
    return df[col_list]","def filter_A_columns(df): 
    col_list = [col for col ",Incomplete Answer,File I/O
Implement a function in Python to print the next n prime numbers.,,"def n_prime_numbers(n):
 
    prime_list = []
    num = 2
    while len(prime_list) < n:
        for x in range(2,num):
            if num % x == 0:
                break
        else:
            prime_list.append(num)
        num += 1
    return prime_list

print(n_prime_numbers(10))","def n_prime_numbers(n):
 
    prime_list = []
    num = 2
    while len(prime_list) < n:
        for x in range(2,num):
            if num % x == 0:
                break
        else:
            prime_list.append(num)
        num += 1
    return prime_list

print(n_prime_numbers(10))",correct,Loops
"Generate a Python program to print ‘Hello, world!’ when executed.",,"print('Hello, world!')","print(name, 'Hello, world!')",Syntax Error,Loops
Write an algorithm in Python to calculate the area of a triangle given by its three points.,"A(x1,y1), B(x2,y2), C(x3,y3)","def area(x1,y1,x2,y2,x3,y3): 
    a = (x1 * (y2 - y3) + x2 * (y3 - y1) + 
         x3 * (y1 - y2))/2; 
    return abs(a); 

# Driver Code 
x1,y1 = (4,7)
x2,y2 = (5,6)
x3,y3 = (7,4)

print(area(x1,y1,x2,y2,x3,y3));","def area(x1,y1,x2,y2,x3,y3): 
    a = (x1 * (y2 - y3) + x2 * (y3 - y1) + 
         x3 * (y1 - y2))/2; 
   ",Incomplete Answer,OOP
"Write a Python program that parses and prints the value of the ""name"" field in a json string.","json_string = '{""name"":""John"", ""age"":20, ""city"":""San Fransisco""}'","import json

data = json.loads(json_string)

print(data['name'])

# Output: John","import json

data = json.loads(json_stri",Incomplete Answer,OOP
Create a Python dictionary structure that stores a warning message for each item in the following list.,"['apple', 'orange', 'banana']","{
 'apple': 'This apple is not fresh.',
 'orange': 'This orange has gone bad.',
 'banana': 'This banana is too ripe.'
}","{
 'apple': 'This apple is not fresh.',
 'orange': 'This orange has gone bad.',
 'banana': 'This banana is too ripe.'
}",correct,File I/O
Create a logic gate simulation using a Python program,Details of an OR gate,"def or_gate(a, b):
    if a or b == 0:
        return 0
    else:
        return 1","def or_gate(a, b):
if a or b == 0:
    return 0
else:
    return 1",Syntax Error,Recursion
Write a Python program to insert a given string at the beginning of all items in a list.,"my_list = [""hello"", ""world"", ""python""]
prefix = ""Programming - ""","my_list = [""hello"", ""world"", ""python""]
prefix = ""Programming - ""

# Insert the prefix to all items in the list
new_list = [prefix + item for item in my_list]

print(new_list)","my_list = [""hello"", ""world"", ""python""]
prefix = ""Programming - ""

# Insert the prefix to all items in the list
new_list = [prefix + item for item in my_list]

pritn(new_list)",Syntax Error,File I/O
Create a Python program to generate a list of random numbers.,"length = 5, min = 2, max = 10","import random

def generate_random_numbers(length, min, max):
  result = []
  for _ in range(length):
    result.append(round(random.uniform(min, max), 1))
  return result

print(generate_random_numbers(5, 2, 10)) # [2.6, 6.2, 2.5, 8.5, 8.1]","import random

def generate_random_numbers(length, min, max):
  result = []
  for _ in range(length):
    result.append(",Incomplete Answer,File I/O
"Using the turtle library in Python, create a geometric shape.",,"import turtle

t = turtle.Turtle();
t.speed(2);

t.right(72);
t.fd(100);
t.left(144);
t.fd(100);
t.left(144);
t.fd(100);
t.left(144);
t.fd(100);
t.left(144);
t.fd(100);

t.done();","import turtle

t = turtle.Turtle();
t.speed(2);

t.right(72);
t.fd(100);
t.left(144);
t.fd(100);
t.left(144);
t.fd(100);
t.left(144);
t.fd(100);
t.left(144);
t.fd(100);

t.done();",correct,OOP
Debug this Python code.,"def calculate_sum(numbers):
      sum = 0
      for num in numbers
         sum += num
      return sum","def calculate_sum(numbers):
      sum = 0
      for num in numbers: # the colon is missing
         sum += num
      return sum","def calculate_sum(numbers):
      sum = 0
      for num in numb",Incomplete Answer,Recursion
"Create a Python script to make an API request to an online store's API. The script should query for all available products, and print a summary of the results.",,"import requests
 
# Make an API request
url = 'https://example.com/api/products'
data = requests.get(url).json()
 
# Show results
print('Available Products')
for item in data['products']:
    print(f'{item[""name""]} - {item[""price""]}')","import requests
 
# Make an API request
url = 'https://example.com/api/products'
data = requests.get(url).json()
 
# ",Incomplete Answer,OOP
Create a python program to pre-order traverse a given binary tree.,,"def preOrderTraverse(tree):
    if tree is None:
        return
    
    print(tree.data)
    preOrderTraverse(tree.left)
    preOrderTraverse(tree.right)","def preOrderTraverse(tree):
    if tree is None:
        return
    
    print(tree.data)
    preOrderTraverse(tree.left)
    preOrderTraverse(tree.right)",correct,String Manipulation
Design a function in Python to classify an input into positive or negative.,number = -3,"def classify_number(number):
    if number > 0:
        return 'positive'
    else:
        return 'negative' 

result = classify_number(number)
print(result)","def classify_number(number):
    if number > 0:
        return 'positive'
    e",Incomplete Answer,Loops
"Use Python to build a random number generator in the range [0, 10).",,"import random
 
x = random.randint(0, 9)
print(x)","import random
 
x = random.randint(0, 9)
print(x)",correct,File I/O
Keep a record of all the URLs visited from a given website in Python.,,"def track_urls(url): 
    visited_urls = set() 
    current_url = url 
    while current_url: 
        if current_url not in visited_urls: 
            visited_urls.add(current_url) 
        current_url = get_next_url(current_url) 
    return visited_urls","def track_urls(url): 
    visited_urls = set() 
    current_url = url 
    while current_url: 
        if current_url not in visited_urls: 
            visited_urls.add(current_url) 
        current_url = get_next_url(current_url) 
    return visited_urls",correct,String Manipulation
Design a python program to create a directory,,"import os

def create_dir(path):
    try:
        os.mkdir(path)
    except OSError:
        print(""Creation of the directory %s failed"" % path)
    else:
        print(""Successfully created the directory %s "" % path)","import os

def create_dir(path):
    try:
        os.mkdir(path)
    except OSError:
        print(""Creation of the directory %s failed"" % path)
    else:
        print(""Successfully created the directory %s "" % path)",correct,Loops
Design a script in Python to scrape text data from a particular web page.,url = 'https://en.wikipedia.org/wiki/Movie',"from bs4 import BeautifulSoup
import requests

# Get the HTML of the page
html_content = requests.get(url).text

# Create the Soup object
soup = BeautifulSoup(html_content, 'lxml')

# Find the text data
data = soup.find_all('p')

# Print the text data
for element in data:
      print(element.text)","from bs4 import BeautifulSoup
import requests

# Get the HTML of the page
html_content = requests.get(url).text

# Create the Soup object
soup = BeautifulSoup(html_content, 'lxml')

# Find the text data
data = soup.find_all('p')

# Print the text data
for element in data:
      print(element.text)",correct,OOP
Extract the 2nd and 3rd element from a given list in Python.,"list = [1, 2, 3, 4, 5]",new_list = list[1:3],new_list =,Incomplete Answer,Recursion
Write a function to check whether the entered number is greater than the elements of the given array.,,"def check_greater(arr, number):
  arr.sort()
  if number > arr[-1]:
    return ('Yes, the entered number is greater than those in the array')
  else:
    return ('No, entered number is less than those in the array')","def check_greater(arr, number):
  arr.sort()
  if number > arr[-1]:
    return ('Yes, the entered number is greater than those in the array')
  else:
    return ('No, entered number is less than those in the array')",correct,File I/O
Generate a Python program to implement the following feature: Search a phrase in a given string.,"Search the phrase ""to be or not to be"" in the string ""Whether 'tis nobler in the mind to suffer"".","def search(phrase, string):
  if phrase in string:
     return True 
  else:
     return False 

result = search(""to be or not to be"", ""Whether 'tis nobler in the mind to suffer"")
print(result)","def search(phrase, string):
  if phrase in string:
     return True 
  else:
     return False 

result = search(""to be or not to be"", ""Whether 'tis nobler in the mind to suffer"")
print(name, result)",Syntax Error,String Manipulation
Write a Python program to read in three numbers and find the smallest of the three.,"3, 6, 8","a = int(input(""Enter first number: ""))
b = int(input(""Enter second number: ""))
c = int(input(""Enter third number: ""))

minimum = min(a, b, c)

print(""The smallest of the three numbers is"", minimum)","a = int(input(""Enter first number: ""))
b = int(input(""Enter second number: ""))
c = int(input(""Ente",Incomplete Answer,OOP
Write a Python program to calculate the sum of two given numbers. The two supplied numbers will be equal or one will be greater than the other.,"num1 = 3
num2 = 5","def sum_two_numbers(num1, num2):
 return num1 + num2

print(sum_two_numbers(num1, num2))
# Output: 8","def sum_two_numbers(num1, num2):
 return num1 + nu",Incomplete Answer,String Manipulation
Write a function to find the median of a trapezium.,,"def median_trapezium(base1,base2,height):
 median = 0.5 * (base1+ base2)
 return median","def median_trapezium(base1,base2,height):
 median = 0.5 * (base1+ base2)
 return median",Syntax Error,Loops
Design a Python program to sort a given numeric array in increasing order.,,"def sort_array(arr):
    for i in range(len(arr)-1):
        for j in range(len(arr)-i-1):
            if arr[j] > arr[j+1]:
                temp = arr[j]
                arr[j] = arr[j+1]
                arr[j+1] = temp
    return arr","def sort_array(arr):
    for i in range(len(arr)-1):
        for j in range(len(arr)-i-1):
            if arr[j] > ar",Incomplete Answer,File I/O
Read the string ‘Hello World’ and identify the lengths of the words using Python,,"def word_lengths(string):
    words = string.split(' ')
    lengths = []
    for word in words:
        lengths.append(len(word))
    return lengths 

word_lengths('Hello World') // [5, 5]","def word_lengths(string):
    words = string.split(' ')
    lengths = []
    for word in words",Incomplete Answer,Loops
Create a python program to calculate the mean of 3 numbers.,,"def calculate_mean(num1, num2, num3):
    mean = (num1 + num2 + num3) / 3
    return mean","def calculate_mean(num1, num2, num3):
    mean = (num1 + num2 + num3) / 3
    return mean",correct,String Manipulation
Create a Python program to generate all the permutations of a string using backtracking.,ABC,"def permute(s, l, r):
 if l == r:
  print(''.join(s))
 else:
  for i in range(l, r+1):
   s[l], s[i] = s[i], s[l]
   permute(s, l + 1, r)
   s[l], s[i] = s[i], s[l] 

def generate_all_permutations(s):
 n = len(s)
 permute(list(s), 0, n-1)

s = 'ABC'
generate_all_permutations(s)","def permute(s, l, r):
 if l == r:
  print(''.join(s))
 else:
  for i in range(l, r+1):
   s[l], s[i] = s[i], s[l]
   permute(s, l + 1, r)
   s[l], s[i] = s[i], s[l] 

def generate_all_permutations(s):
 n = len(s)
 permute(list(s), 0, n-1)

s = 'ABC'
generate_all_permutations(s)",correct,File I/O
Find a bug in the given Python program and fix it.,"def get_times_table(x):
  times_table = []
  for i in range(10):
      times_table[i] = x * i
  return times_table","def get_times_table(x):
  times_table = []
  for i in range(10):
      times_table.append(x * i)
  return times_table","def get_times_table(x):
  times_table = []
  for i in range(10):
      times_table.append(x * i)
  return times_table",Syntax Error,OOP
Create a machine learning model in Python that predicts the stock price the next day given past 6 days' prices.,,"import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

data = pd.read_csv('stock_data.csv') 
X = data.iloc[:, :-1] 
y = data.iloc[:, -1] 

model = LinearRegression() 
model.fit(X, y) 

def predict_price(prices):
 x = np.array(prices).reshape(1, -1)
 return model.predict(x)[0]","import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

data = pd.read_csv('stock_data.csv') 
X = data.iloc[:, :-1] 
y = ",Incomplete Answer,File I/O
Generate 1000 random numbers between 0 and 1 using Python.,,"import random

random_numbers = []
for _ in range(1000):
    random_numbers.append(random.random())

print(random_numbers)","import random

random_numbers = []
for _ in range(1000):
    ",Incomplete Answer,String Manipulation
Create an algorithm and its corresponding code implementation in Python that counts the number of words in a string.,This is a sentence,"def word_count(string):
 words = string.split()
 return len(words)

print(word_count(""This is a sentence""))","def word_count(string):
 words = string.split()
 retu",Incomplete Answer,String Manipulation
Create a Python script which removes specified index from a list.,,"def remove_index(my_list, remove_index):
my_list.remove(my_list[remove_index])
return my_list","def remove_index(my_list, remove_index):
my_list.remove(my_list[remove_index])
return my_list",correct,String Manipulation
Create a program to detect plagiarism using Python.,,"import difflib

def detect_plagiarism(text1, text2):
    sequenceMatcher = difflib.SequenceMatcher(None, text1, text2)
    matchPercentage = sequenceMatcher.ratio() * 100
    return matchPercentage

detect_plagiarism(""This is a sample text"", ""This is a sample text."")","import difflib

def detect_plagiarism(text1, text2):
    sequenceMatcher = difflib.SequenceMatcher(None, text1, text2)
    matchPerce",Incomplete Answer,String Manipulation
create a function in Python to add 10 to any given number.,,"def add_ten(number):
    """"""
    This function takes a number as an argument and adds 10 to it.
    """"""
    return number + 10


if __name__ == '__main__':
    print(add_ten(5)) # Output: 15","def add_ten(number):
    """"""
    This function takes a number as an argument and adds 10 to it.",Incomplete Answer,Loops
Generate code to implement a pre-order tree traversal in Python.,,"def preOrderTraversal(root):
 if root is None:
 return

 print(root.data)
 preOrderTraversal(root.left)
 preOrderTraversal(root.right)","def preOrderTraversal(root):
 if root is None:
 return

 print(root.data)
 preOrderTraversal(root.left)
 preOrderTraversal(root.right)",correct,String Manipulation
Suppose you are given a list of strings in Python. Write a function that takes the list of strings as input and prints out the first string that is longer than 10 characters.,"[""cat"", ""doggo"", ""elephant"", ""giraffe""]","def find_long_string(string_list):
    for string in string_list:
        if len(string) > 10:
            print(string)
            break

string_list = [""cat"", ""doggo"", ""elephant"", ""giraffe""]
find_long_string(string_list)","def find_long_string(string_list):
    for string in string_list:
        if len(string) > 10:
            print(string)
            break

string_list = [""cat"", ""doggo"", ""elephant"", ""giraffe""]
find_long_string(string_list)",correct,String Manipulation
Write a python function to find the minimum operations required to make two numbers equal.,,"import math   
def min_Operations(A,B):  
    if (A > B): 
        swap(A,B)  
    B = B // math.gcd(A,B);  
    return B - 1","import math   
def min_Operations(A,B):  
    if (A > B): 
        swap(A,B)  
    B = B // math.gcd(A,B);  
    return B - 1",correct,File I/O
"Create a Python script that generates a random list of 5 numbers between 1 and 99, each of the numbers must be unique and different.",,"import random 

# Generate a random list of 5 numbers between 1 and 99
random_list = random.sample(range(1,100), 5) 

# Print the list 
print(random_list)","import random 

# Generate a random list of 5 numbers between 1 and 99
random_list = random.sample(range(1,100), 5) 

# Print the list 
print(random_list)",correct,Loops
Provide a Python program to print out a Pascal triangle,,"""""""
A function to print out a Pascal triangle
""""""

def pascal_triangle(n): 
    # Initialize the row
    row = [1]

    # Calculate each successive row 
    y = [0] 
    for x in range(max(n, 0)): 
        print(row)
		# Compute the next row
        row = [sum(i) for i in zip(row + y, y + row)] 
        # Copy the row
        y = row[:] 
		
if __name__ == '__main__':
    n = 5
    pascal_triangle(n)","""""""
A function to print out a Pascal triangle
""""""

def pascal_triangle(n): 
    # Initialize the row
    row = [1]

    # Calculate each successive row 
    y = [0] 
    for x in range(max(n, 0)): 
        print(row)
		# Compute the next row
        row = [sum(i) for i in zip(row + y, y + row)] 
        # Copy the row
        y = row[:] 
		
if __name__ == '__main__':
    n = 5
    pascal_triangle(n)",correct,File I/O
Rewrite the following algorithm using Python:,,"def star_pattern(n):
    # Outer loop to handle number of rows 
    # n in this case 
    for i in range(0, n): 
      
        # Inner loop to handle number of columns 
        # values changing acc. to outer loop 
        for j in range(0, i+1): 
          
            # Printing stars 
            print(""* "",end="""") 
       
        # Ending line after each row 
        print(""\r"") 
  
# Driver Code 
n = 5
star_pattern(n)","def star_pattern(n):
    # Outer loop to handle number of rows 
    # n in this case 
    for i in range(0, n): 
      
        # Inner loop to handle number of columns 
        # values changing acc. to outer loop 
        for j in range(0, i+1): 
          
            # Printing stars 
            print(name, ""* "",end="""") 
       
        # Ending line after each row 
        print(name, ""\r"") 
  
# Driver Code 
n = 5
star_pattern(n)",Syntax Error,Recursion
Create a Python function that returns all the prime numbers between 1 and a given number.,Number: 25,"def get_primes(n):
 primes = []
 for num in range(2, n + 1):
 is_prime = True
 for divisor in range(2, num):
 if num % divisor == 0:
 is_prime = False
 break
 
 if is_prime:
 primes.append(num)
 
 return primes
 
primes = get_primes(25)
print(primes) # prints [2, 3, 5, 7, 11, 13, 17, 19, 23]","def get_primes(n):
 primes = []
 for num in range(2, n + 1):
 is_prime = True
 for divisor in range(2, num):
 if num % divisor == 0:
 is_prime = False
 break
 
 if is_prime:
 primes.append(num)
 
 return primes
 
primes = get_primes(25)
print(primes) # prints [2, 3, 5, 7, 11, 13, 17, 19, 23]",Syntax Error,Loops
Write a python function to print an array in reverse order,,"def print_reverse(arr): 
    for i in range(len(arr)-1, -1, -1): 
        print(arr[i], end="" "")","def print_reverse(arr: 
    for i in range(len(arr-1, -1, -1: 
        print(arr[i], end="" """,Syntax Error,File I/O
Can you generate a random number between 1 and 10 using Python?,,"import random

def generate_random_number():
 return random.randint(1, 10)","import random

def generate_random_nu",Incomplete Answer,String Manipulation
"Create a Python class Person, which has the properties first_name, last_name and age.",,"class Person:
    def __init__(self, first_name, last_name, age):
        self.first_name = first_name
        self.last_name = last_name
        self.age = age

    def full_name(self):
        return self.first_name + "" "" + self.last_name","class Person:
    def __init__(self, first_name, last_name, age):
        self.first_name = first_name
        self.last_name = last_name
        self.age = age

    def full_name(self):
        return self.first_name + "" "" + self.last_name",correct,String Manipulation
"Given a JSON string, write a Python program that prints out the values for each key.","{""FirstName"": ""John"", ""LastName"": ""Smith""}","import json

data_string = '{""FirstName"": ""John"", ""LastName"": ""Smith""}'
data = json.loads(data_string)

for key, value in data.items(): 
    print(""{} = {}"".format(key, value))","import json

data_string = '{""FirstName"": ""John"", ""LastName"": ""Smith""}'
data = json.load",Incomplete Answer,String Manipulation
Write a python program to flatten a list of lists,,"def flatten(lst):
    flattened = []
    for elem in lst:
        if isinstance(elem, list):
            flattened += flatten(elem)
        else:
            flattened.append(elem)
    return flattened

if __name__ == '__main__':
    lst = [[1,2,3], [4,5], [6]]
    print(flatten(lst))","def flatten(lst):
    flattened = []
    for elem in lst:
        if isinstance(elem, list):
            flattened += flatten(elem)
        el",Incomplete Answer,File I/O
Write a Python program to create a list consisting of the squares of all the odd numbers between two given numbers m and n.,,"def list_odd_squares(m, n):
  squares = []
  for i in range(m, n+1):
    if i % 2 != 0:
      squares.append(i*i)
  return squares","def list_odd_squares(m, n):
  squares = []
  for i in range(m, n+1):
    if i % 2 != 0:
      squares.append(i*i)
  return squares",correct,Loops
Write a code in Python to display a sorted array of the numbers in an array that are greater than the given value.,"[2, 4, 6, 8, 10, 12]
Given number: 6","def sort_greater_numbers(arr, num):
    result = [x for x in arr if  x > num]
    result.sort()
    return result","def sort_greater_numbers(arr, num):
    result = [x for x in arr if  x > num]
    result.sort()
    return result",correct,OOP
Write a Python program for creating email address based on input domain name and username.,"username=johndoe
domain=example.com","def generate_email_address(username, domain):
  return f""{username}@{domain}""

username = input(""Enter username:"")
domain = input(""Enter domain:"")

email_address = generate_email_address(username, domain)
print(""Generated email address:"", email_address)","def generate_email_address(username, domain):
  return f""{username}@{domain}""

username = input(""Enter username:"")
domain = in",Incomplete Answer,String Manipulation
Write a Python program to optimize this linear equation.,x + y = 5,"# function to solve equation 
def solve(eqn): 
    x, y = sympy.symbols('x y') 
    return sympy.solve((eqn, ), (x, y)) 
  
# equation
eqn = x + y - 5

# solve equation
result = solve(eqn)
x_sol = result[x]
y_sol = result[y]

print(""x ="", x_sol)
print(""y ="", y_sol)","# function to solve equation 
def solve(eqn): 
    x, y = sympy.symbols('x y') 
    return sympy.solve((eqn, ), (x, y)) 
  
# equati",Incomplete Answer,String Manipulation
Write a short program in Python to print out each word in a given sentence.,,"sentence = ""This is a sentence""

for word in sentence.split():
    print(word)","sentence = ""This is a sentence""

for word in sentence.split():
    print(word)",correct,String Manipulation
Write a Python program to convert a list to a tuple,"[1,2,3]","def list_to_tuple(list):
    return tuple(list)","def list_to_tuple(list):
    return tuple(list)",correct,OOP
Create a Python program that takes two string as input and produces a new string as output. The output string is the concatenation of the two inputs with all the vowels removed.,"string1 = 'Hello World!'
string2 = 'This is a test.'","def remove_vowels(string1, string2):
  res = ''
  vowels = 'aeiouAEIOU'

  for char in string1 + string2:
    if char not in vowels:
      res += char
  
  return res

print(remove_vowels(string1, string2))","def remove_vowels(string1, string2):
  res = ''
  vowels = 'aeiouAEIOU'

  for char in string1 + string2:
    if char not in vowels:
      res += char
  
  return res

print(remove_vowels(string1, string2))",correct,OOP
Create a python program that calculates the maximum of three numbers.,"Numbers: 5, 8, 3","def max_three(a, b, c):
    m = max(a, b)
    m = max(m, c)
    return m","def max_three(a, b, c):
    m = max(a, b)
    m = max(m, c)
    return m",correct,Loops
Convert the following basic Python code into its equivalent JavaScript code.,"for i in range(1, 5):
    print(i)","for(let i = 1; i < 5; i++){
    console.log(i);
}","for(let i = 1; i < 5; i++){
    console.log(i);
}",correct,Loops
Design a Python class for quadratic equations.,,"class QuadraticEquation:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
        
    def get_roots(self):
        d = (self.b**2) - (4*self.a*self.c)
         
        # find two solutions
        sol1 = (-self.b-cmath.sqrt(d))/(2*self.a)
        sol2 = (-self.b+cmath.sqrt(d))/(2*self.a)
        
        return (sol1, sol2)","class QuadraticEquation:
def __init__(self, a, b, c):
    self.a = a
    self.b = b
    self.c = c
    
def get_roots(self):
    d = (self.b**2) - (4*self.a*self.c)
     
    # find two solutions
    sol1 = (-self.b-cmath.sqrt(d))/(2*self.a)
    sol2 = (-self.b+cmath.sqrt(d))/(2*self.a)
    
    return (sol1, sol2)",Syntax Error,OOP
Create a Python module to evaluate expressions.,,"def evaluate(expression):
    """"""Evaluates the given expression""""""

    try:
        return eval(expression)
    except TypeError:
        raise ValueError(""The expression must be a valid Python expression"")","def evaluate(expression):
    """"""Evaluates the given expression""""""

    try:
        return eval(expres",Incomplete Answer,Recursion
"Given a Python dictionary, write a function that prints out the key-value pairs in alphabetical order.","{
 'Mark': '68',
 'Carol': '35',
 'John': '42'
}","def print_dict_alphabetically(dictionary):
    sorted_keys = sorted(dictionary.keys())
    for key in sorted_keys:
        print(f""{key}: {dictionary[key]}"")

print_dict_alphabetically({
 'Mark': '68',
 'Carol': '35',
 'John': '42'
})","def print_dict_alphabetically(dictionary):
    sorted_keys = sorted(dictionary.keys())
    for key in sorted_keys:
        print(f""{key}: {dictionary[key]}"")

print_dict_alphabetically({
 'Mark': '68',
 'Carol': '35',
 'John': '42'
})",correct,String Manipulation
Generate an algorithm in Python to classify an email as spam or not spam.,"""This email is from the spamming company.""","def classify_email(email):
    spam_words = ['spam', 'scam', 'unsubscribe', 'refund', 'free', 'win']

    # Check if email contains any words that indicate a spam email
    for word in spam_words:
        if word in email:
            return 'spam'

    # If no words were found, return 'not spam' 
    return 'not spam'","def classify_email(email)
    spam_words = ['spam', 'scam', 'unsubscribe', 'refund', 'free', 'win']

    # Check if email contains any words that indicate a spam email
    for word in spam_words
        if word in email
            return 'spam'

    # If no words were found, return 'not spam' 
    return 'not spam'",Syntax Error,OOP
Write a function in Python to generate a random number between two given numbers.,,"import random
def random_between_nums(num1, num2):
    return random.randint(num1, num2)","import random
def random_between_nums(num1, num2):
return random.randint(num1, num2)",Syntax Error,Loops
"Given a Python list of integers, write a function to find the sum of the elements in the list.","nums = [1, 2, 3, 4, 5]","def findSum(nums):
 total = 0
 for num in nums:
 total += num
 return total","def findSum(nums):
 total = 0
 for nu",Incomplete Answer,OOP
Design a Python program to stop a loop after some specific iterations,,"for i in range(100):
    if (i > 10):
        break
    print(i)","for i in range(100):
    if (i > 10):
        break
    pritn(i)",Syntax Error,OOP
Create a program in Python to generate an infinite sequence of random numbers.,,"# This program will generate an infinite sequence of random numbers
import random

# Generate infinite sequence of random numbers
def rand_seq():
 while True:
  yield random.random()
  
# Print 10 random numbers
for i in range(10):
 print(next(rand_seq()))","# This program will generate an infinite sequence of random numbers
import random

# Generate infinite sequence of random numbers
def rand_seq()
 while True
  yield random.random()
  
# Print 10 random numbers
for i in range(10)
 print(next(rand_seq()))",Syntax Error,Loops
"Write an SQL query that will find all books whose titles contain the word ""Python"".",,"SELECT *
FROM books
WHERE title LIKE '%Python%'","SELECT *
FROM books
WHE",Incomplete Answer,Recursion
Create a Python program to replace all vowels in a given string with a given character.,"string = ""replace all vowels""
character = '*'","def replace_vowels(s, c): 
    return s.translate(str.maketrans('aeiou', c*5))

print(replace_vowels(string, character)) 

# Output: 
 r*pl*c* *ll v*w*ls","def replace_vowels(s, c): 
    return s.translate(str.maketrans('aeiou', c*5))

print(replace_vowels(string, character)) 

# Output: 
 r*pl*c* *ll v*w*ls",correct,OOP
Create a basic Twitter bot using Python and Tweepy for publishing tweets.,,"import tweepy

# authentication
consumer_key = 'YOUR_CONSUMER_KEY'
consumer_secret = 'YOUR_CONSUMER_SECRET'
access_token = 'YOUR_ACCESS_TOKEN'
access_token_secret = 'YOUR_ACCESS_TOKEN_SECRET'

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)

# Tweeting
text = 'Hello, world!'
api.update_status(text)","import tweepy

# authentication
consumer_key = 'YOUR_CONSUMER_KEY'
consumer_secret = 'YOUR_CONSUMER_SECRET'
access_token = 'YOUR_ACCESS_TOKEN'
access_token_secret = 'YOUR_ACCESS_TOKEN_SECRET'

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)

# Tweeting
text = 'Hello, world!'
api.update_status(text)",correct,Loops
Design a Python program that computes the reverse of a given string.,Hello,"def reverseString(s):
    return s[::-1]
 
s = ""Hello""
print(reverseString(s))","def reverseString(s):
    return s[::-1]
 
s = ""Hello""
print(reverseString(s))",correct,OOP
Rewrite the following JavaScript code to a python code.,"function addNums(x, y) {
    return x + y;
}","def addNums(x, y):
    return x + y","def addNums(x, y)",Incomplete Answer,Recursion
Create a Python program to count the number of occurrences of a certain element in a list.,"[1, 2, 1, 2, 5, 2, 1]","def count_occurrences(lst, element):
    count = 0
    for item in lst:
        if item == element:
            count += 1
    return count

result = count_occurrences([1, 2, 1, 2, 5, 2, 1], 2)
print(result)","def count_occurrences(lst, element):
    count = 0
    for item in lst:
        if item == element:
   ",Incomplete Answer,OOP
Write a Python script to find all prime numbers in a given list of numbers.,"[13, 19, 23, 5, 7]","""""""
Find all prime numbers in a given list of numbers
""""""

def is_prime(n):
    for i in range(2, n):
        if n % i == 0:
            return False
        else:
            return True

numbers = [13, 19, 23, 5, 7]
for num in numbers:
    if is_prime(num):
        print(num,""is a prime number"")","""""""
Find all prime numbers in a given list of numbers
""""""

def is_prime(n):
    for i in range(2, n):
        if n % i == 0:
            return False
        else:
            return True

numbers = [13, 19, 23, 5, 7]
for num in numbers:
    if is_prime(num):
        print(name, num,""is a prime number"")",Syntax Error,File I/O
Create a Python program to count the number of upper case and lower case letters in a given string,Hello World,"def countLetters(s): 
   uppercase, lowercase = 0, 0
   for x in s: 
      if x.islower(): 
         lowercase+= 1
      elif x.isupper(): 
         uppercase+= 1
   print (""No. of Upper case characters : "", uppercase) 
   print (""No. of Lower case Characters : "", lowercase) 

countLetters('Hello World')","def countLetters(s): 
   uppercase, lowercase = 0, 0
   for x in s: 
      if x.islower(): 
         lowercase+= 1
      elif x.isupper(): 
         uppercase+= 1
   print (""No. of Upper case characters : "", uppercase) 
   print (""No. of Lower case Characters : "", lowercase) 

countLetters('Hello World')",correct,Loops
"Create a function which takes two strings as arguments, concatenates the two strings, and capitalizes the result.","str1 = 'python'
str2 = 'programming'","def concat_and_capitalize(str1, str2):
    result = str1 + str2
    return result.capitalize()

str1 = 'python'
str2 = 'programming'
print(concat_and_capitalize(str1, str2))","def concat_and_capitalize(str1, str2):
    result = str1 + str2
    return result.capi",Incomplete Answer,Recursion
Write a Python program that takes a list of numbers and creates a new list of even numbers only.,"lst = [2, 3, 5, 6, 7, 8, 10, 11]","def get_even_numbers(lst):
    even_lst = []
    for num in lst:
        if num % 2 == 0:
            even_lst.append(num)
    return even_lst","def get_even_numbers(lst):
    even_lst = []
    for num in lst:
      ",Incomplete Answer,String Manipulation
Develop a Python program to determine the frequency of characters in an input string.,Input string: hello world,"def frequency(string):
 freq = {}
 for c in string:
 if c not in freq:
 freq[c] = 1
 else:
 freq[c] += 1
 return freq

string = input('Please enter your string: ')
print(frequency(string))","def frequency(string):
 freq = {}
 for c in string:
 if c not in freq:
 freq[c] = 1
 else:
 freq[c] += 1
 return freq

string = input('Please enter your string: ')
print(frequency(string))",correct,String Manipulation
Compose a python program to search an element in an array,"[2, 3, 4, 5]","def linear_search(arr, x): 
    for i in range(len(arr)): 
  
        if arr[i] == x: 
            return i+1
  
    return -1

arr = [2, 3, 4, 5] 
x = 4

print(linear_search(arr, x))","def linear_search(arr, x): 
for i in range(len(arr)): 
  
    if arr[i] == x: 
        return i+1
  
return -1

arr = [2, 3, 4, 5] 
x = 4

print(linear_search(arr, x))",Syntax Error,OOP
Create a Python program to convert raw JSON data into a Pandas DataFrame.,"{
    ""Name"": ""John Smith"",
    ""Age"": 25,
    ""Location"": ""New York, USA""
}","import json
import pandas as pd

data = {
 ""Name"": ""John Smith"",
 ""Age"": 25,
 ""Location"": ""New York, USA""
}

df = pd.DataFrame.from_dict(json.loads(json.dumps(data)))
print(df)

Output
   Name  Age      Location
0  John   25  New York, USA","import json
import pandas as pd

data = {
 ""Name"": ""John Smith"",
 ""Age"": 25,
 ""Location"": ""New York, USA""
}

df = pd.DataFrame.from_dict(json.loads(json.dumps(data)))
print(df)

Output
   Name  Age      Location
0  John   25  New York, USA",correct,OOP
Generate a list of prime numbers in Python list comprehension format within 1000.,,"primes_list = [num for num in range(2, 1000) if all(num % i != 0 for i in range(2, num))]","primes_list = [num for num in range(2, 1000) if all(num % i != 0 for i in range(2, num))]",Syntax Error,Loops
Create a function to find the number of times the given string appears in the array.,"Python, ""Python""","def count_occurrences(items, string):
  count = 0
  for item in items: 
    if item == string:
      count += 1
  return count

print(count_occurrences(['Python', 'Python'], ""Python""))

# Output: 2","def count_occurrences(items, string):
  count = 0
  for item in items: 
if item == string:
  count += 1
  return count

print(count_occurrences(['Python', 'Python'], ""Python""))

# Output: 2",Syntax Error,File I/O
Create a Python program to find the elements that are common in two unsorted lists.,"list1 = [12, 5, 7, 45, 32]
list2 = [7, 2, 45, 11, 32]","def common_in_two_lists(list1, list2):
    common_elements = []
    for number in list1:
        if number in list2:
            common_elements.append(number)
    return common_elements","def common_in_two_lists(list1, list2):
    common_elements = []
    for number in list1:
        if number in list2:
            common_elements.append(number)
    return common_elements",correct,Recursion
Design a program to build a recursive tree structure with nodes in Python.,,"class Node:
    def __init__(self, val):
      self.right = None
      self.data = val
      self.left = None

def insert(node, data): 
  if node is None:
    return Node(data)
  else:
    if data <= node.data:
      node.left = insert(node.left, data)
    else:
      node.right = insert(node.right, data)
  return node","class Node:
    def __init__(self, val):
      self.right = None
      self.data = val
      self.left = None

def insert(node, data): 
  if node is None:
    r",Incomplete Answer,File I/O
Write a Python program which prints out all prime numbers between 1 and 100.,,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

for n in range(1, 101):
    if is_prime(n):
        print(n)","def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i",Incomplete Answer,Loops
Model a logistic regression algorithm using Python to predict a binary target: true or false.,"[[0,0], [0,1], [1,0], [1,1]], [1,1,0,1]","import numpy as np

X = np.array([[0,0], [0,1], [1,0], [1,1]])
y = np.array([1,1,0,1])

from sklearn.linear_model import LogisticRegression

clf = LogisticRegression(random_state=0).fit(X, y)

print(""Prediction:"", clf.predict([[2,2]]))","import numpy as np

X = np.array([[0,0], [0,1], [1,0], [1,1]])
y = np.array([1,1,0,1])

from sklearn.linear_model import LogisticRegression

clf = LogisticRegression(random_state=0).fit(X, y)

print(""Prediction"", clf.predict([[2,2]]))",Syntax Error,File I/O
Write a Python script that sorts a list of tuples in descending order based on the second element of each tuple.,"[('a', 3), ('b', 1), ('c', 4)]","def sortTupleListInDescendingOrder(tuple_list):
    tuple_list.sort(key=lambda tup: tup[1], reverse=True)
    return tuple_list

sorted_list = sortTupleListInDescendingOrder([('a', 3), ('b', 1), ('c', 4)])

print(sorted_list)","def sortTupleListInDescendingOrder(tuple_list):
    tuple_list.sort(key=lambda tup: tup[1], reverse=True)
    re",Incomplete Answer,File I/O
Create a Python script to remove all elements from a list that are divisible by 3.,"[2, 3, 4, 6, 8, 9]","def remove_divisible_by_3(arr):
    new_arr = []
    for num in arr:
        if num % 3 != 0:
            new_arr.append(num)
    return new_arr

arr = [2, 3, 4, 6, 8, 9]
result = remove_divisible_by_3(arr)
print(result)","def remove_divisible_by_3(arr):
    new_arr = []
    for num in arr:
        if num % 3 != 0:
            new_arr.append(num)
    return new_arr

arr = [2, 3, 4, 6, 8, 9]
result = remove_divisible_by_3(arr)
print(result)",correct,Loops
Write a Python program that takes an array containing n elements and generates the power set.,n = 3,"import itertools

def powerset(lst):
    powerset = []
    for n in range(len(lst) + 1):
        for subset in itertools.combinations(lst, n):
            powerset.append(subset)
    return powerset

arr = [1, 2, 3]
print(powerset(arr))","import itertools

def powerset(lst):
    powerset = []
    for n in range(len(lst) + 1):
        for subset in itertoo",Incomplete Answer,OOP
Create a program in Python to accept user input and sort the user input in ascending order.,"2, 7, 4, 5","user_list = [2, 7, 4, 5]
sorted_list = sorted(user_list)
print(sorted_list)
# Output: [2, 4, 5, 7]","user_list = [2, 7, 4, 5]
sorted_list = sorted(use",Incomplete Answer,Loops
Generate a Python program that finds the maximum and minimum values of a given list.,"[-1, 6, 4, -2, 3]","def findMaxMin(numbers):
    max_val = max(numbers)
    min_val = min(numbers)
    return max_val, min_val

numbers = [-1, 6, 4, -2, 3]
max_val, min_val = findMaxMin(numbers)

print(""The maximum value is:"", max_val)
print(""The minimum value is:"", min_val)","def findMaxMin(numbers):
    max_val = max(numbers)
    min_val = min(numbers)
    return max_val, min_val

numbers = [-1, 6, 4, -2, 3]
max_val, min_val = findMaxMin(numbers)

print(""The maximum value is:"", max_val)
print(""The minimum value is:"", min_val)",correct,Recursion
Create a Python program to find the sum of all divisors of an input number.,No input.,"def sum_divisors(num): 
    r = 0
    for i in range(1, num + 1):
        if num % i == 0:
            r += i
    return r

num = int(input(""Input a number: ""))
print(""Sum of all divisors of input is"", sum_divisors(num))","def sum_divisors(num): 
    r = 0
    for i in range(1, num + 1):
        if num % i == 0:
            r += i
    return r

num = int(input(""Input a number: ""))
print(""Sum of all divisors of input is"", sum_divisors(num))",correct,Loops
"Create a data structure in Python to store the following data: Student Name, Score in Mathematics, Score in English.","Student1: John, 91, 83
Student2: Mary, 94, 93","students = {
 'John': {'Math': 91, 'English': 83},
 'Mary': {'Math': 94, 'English': 93},
}","students = {
 'John': {'Math': 91, 'English': 83},
 'Mary': {'Math': 94, 'English': 93},
}",correct,File I/O
Write a Python program that generates a series of Fibonacci numbers.,,"def fibonacci(n):
    a = 0
    b = 1
    for _ in range(n):
        a, b = b, a + b
    return a

print(fibonacci(10))","def fibonacci(n):
    a = 0
    b = 1
    for _ in range(n):
        a, b = b, a + b
    return a

print(fibonacci(10))",correct,OOP
Write a Python program to create and print a list of the first 10 prime numbers.,,"import math

def is_prime(n):
    if n <= 1:
        return False  
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

list_of_primes = []

for i in range(2, 11):
    if is_prime(i):
        list_of_primes.append(i)

print(list_of_primes)","import math

def is_prime(n):
    if n <= 1:
        return False  
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            ",Incomplete Answer,OOP
Write a Python program for converting a decimal number into its corresponding binary string.,56,"def decimal_to_binary(n):
 binary_string = """"
 while n > 0:
 binary_string += str(n % 2)
 n //= 2
 return binary_string[::-1]

# Example
result = decimal_to_binary(5)
print(result) 

# Output
101","def decimal_to_binary(n):
 binary_string = """"
 while n > 0:
 binary_string += str(n % 2)
 n //= 2
 return binary_string[::-1]

# Example
result = decimal_to_binary(5)
print(result) 

# Output
101",correct,File I/O
Write a quick sorting algorithm using Python.,,"def quick_sort(array):
    if len(array) <= 1:
        return array

    pivot = array[0]
    left = []
    right = []

    for element in array[1:]:
        if element <= pivot:
            left.append(element)
        else:
            right.append(element)

    return quick_sort(left) + [pivot] + quick_sort(right)","def quick_sort(array):
    if len(array) <= 1:
        return array

    pivot = array[0]
    left = []
    right = []

    for element in array[1:]:
        if element <= pivot:
            left.append(element)
        else:
            right.append(element)

    return quick_sort(left) + [pivot] + quick_sort(right)",correct,File I/O
Generate a Python program to implement binary search on the given sorted array.,"[2, 3, 5, 6, 8, 9]","def binary_search(arr, target):
    low = 0
    high = len(arr) - 1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return -1","def binary_search(arr, target):
    low = 0
    high = len(arr) - 1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return -1",Syntax Error,OOP
Write a Python program to combine two given strings by alternating its characters,"string1 = ""ab""
string2 = ""xy""","def combine_strings(string1, string2):
    combined_string = """"
    length = max(len(string1), len(string2))
    for i in range(length):
        combined_string += string1[i] if i < len(string1) else """"
        combined_string += string2[i] if i < len(string2) else """"
    return combined_string

result = combine_strings(""ab"", ""xy"")
print(result)","def combine_strings(string1, string2):
    combined_string = """"
    length = max(len(string1), len(string2))
    for i in range(length):
        combined_string += string1[i",Incomplete Answer,OOP
Write a function to iterate over elements repeating each as many times as its count.,,"from collections import Counter
def count_variable(a,b,c,d):
  c = Counter(p=a, q=b, r=c, s=d)
  return list(c.elements())","from collections import Counter
def count_variable(a,b,c,d):
  c = Counter(p=a, q=b, r=c, s=d)
  return list(c.elements())",Syntax Error,File I/O
Optimize the following Python code to compute the sum of even numbers in a list.,"my_list = [1, 2, 3, 4, 5, 6]
total = 0
for num in my_list:
 if num % 2 == 0:
  total += num
print(total)","my_list = [1, 2, 3, 4, 5, 6]

# sum comprehension 
total = sum(num for num in my_list if num % 2 == 0)
print(total)","my_list = [1, 2, 3, 4, 5, 6]

# sum comprehension 
total ",Incomplete Answer,Recursion
Create a python script for Creating a car class with attributes like color and engine type.,,"class Car:
    def __init__(self, color, engine_type): 
        self.color = color 
        self.engine_type = engine_type 
  
    def get_color(self):
        print(""Car's Color: "", self.color) 
  
    def get_engine_type(self):
        print(""Car's Engine Type: "", self.engine_type)","class Car:
    def __init__(self, color, engine_type): 
        self.color = color 
        self.engine_type = engine_type 
  
    def get_col",Incomplete Answer,File I/O
Create a python program to find if a number is a prime number,15,"def is_prime(num):
    for i in range(2, num):
        if not num % i:
            return False
    return True

num = 15 
if is_prime(num):
    print(""The number is prime"")
else:
    print(""The number is not prime"")","def is_prime(num):
    for i in range(2, num):
        if not num % i:
            return False
    return T",Incomplete Answer,File I/O
Write a function to tokenize a sentence using NLTK library in Python.,,"# Solution
# First, let's import NLTK library
import nltk

# Define our sentence to tokenize
sentence = 'This is a test sentence.'

# Tokenize the sentence
tokenized_sentence = nltk.word_tokenize(sentence)

# Print out the result
print(tokenized_sentence)","# Solution
# First, let's import NLTK library
import nltk

# Define our sentence to tokenize
sentence = 'This is a test sentence.'

# Tokenize the sentence
tokenized_sentence = nltk.word_tokenize(sentence)

# Print out the result
print(tokenized_sentence)",correct,Loops
Generate a Python program that takes an integer N and outputs the sum of 1 to N.,,"def sum_1_to_n(n):
  sum = 0
  for i in range(1, n+1):
    sum += i
  return sum","def sum_1_to_n(n):
  sum = 0
  for i in range(1, n+1):
    sum += i
  return sum",correct,String Manipulation
"Write a python program to clean up a string by removing punctuation, non-alphanumeric regions  or converting to lowercase.","example_string = ""This i$n't a siMPle StrinG""","import string

example_string = ""This i$n't a siMPle StrinG""
new_string = example_string.translate(str.maketrans('', '', string.punctuation)).replace(' ', '').lower()
print(new_string)

Output:
thisisntasimplestring","import string

example_string = ""This i$n't a siMPle StrinG""
new_string = example_string.translate(str.maketrans('', '', string.punctuation)).replace(' ', '').lower()
print(new_string)

Output:
thisisntasimplestring",correct,File I/O
Design a Python function to print out all permutations of a given string.,"""ABC""","def permute(s):
    if len(s) == 1:
        return s

    perms = []
    for i in range(len(s)):
        element = s[i]

        remaining_elements = s[:i] + s[i+1:]
        z = permute(remaining_elements)

        for t in z:
            perms.append(element + t)

    return perms

print(permute(""ABC""))","def permute(s):
    if len(s) == 1:
        return s

    perms = []
    for i in range(len(s)):
        element = s[i]

        remaining_elements = s[:i] + s[i+1:]
        z = permute(remaining_elements)

        for t in z:
            perms.append(element + t)

    return perms

print(permute(""ABC""))",correct,OOP
Write a function to add the given tuple to the given list.,,"def add_tuple(test_list, test_tup):
  test_list += test_tup
  return (test_list) ","def add_tuple(test_list, test_tup):
  test_list += test_tup
  return (test_list) ",Syntax Error,OOP
How can you write a function in Python to pivot a data frame with 2 columns?,"Data frame:
  A  B
1 a  b
2 c  d","import pandas as pd 
  
def pivot_dataframe(df): 
    df_pivot = df.pivot(index = 'A', columns ='B') 
    return df_pivot

df = pd.DataFrame({'A':{1:'a',2:'c'}, 
                   'B':{1:'b',2:'d'} 
                  }) 

print(pivot_dataframe(df)) 
# Output 
   B  
A     b  d
  a  c","import pandas as pd 
  
def pivot_dataframe(df): 
    df_pivot = df.pivot(index = 'A', columns ='B') 
    return df_pivot

df = pd.DataFrame({",Incomplete Answer,String Manipulation
Develop a program in Python to sort a list of integer numbers.,"[1, 7, 5, 9, 3]","def sort_list(list):
 sorted_list = sorted(list)
 return sorted_list 

list = [1, 7, 5, 9 , 3]
print(sort_list(list)) # will print [1, 3, 5, 7, 9]","def sort_list(list):
 sorted_list = sorted(list)
 return sorted_list 

li",Incomplete Answer,File I/O
Generate a random set of 10 numbers between 1 and 100 in Python.,,"import random

random_nums = random.sample(range(1,101), 10)
print(random_nums)

// Output: [45, 76, 70, 83, 24, 53, 22, 81, 77, 71]","import random

random_nums = random.sample(range(1,101), 10)
print(random_nums)

// Output [45, 76, 70, 83, 24, 53, 22, 81, 77, 71]",Syntax Error,OOP
Write a python program to create a list of every third number between 1 and fifty.,,"my_list = []
for i in range(1, 50, 3):
    my_list.append(i)","my_list = []
for i in range(1, 50, 3:
    my_list.append(i",Syntax Error,String Manipulation
Create a Python program that finds the low and high stock prices from a given array of stock prices.,"Example array: [9, 15, 7, 8, 13, 5]","def min_max_stock_price(arr):
 low = float('inf')
 high = float('-inf')
 
 for price in arr:
 low = min(low, price)
 high = max(high, price)
 
 return [low, high]
 
print(min_max_stock_price([9, 15, 7, 8, 13, 5])) # Output: [5, 15]","def min_max_stock_price(arr):
 low = float('inf')
 high = float('-inf')
 
 for price in arr:
 low = min(low, price)
 high = max(high, price)
 
 return [low, high]
 
print(min_max_stock_price([9, 15, 7, 8, 13, 5])) # Output: [5, 15]",correct,Loops
Write a Python program to a generate a random 4-digit number in which all 4 digits are even.,,"import random

def generate_random_even_number():
    n = 0
    while n < 1000 or n > 9999:
        n = 0
        for i in range(4):
            n += random.randint(0, 8) * (10 ** i)
        if n % 2 == 0:
            break
    return n","import random

def generate_random_even_number(:
    n = 0
    while n < 1000 or n > 9999:
        n = 0
        for i in range(4:
            n += random.randint(0, 8 * (10 ** i
        if n % 2 == 0:
            break
    return n",Syntax Error,File I/O
"Create a class Animal in Python with two instance variables, name and age, and a constructor Animal(name, age). It should also have a speak() method that prints out the animal's name.",,"class Animal:
 def __init__(self, name, age):
  self.name = name
  self.age = age
 
 def speak(self):
  print(""My name is"", self.name)","class Animal:
 def __init__(self, name, age):
  self.name = name
  self.age = age
 
 def speak(self):
  pritn(""My name is"", self.name)",Syntax Error,OOP
"Create a function in Python that takes a list of strings, converts it to camelCase, and returns a new list with the converted strings.","list = [""this"", ""is"", ""an"", ""example""]","def convertToCamelCase(list):
    camelCaseList = []

    for string in list:
        string = string.capitalize()
        camelCaseList.append(string)

    return ''.join(camelCaseList)","def convertToCamelCase(list):
    camelCaseList = []

    for string in list:
        string = string.capitalize()
        camelCaseList.append(string)

    return ''.join(camelCaseList)",correct,File I/O
Write a function in Python to print a random permutation of array elements.,"input_array = [1, 2, 3, 4, 5]","import random
def random_permutation(input_array):
    perm = []
    while(len(input_array) > 0):
        el = random.choice(input_array)
        perm.append(el)
        input_array.remove(el)
    return perm","import random
def random_permutation(input_array):
    perm = []
    while(len(input_array) > 0):
      ",Incomplete Answer,Loops
Create a Python program that finds the longest common prefix strings among an array of strings.,"[""flower"",""flow"",""flight""]","def lcp(arr):
    if len(arr) == 0:
        return """"
    elif len(arr) == 1:
        return arr[0]
    else:
        prefix = arr[0]
        for i in range(1, len(arr)):
            while arr[i].find(prefix) != 0:
                prefix = prefix[:-1]
        return prefix

result = lcp([""flower"",""flow"",""flight""])
print(result)","def lcp(arr):
    if len(arr) == 0:
        return """"
    elif len(arr) == 1:
        return arr[0]
    else:
        prefix = arr[0]
        for i in range(1, len(",Incomplete Answer,File I/O
Generate a Python script that prints out the first n Fibonacci numbers.,,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n+1, 1): 
            c = a + b 
            a = b 
            b = c 
        return b","def fibonacci(n: 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"" 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n+1, 1: 
            c = a + b 
            a = b 
            b = c 
        return b",Syntax Error,OOP
Create a function in Python that takes two strings and combines the characters of each string keeping the order of the characters.,"foo
bar","def combine(s1, s2):
    result = """" 
    for i in range(max(len(s1), len(s2))):
        if i < len(s1):
            result += s1[i]
        if i < len(s2):
            result += s2[i]
    return result","def combine(s1, s2):
    result = """" 
    for i in range(max(len(s1), len(s2))):
        if i < len(s",Incomplete Answer,Recursion
"Assuming a Python class Point for representing a point in a two dimensional plane with x and y as its field variables, write a method to calculate the distance from a point to the origin.","class Point:
    def __init__(self, x=0, y=0):
        self.x = x
        self.y = y","class Point:
    def __init__(self, x=0, y=0):
        self.x = x
        self.y = y
    
    def distance_from_origin(self):
        return ((self.x ** 2) + (self.y ** 2)) ** 0.5","class Point:
    def __init__(self, x=0, y=0):
        self.x = x
        self.y = y
    
    def distance_from_origin(self):
        return ((self.x ** 2) + (self.y ** 2)) ** 0.5",correct,Recursion
Write a Python function to input a list of integers and a number and output the number of times that number appears in the list.,"[1, 2, 3, 4, 5, 2, 6], 2","def count_occurrences(numbers, n):
 count = 0
 for num in numbers:
 if num == n:
 count += 1
 return count","def count_occurrences(numbers, n):
 count = 0
 for num in numbers:
 if num == n:
 count += 1
 return count",Syntax Error,Loops
Implement an algorithm in Python to find the mode of the given array,"arr = [2, 4, 3, 3, 5, 3, 7]","def findMode(arr): 
 max_count = 1 
 mode = arr[0] 
 count = 1 
  
 for i in range(1,len(arr)): 
 if (arr[i] == arr[i - 1]): 
 count = count + 1 # increment count
 if (count > max_count): 
 max_count = count # update max_count 
 mode = arr[i] 
 else: 
 count = 1 # reset count 
  
 return mode 

# Driver program 
arr = [2, 4, 3, 3, 5, 3, 7] 
print(findMode(arr)) # prints 3","def findMode(arr): 
 max_count = 1 
 mode = arr[0] 
 count = 1 
  
 for i in range(1,len(arr)): 
 if (arr[i] == arr[i - 1]): 
 count = count + 1 # increment count
 if (count > max_count):",Incomplete Answer,Loops
Generate a correct python program to store a dictionary of customer information,"The dictionary should store customer name, phone number and address","customer_dict = {}

def store_customer_info(name, phone_number, address):
    customer_dict[name] = {
        'phone_number': phone_number,
        'address': address
        }

if __name__ == '__main__':
    store_customer_info('John Doe', '1234567890', 'New York')","customer_dict = {}

def store_customer_info(name, phone_number, address):
    customer_dict[name] = {
        'phone_number': phone_n",Incomplete Answer,File I/O
Develop a web service using Python Flask to handle POST requests.,,"from flask import Flask, request

app = Flask(__name__)

@app.route('/api', methods=['POST'])
def api():
 if (request.method == 'POST'):
  # All code for handling POST requests
  return 'Handling POST requests'
 else:
  return 'Method Not Allowed'

if __name__=='__main__':
 app.run(debug=True)","from flask import Flask, request

app = Flask(__name__)

@app.route('/api', methods=['POST'])
def api():
 if (request.method == 'POST'):
  # All code for handling POST requests
  return 'Handling POST requests'
 else:
  return 'Method Not Allowed'

if __name__=='__main__':
 app.run(debug=True)",correct,Recursion
Create a Python program to find the longest word in a given sentence.,"""This is a test sentence""","def longestWord(sentence): 
    words = sentence.split(' ')
    longest_word = ''
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    return longest_word

sentence = ""This is a test sentence""
print(longestWord(sentence)) // ""sentence""","def longestWord(sentence): 
    words = sentence.split(' ')
    longest_word = ''
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    return longest_word

sentence = ""This is a test sentence""
print(longestWord(sentence)) // ""sentence""",correct,File I/O
"Write a Python program that prints out the numbers from 1 to 100, with the exception of numbers divisible by 3, which should be printed as ""Fizz"" and numbers divisible by 5, which should be printed as ""Buzz"". Numbers divisible by both 3 and 5 should be printed out as ""FizzBuzz"".",,"for i in range(1, 101):
 if i % 3 == 0 and i % 5 == 0:
 print(""FizzBuzz"")
 elif i % 3 == 0:
 print(""Fizz"")
 elif i % 5 == 0:
 print(""Buzz"")
 else:
 print(i)","for i in range(1, 101):
 if i % 3 == 0 and i % 5 == 0:
 pritn(""FizzBuzz"")
 elif i % 3 == 0:
 pritn(""Fizz"")
 elif i % 5 == 0:
 pritn(""Buzz"")
 else:
 pritn(i)",Syntax Error,Recursion
Write a script in Python to filter out the strings containing the character 'x'.,"['abc', 'efg', 'X', 'xyz', 'xabc']","def filter_x(list):
    new_list = []

    # iterate through the list 
    for i in list:
        if 'x' not in i:
            # add the string not containing x
            new_list.append(i)
    return new_list

list = ['abc', 'efg', 'X', 'xyz', 'xabc']
filtered_list = filter_x(list)
print(""The list after filtering: "", filtered_list)","def filter_x(list):
    new_list = []

    # iterate through the list 
    for i in list:
        if 'x' not in i:
            # add the string not containing x
            new_list.append(i)
    return new_list

list = ['abc', 'efg', 'X', 'xyz', 'xabc']
filtered_list = filter_x(list)
pritn(""The list after filtering: "", filtered_list)",Syntax Error,String Manipulation
Write a Python module to clean off noisy data by smoothing out short-range fluctuations.,,"import numpy as np

def smooth_data(data, window_size):
    window = np.ones(int(window_size))/float(window_size)
    return np.convolve(data, window, 'same')","import numpy as np

def smooth_data(data, window_size):
    window = np.ones(in",Incomplete Answer,String Manipulation
Generate a hashmap in Python to store the given data.,"Name: Alice, Age: 30, Gender: Female
Name: Bob, Age: 20, Gender: Male","dict = {}

dict['Alice'] = {'Age': 30, 'Gender': 'Female'}
dict['Bob'] = {'Age': 20, 'Gender': 'Male'}","dict = {}

dict['Alice'] = {'Age': 30, 'Gender': 'F",Incomplete Answer,String Manipulation
Write a function in Python to remove a specific character from a string.,"string = ""Hello World""
character = 'l'","def remove_character(string, character):
    return string.replace(character, '')

print(remove_character(string, character))","def remove_character(string, character):
return string.replace(character, '')

print(remove_character(string, character))",Syntax Error,String Manipulation
Create a function in Python that outputs the Fibonacci series up to the nth number.,,"def Fibonacci(n):
  
  # Setting up the base cases
  if n == 0:
    return 0
  elif n == 1:
    return 1
  
  # Calculating the Fibonacci sequence
  num1, num2 = 0, 1
  for i in range(2, n+1):
    num1, num2 = num2, num1 + num2
    
  return num2

# Driver Code
n = 10
print(Fibonacci(n))","def Fibonacci(n):
  
  # Setting up the base cases
  if n == 0:
    return 0
  elif n == 1:
    return 1
  
  # Calculating the Fibonacci sequen",Incomplete Answer,OOP
Write a python function to check whether the frequency of each digit is less than or equal to the digit itself.,,"def validate(n): 
    for i in range(10): 
        temp = n;  
        count = 0; 
        while (temp): 
            if (temp % 10 == i): 
                count+=1;  
            if (count > i): 
                return False
            temp //= 10; 
    return True","def validate(n): 
    for i in range(10): 
        temp = n;  
        count = 0; 
        while (temp): 
            if (temp % 10 == i): 
                count+=1;  
            if (count > i): 
                return False
            temp //= 10; 
    return True",correct,Loops
Generate an api response in Python for the provided data.,"Data = {
""name"" : ""John"",
""age"" : 28
}","response = {
  ""status"": 200,
  ""data"": {""name"": ""John"",""age"":28},
  ""message"": ""Success""
}","response = {
  ""status"" 200,
  ""data"" {""name"" ""John"",""age""28},
  ""message"" ""Success""
}",Syntax Error,Recursion
You need to write a Python program to convert a decimal number into its binary equivalent.,num = 8,"def get_binary(num):
    return bin(num)[2:]

res = get_binary(num)
print(res)","def get_binary(num):
    return bin(num",Incomplete Answer,Recursion
"Given a list of words and a target word, write a Python function to check if the target word exists in the list.","Let's say the list is ['apple', 'banana', 'car', 'dog'] and the target word is 'banana'.","def isElementPresent(list, target): 
  for word in list: 
    if word == target: 
      return True
  return False

wordlist = ['apple', 'banana', 'car', 'dog'] 
target = 'banana'
print(isElementPresent(wordlist, target)) 
# prints True","def isElementPresent(list, target): 
  for word in list: 
    if word == target: 
      return True
  return False

wordlist = ['apple', 'banana', 'car', 'dog'] 
target = 'banana'
print(isElementPresent(wordlist, target)) 
# prints True",correct,File I/O
Create a Python program that reads in an unsorted array of integers and prints the array in sorted order.,"[3, 2, 5, 1, 7, 4]","def sort_array(arr):
   arr.sort()
   return arr

arr = [3, 2, 5, 1, 7, 4]

sorted_arr = sort_array(arr)
print(sorted_arr) # [1, 2, 3, 4, 5, 7]","def sort_array(arr):
   arr.sort()
   return arr

arr = [3, 2, 5, 1, 7,",Incomplete Answer,String Manipulation
"Generate a Python class for a Person object with attributes for name, age, height, and weight.",,"class Person:
 def __init__(self, name, age, height, weight):
 self.name = name
 self.age = age
 self.height = height
 self.weight = weight
 
 def get_info(self):
 return f'Name: {self.name}, Age: {self.age}, Height: {self.height}, Weight: {self.weight}'","class Person:
 def __init__(self, name, age, height, weight):
 self.name = name
 self.age = age
 self.height = height
 self.wei",Incomplete Answer,File I/O
"Given a 2D array of integers, write a Python function to rotate the array clockwise by 90 degrees.","[[1, 2, 3],
[4, 5, 6],
[7, 8, 9]]","def rotate_array(arr):
    newarr = []
    for i in range(len(arr[0])):
        newarr_row = []
        for j in range(len(arr)):
            newarr_row.append(arr[len(arr)-j-1][i])
        newarr.append(newarr_row)

    return newarr","def rotate_array(arr):
    newarr = []
    for i in range(len(arr[0])):
        newarr_row = []
        for j in rang",Incomplete Answer,File I/O
Develop a Python program that automatically prints out a Fibonacci sequence of length n.,,"def print_fibonacci(length):
    a = 0 
    b = 1

    while length > 0:
        print(a)
        temp = a 
        a = b 
        b = temp + b 
        length = length - 1","def print_fibonacci(length):
    a = 0 
    b = 1

    while length > 0:
        print(a)
        temp = a 
        a = b 
        b = temp + b 
        length = length - 1",correct,File I/O
Create a slugify function in Python that converts a sentence into a valid URL slug.,This Is a Test,"def slugify(string):
    slug = string.lower().strip().replace(' ', '-')
    return slug

slug = slugify(""This Is a Test"")
print(slug)","def slugify(string):
    slug = string.lower().strip().replace(' ',",Incomplete Answer,File I/O
Write a code in Python to print out every integer between 5 and 15 (inclusive).,,"for i in range(5, 16):
    print(i)","for i in range(5, 16):
    print(name, i)",Syntax Error,Recursion
Generate a program in Python to solve a given linear equation,3x + 5 = 10,"def solve_linear_eq(eq):
    x, b = eq.split(' ')
    a, op, constant_term = x.split('x')

    a = int(a)
    b = int(b)
    constant_term = int(constant_term)
    
    if op == '+':
        x = (constant_term - b) / a
    elif op == '-':
        x = (b - constant_term) / a
    
    return x

solution = solve_linear_eq('3x + 5 = 10')
print(""x = "" + str(solution))","def solve_linear_eq(eq):
    x, b = eq.split(' ')
    a, op, constant_term = x.split('x')

    a = int(a)
    b = int(b)
    constant_term = int(constant_term)
    
    if op == '+':",Incomplete Answer,Loops
Write a Python program to generate 10 random numbers and put them in a list.,,"import random

random_list = []
for i in range(10):
 number = random.randint(1, 100)
 random_list.append(number)","import random

random_list = []
for i in range(10):
 number = random.randint(1, 100)
 random_list.append(number)",correct,Recursion
Write a function to find the length of the shortest string that has both str1 and str2 as subsequences.,,"def super_seq(X, Y, m, n):
	if (not m):
		return n
	if (not n):
		return m
	if (X[m - 1] == Y[n - 1]):
		return 1 + super_seq(X, Y, m - 1, n - 1)
	return 1 + min(super_seq(X, Y, m - 1, n),	super_seq(X, Y, m, n - 1))","def super_seq(X, Y, m, n):
	if (not m):
		return n
	if (not n):
		return m
	if (X[m - 1] == Y[n - 1]):
		return 1 + super_seq(X, Y, m - 1, n - 1)
	return 1 + min(super_seq(X, Y, m - 1, n),	super_seq(X, Y, m, n - 1))",Syntax Error,OOP
"Construct a Python program to calculate the body mass index (BMI) of a person, given their height and weight",,"def calculate_bmi(height, weight): 
    bmi = weight / (height * height) 
    return bmi","def calculate_bmi(height, weight): 
    bmi = weight / (height * height) 
    return bmi",Syntax Error,String Manipulation
Develop a program to track the stock price using the Yahoo Finance API in Python,Yahoo API token: abc123,"import yfinance as yf

# Get the data of the stocks for the given ticker
ticker = ""AAPL""
data = yf.Ticker(ticker)

# The Yahoo API token
token = ""abc123""

# Get historical data for the ticker
data.history(period=""1mo"", token=token)

# Print the price
print(data.history(token=token)[""Close""].iloc[-1})","import yfinance as yf

# Get the data of the stocks for the given ticker
ticker = ""AAPL""
data = yf.Ticker(ticker)

# The Yahoo API token
token = ""abc123""

# Get historical data for the ticker
data.history(period=""1mo"", token=token)

# Print the price
print(data.history(token=token)[""Close""].iloc[-1})",correct,Recursion
Create a Python library to implement a common algorithm.,,"import math

def algorithm(input1, input2):
    # Algorithm logic here
    return output","import math

def algorithm(input1, input2:
    # Algorithm logic here
    return output",Syntax Error,String Manipulation
Optimize a given Python function to run faster.,"def long_function(lst):
    counter = 0
    for i in lst:
        inner_counter = 0
        while inner_counter < i:
            counter += 1
            inner_counter += 1
    return counter","def long_function(lst):
    counter = 0
    for i in lst:
        counter += i
    return counter","def long_function(lst)
    counter = 0
    for i in lst
        counter += i
    return counter",Syntax Error,File I/O
Create a function in Python that flattens a nested list.,,"def flatten_list(lst):
 flattened = []
 for i in lst:
  if type(i) == list:
   flattened += flatten_list(i)
  else:
   flattened.append(i)
 return flattened","def flatten_list(lst):
 flattened = []
 for i in lst:
  if type(i) == list:
   flattened += flatten_list(i)
  else:
   flattened.append(i)
 return flattened",correct,String Manipulation
Generate a python script to calculate the total public holiday hours for a given state.,"state = ""Illinois""","state = ""Illinois""

def calculate_public_holiday_hours(state):
    # code to calculate public holiday hours for a given state
    if state == ""Illinois"":
        return 8
    # code for other states

hours = calculate_public_holiday_hours(state)
print(""Public holiday hours:"", hours)","state = ""Illinois""

def calculate_public_holiday_hours(state):
    # code to calculate public holiday hours for a given state
    if state == ""Illinois"":
        return 8
    # code for other states

hours = calculate_public_holiday_hours(state)
print(""Public holiday hours:"", hours)",correct,OOP
Design a program in Python to print out the prime numbers from 2 to a given upper limit.,upper_limit = 20,"def is_prime(upper_limit):
    for num in range(2, upper_limit+1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                print(num, end="" "")

upper_limit = 20
is_prime(upper_limit)","def is_prime(upper_limit):
    for num in range(2, upper_limit+1):
        if num > 1:
            for i in range(2, num):
               ",Incomplete Answer,String Manipulation
Create a prototype of a bubble sort function in Python.,,"def bubbleSort(arr):
    for i in range(len(arr)):
        for j in range(0, len(arr)-i-1):
            if arr[j] > arr[j+1] :
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr","def bubbleSort(arr):
    for i in range(len(arr)):
        for j in range(0, len(arr)-i-1):
            if arr[j] > arr[j+1] :
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr",correct,Recursion
"Create a basic bot for Telegram using Python. It should respond to the ""/start"" command by sending a welcome message and display a list of command the bot supports.",,"import telebot

bot = telebot.TeleBot(""<bot token>"")

@bot.message_handler(commands=['start'])
def send_welcome(message):
 bot.reply_to(message,
 'Welcome! Here are the commands this bot supports:\n\
/list - list all items\n\
/add - add a new item\n\
/remove - remove an item\n\
')

# Bot logic

bot.polling()","import telebot

bot = telebot.TeleBot(""<bot token>"")

@bot.message_handler(commands=['start'])
def send_welcome(message):
 bot.reply_to(message,
 'Welcome",Incomplete Answer,String Manipulation
Generate a Python program to convert a list of lists into one flat list.,"[[1, 2], [3, 4], [5, 6]]","def flattenList(inputList): 
    outputList = [] 
    for subList in inputList: 
        for item in subList: 
            outputList.append(item) 
    return outputList","def flattenList(inputList): 
    outputList = [] 
    for subList in inputList: 
   ",Incomplete Answer,File I/O
Write a Python function to check if a given number is an Armstrong number.,,"def is_armstrong_number(num): 
 
    # Calculate the number of digits 
    n = len(str(num)) 
  
    # Check whether is an armstrong number 
    sum = 0 
    temp = num 
    while temp > 0: 
        digit = temp % 10
        sum += digit ** n 
        temp //= 10
  
    if num == sum: 
        return True
    else: 
        return False","def is_armstrong_number(num): 
 
    # Calculate the number of digits 
    n = len(str(num)) 
  
    # Check whether is an armstrong number 
    sum = 0 
    temp = num 
    while temp > 0: 
        digit = temp % 10
        sum += digit ** n 
        temp //= 10
  
    if num == sum: 
        return True
    else: 
        return False",correct,String Manipulation
Generate a Python program that finds the maximum of an array of numbers.,"Find the maximum number from this array: [2, 4, 6, 1, 7, 12]","def find_max(arr): 
    # Initialize max 
    max = arr[0] 
  
    # Traverse from arr[1] to end 
    for i in range(1, len(arr)): 
  
        # Compare every element with current max 
        if arr[i] > max: 
            max = arr[i] 
              
    return max

arr = [2, 4, 6, 1, 7, 12] 

result = find_max(arr)
print(result)","def find_max(arr): 
    # Initialize max 
    max = arr[0] 
  
    # Traverse from arr[1] to end 
    for i in range(1, len(arr)): 
  
        # Compare every element",Incomplete Answer,Loops
Write a python statement to extract the first element from a 3-item tuple.,"Tuple: (3, 4, 5)","first_element = (3, 4, 5)[0]","first_element = (3, 4, 5)[0]",correct,File I/O
Write a Python program to remove all occurrences of a specific number in a given list.,"list = [2, 3, 4, 2, 5, 2, 6, 2, 7]","def remove_num(myList, num):
    return [x for x in myList if x != num]
  
removed_list = remove_num(list, 2)
print(removed_list)","def remove_num(myList, num):
    return [x for x in myList if x != num]
  
removed_list = remove_num(list, 2)
pritn(removed_list)",Syntax Error,File I/O
Design a Python program to check if a given string has balanced parenthesis.,,"def is_balanced(string): 
    stack = [] 
    for char in string: 
        if char == '(': 
            stack.append(char) 
        elif char == ')': 
            if len(stack)==0: 
                return False
            stack.pop() 
  
    if len(stack) == 0: 
        return True
    else: 
        return False","def is_balanced(string): 
stack = [] 
for char in string: 
    if char == '(': 
        stack.append(char) 
    elif char == ')': 
        if len(stack)==0: 
            return False
        stack.pop() 
  
if len(stack) == 0: 
    return True
else: 
    return False",Syntax Error,Loops
Optimize the following Python code for adding two numbers,"a = 3
b = 4
c = a + b","def addTwoNum(a, b):
 return a + b

c = addTwoNum(3, 4)","def addTwoNum(a, b):
 return a + b

c = addTwoNum(3, 4)",Syntax Error,OOP
Create a class in Python that models a charging station.,,"class ChargingStation:
    def __init__(self, id, description, max_charge):
        self.id = id
        self.description = description
        self.max_charge = max_charge

    def check_status(self):
        if self.max_charge > 0:
            return ""Charging station is available""
        else:
            return ""Charging station is not available""","class ChargingStation:
def __init__(self, id, description, max_charge):
    self.id = id
    self.description = description
    self.max_charge = max_charge

def check_status(self):
    if self.max_charge > 0:
        return ""Charging station is available""
    else:
        return ""Charging station is not available""",Syntax Error,File I/O
Generate a function in Python to take a list of numbers as input and count the number of elements that are greater than a given number.,"list = [1, 5, 8, 10, 4], threshold = 7","def count_greater_than_threshold(list, threshold):
    count = 0
    for num in list:
        if num > threshold:
            count += 1
    return count
print(count_greater_than_threshold(list, threshold)) # Prints 2","def count_greater_than_threshold(list, threshold):
    count = 0
    for num in list:
        if num > thres",Incomplete Answer,String Manipulation
Write a script in Python using the Requests library to scrape all the websites from a list.,"Site URLs = [""http://www.example1.com"" , ""http://www.example2.com""]","import requests

site_urls = [""http://www.example1.com"" , ""http://www.example2.com""]

for url in site_urls:
 response = requests.get(url)
 page_source = response.content
 print(page_source)","import requests

site_urls = [""http://www.example1.com"" , ""http://www.example2.com""]

for url in site_urls:
 response = requests.get(url)
 page_source = response.content
 print(page_source)",correct,OOP
Create a Python program to compare two given strings and returns the number of mismatched letters.,"string1 = ""abcdefg""
string2 = ""accfghe""","def compare_strings(string1, string2):
    mismatched = 0
    for i in range(min(len(string1), len(string2))):
        if string1[i] != string2[i]:
            mismatched += 1
    return mismatched

string1 = ""abcdefg""
string2 = ""accfghe"" 
compared = compare_strings(string1, string2)
print(""Number of mismatched letters:"", compared)","def compare_strings(string1, string2):
    mismatched = 0
    for i in range(min(len(string1), len(string2))):
        if string1[i] != string2[i]:
            mismatched += 1
    return mismatched

string1 = ""abcdefg""
string2 = ""accfghe"" 
compared = compare_strings(string1, string2)
print(name, ""Number of mismatched letters:"", compared)",Syntax Error,String Manipulation
Create a Python program to generate a random password of length n.,10,"import random

def generate_password(length):
  characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*(){}[]?/'
  password = ''
  for c in range(length):
    password += random.choice(characters)
  return password

length = 10
password = generate_password(length)
print(password)","import random

def generate_password(length)
  characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*(){}[]?/'
  password = ''
  for c in range(length)
    password += random.choice(characters)
  return password

length = 10
password = generate_password(length)
print(password)",Syntax Error,String Manipulation
Create a Python script that generates a random password of length n with a minimum required characters.,n = 8,"import string
import random

def generate_password(length):
    password_characters = string.ascii_letters + string.digits + string.punctuation
    return ''.join(random.choice(password_characters) for i in range(length))

print(generate_password(8))","import string
import random

def generate_password(length):
    password_characters = string.ascii_letters + string.digits + ",Incomplete Answer,Recursion
Write a python program to calculate the sum of the squares of the odd numbers between the given two numbers.,"n1 = 10
n2 = 20","def sum_square_odd(n1, n2):
    sum = 0
    for i in range(n1, n2+1):
        if i % 2 != 0:
            sum += i*i
    return sum

sum = sum_square_odd(n1, n2)
print(sum)","def sum_square_odd(n1, n2):
    sum = 0
    for i in range(n1, n2+1):
        if i % 2 != 0:
            sum += i*i
    return sum

sum = sum_square_odd(n1, n2)
print(sum)",correct,OOP
Write a function to generate a random MAC address in Python.,,"import random
import string

def gen_mac_address():
    """"""Generates a random MAC address""""""
    mac = [ 0x00, 0x24, 0x81,
        random.randint(0x00, 0x7f),
        random.randint(0x00, 0xff),
        random.randint(0x00, 0xff) ]
    return ':'.join(map(lambda x: ""%02x"" % x, mac))

print(gen_mac_address())","import random
import string

def gen_mac_address():
    """"""Generates a random MAC address""""""
    mac = [ 0x00, 0x24, 0x81,
        random.randint(0x00, 0x7f),
        random.randint(0x00, 0xff),
        random.randint(0x00, 0xff) ]
    return ':'.join(map(lambda x: ""%02x"" % x, mac))

print(gen_mac_address())",correct,File I/O
Generate a Python program that takes a number as input and prints all of the powers of two up to that number.,number = 10,"def pow_2(number):
 for i in range(number + 1):
  print(2 ** i)
  
pow_2(10)","def pow_2(number):
 for i in range(num",Incomplete Answer,Recursion
Generate a sentence in Python that uses a for loop to iterate over a list of strings.,"strings = ['apple', 'banana', 'cherry']","for s in strings:
    print(f'I like to eat {s}!')","for s in strings:
    print(f'I like to eat {s}!')",correct,OOP
Design an algorithm in Python which takes a given 2D array and finds the product of the elements in each row.,"[[1, 2], [3, 4]]","def rowProduct(arr):
    result = []
    for row in arr:
        product = 1
        for num in row:
            product = product * num
        result.append(product)

    return result

arr = [[1, 2], [3, 4]]

result = rowProduct(arr)
print(result)","def rowProduct(arr):
    result = []
    for row in arr:
        product = 1
        for num in row:
            product = pr",Incomplete Answer,File I/O
Write a Python script to find the factorial of any given number.,,"def factorial(num):
    result = 1
    if num > 1:
        for i in range(2,num+1):
            result *= i
    return result","def factorial(num):
result = 1
if num > 1:
    for i in range(2,num+1):
        result *= i
return result",Syntax Error,File I/O
Write a python program to fill in a 2D array with zeros.,,"import numpy as np

# define an array of size 5x5
my_array = np.zeros((5, 5))

print(my_array)","import numpy as np

# define an array of size 5x5
my_array = np.zeros((5, 5))

print(my_array)",correct,String Manipulation
Develop an AI-based program in Python that can recognize and label speech.,,"import speech_recognition as sr
from collections import defaultdict

sentences = defaultdict(list)

r = sr.Recognizer()
with sr.Microphone() as source:
    print(""Speak the sentence:"")
    audio = r.listen(source)
    sentence = r.recognize_google(audio)
    sentences[sentence].append(audio)","import speech_recognition as sr
from collections import defaultdict

sentences = defaultdict(list)

r = sr.Recognizer()
with sr.Microphone() as so",Incomplete Answer,Loops
Write a Python script for multiplying all items in a list.,,"def multiply_list(items):
   result = 1
   for i in items: 
      result *= i 
   return result","def multiply_list(items):
   result = 1
   for i in items: 
      result *= i 
   return result",correct,Loops
Generate a random string of 8 alphanumeric characters using a Python program.,,"import random
import string
 
def generate_random_string(size=8):
 return ''.join(random.choices(string.ascii_uppercase + string.digits, k=size))
 
random_string = generate_random_string()
print(random_string)
# Output: '6L6Y4M4V'","import random
import string
 
def generate_random_string(size=8):
 return ''.join(random.choices(string.ascii_uppercase + string.digits, k=size))
 
random_string = generate_random_string()
print(random_string)
# Output: '6L6Y4M4V'",correct,Loops
Develop a Python program that encrypts a given string using 'Caeser Cipher',string = 'Hello World',"def caesarCipherEncryptor(string, key):
  newLetters = []
  newKey = key % 26
  for letter in string:
   newLetters.append(getNewLetter(letter, newKey))
  return ''.join(newLetters)
 
def getNewLetter(letter, key):
   newLetterCode = ord(letter) + key
   return chr(newLetterCode) if newLetterCode <= 122 else chr(96 + newLetterCode % 122)","def caesarCipherEncryptor(string, key)
  newLetters = []
  newKey = key % 26
  for letter in string
   newLetters.append(getNewLetter(letter, newKey))
  return ''.join(newLetters)
 
def getNewLetter(letter, key)
   newLetterCode = ord(letter) + key
   return chr(newLetterCode) if newLetterCode <= 122 else chr(96 + newLetterCode % 122)",Syntax Error,String Manipulation
Create a Python function to calculate the sum of all numbers in a nested list.,"nested_list = [[1,2], [3,4], [6,7]]","def calculate_sum(nested_list):
    sum = 0
    for item in nested_list:
        for num in item:
            sum += num
    return sum

nested_list = [[1,2], [3,4], [6,7]]
print(calculate_sum(nested_list))","def calculate_sum(nested_list):
    sum = 0
    for item in nested_list:
        for num in item:
     ",Incomplete Answer,Loops
Write a Python program to sort the input list according to its length.,"list = [""Hello"", ""World"", ""This is a test""]","list = [""Hello"", ""World"", ""This is a test""]

def sort_list_length(list):
    '''
    Function to sort the list according to its length
    '''
    return sorted(list, key=len)

if __name__ == ""__main__"":
    list = [""Hello"", ""World"", ""This is a test""]
    sorted_list = sort_list_length(list)
    print(sorted_list)","list = [""Hello"", ""World"", ""This is a test""]

def sort_list_length(list):
    '''
    Function to sort the list according to its length
    '''
    return sorted(list, key=len)

if __name__ == ""__main__"":
    list = [""Hello"", ""World"", ""This is a test""]
    sorted_list = sort_list_length(list)
    print(sorted_list)",correct,String Manipulation
"Write a python class called ""Car"" which has attributes like model, color and year.",,"class Car(object):
    """"""A car object with attributes like model, colour and year""""""

    def __init__(self, model, colour, year):
        self.model = model
        self.colour = colour
        self.year = year

# Example
my_car = Car(""Ford Mustang"", ""Red"", 2016)","class Car(object):
    """"""A car object with attributes like model, colour and year""""""

    def __init__(self, model, colour, year):
        self.model = model
        self.colour = colour
        self.year = year

# Example
my_car = Car(""Ford Mustang"", ""Red"", 2016)",correct,Loops
"Using the Pandas library, create a Python script to calculate statistics for a given dataset.","The dataset (csv file):
name,age
John,30
Sam,20
Steven,40","import pandas as pd

data = pd.read_csv('input.csv')
print(data.describe())","import pandas as pd

data = pd.read_c",Incomplete Answer,Loops
Create a Python script that generates the Fibonacci sequence.,,"def fibonacci(n):
    if n <= 1:
        return n
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)

for n in range(10):
    print(fibonacci(n))","def fibonacci(n):
    if n <= 1:
        return n
    else:
        return fi",Incomplete Answer,Recursion
Create a Python program that sorts a list of integers.,"my_list = [9, 3, 6, 7, 1]","def sort_list(list):
    for i in range(len(list)):
        for j in range(i+1, len(list)):
            if list[i] > list[j]:
                list[i], list[j] = list[j], list[i]
    return list

my_list = [9, 3, 6, 7, 1]
my_list = sort_list(my_list)
print(my_list)","def sort_list(list):
for i in range(len(list)):
    for j in range(i+1, len(list)):
        if list[i] > list[j]:
            list[i], list[j] = list[j], list[i]
return list

my_list = [9, 3, 6, 7, 1]
my_list = sort_list(my_list)
print(my_list)",Syntax Error,Loops
Generate a Python code to search for an element in an array,"[2, 3, 4, 5, 7, 8, 9], N = 7","def linear_search(arr, N):
  for i in range(len(arr)):
    if arr[i] == N:
      return i+1
  return -1","def linear_search(arr, N):
  for i in range(len(arr)):
    if arr[i] == N:
      return i+1
  return -1",correct,Loops
Calculate the area of a rectangle in Python.,"length = 5
width = 10","area = length * width
print(area)","area = length * width
print(area)",correct,String Manipulation
Write a function to find the summation of tuple elements in the given tuple list.,,"def sum_elements(test_tup):
  res = sum(list(test_tup))
  return (res) ","def sum_elements(test_tup:
  res = sum(list(test_tup
  return (res ",Syntax Error,Recursion
Generate a python code to calculate the factorial for a given number.,num = 5,"def factorial(number):
    if number == 0:
        return 1
    else:
        return number * factorial(number -1)

factorial(num)","def factorial(number):
    if number == 0:
        return 1
    else:
        return number * factorial(number -1)

factorial(num)",correct,File I/O
Produce a Python program to do a linear search of an element in a given array.,,"def linearSearch(arr, x): 
    for i in range (len(arr)): 
        if arr[i] == x: 
            return i 
    return -1","def linearSearch(arr, x): 
    for i in range (len(arr)): 
",Incomplete Answer,File I/O
Create a Python dictionary that allows a user to store a city name as a key and its population as the value.,,"city_population = {
    'New York': 8450000, 
    'Los Angeles': 4000000, 
    'Chicago': 2700000, 
    'Houston': 2300000
    }","city_population = {
    'New York': 8450000, 
    'Los Angeles': 4000000, 
    'Chicago': 2700000, 
    'Houston': 2300000
    }",correct,String Manipulation
Identify all bugs in the following Python code and suggest fixes.,"a = input('Enter a number: ')
b = input('Enter a number: ')
if a > b
 print('a is greater than b')","a = int(input('Enter a number: '))
b = int(input('Enter a number: '))
if a > b:
 print('a is greater than b')","a = int(input('Enter a number: '))
b = int(input('Enter a number: '))
if a > b:
 print('a is greater than b')",correct,File I/O
Develop a program to normalize a list of numbers in Python.,"[1.2,-2.3, 3.4, -4.5, 5.6]","def normalize_list(lst):
    '''Normalizes a list of numbers'''
    max_val = max(lst)
    min_val = min(lst)

    normalized_lst = []
    for num in lst:
        normalized_val = (num - min_val)/(max_val - min_val)
        normalized_lst.append(normalized_val)

    return normalized_lst","def normalize_list(lst):
    '''Normalizes a list of numbers'''
    max_val = max(lst)
    min_val = min(lst)

    normalized_lst = []
    for num in lst:
        normalized_val = (num - min_val)/(max_val - min_val)
        normalized_lst.append(normalized_val)

    return normalized_lst",correct,String Manipulation
Write a Python program to determine if one number is a multiple of another.,"num1: 32
num2: 8","def is_multiple(num1, num2):
   if (num1 % num2 == 0):
       print(f'{num1} is a multiple of {num2}')
   else:
       print(f'{num1} is not a multiple of {num2}')

is_multiple(32, 8)

Output:
32 is a multiple of 8","def is_multiple(num1, num2):
   if (num1 % num2 == 0):
       print(f'{num1} is a multiple of {num2}')
   e",Incomplete Answer,File I/O
Create a program in Python to select the data from a list of items.,,"def select_data(my_list):
    result = []
    for item in my_list:
        if item['selected']:
            result.append(item)
    return result","def select_data(my_list):
    result = []
    for item in my_list:
     ",Incomplete Answer,File I/O
Write a Python program to filter a list and sort it in descending order by length.,"a = [""apple"", ""ball"", ""cat"", ""dog"", ""elephant"", ""frog"", ""giraffe""]","a.sort(key=len, reverse=True)
# Output: ['elephant', 'giraffe', 'ball', 'apple', 'dog', 'cat', 'frog']","a.sort(key=len, reverse=True)
# Output: ['elephant', 'giraffe', 'ball', 'apple', 'dog', 'cat', 'frog']",correct,OOP
Create a Python program to reverse a string in place.,"""Hello World!""","def reverse_string_in_space(s): 
    temp_list = list(s) 
    start = 0
    end = len(temp_list) - 1
  
    while start < end: 
        temp_list[start], temp_list[end] = temp_list[end], temp_list[start] 
        start += 1
        end -= 1
  
    s = """".join(temp_list) 
      
    return s
  
s = ""Hello World!""
print(reverse_string_in_space(s))","def reverse_string_in_space(s): 
    temp_list = list(s) 
    start = 0
    end = len(temp_list) - 1
  
    while start < end: 
        temp_list[start], temp_list[end] = temp_list[end], temp_list[start] 
        start += 1
        end -= 1
  
    s = """".join(temp_list) 
      
    return s
  
s = ""Hello World!""
print(reverse_string_in_space(s))",correct,OOP
Create a Python code to generate a string containing the multiplying table for any given number up to ten.,,"def generate_multiplication_table(num):
    """"""
    Generates a string with the multiplication table of a given number up to ten.
    @param num: int
    @return: str
    """"""
    table_str = """"

    for i in range(1, 11):
        result = num * i
        table_str += f""{num} * {i} = {result}\n""
    return table_str","def generate_multiplication_table(num):
    """"""
    Generates a string with the multiplication table of a given number up to ten.
    @param num: int
    @return: str
    """"""
    table_str = """"

    for i in range(1, 11):
        result = num * i
        table_str += f""{num} * {i} = {result}\n""
    return table_str",Syntax Error,File I/O
Develop a Python script to print out the prime numbers up to a given limit.,An integer limit of 100.,"def is_prime(n):
 if n == 1:
 return False
 for i in range(2, n):
 if n % i == 0:
 return False
 return True

# Print out prime numbers from 1 to 100
limit = 100

for i in range(1, limit+1):
 if is_prime(i):
 print(i)","def is_prime(n):
 if n == 1:
 return False
 for i in range(2, n):
 if n % i == 0:
 return False
 return True

# Print out prime numbers from 1 to 100
limit = 100

for i in range(1, limit+1):
 if is_prime(i):
 print(i)",correct,OOP
Create a Python program to calculate the Mean Squared Error (MSE) of a given dataset.,"x = [1,2,3,4,5]
y = [0,2,3,3,5]","mse = (sum([(x[i]-y[i])**2 for i in range(len(x))]))/len(x)
print(mse)","mse = (sum([(x[i]-y[i])**2 for i in range(len(x))]))/len(x)
pritn(mse)",Syntax Error,File I/O
Create a Python function to print all elements in a nested list.,"nested_list = [1, [2, 3], 4, [[5, 6], 7], 8, [9]]","def print_elements(nested_list):
    
    for item in nested_list:
        if type(item) == list:
            print_elements(item)
        else:
            print(item)

print_elements(nested_list)","def print_elements(nested_list:
    
    for item in nested_list:
        if type(item == list:
            print_elements(item
        else:
            print(item

print_elements(nested_list",Syntax Error,File I/O
Suggest a programming language and a library for text classification.,,"Python is a great language for text classification tasks and there are several libraries that could be used, including scikit-learn and NLTK. Additionally, pytorch provides a number of utilities for text classification.","Python is a great language for text classification tasks and there are several libraries that could be used, ",Incomplete Answer,OOP
Create a function in Python to calculate the total cost after applying a discount. The function should accept the original cost and the discount percentage as arguments.,"original cost = 100
discount percentage = 25","def calculate_discounted_cost(cost, discount_percentage):
 discounted_cost = cost - (cost * (discount_percentage/100))
 return discounted_cost

discounted_cost = calculate_discounted_cost(100, 25)
print ('The discounted cost is: ', discounted_cost)","def calculate_discounted_cost(cost, discount_percentage):
 discounted_cost = cost - (cost * (discount_percentage/100))
 return discounted_cost

discounted_cost = calculate_discounted_cost(100, 25)
print ('The discounted cost is: ', discounted_cost)",correct,File I/O
Develop a Python guess the number game. The program should pick a random number between 1 to 10 and the user has to guess it.,,"import random

answer  = random.randint(1, 10)

guess = int(input('Guess a number between 1 and 10: '))

if guess == answer:
 print('You guessed correct!')
elif guess < answer:
 print('Your guess is too low')
elif guess > answer:
 print('Your guess is too high')","import random

answer  = random.randint(1, 10)

guess = int(input('Guess a number between 1 and 10: '))

if guess == answer:
 pritn('You guessed correct!')
elif guess < answer:
 pritn('Your guess is too low')
elif guess > answer:
 pritn('Your guess is too high')",Syntax Error,Loops
Write a script in Python that takes a URL and a list of words as input and then searches the page content for any of the given words.,"URL: https://www.example.com
Word List: [cat, dog, bird]","import requests

url = 'https://www.example.com'
word_list = ['cat', 'dog', 'bird']

r = requests.get(url).text
for word in word_list:
 if word in r:
  print('Word ""{}"" found on the given URL'.format(word))
else:
  print('Word ""{}"" not found the given URL'.format(word))","import requests

url = 'https://www.example.com'
word_list = ['cat', 'dog', 'bird']

r = requests.get(url).text
for word in word_list:
",Incomplete Answer,Loops
Create a python program to randomly select a survivor from a given list of names,"names = [""Alex"", ""Bob"", ""Charlotte"", ""John"", ""Mike""]","import random

names = [""Alex"", ""Bob"", ""Charlotte"", ""John"", ""Mike""]

def randomly_select_survivor(names):
    survivor = random.choice(names)
    print(f""The randomly selected survivor is: {survivor}"")

randomly_select_survivor(names)","import random

names = [""Alex"", ""Bob"", ""Charlotte"", ""John"", ""Mike""]

def randomly_select_survivor(names):
    survivor = random.choice(names)
    print(f""The randomly selected survivor is: {survivor}"")

randomly_select_survivor(names)",correct,Recursion
Design a Python program that prints out the reverse of a given string.,"String = ""Hello World""","def reverse_string(String):
    rev_str = """" 
    for i in String: 
        rev_str = i + rev_str
    return rev_str

print(reverse_string(""Hello World""))","def reverse_string(String):
    rev_str = """" 
    for i in String: 
        rev_str = i + rev_str
    return rev_str

print(reverse_string(""Hello World""))",correct,Recursion
Develop a unit test in Python to verify correctness of an algorithm.,"def algorithm(arr):
	sum = 0
	for i in range(len(arr)):
		sum += arr[i]
	return sum","import unittest

class TestAlgorithm(unittest.TestCase):
    
    def test_algorithm(self):
        10 = algorithm([1, 2, 3, 4])
        self.assertEqual(10, 10)
        
        40 = algorithm([10, 10, 10, 10])
        self.assertEqual(40, 40)

if __name__ == '__main__':
    unittest.main()","import unittest

class TestAlgorithm(unittest.TestCase):
    
    def test_algorithm(self):
        10 = algorithm([1, 2, 3, 4])
        self.asse",Incomplete Answer,OOP
Write a function to add a dictionary to the tuple.,,"def add_dict_to_tuple(test_tup, test_dict):
  test_tup = list(test_tup)
  test_tup.append(test_dict)
  test_tup = tuple(test_tup)
  return (test_tup) ","def add_dict_to_tuple(test_tup, test_dict):
  test_tup = list(test_tup)
  t",Incomplete Answer,Recursion
Implement the Singleton Design Pattern in a Python class.,,"class Singleton:
 _instance = None

 def __new__(cls, *args, **kwargs):
 if not cls._instance:
 cls._instance = super().__new__(cls, *args, **kwargs)
 return cls._instance

s = Singleton()
print(s)","class Singleton:
 _instance = None

 def __new__(cls, *args, **kwargs):
 if not cls._instance:
 cls._instance = super().__new__(cls, *args, **kwargs)
 return cls._instance

s = Singleton()
print(s)",correct,Loops
"Create a class called <Person> in Python with three properties - <name>, <age> and <height>.",,"class Person:
    def __init__(self, name, age, height):
        self.name = name
        self.age = age
        self.height = height","class Person:
    def __init__(self, name, age, height:
        self.name = name
        self.age = age
        self.height = height",Syntax Error,String Manipulation
"In Python, generate a script to find the length of a given list.","Input List: [1, 3, 5, 7, 9]","def lengthList(arr):
    length = 0
    for i in arr:
        length += 1
    return length
 
print(lengthList([1, 3, 5, 7, 9])) # Outputs: 5","def lengthList(arr):
    length = 0
    for i in arr:
        length +",Incomplete Answer,String Manipulation
Develop a recursive algorithm in Python for generating permutations of a given set of elements.,,"def permutations(s): 
 if len(s) == 0: 
  return [] 
 if len(s) == 1: 
  return [s] 
 l = [] # empty list that will store current permutation 
 # Iterate the input(s) and calculate the permutation 
 for i in range(len(s)): 
   m = s[i] 
   rem = s[:i] + s[i+1:] 
   for p in permutations(rem): 
    l.append([m] + p) 
 return l","def permutations(s): 
 if len(s) == 0: 
  return [] 
 if len(s) == 1: 
  return [s] 
 l = [] # empty list that will store current permutation 
 # Iterate the input",Incomplete Answer,File I/O
"Create a program in any language that outputs all the prime numbers between 1 and a given number (say, n).",90,"# Python code

n = 90

for num in range(2, n+1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)","# Python code

n = 90

for num in range(2, n+1):
   if num > 1:
       for i in range(2, n",Incomplete Answer,Loops
Create a Python program to rotate a 2-dimensional array clockwise.,"[[1, 2],
 [3, 4]]","def rotate_sqr_matrix_clockwise(matrix):
    N = len(matrix)
    res = [[0] * N for i in range(N)]
    for i in range(N):
        for j in range(N): 
            res[i][j] = matrix[N - 1 - j][i] 
    return res","def rotate_sqr_matrix_clockwise(matrix):
    N = len(matrix)
    res = [[0] * N for i in range(N)]
    for i in range(N):
        for j in range(N): 
            res[i][j] = matrix[N - 1 - j][i] 
    return res",correct,Recursion
Write a Python program to find the largest palindrome number less than 4400.,,"max_palindrome = 0
for i in range(4400, 0, -1): 
    if str(i) == str(i)[::-1]: 
        max_palindrome = i 
        break
print(max_palindrome) # Output: 4331","max_palindrome = 0
for i in range(4400, 0, -1): 
    if str(i) == str(i)[::-1]:",Incomplete Answer,Recursion
Write a python function to find the largest number that can be formed with the given digits.,,"def find_Max_Num(arr,n) : 
    arr.sort(reverse = True) 
    num = arr[0] 
    for i in range(1,n) : 
        num = num * 10 + arr[i] 
    return num ","def find_Max_Num(arr,n) : 
    arr.sort(reverse = True) 
    num = arr[0] 
    for i in range(1,n) : 
        num = num * 10 + arr[i] 
    return num ",Syntax Error,String Manipulation
Create a class in python that finds the sum of two numbers.,No input,"class Sum:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    def find_sum(self):
        return self.x + self.y
        
if __name__ == '__main__':
    s = Sum(10, 5)
    print(s.find_sum())","class Sum:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    def find_sum(self):
        return self.x + self.y
        
if __name__ == '__main__':
    s = Sum(10, 5)
    print(s.find_sum())",correct,File I/O
Create a quicksort algorithm in Python which sorts an array in ascending order.,,"def quicksort(arr):
    if len(arr) <= 1:
        return arr
    
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)","def quicksort(arr):
    if len(arr) <= 1:
        return arr
    
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)",correct,Recursion
Write a Python utility to calculate the Fibonacci series up to a specified number.,Length of the Fibonacci series : 5,"def fibonacci(length):
 # Initialize the first two numbers 
 a, b = 0, 1 

 # We generate the Fibonacci series 
 # up to a given length 
 res = [] 
 while (len(res) < length): 
 res.append(b)
 
 # Calculate the next Fibonacci number 
 a, b = b, a + b 

 # Return the generated Fibonacci series 
 return res

print(fibonacci(5))
# Output -> [1, 1, 2, 3, 5]","def fibonacci(length):
 # Initialize the first two numbers 
 a, b = 0, 1 

 # We generate the Fibonacci series 
 # up to a given length 
 res = [] 
 while (len(res) < length): 
",Incomplete Answer,File I/O
Create a Euclidean distance function in Python.,,"def euclidean_distance(x1, y1, x2, y2): 
    # Calculating distance 
    return math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2)) 
  
# Driver Code 
x1 = int(input(""Enter x1:""))
y1 = int(input(""Enter y1:""))
x2 = int(input(""Enter x2:""))
y2 = int(input(""Enter y2:""))

print(euclidean_distance(x1,y1,x2,y2))","def euclidean_distance(x1, y1, x2, y2): 
    # Calculating distance 
    return math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2)) 
  
# Driver Code 
x1 = int(input(""Enter x1:""))
y1 = int(input(""Enter y1:""))
x2 = int(input(""Enter x2:""))
y2 = int(input(""Enter y2:""))

print(euclidean_distance(x1,y1,x2,y2))",correct,File I/O
"Create a class in Python called ""Person"" with two properties, ""name"" and ""age"".",,"class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age","class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age",correct,Loops
Can you write a Python function to sort the items in a dictionary by their values?,,"def sort_dict_by_values(d):
    sorted_list = sorted(d.items(), key=lambda item: item[1])
    return sorted_list","def sort_dict_by_values(d:
    sorted_list = sorted(d.items(, key=lambda item: item[1]
    return sorted_list",Syntax Error,Loops
Create a function in Python to generate a 5x5 two-dimensional array with random integers between 0 and 9.,,"import random

def generateArray():
 arr = [[0 for i in range(5)] for j in range(5)]
 
 for i in range (5):
 for j in range (5):
  arr[i][j] = random.randint(0,9)
  
 return arr

print(generateArray())","import random

def generateArray():
 arr = [[0 for i in range(5)] for j in range(5)]
 
 for i in ran",Incomplete Answer,String Manipulation
Create an Python decorator that measures the execution time of a function and logs it.,,"import time
import logging

def timeit(func):
    def wrapper(*args, **kwargs):
        start = time.time()
        result = func(*args, **kwargs)
        end = time.time()
        duration = end - start
        logging.info(""Execution of {} took {} seconds"".format(func.__name__, duration))
        return result
    return wrapper","import time
import logging

def timeit(func):
    def wrapper(*args, **kwargs):
        start = time.time()
        result = func(*args, **kwargs)
        end = time.time()
        duration = end - start
        logging.info(""Execution of {} took {} seconds"".format(func.__name__, duration))
        return result
    return wrapper",correct,Recursion
Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.,,"def count_no_of_ways(n, k): 
	dp = [0] * (n + 1) 
	total = k 
	mod = 1000000007
	dp[1] = k 
	dp[2] = k * k	 
	for i in range(3,n+1): 
		dp[i] = ((k - 1) * (dp[i - 1] + dp[i - 2])) % mod 
	return dp[n]","def count_no_of_ways(n, k) 
	dp = [0] * (n + 1) 
	total = k 
	mod = 1000000007
	dp[1] = k 
	dp[2] = k * k	 
	for i in range(3,n+1) 
		dp[i] = ((k - 1) * (dp[i - 1] + dp[i - 2])) % mod 
	return dp[n]",Syntax Error,Recursion
Create a web crawler in Python to crawl a website for links.,,"import requests
from bs4 import BeautifulSoup

# get the HTML from the URL
response = requests.get('https://example.com')
html = response.text

# create the BS4 object and get all the <a> elements
bsobj = BeautifulSoup(html, 'html.parser')
links = bsobj.find_all('a')

# print all the links
for link in links:
 if link.has_attr('href'):
   print(link['href'])","import requests
from bs4 import BeautifulSoup

# get the HTML from the URL
response = requests.get('https://example.com')
html = response.text

# create the BS4 object and get all",Incomplete Answer,Recursion
Design a python program to sort a list of tuples according to their 2nd item.,,"# Input list
list_of_tuples = [('Alice', 20), ('Bob', 30), ('Andrew', 20), ('Catherine', 40)]

# Sort the list by second item
sorted_list = sorted(list_of_tuples, key=lambda x: x[1])

# Print the result
print(sorted_list)","# Input list
list_of_tuples = [('Alice', 20), ('Bob', 30), ('Andrew', 20), ('Catherine', 40)]

# Sort the list",Incomplete Answer,File I/O
Write a function in Python to find the index of a given element in a given list of numbers.,,"def find_index(nums, element):
    for i, num in enumerate(nums):
        if num == element:
            return i
    
    return -1","def find_index(nums, element):
    for i, num in enumerate(nums):
        if num == element:
            return i
    
    return -1",correct,Loops
Write a Python program that takes in a string of numbers delimited by spaces and returns the largest number.,64 8 224 54 21,"def findMax(string):
  numbers = string.split("" "")
  largest = 0
  
  for number in numbers:
    if number > largest:
      largest = number
      
  return largest
  
string = ""64 8 224 54 21""
print(f""The largest number is {findMax(string)}."")","def findMax(string):
  numbers = string.split("" "")
  largest = 0
  
  for number in numbers:
    if number > largest:
      largest = number
      
  return largest
  
string = ""64 8 224 54 21""
pritn(f""The largest number is {findMax(string)}."")",Syntax Error,OOP
Create a new program in Python that creates a list of prime numbers ranging from 2 to n.,15,"""""""
Create a list of prime numbers ranging from 2 to n.
""""""

def prime_list(n):
    prime_list = []
    for num in range(2, n + 1):
        for prime in prime_list:
            if num % prime == 0: 
                break
        else: 
            prime_list.append(num)
    return prime_list

if __name__ == '__main__':
    n = 15
    print(prime_list(n))","""""""
Create a list of prime numbers ranging from 2 to n.
""""""

def prime_list(n):
    prime_list = []
    for num in range(2, n + 1):
        for prime in prime_list:
            if num % prime == 0: 
                break
        else: 
            prime_list.append(num)
    return prime_list

if __name__ == '__main__':
    n = 15
    print(prime_list(n))",correct,String Manipulation
Write a Python program to retrieve a list of 10 latest posts from Reddit.,,"import praw

reddit = praw.Reddit('bot1')

latest_posts = [] 
for submission in reddit.subreddit('all').new(limit=10):
 latest_posts.append(submission.title)
 
print(latest_posts)","import praw

reddit = praw.Reddit('bot1')

latest_posts = [] 
for submission in reddit.subreddit('all').new(limit=10):
 latest_posts.append(submission.title)
 
print(latest_posts)",correct,String Manipulation
Produce a program using Python that visualizes the given function.,"f(x, y) = x + y","import matplotlib.pyplot as plt 
import numpy as np 

x = np.arange(-4.0, 4.0, 0.1) 
y = np.arange(-4.0, 4.0, 0.1) 
X, Y = np.meshgrid(x, y) 

def f(x, y): 
    return x + y 

Z = f(X, Y)

fig = plt.figure()
plt.contourf(X, Y, Z) 
plt.xlabel('x')
plt.ylabel('y')
plt.title('f(x,y) = x + y') 
plt.show()","import matplotlib.pyplot as plt 
import numpy as np 

x = np.arange(-4.0, 4.0, 0.1) 
y = np.arange(-4.0, 4.0, 0.1) 
X, Y = np.meshgrid(x, y) 

def f(x, y): 
    return x + y 

Z = f(X, Y)

fig = plt.figure()
plt.contourf(X, Y, Z) 
plt.xlabel('x')
plt.ylabel('y')
plt.title('f(x,y) = x + y') 
plt.show()",correct,OOP
Create a Python script that makes an HTTP request to retrieve data and convert it from JSON to a pandas DataFrame.,,"import requests
import pandas as pd

url = 'https://example.com/api/data'

# Make the request and get the response
response = requests.get(url)

# Convert the JSON response to a python dictionary
data = response.json()

# Convert the dictionary to a pandas DataFrame
df = pd.DataFrame(data)","import requests
import pandas as pd

url = 'https://example.com/api/data'

# Make the request and get the response
response = requests.get(url)

# Convert the JSON response to a python dictionary
data = response.json()

# Convert the dictionary to a pandas DataFrame
df = pd.DataFrame(data)",Syntax Error,String Manipulation
Write a script in Python to input a list of strings and convert it into a single string.,"[‘hello’, ‘world’]","# Convert list of strings into a single string
def list_to_string(lst):
    return ' '.join(lst)","# Convert list of strings into a single string
def list_to_string(lst):
    return ' '.join(lst)",correct,Loops
Create a Python function that takes the average of the three numbers given as parameters.,,"def average(a, b, c):
    return (a+b+c)/3","def average(a, b, c):",Incomplete Answer,File I/O
Create a code in Python to generate a random English word.,,"import random

words = [""hello"", ""world"", ""hi"", ""moon"", ""sun""]

random_word = random.choice(words)

print(""Random word: "" + random_word)","import random

words = [""hello"", ""world"", ""hi"", ""moon"", ""sun""]

random_word = random.choice(words)

print(""Random word: "" + random_word)",Syntax Error,File I/O
Optimize the following Python code by replacing the for-loop with a list comprehension,"def hipsterify(sentence):
  hipster_sentence = []

  for i in range(len(sentence)):
    hipster_sentence.append(""hipster "" + sentence[i])

  return ' '.join(hipster_sentence)","def hipsterify(sentence):
  return ' '.join([""hipster "" + word for word in sentence])","def hipsterify(sentence):
  return ' '.join([""hipster "" + word for word in sentence])",correct,Recursion
Find the first 5 prime numbers using python.,,"prime_nums = [2, 3, 5, 7, 11]
print(""The first 5 prime numbers are: "", prime_nums)","prime_nums = [2, 3, 5, 7, 11]
print(""The first 5 prime numbers are "", prime_nums)",Syntax Error,String Manipulation
Design a Python program to perform linear regression for predicting the numbers in a given dataset.,"X = [1,2,3,4,5]
Y = [3,5,7,9,13]","import numpy as np
from sklearn.linear_model import LinearRegression

X = np.array([1,2,3,4,5]).reshape(-1,1)
Y = np.array([3,5,7,9,13])

model = LinearRegression()
model.fit(X, Y)

# Predicts the value of y
print(model.predict([[7]]))","import numpy as np
from sklearn.linear_model import LinearRegression

X = np.array([1,2,3,4,5]).reshape(-1,1)
Y = np.",Incomplete Answer,Recursion
Generate a Python code to calculate the value of the nth Fibonacci number.,6,"def fib(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fib(n-1) + fib(n-2)

print(""The requested Fibonacci number is: "" + str(fib(6)))","def fib(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fib(n-1) + fib(n-2)

print(name, ""The requested Fibonacci number is: "" + str(fib(6)))",Syntax Error,String Manipulation
Create a function in Python which takes a parameter and finds the maximum value in the parameter.,"parameter = [100, 10, 75, 23, 96]","def max_value(parameter):
    max_val = parameter[0]
    for num in parameter:
        if num > max_val:
            max_val = num
    return max_val

max_num = max_value(parameter)
print(max_num)","def max_value(parameter):
    max_val = parameter[0]
    for num in parameter:
        if num > max_val:
            max_val = num
    return max_val

max_num = max_value(parameter)
print(max_num)",correct,String Manipulation
"Write a function to find uppercase, lowercase, special character and numeric values using regex.",,"import re
def find_character(string):
  uppercase_characters = re.findall(r""[A-Z]"", string) 
  lowercase_characters = re.findall(r""[a-z]"", string) 
  numerical_characters = re.findall(r""[0-9]"", string) 
  special_characters = re.findall(r""[, .!?]"", string) 
  return uppercase_characters, lowercase_characters, numerical_characters, special_characters","import re
def find_character(string):
  uppercase_characters = re.findall(r""[A-Z]"", string) 
  lowercase_characters = re.findall(r""[a-z]"", string) 
  numerical_characters = re.findall(r""[0-9]"", string) 
  special_characters = re.findall(r""[, .!?]"", string) 
  return uppercase_characters, lowercase_characters, numerical_characters, special_characters",Syntax Error,OOP
"With the input, create a Python program which takes in a sentence and returns the word which appears most frequent.","I am a programmer, so I program every day","def most_frequent_word(sentence):
    """"""Return the word which appears most frequent in a sentence.""""""
    words = {}
    for word in sentence.split():
        if word in words:
            words[word] += 1
        else:
            words[word] = 1
    return max(words, key=words.get)","def most_frequent_word(sentence):
    """"""Return the word which appears most frequent in a sentence.""""""
    words = {}
    for word in sentence.split():
        if word in words:
            words[word] += 1
        else:
            words[word] = 1
    return max(words, key=words.get)",Syntax Error,Recursion
Generate an algorithm in Python that takes a decimal number x and converts it to binary.,178,"# Input decimal number
decimal_number = 178

# Output binary number
binary_number = """"

# Main algorithm to convert from decimal to binary
while decimal_number > 0:
    remainder = decimal_number % 2
    binary_number = str(remainder) + binary_number
    decimal_number = decimal_number // 2

print(binary_number)","# Input decimal number
decimal_number = 178

# Output binary number
binary_number = """"

# Main algorithm to convert from decimal to binary
while decimal_number > 0:
    remainder = decimal_number % 2
    binary_number = str(remainder) + binary_number
    decimal_number = decimal_number // 2

print(binary_number)",correct,Recursion
Implement the following pseudocode in Python,"A = [x, y, z]
 B = [a, b, c]
 Output: [x, a, y, b, z, c]","A = [x, y, z]
B = [a, b, c]

C = []
for x,y in zip(A,B):
    C.append(x)
    C.append(y)

print(C) #[x, a, y, b, z, c]","A = [x, y, z]
B = [a, b, c]

C = []
for x,y in zip(A,B):
  ",Incomplete Answer,File I/O
Write a Python program to create a list of dictionaries from a given list of dictionary keys and a list of dictionary values.,"keys: [1, 2, 3]
values: [""a"", ""b"", ""c""]","keys = [1,2,3] 
values = [""a"",""b"",""c""]
list_of_dict = [dict(zip(keys, values)) for i in range(len(keys))] 
print(list_of_dict) # Output: [{1: 'a', 2: 'b', 3: 'c'}]","keys = [1,2,3] 
values = [""a"",""b"",""c""]
list_of_dict = [dict(zip(keys, values)) for i in range(len(keys))] 
print(list_of_dict) # Output: [{1: 'a', 2: 'b', 3: 'c'}]",correct,String Manipulation
Can you create a Python program to get the largest element from a list?,"myList = [13, 7, 5, 21, 101]","def largestElement(myList): 
    return max(myList)","def largestElement(myList): 
    return max(myList)",correct,String Manipulation
Create a Python program to join two strings together.,"string1 = ""Hello,""
string2 = ""World!""","def join_strings(string1, string2):
    return string1 + string2","def join_strings(string1, string2):
    return string1 + string2",correct,File I/O
Create a Python program to split a given string into two parts according to a given character.,"Str = ""apple-banana-orange""
Char = ""-""","def split_string(s, char):
    new_list = s.split(char)
    return new_list

result = split_string(""apple-banana-orange"", ""-"")
print(result)","def split_string(s, char):
    new_list = s.split(char)
    return new",Incomplete Answer,OOP
Create a function ``squareSum`` in python which will take a list of numbers as arguments and calculate their sum of squares.,"numbers=[1, 2, 3, 4, 5]","def squareSum(numbers):
    sum_of_squares = 0
    for num in numbers:
        sum_of_squares += num**2
    return sum_of_squares","def squareSum(numbers):
    sum_of_squares = 0
    for num in numbers:
        sum_of_squares += num**2
    return sum_of_squares",correct,String Manipulation
Write a code in Python to parse a JSON string.,"{
    ""name"": ""James"",
    ""age"": 27
}","import json

json_string = '{""name"": ""James"",""age"": 27}'
data = json.loads(json_string)
print(data[""name""], data[""age""])","import json

json_string = '{""name"": ""James"",""age"": 27}'
dat",Incomplete Answer,OOP
Generate a Python code which calls a function to print the following array?,"[1,3,7,9,10]","arr = [1,3,7,9,10]

def print_array(arr):
    '''This function prints the elements of an array'''
    for ele in arr:
        print(ele)

print_array(arr)","arr = [1,3,7,9,10]

def print_array(arr):
    '''This function prints the elements of an array'''
    for ele in arr:
        print(ele)

print_array(arr)",correct,Recursion
Design a program to capitalize each letter of a given string in Python.,,"def capitalize_string(str):
    capitalized_str = """"
    for char in str:
        capitalized_str += char.upper()
    return capitalized_str

test_string = ""hello world""
capitalized_string = capitalize_string(test_string)
print(capitalized_string)","def capitalize_string(str):
capitalized_str = """"
for char in str:
    capitalized_str += char.upper()
return capitalized_str

test_string = ""hello world""
capitalized_string = capitalize_string(test_string)
print(capitalized_string)",Syntax Error,String Manipulation
Write a Python program to generate a multiplication table of given number.,number = 8,"for i in range(1, 11):
    print(number,""X"",i,""="",number*i)","for i in range(1, 11)
    print(number,""X"",i,""="",number*i)",Syntax Error,String Manipulation
Generate a Python program to search an element in an array.,"[2, 4, 6, 8], 8","def searchElement(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i
    return -1
    
arr = [2, 4, 6, 8]
x = 8

result = searchElement(arr, x) 

if(result == -1): 
  print(""Element is not present in array"") 
else: 
  print(""Element is present at index"", result)","def searchElement(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i
    return -1
    
arr = [2, 4, 6, 8]
x = 8
",Incomplete Answer,File I/O
Write a python function to find the last two digits in factorial of a given number.,,"def last_Two_Digits(N): 
    if (N >= 10): 
        return
    fac = 1
    for i in range(1,N + 1): 
        fac = (fac * i) % 100
    return (fac) ","def last_Two_Digits(N: 
    if (N >= 10: 
        return
    fac = 1
    for i in range(1,N + 1: 
        fac = (fac * i % 100
    return (fac ",Syntax Error,OOP
Write a Python program to generate a random password. The program should include at least two types of characters (numbers and symbols) and the length of the password should be between 8 and 16.,,"import random
import string

def generate_password():
    chars = string.ascii_lowercase + string.digits + string.punctuation
    size = random.randint(8, 16)
    return ''.join(random.choice(chars) for _ in range(size))

print(generate_password())","import random
import string

def generate_password():
    chars = string.ascii_lowercase + string.digits + string.punctuation
    size = random.randint(8, 16)
    return ''.join(random.choice(chars) for _ in range(size))

print(generate_password())",correct,String Manipulation
Generate a Python function that takes a list and a number as input and assigns the number to each item in the list.,"[2, 3, 4, 5], 7","def assign_value(lst, num):
    for i in range(len(lst)):
        lst[i] = num
    return lst

print(assign_value([2, 3, 4, 5], 7)) # Output: [7, 7, 7, 7]","def assign_value(lst, num):
for i in range(len(lst)):
    lst[i] = num
return lst

print(assign_value([2, 3, 4, 5], 7)) # Output: [7, 7, 7, 7]",Syntax Error,String Manipulation
"Design a program in Python and select features from list A and list B, given the following constraints:","List A: [a, b, c, d]
List B: [1, 2, 3, 4]
Constraints: 
Select 2 features from list A, and 
select 1 feature from list B","features = [a, c, 2] # Selecting a, c from list A and 2 from list B.","features = [a, c, 2] # Selecting a, c from list A and 2 from list B.",correct,Recursion
Create a JavaScript object containing a list of programming languages and their respective paradigms.,,"const languages = {
 'C': 'Imperative',
 'C++': 'Imperative',
 'Java': 'Object-Oriented',
 'Scala': 'Object-Oriented',
 'Python': 'Object-Oriented',
 'PHP': 'Object-Oriented',
 'Go': 'Imperative/Functional',
 'Ruby': 'Object-Oriented/Functional',
 ' JavaScript': 'Functional/Prototype-based',
};","const languages = {
 'C': 'Imperative',
 'C++': 'Imperative',
 'Java': 'Object-Oriented',
 'Scala': 'Object-Oriented',
 'Python': 'Object-Oriented'",Incomplete Answer,OOP
Design a Python program to sort the given list using insertion sort.,"[3,8,15,2,6,10]","def insertionSort(arr): 
    for i in range(1, len(arr)): 
  
        j = i-1
        key = arr[i] 
  
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 
  
arr = [3,8,15,2,6,10]
insertionSort(arr) 
print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])","def insertionSort(arr): 
    for i in range(1, len(arr)): 
  
        j = i-1
        key = arr[i] 
  
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[",Incomplete Answer,Loops
Create a program using Python to generate a histogram given a list of numbers.,"numbers = [2, 5, 2, 8, 3, 9, 4, 10]","# importing matplotlib module
import matplotlib.pyplot as plt

# list of numbers 
numbers = [2, 5, 2, 8, 3, 9, 4, 10]

# draw histogram 
plt.hist(numbers, bins = [0, 2, 4, 6, 8, 10])

# x label, y label and title
plt.xlabel('Numbers');
plt.ylabel('Frequency');
plt.title('Histogram for Numbers')

# display histogram 
plt.show()","# importing matplotlib module
import matplotlib.pyplot as plt

# list of numbers 
numbers = [2, 5, 2, 8, 3, 9, 4, 10]

# draw histogram 
plt.hist(numbers, bins = [0",Incomplete Answer,Recursion
Implement a function in Python to convert a decimal number to binary.,,"def decimalToBinary(num): 
    # empty list to store the binary number 
    binaryList = [] 
   
    # if the number is 0, return 0
    if num == 0:
        return [0]
  
    # loop until the number becomes 0 after division by 2
    while num > 0:
        binaryList.append(num % 2) 
        num //= 2
  
    # Reverse the list
    binaryList = binaryList[::-1] 
  
    return binaryList","def decimalToBinary(num) 
    # empty list to store the binary number 
    binaryList = [] 
   
    # if the number is 0, return 0
    if num == 0
        return [0]
  
    # loop until the number becomes 0 after division by 2
    while num > 0
        binaryList.append(num % 2) 
        num //= 2
  
    # Reverse the list
    binaryList = binaryList[-1] 
  
    return binaryList",Syntax Error,Loops
Create a function in Python that can tell if a string is a palindrome or not.,civic,"def is_palindrome(word):
    reversed_word = word[::-1]

    if word == reversed_word:
        return True
    else:
        return False
        
result = is_palindrome('civic')
print(result)","def is_palindrome(word):
    reversed_word = word[::-1]

    if word == reversed_word:
        r",Incomplete Answer,String Manipulation
Write a Python function to remove all consecutive duplicates of a given number.,"[1,1,2,3,3,3,4,4,4,4]","def remove_duplicates(lst):
  result = []
  curr = lst[0]

  for num in lst:
    if num != curr:
      result.append(num)
      curr = num
  return result","def remove_duplicates(lst)
  result = []
  curr = lst[0]

  for num in lst
    if num != curr
      result.append(num)
      curr = num
  return result",Syntax Error,Recursion
Write Python code that prints out the characters of a given string in reverse.,,"string = input() 
length = len(string) 

for i in range(length-1, -1, -1):
    print(string[i], end="""")","string = input() 
length = len(string) 

for i in range(length-1, -1, -1):
    print(string[i], end="""")",correct,Recursion
Create a GUI in Python using Tkinter.,,"# imports
import tkinter as tk

# create root app window
root = tk.Tk()

# setting window's size
root.geometry(""200x200"")

# main loop
root.mainloop()","# imports
import tkinter as tk

# create root app window
root = tk.Tk()

# setting window's size
root.geometry(""200x200"")

# main loop
root.mainloop()",correct,File I/O
Develop a function in Python for performing sentiment analysis of a given text.,A given text.,"Develop a function in Python to analyze the sentiment in a given text. Utilize natural language processing (NLP) techniques such as tokenization and parts of speech tagging, then leverage a pre-trained sentiment classifier to determine the sentiment in the given text.","Develop a function in Python to analyze the sentiment in a given text. Utilize natural language processing (NLP) techniques such as tokenization and parts of speech tagging, then leverage a pre-trained sentiment classifier to determine the sentiment in the given text.",Syntax Error,String Manipulation
"Optimize the existing Python code, so that the application runs faster (on average).","def factorial(n):
 if n == 0:
 return 1
 else:
 return n*factorial(n-1)

print(factorial(3))","def factorial(n):
 result = 1
 for i in range(1, n+1):
 result *= i
 return result
 
print(factorial(3))","def factorial(n):
 result = 1
 for i in range(1, n+1):
 result *= i
 return result
 
print(factorial(3))",correct,Recursion
Write a function to check if a dictionary is empty or not.,,"def my_dict(dict1):
  if bool(dict1):
     return False
  else:
     return True","def my_dict(dict1):
  if bool(dict1):
 return False
  else:
 return True",Syntax Error,File I/O
Create a Python program that takes a number and prints the product of that number and its next two values.,num = 5,"def product(num):
	return num * (num + 1) * (num + 2)

print(product(num))","def product(num)
	return num * (num + 1) * (num + 2)

print(product(num))",Syntax Error,Loops
Create a Python class that holds information about a car.,,"class Car:
    def __init__(self, make, model, year):
        self.make = make
        self.model = model
        self.year = year

    def description(self):
        return f'This car is a {self.year} {self.make} {self.model}'","class Car:
    def __init__(self, make, model, year):
        self.make = make
        self.model = model
       ",Incomplete Answer,String Manipulation
"Edit the following code snippet to print out ""Hello World"" instead of ""Hello Python""","print(""Hello Python"")","print(""Hello World"")","print(""Hel",Incomplete Answer,OOP
Create a Python module that provides a way to add two numbers and a way to subtract two numbers.,,"def add(x, y):
    return x + y

def subtract(x, y):
    return x - y","def add(x, y):
    return x + y

d",Incomplete Answer,String Manipulation
Write a Python program to implement a sorting algorithm (your choice).,"num_list = [5,2,1,9,7,8]","def sorting_algorithm(num_list):
    for i in range(len(num_list)):
        for j in range(i + 1, len(num_list)):
            if num_list[i] > num_list[j]:
                num_list[i], num_list[j] = num_list[j], num_list[i]
    return num_list","def sorting_algorithm(num_list:
    for i in range(len(num_list:
        for j in range(i + 1, len(num_list:
            if num_list[i] > num_list[j]:
                num_list[i], num_list[j] = num_list[j], num_list[i]
    return num_list",Syntax Error,String Manipulation
Write a python function to convert complex numbers to polar coordinates.,,"import cmath  
def convert(numbers):    
  num = cmath.polar(numbers)  
  return (num) ","import cmath  
def convert(numbers):    
  ",Incomplete Answer,Recursion
Create a Python program to find the total number of elements in a stack.,"Stack: [1, 2, 3, 4, 5]","def findNumOfElements(stack): 
    return len(stack)","def findNumOfElements(stack): 
    return len(stack)",correct,File I/O
Edit the existing Python program to append a new record with data programmatically.,"people = [
 {""name"": ""Alice"", ""age"": 8},
 {""name"": ""Bob"", ""age"": 11},
 {""name"": ""Charlie"", ""age"": 13},
]","people = [
 {""name"": ""Alice"", ""age"": 8},
 {""name"": ""Bob"", ""age"": 11},
 {""name"": ""Charlie"", ""age"": 13},
 {""name"": ""John"", ""age"": 15},
]

# Append a new record with data programmatically:
record = {""name"": ""John"", ""age"": 15}
people.append(record)","people = [
 {""name"": ""Alice"", ""age"": 8},
 {""name"": ""Bob"", ""age"": 11},
 {""name"": ""Charlie"", ""age"": 13},
 {""name"": ""John"", """,Incomplete Answer,OOP
Develop a Python function to calculate the amount of words in a short text.,,"def calculate_words_in_text(text):
    words = text.split("" "")
    return len(words)","def calculate_words_in_text(text):
words = text.split("" "")
return len(words)",Syntax Error,File I/O
Create a class to create a linked list in python nodes.,,"class ListNode:
    def __init__(self, data):
        self.data = data
        self.next = None","class ListNode:
    def __init__(self, data):
 ",Incomplete Answer,OOP
Use Python to create a dictionary whose keys are strings and whose values are lists containing numbers.,"keys = [""cat"", ""dog"", ""mouse""]
values = [1, 2, 3]","my_dict = {""cat"": [1], ""dog"": [2], ""mouse"": [3]}","my_dict = {""cat"": [1], ""dog"": [2], ""mouse"": [3]}",Syntax Error,String Manipulation
"Given a list of numbers, write a Python function to find out if any two numbers add up to a given number.",,"def two_sum(numbers, given):
    for i in range(len(numbers)):
        for j in range(i+1, len(numbers)):
            if numbers[i] + numbers[j] == given:
                return True
    return False","def two_sum(numbers, given):
    for i in range(len(numbers)):
        for j in range(i+1, len(numbers)):
            if numbers[i] + numbers[j] == given:
                return True
    return False",Syntax Error,OOP
Implement a Python function that takes a list of numbers as an input and counts the number of odd numbers in the list.,"[2, 3, 5, 7]","def countOddNumbers(arr):
    count = 0
    for num in arr:
        if num % 2 != 0:
            count += 1
    return count

count = countOddNumbers([2, 3, 5, 7])
print(""Number of odd numbers found: "" + str(count))","def countOddNumbers(arr):
count = 0
for num in arr:
    if num % 2 != 0:
        count += 1
return count

count = countOddNumbers([2, 3, 5, 7])
print(""Number of odd numbers found: "" + str(count))",Syntax Error,Loops
Write a Python program to parse a set of given comma-separated numbers in a string.,"string = ""1,2,3,4,5,6""","# Parsing the string
numbers = [int(num) for num in string.split(',')]

print(numbers)","# Parsing the string
numbers = [int(num) fo",Incomplete Answer,Loops
Generate a code for a Python program that removes all instances of a given character from a string.,"'Hello World!', 'o'","def remove_letter(word, letter):
    new_word = ''
    for char in word:
        if char != letter:
            new_word += char
    return new_word 

print(remove_letter('Hello World!', 'o'))","def remove_letter(word, letter):
    new_word = ''
    for char in word:
        if char != lett",Incomplete Answer,Recursion
Create a web scraper using Python to extract a list of all the movie names from IMDb's Top 250 Movies page.,,"import requests
from bs4 import BeautifulSoup

url = 'https://www.imdb.com/chart/top?sort=us,asc'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

movie_names = []
for div in soup.find_all('div', {'class': 'lister-list'}):
  for h3 in div.find_all('h3'):
    movie_names.append(h3.find('a').text)

print(movie_names)","import requests
from bs4 import BeautifulSoup

url = 'https://www.imdb.com/chart/top?sort=us,asc'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parse",Incomplete Answer,String Manipulation
Create a Python program to calculate the formula 2*sqrt(x+2).,x = 10,"import math

x = 10

result = 2*math.sqrt(x+2)

print(result ) # 12.0","import math

x = 10

result = 2*math.sqrt(x+2)

print(result ) # 12.0",correct,File I/O
Create a Python program to calculate the volume of a sphere.,,"def vol_sphere(r):
    '''Calculate the volume of a sphere with a given radius'''
    return (4/3) * math.pi * r**3","def vol_sphere(r):
    '''Calculate the volume of a sphere with a given radius'''
    return (4/3) * math.pi * r**3",correct,Loops
Create a Python script that will create a dictionary that contains the character count of the given string.,"""Python""","from collections import Counter 
  
str = ""Python""

# character count 
# using collections.Counter() 
res = Counter(str) 

# printing result  
print(""Count of all characters in GeeksforGeeks is :\n ""
                                        +  str(res))","from collections import Counter 
  
str = ""Python""

# character count 
# using collections.Counter() 
res = Counter(str) 

# printing result  
print(""Count of all characters in GeeksforGeeks is :\n ""
                                    +  str(res))",Syntax Error,String Manipulation
Write a python function to convert decimal number to octal number.,,"def decimal_to_Octal(deciNum):
    octalNum = 0
    countval = 1;
    dNo = deciNum;
    while (deciNum!= 0):
        remainder= deciNum % 8;
        octalNum+= remainder*countval;
        countval= countval*10;
        deciNum //= 8; 
    return (octalNum)","def decimal_to_Octal(deciNum):
    octalNum = 0
    countval = 1;
    dNo = deciNum;
    while (deciNum!= 0):
        remainder= deciNum % 8;
        octalNum+= remainder*countval;
        countval= countval*10;
        deciNum //= 8; 
    return (octalNum)",correct,File I/O
Can you generate code to clear all whitespace from a given string in Python?,"Input String = "" Hello World    ""","def clear_whitespace(s):
        s = s.strip() # Remove leading and trailing whitespaces
        s = """".join(s.split()) # Remove middle whitespaces
        return s

print(clear_whitespace("" Hello World    ""))","def clear_whitespace(s):
        s = s.strip() # Remove leading and trailing whitespaces
        s = """".join(s.split()) # Remove middle whitespaces
        return s

print(clear_whitespace("" Hello World    ""))",correct,Loops
Write a function to find length of the string.,,"def string_length(str1):
    count = 0
    for char in str1:
        count += 1
    return count","def string_length(str1):
    count = 0
    for char in str1:
        count += 1
    return count",Syntax Error,Loops
Create a Python function to calculate the sum of two numbers using a for loop.,,"def sum_of_two(x, y):
  result = 0
  for i in range(x, y+1):
    result += i
  return result","def sum_of_two(x, y):
  result = 0
  for i in ",Incomplete Answer,String Manipulation
Propose a Python program to tokenize the given sentences.,The quick brown fox jumps over the lazy dog,"import nltk

def tokenize_sentences(sentence):
    tokens = nltk.word_tokenize(sentence)
    return tokens","import nltk

def tokenize_sentences(sentence):
    tokens = nltk.word_tokenize(sentence)
    return tokens",correct,Recursion
"Using Python, create a program that calculates the average grade of 4 students.","John: 85
George: 90
Sarah: 75
Emily: 95","john_grade = 85
george_grade = 90
sarah_grade = 75
emily_grade = 95

def average_grade(john_grade, george_grade, sarah_grade, emily_grade):
    return (john_grade + george_grade + sarah_grade + emily_grade) / 4

avg_grade = average_grade(john_grade, george_grade, sarah_grade, emily_grade)
print('The average grade of 4 students is', avg_grade)","john_grade = 85
george_grade = 90
sarah_grade = 75
emily_grade = 95

def average_grade(john_grade, george_grade, sarah_grade, emily_grade:
    return (john_grade + george_grade + sarah_grade + emily_grade / 4

avg_grade = average_grade(john_grade, george_grade, sarah_grade, emily_grade
print('The average grade of 4 students is', avg_grade",Syntax Error,File I/O
Generate a Python script to calculate the sum of the first 10 numbers.,,"number_sum = 0
for i in range(1, 11):
    number_sum += i
print(number_sum) # 55","number_sum = 0
for i in range(1, 11):
number_sum += i
print(number_sum) # 55",Syntax Error,File I/O
Write a script in Python which takes a two-dimensional array as input and finds the smallest number in the array.,"array = [[2,3,4], [5,6,7], [-1,2,0]]","def find_smallest(array):
    smallest_item = array[0][0]
    for row in array:
        for item in row:
            if item < smallest_item:
                smallest_item = item
    return smallest_item","def find_smallest(array):
smallest_item = array[0][0]
for row in array:
    for item in row:
        if item < smallest_item:
            smallest_item = item
return smallest_item",Syntax Error,File I/O
Create a Python program to randomly filter out half of the elements of an array.,"[9, 2, 7, 4, 5, 6, 8, 1, 4, 0]","import random

def filter_half_array(arr):
    while len(arr)>0:
        el = random.choice(arr) # randomly select an element of the list
        arr.remove(el) # remove the selected item from the list
    return arr

arr = [9, 2, 7, 4, 5, 6, 8, 1, 4, 0]
filter_half_array(arr)","import random

def filter_half_array(arr):
    while len(arr)>0:
        el = random.choice(arr) # randomly select an element of the list
        arr.remove(el) # remove the selected item from the list
    return arr

arr = [9, 2, 7, 4, 5, 6, 8, 1, 4, 0]
filter_half_array(arr)",Syntax Error,File I/O
Write a Python program that outputs the average of 3 given numbers.,,"def find_average(num1, num2, num3):
 return (num1 + num2 + num3) / 3","def find_average(num1, num2, num3):
 return (num1 + num2 + num3) / 3",correct,File I/O
Create a Python program to encode an input string using base64 encoding.,,"import base64

def encode_string(input_string):
    encoded_bytes = base64.b64encode(input_string.encode('utf-8'))
    return encoded_bytes.decode('utf-8')","import base64

def encode_string(input_string):
    encoded_bytes = base64.b64encode(input_string.encode('utf-8'))
    return encoded_bytes.decode('utf-8')",correct,Recursion
Generate a class in Python that contains a dictionary to store student name and their grades.,,"class StudentGrades: 
    def __init__(self): 
        self.student_grades = {} 
  
    def store_grade(self, student_name, grade): 
        self.student_grades[student_name] = grade 
  
    def get_grade(self, student_name): 
        return self.student_grades.get(student_name)","class StudentGrades: 
    def __init__(self): 
        self.student_grades = {} 
  
    def store_grade(self, student_name, grade): 
        self.student_grades[student_name] = grade 
  
    def get_grade(self, student_name): 
        return self.student_grades.get(student_name)",Syntax Error,Recursion
Design a function in Python which takes a string and returns the string with the last word capitalized.,"mystring = ""This is a simple string""","def capitalize_last_word(mystring):
    words = mystring.split()
    words[-1] = words[-1].capitalize()
    return ' '.join(words)

result = capitalize_last_word(mystring)
print(result)","def capitalize_last_word(mystring):
    words = mystring.split()
    words[-1] = words[-1].capitalize()
    return ' '.join(words)

result = capitalize_last_word(mystring)
print(result)",correct,File I/O
Write a Python program to replace all the vowels in a string with '#'.,,"def replace_vowels(input_string):
    output_string = """"
    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']

    for char in input_string:
        if char in vowels:
            output_string += '#'
        else:
            output_string += char
    return output_string

input_string = ""Hello, I am a string.""
output_string = replace_vowels(input_string)

print(output_string)","def replace_vowels(input_string):
    output_string = """"
    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']

    for char in input_string:
        if char in vowels:
            outp",Incomplete Answer,Recursion
Create a web scraper in Python to extract the titles of all articles from Medium.,,"import requests
from bs4 import BeautifulSoup

# Make a request
url = 'https://medium.com/'
response = requests.get(url) 
html = response.text 

# Parse HTML 
soup = BeautifulSoup(html, 'html5lib') 

# Extract all the titles of the articles 
titles = soup.find_all('h3', class_='graf--title') 

# Print the titles 
for title in titles:
 print(title.text)","import requests
from bs4 import BeautifulSoup

# Make a request
url = 'https://medium.com/'
response = requests.get(url) 
html = response.text 

# Parse HTML 
soup = BeautifulSoup(html, 'html5lib') 

# Extract all the titles of the articles 
titles = soup.find_all('h3', class_='graf--title') 

# Print the titles 
for title in titles:
 print(title.text)",Syntax Error,String Manipulation
Write a Python code to add two numbers using bit-wise operations and print the result.,,"def add_numbers(x, y):
    while (y != 0):
        carry = x & y
        x = x ^ y
        y = carry << 1
    return x

num1 = 10
num2 = 5

res = add_numbers(num1, num2)
print(res)","def add_numbers(x, y):
    while (y != 0):
        carry = x & y
        x = x ^ y
       ",Incomplete Answer,OOP
Develop an algorithm in Python that takes an array of integers and returns the maximum of the numbers.,"[7, 9, 5, 10, 2]","def get_max(arr):
    max_num = None

    for num in arr:
        if max_num == None or num > max_num:
            max_num = num 

    return max_num

result = get_max([7, 9, 5, 10, 2])
print(result)","def get_max(arr):
    max_num = None

    for num in arr:
        if max_num == None or num > max_num:
            max_num = num 

    return max_num

result = get_max([7, 9, 5, 10, 2])
print(result)",correct,String Manipulation
Generate a cross-platform program in Python that takes in two sets of numbers and returns a list with the common elements found in both sets.,,"def find_common_elements(set1, set2):
    result = []
    for element in set1:
        if element in set2:
            result.append(element)
    
    return result","def find_common_elements(set1, set2):
    result = []
    for element in set1:
        if element in set2:
            result.append(element)
    
    return result",correct,Recursion
Create a Python program that takes in a string and counts the number of vowels in it.,"""Hello""","def count_vowels(s):
    count = 0
    for char in s:
        if char in ""aeiouAEIOU"":
            count += 1
    return count

s = ""Hello""
result = count_vowels(s)
print(result)","def count_vowels(s):
    count = 0
    for char in s:
        if char in ""aeiouAEIOU"":
  ",Incomplete Answer,String Manipulation
How can you design a Python program to find the sum of all prime numbers between 1 and a given limit?,Limit = 10,"def sum_primes(limit):
    sum = 0
    for i in range(2, limit+1):
        if is_prime(i):
            sum += i

    return sum

def is_prime(n):
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True","def sum_primes(limit):
    sum = 0
    for i in range(2, limit+1):
        if is_prime(i):
            sum += i

    return s",Incomplete Answer,File I/O
Use Python to generate a program that takes a list of integers as input and prints out their factors.,"[24, 75]","def print_factors(numbers):
    
    for n in numbers:
        print(""Factors of {}:"".format(n)) 
        for i in range(1, n + 1):
            if n % i == 0:
                print(i)

print_factors([24, 75])","def print_factors(numbers):
    
    for n in numbers:
        print(""Factors of {}:"".format(n)) 
      ",Incomplete Answer,String Manipulation
Establish a connection to a MySQL database using Python.,,"import mysql.connector 
  
# connect to  database 
mydb = mysql.connector.connect( 
host=""localhost"", 
user=""yourusername"", 
passwd=""yourpassword""
) 
  
# print the connection object 
print(mydb)","import mysql.connector 
  
# connect to  database 
mydb = mysql.connector.connect( 
host=""localhost"", 
user=""yourusername"", 
passwd=""yourpassword""
) 
  
# print the connection object 
print(mydb)",correct,String Manipulation
Create a Python program to randomly shuffle an array of integers.,,"def shuffle(arr):
    """"""Randomly shuffles an array of integers""""""
    # Using Fisher-Yates shuffle algorithm
    for i in range(len(arr) - 1, 0, -1):
        # Generate random index
        j = random.randint(0, i)
        # Swap elements
        arr[i], arr[j] = arr[j], arr[i] 
    return arr","def shuffle(arr):
""""""Randomly shuffles an array of integers""""""
# Using Fisher-Yates shuffle algorithm
for i in range(len(arr) - 1, 0, -1):
    # Generate random index
    j = random.randint(0, i)
    # Swap elements
    arr[i], arr[j] = arr[j], arr[i] 
return arr",Syntax Error,Loops
Write a recursive function in Python to calculate the Fibonacci sequence for an input value N.,,"def Fibonacci(n): 
   if n<0: 
      print(""Incorrect input"") 
   # First Fibonacci number is 0 
   elif n==1: 
      return 0
   # Second Fibonacci number is 1 
   elif n==2: 
      return 1
   else: 
      return Fibonacci(n-1)+Fibonacci(n-2)","def Fibonacci(n): 
   if n<0: 
      print(name, ""Incorrect input"") 
   # First Fibonacci number is 0 
   elif n==1: 
      return 0
   # Second Fibonacci number is 1 
   elif n==2: 
      return 1
   else: 
      return Fibonacci(n-1)+Fibonacci(n-2)",Syntax Error,OOP
Design a python code to convert a given sentence to camelCase,,"def toCamelCase(s):
    s = s.split(' ')
    return ''.join(x.title() for x in s)

s = ""this is some random text""
print(toCamelCase(s))","def toCamelCase(s):
    s = s.split(' ')
    return ''.join(x.title() for x in s)

s = ""this is some random text""
print(toCamelCase(s))",correct,Loops
Design a Python program that computes the maximum and minimum of a given list.,"[5, 3, 4, 10, 7]","def find_max_min(list_vals): 
    max_val = max(list_vals) 
    min_val = min(list_vals) 
  
    return max_val, min_val 

list_vals = [5, 3, 4, 10, 7] 
print(""Maximum value :"", find_max_min(list_vals)[0]) 
print(""Minimum value :"", find_max_min(list_vals)[1])","def find_max_min(list_vals: 
    max_val = max(list_vals 
    min_val = min(list_vals 
  
    return max_val, min_val 

list_vals = [5, 3, 4, 10, 7] 
print(""Maximum value :"", find_max_min(list_vals[0] 
print(""Minimum value :"", find_max_min(list_vals[1]",Syntax Error,Recursion
Generate a Dataframe in Python,"The table should have three columns - name, age, gender
Example data: 
John, 24, Male
Sarah, 32, Female","import pandas as pd

data = [('John', 24, 'Male'), 
        ('Sarah', 32, 'Female')] 
  
# Create the pandas DataFrame 
df = pd.DataFrame(data, columns = ['Name', 'Age', 'Gender']) 
  
print(df)","import pandas as pd

data = [('John', 24, 'Male'), 
        ('Sarah', 32, 'Female')] 
  
# Create the pandas DataFrame 
df = pd.DataFrame(data, columns = ['Name', 'Age', 'Gender']) 
  
print(df)",correct,OOP
Write a python program to extract the non-vowel words in a sentence.,This machine learning project is challenging.,"def extract_words(sentence):
    non_vowel_words = []
    words = sentence.split()
    vowels = ['a','e','i','o','u','A','E','I','O','U']
    for word in words:
        if not any(char in vowels for char in word):
            non_vowel_words.append(word) 
    return non_vowel_words","def extract_words(sentence):
    non_vowel_words = []
    words = sentence.split()
    vowels = ['a','e','i','o','u','A','E','I','O','U']
   ",Incomplete Answer,Recursion
Write a Python program to remove items from a list present in other list.,"list1 = [1, 2, 3, 4, 5]
list2 = [3, 4, 5, 6]",result_list = [item for item in list1 if item not in list2],result_list = [item for item ,Incomplete Answer,File I/O
Write a Python script to display a digital clock in the terminal.,,"import time

def display_digital_clock():
    """"""
    function to display a digital clock in terminal
    """"""
    while True:
        current_time = time.strftime(""%H:%M:%S"", time.localtime())
        print(current_time, end='\r')
        time.sleep(1)
    
display_digital_clock()","import time

def display_digital_clock():
    """"""
    function to display a digital clock in terminal
    """"""
    while True:
        current_time = time.strftime(""%H:%M:%S"", time.localtime())
        print(current_time, end='\r')
        time.sleep(1)
    
display_digital_clock()",correct,File I/O
Create a Python program to take a list of names and sort them alphabetically.,"['Adam', 'David', 'Mark', 'John', 'Sam']","def sort_names_alphabetically(names):
    names.sort()
    print(names)

names = ['Adam', 'David', 'Mark', 'John', 'Sam']
sort_names_alphabetically(names)

# Output: 
# ['Adam', 'David', 'John', 'Mark', 'Sam']","def sort_names_alphabetically(names):
    names.sort()
    print(names)

names = ['Adam', 'David', 'Mark', 'John', 'Sam']
sort_names_alphabetically(names)

# Output: 
# ['Adam', 'David', 'John', 'Mark', 'Sam']",correct,File I/O
Create an algorithm in Python which takes a list of numbers and sorts them in ascending order.,"numbers = [4, 1, 8, 5, 6]","def sortAscending(numbers):
    for i in range(len(numbers)):
        for j in range(i+1,len(numbers)):
            if numbers[i] > numbers[j] :
                temp = numbers[i]
                numbers[i] = numbers[j]
                numbers[j] = temp
    return numbers

print(sortAscending([4, 1, 8, 5, 6]))

# Output:
# [1, 4, 5, 6, 8]","def sortAscending(numbers):
    for i in range(len(numbers)):
        for j in range(i+1,len(numbers)):
            if numbers[i] > numbers[j] :
                temp = n",Incomplete Answer,String Manipulation
Create a sentiment analysis program in Python which takes a given sentence as an input and outputs its sentiment label.,,"import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentence = 'This movie was great!'

sid = SentimentIntensityAnalyzer()
sentiment_scores = sid.polarity_scores(sentence)

if sentiment_scores['compound'] > 0:
 print('Positive')
elif sentiment_scores['compound'] == 0:
 print('Neutral')
else:
 print('Negative')","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentence = 'This movie was great!'

sid = SentimentIntensityAnalyzer()
sentiment_scores = sid.polarity_scores(sentence)

if sentiment_scores['compound'] > 0:
 print(name, 'Positive')
elif sentiment_scores['compound'] == 0:
 print(name, 'Neutral')
else:
 print(name, 'Negative')",Syntax Error,Loops
Write a Python code to check whether an integer is divisible by 3 and 5.,,"def is_divisible_by_3_and_5(number):
    """"""This function checks whether a number is divisible by 3 and 5.

    Parameters: 
        number (int): The number to be checked.
	
    Returns: True if the number is divisible by 3 and 5, False otherwise.
    """"""
    if (number % 3 == 0) and (number % 5 == 0):
        return True
    else:
        return False","def is_divisible_by_3_and_5(number:
    """"""This function checks whether a number is divisible by 3 and 5.

    Parameters: 
        number (int: The number to be checked.
	
    Returns: True if the number is divisible by 3 and 5, False otherwise.
    """"""
    if (number % 3 == 0 and (number % 5 == 0:
        return True
    else:
        return False",Syntax Error,Recursion
Create a Python script to calculate the Fibonacci sequence for a given integer n.,7,"# Fibonacci sequence
def Fibonacci(n):
 a = 0
 b = 1
 if n < 0:
 print(""Incorrect input"")
 elif n == 0:
 return a
 elif n == 1:
 return b
 else:
 for i in range(2,n):
 c = a + b
 a = b
 b = c
 return b

# Driver Program
print(Fibonacci(7)) 
# Output: 13","# Fibonacci sequence
def Fibonacci(n):
 a = 0
 b = 1
 if n < 0:
 print(""Incorrect input"")
 elif n == 0:
 return a
 elif n == 1:
 return b
 else:
 for i in range(2,n):
 c = a + b
 a = b
 b = c
 return b

# Driver Program
print(Fibonacci(7)) 
# Output: 13",correct,OOP
Create a Python program to calculate the 10th Fibonacci number. The program should use a recursive approach to calculate the Fibonacci number.,,"def fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return fibonacci(n-1)+fibonacci(n-2) 
  
# Driver Program 
    print(fibonacci(10))","def fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
  ",Incomplete Answer,String Manipulation
"Given a list of squares in a 2D array, generate a Python program to find the number of squares with a side greater than 5.","[[2, 6, 1], [4, 3, 9], [4, 6, 7]]","count = 0
for row in arr:
    for col in row:
        if col > 5:
            count += 1
print(count)","count = 0
for row in arr:
for col in row:
    if col > 5:
        count += 1
print(count)",Syntax Error,OOP
Generate a Python program to demonstrate a sorting algorithm.,,"def sort_list(mylist):
 for i in range(len(mylist)):
 
 min_index = i
 temp = mylist[i]
 
 for j in range(i + 1, len(mylist)):
 
  if mylist[min_index] > mylist[j]:
   min_index = j
 
 mylist[i] = mylist[min_index]
 mylist[min_index] = temp
 
 return mylist
 
mylist = [1, 5, 7, 8, 4, 10, 2]
 
print(""Sorted list is:"")
print(sort_list(mylist))","def sort_list(mylist):
 for i in range(len(mylist)):
 
 min_index = i
 temp = mylist[i]
 
 for j in range(i + 1, len(mylist)):
 
  if mylist[min_index] > mylist[j]:
   min_index = j
 
 mylist[i] = mylist[min_index]
 mylist[min_index] = temp
 
 return mylist
 
mylist = [1, 5, 7, 8, 4, 10, 2]
 
print(""Sorted list is:"")
print(sort_list(mylist))",correct,Recursion
Compose a Python program for finding the maximum number from a given list of numbers.,"list = [10, 11, 25, 80, 50]","def max_number(list):
    max_num = 0
    for i in list:
        if i > max_num:
            max_num = i
    return max_num

max_num = max_number(list)
print(""The maximum number is:"", max_num)","def max_number(list)
    max_num = 0
    for i in list
        if i > max_num
            max_num = i
    return max_num

max_num = max_number(list)
print(""The maximum number is"", max_num)",Syntax Error,OOP
Develop a Python program to insert a given element into a specific position in a list,"2, [1, 3, 4]","# Create a function
def insert_element(el, lst):
    # Insert the element into the specific position
    lst.insert(2, el)
    return lst

# Test the function
print(insert_element(2, [1,3,4]))

# Output
[1, 3, 2, 4]","# Create a function
def insert_element(el, lst):
    # Insert the element into the specific position
    lst.insert(2, el)
    return lst

# Test the function
print(name, insert_element(2, [1,3,4]))

# Output
[1, 3, 2, 4]",Syntax Error,File I/O
Create a class in Python to generate a calendar.,"calendarName = ""My Calendar""","class CalendarGenerator(object):

    def __init__(self, name):
        self.name = name

    def generate_calendar(self):
        calendar = []

        # Code to generate a calendar goes here

        return calendar

calendar = CalendarGenerator(calendarName)
calendar.generate_calendar()","class CalendarGenerator(object):

    def __init__(self, name):
        self.name = name

    def generate_calendar(self):
        calendar = []
",Incomplete Answer,File I/O
Generate a Python program to search an item in a given sorted list.,,"def binary_search(numbers, n):
   start = 0
   end = len(numbers) - 1

   while start <= end:
      mid = (start + end) // 2
      if numbers[mid] == n:
         return mid
      elif numbers[mid] < n:
         start = mid + 1
      else:
         end = mid - 1
   return -1","def binary_search(numbers, n):
   start = 0
   end = len(numbers) - 1

   while start <= end:
      mid = (start + end) // 2
      if num",Incomplete Answer,Recursion
Generate a function in Python to find the maximum element from a given array.,"[10, 15, 20, 11, 99]","def findMaxElement(array):
    maxElement = 0
    for element in array:
        if element > maxElement:
            maxElement = element
    return maxElement

array = [10, 15, 20, 11, 99] 
maxElement = findMaxElement(array)
print(""The maximum element in the array is"", maxElement)","def findMaxElement(array):
    maxElement = 0
    for element in array:
        if element > maxElement:
            maxElement = element
    return maxElement

array = [10, 15, 20, 11, 99] 
maxElement = findMaxElement(array)
print(""The maximum element in the array is"", maxElement)",correct,OOP
Write a python program to fill missing values in a given dataset.,Dataset with missing values,"def fill_missing_values(data):
    for column in data.columns:
        if data[column].isnull().any():
            mean = data[column].mean()
            data[column] = data[column].fillna(mean)
    return data","def fill_missing_values(data):
    for column in data.columns:
        if data[column].isnull().any():
            mean = data[column].mean()
            data[column] = data[column].fillna(mean)
    return data",correct,File I/O
Write a Python code for a program that takes an integer as an input and prints the number of divisors for that integer.,,"def count_divisors(number):
    divisors = 0
    for i in range(1, number+1):
        if number % i == 0:
            divisors += 1
    print(""Number of divisors:"", divisors)","def count_divisors(number):
    divisors = 0
    for i in range(1, number+1):
        if number % i == 0:
            divisors += 1
    print(name, ""Number of divisors:"", divisors)",Syntax Error,Recursion
"Write a Python program to generate a HTML table with 3 columns and 5 rows, filled with random numbers.",,"import random

def generate_html_table():
    html_table = ""<table>\n""
    for i in range(5):
        html_table += ""  <tr>\n""
        for j in range(3):
            html_table += ""    <td>{}</td>\n"".format(random.randint(1, 100))
        html_table += ""  </tr>\n""
    html_table += ""</table>""
    return html_table

print(generate_html_table())","import random

def generate_html_table()
    html_table = ""<table>\n""
    for i in range(5)
        html_table += ""  <tr>\n""
        for j in range(3)
            html_table += ""    <td>{}</td>\n"".format(random.randint(1, 100))
        html_table += ""  </tr>\n""
    html_table += ""</table>""
    return html_table

print(generate_html_table())",Syntax Error,Recursion
Take the following Python data structure and render it to JSON format.,"data = {
 'name': 'John',
 'age': 34,
 'hobbies': ['surfing', 'hiking', 'golf']
}","import json

data = {
 'name': 'John',
 'age': 34,
 'hobbies': ['surfing', 'hiking', 'golf']
}

json_data = json.dumps(data)

print(json_data)","import json

data = {
 'name': 'John',
 'age': 34,
 'hobbies': ['surfin",Incomplete Answer,OOP
"Write a function in Python which takes two parameters, a string and a single character, and returns a count of occurrence of the single character in the string.","String = ""The quick brown fox""
Character = ""q""","def countOccurrence(string, char):
    count = 0
    for c in string:
        if c == char:
            count += 1
    return count

String = ""The quick brown fox""
Character = ""q""
count = countOccurrence(String, Character)
print(count)","def countOccurrence(string, char)
    count = 0
    for c in string
        if c == char
            count += 1
    return count

String = ""The quick brown fox""
Character = ""q""
count = countOccurrence(String, Character)
print(count)",Syntax Error,Recursion
Implement an algorithm in Python that takes an array of numbers and returns the maximum value in the array.,"[2, 5, 8, 10, 4]","def find_max(arr):
    max_val = arr[0]
    
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val

result = find_max([2, 5, 8, 10, 4])
print(result)","def find_max(arr):
    max_val = arr[0]
    
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val

result = find_max([2, 5, 8, 10, 4])
print(name, result)",Syntax Error,String Manipulation
Write a python function to find the sum of fourth power of n natural numbers.,,"import math  
def fourth_Power_Sum(n): 
    sum = 0
    for i in range(1,n+1) : 
        sum = sum + (i*i*i*i) 
    return sum","import math  
def fourth_Power_Sum(n): 
    sum = 0
    for i ",Incomplete Answer,Loops
Create a Python program to prompt the user for a number (x) and then print the list of its factors in increasing order.,,"x = int(input(""Enter a number: ""))

# Initialize list
factors = []
# Find the factors
for i in range(1, x + 1):
    if x % i == 0:
        factors.append(i)
# Sort factors
factors.sort()

# Print the factors
print(""The factors of"", x, ""are:"")
for factor in factors:
    print(factor)","x = int(input(""Enter a number: ""))

# Initialize list
factors = []
# Find the factors
for i in range(1, x + 1):
    if x % i == 0:
        fa",Incomplete Answer,File I/O
Generate a list using a while loop in Python and appends the current number to the list.,,"my_list = []

num = 0

while num < 10:
    my_list.append(num)
    num += 1

print(my_list)","my_list = []

num = 0

while num < 10:
    my",Incomplete Answer,File I/O
"Create a python class to store information about a person's name, address and phone number.",,"class Person:
    def __init__(self, name, address, phone_number):
        self.name = name
        self.address = address
        self.phone_number = phone_number
    
    def get_name(self):
        return self.name
    
    def get_address(self):
        return self.address
    
    def get_phone_number(self):
        return self.phone_number","class Person:
    def __init__(self, name, address, phone_number):
        self.name = name
        self.address = address
        self.phone_number = phone_number
    
    def get_name(self):
        return self.name
    
    def get_address(self):
        return self.address
    
    def get_phone_number(self):
        return self.phone_number",correct,Loops
Write a Python program to print out the even numbers in the given list.,"list = [1, 4, 5, 6, 7, 8]","#Print out even numbers from the given list
for num in list:
    if (num % 2 == 0):
        print(num)","#Print out even numbers from the given list
for num",Incomplete Answer,Recursion
Create a Python function that prints a string in reverse order.,"""GPT-3""","def reverse_string(string): 
  return string[::-1] 
  
print(reverse_string(""GPT-3""))","def reverse_string(string): 
  return string[::-1] 
  
print(reverse_string(""GPT-3""))",correct,File I/O
Add an input prompt in a Python program that asks for your name and prints it back.,,"name = input(""What is your name? "")

print(""Your name is: "" + name)","name = input(""What is your name? ""

print(""Your name is: "" + name",Syntax Error,OOP
Create an algorithm in Python to determine all pairs of negative numbers in an array.,"[-2, -1, 0, 1, 2]","def findNegativePairs(arr):
  results = []
  for i in range(0, len(arr)):
    for j in range(i + 1, len(arr)):
      if arr[i] < 0 and arr[j] < 0:
        results.append((arr[i], arr[j]))
  return results 

print(findNegativePairs([-2, -1, 0, 1, 2]))","def findNegativePairs(arr):
  results = []
  for i in range(0, len(arr)):
    for j in range(i + 1, len(arr)):
      if arr[i] < 0 and arr[j] < 0:
        results.append((arr[i], arr[j]))
  return results 

print(findNegativePairs([-2, -1, 0, 1, 2]))",correct,File I/O
Identify errors and write fix for the following python code,"def uppercase_letter_count(string):
    count = 0
    for c in string
        if c.isupper():
            count += 1
    return count","def uppercase_letter_count(string):
    count = 0
    for c in string: # Added missing colon
        if c.isupper():
            count += 1
    return count # Removed an unnecessary '-'","def uppercase_letter_count(string:
    count = 0
    for c in string: # Added missing colon
        if c.isupper(:
            count += 1
    return count # Removed an unnecessary '-'",Syntax Error,OOP
Write a function in Python to find the maximum depth in a tree.,,"def max_depth(root):
    if root is None:
        return 0

    left_depth = max_depth(root.left)
    right_depth = max_depth(root.right)

    return max(left_depth, right_depth) + 1","def max_depth(root):
if root is None:
    return 0

left_depth = max_depth(root.left)
right_depth = max_depth(root.right)

return max(left_depth, right_depth) + 1",Syntax Error,Recursion
Write an algorithm in Python that uses an iterative approach to count all elements greater than a given value in an array.,"array: [7, 8, 4, 2, 9], target: 5","def countGreaterThan(arr, target):
    count = 0
    for element in arr:
        if element > target:
            count += 1
    return count

# Example
arr = [7, 8, 4, 2, 9]
target = 5
print(countGreaterThan(arr, target))
# Output: 3","def countGreaterThan(arr, target)
    count = 0
    for element in arr
        if element > target
            count += 1
    return count

# Example
arr = [7, 8, 4, 2, 9]
target = 5
print(countGreaterThan(arr, target))
# Output 3",Syntax Error,String Manipulation
Create a function in Python that checks whether a given string is a palindrome.,,"def is_palindrome(string):
    # convert the string to lowercase
    str = string.lower()
    # reverse the string
    revStr = str[::-1]
    # check for the condition
    if str == revStr:
        return True
    return False","def is_palindrome(string):
    # convert the string to lowercase
    str = string.lower()
    # reverse the string
    revStr = str[::-1]
    # check for the condition
    if str == revStr:
        return True
    return False",correct,Loops
Create a scoring system for a trivia game in Python. The system should take two inputs - the correct answer and user response - and return a single score value.,"correct_answer = '5'
user_response = 'five'","def score_trivia(correct, user):
    correct = correct.lower()
    user = user.lower()

    max_score = 10
    score = 0

    if correct == user:
        score = max_score
    elif user in correct or correct in user:
        score = max_score * 0.8

    return score","def score_trivia(correct, user):
    correct = correct.lower()
    user = user.lower()

    max_score = 10
    score = 0

    if corr",Incomplete Answer,File I/O
Generate a Python script that stores the numbers 0 to 10 in an array.,,"# creating an empty array 
array = [] 
  
# loop for iterating over 
for i in range(11): 
    array.append(i) 
  
# print the array 
print(array)","# creating an empty array 
array = [] 
  
# loop for iterating over 
for i in range(11): 
    array.append(i) 
  
# print the array 
print(array)",correct,File I/O
Construct a loop in Python that iterates over a given list of strings and prints each string.,"[""apple"", ""banana"", ""cherry""]","strings = [""apple"", ""banana"", ""cherry""]

for string in strings:
    print(string)","strings = [""apple"", ""banana"", ""cherry""]

for string in strings:
    print(string)",correct,Loops
Refactor the following Python code to improve its readability and make it easier to maintain:,"images = list()
for item in allitems:
 if item.endswith('.jpg'):
 images.append(item)",images = [item for item in allitems if item.endswith('.jpg')],images = [item for item in all,Incomplete Answer,String Manipulation
Create a script in Python to sort a list of names by alphabetical order.,"names = [""John"", ""Sara"", ""Joseph"", ""James""]","names.sort()
print(names)","names.sort()
print(name, names)",Syntax Error,Recursion
Construct a Python program that reads a user input and returns twice the value.,Number = 3,"def double(number):
    return number * 2

# Output 
6","def double(number:
    return number * 2

# Output 
6",Syntax Error,OOP
Design and implement a program in Python that converts temperatures from Celsius to Fahrenheit and vice versa.,,"def cel_to_fahr(cel):
    return cel * (9 / 5) + 32
  
def fahr_to_cel(fahr):
    return (fahr - 32) * (5 / 9)","def cel_to_fahr(cel):
    return cel * (9 / 5) + 32
  
def fahr_to_cel(fahr):
    return (fahr - 32) * (5 / 9)",correct,OOP
Create a new Python list with only the odd numbers from the following list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","odd_numbers = [num for num in [1, 2, 3, 4, 5, 6, 7, 8, 9] if num % 2 != 0]","odd_numbers = [num for num in [1, 2, 3, 4, 5, 6, 7, 8, 9] if num % 2 != 0]",Syntax Error,String Manipulation
Design a Python program that counts the number of words in a sentence.,This is a sentence with seven words.,"def countWords(sentence): 
 
    # split the sentence into words 
    words = sentence.split() 
    wordCount = len(words) 
   
    return wordCount 
  
# Driver code 
sentence = ""This is a sentence with seven words.""
wordCount = countWords(sentence) 
print(""Number of words in the sentence ="", wordCount)","def countWords(sentence): 
 
    # split the sentence into words 
    words = sentence.split() 
    wordCount = len(words) 
   
    return wordCount 
  
# Driver code 
sentence = ""This is a sentence with seven words.""
wordCount = countWords(sentence) 
print(""Number of words in the sentence ="", wordCount)",correct,OOP
Create a Python program that uses NumPy to find the correlation coefficient between two variables.,,"import numpy as np

x = np.array([1,2,3,4,5])
y = np.array([2,3,4,5,6])

corr = np.corrcoef(x, y)

print(corr[0][1]) # 0.98999999999999999","import numpy as np

x = np.array([1,2,3,4,5])
y = np.array([2,3,4,5,6])

corr = np.corrcoef(x, y)

print(corr[0][1]) # 0.98999999999999999",correct,OOP
Write a Python program to input a list of integers and remove any duplicate values.,"my_list = [1, 3, 3, 5, 6, 6, 9]","def remove_duplicates(my_list):
    unique_list = []
    for i in my_list:
        if i not in unique_list:
            unique_list.append(i)
    return unique_list","def remove_duplicates(my_list):
    unique_list = []
    for i in my_list:
        if i not in unique_list:
            unique_list.append(i)
    return unique_list",correct,Loops
Write a Python program to validate a given telephone number.,,"import re

def validate_telephone_number(number): 
  pattern = '^[0-9]{10}$'
  if re.match(pattern, number): 
    return True
  else: 
    return False","import re

def validate_telephone_number(number): 
  pattern = '^[0-9]{10}$'
  if re.match(pattern, number): 
    return True
  else: 
    return False",correct,File I/O
Write a Python program to classify a set of input data as either True or False.,"[1, 2, 3, 4, 5]","def classify(data):
    if min(data) < 0:
        return False
    elif max(data) > 1:
        return False
    else:
        return True","def classify(data):
    if min(data) < 0:
        return False
    elif max(data) > 1:
        return False
    else:
        return True",correct,String Manipulation
Develop a program in Python to store 5 integer numbers in a list and print out the maximum value.,"[7, 9, 23, 0, 4]","numbers = [7, 9, 23, 0, 4]

maximum = max(numbers)

print(""The maximum value is: ""+ str(maximum))","numbers = [7, 9, 23, 0, 4]

maximum = max(numbers)

print(""The maximum value is: ""+ str(maximum))",correct,String Manipulation
"Write a Python program to take a user's input, store it in a variable, and then print out a greeting combining the user's name and the value they entered.","Name: Allan 
Value: 5","name = input(""Name: "")
value = input(""Value: "")
print(""Hello {}, your value is {}"".format(name, value))","name = input(""Name: "")
value = input(""Value: "")
print(""Hello {}, your value is {}"".format(name, value))",correct,File I/O
Write a function to find the largest triangle that can be inscribed in an ellipse.,,"import math
def largest_triangle(a,b): 
    if (a < 0 or b < 0): 
        return -1 
    area = (3 * math.sqrt(3) * pow(a, 2)) / (4 * b);  
    return area ","import math
def largest_triangle(a,b: 
    if (a < 0 or b < 0: 
        return -1 
    area = (3 * math.sqrt(3 * pow(a, 2 / (4 * b;  
    return area ",Syntax Error,String Manipulation
Optimize a Python code to calculate the sum of digits in a number.,n = 123,"def digit_sum(n):
    if n == 0:
        return 0

    return (n % 10) + digit_sum(n // 10)

n = 123
print(digit_sum(n))","def digit_sum(n):
    if n == 0:
        return 0

    retur",Incomplete Answer,File I/O
optimize a given python code by using correct data structures and algorithms.,"def someFunction(someList):
    outputList = []
    for item in someList:
        if item not in outputList:
            outputList.append(item)
    return outputList","def someFunction(someList):
    seen = set()
    outputList = []
    for item in someList:
        if item not in seen:
            outputList.append(item)
            seen.add(item)
    return outputList","def someFunction(someList):
    seen = set()
    outputList = []
    for item in someList:
        if item not in seen:
            outputList.append(item)
            seen.add(item)
    return outputList",correct,File I/O
Rewrite the following Python function to minimize the number of lines and improve readability.,"def add_numbers(num1, num2):
    sum = num1 + num2 
    print(""The sum of two numbers is :"",sum)","def add_numbers(num1, num2):
    print(f""The sum of two numbers is : {num1 + num2}"")","def add_numbers(num1, num2):
    pritn(f""The sum of two numbers is : {num1 + num2}"")",Syntax Error,String Manipulation
Design a program in Python which takes an array of words as input and return an alphabetically ordered array of the words.,"[""apple"",""banana"",""grapes""]","def sortAlphabetically(arr):
    arr.sort()
    return arr

print(sortAlphabetically([""apple"",""banana"",""grapes""]))","def sortAlphabetically(arr):
    arr.sort()
    return ar",Incomplete Answer,File I/O
Create a Python script that uses regular expressions to find all phone numbers in a string.,The following phone number should be found: (111) 111-1111,"import re

phone_string = ""(111) 111-1111""

phone_numbers = re.findall(r'\(?\d{3}\)?-?\s?\d{3}-\d{4}', phone_string)

for number in phone_numbers:
 print(number)
# Output: (111) 111-1111","import re

phone_string = ""(111) 111-1111""

phone_numbers = re.findall(r'\(?\d{3}\)?-?\s?\d{3",Incomplete Answer,Loops
Create a for loop in Python to print out the numbers in a given list in reverse order.,"[1,2,3,4,5]","list = [1,2,3,4,5]
for i in reversed(list):
    print(i)","list = [1,2,3,4,5]
for i in reversed(list):
    pritn(i)",Syntax Error,Recursion
Create a Python program to calculate the number of times a word appears in a given sentence.,"sentence = ""Hello World""
word = ""Hello""","count = sentence.count(word)
print(count)","count = sentence.count(word)
print(count)",Syntax Error,OOP
"Given a Python script containing functions, optimize the code to reduce the number of iterations.","def myfunc(n):
    for i in range(n):
        print(i) 

def main():
    myfunc(50)
    myfunc(100)","def myfunc(n):
   for i in range(0, n, 5): 
       print(i) 

def main(): 
   myfunc(50) 
   myfunc(100)","def myfunc(n)
   for i in range(0, n, 5) 
       print(i) 

def main() 
   myfunc(50) 
   myfunc(100)",Syntax Error,Loops
Optimize a code snippet in Python for maximum performance.,"import time
 
def sleep_for_the_ night():
 time.sleep(5)
 
while True:
 sleep_for_the_ night()","import time

def sleep_for_the_night():
 while True:
  start_time = time.time()
  time.sleep(5)
  end_time = time.time()
  elapsed_time = end_time - start_time
  if elapsed_time < 5:
   time.sleep(5-elapsed_time)

while True:
 sleep_for_the_night()","import time

def sleep_for_the_night(:
 while True:
  start_time = time.time(
  time.sleep(5
  end_time = time.time(
  elapsed_time = end_time - start_time
  if elapsed_time < 5:
   time.sleep(5-elapsed_time

while True:
 sleep_for_the_night(",Syntax Error,File I/O
Create a script in Python to replace all occurrences of a character in a string with another character.,"string = ""This is an example""","def replace_char(string, char1, char2):
    new_string = """"
    for char in string:
        if char == char1:
            new_string += char2
        else:
            new_string += char
    return new_string

string = ""This is an example""
new_string = replace_char(string, ""s"", ""z"")
print(new_string)
# Output: Thiz iz an example","def replace_char(string, char1, char2):
new_string = """"
for char in string:
    if char == char1:
        new_string += char2
    else:
        new_string += char
return new_string

string = ""This is an example""
new_string = replace_char(string, ""s"", ""z"")
print(new_string)
# Output: Thiz iz an example",Syntax Error,OOP
Create a class in Python which calculates the cost of a given item based on its size and weight.,,"class CostCalculator:
    def __init__(self, size, weight):
        self.size = size
        self.weight = weight
    
    def calculate_item_cost(self):
        cost = self.size * self.weight * 0.1
        return cost","class CostCalculator:
    def __init__(self, size, weight):
        self.size = size
        self.weight = weight
    
    def calculate_item_cost(self):
        cost = self.size * self.weight * 0.1
        return cost",correct,File I/O
"Using the comment as a guide, create a python loop that calculates the sum of the numbers in a given list","Input List: [1, 2, 3, 4, 5]","def sum_list(input_list):
    """"""Calculate the sum of the numbers in a given list""""""
    total = 0
    for num in input_list:
        total += num
    return total","def sum_list(input_list:
    """"""Calculate the sum of the numbers in a given list""""""
    total = 0
    for num in input_list:
        total += num
    return total",Syntax Error,String Manipulation
Create a python script that outputs the following string,My favorite color is blue.,print('My favorite color is blue.'),print('My favorite color is blue.',Syntax Error,File I/O
Construct a class in Python to represent a point in Cartesian coordinates.,,"class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
  
    def distance_from_origin(self):
        return (self.x ** 2 + self.y ** 2) ** 0.5
  
p = Point(3, 4)
print(p.distance_from_origin())","class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
  
    def distance_from_origin(self):
        return (self.x ** 2 + self.y ** 2) ** 0.5
  
p = Point(3, 4)
print(p.distance_from_origin())",correct,String Manipulation
Design a Python program to print a triangle pyramid pattern.,,"for i in range(0, 5):
    for j in range(0, i+1):
        print(""* "",end="""")
    print(""\r"")","for i in range(0, 5):
    for j in range(0, i+1):
        pritn(""* "",end="""")
    pritn(""\r"")",Syntax Error,Loops
Write a python function to find the smallest missing number from the given array.,,"def find_First_Missing(array,start,end): 
    if (start > end): 
        return end + 1
    if (start != array[start]): 
        return start; 
    mid = int((start + end) / 2) 
    if (array[mid] == mid): 
        return find_First_Missing(array,mid+1,end) 
    return find_First_Missing(array,start,mid) ","def find_First_Missing(array,start,end) 
    if (start > end) 
        return end + 1
    if (start != array[start]) 
        return start; 
    mid = int((start + end) / 2) 
    if (array[mid] == mid) 
        return find_First_Missing(array,mid+1,end) 
    return find_First_Missing(array,start,mid) ",Syntax Error,OOP
Design a function in Python to compute the factorial of a given number.,,"def factorial(n):
 if n == 0:
 return 1
 else:
 return n * factorial(n-1)","def factorial(n):
 if n == 0:
 retur",Incomplete Answer,Loops
Create a function in Python to remove all duplicates from a given list.,Example of a list containing duplicates,"def remove_duplicates(lst): 
    new_list = [] 
    for item in lst: 
        if item not in new_list: 
            new_list.append(item) 
    return new_list","def remove_duplicates(lst): 
    new_list = [] 
    for item in lst: 
        if item not in new_list: 
            new_list.append(item) 
    return new_list",correct,Recursion
Develop a function to convert kilometers to miles in Python.,,"def kms_to_miles(kms):
  miles = kms / 1.609
  return miles","def kms_to_miles(kms):
  mile",Incomplete Answer,String Manipulation
"Given a linked list, write an algorithm in Python to check if the linked list contains a cycle (i.e. the list is circular).",,"def contains_cycle(head):
 slow_pointer = head
 fast_pointer = head

 while fast_pointer and fast_pointer.next:
 slow_pointer = slow_pointer.next
 fast_pointer = fast_pointer.next.next

 if slow_pointer == fast_pointer:
 return True

 return False","def contains_cycle(head):
 slow_pointer = head
 fast_pointer = head

 while fast_pointer and fast_pointer.next:
 slow_point",Incomplete Answer,Loops
Optimize the following Python code to use built-in functions.,"def removeDuplicates(array): 
    for i in range (len(array)): 
        for j in range (i + 1, len(array)): 
            if array[i] == array[j]: 
                array.pop(j)","def removeDuplicates(array): 
    finalArray = []
    for element in array: 
        if element not in finalArray: 
            finalArray.append(element)
    return finalArray","def removeDuplicates(array): 
    finalArray = []
    for element in array: 
        if element not in finalArray: 
            finalArray.append(element)
    return finalArray",Syntax Error,OOP
Write a python function to find the sum of the largest and smallest value in a given array.,,"def big_sum(nums):
      sum= max(nums)+min(nums)
      return sum","def big_sum(nums):
      sum= max",Incomplete Answer,Loops
Write a Python program to check if all the elements in a given list are unique.,,"def is_list_unique(list):
    unique_list = list(dict.fromkeys(list))
    return len(list) == len(unique_list)","def is_list_unique(list):
    unique_list = list(dict.fromkeys(list))
    return len(list) == len(unique_list)",correct,File I/O
Design a Python program to generate a set of Fibonacci numbers up to a given value.,n = 10,"def fibonacci(n): 
 fib = [] 
 
 a, b = 0, 1
 while a < n: 
  fib.append(a) 
  a, b = b, a + b 
 
 return fib

n = 10
print(fibonacci(n))","def fibonacci(n): 
 fib = [] 
 
 a, b = 0, 1
 while a < n: 
  fib.ap",Incomplete Answer,Recursion
Write a Python program to split a string into a list of words.,,"def split_into_words(text):
    """"""
    Splits a string into a list of words
    """"""
    # Split the text on whitespace
    return text.split()","def split_into_words(text):
    """"""
    Splits a string into a list of words
    """"""
    # Split the text on whitespace
    return text.split()",correct,String Manipulation
Write a function to find numbers divisible by m or n from a list of numbers using lambda function.,,"def div_of_nums(nums,m,n):
 result = list(filter(lambda x: (x % m == 0 or x % n == 0), nums)) 
 return result","def div_of_nums(nums,m,n):
 result = list(filter(lambda x: (x % m == 0 or x % n == 0), nums)) 
 return result",correct,Loops
Construct a python script to display the frequency of each words appearing in a document,"The text document contains the following content:

The quick brown fox jumps over the lazy dog.","from collections import Counter
 
with open('text.txt', 'r') as f:
    data = f.read().lower().split()
    
word_counter = Counter(data)
 
# Print the sorted most common 10 words
for word, count in word_counter.most_common(10):
    print('{}: {}'.format(word, count))","from collections import Counter
 
with open('text.txt', 'r') as f:
    data = f.read().lower().split()
    
word_counter = Counter(da",Incomplete Answer,String Manipulation
Write a python code to perform a three-way comparison of three numbers.,,"def three_way_comparison(num1, num2, num3):
    if num1 > num2 and num1 > num3:
        return 1
    elif num2 > num1 and num2 > num3:
        return 2
    elif num3 > num1 and num3 > num2:
        return 3","def three_way_comparison(num1, num2, num3):
    if num1 > num2 and num1 > num3:
        return 1
    elif num2 > num1 and num2 > num3:
        return 2
    elif num3 > num1 and num3 > num2:
        return 3",correct,Recursion
Write a python function to add a minimum number such that the sum of array becomes even.,,"def min_Num(arr,n):  
    odd = 0
    for i in range(n): 
        if (arr[i] % 2): 
            odd += 1 
    if (odd % 2): 
        return 1
    return 2","def min_Num(arr,n):  
    odd = 0
    for i in range(n): 
        if (arr[i] % 2): 
            odd += 1 
    if (odd % 2): 
        return 1
    return 2",correct,Loops
Convert the following JavaScript function to Python.,"function double(x) {
  return 2 * x;
}","def double(x):
  return 2 * x","def double(x):
  return 2 * x",correct,File I/O
Write a python program to combine two lists in a dictionary. The dictionary should have the first list as keys and the second list as the corresponding values.,"list1 = [1,2,3]
list2 = [4,5,6]","def list_to_dict(keys, values):
 result = {}
 for i in range(len(keys)):
  result[keys[i]] = values[i] 
 return result","def list_to_dict(keys, values):
 result = {}
 for i in range(len(keys)):
  result[keys[i]] = values[i] 
 return result",Syntax Error,Loops
"Create a program in Python to generate a random password. The password should contain a minimum of 8 characters including lowercase letters, uppercase letters, numbers, and special characters.",,"import string
import random

def generate_password(length=8):
 characters = string.ascii_letters + string.digits + string.punctuation
 return ''.join(random.choice(characters) for _ in range(length))

password = generate_password()
print(password)","import string
import random

def generate_password(length=8)
 characters = string.ascii_letters + string.digits + string.punctuation
 return ''.join(random.choice(characters) for _ in range(length))

password = generate_password()
print(password)",Syntax Error,OOP
Write a python class to store an employee's ID number and name.,,"class Employee:
  def __init__(self, id, name):
    self.id = id
    self.name = name

  def get_id(self):
    return self.id

  def get_name(self):
    return self.name","class Employee:
  def __init__(self, id, name):
    self.id = id
    self.name = name

  def get_id(self):
    return self.id

  def get_name(self):
    return self.name",Syntax Error,File I/O
Construct a function to reverse an array in Python.,"[1, 2, 3, 4]","def reverse_array(arr):
    left = 0
    right = len(arr) - 1

    while left < right:
        temp = arr[left]
        arr[left] = arr[right]
        arr[right] = temp
        left += 1
        right -= 1

arr = [1, 2, 3, 4]

reverse_array(arr)

print(arr)  # [4, 3, 2, 1]","def reverse_array(arr:
    left = 0
    right = len(arr - 1

    while left < right:
        temp = arr[left]
        arr[left] = arr[right]
        arr[right] = temp
        left += 1
        right -= 1

arr = [1, 2, 3, 4]

reverse_array(arr

print(arr  # [4, 3, 2, 1]",Syntax Error,Recursion
"Using the input, write a Python function to calculate the average number of items in the list.","list_items = [1, 3, 5, 7, 8, 10]","def average_list_items(list_items):
  list_length = len(list_items)
  list_sum = sum(list_items)
  average = list_sum/list_length
  return average","def average_list_items(list_items)
  list_length = len(list_items)
  list_sum = sum(list_items)
  average = list_sum/list_length
  return average",Syntax Error,Recursion
Write a python function to find the index of smallest triangular number with n digits.,,"import math 
def find_Index(n): 
    x = math.sqrt(2 * math.pow(10,(n - 1))); 
    return round(x); ","import math 
def find_Index(n): 
    x = math.sqr",Incomplete Answer,Recursion
Write a function in Python to create a list containing all even numbers between 1 and 20 (inclusive).,,"def even_numbers():
    even_list = []
    for number in range(1, 21):
        if number % 2 == 0:
            even_list.append(number)
    return even_list","def even_numbers():
even_list = []
for number in range(1, 21):
    if number % 2 == 0:
        even_list.append(number)
return even_list",Syntax Error,Recursion
Create a class in Python to handle the following Student object.,"Name: John
Age: 20
Marks: [80, 90, 85, 100]","class Student:
    def __init__(self, name, age, marks):
        self.name = name
        self.age = age
        self.marks = marks
        
    def get_name(self):
        return self.name
    
    def get_age(self):
        return self.age
    
    def get_total_marks(self):
        return sum(self.marks)","class Student:
    def __init__(self, name, age, marks):
        self.name = name
        self.age = age
        self.marks = marks
        
    def get_name(self):
        return self.name
    
    def get_age(self):
        return self.age
    
    def get_total_marks(self):
        return sum(self.marks)",Syntax Error,Loops
Develop an algorithm to find the least common multiple of two non-negative integers using Python.,"12, 18","# Find the greatest common denominator
def gcd(num1, num2):
    if num2 == 0:
        return num1
    else:
        return gcd(num2, num1 % num2)

# Find the least common multiple
def lcm(num1, num2):
    return (num1 * num2) // gcd(num1, num2)

num1 = 12
num2 = 18

print(lcm(num1, num2))","# Find the greatest common denominator
def gcd(num1, num2)
    if num2 == 0
        return num1
    else
        return gcd(num2, num1 % num2)

# Find the least common multiple
def lcm(num1, num2)
    return (num1 * num2) // gcd(num1, num2)

num1 = 12
num2 = 18

print(lcm(num1, num2))",Syntax Error,File I/O
Create a Python method which will make an HTTP GET request to the given URL and return the response.,url='http://www.example.com/',"import requests

def getRequest(url):
 response = requests.get(url)
 return response

res = getRequest('http://www.example.com/')
print(res.text)","import requests

def getRequest(url):
 response = requests.get(url)
 return response

res = getRequest('http://www.example.com/')
print(name, res.text)",Syntax Error,String Manipulation
Generate Python code that collects all the even numbers from a given list of numbers.,"[1, 2, 3, 4, 5, 6, 7, 8]","def collect_even_numbers(nums):
    even_nums = []
    for num in nums:
        if num % 2 == 0:
            even_nums.append(num)
    return even_nums","def collect_even_numbers(nums:
    even_nums = []
    for num in nums:
        if num % 2 == 0:
            even_nums.append(num
    return even_nums",Syntax Error,String Manipulation
Write a Python program to find the most common number among a given array of numbers.,"[1, 5, 4, 3, 2, 5, 4, 1, 3, 5]","def most_common(arr):
    counts = {}
    for n in arr:
        if n in counts:
            counts[n] += 1
        else:
            counts[n] = 1
    max_count = 0
    max_element = None
    for k, v in counts.items():
        if v > max_count:
            max_count = v
            max_element = k
    return max_element","def most_common(arr:
    counts = {}
    for n in arr:
        if n in counts:
            counts[n] += 1
        else:
            counts[n] = 1
    max_count = 0
    max_element = None
    for k, v in counts.items(:
        if v > max_count:
            max_count = v
            max_element = k
    return max_element",Syntax Error,File I/O
Write a function to check if the given tuple list has all k elements.,,"def check_k_elements(test_list, K):
  res = True
  for tup in test_list:
    for ele in tup:
      if ele != K:
        res = False
  return (res) ","def check_k_elements(test_list, K):
  res = True
  for tup in test_list:
    for ele in tup:
      if ele != K:
        res = False
  return (res) ",correct,File I/O
Provide a type definition for the following class in Python.,"class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age","from typing import NamedTuple

class Student(NamedTuple):
    name: str
    age: int","from typing import NamedTuple

class Student(NamedTuple)
    name str
    age int",Syntax Error,String Manipulation
Create a Python script for downloading webpages from a list of URLs.,"The URLs are: https://www.google.com, https://www.youtube.com and https://www.yahoo.com","import requests

urls = [""https://www.google.com"", ""https://www.youtube.com"", ""https://www.yahoo.com""]

for url in urls:
 response = requests.get(url)
 html = response.text
 with open(f""{url.split('//')[1]}.html"", ""w"") as file:
 file.write(html)","import requests

urls = [""https://www.google.com"", ""https://www.youtube.com"", ""https://www.yahoo.com""]

for url in urls:
 ",Incomplete Answer,String Manipulation
Construct a Python script for finding the second smallest element in a given list.,,"def secondSmallestElement(lst): 
    min1 = min(lst[0], lst[1]); 
    min2 = max(lst[0], lst[1]); 
   
    for i in range(2, len(lst)): 
        if lst[i] < min1: 
            min2 = min1; 
            min1 = lst[i]; 
   
    return min2;","def secondSmallestElement(lst): 
    min1 = min(lst[0], lst[1]); 
    min2 = max(lst[0], lst[1]); 
   
    for i in range(2, len(lst)): 
        if lst[i] < min1: 
            min2 = min1; 
            min1 = lst[i]; 
   
    return min2;",correct,OOP
Build a python program to extract only the unique words from the following sentence.,"sentence = ""I like to play soccer and i like to play basketball""","def extract_unique_words(sentence):
    words_list = sentence.split()
    unique_words_list = set(words_list)
    return unique_words_list","def extract_unique_words(sentence):
    words_list = sentence.split()",Incomplete Answer,File I/O
Generate a Python program that normalizes a given array by subtracting the mean.,,"def normalize(arr):
   mean = sum(arr) / len(arr)
   normalized_arr = [x - mean for x in arr]
   return normalized_arr","def normalize(arr)
   mean = sum(arr) / len(arr)
   normalized_arr = [x - mean for x in arr]
   return normalized_arr",Syntax Error,Recursion
Create an algorithm in Python that takes in a two-dimensional array (matrix) and returns a flattened version of the array.,"matrix = [[1,2,3],
          [4,5,6],
          [7,8,9]]","def flattenMatrix(matrix):
    return [elem for row in matrix for elem in row]

matrix = [[1,2,3],
          [4,5,6],
          [7,8,9]] 

flatMatrix = flattenMatrix(matrix)
print(flatMatrix)

# Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]","def flattenMatrix(matrix):
    return [elem for row in matrix for elem in row]

matrix = [[1,2,3],
          [4,5,6],
          [7,8,9]] 

flatMatrix = flattenMatrix(matrix)
print(flatMatrix)

# Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]",correct,File I/O
Write a code in Python to find the sum of all the prime numbers less than or equal to a given number.,,"def sum_of_primes_below(n):
    prime_sum = 0
    for num in range(2, n+1):
        for i in range(2,num):
            if (num % i == 0):
                break
        else:
            prime_sum += num
    return prime_sum","def sum_of_primes_below(n:
    prime_sum = 0
    for num in range(2, n+1:
        for i in range(2,num:
            if (num % i == 0:
                break
        else:
            prime_sum += num
    return prime_sum",Syntax Error,File I/O
Create a command-line tool in Python that can calculate the sum of two numbers.,,"import argparse

# Create a parser
parser = argparse.ArgumentParser()
# Add the arguments
parser.add_argument('--num1', type=int, help='First number')
parser.add_argument('--num2', type=int, help='Second number')
# Execute the parse_args() method
args = parser.parse_args()

#Calculate the sum
sum = args.num1 + args.num2
#Print the sum
print(sum)","import argparse

# Create a parser
parser = argparse.ArgumentParser()
# Add the arguments
parser.add_argument('--num1', type=int, help='First number')
parser.add_argument('-",Incomplete Answer,File I/O
Generate a Python code snippet to combine two dictionaries.,,"dict3 = {**dict1, **dict2}","dict3 = {**dict1, **dict2}",Syntax Error,Loops
Can you create a program to implement the factorial of a number,,"# Python code to implement factorial 
def factorial(n): 
    # single line to find factorial 
    return 1 if (n==1 or n==0) else n * factorial(n - 1);  
  
# Driver Code 
num = 5; 
print(""Factorial of"", num, ""is"",  factorial(num))","# Python code to implement factorial 
def factorial(n): 
    # single line to find factorial 
    return 1 if (n==1 or n==0) else n * factorial(n - 1);  
  
# Driver Code 
num = 5; 
print(""Factorial of"", num, ""is"",  factorial(num))",correct,File I/O
"In Python, generate a function to extract data from a MySQL table, given a query string.","query_string = ""SELECT * FROM student WHERE course='Python'""","def extract_data_from_mysql(query_string):
    conn = mysql.connector.connect(host=""localhost"", user=""root"", passwd=""password"", database=""student"")
    
    cursor = conn.cursor()
    cursor.execute(query_string)
    
    result = cursor.fetchall()
    
    conn.close()
    
    return result","def extract_data_from_mysql(query_string):
    conn = mysql.connector.connect(host=""localhost"", user=""root"", passwd=""password"", database=""student"")
    
    cursor = conn.cursor()
    cursor.execute(query_string)
    
    result = cursor.fetchall()
    
    conn.close()
    
    return result",Syntax Error,File I/O
What is the shortest way to sort a list of integers in descending order in Python?,,"# using the sorted function with key parameter 
list_of_ints = [8, 0, 7, 4, 5, 6, 9]

sorted_list_ints = sorted(list_of_ints, key=lambda num: -num)

print(sorted_list_ints) #[9, 8, 7, 6, 5, 4, 0]","# using the sorted function with key parameter 
list_of_ints = [8, 0, 7, 4, 5, 6, 9]

sorted_list_ints = sorted(list_of_ints, key=lambda num -num)

print(sorted_list_ints) #[9, 8, 7, 6, 5, 4, 0]",Syntax Error,OOP
Write a function to split a list for every nth element.,,"def list_split(S, step):
    return [S[i::step] for i in range(step)]","def list_split(S, step):
    return [S[i::step] for i in range(step)]",correct,File I/O
Create a python program that reads a list of names and picks a random name from that list.,"John, Mary, Paul, Gerry","import random

names = [""John"", ""Mary"", ""Paul"", ""Gerry""]

print(""The randomly chosen name is"", random.choice(names))","import random

names = [""John"", ""Mary"", ""Paul"", ""Gerry""]

",Incomplete Answer,Recursion
"Generate an appropriate Python program to calculate the future value of an investment with the given principal, rate of interest and years.","Principal: 10000
Rate of interest: 10
Years: 5","# Calculate the Future Value of an Investment 
def future_value(principal, rate, years): 

# Calculate the total amount  
total_amount = principal * (1+(rate/100))**years

# return the future value
return round(total_amount,2)

# Testing 
print(future_value(10000,10,5))","# Calculate the Future Value of an Investment 
def future_value(principal, rate, years): 

# Calculate the total amount  
total_amount ",Incomplete Answer,File I/O
Create a Python program that takes a list of digits as input and returns a 2D list of all the possible permutations of these digits.,"[1, 2]","def permutations(nums):
 permutations_list = []
 for permutation in itertools.permutations(nums):
 permutations_list.append(list(permutation))
 
 return permutations_list
 
 print(permutations([1, 2]))
# Output: [[1, 2], [2, 1]]","def permutations(nums):
 permutations_list = []
 for permutation in itertools.permutations(nums):
 permutations_list.append(list(permutation))
 
 return permutations_list
 
 print(permutations([1, 2]))
# Output: [[1, 2], [2, 1]]",Syntax Error,String Manipulation
Implement a function in Python which takes an array of integers and an integer target and returns whether the given target exists in the array or not.,"[1, 4, 7, 11], 4","def contains_target(numbers, target):
    return target in numbers","def contains_target(numbers, targ",Incomplete Answer,Loops
Can you generate a program to convert a given string to a list of characters in Python,,"def string_to_list(string):
    char_list = []
    for char in string:
        char_list.append(char)
    return char_list","def string_to_list(string):
    char_list = []
    for char i",Incomplete Answer,Recursion
Can you generate a Python program that takes a list of numbers and creates a new list with only even numbers?,"[1, 2, 3, 4, 5, 6, 7, 8]","def extractEvenNumbers(numbers): 
    even_numbers = [num for num in numbers if num % 2 == 0]
    return even_numbers
  
numbers = [1, 2, 3, 4, 5, 6, 7, 8]
even_numbers = extractEvenNumbers(numbers)
print(even_numbers)","def extractEvenNumbers(numbers: 
    even_numbers = [num for num in numbers if num % 2 == 0]
    return even_numbers
  
numbers = [1, 2, 3, 4, 5, 6, 7, 8]
even_numbers = extractEvenNumbers(numbers
print(even_numbers",Syntax Error,Recursion
"Given two strings A and B, construct a Python program to determine if B is a substring of A.","A = ""I am here"" 
B = ""here""","def is_substring(A, B): 
    if B in A: 
        return True 
    else: 
        return False","def is_substring(A, B) 
    if B in A 
        return True 
    else 
        return False",Syntax Error,Loops
Generate a SQL query in Python to find the sum of numbers in a given dataset.,"Input data:
[[1, 2], [3, 4], [5, 6]]","import pandas as pd

df = pd.DataFrame([[1, 2], [3, 4], [5, 6]])

query = 'SELECT SUM(NUM1 + NUM2) AS SUM_NUM FROM df'

sum_num = pd.read_sql_query(query, con=df.to_sql('df'))
print(sum_num)","import pandas as pd

df = pd.DataFrame([[1, 2], [3, 4], [5, 6]]

query = 'SELECT SUM(NUM1 + NUM2 AS SUM_NUM FROM df'

sum_num = pd.read_sql_query(query, con=df.to_sql('df'
print(sum_num",Syntax Error,String Manipulation
Create a call to an external API in Python and process the response.,The API URL: 'https://www.example.com/api/data',"import requests

url = 'https://www.example.com/api/data'
response = requests.get(url)
data = response.json()

# Process response data
for item in data:
  # Do something with item...","import requests

url = 'https://www.example.com/api/data'
response = requests.get(url)
data = response.json()

# Process response data
for item in data:
  # Do something with item...",Syntax Error,Recursion
Write a script in Python to extract the title of a webpage from its HTML code.,"html = ""<title>This is page title</title>""","soup = BeautifulSoup(html, 'html.parser')
title = soup.find('title').text
print(title)","soup = BeautifulSoup(html, 'html.parser')
title = soup.find('title').text
print(name, title)",Syntax Error,Recursion
"Given a string which humans can read, write a Python program to create a list that contains all the words in the string in reverse order","input_string = ""I love to write code""","input_words = input_string.split()
output_words = [word[::-1] for word in input_words]
print(output_words)","input_words = input_string.split()
output_words = [wo",Incomplete Answer,String Manipulation
Write a Python program to look for an element in an array and return its index if found or -1 otherwise,"[10, 20, 10, 40, 5], 10","def search_element(arr, ele):
    for i in range(len(arr)):
        if arr[i] == ele:
            return i
    return -1","def search_element(arr, ele):
    for i in range(len(arr)):
        if arr[i] == ele:
            return i
    return -1",Syntax Error,String Manipulation
Write a Python program to convert all strings in a list to uppercase.,,"def to_uppercase(list):
  return [item.upper() for item in list]","def to_uppercase(list)
  return [item.upper() for item in list]",Syntax Error,Recursion
Make a program that finds the reverse of a string in Python.,Hello World,"def reverse(s): 
    return s[::-1] 

reverse(""Hello World"")","def reverse(s: 
    return s[::-1] 

reverse(""Hello World""",Syntax Error,File I/O
Design a Python program to find all the palindromes in a given list of words.,"[""apple"", ""eye"", ""ball"", ""abba""]","mylist = [""apple"", ""eye"", ""ball"", ""abba""]

palindromes = [word for word in mylist if word == word[::-1]]
print(palindromes)","mylist = [""apple"", ""eye"", ""ball"", ""abba""]

palindromes = [word for word in mylist if word == word[::-1]]
print(palindromes)",correct,OOP
Convert a SQL query to Python code.,SELECT * FROM orders WHERE status = 'shipped',"import sqlite3

conn = sqlite3.connect('database.db')
c = conn.cursor()
c.execute('SELECT * FROM orders WHERE status = \'shipped\'')

result = c.fetchall()

for row in result:
    print(row)

conn.close()","import sqlite3

conn = sqlite3.connect('database.db')
c = conn.cursor()
c.execute('SELECT * FROM orders WHERE status = \'shipped\'')

result = c.fetchall()

for row in result:
    print(row)

conn.close()",correct,Recursion
Write a Python code snippet to split a given text into sentences.,,"import nltk
from nltk.tokenize import sent_tokenize

def split_into_sentences(text):
    sentences = sent_tokenize(text)
    return sentences","import nltk
from nltk.tokenize import sent_tokenize

def split_into_se",Incomplete Answer,Recursion
edit the following Python code to make the loop stop when the counter is equal to five,"counter = 0
while counter < 10:
    print(counter)
    counter = counter + 1","counter = 0
while counter < 10:
    print(counter)
    if counter == 5:
        break
    counter = counter + 1","counter = 0
while counter < 10:
    print(counter)
    ",Incomplete Answer,Loops
Construct a Python program to sort an array in descending order.,"arr = [4, 5, 2, 6, 1, 3]","def descending_sort(arr): 
    for i in range(len(arr)): 
        for j in range(0, len(arr)-i-1): 
            if arr[j] < arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr
  
arr = [4, 5, 2, 6, 1, 3]
  
descending_sort(arr)

print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])","def descending_sort(arr): 
for i in range(len(arr)): 
    for j in range(0, len(arr)-i-1): 
        if arr[j] < arr[j+1] : 
            arr[j], arr[j+1] = arr[j+1], arr[j]
return arr
  
arr = [4, 5, 2, 6, 1, 3]
  
descending_sort(arr)

print (""Sorted array is:"") 
for i in range(len(arr)): 
print (""%d"" %arr[i])",Syntax Error,String Manipulation
Create a script in any language that will accept two variables and will swap their values.,,"# Python
def swap(a, b):
    temp = a
    a = b
    b = temp
    return (a, b)

# JavaScript
function swap(a, b) {
    let temp = a;
    a = b;
    b = temp;
    return [a, b];
}","# Python
def swap(a, b):
    temp = a
    a = b
    b = temp
    return (a, b)

# JavaScript
function swap(a, b) {
    let temp = a;
    a = b;
    b = temp;
    return [a, b];
}",correct,File I/O
Generate a Python script that takes any number of integer arguments and returns their sum.,3 5 7,"def sum_ints(*args):
    total = 0
    for num in args:
        total += num
    
    return total

print(sum_ints(3, 5, 7))","def sum_ints(*args):
    total = 0
    for num in args:
        total += num
    
    return total

print(sum_ints(3, 5, 7))",correct,String Manipulation
Can you modify the given Python program to fetch the top 5 elements in the list?,"sequence = [2, 8, 6, 4, 1, 9, 5]","sequence = [2, 8, 6, 4, 1, 9, 5]

top_5 = sorted(sequence)[-5:]

print(top_5)","sequence = [2, 8, 6, 4, 1, 9, 5]

top_5 = sorted(sequence[-5:]

print(top_5",Syntax Error,File I/O
"Write a Python program to replace all empty strings in a given list with ""NULL"".","data = [""A"", """", ""B"", """", ""C"", """"]","data = [""A"", ""NULL"", ""B"", ""NULL"", ""C"", ""NULL""]

##
new_data = []
for i in data:
 if i == """":
 new_data.append(""NULL"")
 else:
 new_data.append(i)

print(new_data)","data = [""A"", ""NULL"", ""B"", ""NULL"", ""C"", ""NULL""]

##
new_data = []
for i in data:
",Incomplete Answer,String Manipulation
Create a Python function which adds the given list of numbers and returns the sum.,"list_of_nums = [1, 2, 3, 4, 5]","def add_nums(list_of_nums):
 sum = 0
 for num in list_of_nums:
  sum += num
 return sum

sum_of_nums = add_nums(list_of_nums)
print(sum_of_nums) # 15","def add_nums(list_of_nums):
 sum = 0
 for num in list_of_nums:
  sum += nu",Incomplete Answer,OOP
Convert the given JSON object to a Python list.,"{""name"": ""John"", ""age"": 25, ""hobby"": ""programming""}","data = {""name"": ""John"", ""age"": 25, ""hobby"": ""programming""}

list = list(data.values())
 
print(list)
# Output: [""John"", 25, ""programming""]","data = {""name"": ""John"", ""age"": 25, ""hobby"": ""programming""}

list = li",Incomplete Answer,Loops
Implement a method in Python to calculate the factorial of a given number.,5,"def factorial(x):
    result = 1
    for i in range(1,x+1):
        result = result*i
    return result
    
print(factorial(5))","def factorial(x):
    result = 1
    for i in range(1,x+1):
    ",Incomplete Answer,String Manipulation
Create a function in Python to search a list for a given item.,"list = [1, 2, 3, 4, 5, 6]
item = 4","def search_list(lst, item): 
    for i in range(len(lst)): 
        if lst[i] == item: 
            return i 
    return -1

idx = search_list(list, item) 
if idx == -1: 
    print(""Item not found"")
else:
    print(""Item found at index"", idx)","def search_list(lst, item): 
    for i in range(len(lst)): 
        if lst[i] == item: 
            return i 
    return -1

idx = search_list(list, item) 
if idx == -1: 
    print(""Item not found"")
else:
    print(""Item found at index"", idx)",correct,Recursion
Create a basic search engine using Elasticsearch and Python. The search engine should allow users to enter a query and return a list of relevant documents.,,"from elasticsearch import Elasticsearch

# create the client
es = Elasticsearch()

# define the query
query = {
 ""query"": {
 ""match"": {
 ""text"": ""query_term""
 }
 }
}

# search the index
response = es.search(index=""index_name"", body=query)

# print the results
for hit in response[""hits""][""hits""]:
 print(hit[""_source""])","from elasticsearch import Elasticsearch

# create the client
es = Elasticsearch()

# define the query
query = {
 ""query"": {
 ""match"": {
 ""text"": ""query_term""
 }
 }
}

# search the index
response = es.search(index=""index_name"", body=query)

# print the results
for hit in response[""hits""][""hits""]:
 print(hit[""_source""])",correct,String Manipulation
Write a function to find length of the subarray having maximum sum.,,"from sys import maxsize 
def max_sub_array_sum(a,size): 
	max_so_far = -maxsize - 1
	max_ending_here = 0
	start = 0
	end = 0
	s = 0
	for i in range(0,size): 
		max_ending_here += a[i] 
		if max_so_far < max_ending_here: 
			max_so_far = max_ending_here 
			start = s 
			end = i 
		if max_ending_here < 0: 
			max_ending_here = 0
			s = i+1
	return (end - start + 1)","from sys import maxsize 
def max_sub_array_sum(a,size): 
	max_so_far = -maxsize - 1
	max_ending_here = 0
	start = 0
	end = 0
	s = 0
	for i in range(0,size): 
		max_ending_here += a[i] 
		if max_so_far < max_ending_here: 
			max_so_far = max_ending_here 
			start = s 
			end = i 
		if max_ending_here < 0: 
			max_ending_here = 0
			s = i+1
	return (end - start + 1)",correct,OOP
Write a function to count coin change.,,"def coin_change(S, m, n): 
    table = [[0 for x in range(m)] for x in range(n+1)] 
    for i in range(m): 
        table[0][i] = 1
    for i in range(1, n+1): 
        for j in range(m): 
            x = table[i - S[j]][j] if i-S[j] >= 0 else 0
            y = table[i][j-1] if j >= 1 else 0 
            table[i][j] = x + y   
    return table[n][m-1] ","def coin_change(S, m, n): 
    table = [[0 for x in range(m)] for x in range(n+1)] 
    for i in range(m): 
        table[0][i] = 1
    for i in range(1, n+1): 
        for j in range(m): 
            x = table[i - S[j]][j] if i-S[j] >= 0 else 0
            y = table[i][j-1] if j >= 1 else 0 
            table[i][j] = x + y   
    return table[n][m-1] ",Syntax Error,Recursion
"Create a function in Python that takes a list as an input and returns a list containing the same elements, but with all duplicates removed.","list = [1, 2, 3, 1, 4, 2, 5]","def remove_duplicates(list):
 result = []
 for element in list:
  if element not in result:
    result.append(element)
 return result

print(remove_duplicates(list)) # Will return [1, 2, 3, 4, 5]","def remove_duplicates(list):
 result = []
 for element in list:
  if element not in result:
    result.append(element)
 return result

print(remove_duplicates(list)) # Will return [1, 2, 3, 4, 5]",correct,String Manipulation
Write a python code to sort the given array of numbers in ascending order.,"[3, 5, 1, 6, 9, 4]","""""""
Sort array of numbers in ascending order
""""""

def sort_in_ascending(arr):
    arr.sort()
    return arr

if __name__==""__main__"":
    arr = [3, 5, 1, 6, 9, 4]
    sorted_arr = sort_in_ascending(arr)
    print(""Sorted array in ascending order is ""+str(sorted_arr))","""""""
Sort array of numbers in ascending order
""""""

def sort_in_ascending(arr):
    arr.sort()
    return arr

if __name__==""__main__"":",Incomplete Answer,Recursion
Define a function in Python that takes two strings and returns a new string which is the concatenation of the two.,"""Hello"" and ""World""","def concatenate_two_strings(str_1, str_2):
    return str_1 + str_2

conc_str = concatenate_two_strings(""Hello"", "" World"")
print(conc_str)","def concatenate_two_strings(str_1, str_2):
    return str_1 + str_2

conc_str = concatenate_two_strings(""Hello"", "" World"")
print(name, conc_str)",Syntax Error,OOP
"Write a Python program to define a class Employee and add methods to get salary, change name and change salary.",,"class Employee:

    def __init__(self, name, salary):
        self.name = name
        self.salary = salary
    
    def get_salary(self):
        return self.salary
    
    def change_name(self, name):
        self.name = name
    
    def change_salary(self, salary):
        self.salary = salary","class Employee:

def __init__(self, name, salary):
    self.name = name
    self.salary = salary

def get_salary(self):
    return self.salary

def change_name(self, name):
    self.name = name

def change_salary(self, salary):
    self.salary = salary",Syntax Error,Recursion
Write a function in Python that returns the nth term in a Fibonacci sequence.,,"# Fibonacci sequence generator
def fibonacci(n):
  a = 0
  b = 1
  if n < 0:
    print(""Incorrect input"")
  elif n == 1:
    return a
  elif n == 2:
    return b
  else:
    for i in range(2,n):
      c = a + b
      a = b
      b = c
    return b","# Fibonacci sequence generator
def fibonacci(n):
  a = 0
  b = 1
  if n < 0:
    print(""Incorrect input"")
  elif n == 1:
  ",Incomplete Answer,String Manipulation
Generate a python script that replaces each character in a string with its reverse:,string = 'Hello World',"def reverseString(string):
    n = len(string) 
    # create an empty array
    revString = [0 for i in range(n)] 
  
    for i in range(n):
        revString[n-i-1] = string[i] 
  
    return ""("" + ''.join(revString) + "")""
print(reverseString(""Hello World""))","def reverseString(string):
    n = len(string) 
    # create an empty array
    revString = [0 for i in range(n)] 
  
    for i i",Incomplete Answer,Loops
Generate a function in Python for sorting a list of numbers in decreasing order.,,"def sort_list(numbers): 
    sorted_list = sorted(numbers, reverse=True)
    return sorted_list","def sort_list(numbers): 
    sorted_list = sorted(numbers, reverse=True)
    return sorted_list",Syntax Error,String Manipulation
Generate a random integer within a range of 1 to 10 using Python.,,"import random
random_number = random.randint(1, 10)
print(random_number)","import random
random_number = random.randint(1, 10)
print(random_number)",correct,OOP
Create a Python script to transform a number into its equivalent binary format.,,"def to_binary(num): 
    # convert to a binary number
    if num > 1: 
        to_binary(num // 2)
    print(num % 2,end = '')","def to_binary(num) 
    # convert to a binary number
    if num > 1 
        to_binary(num // 2)
    print(num % 2,end = '')",Syntax Error,Loops
Design a Python function to return the sum of three numbers.,"[5, 10, 8]","def sum_three_numbers(nums):
    return sum(nums)

result = sum_three_numbers([5, 10, 8])
print(result)","def sum_three_numbers(nums):
    return sum(nums)

",Incomplete Answer,OOP
What Python code can you create to remove the second character from a given string?,"string = ""example""","removed_string = string[:1] + string[2:]
print(removed_string) # ""xample""",removed_string = string[:1] + string,Incomplete Answer,Recursion
Implement a sorting algorithm in Python that takes in a list of integers and returns a sorted version.,"[3, 5, 18, 6, 1, 20]","def sort_list(lst): 
  for i in range(len(lst)):
    min_idx = i
    for j in range(i+1, len(lst)):
      if lst[min_idx] > lst[j]:
        min_idx = j
    lst[i], lst[min_idx] = lst[min_idx], lst[i]
  return lst

print(sort_list([3, 5, 18, 6, 1, 20]))","def sort_list(lst): 
  for i in range(len(lst)):
    min_idx = i
    for j in range(i+1, len(lst)):
      if lst[min_idx] > lst[j]:
        min_idx = j
    lst[i], lst[min_idx] = lst[min_idx], lst[i]
  return lst

print(sort_list([3, 5, 18, 6, 1, 20]))",correct,File I/O
Generate Python code that computes the nth Fibonacci number.,n = 5,"def nth_fibonacci(n):
    """"""Return the nth Fibonacci number""""""
    a = 0
    b = 1
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        for i in range(2, n):
            c = a + b
            a = b 
            b = c
        return b","def nth_fibonacci(n):
    """"""Return the nth Fibonacci number""""""
    a = 0
    b = 1
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        for i in range(2, n):
            c = a + b
            a = b 
            b = c
        return b",correct,OOP
"Write a Python program to generate random passwords of six characters long and include lowercase letters, uppercase letters, and numbers.",,"import string
import random

def generate_password():
 password_characters = string.ascii_letters + string.digits 
 password = ''.join(random.choice(password_characters) for i in range(6))
 return password

print(generate_password())","import string
import random

def generate_password():
 password_characters = string.ascii_letters + string.digits 
 password = ''.join(random.choice(password_characters) for i in range(6))
 return password

print(generate_password())",correct,OOP
Create a recursive function in Python to calculate the Fibonacci numbers up to the nth term.,,"def computeFibonacci(n): 
   if n<0: 
      print(""Incorrect input"") 
   elif n==1: 
      return 0
   elif n==2: 
      return 1
   else: 
      return computeFibonacci(n-1)+computeFibonacci(n-2)","def computeFibonacci(n): 
   if n<0: 
      print(name, ""Incorrect input"") 
   elif n==1: 
      return 0
   elif n==2: 
      return 1
   else: 
      return computeFibonacci(n-1)+computeFibonacci(n-2)",Syntax Error,String Manipulation
Create an algorithm in Python to find the smallest number in an unsorted list,"[12, 5, 9, 8, 10]","def find_smallest(list):
    smallest = list[0]
    for num in list:
        if num < smallest:
            smallest = num
    return smallest

result = find_smallest([12, 5, 9, 8, 10])
print(result)","def find_smallest(list):
    smallest = list[0]
    for num in list:
        if num < smallest:
   ",Incomplete Answer,File I/O
Create a serverless API in Python that takes a text string as input and returns the associated Wikipedia page for the text.,Text String: Python programming language,"import wikipedia

def get_wiki_page(query):
 try:
 page = wikipedia.page(query)
 except:
 return None
 
 return page.content","import wikipedia

def get_wiki_page(query):
 try:
 page = wiki",Incomplete Answer,String Manipulation
Write an Algorithm to sort an array of integers using the insertion sort technique in Python,"[9, 3, 4, 2, 6, 7]","def insertion_sort(arr): 
 for i in range(1, len(arr)): 
 key = arr[i] 
 j = i-1
 while j>=0 and key < arr[j] : 
 arr[j+1] = arr[j] 
 j -= 1
 arr[j+1] = key 
return arr 
  
arr = [9, 3, 4, 2, 6, 7]
answer = insertion_sort(arr)
print(answer) # [2, 3, 4, 6, 7, 9]","def insertion_sort(arr): 
 for i in range(1, len(arr)): 
 key = arr[i] 
 j = i-1
 while j>=0 and key < arr[j] : 
 arr[j+1] = arr[j",Incomplete Answer,String Manipulation
Develop a function in Python to normalize a string.,,"import string

def normalize_string(string):
    normalized_string = string.lower().strip().translate(str.maketrans('', '', string.punctuation))
    return normalized_string","import string

def normalize_string(string):
normalized_string = string.lower().strip().translate(str.maketrans('', '', string.punctuation))
return normalized_string",Syntax Error,OOP
Suggest a function to round a float number to two decimal places in Python.,,"def round_to_two_decimals(x):
    return round(x, 2)",def round_to_two_decimals(,Incomplete Answer,Recursion
Create a python program to remove all characters in a string that occur more than once,"string = ""aaabbcdefg""","def remove_duplicates(string):
    unique_chars = """"
    for ch in string:
        if ch not in unique_chars:
            unique_chars += ch

    return unique_chars

remove_duplicates(""aaabbcdefg"") # returns ""bcdefg""","def remove_duplicates(string):
    unique_chars = """"
    for ch in string:
        if ch not in unique_chars:
            unique_chars += ch

    return unique_chars

remove_duplicates(""aaabbcdefg"") # returns ""bcdefg""",Syntax Error,OOP
Write a python function to find remainder of two numbers.,,"def find(n,m):
  r = n%m
  return (r)","def find(n,m):
  r = n%m
  return (r)",Syntax Error,Recursion
Build an HTTP API endpoint in Python using Flask that allows a user to add two numbers and returns the sum of the two numbers.,,"from flask import Flask, request
app = Flask(__name__)
 
@app.route('/add', methods=['POST'])
def add():
    num1 = request.json['num1']
    num2 = request.json['num2']
    sum = num1 + num2
    return {'sum': sum}

if __name__ == '__main__':
    app.run(debug=True)","from flask import Flask, request
app = Flask(__name__)
 
@app.route('/add', methods=['POST'])
def add():
    num1 = request.json['num1']
    num2 = request.json['num2']
    sum = num1 + num2
    return {'sum': sum}

if __name__ == '__main__':
    app.run(debug=True)",correct,OOP
Create an algorithm using Python to generate random passwords.,Number of characters: 10,"import random
 
def generate_password(length):
    # Generate a random password that is length characters long
    chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
    password = ''
    for _ in range(length):
        password += random.choice(chars)
    return password
 
generated_password = generate_password(10)
print(generated_password)","import random
 
def generate_password(length):
    # Generate a random password that is length characters long
    chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
    password = ''
    for _ in range(length):
        password += random.choice(chars)
    return password
 
generated_password = generate_password(10)
print(generated_password)",correct,Recursion
"Create a python object to store a students name, roll number, and courses",,"class Student:
  def __init__(self, name, roll_number, courses):
    self.name = name 
    self.roll_number = roll_number 
    self.courses = courses","class Student:
  def __init__(self, name, roll_number, courses):
    self.name = name 
    self.roll_number = roll_number 
    self.courses = courses",correct,String Manipulation
Write a python program to find the smallest element in an array.,"arr = [4, 6, 2, 7, 5]","def find_smallest(arr):
    smallest = arr[0]
    for i in range(1, len(arr)):
        if arr[i] < smallest:
            smallest = arr[i]
    return smallest","def find_smallest(arr):
    smallest = arr[0]
    for i in range(1, len(arr)):
",Incomplete Answer,OOP
"Given a list of numbers, write a Python program to find the number which occurs the most in the list","list1 = [1, 2, 3, 4, 4, 3, 3, 3]","def most_frequent(list1): 
	return max(set(list1), key = list1.count) 

list1 = [1, 2, 3, 4, 4, 3, 3, 3]
print(""Number that occurs the most in the list is : "", most_frequent(list1))","def most_frequent(list1): 
	return max(set(list1), key = list1.count) 

list1 = [1, 2, 3, ",Incomplete Answer,Recursion
Design a Graphical User Interface (GUI) in Python with a label and a button.,,"import tkinter as tk

root = tk.Tk()
root.title('My App')

# Create a label
label = tk.Label(root, text=""Hello, World!"")
label.pack()

# Create a button
button = tk.Button(root, text = ""Click Me!"")
button.pack()

root.mainloop()","import tkinter as tk

root = tk.Tk()
root.title('My App')

# Create a label
label = tk.Label(root, text=""Hello, World!"")
label.pack()

# Create a button
button = tk.Button(root, text = ""Click Me!"")
button.pack()

root.mainloop()",correct,String Manipulation
Write a code snippet in Python to print out the contents of a given dictionary.,"{""apple"": 1, ""banana"": 2, ""carrot"": 3}","dictionary = {""apple"": 1, ""banana"": 2, ""carrot"": 3}

for item in dictionary:
  print(""{}: {}"".format(item, dictionary[item]))","dictionary = {""apple"" 1, ""banana"" 2, ""carrot"" 3}

for item in dictionary
  print(""{} {}"".format(item, dictionary[item]))",Syntax Error,Loops
Generate a Python program to solve the Tower of Hanoi puzzle.,,"def hanoi(n, source, helper, target):
    if n > 0:
        # move tower of size n - 1 to helper:
        hanoi(n - 1, source, target, helper)
        # move disk from source peg to target peg
        if source:
            target.append(source.pop())
        # move tower of size n-1 from helper to target
        hanoi(n - 1, helper, source, target)","def hanoi(n, source, helper, target):
    if n > 0:
        # move tower of size n - 1 to helper:
        hanoi(n - 1, source, target, helper)
        # move disk from source ",Incomplete Answer,Loops
Modify the following python code to print the count of values greater than 5.,"data = [1,2,3,4,5,6,7,8,9]","data = [1,2,3,4,5,6,7,8,9]

count = 0
for value in data:
  if value > 5:
    count += 1

print(count)","data = [1,2,3,4,5,6,7,8,9]

count = 0
for value in data:
  if value > 5:
    count += 1

pritn(count)",Syntax Error,String Manipulation
Edit a given Python program in order to make it run faster.,"# This function calculates the sum of the numbers 0 to n.
def my_sum(n):
  s = 0
  for i in range(n+1):
    s += i
  return s","# This function calculates the sum of the numbers 0 to n.
def my_sum(n):
  if n <= 1:
    return n
  else: 
    return n + my_sum(n-1)","# This function calculates the sum of the numbers 0 to n.
def my_sum(n:
  if n <= 1:
    return n
  else: 
    return n + my_sum(n-1",Syntax Error,OOP
Create a function in Python that takes a list of strings and replaces each string with its length.,"[""apple"", ""banana"", ""mango""]","def length_strings(string_list):
  new_list = []
  for string in string_list:
    new_list.append(len(string))
  return new_list

print(length_strings([""apple"", ""banana"", ""mango""])) # [5, 6, 5]","def length_strings(string_list):
  new_list = []
  for string in string_list:
    new_list.append(len(string))
  return new_list

print(length_strings([""apple"", ""banana"", ""mango""])) # [5, 6, 5]",correct,Recursion
Compile a list of data types for Python,,"In Python, there are various data types such as strings, numbers (integer, float, complex), booleans, lists, tuples, dictionaries and sets.","In Python, there are various data types such as strings, numbers (int",Incomplete Answer,OOP
Develop a Python script to delete all non-alphabetic characters in a string.,String with non-alphabetic characters- '123hello!?,"def remove_non_alpha(string):
    new_string = """"
    for char in string:
        if char.isalpha():
            new_string += char
    return new_string","def remove_non_alpha(string):
    new_string = """"
    for char in string:
  ",Incomplete Answer,OOP
Design a program to reverse a given string.,Python,"def reverse_string(input_string):
    reversed_string = """"
    for i in range(len(input_string)-1, -1, -1):
        reversed_string += input_string[i]
    return reversed_string

input_string = ""Python""

print(reverse_string(input_string))","def reverse_string(input_string):
    reversed_string = """"
    for i in range(len(input_string)-1, -1, -1):
        reversed_string += input_string[i]
    return reversed_string

input_string = ""Python""

print(reverse_string(input_string))",correct,String Manipulation
"Given a list of integers, write a Python program to compute the maximum difference between any two numbers of the list?","[4, 8, 2, 10, 6]","def max_difference(numbers):
 max_diff = 0
 for i in range(len(numbers)-1):
 for j in range(i+1, len(numbers)):
 cur_diff = abs(numbers[i] - numbers[j])
 if cur_diff > max_diff:
 max_diff = cur_diff
 return max_diff

result = max_difference([4, 8, 2, 10, 6])
print(result)","def max_difference(numbers):
 max_diff = 0
 for i in range(len(numbers)-1):
 for j in range(i+1, len(numbers)):
 cur_diff = abs(numbers[i] - numbers[j])
 if cur_diff > max_diff:
 max_diff = cur_diff
 return max_diff

result = max_difference([4, 8, 2, 10, 6])
pritn(result)",Syntax Error,String Manipulation
Develop Python code to print all possible permutations of a given string.,"string = ""abc""","def permutations(string): 
    if string == """": 
        return [''] 
          
    prev_list = permutations(string[1:]) 
    next_list = [] 
    char = string[0] 
    for word in prev_list: 
        for j in range(len(word) + 1): 
            next_list.append(word[:j] + char + word[j:]) 
    return next_list 

string = ""abc""
perm_list = permutations(string) 
print (perm_list)","def permutations(string): 
if string == """": 
    return [''] 
      
prev_list = permutations(string[1:]) 
next_list = [] 
char = string[0] 
for word in prev_list: 
    for j in range(len(word) + 1): 
        next_list.append(word[:j] + char + word[j:]) 
return next_list 

string = ""abc""
perm_list = permutations(string) 
print (perm_list)",Syntax Error,Recursion
Create a set in Python to store the elements of an array.,,"numbers = [1, 2, 3, 4, 5, 6]
numbers_set = set(numbers)","numbers = [1, 2, 3, 4, 5, 6]
numbers_set = set(numbers)",Syntax Error,Recursion
Can you create a Python function that returns the sum of all the elements in a given list?,"[1, 2, 3, 4, 5]","def list_sum(list):
   sum = 0
   for el in list:
       sum += el
   return sum","def list_sum(list):
   sum = 0
   for el in list:
       sum += el
   return sum",correct,String Manipulation
Write a function to calculate the perimeter of a regular polygon.,,"from math import tan, pi
def perimeter_polygon(s,l):
  perimeter = s*l
  return perimeter","from math import tan, pi
def perimeter_polygon(s,l):
  perimeter = s*l
  return perimeter",correct,String Manipulation
Create a Python program to display the prime numbers between 1 and 100.,,"for num in range(2,101):
for i in range(2,num):
 if (num % i) == 0:
 break
 else:
 print(num)","for num in range(2,101):
for i in range(2,num)",Incomplete Answer,File I/O
Create a python program to insert a new element into a given list in the correct order,"Input List: [1, 2, 3, 4]
Element: 0","def insert_element(array, element):
    if element >= array[len(array)-1]:
        array.append(element)
    else:
        for i in range(len(array)):
            if element < array[i]:
                array.insert(i, element)
                break
    return array","def insert_element(array, element):
    if element >= array[len(array)-1]:
        array.append(element)
    else:
        for i in range(len(array)):
            if element < array[i]:
                array.insert(i, element)
                break
    return array",correct,String Manipulation
Write a Python function that takes two strings as arguments and returns true if the second string could be obtained by rotating the first string.,"'waterbottle', 'erbottlewat'","def is_rotation(str1, str2):
    if len(str1) == len(str2) and len(str1) > 0:
        return (str1 + str1).find(str2) != -1
    return False
    
is_rotation('waterbottle', 'erbottlewat')","def is_rotation(str1, str2):
    if len(str1) == len(str2) and len(str1) > 0:
        return ",Incomplete Answer,File I/O
Optimize a Python function for maximum performance.,"def reverse_string(s): 
    return s[::-1]","def reverse_string(s): 
    start = 0 
    end = len(s) 
    string="""" 

    while end > 0: 
        string += s[end-1] 
        end -= 1

    return string","def reverse_string(s): 
    start = 0 
    end = len(s) 
    string="""" 

    while end > 0: 
        string += s[end-1] 
        end -= 1

    return string",correct,Loops
Write a script in Python to sort a list of words alphabetically.,"[python, java, c, sql, ruby]","def sort_words(words):
    '''
    Function to sort a list of words alphabetically
    
    Parameters
    words: list of strings
    
    Returns
    sorted list of strings
    '''
    sorted_list = sorted(words)
    return sorted_list","def sort_words(words):
'''
Function to sort a list of words alphabetically

Parameters
words: list of strings

Returns
sorted list of strings
'''
sorted_list = sorted(words)
return sorted_list",Syntax Error,File I/O
Write a python script to sort the given array,"[10, 15, 7, 8, 12]","arr = [10, 15, 7, 8, 12]
arr.sort()
print(arr)","arr = [10, 15, 7, 8, 12",Incomplete Answer,Loops
Generate a code snippet in Python to convert a string with the following format to a dictionary. (name1=123&name2=456&name3=789).,name1=123&name2=456&name3=789,"inp = ""name1=123&name2=456&name3=789""
kv = inp.split(""&"")
d = {}
for i in kv:
    k,v = i.split(""="")
    d[k] = v

print(d)","inp = ""name1=123&name2=456&name3=789""
kv = inp.split(""&"")
d =",Incomplete Answer,OOP
Create a class in Python 3 which describes a rectangle in a two-dimensional plane.,,"class Rectangle:
    
    def __init__(self, length, width):
        self.length = length
        self.width = width
        
    def get_area(self):
        return self.length * self.width
    
    def get_perimeter(self):
        return 2*(self.length + self.width)","class Rectangle:
    
    def __init__(self, length, width):
        self.length = length
        self.width = width
        
    def get_area(self):
        return self.length * self.width
    
    def get_perimeter(self):
        return 2*(self.length + self.width)",correct,OOP
Generate a valid Python script which calculates the median of a given  list of numbers.,"my_list = [1, 8, 4, 9, 5]","def median(my_list):
  my_list.sort()
  if len(my_list) % 2 == 0:
    return (my_list[(len(my_list) // 2) - 1] + my_list[(len(my_list)) // 2]) / 2
  return my_list[len(my_list) // 2]","def median(my_list):
  my_list.sort()
  if len(my_list) % 2 == 0:
    return (my_list[(len(my_list) // 2) - 1] + my_list[(len(my_list)) // 2]) / 2
  return my_list[len(my_list) // 2]",correct,Recursion
Create a Python program to print out the numbers in reverse order from 100 to 1.,,"for i in range (100,0,-1):
    print(i)","for i in range (100,0,-1:
    print(i",Syntax Error,Recursion
Design a Python function to sort a list of strings by their first character alphabetically.,"[""yesterday"", ""today"", ""tomorrow""]","def sort_list_by_first_char(strings):
    return sorted(strings, key=lambda s: s[0])

strings = [""yesterday"", ""today"", ""tomorrow""]
print(sort_list_by_first_char(strings))","def sort_list_by_first_char(strings:
    return sorted(strings, key=lambda s: s[0]

strings = [""yesterday"", ""today"", ""tomorrow""]
print(sort_list_by_first_char(strings",Syntax Error,File I/O
Create a function in Python that will take an array of integers and return the minimum value.,"[3, 9, 0, 7, 88]","def find_min(arr):
min = arr[0]
for num in arr:
 if num < min:
 min = num
return min

# Test
arr = [3, 9, 0, 7, 88]
min_val = find_min(arr)
print(""Minimum value is:"", min_val)  # Output: Minimum value is: 0","def find_min(arr):
min = arr[0]
for num in arr:
 if num < min:
 min = num
return min

# Test
arr = [3, 9, 0, 7, 88]
min_val = find_min(arr)
print(""Minimum value is:"", min_val)  # Output: Minimum value is: 0",correct,String Manipulation
Create a basic Python script that takes a user's input and calculates the sum of all digits in the input.,,"# sum of all digits
def sum_of_digits(number):
 total = 0
 while number > 0:
 digit = number % 10
 total += digit
 number = number // 10
 
 return total

# get user input
number = int(input(""Enter a number: ""))

# calculate the sum
result = sum_of_digits(number)

# print the result
print(""Sum of all digits:"", result)","# sum of all digits
def sum_of_digits(number):
 total = 0
 while number > 0:
 digit = number % 10
 total += digit
 number = number // 10
 
 return total

# get user input
number = int(input(""Enter a number: ""))

# calculate the sum
result = sum_of_digits(number)

# print the result
print(""Sum of all digits:"", result)",correct,File I/O
Sort a given list of integers in Python in ascending order.,"list_of_integers = [5, 8, 1, 4, 0, 2, 7]",list_of_integers.sort(),list_of_integers.sort(),correct,File I/O
Write a function to calculate volume of a tetrahedron.,,"import math
def volume_tetrahedron(num):
	volume = (num ** 3 / (6 * math.sqrt(2)))	
	return round(volume, 2)","import math
def volume_tetrahedron(num):
	volume = (num ** 3 / (6 * math.sqrt(2)))	
	return round(volume, 2)",correct,String Manipulation
Write a valid python statement to convert a dict to a list,,mylist = list(mydict.items()),mylist = list(mydict.items()),Syntax Error,Loops
Answer a question using Python.,Question: What is the sum of all numbers divisible by 25 between 500 and 1000?,"int sum = 0
 
for i in range(500, 1000):
  if(i % 25 == 0):
    sum += i
 
print(sum)","int sum = 0
 
for i in range(500, 1000):
  if(i % 25 == 0):
    sum += i
 
print(sum)",correct,OOP
Write a function to convert the given tuple to a key-value dictionary using adjacent elements.,,"def tuple_to_dict(test_tup):
  res = dict(test_tup[idx : idx + 2] for idx in range(0, len(test_tup), 2))
  return (res) ","def tuple_to_dict(test_tup):
  res = dict(test_tup[idx : idx",Incomplete Answer,OOP
Create a Python dictionary to store data about a student.,,"student_data = {
    'name': 'John Smith',
    'year': 'Freshman',
    'gpa': 3.25,
    'courses': ['math', 'english', 'Computer Science', 'Statistics'],
    'extracurricular': ['Chess Club', 'Student Government', 'Debate Team']
}","student_data = {
    'name': 'John Smith',
    'year': 'Freshman',
    'gpa': 3.25,
    'courses': ['math', 'english', 'Computer Science', 'Statistics'],
    'extracurricular': ['Chess Club', 'Student Government', 'Debate Team']
}",correct,OOP
Create a Python function that takes a list of strings as input and returns a dictionary of words with their frequency counts.,"words = [""apple"", ""orange"", ""apple"", ""orange"", ""pear""]","def word_count(words):
    counter = {}
    for word in words:
        if word not in counter:
            counter[word] = 0
        counter[word] += 1
    return counter
    
words = [""apple"", ""orange"", ""apple"", ""orange"", ""pear""]
word_count(words)
""""""
{'apple': 2, 'orange': 2, 'pear': 1}
""""""","def word_count(words):
    counter = {}
    for word in words:
        if word not in counter:
            counter[word] = 0
        counter[word]",Incomplete Answer,Recursion
Create a Python program which prints the top three elements in a given list,"[10, 4, 45, 34, 99, 24, 10]","def top_three(list):
    sorted_list = sorted(list, reverse = True) 
    return sorted_list[:3]","def top_three(list):
    sorted_list = sorted(list, reverse = True) 
    return sorted_list[:3]",correct,String Manipulation
Create a Python function to score the similarity between two strings.,,"def score_similarity(str1, str2):
    n = len(str1)
    m = len(str2)
    dp = [[0 for _ in range(m + 1)] for _ in range(n + 1)]

    for i in range(1, n + 1):
        for j in range(1, m + 1):
            if str1[i - 1] == str2[j - 1]:
                dp[i][j] = dp[i - 1][j - 1] + 1
            else:
                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])

    return dp[n][m] / (n + m)","def score_similarity(str1, str2):
    n = len(str1)
    m = len(str2)
    dp = [[0 for _ in range(m + 1)] for _ in range(n + 1)]

    for i in range(1, n + 1):
        for j in range(1, m + 1):
            if str1[i - 1] == str2[j - 1]:
                dp[i][j] = dp[i - 1][j - 1] + 1
            else:
                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])

    return dp[n][m] / (n + m)",correct,Loops
Generate code to implement quick sort in Python.,,"def quicksort(arr):
 if len(arr) <= 1:
 return arr
 pivot = arr[len(arr) // 2]
 left = [x for x in arr if x < pivot]
 middle = [x for x in arr if x == pivot]
 right = [x for x in arr if x > pivot]
 
return quicksort(left) + middle + quicksort(right)","def quicksort(arr)
 if len(arr) <= 1
 return arr
 pivot = arr[len(arr) // 2]
 left = [x for x in arr if x < pivot]
 middle = [x for x in arr if x == pivot]
 right = [x for x in arr if x > pivot]
 
return quicksort(left) + middle + quicksort(right)",Syntax Error,String Manipulation
Upgrade the following code so that it runs on Python 3,"#This code runs on python 2
print ""Hello World!""","print(""Hello World!"")","print(""Hel",Incomplete Answer,String Manipulation
Write a Python program to create a dictionary mapping letters to numbers and numbers to letters.,,"letters_numbers = {
 'a': 1, 'b': 2, 'c': 3,  'd': 4, 'e': 5,
 'f': 6, 'g': 7, 'h': 8,  'i': 9, 'j': 10,
 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15,
 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20,
 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26
}
numbers_letters = dict(zip(letters_numbers.values(), letters_numbers.keys()))
print(numbers_letters)","letters_numbers = {
 'a': 1, 'b': 2, 'c': 3,  'd': 4, 'e': 5,
 'f': 6, 'g': 7, 'h': 8,  'i': 9, 'j': 10,
 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15,
 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20,
 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26
}
numbers_letters = dict(zip(letters_numbers.values(), letters_numbers.keys()))
print(numbers_letters)",correct,File I/O
Create a code generation task to generate a Python program to calculate the sum of a list of numbers.,"nums = [2, 5, 10, 15]","def list_sum(nums): 
    '''This function will take a list as input and return the sum of its elements.'''
    result = 0
    for num in nums:
        result += num
    return result

nums = [2, 5, 10, 15]
print(list_sum(nums))","def list_sum(nums: 
    '''This function will take a list as input and return the sum of its elements.'''
    result = 0
    for num in nums:
        result += num
    return result

nums = [2, 5, 10, 15]
print(list_sum(nums",Syntax Error,Loops
Generate a Python program to find the greatest common divisor (GCD) for two given numbers.,"6, 4","def gcd(number1, number2): 
    if(number2 == 0): 
        return number1 
    return gcd(number2, number1%number2) 

first_num = 6
second_num = 4

print(""The greatest common divisor of 6 and 4 is"", gcd(first_num, second_num))","def gcd(number1, number2): 
    if(number2 == 0): 
        return number1 
    return gcd(number2, number1%number",Incomplete Answer,Recursion
Generate a Python program to identify prime numbers up to a given positive integer.,,"def isPrime(num):
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

n = int(input(""Enter any positive integer: ""))

print(""Prime numbers up to"", n, ""are:"")
for i in range(2, n+1):
    if isPrime(i):
        print(i, end = "" "")","def isPrime(num):
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

n = int(input(""Enter any positive integer: ""))

print(""Prime numbers up to"", n, ""are:"")
for i in range(2, n+1):
    if isPrime(i):
        print(i, end = "" "")",correct,File I/O
Generate a script in Python to run a linear regression model using scikit-learn.,[7 5 3 9 8 4] [7 3 4 6],"import numpy as np
from sklearn.linear_model import LinearRegression

x = np.array([[7,5,3,9,8,4]]).T
y = np.array([7,3,4,6])

model = LinearRegression()
model.fit(x, y)

preds = model.predict(x)

print(f""R-squared score: {model.score(x,y)}"")
print(f""Coefficients: {model.coef_}"")
print(f""Predictions: {preds}"")","import numpy as np
from sklearn.linear_model import LinearRegression

x = np.array([[7,5,3,9,8,4]]).T
y = np.array([7,3,4,6])

model = LinearRegression()
m",Incomplete Answer,String Manipulation
Generate a function to print a Fibonacci series with n steps (including 0) in Python.,,"def printFibo(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        print(a) 
    elif n == 1: 
        print(a,b) 
    else: 
        print(a,b,end="" "") 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
            print(b,end="" "") 

printFibo(10)","def printFibo(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        print(a) 
    elif n == 1: 
        print(a,b) 
    else: 
        print(a,b,end="" "") 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
            print(b,end="" "") 

printFibo(10)",correct,File I/O
Develop a Python program that prints out the nth Fibonacci number.,,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 

print(fibonacci(n))","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        ",Incomplete Answer,OOP
"Create a function in Python that takes a list as input and searches for a number ""x"" and returns the index of it.","[10, 8 , 5, 15], x = 15","def search(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i
    return -1

arr = [10, 8 , 5, 15]
x = 15
print(search(arr, x))","def search(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i
    return -1

arr = [10, 8 , 5, 15]
x = 15
pritn(search(arr, x))",Syntax Error,Loops
"Define and implement a Python class to represent a date object that stores the day, month, and year as separate fields.",,"class Date:
    # Constructor
    def __init__(self, day=1, month=1, year=1990):
        self.day = day
        self.month = month
        self.year = year
    
    # String representation
    def __str__(self):
        return '%02d/%02d/%4d' % (self.day, self.month, self.year)","class Date:
    # Constructor
    def __init__(self, day=1, month=1, year=1990):
        self.day = day
        self.month = month
        self.year = year
    
    # String representation
    def __str__(self):
        return '%02d/%02d/%4d' % (self.day, self.month, self.year)",correct,Loops
"Generate code for a Python for loop that prints ""Hello World"" n times.",Number = 5,"for i in range(5):
 print(""Hello World"")","for i in range(5):
 print(""Hello World"")",correct,Recursion
Write a Python program to search for a specific value in a large array of integers and return the index of the value if found.,"arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
target = 8","def search(arr, target):
 for i in range(len(arr)):
  if arr[i] == target:
   return i
 return -1
  
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
target = 8
index = search(arr, target)
if index != -1:
 print(""Found at index: "" + str(index))
else:
 print(""Not Found"")","def search(arr, target):
 for i in range(len(arr)):
  if arr[i] == target:
   return i
 return -1
  
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
target = 8
index = search(arr, target)
if index != -1:
 print(""Found at index: "" + str(index))
else:
 print(""Not Found"")",correct,Loops
Modify this Python program to compute the sum of all elements in a multi-dimensional array.,"multi_dim_array = [[1,2], [3,4], [15,16]]","def sum_multi_dim_array(multi_dim_array):
    # init sum to 0 
    sum = 0 
  
    # iterate over rows 
    for row in multi_dim_array: 
  
        # iterate over columns 
        for num in row: 
  
            # add number to sum 
            sum += num 
  
    return sum","def sum_multi_dim_array(multi_dim_array):
    # init sum to 0 
    sum = 0 
  
    # iterate over rows 
    for row in multi_dim_array: 
",Incomplete Answer,OOP
"Write a SQL query to find all the articles with a title containing the word ""Python"".",,"SELECT * FROM Articles 
 WHERE title LIKE '%Python%';","SELECT * FROM Articles 
 WHERE title LIKE '%Python%';",correct,Loops
Edit the following code snippet to ensure it meets the Python PEP 8 coding standards.,"def exampleFunction(a,b):
    return a+b","def example_function(a, b):
    return a + b","def example_function(a, b):
    return a + b",Syntax Error,OOP
Compute the output of this Python program.,"def countdown(n):
    if n <= 0:
        print(""Blast off!"")
    else:
        print(n)
        countdown(n-1)

countdown(3)","3
2
1
Blast off!","3
2
1
Bl",Incomplete Answer,OOP
"Generate an algorithm in Python that given a string of words, should check if it is a Palindrome.","""racecar""","def isPalindrome(s):
 s = s.lower()
 
 left = 0
 right = len(s) - 1
 
 while left < right:
 if s[left] != s[right]:
 return False
 left += 1
 right -= 1
 
 return True

s = 'racecar'
isPalindrome = isPalindrome(s)

print(isPalindrome) # Output: True","def isPalindrome(s):
 s = s.lower()
 
 left = 0
 right = len(s) - 1
 
 while left < right:
 if s[left] != s[right]:
 return ",Incomplete Answer,Recursion
Generate a Python function that takes a dictionary as an argument and returns an inverted dictionary.,,"def invert_dictionary(d):
 inverted_d = {}

 for key, value in d.items():
 if value not in inverted_d:
 inverted_d[value] = []
 inverted_d[value].append(key)

 return inverted_d","def invert_dictionary(d):
 inverted_d = {}

 for key, value in d.items():
 if value not ",Incomplete Answer,String Manipulation
Create Python code to edit a given piece of code and make it more efficient.,"def sum_of_squares(arr):
    total = 0
    for i in range(len(arr)):
        for j in range(len(arr)):
            total += arr[i] * arr[j]
    return total","def sum_of_squares(arr):
    total = 0
    for num in arr:
        total += num * num
    return total","def sum_of_squares(arr):
    total = 0
    for num in arr:
        total += num * num
    return total",correct,Recursion
Create a program in Python that prints the following figure with the given number of units.,7,"for row in range(7):
    for col in range(7):
        if (row + col) % 2 == 0:
            print('#', end='')
        else:
            print(' ', end='')
    print()","for row in range(7):
    for col in range(7):
        if (row + col) % 2 == 0:
            print('#', end='')
        else:
            print(' ', end='')
    print()",correct,OOP
Generate a reinforcement learning algorithm.,Design a RL algorithm to solve an environment with a single agent and sparse rewards.,"Create a Python program to implement a reinforcement learning agent that utilizes Q-learning for solving an environment with sparse rewards. The algorithm should keep the learning agent in a continuous loop of taking actions, observing rewards and updating the Q-value function to reach the outcome desired.","Create a Python program to implement a reinforcement learning agent that utilizes Q-learning for solving an environment with sparse rewards. The algorithm should keep the learning agent in a continuous loop of taking actions, observing rewards and updating the Q-value function to reach the outcome desired.",Syntax Error,OOP
"Using the Python language, build a function which takes a list of integers as an argument and returns the sum of those numbers.",,"def sum_list(numbers):
  summed_value = 0
  for num in numbers:
    summed_value += num
  return summed_value","def sum_list(numbers):
  summed_value = 0
  for num in numbers:
    summed_value += num
  return summed_value",Syntax Error,OOP
"Create a program in Python, which takes two parameters: a list of integers and a number X, and returns true if there are two numbers in the list, such that their sum is equal to X.","list = [1, 3, 7, 4, 5]
X = 12","def two_sum(lst, x):
 for i in range(len(lst)):
  for j in range(i+1, len(lst)):
   if lst[i] + lst[j] == x:
    return True 
 return False

list = [1, 3, 7, 4, 5]
X = 12

two_sum(list, X) # True","def two_sum(lst, x):
 for i in range(len(lst)):
  for j in range(i+1, len(lst)):
   if lst[i] + lst[j] == x:
return True 
 return False

list = [1, 3, 7, 4, 5]
X = 12

two_sum(list, X) # True",Syntax Error,OOP
Create a function in Python that takes a string of any length and capitalizes every word.,'hello world',"def capitalize_words(string):
 words = string.split(' ')
 capitalized = [word.capitalize() for word in words]
 return ' '.join(capitalized)

# Usage

print(capitalize_words('hello world')) # Hello World","def capitalize_words(string):
 words = string.split(' ')
 capitalized = [word.capitalize() for word in words]
 return ' '.join(capitalized)

# Usage

print(capitalize_words('hello world')) # Hello World",correct,Loops
Design a Python module that prints out a table of squares for input ranging from 0 to 10.,,"def print_table():
    print("" x | x^2"")
    print(""-----------"")

    for i in range(11):
        answer = i * i
        print(f"" {i} | {answer}"")

print_table()","def print_table():
    print("" x | x^2"")
    print(""-----------"")

    for i in r",Incomplete Answer,Loops
Create a Python program that reads two dates and computes the number of days between them.,"date_1 = '2020-01-01'
date_2 = '2020-01-30'","from datetime import date

date_1 = date(2020, 1, 1)
date_2 = date(2020, 1, 30)

diff = date_2 - date_1
print('There are {} days between the two dates.'.format(diff.days))","from datetime import date

date_1 = date(2020, 1, 1)
date_2 = date(2020, 1, 30)

diff",Incomplete Answer,Recursion
Create a program in Python that reads a text and then prints out the longest word in the text.,This is an example of a sample text.,"def find_longest_word(text):
  words = text.split("" "")
  longest = """"
  for word in words:
    if len(word) > len(longest):
      longest = word
  
  return longest

if __name__ == ""__main__"":
  text = ""This is an example of a sample text.""
  print(find_longest_word(text))","def find_longest_word(text):
  words = text.split("" "")
  longest = """"
  for word in words:
    if len(word) > len(longest):
      longest = word
  
  return longest

if __name__ == ""__main__"":
  text = ""This is an example of a sample text.""
  print(find_longest_word(text))",correct,String Manipulation
Develop an algorithm to detect and fix Python syntax errors in a given code snippet.,"def test ():
    x = 5
    y = 3 
    z","def test():
    x = 5
    y = 3
    try:
        z
    except NameError:
        print(""NameError: Name 'z' is not defined"")","def test():
x = 5
y = 3
try:
    z
except NameError:
    print(""NameError: Name 'z' is not defined"")",Syntax Error,OOP
Create a Python program that takes a sentence as an input and replaces all the blank spaces with hyphens.,The quick brown fox,"def replace_spaces(str):
 return str.replace("" "", ""-"")
 
print(replace_spaces(""The quick brown fox""))  # Result: The-quick-brown-fox","def replace_spaces(str):
 return str.replace("" "", ""-"")
 
print(rep",Incomplete Answer,String Manipulation
"Create a Python dictionary with three keys named ""Name"", ""Address"" and ""Phone"".","Name = 'John';
Address = '212 Smith Street';
Phone = '732-123-4567';","info = {
 'Name':Name,
 'Address':Address,
 'Phone':Phone
}","info = {
 'Name':Name,
 'Addr",Incomplete Answer,Recursion
Implement a Python program that takes in a string and prints out the ASCII codes for each character in the string.,"""Hello""","def get_ascii_codes(string):
    ascii_codes = [] 
  
    for char in string: 
        ascii_codes.append(ord(char)) 
  
    return ascii_codes 


print(get_ascii_codes(""Hello""))

# Output: [72, 101, 108, 108, 111]","def get_ascii_codes(string):
    ascii_codes = [] 
  
    for char in string: 
        ascii_codes.append(ord(char)) 
  
    return ascii_codes 


print(get_ascii_codes(""Hello""))

# Output: [72, 101, 108, 108, 111]",correct,File I/O
Modify the following Python code to detect and remove punctuation from a given string.,"my_string = 'Hello, world!'","my_string = 'Hello, world!'
punctuation = '!,.'
for char in my_string: 
 if char in punctuation: 
 my_string = my_string.replace(char, """")

print(my_string)
# Output: Hello world","my_string = 'Hello, world!'
punctuation = '!,.'
for char in my_string: 
 if char in punct",Incomplete Answer,Recursion
Load a dataset in CSV format into a Python pandas DataFrame.,"# dataset.csv
ColA, ColB, ColC
1, 2, 3
4, 5, 6
7, 8, 9","import pandas as pd

data = pd.read_csv('dataset.csv')","import pandas as pd

data =",Incomplete Answer,String Manipulation
Generate a Python program to optimize a low-cost route between two points,startX = 0 and endX = 10,"def optimize_route(startX, endX):
    best_route = [startX]
    next_x = startX

    while next_x < endX:
        best_cost = float(""inf"")
        for x in range(next_x+1, endX+1):
            cost = abs(x - next_x)
            if cost < best_cost:
                best_cost = cost
                next_x = x
        best_route.append(next_x)

    return best_route","def optimize_route(startX, endX):
    best_route = [startX]
    next_x = startX

    while next_x < endX:
        best_cost = float(""inf"")
        for x in range(next_x+1, endX+1):
 ",Incomplete Answer,String Manipulation
Write a code snippet in Python to extract a substring from a given string.,,"def extract_substring(string):
  return string[2:5]",def extract_substring(str,Incomplete Answer,Loops
"Given a list of strings, write a Python program to search for a string and return its index.","myList = [""a"", ""b"", ""c"", ""d"", ""e""]","def find_string(search_string, myList):
    for index, s in enumerate(myList):
        if s == search_string:
            return index","def find_string(search_string, myList):
    for index, s in enumerate(myList):
        if s == search_string:
            return index",correct,OOP
Write a Python script that reads in a user-defined data set and prints the top-5 highest values contained in the data set.,"[100.0, 74.0, 56.2, 45.5, 27.8, 21.0, 8.2, 4.1]","data = [100.0, 74.0, 56.2, 45.5, 27.8, 21.0, 8.2, 4.1]

def get_top_five_values(data):
    sorted_data = sorted(data, reverse=True)
    top_five_values = sorted_data[:5]
    return top_five_values

top_five_values = get_top_five_values(data)
print(top_five_values)","data = [100.0, 74.0, 56.2, 45.5, 27.8, 21.0, 8.2, 4.1]

def get_top_five_values(data):
    sorted_data = sorted(data, reverse=True)
",Incomplete Answer,OOP
Create a Python script to generate all possible 3-letter words from a 4-letter alphabet.,"alphabet = ['a', 'b', 'c', 'd']","import itertools

alphabet = ['a', 'b', 'c', 'd']
words = [''.join(i) for i in itertools.combinations_with_replacement(alphabet, 3)]
print(words)","import itertools

alphabet = ['a', 'b', 'c', 'd']
words = [''.join(i) for i in itertools.combinations_with_replacement(alphabet, 3)]
print(words)",correct,Loops
Create a function in Python to remove punctuation from a text.,"text = “Welcome! My name is Mike, and I’m here to help you.”","import string

def remove_punctuation(text):
    punct_chars = string.punctuation
    no_punct = """"
    for char in text:
        if char not in punct_chars:
            no_punct += char
    return no_punct

print(remove_punctuation(""Welcome! My name is Mike, and I’m here to help you.”""))
# Output: Welcome My name is Mike and Im here to help you","import string

def remove_punctuation(text):
    punct_chars = string.punctuation
    no_punct = """"
    for char in text:
        if char not in punct_chars:
            no_",Incomplete Answer,File I/O
Write a Python function that takes a list as an argument and returns the second largest element in the list.,"lst = [1, 14, 8, 5]","def second_largest(lst):
    sorted_list = sorted(lst)
    return sorted_list[-2]

result = second_largest(lst)
print(result)","def second_largest(lst):
    sorted_list = sorted(lst)
    return sorted_list[-2]

result = second_largest(lst)
print(name, result)",Syntax Error,Loops
"Design a web API in Python, which returns the average of a list of numbers.",,"from flask import Flask, jsonify

app = Flask(__name__)

@app.route(""/average"", methods=[""POST""])
def get_average():
    list_of_numbers = request.get_json()
    average = sum(list_of_numbers) / len(list_of_numbers)

    return jsonify(average)","from flask import Flask, jsonify

app = Flask(__name__)

@app.route(""/average"", methods=[""POST""])
def get_average():
    l",Incomplete Answer,String Manipulation
Create an algorithm in Python to sort a sequence of numbers in nondecreasing order.,"[1, 3, 5, 4, 2, 0, 9]","def insertion_sort(seq):
    for i in range(1, len(seq)):
        j = i-1
        key = seq[i]
        while (seq[j] > key) and (j >= 0):
           seq[j+1] = seq[j]
           j -= 1
        seq[j+1] = key
   
 
seq = [1, 3, 5, 4, 2, 0, 9]
insertion_sort(seq)
print(seq)

# Output: [0, 1, 2, 3, 4, 5, 9]","def insertion_sort(seq):
    for i in range(1, len(seq)):
        j = i-1
        key = seq[i]
        while (seq[j] > key) and (j >= 0):
           seq[j+1] = seq[j]
           j -= 1
        seq[j+1] = key
   
 
seq = [1, 3, 5, 4, 2, 0, 9]
insertion_sort(seq)
print(seq)

# Output: [0, 1, 2, 3, 4, 5, 9]",correct,String Manipulation
Generate a Python program to print the elements of a given array in reverse order.,"arr = [3, 7, 2, 5]","def print_reverse(arr):
    for i in range(len(arr)-1, -1, -1):
        print(arr[i])","def print_reverse(arr):
    for i in range",Incomplete Answer,File I/O
Write a Python function to calculate the number of possible permutations for a given input array.,"[2, 1, 3]","from math import factorial 
  
def calculate_permutations(arr): 
    n = len(arr) 
    return factorial(n) 
  
result = calculate_permutations([2, 1, 3])
print(result)","from math import factorial 
  
def calculate_permutations(arr): 
    n = len(arr) 
",Incomplete Answer,String Manipulation
Create a python script to group values according to given conditions.,"group1 = [1, 2, 3, 4] 
group2 = [5, 6, 7, 8] 
condition = lambda x: x > 5","group1 = [1, 2, 3, 4] 
group2 = [5, 6, 7, 8] 
condition = lambda x: x > 5

group_1 = list(filter(condition, group1))
group_2 = list(filter(condition, group2))

print(group_1)
print(group_2)","group1 = [1, 2, 3, 4] 
group2 = [5, 6, 7, 8] 
condition = lambda x: x > 5

group_1 = list(filter(condition, group1))
group_2 = list(filter(condition, group2))

print(group_1)
print(group_2)",correct,Recursion
Create a simple Python script that logs the current date and time when run.,,"import datetime

print(f'Current Date and Time: {datetime.datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")}')","import datetime

print(f'Current Date and Time {datetime.datetime.now().strftime(""%Y-%m-%d %H%M%S"")}')",Syntax Error,File I/O
Compose a Python program that takes a list of strings and checks if each string length is 2 or more.,"['dog', 'cat', 'mouse', 'snake', 'python', 'go']","def isStringLengthMoreThanTwo(list): 
    new_list = [] 
  
    for string in list:
        if len(string) >= 2: 
            new_list.append(string) 
     
    return new_list
  
# Driver Code 
list = ['dog', 'cat', 'mouse', 'snake', 'python', 'go']
print(isStringLengthMoreThanTwo(list))","def isStringLengthMoreThanTwo(list): 
    new_list = [] 
  
    for string in list:
        if len(string) >= 2: 
            new_list.append(string) 
     
    return new_list
  
# Driver Code 
list = ['dog', 'cat', 'mouse', 'snake', 'python', 'go']
print(isStringLengthMoreThanTwo(list))",correct,Loops
Create a Python program that takes a string and returns a new string with the first letter of each word capitalized.,"""my name is john""","def capitalize_words(string): 
    words = string.split(' ') 
    capitalized_words = [word.capitalize() for word in words] 
    return ' '.join(capitalized_words)","def capitalize_words(string): 
    words = string.split(' ') 
    capitalized_words = [word.capitalize() for word in words] 
    return ' '.join(capitalized_words)",correct,Loops
Create a Python program to generate unique coupon codes with a given length and character set.,"length = 8
characters = '0123456789ABCDEF'","import random

def generate_coupon(length, characters):
 coupon_code = ''
 for i in range(length):
  coupon_code += random.choice(characters)
 return coupon_code

coupon_code = generate_coupon(8, '0123456789ABCDEF')
print(coupon_code)","import random

def generate_coupon(length, characters):
 coupon_code = ''
 for i in range(length):
  coupon_code += random.choice(characters)
 return coupon_code

coupon_code = generate_coupon(8, '0123456789ABCDEF')
print(coupon_code)",correct,Recursion
Python code: generate a function to convert a decimal number to a binary number.,,"def decToBin(n):
    binString = """"
    while n > 0:
        binary = n % 2
        binString = str(binary) + binString
        n = n//2
 
    return binString
  
# Driver Code 
n = int(input(""Enter a number: ""))
  
result = decToBin(n)
print(""The binary representation is "", result)","def decToBin(n):
    binString = """"
    while n > 0:
        binary = n % 2
        binString = str(binary) + binString
        n = n//2
 
  ",Incomplete Answer,OOP
Create a game in Python based on personal preferences,,"Create a game in Python that involves the user's personal preferences. The game should allow the user to input their interests, goals, and preferences to produce a dynamic and personalised experience. The game should use a combination of text, graphics and sounds to create an engaging and immersive experience.","Create a game in Python that involves the user's personal preferences. The game should allow the user to input their interests, goals, and preferences to produce a dynamic and personalised experience. The game should use a combination of text, graphics and sounds to create an engaging and immersive experience.",correct,File I/O
Write a Python program for searching for a particular item in a list.,"[1, 5, 4, 6, 9, 10], item = 6","def search(input_list, item):
  for i in range(len(input_list)):
    if item == input_list[i]:
      return i
  
  return -1

if __name__ == '__main__':
  input_list = [1, 5, 4, 6, 9, 10]
  item = 6
  result = search(input_list, item)
  print(result)","def search(input_list, item):
  for i in range(len(input_list)):
    if item == input_list[i]:
      return i
  
  return -1
",Incomplete Answer,String Manipulation
Create a script to send an email,,"import smtplib

sender = ‘sender@example.com’
receivers = ‘receiver@example.com’

message = “””
Subject: Sending Email using Python

This is a test e-mail message.
”””

try:
   smtpObj = smtplib.SMTP(‘localhost’)
   smtpObj.sendmail(sender, receivers, message)         
   print(“Successfully sent email”)
except SMTPException:
   print(“Error: unable to send email”)","import smtplib

sender = ‘sender@example.com’
receivers = ‘receiver@example.com’

message = “””
Subject: Sending Email using Python

This is a test e-mail message.
”””

try:
   smtpObj = smtplib.SMTP(‘localhost’)
   smtpObj.sendmail(sender, receivers, message)         
   print(“Successfully sent email”)
except SMTPException:
   print(“Error: unable to send email”)",correct,File I/O
Create a Python class to store multiple objects in a dictionary?,,"class MultiObjectDict(object):
    def __init__(self):
        self.data = {}

    def add(self, key, value):
        try:
            self.data[key].append(value)
        except KeyError:
            self.data[key] = [value]

    def get(self, key):
        return self.data.get(key, None)","class MultiObjectDict(object:
    def __init__(self:
        self.data = {}

    def add(self, key, value:
        try:
            self.data[key].append(value
        except KeyError:
            self.data[key] = [value]

    def get(self, key:
        return self.data.get(key, None",Syntax Error,OOP
Generate code to convert a JSON string to a Python dictionary,,"import json

def json_string_to_dict(json_string):
    '''Converts a JSON string to a Python dictionary.'''
    return json.loads(json_string)","import json

def json_string_to_dict(json_string):
    '''Converts a JSON string to a Python dictionary.'''
    return json.loads(json_string)",correct,Loops
Construct a Python program to add two matrices.,"[[1,4,7], [2,5,8], [3,6,9]]","def add_matrix(m1, m2):
    result = [[0] * len(m1[0]) for i in range(len(m1))]
    
    for i in range(len(m1)):
        for j in range(len(m1[0])):
            result[i][j] = m1[i][j] + m2[i][j]
            
    return result

result = add_matrix([[1,4,7], [2,5,8], [3,6,9]], [[9,1,2], [5,3,4], [1,8,7]])
print(result)","def add_matrix(m1, m2):
    result = [[0] * len(m1[0]) for i in range(len(m1))]
    
    for i in range(len(m1)):
        for j in range(len(m1[0])):
          ",Incomplete Answer,Loops
Write a code in Python that fills a two-dimensional list of given sizes with increasing numbers starting from 1.,,"def fill_2d_list(x, y):
    new_list = [[i+j for i in range(x)] for j in range(0, x*y, x) ]
    return new_list

fill_2d_list(3, 5) 

# Output:
# [[1, 2, 3], 
# [4, 5, 6], 
# [7, 8, 9], 
# [10, 11, 12], 
# [13, 14, 15]]","def fill_2d_list(x, y)
    new_list = [[i+j for i in range(x)] for j in range(0, x*y, x) ]
    return new_list

fill_2d_list(3, 5) 

# Output
# [[1, 2, 3], 
# [4, 5, 6], 
# [7, 8, 9], 
# [10, 11, 12], 
# [13, 14, 15]]",Syntax Error,Loops
What is the best way to optimize the following Python code which prints the first and last letters of an array of strings?,"words = [""cat"", ""dog"", ""snake"", ""elephant""]","# optimized version 
words = [""cat"", ""dog"", ""snake"", ""elephant""]

first_letters = [word[0] for word in words] # list of first letters
last_letters = [word[-1] for word in words] # list of last letters

# print the results
print(first_letters)
print(last_letters)","# optimized version 
words = [""cat"", ""dog"", ""snake"", ""elephant""]

first_letters = [word[0] for word in words] # list of first lette",Incomplete Answer,String Manipulation
Generate a code snippet to convert the given JSON string to a dictionary in Python.,"json_str = '{ ""name"" : ""John"", ""age"" : 20, ""city"" : ""New York"" }'","import json

json_dict = json.loads(json_str)","import json

json_dict = json.loads(json_str)",correct,OOP
Write a function to sort the given array by using counting sort.,,"def counting_sort(my_list):
    max_value = 0
    for i in range(len(my_list)):
        if my_list[i] > max_value:
            max_value = my_list[i]
    buckets = [0] * (max_value + 1)
    for i in my_list:
        buckets[i] += 1
    i = 0
    for j in range(max_value + 1):
         for a in range(buckets[j]):
             my_list[i] = j
             i += 1
    return my_list","def counting_sort(my_list):
    max_value = 0
    for i in range(len(my_list)):
        if my_list[i] > max_value:
            max_value = my_list[i]
    buckets = [0] * (max_value + 1)
    for i in my_list:
        buckets[i] += 1
    i = 0
    for j in range(max_value + 1):
         for a in range(buckets[j]):
             my_list[i] = j
             i += 1
    return my_list",Syntax Error,OOP
Create a function in Python that prints out all the odd numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def print_odd_numbers(lst):
    odd_nums = []
    for num in lst:
        if num % 2 != 0:
            odd_nums.append(num)
    print(odd_nums)

print_odd_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])","def print_odd_numbers(lst)
    odd_nums = []
    for num in lst
        if num % 2 != 0
            odd_nums.append(num)
    print(odd_nums)

print_odd_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])",Syntax Error,String Manipulation
Write a Python program that checks if a given number is prime.,7,"def is_prime(n):
    if n == 2 or n == 3:
        return True
    if n < 2 or n%2 == 0:
        return False
    if n < 9:
        return True
    if n%3 == 0:
        return False

    r = int(n**0.5)
    f = 5
    while f <= r:
        if n%f == 0:
            return False
        if n % (f+2) == 0:
            return False
        f += 6
    return True

num = 7
print(""Is"", num, ""prime?: "", is_prime(num))","def is_prime(n):
    if n == 2 or n == 3:
        return True
    if n < 2 or n%2 == 0:
        return False
    if n < 9:
        return True
    if n%3 == 0:
        return False

    r = int(n**0.5)
    f = 5
    while f <= r:
        if n%f == 0:
            return False
        if n % (f+2) == 0:
            return False
        f += 6
    return True

num = 7
print(""Is"", num, ""prime?: "", is_prime(num))",correct,String Manipulation
Modify the following Python function to ensure that the two strings are converted to lowercase before comparison.,"def compare_strings(str1, str2):
    return str1 == str2","def compare_strings(str1, str2):
    str1 = str1.lower()
    str2 = str2.lower()
    
    return str1 == str2","def compare_strings(str1, str2)
    str1 = str1.lower()
    str2 = str2.lower()
    
    return str1 == str2",Syntax Error,String Manipulation
Write a Python script to convert a list of positive integers to a comma-separated string.,"[1, 2, 3, 4]","def convert_list_to_string(list): 
  string = """"
  for num in list:
    string += str(num) + "",""
  return string

print(convert_list_to_string([1, 2, 3, 4]))

# Output: ""1,2,3,4,""","def convert_list_to_string(list): 
  string = """"
  for num in list:
    string += str(num",Incomplete Answer,String Manipulation
"Create a python function that takes a string as an input, and returns its first letter in capital.",,"def capitalize_first_letter(s): 
    if len(s) == 0:
        return s
    else:
        return s[0].upper() + s[1:]","def capitalize_first_letter(s): 
    if len(s) == 0:
        return s
    else:
        return s[0].upper() + s[1:]",correct,String Manipulation
Develop a Python script for extracting data from a web page.,URL of a web page containing relevant data.,Properly functioning Python script for extracting data from a web page.,Properly functioning Python script for extracting data from a web page.,Syntax Error,String Manipulation
Write a Python code which randomly generates a hopscotch board of given size.,size = 7,"import random 

def generate_hopscotch_board(size):
    board = []
    for row in range(size):
        board.append([])
        for col in range(size):
            board[row].append(random.randint(1,6))
    return board

# Generate a hopscotch board
print(generate_hopscotch_board(size))","import random 

def generate_hopscotch_board(size):
    board = []
    for row in range(size):
        board.append([])
        for col in range(size):
            board[row].append(random.randint(1,6))
    return board

# Generate a hopscotch board
print(generate_hopscotch_board(size))",correct,Loops
Write a function to find the list of lists with maximum length.,,"def max_length(list1):
    max_length = max(len(x) for x in  list1 )  
    max_list = max((x) for x in   list1)
    return(max_length, max_list)","def max_length(list1):
max_length = max(len(x) for x in  list1 )  
max_list = max((x) for x in   list1)
return(max_length, max_list)",Syntax Error,String Manipulation
Suggest a data structure to store a set of student scores in order to sort them quickly by student name.,,"A dictionary would be the ideal data structure for this situation. The student names could be used as keys, and the scores can be stored as values. Using Python, the scores can then be sorted by the student names using the built-in sorted() function.","A dictionary would be the ideal data structure for this situation. The student names could be used as keys, and the scores can be stored as values. Using Python, the scores can then be sorted by the student names using the built-in sorted() function.",correct,Recursion
"Write a string slicing function in Python that takes a string and start and end index, and return the slice.","string = ""This is a slicing test""
start = 8
end = 15","def slicing(string, start, end):
    return string[start:end]
    
print(slicing(string, start, end))","def slicing(string, start, end):
    return string[start:end]
    
print(slicing(string, start, end))",correct,String Manipulation
Create a Python script that searches the string for a given pattern and returns the starting position.,"""Hello world""","def find_pattern_position(string, pattern):
    for i in range(len(string) - len(pattern) + 1):
        if string[i:i+len(pattern)] == pattern:
            return i
    else:
        return -1

position = find_pattern_position(""Hello world"", ""world"")
print(position)","def find_pattern_position(string, pattern)
    for i in range(len(string) - len(pattern) + 1)
        if string[ii+len(pattern)] == pattern
            return i
    else
        return -1

position = find_pattern_position(""Hello world"", ""world"")
print(position)",Syntax Error,Recursion
Classify this Python function according to behavior.,"def is_even(n):
    '''
    This function takes a number n and 
    returns True if n is even and False if n is odd
    '''
    return n % 2 == 0",Classifying this Python function as a Predictive Function.,Classifying this Python function as a Predictive Function.,Syntax Error,File I/O
Edit the following Python function to handle keyboard interrupts.,"def main():
 try:
 counter = 0
 while True:
 print(counter)
 counter += 1
 time.sleep(1)
 
except KeyboardInterrupt:
 print('Goodbye!')","def main():
 try:
 counter = 0
 while True:
 print(counter)
 counter += 1
 time.sleep(1)
 
 except KeyboardInterrupt:
 print('Goodbye!') 
 sys.exit()","def main():
 try:
 counter = 0
 while True:
 print(counter)
 counter += 1
",Incomplete Answer,String Manipulation
Write a Python program to format a given date from one format to another.,"start_date = ""3-5-2020""
end_date = ""5-5-2020""","from datetime import date

def format_date(date_str, start_format, end_format):
    date_obj = date.strptime(date_str, start_format)
    return date_obj.strftime(end_format)","from datetime import date

def format_date(date_str, start_format, end_format):
    date_obj = date.strptime(date_str, start_format)
    return date_obj.strftime(end_format)",Syntax Error,File I/O
Create an algorithm in Python to print a pattern consisting of '*' and '#' characters.,,"def pattern(n):
 m = 0
 for i in range(1, n+1):
 for j in range(1, m+1):
 print(""*"", end="""")
 m = m + 2
 
 for k in range(1, n-i+1):
 print(""#"", end="""")
 print()

pattern(5) 
/* Output: 
*#*#*
**#**
***#
****
*/","def pattern(n):
 m = 0
 for i in range(1, n+1):
 for j in range(1, m+1):
 print(""*"", end="""")
 m = m + 2
 
 for k in range(1, n-i+1):
 print(""#"", end="""")
 print()

pattern(5) 
/* Output: 
*#*#*
**#**
***#
****
*/",correct,Recursion
"Write a code in Python to print all numbers between 2000 and 3200, which are divisible by 7 and multiple of 5.",,"def divisible_numbers():
  for num in range(2000, 3201):
    if (num % 7 == 0) and (num % 5 == 0):
      print(num, end="", "")

if __name__ == '__main__':
  divisible_numbers()","def divisible_numbers():
  for num in range(2000, 3201):
if (num % 7 == 0) and (num % 5 == 0):
  print(num, end="", "")

if __name__ == '__main__':
  divisible_numbers()",Syntax Error,File I/O
Generate a Python program that finds all palindromes in a given string.,"input_str = ""madamabcdcba""","input_str = ""madamabcdcba""

def find_palindromes(input_str):
 palindromes = []
 for i in range(len(input_str)):
  for j in range(i+1, len(input_str)):
   curr_str = input_str[i:j+1]
   if curr_str == curr_str[::-1]:
    palindromes.append(curr_str)
 return palindromes

print(find_palindromes(input_str))

# Output: ['madam', 'aba', 'bcdbcd', 'cba']","input_str = ""madamabcdcba""

def find_palindromes(input_str)
 palindromes = []
 for i in range(len(input_str))
  for j in range(i+1, len(input_str))
   curr_str = input_str[ij+1]
   if curr_str == curr_str[-1]
    palindromes.append(curr_str)
 return palindromes

print(find_palindromes(input_str))

# Output ['madam', 'aba', 'bcdbcd', 'cba']",Syntax Error,Recursion
Write down logic to generate all permutations of a given string in Python.,"String = ""ABC""","def permutations(str): 
    ans = []
    if len(str) == 1: 
        ans = [str] 
    else: 
        for i, letter in enumerate(str):
            for perm in permutations(str[:i] + str[i+1:]):
                ans += [letter + perm]
    return ans

print (permutations(""ABC""))","def permutations(str): 
    ans = []
    if len(str) == 1: 
        ans = [str] 
    else: 
        for i, letter in enumerate(str):
            for perm in permutations(str[:i] + str[i+1:]):
                ans += [letter + perm]
    return ans

print (permutations(""ABC""))",correct,String Manipulation
Suggest a completion of the following Python code to print all perfect squares between 25 and 45.,for n in range():,"for n in range(25, 46):
    if n ** 0.5 == int(n ** 0.5):
        print(n)","for n in range(25, 46):
if n ** 0.5 == int(n ** 0.5):
    print(n)",Syntax Error,File I/O
Create a linear regression model in Python to predict the number of visits to a particular website.,,"import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# input data
X = np.array([[1, 1], [2, 2], [3, 3], [4, 4]])
y = np.array([5, 10, 15, 20])

# create and fit the model
model = LinearRegression()
model.fit(X, y)

# make a prediction
y_pred = model.predict([[5, 5]])
print(round(y_pred[0], 2))","import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# input data
X = np.array([[1, 1], [2, 2], [3, 3], [4, 4]])
y = np.array([5, 10, 15, 20])

# create and fit the model
model = LinearRegression()
model.fit(X, y)

# make a prediction
y_pred = model.predict([[5, 5]])
print(round(y_pred[0], 2))",Syntax Error,Recursion
Produce a Python code for finding the largest element in an array.,"[40, 50, 11, 70, 39]","def find_max(arr):
    max = arr[0]
    for i in range(1,len(arr)):
        if arr[i] > max:
            max = arr[i]
    return max

result = find_max([40, 50, 11, 70, 39])
print(result)","def find_max(arr)
    max = arr[0]
    for i in range(1,len(arr))
        if arr[i] > max
            max = arr[i]
    return max

result = find_max([40, 50, 11, 70, 39])
print(result)",Syntax Error,Loops
Write a python program to convert degree Celsius to Fahrenheit.,c = 22,"def convert_celsius_to_fahrenheit(c):
    f = (c * (9/5)) + 32
    return f

f = convert_celsius_to_fahrenheit(c)
print('{} degree Celsius = {} degree Fahrenheit'.format(c, f))","def convert_celsius_to_fahrenheit(c):
    f = (c * (9/5)) + 32
    return f

f = convert_celsius_to_fahrenheit(c)
print('{} degree Celsius = {} degree Fahrenheit'.format(c, f))",correct,Loops
You are given a list of integers and a number n. Write a python program that checks if any two numbers in the list sum up to n.,"numbers = [1, 5, 6, 10, 8, 20]
n = 11","def sum_check(numbers, n):
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            if numbers[i] + numbers[j] == n:
                return True
    return False

numbers = [1, 5, 6, 10, 8, 20]
n = 11

print(sum_check(numbers, n))","def sum_check(numbers, n):
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            if numbers[i] ",Incomplete Answer,Loops
Write a Python function to remove duplicate characters from a string.,"InputString=""tree traversal""","def remove_duplicate_characters(string): 
 result = """" 
  
 for i in range(len(string)): 
  if string[i] not in result: 
   result += string[i] 
  
 return result 
  
print(remove_duplicate_characters(""tree traversal""))","def remove_duplicate_characters(string): 
 result = """" 
  
 for i in range(len(string)): 
  if string[i] not in result: 
   result += string[i] 
  
 return result 
  
print(name, remove_duplicate_characters(""tree traversal""))",Syntax Error,Recursion
Write a python function to find the sum of squares of first n even natural numbers.,,"def square_Sum(n):  
    return int(2*n*(n+1)*(2*n+1)/3)","def square_Sum(n):  
    return int(2*n*(n+1)*(2*n+1)/3)",correct,OOP
Write a function to find x and y that satisfies ax + by = n.,,"def solution (a, b, n): 
	i = 0
	while i * a <= n: 
		if (n - (i * a)) % b == 0: 
			return (""x = "",i ,"", y = "", 
			int((n - (i * a)) / b)) 
			return 0
		i = i + 1
	return (""No solution"") ","def solution (a, b, n): 
	i = 0
	while i * a <= n: 
		if (n - (i * a)) % b == 0: 
			return (""x = "",i ,"", y = "", 
			int((n - (i * a)) / b)) 
			return 0
		i = i + 1
	return (""No solution"") ",correct,String Manipulation
Write a script in Python to format a date.,,"import datetime 
now = datetime.datetime.now().strftime(""%d/%m/%Y"") 
print(now)","import datetime 
now = datetime.datetime.now().strftime(""%d/%m/%Y"") 
print(now)",correct,Loops
Write a python function to find the cube sum of first n even natural numbers.,,"def cube_Sum(n): 
    sum = 0
    for i in range(1,n + 1): 
        sum += (2*i)*(2*i)*(2*i) 
    return sum","def cube_Sum(n): 
    sum = 0
    for i in range(1,n +",Incomplete Answer,String Manipulation
Write a Python program which prints all perfect numbers between 1 and a given number N (inclusive).,25,"def print_perfect_numbers(N):
 for val in range(1, N + 1):
   sum = 0
   for testval in range(1, val):
       if (val % testval) == 0:
           sum += testval
   if (sum == val):
       print(val)","def print_perfect_numbers(N):
 for val in range(1, N + 1):
   sum = 0
   for testval in range(1, va",Incomplete Answer,Recursion
Write a Python program to sort a given list of numbers and return the sorted list,"list_of_numbers = [2, 3, 5, 8, 1, 4]","list_of_numbers = [2, 3, 5, 8, 1, 4]

def sort_list(list_of_numbers): 
    list_of_numbers.sort() 
    return list_of_numbers

sorted_list = sort_list(list_of_numbers) 
print(sorted_list)","list_of_numbers = [2, 3, 5, 8, 1, 4]

def sort_list(list_of_numbers) 
    list_of_numbers.sort() 
    return list_of_numbers

sorted_list = sort_list(list_of_numbers) 
print(sorted_list)",Syntax Error,OOP
Create a Python script to search for a given element in a list?,"my_list = [1, 3, 5, 7, 8]","def find_element(my_list, x):
  found = False
  for item in my_list:
    if item == x:
      found = True
      break
  
  return found

element = 3

print(find_element(my_list, element))

# Output
True","def find_element(my_list, x):
  found = False
  for item in my_list:
    if item == x:
      found = True
      break
  
  return found

element = 3

print(find_element(my_list, element))

# Output
True",correct,File I/O
Write a Python program to calculate the factorial of a number.,number = 6,"def factorial(number): 
 if number == 0: 
 return 1
 else: 
 return number * factorial(number-1) 
  
number = 6
print(factorial(number)) 
# Output: 720","def factorial(number): 
 if number == 0: 
 return 1
 else: 
 return number * factorial(number-1) 
  
number = 6
print(factorial(number)) 
# Output: 720",correct,File I/O
Write a function to calculate wind chill index.,,"import math
def wind_chill(v,t):
 windchill = 13.12 + 0.6215*t -  11.37*math.pow(v, 0.16) + 0.3965*t*math.pow(v, 0.16)
 return int(round(windchill, 0))","import math
def wind_chill(v,t):
 windchill = 13.12 + 0.6215*t -  11.37*mat",Incomplete Answer,File I/O
Design a Python class that displays a diamond shape when it is called.,,"class DiamondShape:
    def __init__(self, size):
        self.size = size
    
    def show(self):
        for i in range(1, self.size+1):
            print("" "" * (self.size - i) + "" *"" * (2*i - 1))
        for i in range(self.size-1, 0, -1): 
            print("" "" * (self.size - i) + "" *"" * (2*i - 1))","class DiamondShape:
    def __init__(self, size):
        self.size = size
    
    def show(self):
        for i in range(1, self.size+1):
            ",Incomplete Answer,Recursion
Design a machine learning model in Python to predict house prices based on the given features.,,"import numpy as np
import pandas as pd
from sklearn import linear_model

# Load the data
data = pd.read_csv('house_price_data.csv')

# Select features
X = data[['size', 'bedrooms', 'bathrooms', 'year']]

# Select target
y = data['price']

# Create and fit the model
model = linear_model.LinearRegression()
model.fit(X, y)","import numpy as np
import pandas as pd
from sklearn import linear_model

# Load the data
data = pd.read_csv('house_price_data.csv')

# Select features
X = data[['size', 'bedrooms', 'bathrooms', 'year']]

# Select target
y = data['price']

# Create and fit the model
model = linear_model.LinearRegression()
model.fit(X, y)",correct,Recursion
Write a python program to check if a given number is an Armstrong number or not.,,"def is_armstrong_number(num):
    digits_sum = 0
    num_string = str(num)
    for digit in num_string:
        digits_sum += int(digit)**len(num_string)
    return digits_sum == num","def is_armstrong_number(num)
    digits_sum = 0
    num_string = str(num)
    for digit in num_string
        digits_sum += int(digit)**len(num_string)
    return digits_sum == num",Syntax Error,String Manipulation
Design a program in Python to change the background color of a web page.,color = '#FF0000',"from selenium import webdriver
from selenium.webdriver.common.keys import Keys

driver = webdriver.Chrome()
driver.get(""http://example.com"")
html = driver.find_element_by_tag_name('html')
html.send_keys(Keys.CONTROL + Keys.SHIFT + Keys.BACKSPACE)
driver.execute_script(""document.body.style.backgroundColor='"" + color + ""'"")","from selenium import webdriver
from selenium.webdriver.common.keys import Keys

driver = webdriver.Chrome()
driver.get(""http://example.com"")
html = driver.find_element_by_tag_name('html')
html.send_keys(Keys.CONTROL + Keys.SHIFT + Keys.BACKSPACE)
driver.execute_script(""document.body.style.backgroundColor='"" + color + ""'"")",correct,File I/O
Construct a python program to identify the number of times the given element is present in the given list.,"list: [2, 3, 4, 5, 2, 3]
x: 3","def count_x(list, x):
    count = 0
    for i in list:
        if i == x:
            count += 1
    return count","def count_x(list, x)
    count = 0
    for i in list
        if i == x
            count += 1
    return count",Syntax Error,Recursion
Create a Python script that uses a for loop to display the items from a list.,"[apple, orange, banana]","# Create a list
list = ['apple', 'orange', 'banana']

# Loop over the list
for item in list:
    print(item)","# Create a list
list = ['apple', 'orange', 'banana']

# Loop over the list
for item in list:
    print(item)",correct,Loops
"Given a Python list containing a set of numbers and strings, create a new list with only the integers.","mylist = ['a', 1, 3, 2.5, 'b']","mylist = [item for item in mylist if isinstance(item, int)]",mylist = [item for item in my,Incomplete Answer,Loops
Write a Python program that can generate a random 5-digit number and check if that number is prime or not.,,"import random

def is_prime(num):
	for i in range(2, num):
		if num%i == 0:
			return False
	return True

def generate_prime():
	while True:
		num = random.randint(10000, 99999)
		if is_prime(num):
			return num

if __name__ == '__main__':
	num = generate_prime()
	print(num, 'is a prime number')","import random

def is_prime(num):
	for i in range(2, num):
		if num%i == 0:
			return False
	return True

def generate_prime():
	while True:
		num =",Incomplete Answer,Loops
Edit the following program written in Python in order to remove None from the list.,"lst = ['a', 'b', None, 'c']",lst = [x for x in lst if x is not None],lst = [x for x in l,Incomplete Answer,Recursion
Write a python function to merge the first and last elements separately in a list of lists.,,"def merge(lst):  
    return [list(ele) for ele in list(zip(*lst))] ","def merge(lst):  
    return [list(ele) for ele in list(zip(*lst))] ",correct,File I/O
Opitmize a Python program to search a list of numbers for a given target number.,"list = [10,20,30,40,50]
target = 40","def search(list, target):
  
 for i in range(len(list)):
  if list[i] == target:
   return i
 return -1

list = [10,20,30,40,50]
target = 40

# linear search in list

index = search(list, target)

if index != -1:
 print(""Element found at index :"", index)
else:
 print(""Element not found"")","def search(list, target):
  
 for i in range(len(list)):
  if list[i] == target:
   return i
 return -1

list = [10,20,30,40,50]
target = 40

# linear search in list

index = search(list, target)

if index != -1:
 print(""Element found at index :"", index)
else:
 print(""Element not found"")",correct,Loops
Optimize the following Python Octave code by introducing vectorization.,"for  i = 0:datasize-1
    freq = (float(freq[i]) + float(new_freq[i]))","#Vectorization
freq = (np.array(freq) + np.array(new_freq)).tolist()","#Vectorization
freq = (np.array(freq) + np.array(new_freq)).tolist()",correct,File I/O
Come up with a Python program to merge two sorted lists.,,"def merge(list1, list2): 
    merged_list = [] 
    i = 0
    j = 0
  
    while i < len(list1) and j < len(list2): 
        if list1[i] < list2[j]: 
            merged_list.append(list1[i]) 
            i+= 1
        else: 
            merged_list.append(list2[j]) 
            j+= 1
   
    merged_list += list1[i:]
    merged_list += list2[j:]
  
    return merged_list","def merge(list1, list2): 
    merged_list = [] 
    i = 0
    j = 0
  
    while i < len(list1) and j < len(list2): 
        if list1[i] < list2[j]: 
            merged_list.append(list1",Incomplete Answer,File I/O
Write an algorithm in Python to find the largest and smallest element in an array.,"arr = [3, 7, 1, 12, 5]","def find_min_max(arr):
    min, max = arr[0], arr[0]
    for item in arr:
        if item < min:
            min = item
        if item > max:
            max = item
    return min, max

# test
arr = [3, 7, 1, 12, 5]
min, max = find_min_max(arr)
print(f'min: {min}, max: {max}')","def find_min_max(arr):
    min, max = arr[0], arr[0]
    for item in arr:
        if item < min:
            min = item
        if item > max:
            max = item
    return min, max

# test
arr = [3, 7, 1, 12, 5]
min, max = find_min_max(arr)
print(f'min: {min}, max: {max}')",correct,Loops
Generate a function in Python that returns the index of the first occurrence of a given number in an array.,"[1, 4, 6, 9], 5","def first_occurrence(arr, num):
    '''Returns index of the first occurrence of num in an array.'''
    for i in range(len(arr)):
        if(arr[i] == num):
            return i
    return -1

arr = [1, 4, 6, 9]
num = 5

first_occurrence(arr, num) # -1","def first_occurrence(arr, num)
    '''Returns index of the first occurrence of num in an array.'''
    for i in range(len(arr))
        if(arr[i] == num)
            return i
    return -1

arr = [1, 4, 6, 9]
num = 5

first_occurrence(arr, num) # -1",Syntax Error,File I/O
Create a function in Python to calculate the sum of the cubes of the first n positive integers.,n = 4,"def sum_cubes(n): 
    sum = 0
    for i in range(1,n+1): 
        sum += i**3 
    return sum","def sum_cubes(n): 
sum = 0
for i in range(1,n+1): 
    sum += i**3 
return sum",Syntax Error,Loops
Write a Python program which accepts the user's first and last name and print them in reverse order with a space between them.,,"def reverse_name_order(first_name, last_name):
    print(last_name + "" "" + first_name)

first_name = input(""Enter your first name: "")
last_name = input(""Enter your last name: "")
reverse_name_order(first_name, last_name)","def reverse_name_order(first_name, last_name):
    print(last_name + "" "" + first_name)

first_name = input(""Enter your first name: "")
last_name = input(""Enter your last name: "")
reverse_name_order(first_name, last_name)",correct,Loops
Parse the following JSON into a Python dictionary.,"{
  ""name"": ""John"",
  ""age"": 28,
  ""hobbies"": [
    ""Programming"",
    ""Sports""
  ]
}","# import the json module
import json

# parse the json
json_dict = json.loads('{  ""name"": ""John"",  ""age"": 28,  ""hobbies"": [    ""Programming"",    ""Sports""  ]}')

# print the parsed json
print(json_dict)","# import the json module
import json

# parse the json
json_dict = json.loads('{  ""name"": ""John"",  ""age"": 28,  ""hobbies"": [    ""Programming"",    ""Sports""  ]}')

# print the parsed json
print(json_dict)",correct,String Manipulation
Develop a Python program to check if a number is divisible by 3.,,"def is_divisible_by_3(num):
 if num % 3 == 0:
 return True
 return False","def is_divisible_by_3(num):
 if num ",Incomplete Answer,OOP
Write a Python program to find the sum of all the divisors of a given integer.,90,"def calculate_sum_divisors(n):
    total_sum = 0
    for i in range(1, n + 1):
        if n % i == 0:
            total_sum += i
    return total_sum
 
print(calculate_sum_divisors(90))","def calculate_sum_divisors(n):
    total_sum = 0
    for i in range(1, n + 1):
        if n % i == 0:
            total_sum += i
    return total_sum
 
print(name, calculate_sum_divisors(90))",Syntax Error,String Manipulation
Convert this psuedocode into a Python program.,"num = 0

while num < 20:
    print (num)
    num += 4","num = 0
while num < 20:
    print (num)
    num += 4","num = 0
while num < 20:
print (num)
num += 4",Syntax Error,Loops
Develop a program in Python to remove all the vowels from a given sentence.,Sentence: This is a test sentence.,"def removeVowels(sentence):
 vowels = ""aeiouAEIOU""
 result = """"

 for char in sentence:
 if char not in vowels:
 result = result + char

 return result

print(removeVowels(""This is a test sentence.""))  # Output: ""Ths s  tst sntnc.""","def removeVowels(sentence):
 vowels = ""aeiouAEIOU""
 result = """"

 for char in sentence:
 if char not in vowels:
 result = result + char

 return result

pritn(removeVowels(""This is a test sentence.""))  # Output: ""Ths s  tst sntnc.""",Syntax Error,File I/O
Write a Python program to print a formatted price list with a given list of expenses.,"expenses = {
    ""bread"": 2.50,
    ""butter"": 4.50,
    ""cake"": 12.75,
    ""sugar"": 6.95
}","def print_price_list(expenses):
    print(""Price list of items available:"")
    print(""-"" * 30)
    print(""Item\tPrice"")
    print(""-"" * 30)
    for item in expenses.keys():
        print(""{}\t{}"".format(item, expenses[item]))
    print(""-"" * 30)","def print_price_list(expenses):
    print(""Price list of items available:"")
    print(""-"" * 30)
    print(""Item\tPrice"")
  ",Incomplete Answer,OOP
Edit the given Python program to use for loop instead of while loop.,"i = 0
while i < 10:
  print(i)
  i = i + 1","for i in range(10):
 print(i)",for i in range,Incomplete Answer,String Manipulation
Evaluate the following code for a Python program that takes two numbers as input and outputs the maximum of the inputs.,,"def max_of_two(x, y):
    if x > y:
        return x
    return y

# This code is correct and will output the maximum value of the two numbers.","def max_of_two(x, y)
    if x > y
        return x
    return y

# This code is correct and will output the maximum value of the two numbers.",Syntax Error,Loops
Translate this JavaScript code to Python.,"function sum(nums) {
  let result = 0
  for(let i = 0; i < nums.length; i++) {
    result += nums[i]
  }
  return result
}","def sum(nums):
    result = 0
    for i in range(len(nums)):
        result += nums[i]
    return result","def sum(nums):
result = 0
for i in range(len(nums)):
    result += nums[i]
return result",Syntax Error,String Manipulation
Write a Python program that takes a list of numbers and lists all the prime numbers in the list.,"[4, 8, 11, 13]","[11, 13]","[11, 13]",Syntax Error,Loops
Write a Python script that takes a list of strings as input and prints out a modified version of the list. The modified version should contain only strings that have the letter 'b' in them.,"['foo', 'bar', 'baz', 'hello', 'world']","input = ['foo', 'bar', 'baz', 'hello', 'world']
output = [x for x in input if 'b' in x]
print(output) # ['bar', 'baz']","input = ['foo', 'bar', 'baz', 'hello', 'world']
output = [x for x in input if 'b' in x]
pritn(output) # ['bar', 'baz']",Syntax Error,OOP
Create a Python script that prints out the Fibonacci sequence of a given number.,A value n = 6,"def fibonacci_sequence(n):
  a, b = 0, 1
  
  for i in range(n):
    print(a)
    a, b = b, a+b

fibonacci_sequence(6)

# Output:
# 0
# 1
# 1
# 2
# 3
# 5","def fibonacci_sequence(n):
  a, b = 0, 1
  
  for i in range(n):
    pritn(a)
    a, b = b, a+b

fibonacci_sequence(6)

# Output:
# 0
# 1
# 1
# 2
# 3
# 5",Syntax Error,File I/O
Develop Python code to calculate the Average of two numbers.,"2, 3","def average(a, b):
    return (a + b) / 2

result = average(2, 3)
print(result)","def average(a, b):
    return (a + b) / 2

result = average(2, 3)
print(name, result)",Syntax Error,String Manipulation
Develop an algorithm in Python that takes a number as input and outputs the sum of all its divisors.,6,"def sum_divisors(num):
    # Initialize sum 
    summation = 0
    
    # Iterate upto num 
    for i in range(1, num+1):
        # If num is divisible  
        # by i, add it to sum 
        if num%i == 0:
            summation += i
    # Return summation 
    return summation
  
   
# Driver Code 
num = 6
result = sum_divisors(num) 
  
# Printing result  
print(result)","def sum_divisors(num):
    # Initialize sum 
    summation = 0
    
    # Iterate upto num 
    for i in range(1, num+1):
        # If num is divisible  
        # by i, add it to sum 
        if num%i == 0:
            summation += i
    # Return summation 
    return summation
  
   
# Driver Code 
num = 6
result = sum_divisors(num) 
  
# Printing result  
print(name, result)",Syntax Error,String Manipulation
Create a function to sort the below list of numbers in ascending order in Python.,"[3,7,1,9,2]","def sorting_ascending(lst): 
    lst.sort() 
    return lst","def sorting_ascending(lst) 
    lst.sort() 
    return lst",Syntax Error,Recursion
Write a Python function to sort the given list of strings using the length of the strings instead of alphabetically.,,"def sortStringByLength(string_list):
    string_list.sort(key = lambda x:len(x)) 
    return string_list","def sortStringByLength(string_list):
    string_list",Incomplete Answer,OOP
Generate a Python script that sorts a given array of integers.,"Array: <10, 8, 1, 4, 6, 5>","def array_sort(array):
  # Iterate over the array
  for i in range(len(array)):
    # Find the minimum element
    min_position = i
    for j in range(i + 1, len(array)):
      if array[min_position] > array[j]:
        min_position = j

    # Swap minimum element to current position
    array[i], array[min_position] = array[min_position], array[i]
  
  return array","def array_sort(array):
  # Iterate over the array
  for i in range(len(array)):
# Find the minimum element
min_position = i
for j in range(i + 1, len(array)):
  if array[min_position] > array[j]:
    min_position = j

# Swap minimum element to current position
array[i], array[min_position] = array[min_position], array[i]
  
  return array",Syntax Error,Recursion
Create a python function for calculating the area of a circle given the radius.,,"def area(radius): 
    return 3.14 * radius * radius","def area(radius): 
    return 3.14 * radius * radius",correct,OOP
Generate a python program for creating a function to take a list of strings as input and return the longest string,"list of strings: ['hello', 'world', 'this', 'is', 'awesome']","def find_longest_string(arr):
    longest = arr[0]
    for string in arr:
        if len(string) > len(longest):
            longest = string
    return longest

result = find_longest_string(['hello', 'world', 'this', 'is', 'awesome'])
print(result)","def find_longest_string(arr):
    longest = arr[0]
    for string in arr:
        if len(string) > len(longest):
           ",Incomplete Answer,Recursion
Generate a program in Python to evaluate the accuracy of a machine-learning model.,"from sklearn.svm import SVC
clf = SVC(kernel='poly', degree=2, gamma=0.05)","import numpy as np
from sklearn.metrics import accuracy_score

clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)

# Calculating the accuracy
accuracy = accuracy_score(y_test, y_pred)

print(""Accuracy: "" + str(accuracy))","import numpy as np
from sklearn.metrics import accuracy_score

clf.fit(X_train, y_train)
y_pred = clf.predict(X_",Incomplete Answer,Recursion
Can you create a program for web scraping using Python?,,"import requests
from bs4 import BeautifulSoup

# Send a request to the URL
res = requests.get(""https://www.example.com"")

# Parse the response
soup = BeautifulSoup(res.text, 'html.parser')

# Extract the data
data = soup.find_all('div')","import requests
from bs4 import BeautifulSoup

# Send a request to the URL
res = requests.get(""https://www.example.com",Incomplete Answer,OOP
Generate a python program that prints out all the even numbers between a given range of integers,1 to 50,"def print_even_numbers(start, end):
    for num in range(start, end+1):
        if num % 2 == 0:
            print(num)

# main
start = 1
end = 50
print_even_numbers(start, end)","def print_even_numbers(start, end):
    for num in range(start, end+1):
        if num %",Incomplete Answer,OOP
Create a function in Python to convert a given time from 12-hour clock format to 24-hour clock format.,3:45pm,"def time_conversion(time):
    # Get hour and convert it to 24-hour format
    hour = int(time[:2])
    if time[-2:] == ""PM"":
        hour += 12
    # Get minutes
    min = time[-5:-3]

    return str(hour) + "":"" + min

# Test
print(time_conversion(""3:45pm"")) # 15:45","def time_conversion(time:
    # Get hour and convert it to 24-hour format
    hour = int(time[:2]
    if time[-2:] == ""PM"":
        hour += 12
    # Get minutes
    min = time[-5:-3]

    return str(hour + "":"" + min

# Test
print(time_conversion(""3:45pm"" # 15:45",Syntax Error,OOP
Create a Python program to take an array of numbers and calculate the average.,"[1, 4, 5, 6, 7]","def average(nums):
    sum = 0
    for n in nums:
        sum += n
    return sum / len(nums)

nums = [1, 4, 5, 6, 7]
print(average(nums))","def average(nums):
    sum = 0
    for n in nums:
        sum += n
    return sum / len(nums)

nums = [1, 4, 5, 6, 7]
print(average(nums))",correct,OOP
Generate a sorting algorithm in Python to order a list of words alphabetically.,,"def sort_words(words):
    for i in range(len(words)-1):
        min_index = i 
        for j in range(i + 1, len(words)):
            if words[min_index] > words[j]: 
                min_index = j
        words[i], words[min_index] = words[min_index], words[i]
    return words","def sort_words(words):
    for i in range(len(words)-1):
        min_index = i 
        for j in range(i + 1, len(words)):
            if words[min_index] > words[j]: 
                min_index = j
        words[i], words[min_index] = words[min_index], words[i]
    return words",correct,Loops
Write a Python program to create a new list which contains the elements of a given list after removing duplicates.,,"def remove_duplicates(list):
 resultant_list = []
 for item in list:
 if item not in resultant_list:
 resultant_list.append(item)
 return resultant_list","def remove_duplicates(list):
 resultant_list = []
 for item in list:
 if item not in resultant_list:
 resultant_list.append(item)
 return resultant_list",Syntax Error,File I/O
Generate a Python program to update the value of a variable by given percentage.,"Given variable value = 25.22
Given percentage = 5","value = 25.22
percent = 5

new_value = value + (value * (percent/100))

print(""The new value is: "", new_value) 
# Output: The new value is: 26.496","value = 25.22
percent = 5

new_value = value + (value * (percent/100))

pritn(""The new value is: "", new_value) 
# Output: The new value is: 26.496",Syntax Error,Recursion
Create a program to print the following pattern using nested for loops in Python.,,"for i in range(5):
    for j in range(i):
        print(""*"", end="""")
    print("""")","for i in range(5):
    for j in range(i):
        print(""*"", end="""")
    print("""")",correct,Recursion
Create an Adaboost classifier in Python to classify a given dataset.,,"import numpy as np
from sklearn.ensemble import AdaBoostClassifier

X = np.array([[-1, -1], [-2, -1], [-3, -2], [1, 1], [2, 1], [3, 2]])
Y = np.array([1, 1, 1, 2, 2, 2])

clf = AdaBoostClassifier(n_estimators=50, learning_rate=1)
clf.fit(X, Y)

print(clf.predict([[-0.8, -1]]))","import numpy as np
from sklearn.ensemble import AdaBoostClassifier

X = np.array([[-1, -1], [-2, -1], [-3, -2], [1, 1], [2, 1], [3, 2]])
Y = np.array([1, 1, 1, 2, 2, 2])

clf = AdaBoostClassifier(n_estimators=50, learning_rate=1)
clf.fit(X, Y)

print(clf.predict([[-0.8, -1]]))",Syntax Error,Recursion
Write a function in Python to print the Fibonacci series up to the nth term.,,"def Fibonacci(n):
    first, second = 0, 1
    for _ in range(n):
        print(first)
        first, second = second, first + second","def Fibonacci(n):
    first, second = 0, 1
    for _ in range(n):
",Incomplete Answer,Recursion
Generate a Python program which will convert the given binary number into its equivalent decimal number,,"def binary_to_decimal(binary):
  decimal = 0
  binary = binary[::-1]
  for i, num in enumerate(binary):
    if num == '1':
      decimal += pow(2, i)
  return decimal","def binary_to_decimal(binary)
  decimal = 0
  binary = binary[-1]
  for i, num in enumerate(binary)
    if num == '1'
      decimal += pow(2, i)
  return decimal",Syntax Error,String Manipulation
Write a python function to set the right most unset bit.,,"import math 
def get_Pos_Of_Right_most_Set_Bit(n): 
    return int(math.log2(n&-n)+1)   
def set_Right_most_Unset_Bit(n): 
    if (n == 0): 
        return 1
    if ((n & (n + 1)) == 0):     
        return n 
    pos = get_Pos_Of_Right_most_Set_Bit(~n)      
    return ((1 << (pos - 1)) | n) ","import math 
def get_Pos_Of_Right_most_Set_Bit(n): 
    return int(math.log2(n&-n)+1)   
def set_Right_most_Unset_Bit(n): 
    if (n == 0): 
        return 1
    if ((n & (n + 1)) == 0):     
        return n 
    pos = get_Pos_Of_Right_most_Set_Bit(~n)      
    return ((1 << (pos - 1)) | n) ",correct,String Manipulation
Create a Python program to compute the average of all the numbers in a list.,"[1, 5, 9.7, 8, 5.6]","def avg(list):
    if len(list) == 0:
        return 0
    else:
        sum = 0
        for num in list:
            sum += num
        return sum / len(list)","def avg(list):
    if len(list) == 0:
        return 0
    else:
        sum = ",Incomplete Answer,Recursion
Write function to find the sum of all items in the given dictionary.,,"def return_sum(dict):
  sum = 0
  for i in dict.values():
    sum = sum + i
  return sum","def return_sum(dict):
  sum = 0
  for i in dict.values():
    sum = sum + i
  return sum",Syntax Error,String Manipulation
Write a Python program to iterate through a list and return the index of the maximum of all the even numbers in the list.,"[1, 5, 8, 10, 3, 13, 21, 24]","def find_max_even_index(lst):
  max_even = None
  index = -1
  
  for i, num in enumerate(lst):
    if num % 2 == 0 and (max_even is None or num > max_even):
      max_even = num
      index = i
  
  return index","def find_max_even_index(lst):
  max_even = None
  index = -1
  
  for i, num in enumerate(lst):
    if num",Incomplete Answer,Recursion
Generate code to de-serialize JSON into Python objects,"data_json = '{""name"":""John Doe"",""age"":18,""hobbies"":[""reading"",""swimming"",""gaming""],""contact"":{""email"":""johndoe@example.com"",""mobile"":""+1900000000""}}'","import json

data = json.loads(data_json)

# Output:
data = {
 ""name"": ""John Doe"",
 ""age"": 18,
 ""hobbies"": [""reading"", ""swimming"", ""gaming""],
 ""contact"": {
  ""email"": ""johndoe@example.com"",
  ""mobile"": ""+1900000000""
 }
}","import json

data = json.loads(data_json)

# Output:
data = {
 ""name"": ""John Doe"",
 ""age"": 18,
 ""hobbies"": [""r",Incomplete Answer,Recursion
Develop a Python program to evaluate a given polynomial given a value of the independent variable.,"polynomial = 4x^3 + 7x + 2
x = 6","def evaluate_polynomial(polynomial, x):
    terms = polynomial.split(""+"")
    result = 0
    for term in terms:
        factor, exponent = term.split(""x^"")
        result += int(factor)*(x**int(exponent))
    return result

polynomial = ""4x^3 + 7x + 2""
x = 6
print(evaluate_polynomial(polynomial, x))","def evaluate_polynomial(polynomial, x):
    terms = polynomial.split(""+"")
    result = 0
    for term in terms:
        factor, exponent = term.split(""x^"")
        result += int(factor)*(x**int(exponent))
    return result

polynomial = ""4x^3 + 7x + 2""
x = 6
print(evaluate_polynomial(polynomial, x))",correct,File I/O
Develop an algorithm to identify palindromes using regular expression in Python.,,"import re

def is_palindrome(s):
    pattern = r'^[a-zA-Z0-9]*$'
    if re.match(pattern, s):
        return s == s[::-1]
    else:
        return False","import re

def is_palindrome(s):
    pattern = r'^[a-zA-Z0-9]*$'
    if re.m",Incomplete Answer,OOP
Create a game loop in Python that waits for user input and handles it.,,"while True:
 user_input = input(""Enter your input: "")
 
 # handle user input
 if user_input == 'exit':
  break","while True:
 user_input = input(""Enter your input: "")
 ",Incomplete Answer,Loops
Generate a python program to sort a list of numbers,"array = [4, 2, 6, 7, 1]","def sort_list(array): 
    n = len(array) 
  
    for i in range(n): 
  
        min_idx = i 
        for j in range(i+1, n): 
            if array[min_idx] > array[j]: 
                min_idx = j 
        array[i], array[min_idx] = array[min_idx], array[i]

if __name__ == ""__main__"":
    array = [4, 2, 6, 7, 1]
    sort_list(array)
    print(array)","def sort_list(array): 
    n = len(array) 
  
    for i in range(n): 
  
        min_idx = i 
        for j in range(i+1, n): 
            if array[min_idx] > array[j]: 
      ",Incomplete Answer,Recursion
Create a Python function to replace a specific character in a string?,"string = ""Hello World""
character = ""l""
replacement = ""X""","def replace_char(string, character, replacement):
   return string.replace(character, replacement)

string = ""Hello World""
character = ""l""
replacement = ""X""
print(replace_char(string, character, replacement))","def replace_char(string, character, replacement:
   return string.replace(character, replacement

string = ""Hello World""
character = ""l""
replacement = ""X""
print(replace_char(string, character, replacement",Syntax Error,File I/O
Generate a python program to convert a list of strings to a new list of strings with each string's first letter capitalized,"[""apple"", ""cat"", ""dog"", ""hello""]","def capitalize(list):
    # Create an empty list to contain the corrected strings 
    output = []
    
    # Iterate over the strings 
    for string in list:
        output.append(string.capitalize())
    
    # Return the corrected list
    return output","def capitalize(list):
    # Create an empty list to contain the corrected strings 
    output = []
    
    # Iterate over the strings 
    for string in list:
        output.append(string.capitalize())
    
    # Return the corrected list
    return output",correct,OOP
Generate a valid JSON from a given Python dictionary.,"data = {
    'name': 'John',
    'age': 25
}","import json
data = {
    'name': 'John',
    'age': 25
}

json_data = json.dumps(data)
# json_data = '{""name"":""John"",""age"":25}'","import json
data = {
    'name': 'John',
    'age': 25
}

json_data = json.dumps(data)
# json_data = '{""name"":""John"",""age"":25}'",correct,String Manipulation
Design a Python program to count how many words appear in a given sentence.,Sentence: I am writing this code to practice,"def word_count(sentence): 
    count = 0
    words = sentence.split() 
    for word in words: 
        count += 1
    return count
  
sentence = ""I am writing this code to practice""
count = word_count(sentence)
print(""Number of words present inGiven sentence:"")  
print(count)","def word_count(sentence): 
    count = 0
    words = sentence.split() 
    for word in words: 
        count += 1
    return count
  
sentence = ""I am writing this code to practice""
count = word_count(sentence)
print(""Number of words present inGiven sentence:"")  
print(count)",correct,Loops
Create a function in Python which can take in a string and capitalize the first character of the string.,"mystring = ""hello world""","def capitalize_first_character(mystring):
    return mystring[0].upper() + mystring[1:]","def capitalize_first_character(mystring):
 ",Incomplete Answer,OOP
Implement a function in Python that takes in a list of integers and returns a new list where the elements are reversed.,"Input list: [1, 2, 3, 4, 5]","def reverse_list(arr): 
    return arr[::-1] 

Input_list = [1, 2, 3, 4, 5]
print(""Original List:"", Input_list) 
Rev_list = reverse_list(Input_list) 
print(""Reversed List:"", Rev_list)","def reverse_list(arr): 
    return arr[::-1] 

Input_list = [1, 2, 3, 4, 5]
pritn(""Original List:"", Input_list) 
Rev_list = reverse_list(Input_list) 
pritn(""Reversed List:"", Rev_list)",Syntax Error,Recursion
Create a Python program to write a string in Reverse order,This is a Test string,"def reverse_string(input_string): 
    str = """" 
    for i in input_string: 
        str = i + str
    return str
  
if __name__ == ""__main__"": 
    input_string = ""This is a Test string""
    print(reverse_string(input_string))","def reverse_string(input_string): 
    str = """" 
    for i in input_string: 
        str = i + str
    return str
  
if __name__ == ""__main__"": 
    input_string = ""This is a Test string""
    print(name, reverse_string(input_string))",Syntax Error,OOP
Convert the following Python code to equivalent JavaScript code.,"def add_two_numbers(a, b):
    return a + b","function add_two_numbers(a, b) {
  return a + b;
}","function add_two_numbers(a, b) {
  return a + b;
}",Syntax Error,String Manipulation
Create a network search algorithm in Python for finding the shortest path between two nodes.,,"def network_search(graph, start, end):
 visited, queue = set(), [(start, 0)]
 
 while queue:
 vertex, depth = queue.pop(0)
 
 if vertex not in visited:
 visited.add(vertex)
 
 if vertex == end:
 return depth
 
 for neighbor in graph[vertex]:
 queue.append((neighbor, depth + 1))
 
 return -1","def network_search(graph, start, end):
 visited, queue = set(), [(start, 0)]
 
 while queue:
 vertex, depth = queue.pop(0)
 
 if vertex not in vi",Incomplete Answer,Loops
Develop a Python function that will compute the Fibonacci sequence up to n.,,"def fibonacci(n):
 a, b = 0, 1 
 for i in range(0, n): 
 a, b = b, a + b 
 return a","def fibonacci(n:
 a, b = 0, 1 
 for i in range(0, n: 
 a, b = b, a + b 
 return a",Syntax Error,Loops
Construct a Python program to find the index of a given item in a list,"[""a"", ""b"", ""c""], ""b""","def index_of_item(list_of_items, item):
    for i in range(len(list_of_items)):
        if list_of_items[i] == item:
            return i

list_of_items = [""a"", ""b"", ""c""]
result = index_of_item(list_of_items, ""b"")
print(result)","def index_of_item(list_of_items, item):
    for i in range(len(list_of_items)):
        if list_of_items[i] == item:
            return i

list_of_items = [""a"", ""b"", ""c""]
result = index_of_item(list_of_items, ""b"")
print(result)",correct,File I/O
Generate a python code for a basic calculator,,"def calculate(a, b, op):
    if op == '+':
        return a + b
    elif op == '-':
        return a - b
    elif op == '*':
        return a * b
    elif op == '/':
        return a / b
    else:
        return ""Operation not supported.""","def calculate(a, b, op):
    if op == '+':
        return a + b
    elif op == '-':
        return a - b
    elif op ==",Incomplete Answer,Recursion
Create a Python program to encode text using the Caesar cipher given an offset n.,,"def _encode(char, offset):
 char_code = ord(char)
 new_char_code = char_code + offset
 return chr(new_char_code)

def encode_string(string, offset):
 encoded_string = """"
 
 for char in string:
 encoded_string += _encode(char, offset)
 
 return encoded_string","def _encode(char, offset:
 char_code = ord(char
 new_char_code = char_code + offset
 return chr(new_char_code

def encode_string(string, offset:
 encoded_string = """"
 
 for char in string:
 encoded_string += _encode(char, offset
 
 return encoded_string",Syntax Error,Recursion
Write a Python function for encrypting a string of plaintext.,"plaintext = ""Hello World!""","import base64
from cryptography.fernet import Fernet

def encrypt(plaintext):
 key = Fernet.generate_key()
 f = Fernet(key)
 encrypted_data = f.encrypt(plaintext.encode())
 return base64.b64encode(encrypted_data)","import base64
from cryptography.fernet import Fernet

def encrypt(plaintext):
 key = Fernet.generate_key()
 f = Fernet(key)
 encrypted_data = f.encrypt(plaintext.encode())
 return base64.b64encode(encrypted_data)",correct,Loops
Write a Python program to check if the first character of a given string is in uppercase.,,"def is_uppercase(text):
    if text[0].isupper():
        print(""True"")
    else:
        print(""False"")","def is_uppercase(text):
    if text[0].isupper():
  ",Incomplete Answer,File I/O
"Using the comments as a guide, fix the given python code.","num_list = [2, 7, 4, 10, 5]
            
 # TODO: replace the line below
total = 0       
for num in num_list:
    total += num

print(total)","num_list = [2, 7, 4, 10, 5]
            
# Replace the line below
total = 0       
for num in num_list:
    total += num

print(total)","num_list = [2, 7, 4, 10, 5]
            
# Replace the line below
t",Incomplete Answer,Recursion
Write abstract methods in Python to implement a stack,,"class MYStack:
    def __init__(self):
        self._items = []

    def push(self, item):
        self._items.append(item)

    def pop(self):
        return self._items.pop()

    def size(self):
        return len(self._items)

    def is_empty(self):
        return self.size() == 0","class MYStack:
    def __init__(self):
        self._items = []

    def push(self, item):
        self._items.append(item)

    def pop(self):
        return self._items.pop()

    def size(self):
        return len(self._items)

    def is_empty(self):
        return self.size() == 0",correct,String Manipulation
How can you create a Python function that prints the number of characters in a string?,,"def char_count(string): 
    count = 0
    for char in string: 
        count += 1
    print(""Number of characters:"", count)","def char_count(string) 
    count = 0
    for char in string 
        count += 1
    print(""Number of characters"", count)",Syntax Error,Recursion
Create a Python class to store data about books.,,"class Book:
 
    def __init__(self, title, author, publisher, year):
        self.title = title
        self.author = author
        self.publisher = publisher
        self.year = year
 
    def __str__(self):
        return f""{self.title} was written by {self.author} and published by {self.publisher} in {self.year}.""","class Book:
 
    def __init__(self, title, author, publisher, year):
        self.title = title
        self.author = author
        self.publisher = publisher
        self.year = year
 
    def __str__(self):
        return f""{self.title} was written by {self.author} and published by {self.publisher} in {self.year}.""",correct,Loops
Write a custom pip command that lists all the installed packages and their versions.,,"#!/usr/bin/env python

import pip

def pip_list():
    packages = pip.get_installed_distributions()
    for package in packages:
        print('{}=={}'.format(package.project_name, package.version))
        

if __name__ == '__main__':
    pip_list()","#!/usr/bin/env python

import pip

def pip_list():
    packages = pip.get_installed_distributions()
    for package in packages:
        print('{}=={}'.format(package.project_name, package.version))
        

if __name__ == '__main__':
    pip_list()",correct,Loops
Optimize a Python program to print the sum of the 10 smallest even numbers larger than a user-defined number.,num = 20,"num = int(input(""Enter a number: ""))

# Find the 10 smallest even numbers larger than the user-defined number
numbers = []
total = 0
for i in range(num+1, num+21):
 if i%2 == 0:
  numbers.append(i)
  total += i
  
print('The sum is', total)","num = int(input(""Enter a number: ""))

# Find the 10 smallest even numbers larger than the user-defined number
numbers = []
total = 0
for i in range(num+1, num+21):
 if i%2 == 0:
  numbers.append(i)
  total += i
  
print('The sum is', total)",correct,Loops
Identify the bug in the following Python code snippet and suggestion a fix.,"def updateList(myList):
 myList = myList + [1]

myList = [1, 2, 3]
updateList(myList)
print(myList)","def updateList(myList):
 myList.append(1)
 
myList = [1, 2, 3]
updateList(myList)
print(myList)","def updateList(myList):
 myList.append(1)
 
myList = [1, 2, 3]
updateList(myList)
print(myList)",correct,File I/O
Build a program in Python that compresses a given string using Run Length Encoding.,,"def run_length_encoding(s):
    n = len(s) 
    encoded_string = """"

    i = 1
    while i < n:
        count = 1
        while i < n and s[i] == s[i - 1]:
            count += 1
            i += 1

        encoded_string += (s[i - 1] + str(count))
        i += 1

    return encoded_string","def run_length_encoding(s):
    n = len(s) 
    encoded_string = """"

    i = 1
    while i < n:
        count = 1
        while i < n and s[i] ==",Incomplete Answer,Loops
Write a function to find sequences of lowercase letters joined with an underscore using regex.,,"import re
def text_match(text):
  patterns = '^[a-z]+_[a-z]+$'
  if re.search(patterns,  text):
    return ('Found a match!')
  else:
    return ('Not matched!')","import re
def text_match(text):
  patterns = '^[a-z]+_[a-z]+$'
  if re.search(patterns,  text):
    return ('Found a match!')
  else:
    return ('Not matched!')",correct,OOP
Generate a python program to find and list all numbers between 0 and 1000 that are divisible by 7.,,"def find_divisible(n):
  result = []
  for i in range(1, n+1):
    if i % 7 == 0:
      result.append(i)
  return result","def find_divisible(n)
  result = []
  for i in range(1, n+1)
    if i % 7 == 0
      result.append(i)
  return result",Syntax Error,Loops
Improve the following Python code to check if a number is in the range of 1 to 10 (inclusive).,"def check_number(num):
if num >= 1 and num <= 10:
   return True","def check_number(num):
  if (num > 0 and num < 11):
    return True
  else:
    return False","def check_number(num):
  if (num > 0 and num <",Incomplete Answer,String Manipulation
Develop a program in Python for finding the factorial of a given number.,7,"def factorial(n):
    if n < 0:
        return None
    elif n == 0:
        return 1
    else:
        result = 1
        for i in range(1, n + 1):
            result *= i
        return result

num = 7
print('factorial of {} is {}'.format(num, factorial(num)))","def factorial(n):
if n < 0:
    return None
elif n == 0:
    return 1
else:
    result = 1
    for i in range(1, n + 1):
        result *= i
    return result

num = 7
print('factorial of {} is {}'.format(num, factorial(num)))",Syntax Error,Recursion
Create a Python program that wraps a function with a given input sequence and prints out the output of the function.,"def my_function(x):
 return x * x

sequence = [1, 2, 3, 4, 5]","def wrapped(f, seq):
    for x in seq:
        print(f(x))

def my_function(x):
    return x * x

sequence = [1, 2, 3, 4, 5]

wrapped(my_function, sequence)

# Output: 
1
4
9
16
25","def wrapped(f, seq):
    for x in seq:
        print(name, f(x))

def my_function(x):
    return x * x

sequence = [1, 2, 3, 4, 5]

wrapped(my_function, sequence)

# Output: 
1
4
9
16
25",Syntax Error,String Manipulation
Create a Python program that accepts a sentence as an input and prints out the number of vowels present in that sentence.,This is a sentence.,"def count_vowels(sentence):
    vowels = ""aeiouAEIOU""
    count = 0
    for character in sentence:
        if character in vowels:
            count += 1
    return count

sentence = input(""Enter a sentence: "")

vowel_count = count_vowels(sentence)
print(f""Number of vowels in the sentence is {vowel_count}"")","def count_vowels(sentence):
    vowels = ""aeiouAEIOU""
    count = 0
    for character in sentence:
        if character in vowels:
            count += 1
    return count

sentence = input(""Enter a sentence: "")

vowel_count = count_vowels(sentence)
print(name, f""Number of vowels in the sentence is {vowel_count}"")",Syntax Error,Loops
Create a Python program which calculates the sum of the two given numbers.,"10, 20","sum = 0
a = 10
b = 20
sum = a + b

print(""The sum of"", a, ""and"", b, ""is"", sum)","sum = 0
a = 10
b = 20
sum = a + b

print(""The sum of"", a, ""and"", b, ""is"", sum)",correct,Recursion
Create a Python program which sorts elements of an array in ascending order.,"[5, 2, 1, 3, 6, 4]","def sort_ascending(array):
    for i in range(len(array)-1):
        for j in range(i, len(array)):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]

    return array

sort_ascending([5, 2, 1, 3, 6, 4]) # Output = [1, 2, 3, 4, 5, 6]","def sort_ascending(array):
    for i in range(len(array)-1):
        for j in range(i, len(array)):
            if array[i] > array[j]:
 ",Incomplete Answer,Recursion
You need to write a Python code to revert a given list back to its original form.,"my_list = [3, 2, 1, 4]",my_list = my_list[::-1],my_list = my_list[-1],Syntax Error,File I/O
Generate a secure random password in Python.,,"import string 
import random 

def secure_password(length): 
 password_characters = string.ascii_letters + string.punctuation + string.digits
 password = """".join(random.choice(password_characters) for i in range(length)) 
 return password 

secure_pw = secure_password(20) 
print(""Secure Password:"", secure_pw)","import string 
import random 

def secure_password(length) 
 password_characters = string.ascii_letters + string.punctuation + string.digits
 password = """".join(random.choice(password_characters) for i in range(length)) 
 return password 

secure_pw = secure_password(20) 
print(""Secure Password"", secure_pw)",Syntax Error,Recursion
Edit a given python program,"Input: A program to round off a number to the nearest integer 

def round_off(a): 
    if (a - math.floor(a) >= 0.5): 
        a = math.ceil(a) 
    else: 
        a = math.floor(a) 
    return a","import math

def round_off(a): 
    if (a - math.floor(a) >= 0.5): 
        a = math.ceil(a) 
    else: 
        a = math.floor(a) 
    return int(a)","import math

def round_off(a) 
    if (a - math.floor(a) >= 0.5) 
        a = math.ceil(a) 
    else 
        a = math.floor(a) 
    return int(a)",Syntax Error,OOP
"Build a web-service using the Flask python library that returns a ""Hello, world!"" message when accessed through a browser.",,"#Import the Flask library
from flask import flask

# Initialize the Flask app
app = Flask(__name__)

#Define the hello function
@app.route('/')
def hello():
    return ""Hello, world!""

# Have the Flask app listen on port 500
if __name__ == '__main__':
    app.run(port=500)","#Import the Flask library
from flask import flask

# Initialize the Flask app
app = Flask(__name__)

#Define the hello function
@app.rou",Incomplete Answer,Recursion
Generate a Python program to convert a given binary string to its equivalent decimal value.,1110,"def binary_to_decimal(n):
    num = n
    dec_value = 0
    base = 1
    temp = num
    
    while temp > 0:
        last_digit = temp % 10
        temp = temp // 10
        dec_value += last_digit * base
        base = base * 2
    return dec_value","def binary_to_decimal(n):
num = n
dec_value = 0
base = 1
temp = num

while temp > 0:
    last_digit = temp % 10
    temp = temp // 10
    dec_value += last_digit * base
    base = base * 2
return dec_value",Syntax Error,File I/O
Write a Python program to extract the text from an HTML document.,<h2>Hello World!</h2>,"from bs4 import BeautifulSoup

html = '<h2>Hello World!</h2>'
soup = BeautifulSoup(html, 'html.parser')
text = soup.find('h2').text

print(text) # Hello World!","from bs4 import BeautifulSoup

html = '<h2>Hello World!</h2>'
soup = BeautifulSoup(html, 'html.parser')
text = soup.find('h2').text

print(text) # Hello World!",correct,String Manipulation
Create a Python function that takes a list of numbers and returns the sum of the odd numbers in the list.,"[1, 2, 3, 4, 5]","def sumOdds(nums):
 total = 0
 for num in nums:
 if num % 2 != 0:
 total += num
 return total

nums = [1,2,3,4,5]
sum_odds = sumOdds(nums)
print(sum_odds) #output: 9","def sumOdds(nums):
 total = 0
 for num in nums:
 if num % 2 != 0:
 total += num
 r",Incomplete Answer,String Manipulation
Create a class in Python that represents a two-dimensional vector.,,"class Vector2D:
 def __init__(self, x = 0, y = 0):
  self.x = x
  self.y = y

def __str__(self):
 return '<' + str(self.x) + ', ' + str(self.y) + '>'

def add(self, other):
 return Vector2D(self.x + other.x, self.y + other.y)

def __add__(self, other):
 return self.add(other)

# testing
v1 = Vector2D(3, 4)
v2 = Vector2D(1, 2)
print(v1 + v2)

# Output: <4, 6>","class Vector2D:
 def __init__(self, x = 0, y = 0):
  self.x = x
  self.y = y

def __str__(self):
 return '<' + str(self.x) + ', ' + str(self.y) + '>'

def add(self, other):
 return",Incomplete Answer,File I/O
Convert the following JavaScript code to its equivalent Python code.,"const array = [1, 2, 3];","array = [1, 2, 3]","array = [1, 2, 3]",Syntax Error,Recursion
Create a class in Python to represent a 2-D point and implement a method for finding the Euclidean distance between the two points.,"p1 = (3, 4)
p2 = (7, 8)","class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def distance(self, point):
        x_diff = self.x - point.x
        y_diff = self.y - point.y
        return math.sqrt(x_diff**2 + y_diff**2)","class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def distance(self, point):
        x_diff = self.x - point.x
        y_diff = self.y - point.y
        return math.sqrt(x_diff**2 + y_diff**2)",Syntax Error,File I/O
Create a Python program that will simulate a dice roll with 4 sides.,,"import random

def rollDice():
result = random.randint(1,4)
print(""You rolled a ""+str(result))

rollDice()","import random

def rollDice():
result = random.randint(1,4)
print(""You rolled a ""+str(result))

rollDice()",Syntax Error,OOP
"Create a Docker container for a simple web application. The application should expose an endpoint for displaying ""Hello world"".",,"FROM python:3.7

WORKDIR /app

COPY requirements.txt .
RUN pip install -r requirements.txt

COPY . .
EXPOSE 5000

CMD [""python"", ""app.py""]

# File app.py

from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello():
 return 'Hello world!'

if __name__ == '__main__':
 app.run(host='0.0.0.0', debug=True)","FROM python:3.7

WORKDIR /app

COPY requirements.txt .
RUN pip install -r requirements.txt

COPY . .
EXPOSE 5000

CMD [""python"", ""app.py""]

# File app.py

from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello():
 return 'Hello world!'

if __name__ == '__main__':
 app.run(host='0.0.0.0', debug=True)",Syntax Error,Recursion
Modify the given Python program to sort a list of words in alphabetical order.,"words = ['cat', 'dog', 'bird', 'fish']","words = ['cat', 'dog', 'bird', 'fish']

sorted_words = sorted(words)

print(sorted_words)","words = ['cat', 'dog', 'bird', 'fish']

sorted_words = sorted(words)

print(sorted_words)",correct,Recursion
Optimize a Python function to reverse a string quickly by using slice notation.,,"def reverse_string(string):
    """"""
    Takes a string and returns it reversed quickly with Python
    slice notation.
    """"""
    return string[::-1]","def reverse_string(string):
    """"""
    Takes a string and returns it rever",Incomplete Answer,String Manipulation
Create a python program for the following purpose:,"Create a program that takes a positive integer N and an array A of length N, and outputs the total number of unique pairs of elements in A which sum up to an even number.","def count_even_pairs(N, A):
    n = 0
    for i in range(N):
        for j in range(i+1,N):
            if (A[i] + A[j]) % 2 == 0:
                n += 1
    return n","def count_even_pairs(N, A):
    n = 0
    for i in range(N):
        for j in range(i+1,N):
            if (A[i] + A[j]) % 2 == 0:
                n += 1
    return n",correct,File I/O
Create a Python program that prints out the words in a sentence in reverse order.,I love programming.,"def reverse_words(sentence):
    words = sentence.split()
    words.reverse()
    return "" "".join(words)

print(reverse_words(""I love programming.""))","def reverse_words(sentence):
    words = sentence.split()
    words.reverse()
    return "" "".join(words)

pritn(reverse_words(""I love programming.""))",Syntax Error,String Manipulation
Generate a program in Python to get the index of a particular word in a given sentence,"sentence=""Python is a programming language.""; word=""language""","def index_of_word(sentence, word):
    words = sentence.split()
    for index, value in enumerate(words):
        if value == word:
            return index
    return -1

sentence = ""Python is a programming language.""
word = ""language""
print(index_of_word(sentence, word))","def index_of_word(sentence, word):
    words = sentence.split()
    for index, value in enumerate(words):
        if value == word:
            return index
    return -1

sentence = ""Python is a programming language.""
word = ""language""
print(index_of_word(sentence, word))",correct,Recursion
Create a dictonary in Python with 5 key value pairs.,,"myDict = {
 'name': 'John',
 'age': 25,
 'height': 6.1,
 'city': 'New York',
 'job': 'Developer'
}","myDict = {
 'name': 'John',
 'age': 25,
 'height': 6.1,
 'city': 'New York',
 'job': 'Developer'
}",correct,OOP
Create a program to print out the pyramid pattern in Python.,rows = 5,"for i in range(rows):
    for j in range(i):
        print(""#"", end="""")
    print()","for i in range(rows):
    for j in range(i):
        print(""#"", end="""")
    print()",correct,File I/O
Design a Python program to find the maximum of two numbers.,"a = 25
b = 10","def maximum(a, b):
    if a > b:
        maxVal = a
    elif b > a:
        maxVal = b
    else:
        maxVal = a
    return maxVal

maxVal = maximum(a, b) 
print(""The maximum of two numbers is"", maxVal)","def maximum(a, b):
    if a > b:
        maxVal = a
    elif b > a:
        maxVal = b
    else:
        maxVal = a
    return maxVal

maxVal = maximum(a, b) 
print(""The maximum of two numbers is"", maxVal)",correct,File I/O
Optimize a code snippet in Python. The code snippet is a function for computing the factorial of a number.,"def factorial(n):
 if n < 1:
  return 1
 else:
  return n*factorial(n-1)","def factorial(n):
    if n == 0:
        return 1
    else:
        result = 1
        for i in range(1, n+1):
            result *= i
        return result","def factorial(n):
    if n == 0:
        return 1
    else:
        result = 1
        for i in range(1, n+1):
            result *= i
        return result",correct,Recursion
Write a script in Python that takes an array of numbers as parameter and returns the minimum and maximum values.,"array=[4, 6, 3, 2, 8, 10]","def min_max(array):
    min = array[0]
    max = array[0]

    for value in array:
        if value < min:
            min = value
        elif value > max:
            max = value
    
    return min, max

array=[4, 6, 3, 2, 8, 10]

min, max = min_max(array)

print(""Minimum: "", min)
print(""Maximum: "", max)","def min_max(array):
    min = array[0]
    max = array[0]

    for value in array:
        if value < min:
            min = value
        elif value > max:
            max = value
    
    return min, max

array=[4, 6, 3, 2, 8, 10]

min, max = min_max(array)

print(""Minimum: "", min)
print(""Maximum: "", max)",correct,Recursion
Generate a Random Forest classifier in Python to categorize emails into two classes - spam and not-spam.,,"# Random Forest classifier setup
from sklearn.ensemble import RandomForestClassifier

# Sample data 
X = [['email_1'], ['email_2'], ...]
y = [0, 1, ...] # 0 is not-spam, 1 is spam

# Train the model
model = RandomForestClassifier(n_estimators=100)
model.fit(X, y)

# Make predictions
predictions = model.predict(X_test)","# Random Forest classifier setup
from sklearn.ensemble import RandomForestClassifier

# Sample data 
X = [['email_1'], ['email_2'], ...]
y = [0, 1, ...] # 0 is not-spam, 1 is spam

# Train the model
model = RandomForestClassifier(n_estimators=100)
model.fit(X, y)

# Make predictions
predictions = model.predict(X_test)",correct,File I/O
Code a function in Python to identify a valid email address.,,"import re

def is_valid_email(email):
    regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
    return re.search(regex, email)","import re

def is_valid_email(email):
    regex = '^[a-z0-9]+[\.",Incomplete Answer,String Manipulation
Write a Python program to create a line chart displaying numbers from 1 to 15.,,"import matplotlib.pyplot as plt

data = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]

# making the line plot
plt.plot(data, '-o') # '-o' is used to connected the dots

# naming the x axis
plt.xlabel('x - axis')
# naming the y axis
plt.ylabel('y - axis')

# giving a title to my graph
plt.title('Line chart of numbers from 1 to 15')

# function to show the plot
plt.show()","import matplotlib.pyplot as plt

data = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]

# making the line plot
plt.plot(data, '-o') # '-o' is used to connected the dots

# naming the x axis
plt.xlabel('x - axis')
# naming the y axis
plt.ylabel('y - axis')

# giving a title to my graph
plt.title('Line chart of numbers from 1 to 15')

# function to show the plot
plt.show()",Syntax Error,OOP
"Using Python, optimize the following code and explain the optimizations you applied.","def count_words(text):
    ''' Counts the number of words in a text '''
    word_count = 0
    for word in text.split(' '):
        word_count += 1
    return word_count","def count_words(text):
    ''' Counts the number of words in a text '''
    # Optimization #1: Replacing the loop and using Python's count method
    word_count = len(text.split(' ')) 
    return word_count","def count_words(text):
    ''' Counts the number of words in a text '''
    # Optimization #1: Replacing the loop and using Python's count method
    word_count = len(text.split(' ')) 
    return word_count",correct,String Manipulation
Develop a regular expression in Python to match all numeric strings.,,"import re 
  
# Regular expression to match all numeric strings 
pattern = '^[0-9]+$'
  
# Input string 
string = '123456789'
  
# Matching a pattern 
result = re.match(pattern, string) 
if result: 
    print(""String is a valid numeric string"") 
else: 
    print(""String isn't a valid numeric string"")","import re 
  
# Regular expression to match all numeric strings 
pattern = '^[0-9]+$'
  
# Input string 
string = '123456789'
  
# Matching a pattern 
result = re.match(pattern, string 
if result: 
    print(""String is a valid numeric string"" 
else: 
    print(""String isn't a valid numeric string""",Syntax Error,Loops
Develop a Python program to check if a number is an Armstrong number.,,"def isArmstrong(x): 
  
    # Calculate the number of 
    # digits in x 
    n = len(str(x)) 
  
    sum1 = 0
  
    # For every digit calculate 
    # its sum of nth power 
    temp = x 
    while temp > 0: 
        d = temp % 10
        sum1 = sum1 + d ** n 
        temp = temp//10
  
    # Check whether sum1 is equal to x 
    if sum1 == x: 
        return True
    return False","def isArmstrong(x): 
  
    # Calculate the number of 
    # digits in x 
    n = len(str(x)) 
  
    sum1 = 0
  
    # For every digit calculate 
    # its sum of nth power 
    temp = x 
    while temp > 0: 
        d = temp % 10
        sum1 = sum1 + d ** n 
        temp = temp//10
  
    # Check whether sum1 is equal to x 
    if sum1 == x: 
        return True
    return False",correct,File I/O
Write a function to extract the maximum numeric value from a string by using regex.,,"import re 
def extract_max(input): 
	numbers = re.findall('\d+',input) 
	numbers = map(int,numbers) 
	return max(numbers)","import re 
def extract_max(input): 
	numbers = re.findall('\",Incomplete Answer,String Manipulation
Write a Python code fragment to print all the leap years between two years.,"start_year = 2010
end_year = 2020","for year in range(start_year, end_year+1):
    if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):
        print(year)","for year in range(start_year, end_year+1:
    if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0:
        print(year",Syntax Error,Recursion
Generate a universal one-time password (OTP) algorithm in Python.,,"import secrets

def get_otp(length=6):
    digits = ""0123456789""
    otp = """"
    for i in range(length):
        otp += secrets.choice(digits)  
    return otp

print(get_otp())","import secrets

def get_otp(length=6):
    digits = ""0123456789""
    otp = """"
    for i i",Incomplete Answer,String Manipulation
"Given a stream of data, write a Python program to classify the data into two categories.",,"def classify(data):
    # Initialize categories     
    categories = [0, 1]   
    threshold = 0.5  

    # Make predictions using a classifier 
    predictions = classifier.predict(data)  

    # Classify the data based on the predictions     
    classified_data = [categories[int(pred > threshold)] for pred in predictions]   

    return classified_data","def classify(data):
    # Initialize categories     
    categories = [0, 1]   
    threshold = 0.5  

    # Make predictions using a classifier 
    predictions = classifier.predict(data)  

    # Classify the data based on the predictions     
    classified_data = [categories[int(pred > threshold)] for pred in predictions]   

    return classified_data",correct,Loops
Write a python function to find common divisor between two numbers in a given pair.,,"def ngcd(x,y):
    i=1
    while(i<=x and i<=y):
        if(x%i==0 and y%i == 0):
            gcd=i;
        i+=1
    return gcd;
def num_comm_div(x,y):
  n = ngcd(x,y)
  result = 0
  z = int(n**0.5)
  i = 1
  while(i <= z):
    if(n % i == 0):
      result += 2 
      if(i == n/i):
        result-=1
    i+=1
  return result","def ngcd(x,y):
    i=1
    while(i<=x and i<=y):
        if(x%i==0 and y%i == 0):
            gcd=i;
        i+=1
    return gcd;
def num_comm_div(x,y):
  n = ngcd(x,y)
  result = 0
  z = int(n**0.5)
  i = 1
  while(i <= z):
    if(n % i == 0):
      result += 2 
      if(i == n/i):
        result-=1
    i+=1
  return result",correct,Loops
Create a payment processing system written in Python using the Stripe API.,,"import stripe 

def make_payment(token, amount):
    stripe.api_key = ""sk_test_xxx""

    charge = stripe.Charge.create(
        amount=amount,
        currency=""usd"",
        source=token,
        description=""example charge""
    )

    return charge

token = ""tok_xxx""
amount = 500

charge = make_payment(token, amount)
print(charge)","import stripe 

def make_payment(token, amount):
    stripe.api_key = ""sk_test_xxx""

    charge = stripe.Charge.create(
        amount=amount,
        currency=""usd"",
",Incomplete Answer,OOP
Build a program in Python to fetch the details of a user in a given language.,,"def get_user_details(language):
    user_data = {}
    # read the data from a file
    with open(f'data/{language}_users.csv', 'r') as csvfile:
        reader = csv.reader(csvfile)
        for row in reader:
            user_data[row[0]] = row[1:]
    return user_data

users = get_user_details('en')","def get_user_details(language):
    user_data = {}
    # read the data from a file
    with open(f'data/{language}_users.csv', 'r') as csvfile:
      ",Incomplete Answer,OOP
Create a basic web scraper in Python to extract text from a web page.,,"import requests
from bs4 import BeautifulSoup

r = requests.get('https://example.com')
html = r.text
soup = BeautifulSoup(html)

text = soup.find('div', {'class': 'text'}).text
print(text)","import requests
from bs4 import BeautifulSoup

r = requests.get('https://example.com')
html = r.text
soup = BeautifulSoup(html)

text = soup.find('div', {'class': 'text'}).text
print(text)",correct,OOP
Generate a random password in Python using at least eight characters including numbers and both uppercase and lowercase letters.,,"import random 
def generate_password(): 
    chars = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890@#$%^&*""
    length = 8 
    password = """" 
    for i in range(length): 
        password += random.choice(chars)
    return password

print(generate_password())","import random 
def generate_password(): 
    chars = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890@#$%^&*""
    length = ",Incomplete Answer,OOP
Create a function in Python to check if a string contains a palindrome. The function should be able to identify if a given string contains a palindrome of at least 4 characters in length.,,"def is_palindrome(string):
 rev_str = string[::-1]
 for i in range(len(string) - 3):
  surr_str = string[i:i+4]
  if rev_str[i:i+4] == surr_str:
   return True
 return False","def is_palindrome(string):
 rev_str = string[::-1]
 for i in range(len(string) - 3):
 ",Incomplete Answer,OOP
Create a python program to simulate basic Twitter functionality,,"def post_tweet(username, tweet):
    tweet_db.addTweet(username, tweet)

def get_tweets(username):
    return tweet_db.getTweets(username)

def delete_tweet(username, tweetId):
    tweet_db.deleteTweet(username, tweetId)","def post_tweet(username, tweet):
tweet_db.addTweet(username, tweet)

def get_tweets(username):
return tweet_db.getTweets(username)

def delete_tweet(username, tweetId):
tweet_db.deleteTweet(username, tweetId)",Syntax Error,String Manipulation
Write a Python program to perform a series of transformations on a given list.,"[1,2,3,4,5,6,7]

Transformations: Multiply each element by 2, select only odd elements, subtract 3 from each remaining element.","def transformations(arr):
    result = [x*2 for x in arr if x%2 != 0]
    result = [x-3 for x in result]
    return result","def transformations(arr):
    result = [x*2 for x in arr if x%2 != 0]
    result = [x-3 for x in result]
    return result",correct,Recursion
Build a Python program to compute the sum of the two given integers.,"a = 10
b = 20","def add_two_ints(a, b):
    return a + b","def add_two_ints(a, b):
return a + b",Syntax Error,OOP
Produce a Python program that calculates the average of a list of numbers.,"[1,2,3,4,5,6]","def average(numbers):
	total = 0
	for num in numbers:
		total += num
	return total/len(numbers)

nums = [1,2,3,4,5,6]
print(""Average of the list of numbers is:"", average(nums))","def average(numbers):
	total = 0
	for num in numbers:
		total += num
	return total/len(numbers)

nums = [1,2,3,4,5,6]
print(""Average of the list of numbers is:"", average(nums))",Syntax Error,File I/O
Create a Python program to swap the first and last items in a list.,"items = [1, 2, 3, 4]","def swap(items):
    temp = items[0]
    items[0] = items[-1]
    items[-1] = temp
    return items","def swap(items):
temp = items[0]
items[0] = items[-1]
items[-1] = temp
return items",Syntax Error,File I/O
Write a Python script to compute the mean of a given set of numbers.,"[78.3, 75.1, 76.7, 78.2]","def mean(list_of_numbers):
    total = 0
    for num in list_of_numbers:
        total += num
    return total / len(list_of_numbers)

list_of_numbers = [78.3, 75.1, 76.7, 78.2]
mean_of_list = mean(list_of_numbers)
print(mean_of_list)","def mean(list_of_numbers):
    total = 0
    for num in list_of_numbers:
        total += num
    return total / len(",Incomplete Answer,String Manipulation
Write a function in Python that takes a list and prints out all the elements in the list.,"list1 = [1, 2, 3, 4, 5]","def printList(list1): 
    for x in list1: 
        print(x) 

printList(list1)","def printList(list1) 
    for x in list1 
        print(x) 

printList(list1)",Syntax Error,File I/O
Create a Python program that sorts a list of integers in increasing order.,,"def sort_integers(nums):
    for i in range(len(nums)): 
        for j in range(i+1, len(nums)): 
            if nums[i] > nums[j]: 
                nums[i], nums[j] = nums[j], nums[i]
    return nums","def sort_integers(nums):
    for i in range(len(nums)): 
        for j in range(i+1, len(nums)): 
  ",Incomplete Answer,OOP
Generate a description of an object with a suite of Python list comprehensions.,,"colors = ['red', 'green', 'blue', 'purple']
shapes = ['square', 'circle', 'triangle', 'hexagon']
objects = [{'color': color, 'shape': shape} for color in colors for shape in shapes]

print(objects)","colors = ['red', 'green', 'blue', 'purple']
shapes = ['square', 'circle', 'triangle', 'hexagon']
o",Incomplete Answer,OOP
Create a Python script that takes a word as an input and returns a list of synonyms for that word.,Word (e.g. happy),"import requests
import json

word = input(""Enter a word: "")

url = ""https://api.datamuse.com/words?rel_syn="" + word

response = requests.get(url)

if response.status_code == 200:
 json_data = json.loads(response.text)
 synonyms = [item['word'] for item in json_data]
 print(synonyms)
else:
 print(""Something went wrong!"")","import requests
import json

word = input(""Enter a word "")

url = ""https//api.datamuse.com/words?rel_syn="" + word

response = requests.get(url)

if response.status_code == 200
 json_data = json.loads(response.text)
 synonyms = [item['word'] for item in json_data]
 print(synonyms)
else
 print(""Something went wrong!"")",Syntax Error,String Manipulation
Write a python function to find the last digit of a given number.,,"def last_Digit(n) :
    return (n % 10) ",def last_Digit(n) :,Incomplete Answer,File I/O
Write a Python program to query a MySQL Server and display the results in a readable format,,"import mysql.connector

# Connect to local MySQL Server
conn = mysql.connector.connect(
    user='root',
    password='root',
    host='localhost',
    database='test'
)
cursor = conn.cursor()

# Execute SQL Query
sql = ""SELECT * FROM users""
cursor.execute(sql)

# Fetch and print results
data = cursor.fetchall()
for record in data:
    print(record)","import mysql.connector

# Connect to local MySQL Server
conn = mysql.connector.connect(
    user='root',
    password='root',
    host='localhost',
    database='test'

cursor = conn.cursor(

# Execute SQL Query
sql = ""SELECT * FROM users""
cursor.execute(sql

# Fetch and print results
data = cursor.fetchall(
for record in data:
    print(record",Syntax Error,String Manipulation
"Design a function in Python which takes a list of numbers as the input, and returns the maximum element of the list.","[1, 5, 3, 9, 0, 4, 2]","def max_list_element(list):
    max_list_element = None
    for element in list:
        if max_list_element is None or max_list_element < element:
            max_list_element = element
    return max_list_element","def max_list_element(list):
max_list_element = None
for element in list:
    if max_list_element is None or max_list_element < element:
        max_list_element = element
return max_list_element",Syntax Error,Recursion
Construct an algorithm in Python to calculate the number of possible outcomes of flipping a coin 8 times.,,"def count_outcomes(n):
  if n == 0:
    return 1 
  else: 
    return count_outcomes(n-1) + 2**n

print(count_outcomes(8)) # 256","def count_outcomes(n):
  if n == 0:
    return 1 
  else: 
    return count_outcomes(n-1) + 2**n

print(count_outcomes(8)) # 256",correct,File I/O
Write Python code to maximize this objective function.,"def obj_func(x):
    return x**2 - 4*x + 3","def maximize_obj_func(x):
    return 2*x - 4

x_opt = maximize_obj_func(x)
opt_val = obj_func(x_opt)
print(""Optimum value of objective function: "", opt_val)","def maximize_obj_func(x):
    return 2*x - 4

x_opt = maximize_obj_func(x)
opt_val = obj_func(x_opt)
print(""Optimum value of objective function: "", opt_val)",correct,File I/O
Rewrite this C++ loop in Python:,"for(int i=0; i<10; i++) {
		cout << i;
	}","for i in range(10):
    print(i)","for i in range(10):
    print(i)",correct,OOP
Write a Python code to sort a dictionary by values,"dictionary = {
  ""red"": 5,
  ""blue"": 6,
  ""yellow"": 9
}","sorted_dictionary = sorted(dictionary.items(), key=lambda x: x[1])
print(sorted_dictionary)","sorted_dictionary = sorted(dictionary.items(), key=lambda x: x[1])
print(sorted_dictionary)",correct,File I/O
Create a python program that takes in temperature readings and prints if it is below 15 degrees or over 30 degrees.,,"def check_temperature(temp):
  if temp <= 15:
    print('It is below 15 degrees.')
  elif temp >= 30:
    print('It is over 30 degrees.')
  else:
    print('Temperature is normal.')","def check_temperature(temp)
  if temp <= 15
    print('It is below 15 degrees.')
  elif temp >= 30
    print('It is over 30 degrees.')
  else
    print('Temperature is normal.')",Syntax Error,Recursion
Develop a program in Python to identify the longest string in a list of strings.,"[‘apple’, ‘bee’, ‘cat’]","def longest_string(string_list):
    longest_str = string_list[0]
    longest_len = len(longest_str)
    for string in string_list:
        if len(string) > longest_len:
            longest_str = string
            longest_len = len(string)
    return longest_str

string_list = ['apple', 'bee', 'cat']
longest_str = longest_string(string_list)
print(longest_str)","def longest_string(string_list):
    longest_str = string_list[0]
    longest_len = len(longest_str)
    for string in string_list:
        if len(string) > longest_len:
            longest_str = string
            longest_len = len(string)
    return longest_str

string_list = ['apple', 'bee', 'cat']
longest_str = longest_string(string_list)
print(longest_str)",correct,Recursion
"Using the given input, sort a list containing both numerical and strings data types in Python.","[1, 'c', 3, 'a', 2, 'b']","# define list 
lst = [1, 'c', 3, 'a', 2, 'b']

# sort list
sorted_lst = sorted(lst, key=lambda x:str(x))

# print sorted list
print(sorted_lst)","# define list 
lst = [1, 'c', 3, 'a', 2, 'b']

# sort list
sorted_lst = sorted(lst, key=lambda x:str(x))

# print sorted list
print(sorted_lst)",correct,File I/O
Create a Python program to remove all the duplicates from a given list.,"[1, 4, 2, 5, 6, 4, 1, 5]","def remove_duplicates(lst): 
  non_duplicate_lst = [] 

  for i in lst: 
    if i not in non_duplicate_lst: 
      non_duplicate_lst.append(i) 

  return non_duplicate_lst 

lst = [1, 4, 2, 5, 6, 4, 1, 5]
print(remove_duplicates(lst))","def remove_duplicates(lst): 
  non_duplicate_lst = [] 

  for i in lst: 
    if i not in non_duplicate_lst: 
      no",Incomplete Answer,Loops
Write a Python code snippet to sum the elements of two given lists.,"list1 = [1, 2, 3]
 list2 = [4, 5, 6]","def sum_lists(list1, list2):
  return [a + b for a, b in zip(list1, list2)]","def sum_lists(list1, list2:
  return [a + b for a, b in zip(list1, list2]",Syntax Error,Loops
"Develop a web socket server with Python that will communicate with a web client, and process messages received from the user.",,"import asyncio
import websockets

async def handler(websocket, path):
    message = await websocket.recv()
    print(f""Received {message}"")
    await websocket.send(message)

start_server = websockets.serve(handler, 'localhost', 8765)

asyncio.get_event_loop().run_until_complete(start_server)
asyncio.get_event_loop().run_forever()","import asyncio
import websockets

async def handler(websocket, path):
message = await websocket.recv()
print(f""Received {message}"")
await websocket.send(message)

start_server = websockets.serve(handler, 'localhost', 8765)

asyncio.get_event_loop().run_until_complete(start_server)
asyncio.get_event_loop().run_forever()",Syntax Error,String Manipulation
Write a function to remove the duplicates from the given tuple.,,"def remove_tuple(test_tup):
  res = tuple(set(test_tup))
  return (res) ","def remove_tuple(test_tup):
  res = tuple(set(test_tup))
  return (res) ",correct,String Manipulation
Edit the following python program to ensure that it runs correctly.,"def addNumbers(a, b):
    prop = 10 * a + b
    return product","def addNumbers(a, b):
    product = 10 * a + b
    return product","def addNumbers(a, b):
    produc",Incomplete Answer,File I/O
Write a code in Python to add two given numbers.,"x = 5 
y = 11","#Function to add two given numbers
def add(x, y):
   return x + y
  
# Print the sum
print(add(x, y))","#Function to add two given numbers
def add(x, y)
   return x + y
  
# Print the sum
print(add(x, y))",Syntax Error,OOP
Optimize this code in Python to reduce the time complexity from O(n^2) to O(nlogn).,"def maximum_two(arr):
    m1 = m2 = float('-inf')
    for n in arr:
        if n > m2:
            if n > m1:
                m1, m2 = n, m1
            else:
                m2 = n

    return (m1, m2)","def maximum_two(arr):
    arr.sort(reverse=True) 
    m1 = arr[0] 
    m2 = arr[1]
    return (m1, m2)","def maximum_two(arr):
    arr.sort(reverse=True) 
    m1 = arr[0] 
    m2 = arr[1]
    return (m1, m2)",correct,File I/O
How can you return two values from a Python function?,,"There are multiple ways to return multiple values from a Python function. One way is to use a tuple inside the function and return it. Another way is to use Python's 'return' statement to return multiple values. For example:

def get_multi_values():
    value1 = ""ABC""
    value2 = 123
    return value1, value2

value1, value2 = get_multi_values()
print(value1, value2)","There are multiple ways to return multiple values from a Python function. One way is to use a tuple inside the function and return it. Another way is to use Python's 'return' statement to return multiple values. For example

def get_multi_values()
    value1 = ""ABC""
    value2 = 123
    return value1, value2

value1, value2 = get_multi_values()
print(value1, value2)",Syntax Error,Loops
Generate a function in Python that returns a random element from a given list.,"[""cat"", ""dog"", ""bird""]","import random

def getRandomElement(list):
  random_index = random.randint(0,len(list)-1)
  return list[random_index]

list = [""cat"", ""dog"", ""bird""]
random_element = getRandomElement(list)
print(random_element)
// Output: one of [""cat"", ""dog"", ""bird""] randomly","import random

def getRandomElement(list):
  random_index = random.randint(0,len(list)-1)
  return list[random_index]

list = [""cat"", ""dog"", ""bird""]
random_element = getRandomElement(list)
print(random_element)
// Output: one of [""cat"", ""dog"", ""bird""] randomly",correct,Recursion
Write a function in Python to find the sum of two arguments.,,"def sum(num1, num2): 
    return num1 + num2","def sum(num1, num2): 
    return num1 + num2",Syntax Error,String Manipulation
Create a function in Python to print a random element from a list.,,"import random

def print_random_element(list):
    index = random.randint(0, len(list)-1)
    print(list[index])","import random

def print_random_element(list):
    index",Incomplete Answer,OOP
Think of a data structure and implement it using Python.,,"class Queue:
    def __init__(self):
        self.queue = []

    def enqueue(self, element):
        self.queue.append(element)

    def dequeue(self):
        return self.queue.pop(0)","class Queue:
    def __init__(self):
        self.queue = []

    def enqueue(self, element):
        self.queue.append(element)

    def dequeue(self):
        return self.queue.pop(0)",Syntax Error,OOP
Create a Python program to check for anagrams of a string.,"""listen"", ""silent""","def anagramCheck(str1, str2):
    if (len(str1) != len(str2)):
        return False

    str1 = sorted(str1)
    str2 = sorted (str2)

    # Compare each character in str1 with
    # each character in str2
    for i in range( len( str1 ) ):
        if (str1[i] != str2[i]):
            return False
 
    return True","def anagramCheck(str1, str2):
    if (len(str1) != len(str2)):
        return False

    str1 = sorted(str1)
    str2 = sorted (str2)

    # Compare each char",Incomplete Answer,File I/O
Create a Python program to check if a list is sorted in ascending order.,"listA = [1, 5, 9, 10]","def isListAscending(listA): 
    return all(listA[i] <= listA[i+1] for i in range(len(listA)-1)) 

# Driver code 
listA = [1, 5, 9, 10] 
# listA = [10, 9, 5, 1] 

# Print result 
print(isListAscending(listA))","def isListAscending(listA): 
    return all(listA[i] <= listA[i+1] for i in range(len(listA)-1)) 

# Driver code 
listA = [1, 5, 9, 10] 
# listA = [10, 9, 5, 1] 

# Print result 
print(isListAscending(listA))",correct,Recursion
Find and fix the errors in this Python code.,"a = 10
b = 15
c = a b

print (c)","a = 10
b = 15
c = a + b

print(c)","a = 10
b = 15
c ",Incomplete Answer,OOP
Create a class in Python to count the instances of an object.,,"class Counter:
 def __init__(self):
  self.count = 0
 
 def increment(self):
  self.count += 1
 
 def get_count(self):
  return self.count","class Counter:
 def __init__(self):
  self.count = 0
 
 def increment(self):
  self.count += 1
 
 def get_count(self):
  return self.count",Syntax Error,OOP
"Classify the following Python code as a linear search, binary search, or other.","def search(items, item):
    for i in range(len(items)):
        if items[i] == item: 
            return i
    return -1",This is a linear search.,This is a linear search.,correct,Loops
Develop a program in Python that can convert a given temperature from Celsius to Fahrenheit.,,"def celsius_to_fahrenheit(celsius):
    return celsius * (9/5) + 32

temperature = celsius_to_fahrenheit(32)
 
print(""32°C is equal to %.2f°F"" % temperature)","def celsius_to_fahrenheit(celsius):
    return celsius * (9/5) + 32

temperatu",Incomplete Answer,Loops
Generate a Python script to print an inverted triangle pattern made up of asterisks.,5,"def inverted_triangle(length):
    for i in range(length, 0, -1):
        for j in range(length - i):
            print(' ', end="""")
        for j in range(2 * i - 1):
            print('*', end="""")
        print()

inverted_triangle(5)

# Output:
# *****
#  ***
#   *","def inverted_triangle(length):
for i in range(length, 0, -1):
    for j in range(length - i):
        print(' ', end="""")
    for j in range(2 * i - 1):
        print('*', end="""")
    print()

inverted_triangle(5)

# Output:
# *****
#  ***
#   *",Syntax Error,Loops
Create a Python algorithm to calculate the maximum profit that can be earned given a stock's price list for the day.,"`List of prices = [5, 7, 1, 3, 6, 8]`","def maxProfit(prices):
 maxProfit = 0
 minPrice = float('inf')

 for price in prices:
 minPrice = min(minPrice, price)
 maxProfit = max(maxProfit, price - minPrice)

 return maxProfit

# example
maxProfit([5, 7, 1, 3, 6, 8]) # returns 7","def maxProfit(prices):
 maxProfit = 0
 minPrice = float('inf')

 for price in prices:
 minPrice = min(minPrice, price)",Incomplete Answer,OOP
Create a recursive Python function to calculate the Fibonacci sequence up to the given number n.,,"def fibonacci(n):
  if n <= 1:
    return n
  else:
    return fibonacci(n-1) + fibonacci(n-2)","def fibonacci(n):
  if n <= 1:
    return n
  else:
    return fibonacci(n-1) + fibonacci(n-2)",correct,String Manipulation
Create a function in Python to create a list of the first 10 numbers divisible by five.,,"def five_divisible():
  i = 0
  my_list = []
  while i < 10:
    if i % 5 == 0:
      my_list.append(i)
    i = i + 1
  return my_list

print(five_divisible())","def five_divisible():
  i = 0
  my_list = []
  while i < 10:
    if i % 5 == 0:
      my_list.append(i)
    i = i + 1
  return my_list

print(name, five_divisible())",Syntax Error,OOP
Convert the following algorithm into a recursive Python function,"def sum_digits(n):
    total = 0
    while n > 0:
        digit = n % 10
        total += digit
        n //= 10
    return total","def sum_digits(n):
    """"""
    Calculates the sum of all digits of a number

    Args:
        n (int): The number

    Returns:
        int: The sum of the digits
    """"""
    if n == 0:
        return 0
    return n % 10 + sum_digits(n // 10)","def sum_digits(n):
""""""
Calculates the sum of all digits of a number

Args:
    n (int): The number

Returns:
    int: The sum of the digits
""""""
if n == 0:
    return 0
return n % 10 + sum_digits(n // 10)",Syntax Error,OOP
Optimize an algorithm written in Python that sums up the numbers in an array.,"[2, 4, 6, 8]","def sum_numbers(arr):
    result = 0
    for num in arr:
        result += num
    return result

arr = [2, 4, 6, 8]

print(sum_numbers(arr))

# optimized version
def optimised_sum_numbers(arr):
    return sum(arr)

print(optimised_sum_numbers(arr))","def sum_numbers(arr):
    result = 0
    for num in arr:
        result += num
    return result

arr = [2, 4, 6, 8]

print(sum_numbers(arr))

# optimized version
def optimised_sum_numbers(arr):
    return sum(arr)

print(optimised_sum_numbers(arr))",correct,String Manipulation
Write a python script that normalizes the given text.,The cat and rat chAsEd eAch other,"import re

def normalize_text(text):
    return re.sub(r'[^\w\s]','',text.lower())

text = ""The cat and rat chAsEd eAch other""
print(normalize_text(text))

# Output: the cat and rat chased each other","import re

def normalize_text(text):
    return re.sub(r'[^\w\s]','',text.lower())

text = ""The cat and rat chAsEd eAch other""
print(normalize_text(text))

# Output: the cat and rat chased each other",correct,Recursion
"Create a Python function that takes a dictionary as an argument, and returns the value with maximum frequency in that dictionary.","dic = {1: 'a', 2: 'b', 3: 'b', 4: 'c'}","def max_freq_val(dic): 
    max_freq = 0
    max_val = None
    for val in dic.values():
        if dic.values().count(val) > max_freq:
            max_freq = dic.values().count(val)
            max_val = val
    
    return max_val

max_val = max_freq_val(dic)
print(max_val)","def max_freq_val(dic): 
    max_freq = 0
    max_val = None
    for val in dic.values():
        if dic.values().count(val) > max_freq:
            max_freq = dic.values().count(val)
            max_val = val
    
    return max_val

max_val = max_freq_val(dic)
print(max_val)",correct,Loops
Generate code for a key-value store using the Python dictionary.,,"def set_value(store, key, value):
  store[key] = value

def get_value(store, key):
  return store[key]

def delete_value(store, key):
  del store[key]","def set_value(store, key, value):
  store[key] = value

def get_value(store, key):
  return store[key]

def delete_value(store, key):
  del store[key]",correct,Recursion
Find the most frequent value in the given array in Python.,"[2, 3, 4, 2, 5, 3]","from collections import Counter

def most_frequent(input_list):
    count = Counter(input_list)
    max_freq = max(count.values())
    for num, freq in count.items():
        if freq == max_freq:
            most_frequent_element = num
    return most_frequent_element

result = most_frequent([2, 3, 4, 2, 5, 3])
print(result)","from collections import Counter

def most_frequent(input_list):
    count = Counter(input_list)
    max_freq = max(count.values())
    for num, freq in count.items():
        if freq == max_freq:
            most_frequent_element = num
    return most_frequent_element

result = most_frequent([2, 3, 4, 2, 5, 3])
print(name, result)",Syntax Error,File I/O
Design a loop in Python to iterate over the elements of a list and print the elements in reverse order.,"[10, 15, 20]","my_list = [10, 15, 20]
for i in my_list[::-1]:
    print(i)","my_list = [10, 15, 20]
for i in my_list[-1]
    print(i)",Syntax Error,Loops
Code an algorithm in Python to compute the Fibonacci sequence.,"A positive integer n.

n = 10","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Driver Program 
print(fibonacci(10)) 

# Output: 55","def fibonacci(n): 
a = 0
b = 1
if n < 0: 
    print(""Incorrect input"") 
elif n == 0: 
    return a 
elif n == 1: 
    return b 
else: 
    for i in range(2,n): 
        c = a + b 
        a = b 
        b = c 
    return b 
  
# Driver Program 
print(fibonacci(10)) 

# Output: 55",Syntax Error,File I/O
Create a Python script to extract a list of unique words from the given text.,This is a sample text with some duplicate entries,"import re

text = 'This is a sample text with some duplicate entries'
words_list = re.findall(r'\w+', text)
unique_words = set(words_list)

print(unique_words)
# output: {'some', 'is', 'duplicate', 'with', 'entries', 'text', 'This', 'a'}","import re

text = 'This is a sample text with some duplicate entries'
words_list = re.findall(r'\w+', text)
unique_wor",Incomplete Answer,File I/O
Generate a Python program to create a dictionary and add elements to it.,,"def create_dict():
    my_dict = {} 
  
    # adding elements one at a time 
    my_dict['a'] = 'alpha'
    my_dict['g'] = 'gamma'
    my_dict['o'] = 'omega'
  
    print(my_dict) 
    return my_dict","def create_dict():
    my_dict = {} 
  
    # adding elements one at a time 
    my_dict['a'] = 'al",Incomplete Answer,Loops
Write a Python function that takes a string and reverses it.,,"def reverse_string(string):
    return string[::-1]","def reverse_string(string):
    return string[::-1]",correct,OOP
Generate a function for vector addition in Python.,,"def vector_addition(v1, v2):
    result = [v1[i] + v2[i] for i in range(len(v1))]
    return result

result = vector_addition([1,2,3], [4,5,6])
print(result)","def vector_addition(v1, v2):
    result = [v1[i] + v2[i] for i in range(len(v1",Incomplete Answer,String Manipulation
Write a Python program to convert a given binary number to decimal.,,"def binary_to_decimal(binary):
    decimal, i = 0, 0
    while binary != 0: 
        dec = binary % 10
        decimal = decimal + dec * pow(2, i) 
        binary = binary//10
        i += 1
    return decimal","def binary_to_decimal(binary):
    decimal, i = 0, 0
    while binary != 0: 
        dec = binary % 10
        decimal = decimal + dec * pow(2, i) 
        binary = binary//10
        i += 1
    return decimal",Syntax Error,Loops
Create a function to replace all instances of a string in another string.,"Input string ""I love Python programming language"" and replace all the 'Python' with 'JavaScript'","def replace_string(old, new, s): 
    return s.replace(old, new) 


input_string = ""I love Python programming language""
new_string = replace_string(""Python"", ""JavaScript"", input_string)
print(new_string)

# Output: I love JavaScript programming language","def replace_string(old, new, s): 
    return s.replace(old, new) 


input_string = ""I love Python programming language""
new_string = replace_string(""Python"", ""JavaScript"", input_string)
pritn(new_string)

# Output: I love JavaScript programming language",Syntax Error,Recursion
Generate a Python class that stores a collection of words and counts the frequency of each word.,,"class WordFrequency:
    def __init__(self):
        self.words = {}

    def add_word(self, word):
        if word not in self.words:
            self.words[word] = 1
        else:
            self.words[word] += 1

    def count_frequency(self):
        for word, count in self.words.items():
            print(f""{word}: {count}"")","class WordFrequency:
    def __init__(self):
        self.words = {}

    def add_word(self, word):
        if word not in self.words:
            self.words[word] = ",Incomplete Answer,Loops
Create a method to find the maximum element in a 2-D array in Python.,"Array: 
[[1, 2, 3], 
[4, 5, 6],
[7, 8, 9]]","def maxElement2DArray(arr):
    maxElement = arr[0][0]

    for row in range(len(arr)):
        for column in range(len(arr[row])):
            maxElement = max(maxElement, arr[row][column])
    return maxElement","def maxElement2DArray(arr):
    maxElement = arr[0][0]

    for row in range(len(arr)):
        for column in range(len(arr[row])):
            maxElement = max(maxElement, arr[row][column])
    return maxElement",correct,OOP
Design an algorithm in Python to find all the prime factors of an input number.,,"def prime_factors(n):
    factors = []
    d = 2
    while n > 1:
        while n % d == 0:
            factors.append(d)
            n = n/d
        d = d + 1

    return factors","def prime_factors(n):
    factors = []
    d = 2
    while n > 1:
        while n % d == ",Incomplete Answer,File I/O
"Create a python script to generate a set of random numbers between 1 and 10, and print out the largest number in the set.",,"import random

random_numbers = [random.randint(1, 10) for _ in range(20)]
max_number = max(random_numbers)

print(random_numbers)
print(f'The largest number is {max_number}')","import random

random_numbers = [random.randint(1, 10) for _ in range(20)]
max_number =",Incomplete Answer,OOP
Create a python script to parse a given XML document.,,"import xml.etree.ElementTree as ET

def parse_xml_document(filename):
    tree = ET.parse(filename) 
    root = tree.getroot() 

    # loop through the items in XML 
    for child in root: 
        print(child.attrib)","import xml.etree.ElementTree as ET

def parse_xml_document(filename)
    tree = ET.parse(filename) 
    root = tree.getroot() 

    # loop through the items in XML 
    for child in root 
        print(child.attrib)",Syntax Error,Recursion
Construct a Python program that calculates a person's BMI given their height and weight.,"Weight: 70 kg
Height:  1.80 m","def calculate_bmi(weight, height):
    bmi = weight / (height**2)
    return bmi

weight = 70
height = 1.80

bmi = calculate_bmi(weight, height)
print(""BMI: "" + str(bmi))","def calculate_bmi(weight, height):
    bmi = weight / (height**2)
    return bmi

weight = 70
height = 1.80

bmi = calculate_bmi(weight, height)
print(""BMI: "" + str(bmi))",correct,String Manipulation
Create a class in Python that will represent a tree. The class should include methods for adding and removing nodes.,,"class Tree:
 def __init__(self, data=None):
 self.data = data
 self.children = []

 def add_child(self, obj):
 self.children.append(obj)

 def remove_child(self, obj):
 self.children.remove(obj)


root = Tree('root')
node1 = Tree('node1')
node2 = Tree('node2')

root.add_child(node1)
root.add_child(node2)","class Tree:
 def __init__(self, data=None):
 self.data = data
 self.children = []

 def add_child(self, obj):
 self.children.append(obj)

 def remove_child(self, obj):
 self.children.remove(obj)


root = Tree('root')
node1 = Tree('node1')
node2 = Tree('node2')

root.add_child(node1)
root.add_child(node2)",correct,String Manipulation
"Given a string and a character, write a Python function to count the number of occurrences of the character in the string.",,"def count_characters(string, char):
    return sum([1 for x in string if x == char])","def count_characters(string, char):
    re",Incomplete Answer,File I/O
Write a Python program to generate a list with the first 25 odd numbers.,,"def print_odd_numbers():
    result = []
    for num in range(1, 51):
        if num % 2 != 0:
            result.append(num)
    return result

list_odd_numbers = print_odd_numbers()
print(list_odd_numbers)","def print_odd_numbers():
result = []
for num in range(1, 51):
    if num % 2 != 0:
        result.append(num)
return result

list_odd_numbers = print_odd_numbers()
print(list_odd_numbers)",Syntax Error,String Manipulation
Write a recursive Python function to generate Fibonacci numbers.,,"def fibonacci(n):
    if n == 1 or n == 2:
        return 1
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)
 
print(fibonacci(10))","def fibonacci(n):
    if n == 1 or n == 2:
        return 1
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)
 
print(fibonacci(10))",correct,String Manipulation
Write a function in Python that takes a list of integers and returns the sum of the even numbers in the list.,"[1, 2, 3, 4, 5, 6]","def sum_even_integers(lst):
    total = 0
    for num in lst:
        if num % 2 == 0:
            total += num
    return total

print(sum_even_integers([1, 2, 3, 4, 5, 6])) # 12","def sum_even_integers(lst):
    total = 0
    for num in lst:
        if num % 2 == 0:
            total += num
    return total

print(sum_even_integers([1, 2, 3, 4, 5, 6])) # 12",correct,Loops
Generate a Python code snippet to find the maximum element in an array.,,"def find_max(arr):
    max = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max:
            max = arr[i]
    return max","def find_max(arr):
    max = arr[0]
    for i in range(1, len(arr)",Incomplete Answer,OOP
"Generate a class in Python, implementing the __init__ and __str__ methods to initialize a variable and print its value.","name = ""John Doe""","class Person:
    def __init__(self, name):
        self.name = name

    def __str__(self):
        return self.name

p = Person('John Doe')
print(p)","class Person:
    def __init__(self, name):
        self.name = name

    d",Incomplete Answer,OOP
"Write a function in Python that receives two positive integers and prints out all the numbers in the range of the two integers (inclusive), except for numbers divisible by three.","lower_bound = 5
upper_bound = 15","def print_numbers(lower_bound, upper_bound):
 for num in range(lower_bound, upper_bound+1):
 if num % 3 != 0:
 print(num)
  
print_numbers(5, 15)","def print_numbers(lower_bound, upper_bound):
 for num in range(lower_bou",Incomplete Answer,Recursion
"Create a REST API for a simple ""hello world"" application in Python. The API should have endpoints for greeting a visitor and returning the current date and time.",,"# main.py
import datetime
from flask import Flask, jsonify

app = Flask(__name__)

@app.route('/')
def hello():
 greeting = ""Hello, world!""
 return jsonify(greeting)

@app.route('/date')
def date():
 now = datetime.datetime.now()
 return jsonify(now)

if __name__ == '__main__':
 app.run(debug=True)","# main.py
import datetime
from flask import Flask, jsonify

app = Flask(__name__)

@app.route('/')
def hello()
 greeting = ""Hello, world!""
 return jsonify(greeting)

@app.route('/date')
def date()
 now = datetime.datetime.now()
 return jsonify(now)

if __name__ == '__main__'
 app.run(debug=True)",Syntax Error,Loops
You need to write a Python program which converts a given Fahrenheit temperature to its corresponding Celsius temperature.,temperature_fahrenheit = 68,"def fahrenheit_to_celsius(temperature_fahrenheit):
    temperature_celsius = (temperature_fahrenheit - 32) * 5.0 / 9.0
    return temperature_celsius

result = fahrenheit_to_celsius(temperature_fahrenheit)
print(f""{temperature_fahrenheit}°F = {result}°C"")
# Output: 68°F =","def fahrenheit_to_celsius(temperature_fahrenheit):
    temperature_celsius = (temperature_fahrenheit - 32) * 5.0 / 9.0
    return temperature_celsius

result = fahrenheit_to_celsius(temperature_fahrenheit)
print(name, f""{temperature_fahrenheit}°F = {result}°C"")
# Output: 68°F =",Syntax Error,OOP
Develop a program that alters and returns a given string.,"string: ""Python is fun!""","""""""
Develop a program that alters and returns a given string
""""""

def alter_string(string):

    # alter the original string 
    string_altered = string.replace(""!"", ""?"")

    return string_altered

if __name__ == '__main__':
    string = ""Python is fun!""
    print(alter_string(string))","""""""
Develop a program that alters and returns a given string
""""""

def alter_string(string):

    # alter the original string 
    string_altered = string.replace(""!"", ""?"")

    return string_altered

if __name__ == '__main__':
    string = ""Python is fun!""
    print(alter_string(string))",correct,Loops
Create a Python script to illustrate the concept of Threading.,,"from threading import Thread

def worker():
    print(""I am a worker"")

threads = list()
for _ in range(5):
    th = Thread(target=worker)
    threads.append(th)
    th.start()

for th in threads:
    th.join()

print(""Done"")","from threading import Thread

def worker(:
    print(""I am a worker""

threads = list(
for _ in range(5:
    th = Thread(target=worker
    threads.append(th
    th.start(

for th in threads:
    th.join(

print(""Done""",Syntax Error,OOP
Implement a python function to remove all special characters from a string.,"string = “@#$&#() <>, +/”","import re

def remove_special_characters(string):
    return re.sub('[^A-Za-z0-9]+', '', string)","import re

def remove_special_characters(string)",Incomplete Answer,OOP
Generate a python code to classify an array of numbers into a set of categories,"Given an array of numbers [3, 8, 15, 7, 20], classify the array into two categories - even and odd.","def even_odd_classification(arr):
    evens = []
    odds = []

    for i in arr:
        if i % 2 == 0:
            evens.append(i)
        else:
            odds.append(i)
    
    return evens, odds","def even_odd_classification(arr):
    evens = []
    odds = []

    for i in arr:
        if i % 2 =",Incomplete Answer,OOP
Create a program in any language that reads numbers from the keyboard until it reads a negative number and then prints the sum of the numbers that have been read.,,"Python solution:

num = int(input('Enter a number: '))
sum = 0

while num >= 0:
    sum += num
    num = int(input('Enter a number: '))

print('The sum is', sum)","Python solution:

num = int(input('Enter a number: '))
sum = 0

while num >= 0:
sum += num
num = int(input('Enter a number: '))

print('The sum is', sum)",Syntax Error,File I/O
Write a code to define a class object in Python.,,"class Object:
  def __init__(self,attr1,attr2,attr3):
    self.attr1 = attr1
    self.attr2 = attr2
    self.attr3 = attr3","class Object:
  def __init__(self,attr1,attr2,attr3:
    self.attr1 = attr1
    self.attr2 = attr2
    self.attr3 = attr3",Syntax Error,Recursion
Design a Python program for Bubble Sort,,"def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                # swap elements
                arr[j], arr[j+1] = arr[j+1], arr[j]","def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
          ",Incomplete Answer,String Manipulation
Write a python function to search a list of numbers for a given number and output the position if found.,"numbers=[1,2,3,4,5], search=3","def search_list(numbers, search):
    for index, num in enumerate(numbers):
        if num == search:
            return index
    return -1","def search_list(numbers, search):
    for index, num in enumerate(numb",Incomplete Answer,OOP
Can you create a Python script to find the maximum element in the given array using divide and conquer algorithm?,"arr = [3, 5, 7, 9, 1, 20]","def findMaxElement(arr, low, high):
    if (high == low): 
        return arr[low] 
    else: 
        mid = (low + high) // 2
        max_left = findMaxElement(arr, low, mid) 
        max_right = findMaxElement(arr, mid + 1, high) 
        return max(max_left, max_right) 

print(findMaxElement(arr, 0, len(arr)-1)) # 20","def findMaxElement(arr, low, high):
    if (high == low): 
        return arr[low] 
    else: 
        mid = (low + high) // 2
        max_left = findMaxElement(arr, low, mid) 
        max_right = findMaxElement(arr, mid + 1, high) 
        return max(max_left, max_right) 

print(findMaxElement(arr, 0, len(arr)-1)) # 20",correct,File I/O
Design an algorithm in Python to calculate the greatest common divisor of two numbers.,"x = 32
y = 8","def gcd(x,y): 
 if x == 0: 
 	return y 
 return gcd(y%x, x) 

# Driver code
print(gcd(x,y))","def gcd(x,y): 
 if x == 0: 
 	return y 
 retu",Incomplete Answer,String Manipulation
Build a decision tree model in Python.,"X = [[0, 0], [1, 1]]
y = [0, 1]","# Import decision tree classifier from the sklearn library
from sklearn import tree
 
# Input data to the model
X = [[0, 0], [1, 1]]
y = [0, 1]
 
# Create a decision tree classifier object
clf = tree.DecisionTreeClassifier()
 
# Train the decision tree classifier
clf = clf.fit(X, y)","# Import decision tree classifier from the sklearn library
from sklearn import tree
 
# Input data to the model
X = [[0, 0], [1, 1]]
y = [0, 1]
 
# Create a decision tree classifier object
clf = tree.DecisionTreeClassifier()
 
# Train the decision tree classifier
clf = clf.fit(X, y)",correct,String Manipulation
"Optimize the following Python code to sort a set of numbers (set = [2, 6, 3, 8, 4]) in O(n) time complexity.","unsorted_list = [2, 6, 3, 8, 4]","def sort_list(unsorted_list):
    sorted_list = []
    while unsorted_list:
        min_elem = min(unsorted_list)
        unsorted_list.remove(min_elem)
        sorted_list.append(min_elem)
    return sorted_list","def sort_list(unsorted_list):
    sorted_list = []
    while unsorted_list:
        min_elem = min(unsorted_list)
        unsorted_list.remove(min_elem)
        sorted_list.append(min_elem)
    return sorted_list",correct,Loops
Can you suggest an algorithm for finding all the permutations of a given string in Python?,,"def permutations(string):
  if len(string) == 1:
    return [string]
  
  result = []
  for i in range(0, len(string)):
    subString = string[0:i] + string[i+1: len(string)]
    subPermutations = permutations(subString)
    for j in range(0, len(subPermutations)):
      result.append(string[i] + subPermutations[j])
  
  return result","def permutations(string)
  if len(string) == 1
    return [string]
  
  result = []
  for i in range(0, len(string))
    subString = string[0i] + string[i+1 len(string)]
    subPermutations = permutations(subString)
    for j in range(0, len(subPermutations))
      result.append(string[i] + subPermutations[j])
  
  return result",Syntax Error,Recursion
Generate a Python program to find groups of numbers that are divisible by a given number (n).,,"def find_groups(n):
    groups = []
    for i in range(2, n):
        group = []
        for j in range(1, n):
            if i * j % n == 0:
                group.append(i * j)
        if group:
            groups.append(group)
    return groups","def find_groups(n):
groups = []
for i in range(2, n):
    group = []
    for j in range(1, n):
        if i * j % n == 0:
            group.append(i * j)
    if group:
        groups.append(group)
return groups",Syntax Error,Recursion
Design a Python program to implement the Bubble Sort algorithm.,"[1, 8, 4, 6, 2, 5]","def bubble_sort(arr):
    for i in range(len(arr) - 1):
        for j in range(len(arr) - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

result = bubble_sort([1, 8, 4, 6, 2, 5])
print(result)","def bubble_sort(arr):
for i in range(len(arr) - 1):
    for j in range(len(arr) - i - 1):
        if arr[j] > arr[j + 1]:
            arr[j], arr[j + 1] = arr[j + 1], arr[j]
return arr

result = bubble_sort([1, 8, 4, 6, 2, 5])
print(result)",Syntax Error,File I/O
Write a Python script to sort dictionaries as per the value.,"{""a"": 10, ""b"": 3, ""c"": 4, ""d"": 1, ""e"": 5}","dictionary = {""a"": 10, ""b"": 3, ""c"": 4, ""d"": 1, ""e"": 5}
sorted_dict = dict(sorted(dictionary.items(), key=lambda x: x[1],reverse = False)) 
 
print(""Sorting Dictionary as per the Value: "")
print(""The Original Dictionary : "",dictionary)  
print(""The Sorted Dictionary : "",sorted_dict)","dictionary = {""a"": 10, ""b"": 3, ""c"": 4, ""d"": 1, ""e"": 5}
sorted_dict = dict(sorted(dictionary.items(), key=lambda x: x[1],reverse = False)) 
 
print(name, ""Sorting Dictionary as per the Value: "")
print(name, ""The Original Dictionary : "",dictionary)  
print(name, ""The Sorted Dictionary : "",sorted_dict)",Syntax Error,File I/O
"Design a class in Python that implements a stack with the basic operations (push, pop, and peek)",,"class Stack:
    def __init__(self):
        self.items = []
        
    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()
    
    def peek(self):
        return self.items[-1]
    def isEmpty(self):
        return self.items == []","class Stack:
    def __init__(self):
        self.items = []
        
    def push(self, item):
        self.items.append(item)

    def pop(sel",Incomplete Answer,File I/O
Create another version of a python program which multiplies two numbers without using the multiplication operator.,"Number 1: 8, Number 2: 9","def multiply_2_numbers(x, y):
    product = 0
    for i in range(y):
        product += x
    return product","def multiply_2_numbers(x, y):
    product = 0
    for ",Incomplete Answer,File I/O
Create a Python dictionary to store the details of different users with their names as the key.,,"users = {
  ""John"": {
    ""age"": 28,
    ""location"": ""New York""
  },
  ""Mary"": {
    ""age"": 34,
    ""location"": ""London""
  },
  ""David"": {
    ""age"": 40,
    ""location"": ""Berlin""
  }
}","users = {
  ""John"": {
    ""age"": 28,
    ""location"": ""New York""
  },
  ""Mary"": {
    ""age"": ",Incomplete Answer,OOP
Create a basic Python program that prints out the class average for a list of student grades.,"[80, 85, 90, 75, 95]","numbers = [80, 85, 90, 75, 95]

total = 0
for number in numbers:
 total += number

class_average = total / len(numbers)
print(class_average)","numbers = [80, 85, 90, 75, 95]

total = 0
for number in numbers:
 tota",Incomplete Answer,Recursion
Create a function in Python to calculate the power of a number.,,"def power(num, pow):
 return num**pow","def power(num, pow:
 return num**pow",Syntax Error,OOP
Create a function in Python which takes a given string and returns a dictionary containing the frequency of each word in the string.,"""Hello world hello world""","def word_frequency(string):
    word_freq = {} 
  
    for word in string.split(): 
        if word in word_freq: 
            word_freq[word] += 1
        else: 
            word_freq[word] = 1
  
    return word_freq 
      
string = ""Hello world hello world""
print(word_frequency(string))","def word_frequency(string):
    word_freq = {} 
  
    for word in string.split(): 
        if word in word_freq: 
            word_freq[word] += 1
        else: 
            word_freq[word] = 1
  
    return word_freq 
      
string = ""Hello world hello world""
print(word_frequency(string))",correct,OOP
Combine the two Python lists into a single list.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","combined_list = list1 + list2
print(combined_list)","combined_list = list1 + list2
print(combined_list)",Syntax Error,File I/O
Create a Python function that converts an integer into a binary representation as a string.,13,"def to_binary(num):
  result = """"
  while num > 0:
   remainder = num % 2
   num = num // 2
   result = str(remainder) + result
  return result

print(to_binary(13)) # '1101'","def to_binary(num):
  result = """"
  while num > 0:
   remainder = num % 2
   num = num ",Incomplete Answer,OOP
Write a Python program to format a number with leading zeros.,,"def leading_zeros(num, zeros=6):
  return str(num).zfill(zeros)","def leading_zeros(num, zeros=6):
  return str(num).zfill(zeros)",Syntax Error,Loops
Create a Python program that prints out the Fibonacci series up to n.,n = 5,"# Returns the nth Fibonacci number
def Fibonacci(n):
    if n == 0: 
        return 0
    elif n == 1: 
        return 1
    else: 
        return Fibonacci(n-1) + Fibonacci(n-2) 

# Prints the Fibonacci series
n = 5 
for i in range(n+1): 
    print(Fibonacci(i))","# Returns the nth Fibonacci number
def Fibonacci(n):
    if n == 0: 
        return 0
    elif n == 1: 
        return 1
    else: ",Incomplete Answer,Recursion
Create a Python script to divide two sets and store the results in a new set.,"Set 1: {2, 4, 6, 8, 10}
Set 2: {3, 5, 7, 9}","set1 = {2, 4, 6, 8, 10} 
set2 = {3, 5, 7, 9}

# Divide two sets and store the results in a new set
new_set = set1.difference(set2) 
 
# Print the result
print(new_set) # Output: {2, 4, 6, 8, 10}","set1 = {2, 4, 6, 8, 10} 
set2 = {3, 5, 7, 9}

# Divide two sets and store the results in a new set
new_set = set1.difference(set2 
 
# Print the result
print(new_set # Output: {2, 4, 6, 8, 10}",Syntax Error,Loops
Construct a Python program that tests if an input number is an Armstrong number,,"def is_armstrong_number(num):
    order = len(str(num))
    sum = 0
    temp = num

    while temp > 0:
        remainder = temp % 10
        sum += remainder ** order
        temp //= 10

    if sum == num:
        return True
    else:
        return False","def is_armstrong_number(num):
    order = len(str(num))
    sum = 0
    temp = num

    while temp > 0:
        remainder = temp ",Incomplete Answer,File I/O
Classify the following items using a supervised machine learning algorithm in Python,"[3, 5, 7, 1, 0]","import numpy as np 
from sklearn import svm 

# Input data to classify
X = np.array([[3, 5, 7, 1, 0]])

# Label data, either 0 or 1
y = np.array([0])

# Create a SVC classifier
clf = svm.SVC(gamma=0.001, C=100.)

# Train the model, using the training sets
clf.fit(X, y)

print('Prediction:', clf.predict(X))

Output:
Prediction: [0]","import numpy as np 
from sklearn import svm 

# Input data to classify
X = np.array([[3, 5, 7, 1, 0]])

# Label data, either 0 or 1
y = np.array([0])

# Create a SVC ",Incomplete Answer,File I/O
Write a function to find the pairwise addition of the elements of the given tuples.,,"def add_pairwise(test_tup):
  res = tuple(i + j for i, j in zip(test_tup, test_tup[1:]))
  return (res) ","def add_pairwise(test_tup):
  res = tuple(i + j for i, j in zip(test_tup, test_tup[1:]))
  return (res) ",correct,String Manipulation
Create a Python program to detect if a number is a prime number.,No input.,"def is_prime(x):
    if x < 2:
        return False
    
    for i in range(2, x):
        if x % i == 0:
            return False
    return True","def is_prime(x):
    if x < 2:
        return False
    
    for i in range(2, x):
        if x % i == 0:
            return False
    return True",correct,Loops
"Formulate a Python loop to print out the words ""Hello World"" 10 times.",,"for i in range(10):
    print(""Hello World"")","for i in range(10):
  ",Incomplete Answer,File I/O
Create a Python program to check if two given lists are disjoint.,"list1 = [2, 3, 4, 5]
list2 = [6, 7, 8, 9]","def check_disjoint(list1, list2):
    return not bool(set(list1) & set(list2))

result = check_disjoint(list1, list2)
print(result)","def check_disjoint(list1, list2):
    return not bool(set(list1) ",Incomplete Answer,Recursion
"Create a python function which takes two inputs, a list of strings and a character, and returns a dictionary containing the count of each string beginning with the given character.","words = ['apple','ball','cat','dog','elephant']
char = 'a'","def find_words(words, char):
    count_dict = dict()
    for word in words:
        if word.startswith(char):
            count_dict[word] = count_dict.get(word, 0) + 1
    return count_dict","def find_words(words, char):
    count_dict = dict()
    for word in words:
        if word.startswith(char):
            count_dict[word] = count_dict.get(word, 0) + 1
    return count_dict",Syntax Error,Recursion
Generate a Python program that can convert temperature from Fahrenheit to Celsius.,,"def fahrenheit_to_celsius(F):
    # convert Fahrenheit to Celsius
    C = (F - 32) * 5.0/9.0
    return C

F = 78.8
C = fahrenheit_to_celsius(F) 
print('%0.1f degree Fahrenheit is equal to %0.1f degree Celsius' %(F,C))","def fahrenheit_to_celsius(F):
    # convert Fahrenheit to Celsius
    C = (F - 32) * 5.0/9.0
    return C

F ",Incomplete Answer,OOP
Generate a code snippet in Python that takes a user-inputted string and creates and prints a dictionary with keys that are the indices of the characters in the string.,,"user_string = input('Enter a string: ')
char_dict = {i:char for i, char in enumerate(user_string)}
print(char_dict)","user_string = input('Enter a string: ')
char_dict = {i:ch",Incomplete Answer,File I/O
Create a function in Python to print the Fibonacci numbers from 0 to 1000.,,"def printFibonacci(): 
    fib1 = 0
    fib2 = 1
    print(fib1, end = "" "") 
    while (fib2 < 1000): 
        print(fib2, end = "" "") 
        temp = fib2
        fib2 = fib2 + fib1   
        fib1 = temp","def printFibonacci(): 
    fib1 = 0
    fib2 = 1
    print(fib1, end = "" "") 
    while (fib2 < 1000): 
        print(fib2, end = "" "") 
        temp = fib2
        fib2 = fib2 + fib1   
        fib1 = temp",correct,Loops
"Input a text string, and build a function in Python to count the number of vowels in the string.",The quick brown fox jumps over the lazy dog,"def countVowels(sentence):
    vowels = 'aeiouAEIOU'
    count = 0
    for ch in sentence:
        if ch in vowels:
            count += 1
    return count

result = countVowels('The quick brown fox jumps over the lazy dog')
print(result)","def countVowels(sentence):
    vowels = 'aeiouAEIOU'
    count = 0
    for ch in sentence:
        if ch in vowels:
   ",Incomplete Answer,OOP
Create a python program to sort a given array in increasing order.,"[21, 3, 14, 15, 5, 21]","def insertion_sort(arr):
    for key in range(1,len(arr)):
        j=key
        while j>0 and arr[j-1] > arr[j]:
            arr[j-1],arr[j]=arr[j],arr[j-1]
            j-=1
    return arr

print(insertion_sort([21, 3, 14, 15, 5, 21]))","def insertion_sort(arr):
    for key in range(1,len(arr)):
        j=key
        while j>0 and arr[j-1] > arr[j]:
            arr[j-1],arr[j]=arr[j],arr[j-1]
            j-=1
    return arr

print(insertion_sort([21, 3, 14, 15, 5, 21]))",correct,File I/O
Develop an algorithm in Python to store a set of objects in the most efficient data structure.,"Objects: [1, 2, 3, 4, 5]","def store_elements(elements):
    store = []
    for i in elements:
        store.append(i)
    return store

objects = [1, 2, 3, 4, 5]
storage = store_elements(objects)
print(storage)","def store_elements(elements):
    store = []
    for i in elements:
        store.append(i)
",Incomplete Answer,Recursion
Create a function in Python that will take two strings and merge them together without spaces.,"string1 = ""Hello""
string2 = ""World""","def joinStrings(s1, s2):
    return s1 + s2

print(joinStrings('Hello', 'World'))","def joinStrings(s1, s2):
    return s1 + s2

print(joinStrings('Hello', 'World'))",correct,String Manipulation
Write a python function to replace multiple occurence of character by single.,,"import re 
def replace(string, char): 
    pattern = char + '{2,}'
    string = re.sub(pattern, char, string) 
    return string ","import re 
def replace(string, char): 
pattern = char + '{2,}'
string = re.sub(pattern, char, string) 
return string ",Syntax Error,OOP
Create a program in Python that takes two lists and checks for common elements between them.,"list1 = [1,2,3,4]
list2 = [3,4,5,6]","list1 = [1,2,3,4]
list2 = [3,4,5,6] 

def check_common(list1, list2): 
    result = False
    for x in list1: 
        for y in list2: 
            if x == y: 
                result = True
                return result  
    return result 
  
print(check_common(list1, list2))","list1 = [1,2,3,4]
list2 = [3,4,5,6] 

def check_common(list1, list2): 
    result = False
    for x in list1: 
        for y in list2: 
  ",Incomplete Answer,String Manipulation
Develop a python program that checks if a given word is consonant or not.,"word: ""hello""","def is_consonant(word): 
    # List containing all consonants 
    consonants = [""b"",""c"",""d"",""f"",""g"",""h"",""j"",""k"",""l"",""m"",""n"",""p"",""q"",""r"",""s"",""t"",""v"",""x"",""z""] 
    for char in word: 
        if char in consonants: 
            return True
    return False

# Example
print (is_consonant(""hello"")) # False","def is_consonant(word): 
    # List containing all consonants 
    consonants = [""b"",""c"",""d"",""f"",""g"",""h"",""j"",""k"",""l"",""m"",""n"",""p"",""q"",""r"",""s"",""t"",""v"",""x",Incomplete Answer,String Manipulation
Generate a function in Python that will take a username and password as parameters and authenticate the user.,,"def authenticate(username, password):
    """"""Authenticate a user with username and password""""""
    # Your authentication implementation
    return is_authenticated  # true or false","def authenticate(username, password):
""""""Authenticate a user with username and password""""""
# Your authentication implementation
return is_authenticated  # true or false",Syntax Error,Loops
"Create a Python class for a Car with the attributes 'color', 'make', 'model', and 'price'.",,"class Car:
    def __init__(self, color, make, model, price):
        self.color = color
        self.make = make
        self.model = model
        self.price = price","class Car:
    def __init__(self, color, make, model, price):
        self.color = color
        self.make = make
        self.model = model
        self.price = price",Syntax Error,Recursion
Can you provide a Python program to generate all possible combinations of a given list of numbers?,"""list = [1, 2, 3]""","import itertools

# list of numbers
list_of_nums = [1, 2, 3]

# get all possible combinations of numbers
combinations = itertools.combinations(list_of_nums, 3)

# print all possible combinations
for combination in combinations:
    print(combination)","import itertools

# list of numbers
list_of_nums = [1, 2, 3]

# get all possible combinations of numbers
combinations = itert",Incomplete Answer,File I/O
How do you create a function in Python to find the highest common factor of the two given numbers?,,"def highestCommonFactor(num1, num2): 
    if num1 > num2: 
        small = num2 
    else: 
        small = num1 
    for i in range(1, small+1): 
        if((num1 % i == 0) and (num2 % i == 0)): 
            hcf = i 
    return hcf","def highestCommonFactor(num1, num2): 
    if num1 > num2: 
        small = num2 
    else: 
        small = num1 
  ",Incomplete Answer,Loops
Compute the sum of two matrices in Python.,"matrix_1 = [[1, 2, 3], [4, 5, 6]]
matrix_2 = [[7, 8, 9], [10, 11, 12]]","import numpy as np

matrix_1 = np.array(matrix_1)
matrix_2 = np.array(matrix_2)

result = np.add(matrix_1, matrix_2)

## Output: [[ 8 10 12], [14 16 18]]","import numpy as np

matrix_1 = np.array(matrix_1)
matrix_2 = np.array(matrix_2)

result = np.add(matrix_1, matrix_2)

## Output [[ 8 10 12], [14 16 18]]",Syntax Error,Loops
Generate a python program to print the ordered combination of the elements of the given list.,"[1, 2, 3]","def ordered_combination(arr):
    result = []

    # Generate all permutations using library function 
    permutations = itertools.permutations(arr, len(arr)) 

    # Append each permutation in a list  
    for permutation in permutations: 
        result.append(list(permutation)) 
  
    # Return the list of ordered combinations
    return result","def ordered_combination(arr):
    result = []

    # Generate all permutations using library function 
    permutations = itertools.permutations(arr, len(arr)) 

    # Append ",Incomplete Answer,Recursion
Generate a Python list comprehension that returns all even numbers in a given range.,"start_num = 2
end_num = 10","even_nums = [num for num in range(start_num, end_num + 1) if num % 2 == 0]","even_nums = [num for num in range(start_num, end_num + 1) if num % 2 == 0]",Syntax Error,String Manipulation
Create and solve a traveling salesman problem using Python.,,"import networkx as nx

def solve_tsp(G):
    dist_matrix = {frozenset({v,w}):G[v][w]['weight'] for v in G for w in G}    
    return nx.algorithms.tournament.tsp.solve_tsp(G, dist_matrix)","import networkx as nx

def solve_tsp(G):
    dist_matrix = {frozenset({v,w}):G[v][w]['weight'] for v in G for w in G}    
    return nx.algorithms.tournament.tsp.solve_tsp(G, dist_matrix)",correct,OOP
"Create a Dockerfile to build a container with python, flask, and gunicorn.",,"FROM python:3.7
	
RUN mkdir /usr/src/app

WORKDIR /usr/src/app

COPY requirements.txt ./

RUN pip install --no-cache-dir -r requirements.txt

EXPOSE 5000

COPY . .

CMD [""gunicorn"", ""--workers"", ""3"", ""-eventlet"", ""--bind"", "":5000"", ""wsgi:app""]","FROM python:3.7
	
RUN mkdir /usr/src/app

WORKDIR /usr/src/app

COPY requirements.txt ./

RUN pip install --no-cache-dir -r requirements.txt

EXPOSE 5000

COPY . .

CMD [""gunicorn"", ""--workers"", ""3"", ""-eventlet"", ""--bind"", "":5000"", ""wsgi:app""]",correct,OOP
Create an algorithm in Python to generate the fibonacci sequence.,,"def fibonacci_sequence(n):
    sequence = [1]
    if n == 1:
        return sequence
    else:
        sequence.append(1)
        for i in range(2, n):
            sequence.append(sequence[i-1] + sequence[i-2])
        return sequence

n = 10
result = fibonacci_sequence(n)
print(result)","def fibonacci_sequence(n):
sequence = [1]
if n == 1:
    return sequence
else:
    sequence.append(1)
    for i in range(2, n):
        sequence.append(sequence[i-1] + sequence[i-2])
    return sequence

n = 10
result = fibonacci_sequence(n)
print(result)",Syntax Error,String Manipulation
Create a Python program which takes a list of strings as input and outputs a dictionary containing the count of each string.,"A list of strings including:
['Python', 'Java', 'C', 'Python', 'JavaScript']","string_list = ['Python', 'Java', 'C', 'Python', 'JavaScript']

string_dict = {}
for string in string_list:
 if string in string_dict:
 string_dict[string] += 1
 else:
 string_dict[string] = 1

print(string_dict) # Output: {'Python': 2, 'Java': 2, 'C': 1, 'JavaScript': 1}","string_list = ['Python', 'Java', 'C', 'Python', 'JavaScript']

string_dict = {}
for string in string_list:
 if string in string_dict:
 string_dict[string] += 1
 else:
 string_dict[string] = 1

print(string_dict) # Output: {'Python': 2, 'Java': 2, 'C': 1, 'JavaScript': 1}",correct,Loops
"Using Python, create a function to convert HTML to plain text.","Input HTML:
```
<p>Hello world!</p>
<div>
    <p>This is a test.</p>
</div>
```","import lxml.html as lh

def html_to_text(html):
    tree = lh.fromstring(html)
    return tree.text_content()

html = ""<p>Hello world!</p><div><p>This is a test.</p></div>""

print(html_to_text(html))","import lxml.html as lh

def html_to_text(html):
    tree = lh.fromstring(html)
    return tree.text_content()

html = ""<p>Hello world!</p><div><p>This is a test.</p></div>""

print(html_to_text(html))",correct,File I/O
What is the output of this python program?,"x = 5
y = 8
print(x + y)",13,13,Syntax Error,Loops
Transform string of format ‘YYYY-MM-DD’ to date type in Python,"date_str = ""2020-04-30""","import datetime

def date_string_to_datetime(date_str):
  return datetime.datetime.strptime(date_str, ""%Y-%m-%d"").date()","import datetime

def date_string_to_datetime(date_str):
  re",Incomplete Answer,Loops
Create a variable in Python to store the length of a list.,"example_list = [1, 2, 3, 4]",list_length = len(example_list),list_length = l,Incomplete Answer,OOP
Generate a Python program that inputs a sequence of numbers and returns the largest number in the sequence.,,"num_list = list() 
num = input(""Enter how many elements you want:"") 
print ('Enter numbers in array: ') 
  
for i in range(int(num)): 
    n = input(""num :"") 
    num_list.append(int(n)) 
  
print ('Largest number is:', max(num_list))","num_list = list() 
num = input(""Enter how many elements you want:"") 
print ('Enter numbers in array: ') 
  
for i in ",Incomplete Answer,OOP
Create a Python algorithm to check if a given word exists in a dictionary.,"dictionary: {""hello"": ""greeting"", ""car"": ""vehicle""}
word: ""hello""","# Function to test if a word exists in a dictionary 
def wordExists(dictionary, word):
    for key, value in dictionary.items():
        if key == word:
            return True
    
    return False

# Main function
dictionary = {""hello"": ""greeting"", ""car"": ""vehicle""}
word = ""hello""
print(wordExists(dictionary, word))","# Function to test if a word exists in a dictionary 
def wordExists(dictionary, word)
    for key, value in dictionary.items()
        if key == word
            return True
    
    return False

# Main function
dictionary = {""hello"" ""greeting"", ""car"" ""vehicle""}
word = ""hello""
print(wordExists(dictionary, word))",Syntax Error,File I/O
Create an algorithm that checks if a given String is a valid identifier in Python.,,"def is_valid_identifier(string):
  if string.isidentifier():
    return True
  else:
    return False","def is_valid_identifier(string):
  if string.iside",Incomplete Answer,Recursion
Design a code snippet in Python to find the factorial of a given number.,5,"def factorial(num): 
    if num == 0:
        return 1
    else:
        return num * factorial(num-1)

num = 5
fact = factorial(num)
print(""Factorial of"", num,"" is"", fact)","def factorial(num): 
    if num == 0:
        return 1
    else:
        return num * ",Incomplete Answer,Recursion
Create a Python function which returns the greatest common divisor of two integers.,"18, 48","def greatest_common_divisor(a, b):
    # Ensure that a is greater than b
    if a < b:
        a, b = b, a

    # Calculate the GCD of a and b
    while b != 0:
        # Get the remainder
        rem = a % b
        # Set a to b
        a = b
        # Set b to the remainder
        b = rem

    # Return the greatest common divisor
    return a

print(greatest_common_divisor(18, 48))","def greatest_common_divisor(a, b):
# Ensure that a is greater than b
if a < b:
    a, b = b, a

# Calculate the GCD of a and b
while b != 0:
    # Get the remainder
    rem = a % b
    # Set a to b
    a = b
    # Set b to the remainder
    b = rem

# Return the greatest common divisor
return a

print(greatest_common_divisor(18, 48))",Syntax Error,Loops
Write a python program to return the average value of numbers in the given list.,"numbers = [2, 4, 6, 8]","def avg_list(numbers): 
    total = 0
    for x in numbers: 
        total += x 
    return total / len(numbers)","def avg_list(numbers): 
    total = 0
    for x in numbers: 
        total += x 
    return total / len(numbers)",correct,Recursion
Optimize a given Python code to improve the performance.,"""""""
    def find_common_elements(lst1, lst2):
       result = []
       for elem1 in lst1:
           for elem2 in lst2:
               if elem1 == elem2:
                   result.append(elem1)
       return result 
""""""","def find_common_elements(lst1, lst2):
    result = []
    set_2 = set(lst2)
    for elem1 in lst1:
        if elem1 in set_2:
            result.append(elem1)
    return result","def find_common_elements(lst1, lst2):
result = []
set_2 = set(lst2)
for elem1 in lst1:
    if elem1 in set_2:
        result.append(elem1)
return result",Syntax Error,Loops
Generate a python program that prints the cube of a given number.,3,"def print_cube(num):
    print(num**3)
    
num = 3
print_cube(num)","def print_cube(num):
print(num**3)

num = 3
print_cube(num)",Syntax Error,Recursion
Design a data structure in Python that stores customer data such as customer ID and payment history.,,"class Customer:
 def __init__(self, customer_id, payments):
  self.customer_id = customer_id
  self.payments = payments
  
# Sample usage
customers = []
customers.append(Customer(1, [50, 100, 150]))
customers.append(Customer(2, [75, 125, 175]))","class Customer:
 def __init__(self, customer_id, payments):
  self.customer_id = customer_id
  self.payments = payments
  
# Sample usage
customers = []
customers.append(Customer(1, [50, 100, 150]))
customers.append(Customer(2, [75, 125, 175]))",correct,String Manipulation
Create a python program to rotate a list of numbers by a given number.,"[1,2,3,4,5]","def rotate_list(nums, n):
  return nums[n:] + nums[:n]","def rotate_list(nums, n)
  return nums[n] + nums[n]",Syntax Error,OOP
Write a Python program that croscorrelates two given arrays.,"Array 1: [2, 3, 5, 7], Array 2: [1, 4, 6, 8]","import numpy as np
 
#input arrays
arr1 = np.array([2, 3, 5, 7])
arr2 = np.array([1, 4, 6, 8])

#calculating correlation
correlation = np.corrcoef(arr1, arr2)

#printing correlation
print(""Correlation: "", correlation[0][1])","import numpy as np
 
#input arrays
arr1 = np.array([2, 3, 5, 7])
arr2 = np.array([1, 4, 6, 8])

#calculating co",Incomplete Answer,String Manipulation
Generate a program in Python to generate a list with numbers from 1 to 20 in random order.,,"import random

def randomListGenerator():
    randomList = []
    for i in range(1, 21):
        randomNumber = random.randint(1,20)
        while randomNumber in randomList:
            randomNumber = random.randint(1,20)
        else:
            randomList.append(randomNumber)
    return randomList

print(randomListGenerator())","import random

def randomListGenerator():
    randomList = []
    for i in range(1, 21):
        randomNumber = random.randint(1,20)
        while randomNumber in randomList:
            randomNumber = random.randint(1,20)
        else:
            randomList.append(randomNumber)
    return randomList

print(randomListGenerator())",correct,Loops
Generate a correct python program for solving the following problem,"Given a list of values, find the indices of all pairs whose sum is equal to a given target","def find_pairs_with_sum(values, target):
    indices_list = []
    for i in range(len(values)):
        x = target - values[i]
        if x in values[i+1:]:
            indices_list.extend([i, values.index(x)])
    return indices_list","def find_pairs_with_sum(values, target):
    indices_list = []
    for i in range(len(values)):
        x = target - values[i]
        if x in values[i+1:]:
            indices_list.extend([i, values.index(x)])
    return indices_list",correct,File I/O
Develop a Python program that calculates the mean of list of numbers.,"[1, 5, 2, 4, 9]","def calculate_mean(nums):
    total = 0
    for n in nums:
        total += n
    mean = total / len(nums)
    return mean

mean = calculate_mean([1, 5, 2, 4, 9])","def calculate_mean(nums):
    total = 0
    for n in nums:
        total += n
   ",Incomplete Answer,Loops
Optimize the following python program and reduce its runtime.,"def find_min(lst):
    return min(lst)

list = [2, 3, 8, 4, 5]","def find_min(lst):
    min_val = lst[0]
    for value in lst[1:]:
        if value < min_val:
            min_val = value
    return min_val

list = [2, 3, 8, 4, 5]","def find_min(lst):
    min_val = lst[0]
    for value in lst[1:]:
        if value",Incomplete Answer,OOP
Write a Python program to remove the vowels from a given sentence.,A beautiful sun rises in the morning.,"def removeVowels(my_string): 
    vowels = 'aeiouAEIOU'
    no_vowels = """"
    for char in my_string:
        if char not in vowels:
            no_vowels += char
    return no_vowels

sentence = ""A beautiful sun rises in the morning.""
print(removeVowels(sentence))

Output:
A btfll sn rs s n th mrnn.","def removeVowels(my_string): 
    vowels = 'aeiouAEIOU'
    no_vowels = """"
    for char in my_string:
        if char not in vowels:
            no_vowels += char
    return no_vowels

sentence = ""A beautiful sun rises in the morning.""
print(removeVowels(sentence))

Output:
A btfll sn rs s n th mrnn.",correct,Loops
Design a Python solution to find the position of a given element in a list.,"List: ['a', 'b', 'c', 'd']
Element: 'd'","def find_index(arr, element):
    for index, value in enumerate(arr): 
        if value == element: 
            return index
    return -1
  
arr = ['a', 'b', 'c', 'd']
element = 'd'
print(find_index(arr, element)) # Output: 3","def find_index(arr, element):
for index, value in enumerate(arr): 
    if value == element: 
        return index
return -1
  
arr = ['a', 'b', 'c', 'd']
element = 'd'
print(find_index(arr, element)) # Output: 3",Syntax Error,OOP
Create a basic Python script that takes the string input from the command line and prints it back.,,"import sys

# Get the string
string = sys.argv[1]

print(string)","import sys

# Get the string
string = sys.argv[1]

print(string)",correct,Loops
"Given an array of integers, write a function in Python to search for a given number in the array.","array = [1, 5, 8, 9], number = 5","def search_in_array(array, number):
    for element in array:
        if element == number:
            return True
    return False

array = [1, 5, 8, 9]
number = 5
result = search_in_array(array, number)
if result:
    print(""Number found"")
else:
    print(""Number not found"")","def search_in_array(array, number):
    for element in array:
        if element == number:
            return True
    return False

array",Incomplete Answer,String Manipulation
Create a program in Python to split a string into a list by given character,string = 'This is a sample string',"def split_string(string, delimiter): 
    return string.split(delimiter) 

print(split_string('This is a sample string', ' '))","def split_string(string, delimiter) 
    return string.split(delimiter) 

print(split_string('This is a sample string', ' '))",Syntax Error,Loops
Generate a Python dictionary comprehension that creates a new dictionary where the keys are the numbers from 1 to 10 and the values are their squares.,,"squares = {x: x**2 for x in range(1, 11)}","squares = {x x**2 for x in range(1, 11)}",Syntax Error,OOP
Write a Python program to impute the NaN values in the given dataset with the mean of the corresponding column.,"import numpy as np

data = np.array([[1, np.nan, 3], [4, 5, np.nan], [np.nan, 7, 8]])","def impute_nan(dataset, strategy=""mean""):
  for row in range(dataset.shape[0]):
    for col in range(dataset.shape[1]):
      if np.isnan(dataset[row, col]):
        if strategy == ""mean"":
          dataset[row, col] = dataset[:, col].mean()
  return dataset","def impute_nan(dataset, strategy=""mean""):
  for row in range(dataset.shape[0]):
    for col in range(dataset.shape[1]):
      if np.isnan(dataset[row, col]):
        if strategy == ""mean"":
          dataset[row, col] = dataset[:, col].mean()
  return dataset",Syntax Error,OOP
"Given a Python dictionary and a value, write a program to remove key from the dictionary having the given value.","dict_inp = {'a':1, 'b':2, 'c':3, 'd':2}
value = 2","def remove_key_by_value(dictionary, value):
    keys_to_remove = []
    for key, val in dictionary.items():
        if val == value:
            keys_to_remove.append(key)

    for key in keys_to_remove:
        del dictionary[key]
    return dictionary","def remove_key_by_value(dictionary, value):
    keys_to_remove = []
    for key, val in dictionary.items():
        if val == ",Incomplete Answer,OOP
Write code in Python to find the frequency of words in a given string.,"String: ""The apple is red and the banana is yellow.""","str = ""The apple is red and the banana is yellow.""
wordfreq = {}
 
for rawword in str.lower().split():
    word = rawword.replace(""."","""")
    if word not in wordfreq:
        wordfreq[word] = 0
    wordfreq[word] += 1
    
print(""Frequency of the words:"")
for key, value in wordfreq.items():
  print(key, value)","str = ""The apple is red and the banana is yellow.""
wordfreq = {}
 
for rawword in str.lower().split():
word = rawword.replace(""."","""")
if word not in wordfreq:
    wordfreq[word] = 0
wordfreq[word] += 1

print(""Frequency of the words:"")
for key, value in wordfreq.items():
  print(key, value)",Syntax Error,File I/O
Rewrite a python function from a set of instructions using list comprehension.,Define a function that takes a list of numbers and returns a list containing only the odd numbers from the given list.,"def odd_numbers(numbers):
 return [n for n in numbers if n % 2 != 0]","def odd_numbers(numbers):
 return ",Incomplete Answer,String Manipulation
Develop a python program to calculate the maximum product of two numbers greater than 0 in a given numerical array.,"array = [6, -3, -10, 0, 2]","def maxProduct(arr): 
    n = len(arr) 
    max_prod = 0
    for i in range(0, n): 
        for j in range(i + 1, n): 
            if arr[i] > 0 and arr[j] > 0: 
                max_prod = max(max_prod, arr[i] * arr[j]) 
  
    return max_prod 

# Input
array = [6, -3, -10, 0, 2]

# Output
result = maxProduct(array)
print(result)","def maxProduct(arr): 
    n = len(arr) 
    max_prod = 0
    for i in range(0, n): 
        for j in range(i + 1, n): 
            if arr[i] > 0 and arr[j] > 0: 
                max_prod = max(max_prod, arr[i] * arr[j]) 
  
    return max_prod 

# Input
array = [6, -3, -10, 0, 2]

# Output
result = maxProduct(array)
print(result)",correct,Recursion
Create a function to print the last character of a given string in Python.,,"def print_last_char(input_string):
  print(input_string[-1])","def print_last_char(input_string):
  print(name, input_string[-1])",Syntax Error,File I/O
"Generate Python code to print the first 10 numbers from 10 to 19, seperated by commas.",,"for i in range(10,20):
    if i == 19:
        print(i, end = '')
    else:
        print(i, end = ', ')","for i in range(10,20):
if i == 19:
    print(i, end = '')
else:
    print(i, end = ', ')",Syntax Error,File I/O
Create a Python script that will automatically detect the largest number in a given list.,"[7, 2, -4, 5, 8, 1]","def find_largest_number(list):
 largest = list[0]
 for number in list:
 if number > largest:
 largest = number
 return largest

list = [7, 2, -4, 5, 8, 1]
print(find_largest_number(list))
# Output: 8","def find_largest_number(list):
 largest = list[0]
 for number in list:
 if number > largest:
 large",Incomplete Answer,Recursion
Generate a Python program to unpack a given list of tuples,"[(1, ""a""), (2, ""b""), (3, ""c"")]","list_of_tuples = [(1, ""a""), (2, ""b""), (3, ""c"")]

list_1, list_2 = zip(*list_of_tuples)

print(list_1)
print(list_2)","list_of_tuples = [(1, ""a""), (2, ""b""), (3, ""c"")]

list_1, list_2 = zip(*list_of_tuples)

print(list_1)
print(list_2)",Syntax Error,OOP
Design a python program that returns the index of the first occurrence of an item in a given list,"item = 7
list = [1, 4, 8, 7, 5, 9, 7]","def index_first_occurrence(item, list):
    for i in range(len(list)):
        if list[i] == item:
            return i
    return -1","def index_first_occurrence(item, list):
    for i in range(len(lis",Incomplete Answer,OOP
Modify this Python program to sort a given list of numbers.,"numbers = [2, 3, 4, 5, 1]","numbers.sort()
print(numbers) # prints [1, 2, 3, 4, 5]","numbers.sort()
print(numbers) # prints [1, 2, 3, 4, 5]",correct,File I/O
Generate a Python program to find the intersection of two lists.,,"def intersect(l1, l2):
    return [x for x in l1 if x in l2]","def intersect(l1, l2):
    return [x for x in l1 if x in l2]",correct,OOP
Create a Python program to read in a list of items and print them out in reverse order.,"[""Apple"", ""Pear"", ""Banana"", ""Orange""]","my_list = [""Apple"", ""Pear"", ""Banana"", ""Orange""]

for item in reversed(my_list):
 print(item)","my_list = [""Apple"", ""Pear"", ""Banana"", ""Orange""",Incomplete Answer,OOP
Create a Python Program to print the Fibonacci sequence up to n terms,Print the Fibonacci sequence up to the 5th term,"def Fibonacci(n):
      
    # First and second number in the sequence 
    Fib_list = [0, 1]
    
    # Generate the Fibonacci sequence up to n terms
    for i in range(2,n): 
        Fib_list.append(Fib_list[i-2] + Fib_list[i-1])
    return Fib_list

# Driver code 
n = 5
print(Fibonacci(n))","def Fibonacci(n)
      
    # First and second number in the sequence 
    Fib_list = [0, 1]
    
    # Generate the Fibonacci sequence up to n terms
    for i in range(2,n) 
        Fib_list.append(Fib_list[i-2] + Fib_list[i-1])
    return Fib_list

# Driver code 
n = 5
print(Fibonacci(n))",Syntax Error,Loops
Create a Python script to scrape content from a website.,Website URL: 'https://example.com',"import requests
from bs4 import BeautifulSoup 
 
url = 'https://example.com'
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')
 
for content in soup.find_all('div', class_='content'):
 print(content.text)","import requests
from bs4 import BeautifulSoup 
 
url = 'https://example.com'
page = requests.get(url)
soup = Beaut",Incomplete Answer,File I/O
Find the most efficient algorithm to reverse a string in Python,,"def reverse(input): 
  str = """" 
  for i in input: 
    str = i + str
  return str","def reverse(input) 
  str = """" 
  for i in input 
    str = i + str
  return str",Syntax Error,File I/O
"Write a Python program to combine two dictionaries of similar structure together, such that the entries in the two dictionaries are merged into a single dictionary.","dict_a = {'a':1, 'b':2, 'c':3}
dict_b = {'d':4, 'e':5, 'f':6}","def merge_dict(dict_a, dict_b):
    merged_dict = {**dict_a, **dict_b}
    return merged_dict","def merge_dict(dict_a, dict_b):
    merged_dict = {**dict_a, **dict_b}
    return merged_dict",correct,File I/O
"Create a Python program to print out the sum of all even numbers between the given range, inclusive.","start = 2
end = 10","def sum_even_numbers(start, end):
 result = 0
 for n in range(start, end+1):
 if n % 2 == 0:
 result += n
 return result

print(sum_even_numbers(2, 10))","def sum_even_numbers(start, end):
 result = 0
 for n in range(start, end+1):",Incomplete Answer,Loops
"Using the input, create a Python program which generates a random array of length n filled with binary values.",n = 10,"import random

def random_binary_array(n):
    """"""Return a random array of length n with binary values.""""""
    array = []
    for i in range(n):
        array.append(random.choice([0, 1]))
    return array","import random

def random_binary_array(n):
    """"""Return a random array of length n with binary values.""""""
    array = []
    for i in range(n):
        array.append(random.choice([0, 1]))
    return array",correct,File I/O
Approximate pi to 4 decimal places using Monte Carlo simulation in Python.,,"import random

def approx_pi(n):
    circle_points = 0
    square_points = 0
 
    for _ in range(n):
        x = random.uniform(0, 1)
        y = random.uniform(0, 1)
        dist = x**2 + y**2
        if dist <= 1:
            circle_points += 1
        square_points +=1
 
    pi = 4 * (circle_points/square_points)
    return round(pi, 4)

print(approx_pi(1000))","import random

def approx_pi(n):
    circle_points = 0
    square_points = 0
 
    for _ in range(n):
        x = random.uniform(0, 1)
        y = random.uniform(0, 1)
        dist = x**2 + y**2
        if dist <= 1:
            circle_points += 1
        square_points +=1
 
    pi = 4 * (circle_points/square_points)
    return round(pi, 4)

pritn(approx_pi(1000))",Syntax Error,Recursion
Optimize the following Python function. The function calculates the sum of squares of two given numbers.,"def SumOfSquares(x,y):
    result = x**2 + y**2
    return result","def SumOfSquares(x, y):
 return x * (x + y) + y * y","def SumOfSquares(x, y):
 return x * (x + y) + y * y",Syntax Error,String Manipulation
Develop a Python program to calculate Fibonacci sequence.,,"def Fibonacci(n): 
    F = [0]*(n+1) 
    F[0] = 0; F[1] = 1
    for i in range(2, n + 1): 
        F[i] = F[i-1] + F[i-2]
    return F[n]","def Fibonacci(n): 
    F = [0]*(n+1) 
    F[0] = 0; F[1] = 1
    for i in range(2, n + 1): 
        F[i] = F[i-1] + F[i-2]
    return F[n]",correct,String Manipulation
Create a Python script to combine two dictionaries into one.,"dict1 = {'Name': 'John', 'Age': 30, 'Country': 'Mexico'}
dict2 = {'Animal': 'Pig', 'Color': 'Pink'}","def combine_dict(dict1, dict2):
    combined_dict = dict1.copy()
    combined_dict.update(dict2)
    return combined_dict","def combine_dict(dict1, dict2):
    combined_dict = dict1.copy()
    combined_dict.update(dict2)
    return combined_dict",correct,File I/O
Generate a recursive function in Python to compute the Fibonacci series,,"def Fib_recursive(n):
    if n <= 1:
        return n
    else:
        return Fib_recursive(n - 1) + Fib_recursive(n - 2)","def Fib_recursive(n):
    if n <= 1:
        return n
    else:
        return Fib_recursive(n - 1) + Fib_recursive(n - 2)",correct,OOP
Tackle the task of optimizing a given Python program for faster execution.,"# Program to find the sum of two numbers
def add_numbers(a, b):
    return a + b","# Program to find the sum of two numbers
def add_numbers(a, b):
    # Use bitwise operators instead of normal arithmetic operations
    # as they are much faster and more efficient 
    return a ^ b if a <= b else b ^ a if b <= a else a ^ b","# Program to find the sum of two numbers
def add_numbers(a, b):
    # Use bitwise operators instead of normal arithmetic operations
    # as they are much faster and more efficient 
    return a ^ b if a <= b else b ^ a if b <= a else a ^ b",correct,Loops
Write a Python program to reverse the list elements.,,"def reverse_list(list):
    reversed_list = list[::-1]
    return reversed_list","def reverse_list(list):
    reversed_list = list[::-1]
    return reversed_list",correct,Recursion
Optimize this Python code to reduce run time complexity,"def function(n):
    result = 0
    for i in range(n):
        for j in range(n):
            result += i * j
    return result","def function(n):
    result = 0
    for i in range(n):
        result += (n * (i * (i+1)) // 2)
    return result","def function(n):
    result = 0
    for i in range(n):
        result += (n * (i * (i+1)) // 2)
    return result",correct,OOP
Develop a Python program to estimate the value of PI using Leibniz's formula.,,"def estimate_pi(n_terms: int) -> float:
    numerator: float = 4.0
    denominator: float = 1.0
    operation: float = 1.0
    pi: float = 0.0

    for _ in range(n_terms):
        pi += operation * (numerator / denominator)
        denominator += 2.0
        operation *= -1.0

    return pi


if __name__ == ""__main__"":
    print(estimate_pi(1000))","def estimate_pi(n_terms: int) -> float:
    numerator: float = 4.0
    denominator: float = 1.0
    operation: float = 1.0
    pi: float = 0.0

    for _ in range(n_terms):
        pi += operation * (numerator / denominator)
        denominator += 2.0
        operation *= -1.0

    return pi


if __name__ == ""__main__"":
    print(estimate_pi(1000))",correct,OOP
Create a Python program that prints out the pyramid pattern as described in the input.,height = 5,"def print_pyramid(height):
    """"""Print the pyramid pattern as described in the input""""""
    for i in range(1, height+1):
        spaces = "" "" * (height - i)
        symbols = (2 * i - 1) * ""*""
        print(spaces + symbols + spaces)","def print_pyramid(height):
    """"""Print the pyramid pattern as described in the input""""""
    for i in range(1, height",Incomplete Answer,File I/O
Create a function in Python to generate a random string composed of letters and digits of length 8 characters.,,"import random

def random_string_generator():
    char_set = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    random_string = ''.join(random.sample(char_set, 8))
    return random_string

print(random_string_generator())","import random

def random_string_generator()
    char_set = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    random_string = ''.join(random.sample(char_set, 8))
    return random_string

print(random_string_generator())",Syntax Error,String Manipulation
Write a for loop in Python to print out the squared value of the numbers from 0 to 10.,,"for i in range(0,11):
    print(i**2)","for i in range(0,1",Incomplete Answer,String Manipulation
"Given a dictionary, create a program to find the longest word in Python.","{""hello"": 5, ""world"": 5, ""welcome"": 7, ""to"": 2, ""programming"": 11}","def longest_word(dictionary): 
    longest = """"
    for word in dictionary: 
        if len(word) > len(longest): 
            longest = word 
    return longest","def longest_word(dictionary): 
    longest = """"
    for word in dictionary: 
   ",Incomplete Answer,Loops
Write a python function to find the first natural number whose factorial is divisible by x.,,"def first_Factorial_Divisible_Number(x): 
    i = 1;
    fact = 1; 
    for i in range(1,x): 
        fact = fact * i 
        if (fact % x == 0): 
            break
    return i ","def first_Factorial_Divisible_Number(x): 
    i = 1;
    fact = 1; 
    for i in range(1,x): 
        fact = fact * i 
        if (fact % x == 0): 
            break
    return i ",correct,File I/O
Can you implement a k-nearest neighbor model using Python?,,"Yes, it is possible to implement a k-nearest neighbor model using Python. The SciKit-Learn library and other effective libraries such as PyKNN, KNeighbors-Classifier, and NearestNeighbors provide various functions and modules for users to implement a k-nearest neighbor model in Python.","Yes, it is possible to implement a k-nearest neighbor model using Python. The SciKit-Learn library and other effective libraries such as PyKNN, KNeighbors-Classifier, and NearestNeighbors provide various functions and modules for users to implement a k-nearest neighbor model in Python.",Syntax Error,OOP
Write a python function to find the minimum of two numbers.,,"def minimum(a,b):   
    if a <= b: 
        return a 
    else: 
        return b ","def minimum(a,b:   
    if a <= b: 
        return a 
    else: 
        return b ",Syntax Error,Recursion
Create an array of 10 integers in Python.,,"arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","arr = [1, 2, 3, 4,",Incomplete Answer,File I/O
"Refactor a Python program by identifying code unnecessarily repeated, converting it into a function, and using the function wherever necessary.","def my_function():
  for i in range(0, 5):
    print('loop 1:', i)

  for i in range(0, 5):
    print('loop 2:', i)","def my_function():
  print_loop(0, 5, 'loop 1')
  print_loop(0, 5, 'loop 2')

def print_loop(start, end, tag):
  for i in range(start, end):
    print(tag + ':', i)","def my_function():
  print_loop(0, 5, 'loop 1')
  print_loop(0, 5, 'loop 2')

def print_loop(start, end, tag):
  for i in range(start, end):
    print(name, tag + ':', i)",Syntax Error,OOP
Create a Python function for predicting the label for a given set of features.,"[10, 20, 30]","def predict_label(features):
    # write your code here
    label = None
    
    if features[0] > 10 and features[1] > 20:
        label = ""A""
    elif features[0] > 10 and features[1] < 20:
        label = ""B""
    else:
        label = ""C""
        
    return label

features = [10, 20, 30]
label = predict_label(features)
print(label)","def predict_label(features):
    # write your code here
    label = None
    
    if features[0] > 10 and features[1] > 20:
        label = ""A""
    elif features[0] > 10 and features[1] < 20:
        label = ""B""
    else:
        label = ""C""
        
    return label

features = [10, 20, 30]
label = predict_label(features)
print(name, label)",Syntax Error,Recursion
Construct a python program to create a dictionary encryption for a user-inputted string and display the encrypted text,,"def encrypt_string(string):
    letters = {}
    for i in range(len(string)):
        letters[string[i]] = i
    encrypted_text = """"
    for char in string:
        encrypted_text += str(letters[char])
    return encrypted_text","def encrypt_string(string):
    letters = {}
    for i in range(len(string)):
        letters[string[i]] = i
    encrypted_text = """"
    for char in string:
        encrypted_text += str(letters[char])
    return encrypted_text",correct,Recursion
Generate a python program for searching for a value in an array.,"Array: [0, 1, 2, 3, 4, 5]
Value: 3","def search_value(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1","def search_value(arr, target):
    for i in range(len(arr)):
 ",Incomplete Answer,File I/O
Write a function to check if the string is a valid email address or not using regex.,,"import re 
regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
def check_email(email): 
	if(re.search(regex,email)): 
		return (""Valid Email"") 
	else: 
		return (""Invalid Email"") ","import re 
regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
def check_email(email): 
	",Incomplete Answer,String Manipulation
Write a Python program to clean up a data set containing temperature readings. Write a function that takes the raw temperature data and returns a list of cleaned up readings as integers.,"raw_readings = [""  24.8"",""31 "",""   15.6    "", ""21.9  ""]","def clean_temps(raw_readings):
 cleaned_data = []
 for reading in raw_readings:
 cleaned_data.append(int(reading.strip()))
 return cleaned_data
 
print(clean_temps(raw_readings)) 
# Output: [24, 31, 15, 21]","def clean_temps(raw_readings):
 cleaned_data = []
 for reading in raw_readings:
 cleaned_data.append(in",Incomplete Answer,File I/O
Write a Python class to implement a stack.,,"class Stack:
    def __init__(self):
        self.items = []

    def isEmpty(self):
        return self.items == []

    def push(self, data):
        self.items.append(data)

    def pop(self):
        return self.items.pop()

    def peek(self):
        return self.items[len(self.items)-1]

    def size(self):
        return len(self.items)","class Stack:
    def __init__(self:
        self.items = []

    def isEmpty(self:
        return self.items == []

    def push(self, data:
        self.items.append(data

    def pop(self:
        return self.items.pop(

    def peek(self:
        return self.items[len(self.items-1]

    def size(self:
        return len(self.items",Syntax Error,File I/O
Write a function to group the 1st elements on the basis of 2nd elements in the given tuple list.,,"from itertools import groupby 
def group_element(test_list):
  res = dict()
  for key, val in groupby(sorted(test_list, key = lambda ele: ele[1]), key = lambda ele: ele[1]):
    res[key] = [ele[0] for ele in val] 
  return (res)
","from itertools import groupby 
def group_element(test_list):
  res = dict()
  for key, val in groupby(sorted(test_",Incomplete Answer,String Manipulation
Create a Python function that takes two strings as input. The function should return a boolean value that indicates whether the two strings are anagrams of each other.,"eat, tea","def is_anagram(s1, s2):
 s1 = s1.replace(' ', '').lower()
 s2 = s2.replace(' ', '').lower()

 if len(s1) == len(s2):
 return sorted(s1) == sorted(s2)
 else:
 return False","def is_anagram(s1, s2):
 s1 = s1.replace(' ', '').lower()
 s2 = s2.replace(' ', '').l",Incomplete Answer,File I/O
Compile a Python program that takes a given list and returns a dictionary with the list elements as keys and their frequencies as values.,"[apple, orange, banana, apple, apple]","def get_frequencies(arr):
  frequency_dict = {}
  for item in arr:
    if item in frequency_dict:
      frequency_dict[item] += 1
    else:
      frequency_dict[item] = 1
  
  return frequency_dict","def get_frequencies(arr):
  frequency_dict = {}
  for item in arr:
    if item in frequency_dict:
      frequency_dict[item] += 1
    else:
      frequency_dict[item] = 1
  
  return frequency_dict",correct,OOP
Create a Python function to identify if a number is divisible by 7.,42,"def is_divisible_by_7(number):
    return number % 7 == 0

result = is_divisible_by_7(42)
print(result) # True","def is_divisible_by_7(number):
    return number % 7 == 0

result = is_divisible_by_7(42)
print(result) # True",correct,Recursion
Write a python function to find the sublist having maximum length.,,"def Find_Max(lst): 
    maxList = max((x) for x in lst) 
    return maxList","def Find_Max(lst): 
    maxList = max((x) for x in lst) 
    return maxList",correct,Recursion
Write a Python code snippet to generate the following pattern using a single for loop.,,"for i in range(1, 10):
    for j in range(1, i):
        print(""*"", end="""")
    print()","for i in range(1, 10):
    for j in range(1",Incomplete Answer,File I/O
Write a function to count array elements having modular inverse under given prime number p equal to itself.,,"def modular_inverse(arr, N, P):
	current_element = 0
	for i in range(0, N):
		if ((arr[i] * arr[i]) % P == 1):
			current_element = current_element + 1
	return current_element","def modular_inverse(arr, N, P):
	current_element = 0
	for i in range(0, N):
		if ((arr[i] * arr[i]) % P == 1):
			current_element = current_element + 1
	return current_element",Syntax Error,Loops
Create a function in Python to find the length of a string.,,"def string_length(word):
  return len(word)

print(string_length('Hello World!'))
# Output: 12","def string_length(word):
  return len(word)

pr",Incomplete Answer,String Manipulation
Design an algorithm to analyze text data and identify patterns.,Text data to be analyzed.,"A Python implementation of the algorithm that takes the text data as input, identifies patterns in the data, and produces meaningful results.","A Python implementation of the algorithm that takes the text data as input, identifies patterns in the data, and produces meaningful results.",correct,Recursion
"Write a Python program to read a list of numbers from the user, and then output the average of the numbers.",,"numbers = []

# get numbers from the user
while True:
 user_input = input('Enter a number (or press enter to quit): ')
 if user_input == '':
 break
 numbers.append(int(user_input))

#calculate the average
average = sum(numbers) / len(numbers)

print(f'The average is {average}')","numbers = []

# get numbers from the user
while True:
 user_input = input('Enter a number (or press enter to quit: '
 if user_input == '':
 break
 numbers.append(int(user_input

#calculate the average
average = sum(numbers / len(numbers

print(f'The average is {average}'",Syntax Error,OOP
Compute the sum of the fibonacci sequence up to n using a recursive Python function.,5,"def fib_sum(n):
  if n <= 1:
    return n
  else:
    return fib_sum(n-1) + fib_sum(n-2) + n

print(fib_sum(5))","def fib_sum(n):
  if n <= 1:
    return n
  else:
    r",Incomplete Answer,File I/O
Generate a python function that takes a dataframe as its input and returns the sum of all values in the dataframe.,"import pandas as pd

df = pd.DataFrame([[3, 4, 5], [1, 2, 3], [4, 5, 6]], 
                   columns = ['A', 'B', 'C'])","def sum_dataframe(df):
 total = 0
 for col in df.columns:
 total += df[col].sum()

 return total
 
# Example usage
print(sum_dataframe(df)) # prints 18","def sum_dataframe(df):
 total = 0
 for col in df.columns:
 total += df[col].sum()

 return total
 
# Example usage
print(sum_dataframe(df)) # prints 18",correct,File I/O
Create a script in Python that checks a provided URL for a specific keyword within its content and outputs either a pass or fail result.,"URL: http://www.example.com
Keyword: success","import requests

url = 'http://www.example.com'
keyword = 'success'

r = requests.get(url)
if keyword in r.text:
 print('Pass')
else:
 print('Fail')","import requests

url = 'http://www.example.com'
keyword = 'success'

r = requests.get(url)
if keyword in r.text:
 print('Pass')
else:
 print('Fail')",Syntax Error,File I/O
Create a python function that prints out the numbers from 1 to n,n = 5,"def printNumbers(n): 
  for i in range(1,n+1): 
    print(i, end ="" "") 

printNumbers(5)","def printNumbers(n): 
  for i in range(1,n+1): 
    print(i, end ="" "") 

printNumbers(5)",correct,Recursion
Generate a Python script that contains a function with two parameters and returns the sum of the two parameters.,,"def add(x, y): 
 """"""Returns the sum of x and y""""""
 return x + y","def add(x, y: 
 """"""Returns the sum of x and y""""""
 return x + y",Syntax Error,Loops
"Given two strings s and t, write a Python program to check if t is a substring of s.","s = ""abcabc""
t = ""abc""","def is_substring(s, t):
    if t in s:
        return True
    else:
        return False","def is_substring(s, t):
    if t in s:
     ",Incomplete Answer,File I/O
Create a Python program that prints a welcome message to the user based on their input.,"""Welcome to my program!""","name = input(""Enter your name:"") 
 
print(""Welcome to my program "" + name + ""!"")","name = input(""Enter your name:"") 
 
print(""Welcome to my program "" + name + ""!"")",correct,File I/O
Create a class in Python to store temperature data.,,"class TemperatureData:
    def __init__(self, temperature):
        self.temperature = temperature

    def get_temperature(self):
        return self.temperature","class TemperatureData:
    def __init__(self, temperature):
        self.temperat",Incomplete Answer,String Manipulation
"Write a Python program to solve a quadratic equation given the coefficients a, b, c?",,"import math

def solve_quadratic(a, b, c):
    # calculate discriminant
    d = (b**2) - (4*a*c)
    
    # find two solutions
    sol1 = (-b-math.sqrt(d))/(2*a)
    sol2 = (-b+math.sqrt(d))/(2*a)
    
    return sol1, sol2","import math

def solve_quadratic(a, b, c):
    # calculate discriminant
    d = (b**2) - (4*a*c)
    
    # fin",Incomplete Answer,Loops
Create a python program that categorizes a given list of numbers into odd and even numbers.,"list N = [1, 2, 3, 4, 5, 6]","even = []
odd = []

for num in N:
    if num % 2 == 0:
        even.append(num)
    else:
        odd.append(num)","even = []
odd = []

for num in N:
if num % 2 == 0:
    even.append(num)
else:
    odd.append(num)",Syntax Error,String Manipulation
Construct a code in Python to reverse a given list.,"[""Apple"", ""Banana"", ""Cherry""]","myList = [""Apple"", ""Banana"", ""Cherry""]

def reverse(myList):
    myList.reverse()
    return myList

print(reverse(myList))  # [""Cherry"", ""Banana"", ""Apple""]","myList = [""Apple"", ""Banana"", ""Cherry""]

def reverse(myList):
    myList.revers",Incomplete Answer,String Manipulation
Create a Python for loop that prints out each element in a given list.,"[10, 20, 30, 40]","for element in [10,20,30,40]:
    print(element)","for element in [10,20,30,40]:
    print(element)",correct,Loops
Write a python function to find the sum of hamming distances of all consecutive numbers from o to n.,,"def Total_Hamming_Distance(n):   
    i = 1
    sum = 0
    while (n // i > 0):  
        sum = sum + n // i  
        i = i * 2     
    return sum","def Total_Hamming_Distance(n):   
    i = 1
    sum = 0
    while (n // i ",Incomplete Answer,File I/O
Generate a Python program which will take as input a string and output the corresponding hexadecimal representation of the string.,"""Hello world""","import binascii

def stringToHex(s):
 output = ''
 for c in s:
 output += '%02x' % ord(c)

return output

inputString = input('Input a string:')
hexString = stringToHex(inputString)
print(""The hexadecimal representation of the string is: {}"".format(hexString))","import binascii

def stringToHex(s):
 output = ''
 for c in s:
 output += '%02x' % ord(c)

return output

inputString = input('Inp",Incomplete Answer,Recursion
"Create a Python script to calculate all possible paths from (0,0,0) to (5,5,5).",,"def calculate_paths(x, y, z):
    if x == 5 and y == 5 and z == 5:
        return 1
    total_paths = 0
    if x < 5:
        total_paths += calculate_paths(x + 1, y, z)
    if y < 5:
        total_paths += calculate_paths(x, y + 1, z)
    if z < 5:
        total_paths += calculate_paths(x, y, z + 1)
    return total_paths","def calculate_paths(x, y, z):
    if x == 5 and y == 5 and z == 5:
        return 1
    total_paths = 0
    if x < 5:
        total_paths += calculate_paths(x + 1, y, z)
    if y < 5:
        total_paths += calculate_paths(x, y + 1, z)
    if z < 5:
        total_paths += calculate_paths(x, y, z + 1)
    return total_paths",Syntax Error,OOP
Create a python program to remove all the values in a list that are greater than a given value.,"list = [10, 15, 20, 25, 30], remove values greater than 15","# Defining a function to remove all the values in a list that are greater than a given value
def remove_greater(list, n):
  return [val for val in list if val <= n]

# Testing the remove_greater() function
list = [10, 15, 20, 25, 30]
print(remove_greater(list, 15)) # [10, 15]","# Defining a function to remove all the values in a list that are greater than a given value
def remove_greater(list, n):
  return [val fo",Incomplete Answer,OOP
Design and write a python program that simplifies user input.,,"import re

def simplify_user_input(user_input):
    words = user_input.split("" "")
    filtered_words = [word for word in words if len(word) > 2]
    return "" "".join(filtered_words)

user_input = ""I have a great idea   !    Let's  do it""
simplified_string = simplify_user_input(user_input) # ""idea great Let's do""","import re

def simplify_user_input(user_input):
    words = user_input.split("" "")
    filtered_words = [word for word in words if len(word) > 2]
    return "" "".join(filtered_words)

user_input = ""I have a great idea   !    Let's  do it""
simplified_string = simplify_user_input(user_input) # ""idea great Let's do""",correct,String Manipulation
Generate a python program to generate a random list of N elements.,N = 5,"import random

def generate_random_list(n):
    res = []
    for _ in range(n):
        res.append(random.randint(1, 100))
    return res","import random

def generate_random_list(n):
    res = []
    for _ i",Incomplete Answer,File I/O
Create a function using Python that reverses the order of the words in a given string.,Please reverse the order of the words.,"def reverse_words(string): 
    words = string.split(' ') 
    reverse = words[::-1] 
    return ' '.join(reverse)","def reverse_words(string): 
    words = string.split(' ') 
    reverse = words[::-1] 
    return ' '.join(reverse)",correct,String Manipulation
Create an AI model in Python that predicts whether a person is a relative of the speaker.,No input,"def relative_prediction_model():
    # Variables
    features = [""age"", ""gender"", ""race"", ""income"", ""location"", ""origin"", ""religion"", ""political views"", ""marital status"", ""education level"", ""occupation""]
    target = ""relation""
    # Defining model, training and predicting
    model = MLPClassifier()
    model.fit(features, target)
    return model","def relative_prediction_model():
    # Variables
    features = [""age"", ""gender"", ""race"", ""income"", ""location"", ""origin"", ""religion"", ""political views"", ""marital status"", ""education level"", ""occupation""]
    target = ""relation""
    # Defining model, training and predicting
    model = MLPClassifier()
    model.fit(features, target)
    return model",correct,OOP
Write a Python program to parse a string containing HTML tags and extract the text not contained in the HTML tags.,"<p>This is a <a href=""https://example.com"">link</a>.</p>","import re

html = '<p>This is a <a href=""https://example.com"">link</a>.'
text = re.sub(r'<[^>]+>', '', html)
print(text)

# Output: This is a link.","import re

html = '<p>This is a <a href=""https://example.com"">link</a>.'
",Incomplete Answer,OOP
Generate a python program to find and print the count of each vowel present in the given string.,,"vowels = ""aeiou""
input_string = input(""Input string: "")

vowel_count = {}
for char in input_string:
  if char in vowels:
    if char in vowel_count:
      vowel_count[char] += 1
    else:
      vowel_count[char] = 1

print (vowel_count)","vowels = ""aeiou""
input_string = input(""Input string: "")

vowel_count = {}
for char in input_string:
  if char in vowel",Incomplete Answer,Loops
"Create a function in Python which takes in a number n and returns ""Fizz"" if the number is divisible by 3, ""Buzz"" if the number is divisible by 5, and ""FizzBuzz"" if the number is divisible by both 3 and 5.",Number: 15,"def fizzbuzz(n):
 if n % 3 == 0 and n % 5 == 0:
  return 'FizzBuzz'
 elif n % 3 == 0:
  return 'Fizz'
 elif n % 5 == 0:
  return 'Buzz'
 else:
  return n","def fizzbuzz(n):
 if n % 3 == 0 and n % 5 == 0:
  return 'FizzBuzz'
 elif n ",Incomplete Answer,OOP
Write a Python program to generate UUID,,"import uuid

def generate_uuid():
    return str(uuid.uuid4())","import uuid

def generate_uuid():
    return str(uuid.uuid4())",correct,Loops
Design a Python program for generating a random alphanumeric string,,"import random
import string

def generateRandomString(stringLength=8):
    lettersAndDigits = string.ascii_letters + string.digits
    return ''.join(random.choice(lettersAndDigits) for i in range(stringLength))

print (""Random alphanumeric string is:"", generateRandomString())","import random
import string

def generateRandomString(stringLength=8):
    lettersAndDigits = string.ascii_letters + string.digits
    return ''.join(random.choice(lettersAndDigits) for i in range(stringLength))

print (""Random alphanumeric string is:"", generateRandomString())",Syntax Error,OOP
Write a function to find out the maximum sum such that no two chosen numbers are adjacent for the given rectangular grid of dimension 2 x n.,,"def max_sum_rectangular_grid(grid, n) : 
	incl = max(grid[0][0], grid[1][0]) 
	excl = 0
	for i in range(1, n) : 
		excl_new = max(excl, incl) 
		incl = excl + max(grid[0][i], grid[1][i]) 
		excl = excl_new 
	return max(excl, incl)","def max_sum_rectangular_grid(grid, n) : 
	incl = max(grid[0][0], grid[1][0]) 
	excl = 0
	for i in range(1, n) : 
		excl_new = max(excl, incl) 
		incl = excl + max(grid[0][i], grid[1][i]) 
		excl = excl_new 
	return max(excl, incl)",correct,OOP
Produce code to print out the multiplication table of a given number in Python.,Number: 5,"# Program to print the multiplication table
num = 5

# Iterate from 1 to 10
for i in range(1,11):
 print(f'{num} X {i} = {num * i}')","# Program to print the multiplication table
num = 5

# Iterate from 1 to 10
for i in range(1,11):
 print(f'{num} X {i} = {num * i}')",Syntax Error,Loops
Create an algorithm to detect a palindrome string in Python.,"String str = ""madam"";","def isPalindrome(str):
  left, right = 0, len(str) - 1
  while right >= left:
    if not str[left] == str[right]:
      return False
    left += 1
    right -= 1
  return True","def isPalindrome(str):
  left, right = 0, len(str) - 1
  while right >= left:
    if no",Incomplete Answer,String Manipulation
Write a Python program to read in a list of words separated by spaces and reverse them in-place.,"word_list = [""Birds"", ""fly"", ""in"", ""the"", ""sky""]",word_list.reverse(),word_list.reverse(),Syntax Error,File I/O
Suggest a solution that writes a Python program to print the following pattern.,,"for i in range(1, 7):
    print(""*"" * i)","for i in range(1, 7):
    print(""*"" * i)",correct,String Manipulation
Write a function in Python which takes a number and multiplies it by 3.,number = 4,"def multiplyByThree(number):
  return number*3

multiplied_value = multiplyByThree(4)
print(multiplied_value)","def multiplyByThree(number):
  return number*3

multiplied_value = multiplyByThree(4)
pritn(multiplied_value)",Syntax Error,Loops
"Create a Python function that takes two lists as parameters, and returns the first list with each element doubled.","list1: [1, 2, 3] 
list2: [4, 5, 6]","def double_list(list1,list2):
  for i in range(len(list1)):
    list1[i] *= 2
  return list1

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

print(double_list(list1,list2))","def double_list(list1,list2)
  for i in range(len(list1))
    list1[i] *= 2
  return list1

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

print(double_list(list1,list2))",Syntax Error,OOP
Convert a Bubble Sort algorithm in C++ to Python.,,"def bubble_sort(nums):
    n = len(nums)
    # Traverse through all array elements
    for i in range(n):
        # Last i elements are already in place
        for j in range(0, n-i-1):
            # traverse the array from 0 to n-i-1
            # Swap if the element found is greater than the next element
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]","def bubble_sort(nums):
    n = len(nums)
    # Traverse through all array elements
    for i in range(n):
        # Last i elements are already in place
        for j in range(0, n-i-1):
            # traverse the array from 0 to n-i-1
            # Swap if the element found is greater than the next element
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]",correct,String Manipulation
"Given a sentence, write a Python program to capitalise the first letter of each word.",Sentence: hello world,"words = ""hello world""
words = words.split()

new_words = [word.capitalize() for word in words]
modified_string = "" "".join(new_words)

print(modified_string)","words = ""hello world""
words = words.split()

new_words = [word.capitalize() for word in words]
modified_string = "" "".join(new_words)

print(name, modified_string)",Syntax Error,Loops
Create a Python function to remove duplicate elements from a given array.,,"def remove_duplicates(arr):
    seen = set()
    result = []
    for item in arr:
        if item not in seen:
            seen.add(item)
            result.append(item)
    
    return result","def remove_duplicates(arr):
    seen = set()
    result = []
    for item in arr:
        if item not in seen:
            seen.add(item)
            result.append(item)
    
    return result",correct,Recursion
"Create a Django application with a model that stores the name, address, and email of a user.",,"# create Django app
django-admin startproject myapp

# create user model
from django.db import models

class User(models.Model): 
    name = models.CharField(max_length=100) 
    address = models.CharField(max_length=100)
    email = models.EmailField(max_length=100)

# migrate models
python manage.py makemigrations
python manage.py migrate","# create Django app
django-admin startproject myapp

# create user model
from django.db import models

class User(models.Model): 
    name = models.CharField(max_length=10",Incomplete Answer,String Manipulation
Create a Python function that processes a string and returns the string in lowercase.,"String to be modified: ""MyString""","def process_string(string):
    return string.lower()

process_string(""MyString"") # returns ""mystring""","def process_string(string):
    return string.lower()

process_string(""MyString"") # returns ""mystring""",correct,Loops
Write a Python program to intersect two given arrays without using any in-built functions.,"a = [1, 7, 11, 58, 80]
b = [11, 13, 7, 32, 80]","def intersect(a, b):
  intersection = [] 
  for i in a:
    for j in b:
      if i == j and i not in intersection:
        intersection.append(i)
  return intersection

print(intersect([1, 7, 11, 58, 80], [11, 13, 7, 32, 80]))","def intersect(a, b):
  intersection = [] 
  for i in a:
    for j in b:
      if i == j and i not in intersection",Incomplete Answer,Loops
Generate a list of all possible subsets of a list of size n in Python,"list = [1,2,3]","def all_subsets(lst):
    
    res = [[]]
    
    for elem in lst:
        res += [subset + [elem] for subset in res]
        
    return res
all_subsets([1,2,3])","def all_subsets(lst):
    
    res = [[]]
    
    for elem in lst:
        res +",Incomplete Answer,OOP
Write a Python program to sort a given list of numbers using QuickSort.,"[3, 8, 6, 10, 11, 4]","def quickSort(arr): 
	if len(arr) <= 1:
	return arr 
	else: 
		pivot = arr[0] 
		lessThanPivot = [number for number in arr[1:] if number <= pivot] 
		moreThanPivot = [number for number in arr[1:] if number > pivot] 
		return quickSort(lessThanPivot) + [pivot] + quickSort(moreThanPivot)

arr = [3, 8, 6, 10, 11, 4] 
print(quickSort(arr))","def quickSort(arr): 
	if len(arr) <= 1:
	return arr 
	else: 
		pivot = arr[0] 
		lessThanPivot = [number for number in arr[1:] if number <= pivot] 
		moreThanPivot = [n",Incomplete Answer,OOP
Write a function to move all zeroes to the end of the given array.,,"def re_order(A):
    k = 0
    for i in A:
        if i:
            A[k] = i
            k = k + 1
    for i in range(k, len(A)):
        A[i] = 0
    return A","def re_order(A):
    k = 0
    for i in A:
        if i:
            A[k] = i
 ",Incomplete Answer,File I/O
Generate Python class to define and simulate a bouncing ball.,,"import math

class BouncingBall():
    def __init__(self):
        self.x = 0.0   # horizontal position 
        self.y = 5.0   # vertical position 
        self.vy = 0.2  # vertical velocity 
        self.g = 9.81  # gravitational acceleration 

    def update(self, dt):
        self.y -= self.vy * dt
        self.vy -= self.g * dt

        if self.y <= 0:
            self.y = 0
            self.vy *= -0.9","import math

class BouncingBall():
    def __init__(self):
        self.x = 0.0   # horizontal position 
        self.y = 5.0   # vertical position 
        self.vy = 0.2  # vertical velocity 
        self.g = 9.81  # gravitational acceleration 

    def update(self, dt):
        self.y -= self.vy * dt
        self.vy -= self.g * dt

        if self.y <= 0:
            self.y = 0
            self.vy *= -0.9",correct,Loops
"Write a function in Python that takes in two parameters, an array of integers and a target, and returns the indices of the two numbers in the array that add up to the target.","arr = [3, 5, 7, 9, 10]
target = 12","def two_sum(arr, target):
 for i in range(len(arr)):
 for j in range(i+1, len(arr)):
 if arr[i] + arr[j] == target:
 return (i, j)

# Usage
arr = [3, 5, 7, 9, 10]
target = 12

print(two_sum(arr, target))
# Output: (0, 4)","def two_sum(arr, target)
 for i in range(len(arr))
 for j in range(i+1, len(arr))
 if arr[i] + arr[j] == target
 return (i, j)

# Usage
arr = [3, 5, 7, 9, 10]
target = 12

print(two_sum(arr, target))
# Output (0, 4)",Syntax Error,OOP
Create a solution to implement a sorting algorithm in Python.,,"def sort(arr): 
    for i in range(len(arr)): 
  
        min_idx = i 
        for j in range(i+1, len(arr)): 
            if arr[min_idx] > arr[j]: 
                min_idx = j 
          
        arr[i], arr[min_idx] = arr[min_idx], arr[i] 
  
    return arr","def sort(arr): 
    for i in range(len(arr)): 
  
        min_idx = i 
        for j in range(i+1, len(arr)): 
            if arr[",Incomplete Answer,String Manipulation
Write a Python program to check whether a string contains all letters of the alphabet,,"def check_alphabet(s):
    alphabet = ""abcdefghijklmnopqrstuvwxyz""
    for letter in alphabet:
        if letter not in s:
            return False
    return True","def check_alphabet(s:
    alphabet = ""abcdefghijklmnopqrstuvwxyz""
    for letter in alphabet:
        if letter not in s:
            return False
    return True",Syntax Error,File I/O
Write a Python program that divides two integers and prevents divide by zero error.,,"def divide(num1, num2):
    try:
        result = num1 / num2
        print(""Result is {}"".format(result))
    except:
        print(""Divide by zero error!"")","def divide(num1, num2):
    try:
        result = num1 / num2
        print(""R",Incomplete Answer,String Manipulation
Write a function in Python to convert a list of strings to an array of integers.,"list = ['12','14','17','25','99','168']","def convert_list_integers(str_list):
    return list(map(int, str_list))

list = ['12','14','17','25','99','168']
arr = convert_list_integers(list)
print(arr) # [12, 14, 17, 25, 99, 168]","def convert_list_integers(str_list):
    return list(map(int, str_list))

list = ['12','14','",Incomplete Answer,File I/O
Write a Python program to determine and-or operations,x = False and False,"x = False and False

# Output
print(x)
# False","x = False and False

# Output
print(x)
# False",correct,File I/O
Develop a code in Python to simulate a lottery game.,,"import random

def generate_lottery_numbers():
    # Generate 6 unique random numbers between 1 and 49
    lottery_nums = random.sample(range(1, 50), 6)
    return lottery_nums

if __name__ == '__main__':
    print(""Lottery numbers:"", generate_lottery_numbers())","import random

def generate_lottery_numbers():
    # Generate 6 unique random numbers between 1 and 49
    lottery_nums = random.sample(range(1, 50), 6)
    return lottery_nums

if __name__ == '__main__':
    print(""Lottery numbers:"", generate_lottery_numbers())",correct,File I/O
Write a Python program to print the even numbers from 1 to 50,,"for i in range(1,51):
  if (i % 2 == 0):
    print(i)","for i in range(1,51):
  if",Incomplete Answer,Loops
Optimize a code snippet to port the code from Python to R.,"// Python code snippet
def add_numbers(a, b):
    return a + b","# R code snippet
add_numbers <- function(a, b) {
  a + b
}","# R code snippet
add_numbers ",Incomplete Answer,String Manipulation
Write a python program to read input from user and check if it is a valid number.,,"while True:
  num = input(""Please enter a valid number: "")
  if num.isdigit():
    print(""Valid number entered: "" + num)
    break
  else:
    print(""Invalid number entered - please try again."")","while True:
  num = input(""Please enter a valid number: "")
  if num.isdigit():
    print(""Valid number entered: "" + num)
    break
  else:
    print(""Invalid number entered - please try again."")",correct,File I/O
Write a test suite for a Python class that calculates the area of a triangle given the length of its sides.,,"import unittest

class TriangleTestCase(unittest.TestCase):
    def setUp(self):
        self.triangle1 = Triangle(2,3,4)
        self.triangle2 = Triangle(3,4,5)

    def test_area_triangle1(self):
        self.assertEqual(self.triangle1.area(), 2.9047)
        
    def test_area_triangle2(self):
        self.assertEqual(self.triangle2.area(), 6.0000)","import unittest

class TriangleTestCase(unittest.TestCase):
    def setUp(self):
        self.triangle1 = Triangle(2,3,4)
        self.triangle2 = Triangle(3,4,5)

    def test_area_triangle1(self):
        self.assertEqual(self.triangle1.area(), 2.9047)
        
    def test_area_triangle2(self):
        self.assertEqual(self.triangle2.area(), 6.0000)",Syntax Error,Recursion
Write a Python function to convert an array of strings to a dictionary.,"[""John"", ""James"", ""Bubby"", ""Mary""]","def string_to_dict(strings):
    return {string: len(string) for string in strings}","def string_to_dict(strings):
    return {",Incomplete Answer,Recursion
Implement a function in Python to generate a password of size n,6,"import string
import random

def generate_password(n):
    password = ''
    for i in range(n):
        password += random.choice(string.ascii_letters + 
        string.digits + string.punctuation)
    return password","import string
import random

def generate_password(n):
    password = ''
    for i in range(n):
        password += random.choice(string.ascii_letters + 
        string.digits + string.punctuation)
    return password",correct,File I/O
Generate a Python program to convert a list of strings to a list of integers.,"['1', '3', '2', '6']","def str_to_int(lst):
  int_lst = []
  for i in lst:
    int_lst.append(int(i))
  return int_lst","def str_to_int(lst):
  int_lst = []
  for i in lst:
    int_lst.append(int(i))
  return int_lst",correct,String Manipulation
Design an efficient data-structure using Python for,storing a list of strings that can be efficiently searched.,"class StringList:
    def __init__(self): 
        self.storage = []
 
    def add(self, item): 
        self.storage.append(item)
 
    def search(self, query): 
        if query in self.storage:
            return True 
        else: 
            return False","class StringList:
    def __init__(self): 
        self.storage = []
 
    def add(self, item): 
        self.storage.append(item)
 
    def search(self, query): 
        if query in self.storage:
            return True 
        else: 
            return False",correct,File I/O
Create a Python program to calculate the sum of all numbers between 1 and 50 inclusive.,,"total = 0

for i in range(1, 51):
    total += i

print(total)","total = 0

for i in range(1, 51):
    total += i

print(total)",correct,Loops
Transform the following nested for loop into a list comprehension statement in Python.,"for i in range(2, 5): 
    for j in range(3): 
        print(i, j)","[(i,j)  for i in range(2,5) for j in range(3)]","[(i,j)  for i in range(2,5) for j in range(3)]",correct,Recursion
Develop a Python class that stores the details of 10 students of a college and renders them in a tabular format.,,"class StudentDetails:
 def __init__(self):
  self.students=[]
 
 def add_student(self,name,age,roll):
  self.students.append({""name"":name,""age"":age,""roll"":roll})
 
 def print_table(self):
  print(""Name\tAge\tRoll"")
  for s in self.students:
   print(""{}\t{}\t{}"".format(s['name'],s['age'],s['roll']))","class StudentDetails:
 def __init__(self):
  self.students=[]
 
 def add_student(self,name,age,roll):
  self.students.append({""name"":name,""age"":age,""r",Incomplete Answer,OOP
Write a Python program to identify the count of the largest contiguous subarray of numbers in a given array.,"arr=[-2, -3, 4, -1, -2, 1, 5, -3]","def max_contiguous_subarray(arr):
 max_end = 0
 max_so_far = 0

 for i in range(len(arr)):
 max_end = max(max_end + arr[i], 0)
 max_so_far = max(max_end, max_so_far)

 if max_so_far > 0:
 return len(arr) - max_so_far
 else:
 return 0","def max_contiguous_subarray(arr):
 max_end = 0
 max_so_far = 0

 for i in range(len(arr)):
 max_end = max(max_end + ",Incomplete Answer,Loops
Convert the following equation into a Python program: y = x^2 - 3x + 2,,"def equation(x):
    return (x**2 - 3*x + 2)","def equation(x):
    return (x**2 - 3*x + 2)",Syntax Error,String Manipulation
Write a Python code snippet that computes the Fibonacci sequence of the number 8.,,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

print(Fibonacci(8))","def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    e",Incomplete Answer,Recursion
Construct an algorithm in Python to convert a string to uppercase.,hello world,"def stringToUpper(str):
    return str.upper()

inputStr = ""hello world""

outputStr = stringToUpper(inputStr)

print(outputStr)","def stringToUpper(str):
    return str.upper()

inputStr = ""hello world""

outputStr = stringToUpper(inputStr)

pritn(outputStr)",Syntax Error,OOP
Write a script in Python that encrypts a given string.,,"def encrypt(string):
    encrypted_string = """"
    for i in range(len(string)):
        char = string[i]
        encrypted_string += chr(ord(char)+2)
    return encrypted_string","def encrypt(string):
    encrypted_string = """"
    for i in range(len(string)):
        char = string[i]
        encrypted_string += chr(ord(char)+2)
    return encrypted_string",correct,OOP
Write a class to represent an Employee in Python.,,"class Employee:
    def __init__(self, name, age, salary):
        self.name = name
        self.age = age
        self.salary = salary

   def get_name(self):
        return self.name

   def get_age(self):
        return self.age

   def get_salary(self):
        return self.salary","class Employee:
    def __init__(self, name, age, salary):
        self.name = name
        self.age = age
        self.salary = salary

   de",Incomplete Answer,Loops
Create a Ruby program to implement lexicographical sorting.,"[""ruby"", ""go"", ""java"", ""python""]","def lexicographical_sort(arr)
  arr.sort_by { |word| word.downcase }
end

sorted_arr = lexicographical_sort([""ruby"", ""go"", ""java"", ""python""])

puts sorted_arr","def lexicographical_sort(arr)
  arr.sort_by { |word| word.downcase }
end

sorte",Incomplete Answer,Recursion
Create a python program to check if the value entered is a prime number,,"def is_prime(n):
    # edge cases
    if n == 1 or n < 0:
        return False
    # check if number is divisible by any number
    # from 2 to n
    for i in range(2, n): 
        if (n % i) == 0: 
            return False
    return True  

x = 5
if is_prime(x): 
    print(x, ""is a prime number"") 
else: 
    print(x, ""is not a prime number"")","def is_prime(n):
    # edge cases
    if n == 1 or n < 0:
        return False
    # check if number is divisible by any number
    # from 2 to n
    for i in range(2, n): ",Incomplete Answer,Loops
Write a function which accepts an arbitrary list and converts it to a heap using heap queue algorithm.,,"import heapq as hq
def raw_heap(rawheap):
  hq.heapify(rawheap)
  return rawheap","import heapq as hq
def raw_heap(rawheap):
  hq.heapify(rawheap)
  return rawheap",Syntax Error,OOP
Create a Python class that encapsulates a Queue data structure.,,"class Queue:
  def __init__(self):
    self.items = []

  def is_empty(self):
    return self.items == []

  def enqueue(self, item):
    self.items.insert(0, item)
  
  def dequeue(self):
    return self.items.pop()

  def size(self):
    return len(self.items)","class Queue:
  def __init__(self):
    self.items = []

  def is_empty(self):
    return self.items == []

  def enqueue(self, item",Incomplete Answer,OOP
Write a Python code snippet to check if a list contains duplicated elements.,"[3, 6, 8, 9, 10, 3]","""""""
Python code snippet to check if a list contains duplicated elements
""""""

def has_duplicates(arr):
    seen_elements = set()
    for elem in arr:
        if elem in seen_elements:
            return True
        seen_elements.add(elem)
    return False

if __name__ == '__main__':
    arr = [3, 6, 8, 9, 10, 3]
    print(has_duplicates(arr)) # True","""""""
Python code snippet to check if a list contains duplicated elements
""""""

def has_duplicates(arr):
    seen_elements = set()
    for elem in arr:
        if elem in seen_elements:
            return True
        seen_elements.add(elem)
    return False

if __name__ == '__main__':
    arr = [3, 6, 8, 9, 10, 3]
    print(has_duplicates(arr)) # True",correct,OOP
Fill in the blanks to create a Python program to calculate the total number of words in a list.,"words = [""Hello"", ""World"", ""!""]","words = [""Hello"", ""World"", ""!""]

total_words = 0
for word in words:
____ total_words = total_words + ____

print(total_words)

# Output: 3

total_words = 0
for word in words:
    length = len(word)
    total_words = total_words + length

print(total_words)

# Output: 3","words = [""Hello"", ""World"", ""!""]

total_words = 0
for word in words
____ total_words = total_words + ____

print(total_words)

# Output 3

total_words = 0
for word in words
    length = len(word)
    total_words = total_words + length

print(total_words)

# Output 3",Syntax Error,Loops
"Write a function to find eulerian number a(n, m).",,"def eulerian_num(n, m): 
	if (m >= n or n == 0): 
		return 0 
	if (m == 0): 
		return 1 
	return ((n - m) * eulerian_num(n - 1, m - 1) +(m + 1) * eulerian_num(n - 1, m))","def eulerian_num(n, m): 
	if (m >= n or n == 0): 
		return 0 
	if (m == 0): 
		retu",Incomplete Answer,String Manipulation
Write a function to perform mathematical division operation across the given tuples.,,"def division_elements(test_tup1, test_tup2):
  res = tuple(ele1 // ele2 for ele1, ele2 in zip(test_tup1, test_tup2))
  return (res) ","def division_elements(test_tup1, test_tup2):
  res = tuple(ele1 //",Incomplete Answer,File I/O
Write a Python program to sort a dictionary by its keys.,"d = {""name"": ""John"", ""age"": 24, ""class"": ""Engineering""}","d = {""name"": ""John"", ""age"": 24, ""class"": ""Engineering""}

sorted_d = sorted(d.items(), key=lambda x: x[0]) 

print(sorted_d)","d = {""name"": ""John"", ""age"": 24, ""class"": ""Engineering""}

sort",Incomplete Answer,String Manipulation
Design an algorithm in Python to print all the permutations of a given string.,,"def permutations(s):
    result = []
    if len(s) == 1:
        result = [s]

    else:
        for i, letter in enumerate(s):
            for perm in permutations(s[:i] + s[i+1:]):
                result += [letter + perm]

    return result","def permutations(s)
    result = []
    if len(s) == 1
        result = [s]

    else
        for i, letter in enumerate(s)
            for perm in permutations(s[i] + s[i+1])
                result += [letter + perm]

    return result",Syntax Error,OOP
Create a class in Python that takes two integer arguments and implements the __add__ method.,,"class adder:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    def __add__(self):
        return self.x + self.y","class adder:
    def __init__(self, x, y):
        self.x = x
       ",Incomplete Answer,OOP
Generate a short Python program to swap two items in a given list.,,"def swap_items(lst, item1, item2):
    idx1 = lst.index(item1)
    idx2 = lst.index(item2)
    lst[idx1], lst[idx2] = lst[idx2], lst[idx1]
    
    return lst","def swap_items(lst, item1, item2):
    idx1 = lst.index(item1)
    idx2 = lst.i",Incomplete Answer,Recursion
Automate the following task using Python,You are given a spreadsheat which contains a list of customer names and their respective purchase amounts. Calculate the total purchase made by each customer.,"import pandas as pd

# load spreadsheet
df = pd.read_csv('customer_purchase.csv')

# calculate total purchase for each customer
total_purchase = df.groupby('Customer Name')['Purchase Amount'].sum().reset_index()

# print total purchase for each customer
print(total_purchase)","import pandas as pd

# load spreadsheet
df = pd.read_csv('customer_purchase.csv'

# calculate total purchase for each customer
total_purchase = df.groupby('Customer Name'['Purchase Amount'].sum(.reset_index(

# print total purchase for each customer
print(total_purchase",Syntax Error,File I/O
Create a searching algorithm in Python to find a target element in a list of integers.,"target = 7
elements = [1, 2, 3, 4, 5, 6, 7, 8]","def search(target, elements):
  start = 0 
  end = len(elements) - 1

  while start <= end:
    mid = (start + end) // 2 
      
    if target == elements[mid]: 
      return True 
  
    elif target < elements[mid]: 
      end = mid - 1

    else: 
      start = mid + 1
    
  return False","def search(target, elements):
  start = 0 
  end = len(elements) - 1

  while start <= end:
    mid = (start + end) // 2 
      
    if target == elements[mid]: 
      return True 
  
    elif target < elements[mid]: 
      end = mid - 1

    else: 
      start = mid + 1
    
  return False",Syntax Error,Loops
Implement a Python method to encrypt a given string.,"text = ""Hello, World!""","def encrypt(text): 
    result = """" 
    for i in range(len(text)): 
        char = text[i] 
        if (char.isupper()): 
            result += chr((ord(char) + 7)) 
        else: 
            result += chr((ord(char) + 3)) 
    return result 

text = ""Hello, World!""
print(encrypt(text))","def encrypt(text): 
    result = """" 
    for i in range(len(text)): 
        char = text[i] 
        if (char.isupper()): 
            result += chr((ord(char) + 7)) 
        else: 
            result += chr((ord(char) + 3)) 
    return result 

text = ""Hello, World!""
print(encrypt(text))",correct,Recursion
"Write a Python class to represent a person and it should have attributes such as name, age, and gender.",,"class Person:
    def __init__(self,name,age,gender):
        self.name = name
        self.age = age
        self.gender = gender

    def get_name(self):
        return self.name
    
    def get_age(self):
        return self.age
    
    def get_gender(self):
        return self.gender","class Person:
    def __init__(self,name,age,gender):
        self.name = name
        self.age = age
        self.gender = gender

    def get_n",Incomplete Answer,OOP
Create a python program to calculate the grade based on a given score.,80,"score = 80
if score >= 90:
    grade = 'A'
elif score >= 80:
    grade = 'B'
elif score >= 70:
    grade = 'C'
elif score >= 60:
    grade = 'D'
else:
    grade = 'F'

print(grade)","score = 80
if score >= 90:
    grade = 'A'
elif score >= 80:
    grade = 'B'
elif score >=",Incomplete Answer,File I/O
Write a python program to check whether two sequences are equal or not.,"seq_1: [1, 2, 3, 4]
seq_2: [1, 4, 3, 2]","def is_equal(seq_1, seq_2):
  return sorted(seq_1) == sorted(seq_2)","def is_equal(seq_1, seq_2):
  return sorted(seq_1) == sorted(seq_2)",Syntax Error,String Manipulation
Build a function in Python for computing the Hamming Distance between two strings of equal length.,"String 1: python
String 2: perl","def hammingDistance(s1, s2): 

    # initialize with 0
    distance = 0
  
    # Calculate the length of the string 
    length_str1 = len(s1) 
    # Compare adjacent characters and increment the count 
    # if characters are not same 
    for i in range(length_str1): 
        if s1[i] != s2[i]: 
            distance += 1
  
    return distance","def hammingDistance(s1, s2): 

    # initialize with 0
    distance = 0
  
    # Calculate the length of the string 
    length_str1 = len(s1) 
    # Compare adjacent characters and increment the count 
    # if characters are not same 
    for i in range(length_str1): 
        if s1[i] != s2[i]: 
            distance += 1
  
    return distance",Syntax Error,Loops
Write a function to assign frequency to each tuple in the given tuple list.,,"from collections import Counter 
def assign_freq(test_list):
  res = [(*key, val) for key, val in Counter(test_list).items()]
  return (str(res)) ","from collections import Counter 
def assign_freq(test_list):
  res = [(*",Incomplete Answer,File I/O
Generate a code to remove a given element from a dictionary in Python,"dictionary = {“a”:1, “b”:2, “c”:3}
key = “b”","def remove_dict_element(dictionary, key):
    # Check if the key is present in the dictionary
    if key in dictionary:
        # If yes, remove the key
        del dictionary[key]
    # Return the updated dictionary     
    return dictionary","def remove_dict_element(dictionary, key):
    # Check if the key is present in the dictionary
    if key in dictionary:
        # If yes, remove the key
        del dictionary[key]
    # Return the updated dictionary     
    return dictionary",correct,Recursion
Refactor the following Python function to use list comprehensions.,"def square_numbers(nums):
  result = []
  for num in nums:
    result.append(num ** 2)
  return result","def square_numbers(nums):
  return [num ** 2 for num in nums]","def square_numbers(nums):
  re",Incomplete Answer,Loops
Generate a Dockerfile for the following server configuration.,"Python 3.8.5
MySQL 5.7
Nginx 1.18.0","FROM python:3.8.5-slim

RUN apt-get update
RUN apt-get install -y mysql-server-5.7 nginx

RUN service mysql start && \
	mysql -e ""CREATE DATABASE new_database;""
	
EXPOSE 80

CMD [""nginx"", ""-g"", ""daemon off;""]","FROM python:3.8.5-slim

RUN apt-get update
RUN apt-get install -y mysql-server-5.7 nginx

RUN service my",Incomplete Answer,Recursion
Create a Python class that takes a list as input and returns a sorted list as output.,"[5, 2, 7, 3]","class SortList:
    def __init__(self, lst):
        self.lst = lst
        
    def sort_list(self):
        self.lst.sort()
        return self.lst","class SortList:
    def __init__(self, lst):
        self.lst = lst
      ",Incomplete Answer,Loops
Generate a new Python list that contains only the even values from a given list.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def get_even_list(list):
    even_list = []
    for num in list:
        if num % 2 == 0:
            even_list.append(num)
    return even_list

list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(get_even_list(list))","def get_even_list(list):
    even_list = []
    for num in list:
        if num % 2 == 0:
            eve",Incomplete Answer,OOP
Suggest a completion for a python function to find the square of a given number.,,"def square(num):
    return num**2","def square(num:
    return num**2",Syntax Error,OOP
Write a python function to left rotate the string.,,"def left_rotate(s,d):
    tmp = s[d : ] + s[0 : d]
    return tmp  ","def left_rotate(s,d):
    tmp = s[d : ] + s[0 : d]
    return tmp  ",Syntax Error,String Manipulation
Develop a class in Python that prints a box to the screen using asterisks.,,"class Box:
    def __init__(self, height, width):
        self.height = height
        self.width = width
    
    def print_box(self):
        for _ in range(self.height):
            for _ in range(self.width): 
                print(""*"", end="""")
            print("""")","class Box:
    def __init__(self, height, width):
        self.height = height
        self.width = width
    
    def print_box(self):",Incomplete Answer,String Manipulation
Write a Python program to group a list of numbers based on their modulo with a given number.,"list_numbers = [2, 6, 8, 10, 3, 7] 
num = 3","def group_modulo(list_numbers, num):
    result = {i:[] for i in range(num)}
    for number in list_numbers:
        result[number % num].append(number)
    
    return result
    
result = group_modulo(list_numbers, num)
print(result)","def group_modulo(list_numbers, num):
    result = {i:[] for i in range(num)}
    for number in list_numbers:
        ",Incomplete Answer,String Manipulation
Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order.,,"def tuple_intersection(test_list1, test_list2):
  res = set([tuple(sorted(ele)) for ele in test_list1]) & set([tuple(sorted(ele)) for ele in test_list2])
  return (res)","def tuple_intersection(test_list1, test_list2):
  res = set([tuple(sorted(ele)) for ",Incomplete Answer,Loops
Write a Python program that prints out items that appear in both listA and listB,"listA = [1, 2, 3, 4]
listB = [2, 4, 5, 6]","listA = [1, 2, 3, 4]
listB = [2, 4, 5, 6]

for i in listA:
    if i in listB:
        print(i)

# Output
2
4","listA = [1, 2, 3, 4]
listB = [2, 4, 5, 6]

for i in listA:
    if i in listB:
        print(i

# Output
2
4",Syntax Error,File I/O
Create a REST API to search for a user in the database.,,"A REST API can be created using programming languages such as Python, JavaScript, etc. It will contain code to connect to the database, query it for a user, and return a response in the appropriate format.","A REST API can be created using programming languages such as Python, JavaScript, etc. It will contain code to connect to the database, query it for a user, and return a response in the appropriate format.",Syntax Error,OOP
Construct a Python function that takes as input a string and returns the length of the longest word in the string.,"""This is an example string.""","def longest_word_length(input_string):
    longest_word_length = 0
    words = input_string.split()
    for word in words:
        if len(word) > longest_word_length:
            longest_word_length = len(word)
    return longest_word_length","def longest_word_length(input_string):
    longest_word_length = 0
    words = input_string.split()
    for word in word",Incomplete Answer,Recursion
Write a python function to shift first element to the end of given list.,,"def move_last(num_list):
    a = [num_list[0] for i in range(num_list.count(num_list[0]))]
    x = [ i for i in num_list if i != num_list[0]]
    x.extend(a)
    return (x)","def move_last(num_list):
    a = [num_list[0] for i in range(num_list.count(num_list[0]))]
    x = [ i for i in num_list if i != num_list[0]]
    x.extend(a)
    return (x)",correct,Loops
Write a Python script that takes a dictionary and prints out the keys and their respective lengths.,"dictionary = {
 ""one"": 1,
 ""two"": 2,
 ""three"": 3,
 ""four"": 4
}","for key, value in dictionary.items():
 print(f'The length of {key} is {len(key)}')","for key, value in dictionary.items():
 pr",Incomplete Answer,String Manipulation
Write a function in Python to sort the given list of strings based on the length of the words in ascending order.,"[""apple"", ""mango"", ""banana"", ""cherry""]","def sort_by_word_length(word_list):
	""""""
	Function to sort a given list of strings 
	based on the length of the words in ascending order.
	@param word_list: list
	@return: list
	""""""
    return sorted(word_list, key=lambda x: len(x))","def sort_by_word_length(word_list):
	""""""
	Function to sort a given list of strings 
	based on the length of the words in ascending order.
	@param word_list: list
	@return: list
	""""""
    return sorted(word_list, key=lambda x: len(x))",Syntax Error,Loops
Create a program in Python that reads a string from standard input and prints the frequency of each letter in the input.,"""Hello World!""","from collections import Counter

def frequency(string):
    count = Counter()
    for letter in string:
        count[letter] += 1
    return count

if __name__ == ""__main__"":
    input_string = input(""Enter the string: "")
    count = frequency(input_string)
    print(count)","from collections import Counter

def frequency(string):
    count = Counter()
    for letter in string:
        count[letter] += 1
    return count

if __name__ == ""__main__"":
    input_string = input(""Enter the string: "")
    count = frequency(input_string)
    print(count)",correct,OOP
Create a Python program that reads an input list and replaces all occurrences of 0 with -1.,"[1, 0, 2, 4, 0, 5]","def replace_zeros(lst):
  for i in range(len(lst)):
    if lst[i] == 0:
      lst[i] = -1
  return lst

# Main
input_list = [1, 0, 2, 4, 0, 5]
new_list = replace_zeros(input_list)

print('List after replacement:', new_list)","def replace_zeros(lst):
  for i in range(len(lst)):
if lst[i] == 0:
  lst[i] = -1
  return lst

# Main
input_list = [1, 0, 2, 4, 0, 5]
new_list = replace_zeros(input_list)

print('List after replacement:', new_list)",Syntax Error,String Manipulation
Create a code solution in Python to generate a random grid of characters.,,"import random

# Generate grid of characters
grid_rows = 3
grid_cols = 5

grid = []
for row in range(grid_rows):
 row_data = []

for col in range(grid_cols):
 row_data.append(random.choice(""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ""))

grid.append(row_data)

print(grid)","import random

# Generate grid of characters
grid_rows = 3
grid_cols = 5

grid = []
for row in range(grid_rows):
 row_data = []

for col in range(grid_cols):
 row_data.append(random.choice(""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ""))

grid.append(row_data)

print(grid)",correct,Recursion
Write a Python function to filter a list of numbers and return only prime numbers.,,"def filter_prime_numbers(numbers):
    primes = []
    for num in numbers:
        if is_prime(num):
            primes.append(num)
    return primes

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True","def filter_prime_numbers(numbers)
    primes = []
    for num in numbers
        if is_prime(num)
            primes.append(num)
    return primes

def is_prime(n)
    if n <= 1
        return False
    for i in range(2, int(n**0.5) + 1)
        if n % i == 0
            return False
    return True",Syntax Error,Loops
Write a python code snippet to identify a word is a palindrome or not.,word: radar,"# Python code to identify word is palindrome or not 
  
word = 'radar'
  
# Reversing a word 
rev_word = word[::-1] 
  
# checking if the word is equal to its reverse 
if (word == rev_word): 
    print(""The word is a palindrome."") 
else: 
    print(""The word is not a palindrome."")","# Python code to identify word is palindrome or not 
  
word = 'radar'
  
# Reversing a word 
rev_word = word[::-1] 
  
# checking if the word is equal to its reverse 
if (word == rev_word): 
    print(""The word is a palindrome."") 
else: 
    print(""The word is not a palindrome."")",correct,File I/O
"Write a Python code that finds the maximum value of a list, given a list of numbers as input.","[1, 4, 8, 2, 6]","max_value = max([1, 4, 8, 2, 6])
print(max_value)","max_value = max([1, 4, 8",Incomplete Answer,String Manipulation
Create a Python script that finds the most frequent words in a passage.,"passage = ""This is a passage about cats.""","from collections import Counter

def most_frequent_words(passage):
    word_list = passage.split() 
    word_freq = Counter(word_list) 
  
    most_freq_word = word_freq.most_common(1) 
    return most_freq_word","from collections import Counter

def most_frequent_words(passage):
    word_list = passage.split() 
    w",Incomplete Answer,Loops
"Build a program in Python using the Pandas library to calculate the mean, median, and mode of a given series.","[1, 2, 2, 3, 3, 3, 4, 5]","import pandas as pd

# Create Series
data = [1, 2, 2, 3, 3, 3, 4, 5]
series = pd.Series(data)

# Calculate mean
mean = series.mean()

# Calculate median
median = series.median()

# Calculate mode
mode = series.mode()

# Print results
print(""Mean:"", mean)
print(""Median:"", median)
print(""Mode:"", mode)","import pandas as pd

# Create Series
data = [1, 2, 2, 3, 3, 3, 4, 5]
series = pd.Series(data)

# Calculate mean
mean = series.mean()

# Calculate median
median = series.median()

# Calculate mode
mode = series.mode()

# Print results
pritn(""Mean:"", mean)
pritn(""Median:"", median)
pritn(""Mode:"", mode)",Syntax Error,String Manipulation
Write a Python function that takes a list of names as an input and generates a dictionary of people’s names as keys and their scores as values.,"names = [""John"", ""Mary"", ""Jack"", ""Sarah""]","def names_scores(names):
    scores = {}
    for name in names:
        scores[name] = random.randint(1, 10)
    return scores","def names_scores(names):
    scores = {}
    for name in names:
        scores[name] = random.randint(1, 10)
    return scores",correct,Recursion
Write a Python program to remove a specified item from a dictionary.,"sample_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5}","def remove_from_dict(d, key):
    if key in d:
        del d[key]
    return d

result = remove_from_dict(sample_dict, 'three')
print(result)","def remove_from_dict(d, key):
    if key in d:
        del d[key]
    ",Incomplete Answer,File I/O
Write a function to sort each sublist of strings in a given list of lists.,,"def sort_sublists(list1):
    result = list(map(sorted,list1)) 
    return result","def sort_sublists(list1):
    result = list(map(sorted,list1)) 
    return result",correct,Loops
Refactor this Python program to optimize the performance,"def calculate_sum(numbers):
    total = 0
    for n in numbers:
        total += n
    return total","def calculate_sum(numbers):
    return sum(numbers)","def calculate_sum(numbers)
    return sum(numbers)",Syntax Error,File I/O
Write a Python algorithm to convert the following text into a list of integers.,"""3, 17, 2, 9, 11""","# convert a string to list of numbers
def convert_to_list(s):
    numbers = s.split(',')
    return [int(num) for num in numbers]

text = ""3, 17, 2, 9, 11""
int_list = convert_to_list(text)
print(int_list)","# convert a string to list of numbers
def convert_to_list(s):
numbers = s.split(',')
return [int(num) for num in numbers]

text = ""3, 17, 2, 9, 11""
int_list = convert_to_list(text)
print(int_list)",Syntax Error,String Manipulation
Can you develop a python program that uses a loop to print the numbers 10 to 1 in reverse order?,,"for i in range(10, 0, -1):
    print(i)","for i in range(10, 0, -1):
    print(i)",correct,Loops
Write a function in Python to perform standard normalization of a given data.,"Data:
[35,45,55,65,75]","def normalize(data):
    """"""Performs standard normalization of a given data""""""
    mean = sum(data)/len(data)
    std_dev = (sum([(x-mean)**2 for x in data])/len(data)) ** 0.5
    return [(x-mean)/std_dev for x in data]

data = [35,45,55,65,75]

print(normalize(data)) # output: [-1.0, -0.5, 0.0, 0.5, 1.0]","def normalize(data):
    """"""Performs standard normalization of a given data""""""
    mean = sum(data)/len(data)
    std_dev = (sum([(x-mean)**2 for x in data])/len(data)) ** 0.5
    return [(x-mean)/std_dev for x in data]

data = [35,45,55,65,75]

print(name, normalize(data)) # output: [-1.0, -0.5, 0.0, 0.5, 1.0]",Syntax Error,Recursion
Produce a Python code to sort a two dimensional array in row-wise manner.,"arr = [[12, 17, 11], [17, 11, 13], [14, 18 22]]","def row_wise_sorting(arr):
    for row in arr:
        row.sort()

arr = [[12, 17, 11], [17, 11, 13], [14, 18, 22]]
row_wise_sorting(arr)

print(arr)","def row_wise_sorting(arr):
    for row in arr:
        row.sort()

arr = [[12, 17, 11], [17, 11, 13], [14, 18, 22]]
row_wise_sorting(arr)

print(arr)",correct,File I/O
Generate a correct python code to sort a given array of numbers.,,"def bubble_sort(arr):
    for i in range(len(arr)-1):
        for j in range(len(arr)-1-i):
            if arr[j] > arr[j+1]:
                arr[j],arr[j+1] = arr[j+1],arr[j]
    return arr","def bubble_sort(arr):
    for i in range(len(arr)-1):
        for j in range(len(arr)-1-i):
            if arr[j] > arr[j+1]:
                arr[j],arr[j+1] = arr[j+1],arr[j]
    return arr",correct,String Manipulation
Generate a Python code snippet to rearrange an array of integers into an alternate order of even and odd elements.,,"def rearrange(arr):
    even, odd = [], [] 
    for n in arr:
        if n % 2 == 0:
            even.append(n)
        else:
            odd.append(n)
    return [item for pair in zip(even, odd) for item in pair]","def rearrange(arr):
    even, odd = [], [] 
    for n in arr:
        if n % 2 == 0:
            even.appe",Incomplete Answer,Recursion
Write a python function to find the first digit of a given number.,,"def first_Digit(n) :  
    while n >= 10:  
        n = n / 10; 
    return int(n) ","def first_Digit(n) :  
while n >= 10:  
    n = n / 10; 
return int(n) ",Syntax Error,String Manipulation
Design a graphical user interface using Python's tkinter library.,,"# Imports
import tkinter as tk

# Setting up the window
window = tk.Tk()
window.title(""My GUI"")

# Adding components
label1 = tk.Label(window, text=""Hello World"")
label1.pack()

# Running the program
window.mainloop()","# Imports
import tkinter as tk

# Setting up the window
window = tk.Tk()
window.title(""My GUI"")

# Adding components
label1 = tk.Label(window, text=""Hello World"")
label1.pack()

# Running the program
window.mainloop()",Syntax Error,String Manipulation
Write a function to check if a triangle of positive area is possible with the given angles.,,"def is_triangleexists(a,b,c): 
    if(a != 0 and b != 0 and c != 0 and (a + b + c)== 180): 
        if((a + b)>= c or (b + c)>= a or (a + c)>= b): 
            return True 
        else:
            return False
    else:
        return False","def is_triangleexists(a,b,c: 
    if(a != 0 and b != 0 and c != 0 and (a + b + c== 180: 
        if((a + b>= c or (b + c>= a or (a + c>= b: 
            return True 
        else:
            return False
    else:
        return False",Syntax Error,Recursion
Optimize a Python function that returns the value at the index of an array (list) of size n.,"[20, 30, 50, 70, 90]","def getValueAtIndex(arr, index):
    return arr[index] if index >= 0 and index < len(arr) else 0

print(getValueAtIndex([20, 30, 50, 70, 90], 3)) # 70","def getValueAtIndex(arr, index):
    return arr[index] if index >= 0 and index < len(arr) else 0

print(getValueAtIndex([20, 30, 50, 70, 90], 3)) # 70",correct,File I/O
Develop a program in Python that prints the multiplication table for the number 5.,,"for i in range(1,11):
 print('5 *', i, '=', 5 * i)

# Output
# 5 * 1 = 5
# 5 * 2 = 10
# 5 * 3 = 15
# 5 * 4 = 20
# 5 * 5 = 25
# 5 * 6 = 30
# 5 * 7 = 35
# 5 * 8 = 40
# 5 * 9 = 45
# 5 * 10 = 50","for i in range(1,11):
 print('5 *', i, '=', 5 * i)

# Output
# 5 * 1 = 5
# 5 * 2 = 10
# 5 * 3 =",Incomplete Answer,String Manipulation
"Using Python, edit the following dataset to discard outliers.","Dataset: [12, 34, 37, 10, 89, 67, 99, 101]","import numpy as np

dataset = [12, 34, 37, 10, 89, 67, 99, 101]
dataset_without_outliers = [x for x in dataset if abs(x-np.mean(dataset)) < 3*np.std(dataset)]

print(dataset_without_outliers) # prints [12, 34, 37, 10, 89, 67, 99]","import numpy as np

dataset = [12, 34, 37, 10, 89, 67, 99, 101]
dataset_without_outliers = [x for x in dataset if ",Incomplete Answer,File I/O
Create a command line application in Python that takes two numbers as arguments and prints the addition of them.,,"import sys

def add(num1, num2):
  return num1 + num2

if __name__ == '__main__':
  num1 = int(sys.argv[1])
  num2 = int(sys.argv[2])
  print(add(num1, num2))","import sys

def add(num1, num2):
  return num1 + num2

if __name__ == '__main__':
  num1 = int(sys.argv[1])
  num2 = int(sys.argv[2])
  print(add(num1, num2))",correct,OOP
Develop a Python 3 program that takes a list of integers as an argument and returns the mean of the list.,"[1,2,3,4,5]","def mean(list):
 total = 0
 for num in list:
 total+=num
 return total/len(list)

list = [1,2,3,4,5]
mean = mean(list)
print(mean) # prints 3.0","def mean(list):
 total = 0
 for num in list:
 total+=num
 return total/len(list)

list = [1,2,3,4,5]
mean = mean(list)
pritn(mean) # pritns 3.0",Syntax Error,Recursion
"Generate a python script that takes a list of integer values, and reverse the order of elements in the list",,"def reverse_list(lst):
    return lst[::-1]","def reverse_list(lst):
return lst[::-1]",Syntax Error,OOP
Write a Python program to generate a random integer between 0 and 9.,,"""""""
Generate a random integer between 0 and 9
""""""

import random

def generate_random_integer():
    # Generate a random number in the range [0, 9] 
    x = random.randint(0,9) 
    return x

if __name__ == '__main__':
    print(generate_random_integer())","""""""
Generate a random integer between 0 and 9
""""""

import random

def generate_random_integer():
    # Generate a random number in the range [0, 9] 
    x = random.randint(0,9) 
    return x

if __name__ == '__main__':
    print(generate_random_integer())",correct,Recursion
Create a program in Python to normalize a given input string.,"input_string = ""david_Xq3r5""","import re 

def normalize_string(input_string): 
  ## convert to lowercase 
  normalized_string = input_string.lower() 
  
  ## remove special characters 
  normalized_string = re.sub(""[^a-z0-9]"", """", normalized_string) 
  
  ## return the normalized string
  return normalized_string

normalized_string = normalize_string(input_string) 
print(normalized_string) # davidxq35","import re 

def normalize_string(input_string): 
  ## convert to lowercase 
  normalized_string = input_string.lower() 
  
  ## remove special characters 
  normalized_string = re.sub(""[^a-z0-9]"", """", normalized_string) 
  
  ## return the normalized string
  return normalized_string

normalized_string = normalize_string(input_string) 
print(normalized_string) # davidxq35",correct,String Manipulation
"Create a function in Python to apply a discount rate to a given price. This should accept two parameters, a float for the discount rate between 0 and 1 and the price. The function should return the discounted price.","discountRate = 0.9
price = 200","def applyDiscount(discountRate, price):
    discountedPrice = discountRate * price
    return discountedPrice

print(applyDiscount(discountRate, price)) # 180","def applyDiscount(discountRate, price):
discountedPrice = discountRate * price
return discountedPrice

print(applyDiscount(discountRate, price)) # 180",Syntax Error,String Manipulation
Develop a program in Python that implements Binary Search tree.,,"class Node: 
    def __init__(self, key): 
        self.key = key  
        self.left = None
        self.right = None
  
def insert(root, key): 
  
    if root is None: 
        return Node(key) 
  
    if root.key < key: 
        root.right = insert(root.right, key) 
    else: 
        root.left = insert(root.left, key) 
  
    return root","class Node: 
    def __init__(self, key): 
        self.key = key  
        self.left = None
        self.right = None
  
def insert(root, key): 
  
    if root is None: 
",Incomplete Answer,String Manipulation
Write a python function to check whether the sum of divisors are same or not.,,"import math 
def divSum(n): 
    sum = 1; 
    i = 2; 
    while(i * i <= n): 
        if (n % i == 0): 
            sum = (sum + i +math.floor(n / i)); 
        i += 1; 
    return sum; 
def areEquivalent(num1,num2): 
    return divSum(num1) == divSum(num2); ","import math 
def divSum(n): 
    sum = 1; 
    i = 2; 
    while(i * i <= n): 
        if (n % i == 0): 
            sum = (sum + i +math.floor(n / i)); 
        i += 1; 
    return sum; 
def areEquivalent(num1,num2): 
    return divSum(num1) == divSum(num2); ",Syntax Error,File I/O
Create a Python code snippet to return the index of a given item from a list.,"list_of_numbers = [3, 6, 8, 4, 9, 2]
item = 6","item_index = list_of_numbers.index(item)
print(item_index) # Prints 1","item_index = list_of_numbers.index(item)
pritn(item_index) # Prints 1",Syntax Error,Recursion
Create a function in Python to return the largest number in a list.,"[50, 30, 65, 80]","""""""
Return the largest number in a list
""""""

def largest_num(nums):
    largest = nums[0]
    for num in nums:
        if num > largest:
            largest = num
    return largest

if __name__ == '__main__':
    nums = [50, 30, 65, 80]
    print(largest_num(nums))","""""""
Return the largest number in a list
""""""

def largest_num(nums):
largest = nums[0]
for num in nums:
    if num > largest:
        largest = num
return largest

if __name__ == '__main__':
nums = [50, 30, 65, 80]
print(largest_num(nums))",Syntax Error,OOP
Generate a Python program that implements Linear Search with a list of integers as input.,"sampleList = [5, 2, 3, 8, 0]","def linearSearch(sampleList, x):
 for i in range(len(sampleList)):
 if sampleList[i] == x:
 return i 

return -1

# Driver code
x = 5
result = linearSearch(sampleList, x)

if result == -1:
 print(""Element not found"")
else:
 print(""Element found at index"", result)","def linearSearch(sampleList, x):
 for i in range(len(sampleList)):
 if sampleList[i] == x:
 return i 

return -1

# Driver code
x =",Incomplete Answer,Recursion
Create a Python program that print the Fibonacci sequence for n terms.,,"def fibonacci_sequence(n): 
    a = 0
    b = 1
    print(""Fibonacci sequence:"")
    print(a) 
    print(b) 
    for i in range(2,n): 
        c = a + b 
        a = b 
        b = c 
        print(c)","def fibonacci_sequence(n: 
    a = 0
    b = 1
    print(""Fibonacci sequence:""
    print(a 
    print(b 
    for i in range(2,n: 
        c = a + b 
        a = b 
        b = c 
        print(c",Syntax Error,Loops
Write a Python function to calculate the probability of an event occurring.,p = 0.8,"def probability(p): 
    return p 
  
print(f""The probability of the event occurring is {probability(p)}"")","def probability(p): 
    return p 
  
print(name, f""The probability of the event occurring is {probability(p)}"")",Syntax Error,File I/O
Develop a Python script to find the element that appears most often in a given list.,"mylist = [2, 3, 4, 5, 2, 3, 2, 5, 6, 7]","from collections import Counter

mylist = [2, 3, 4, 5, 2, 3, 2, 5, 6, 7]
freq = Counter(mylist)
most_common_element = freq.most_common(1)[0][0]
print(""The most common element is %d"" %most_common_element)","from collections import Counter

mylist = [2, 3, 4, 5, 2, 3, 2, 5, 6, 7]
freq = Counter(mylist)
most_common_element = freq.most_common(1)[0][0]
print(""The most common element is %d"" %most_common_element)",correct,Loops
Develop a Python program for generating a random integer between 0 and 10.,,"import random

random_number = random.randint(0, 10)
print(""Random number is: "", random_number)","import random

random_number = random.randint(0, 10)
print(""Random number is: "", random_number)",correct,Loops
Create a Python program to implement the Fibonacci sequence.,,"def fibonacci_seq(n): 
    if n==0: 
        return 0
    elif n==1: 
        return 1
    else: 
        return fibonacci_seq(n-1)+fibonacci_seq(n-2)","def fibonacci_seq(n): 
    if n==0: 
        return 0
    elif n==1: 
     ",Incomplete Answer,Loops
Write a Python program to compute the sum of two given integers.,"a = 5
b = 7","sum = a + b
print(sum) # 12","sum = a + b
p",Incomplete Answer,String Manipulation
"Write a Python function that selects which kind of data type (float, integer, string) each element of a list is.",,"def infer_data_type(my_list):
    output_list = []
    for item in my_list:
        if type(item) == int:
            output_list.append('integer')
        elif type(item) == float:
            output_list.append('float')
        else:
            output_list.append('string')
    return output_list","def infer_data_type(my_list):
    output_list = []
    for item in my_list:
        if type(item) == int:
            output_list.append('integer')
        elif type(item) == float:
            output_list.append('float')
        else:
            output_list.append('string')
    return output_list",correct,OOP
Write a Python program to compute the sum of three given numbers.,"5, 10, 15","def sum_numbers(num1, num2, num3):
    return num1 + num2 + num3
    
if __name__ == ""__main__"":
    print(sum_numbers(5, 10, 15))","def sum_numbers(num1, num2, num3):
    return num1 + num2 + num3
    
if __name__ == ""__main__"":
    print(sum_numbers(5, 10, 15))",correct,OOP
Create a recursive Python function to calculate the sum of all elements in a list.,,"def sum_list(list):
 if not list:
  return 0

 return list[0] + sum_list(list[1:])","def sum_list(list):
 if not list:
  return 0

 return list[0] + sum_list(list[1:])",Syntax Error,File I/O
"Design a basic class in Python called ""Dog"" and create a constructor method.",,"class Dog:
    def __init__(self, name, age, weight):
        self.name = name
        self.age = age
        self.weight = weight

# Sample call
dog = Dog(""Fido"", 2, 40)","class Dog:
    def __init__(self, name, age, weight):
        self.name = name
        self.age = age
        self.weight = weight

# Sample call
dog = Dog(""Fido"", 2, 40)",correct,Recursion
Create a Python program that takes a list and replaces all negative numbers in the list with zeros.,"[-1, 2, -3, 4, -5]","def replace_negative_with_zero(numbers):
    new_list = []

    for num in numbers:
        if num < 0:
            new_list.append(0)
        else:
            new_list.append(num)
    return new_list","def replace_negative_with_zero(numbers):
    new_list = []

    for num in numbers:
        if num < 0:
            new_list.append(0)
        else:
            new_list.append(num)
    return new_list",correct,Loops
Create a code snippet in Python that calculates the number of distinct items in a list.,,"def distinct_items_in_list(input_list):
    distinct_items = set(input_list)
    return len(distinct_items)","def distinct_items_in_list(input_list):
    distinct_items = set(input_list)
    return len(distinct_items)",correct,OOP
"Write a python code to find all numbers in a given string, and print them out.","""There are 45.8 apples and 12.3 oranges.""","import re

string = ""There are 45.8 apples and 12.3 oranges.""
numbers = re.findall(r""[-+]?\d*\.\d+|\d+"", string)
print(numbers)

# Output: ['45.8', '12.3']","import re

string = ""There are 45.8 apples and 12.3 oranges.""
numbers = re.findall(r""[-+]?\d*\.\d+|\d+"", string)
print(numbers)

# Output ['45.8', '12.3']",Syntax Error,Recursion
Generate a program in python that searches for an element in the given list and returns its index.,"mylist = [1, 4, 5, 8, 9]
element = 5","def search_list(mylist, element):
  
  for i in range(len(mylist)):
    if mylist[i] == element:
      return i
  
  return -1

mylist = [1, 4, 5, 8, 9]
element = 5

index = search_list(mylist, element)

if index == -1:
  print(""Element not found."")
else:
  print(""Element found at index:"", index)","def search_list(mylist, element):
  
  for i in range(len(mylist)):
    if mylist[i] == element:
      return i
  
  return -1

mylist = [1, 4, 5, 8, 9]
element = 5

index = search_list(mylist, element)

if index == -1:
  print(""Element not found."")
else:
  print(""Element found at index:"", index)",correct,Recursion
Write a Python script which iterates over a list of numbers and prints them out in reverse order.,"[1, 2, 3, 4]","numbers = [1, 2, 3, 4]
 
for i in range(len(numbers)-1, -1, -1):
    print(numbers[i])","numbers = [1, 2, 3, 4]
 
for i in range(len(numbers)-1, -1, -1):
print(numbers[i])",Syntax Error,File I/O
Re-write the following SQL query in Python.,SELECT * FROM Movies WHERE category = 'horror';,"import sqlite3

conn = sqlite3.connect('movies.db') 
cursor = conn.cursor()

cursor.execute(""SELECT * FROM Movies WHERE category = 'horror'"")

result = cursor.fetchall()
for row in result:
    print(row)

conn.close()","import sqlite3

conn = sqlite3.connect('movies.db') 
cursor = conn.cursor()

cursor.execute(""SELECT * FROM Movies WHERE category = 'horror'"")

result = cursor.fetchall()
for row in result:
    print(row)

conn.close()",correct,String Manipulation
"Generate a python dictionary for storing student information as { Student ID: (name, email, phone number) }","Alice: (123456, alice@example.com, 123-456-789)
Bob: (789456, bob@example.com, 456-789-012)","student_dict = {
    123456: (""Alice"", ""alice@example.com"", ""123-456-789""),
    789456: (""Bob"", ""bob@example.com"", ""456-789-012"")
}","student_dict = {
    123456: (""Alice"", ""alice@example.com"", ""123-",Incomplete Answer,File I/O
Write a Python program to create a new list that contains the common elements of two other lists.,"[1, 2, 3, 4], [2, 4, 6, 8]","def common_elements(list1, list2):
    common_list = []
    for element in list1:
        if element in list2:
            common_list.append(element)
    return common_list

list1 = [1, 2, 3, 4]
list2 = [2, 4, 6, 8]
print(common_elements(list1, list2))","def common_elements(list1, list2):
    common_list = []
    for element in list1:
        if element in list2:
            common_list.append(element)
    return common_list

list1 = [1, 2, 3, 4]
list2 = [2, 4, 6, 8]
print(common_elements(list1, list2))",correct,Recursion
Develop a Python program to generate a Ruby code to format a given text.,"""This is a test text.""","def format_text(input_text):
    formatted_str = """"
    for i in input_text:
        if i.isupper():
            formatted_str += ""'#{i}'""
        else:
            formatted_str += i
    return formatted_str","def format_text(input_text):
    formatted_str = """"
    for i in input_text:
        if i.isupper():
            formatted_str += ""'#{i}'""
        else:
            formatted_str += i
    return formatted_str",correct,File I/O
Write a Python program to generate the Fibonacci series between 0 to 50.,,"def fibonacci(n):
 a, b = 0, 1
 for i in range(n):
  a, b = b, a + b
 return a

for i in range(51):
 print(fibonacci(i))","def fibonacci(n)
 a, b = 0, 1
 for i in range(n)
  a, b = b, a + b
 return a

for i in range(51)
 print(fibonacci(i))",Syntax Error,Recursion
Write a Python program to sort the values of a dictionary by its keys in alphabetical order.,"dictionary = {""c"": 3, ""a"": 1, ""b"": 2}","def sort_dictionary_by_keys(dictionary):
    result = {}
    for key in sorted(dictionary.keys()):
        result[key] = dictionary[key]
    return result

dictionary = {""c"": 3, ""a"": 1, ""b"": 2}
sorted_dictionary = sort_dictionary_by_keys(dictionary)

print(sorted_dictionary)","def sort_dictionary_by_keys(dictionary):
    result = {}
    for key in sorted(dictionary.keys()):
        result[key] = dictionary[key]
",Incomplete Answer,OOP
Can you make a loop in Python to print out the number from 10 to 20?,,"for i in range(10, 21):
    print(i)","for i in range(10, 21):
print(i)",Syntax Error,Loops
Create a program in Python which can calculate the median of an array of integers.,"[3, 5, 7, 4, 8, 1, 9]","def median(arr):
    arr.sort()

    if len(arr) % 2 != 0:
        return arr[len(arr)//2]
    else: 
        return (arr[len(arr)//2 - 1] + arr[len(arr)//2]) / 2

arr = [3, 5, 7, 4, 8, 1, 9]

med = median(arr)
print('Median of the given array is:', med)","def median(arr):
    arr.sort()

    if len(arr) % 2 != 0:
        return arr[len(arr)//2]
    else: 
        return (arr[len(arr)//2 - 1] + arr[len(arr)//2]) / 2

arr = [3, 5, 7, 4, 8, 1, 9]

med = median(arr)
print('Median of the given array is:', med)",correct,Loops
Write a Python script to convert temperatures from Fahrenheit to Celsius.,,"def fahrenheit_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5/9
    return celsius","def fahrenheit_to_celsius(fahrenheit):
    cels",Incomplete Answer,File I/O
Optimize the Python program below for making the code more efficient.,"def sum_list(list):
    result = 0
    for i in list:
        result += i
    return result","def sum_list(list):
    return sum(list)","def sum_list(list):
    return sum(list)",Syntax Error,Loops
Create a function in Python that takes two strings as arguments and returns a concatenated string.,"String1: ""Hello ""
String2: ""World""","def concat_strings(first_str, second_str):
 return first_str + second_str

print(concat_strings(""Hello "", ""World"")) # prints ""Hello World""","def concat_strings(first_str, second_str):
 return first_str + second_str

print(concat_strings(""Hello "", ""World"")) # prints ""Hello World""",correct,File I/O
Create a data structure that can store the 10 most recent items inserted into a list.,,"#!/usr/bin/env python

from collections import deque

# Create an empty container 
myList = deque(maxlen=10) 
  
# Add values to the list 
for i in range(100): 
    myList.append(i) 
  
# Access the 10 recent values in the list 
print(list(myList))","#!/usr/bin/env python

from collections import deque

# Create an empty container 
myList = deque(maxlen=10) 
  
# Add values to the list 
for i in range(100): 
    myList.append(i) 
  
# Access the 10 recent values in the list 
print(list(myList))",correct,OOP
Create a Python function that takes a string as an argument and reverses it.,testing,"def reverse_string(str_input):
    reversed_string = ''
    index = len(str_input)
    while index > 0: 
        reversed_string += str_input[ index - 1 ]
        index = index - 1
    return reversed_string

print(reverse_string(""testing""))","def reverse_string(str_input):
    reversed_string = ''
    index = len(str_input)
    while index > 0: 
        reverse",Incomplete Answer,File I/O
Create a Python script that prints the number of unique characters in a given string and their frequency.,Hello World,"inputString = ""Hello World"" 
freq = {}
  
for ch in inputString:
    if ch in freq:
        freq[ch] += 1
    else:
        freq[ch] = 1

for key, value in freq.items():
    print (key + "" has a frequency of "" + str(value))","inputString = ""Hello World"" 
freq = {}
  
for ch in inputString:
    if ch in freq:
        freq[ch] += 1
    else:
        freq[ch] = 1

for key, value in freq.items(:
    print (key + "" has a frequency of "" + str(value",Syntax Error,String Manipulation
Construct a function in Python to print the sum of two numbers.,,"def print_sum(a, b):
    """"""Print the sum of two numbers.""""""
    print(a + b)","def print_sum(a, b):
""""""Print the sum of two numbers.""""""
print(a + b)",Syntax Error,String Manipulation
Design a Python algorithm to determine if a given number x is a prime number.,,"def is_prime(x):
    if x < 2:
        return False 
    for i in range(2, int(x ** 0.5) + 1):
        if x % i == 0:
            return False
    return True","def is_prime(x):
    if x < 2:
        return False 
    for i in range(2, int(",Incomplete Answer,Recursion
Design a regression model using a random forest in Python.,,"from sklearn.ensemble import RandomForestRegressor

# Initialize the model
model = RandomForestRegressor(n_estimators=100)

# Fit the model to the data
model.fit(X_train, y_train)

# Evaluate the model
score = model.score(X_test, y_test)

print(""Score: "", score)","from sklearn.ensemble import RandomForestRegressor

# Initialize the model
model = RandomForestRegressor(n_estimators=100)

# Fit t",Incomplete Answer,String Manipulation
Create a web-crawler in Python to extract links from a web page.,Web page URL: http://www.example.com,"import urllib.request 
from bs4 import BeautifulSoup

#Providing the url as an argument to urlopen() 
url = ""http://www.example.com""
html = urllib.request.urlopen(url).read() 
soup = BeautifulSoup(html, features = 'html.parser') 

# extracting links from the web page 
links = [] 
for link in soup.findAll('a'): 
    links.append(link.get('href')) 

print(links)","import urllib.request 
from bs4 import BeautifulSoup

#Providing the url as an argument to urlopen() 
url = ""http://www.example.com""
html = urllib.request.urlopen(url).read() 
soup ",Incomplete Answer,Recursion
Use Python to implement a tree traversal algorithm that produces an in-order traversal.,,"def inOrderTraversal(root):
    if root is not None:
        inOrderTraversal(root.left)
        print(root.val)
        inOrderTraversal(root.right)","def inOrderTraversal(root):
    if root is not None:
        inOrderTraver",Incomplete Answer,OOP
Can you write code to calculate the Fibonacci sequence in Python up to the 10th number?,,"a, b = 0, 1

fibonacci = [a]

while b < 10:
    fibonacci.append(b)
    a, b = b, a + b

print(fibonacci)","a, b = 0, 1

fibonacci = [a]

while b < 10
    fibonacci.append(b)
    a, b = b, a + b

print(fibonacci)",Syntax Error,Recursion
Create a function in Python to find the prime numbers up to a given integer n.,8,"def primes_up_to(n):
 primes = []
 for i in range(2, n + 1):
 for j in range(2, i):
 if i % j == 0:
 break
 else:
 primes.append(i)
 break
 return primes

print(primes_up_to(8)) # [2, 3, 5, 7]","def primes_up_to(n):
 primes = []
 for i in range(2, n + 1):
 for j in range(2, i):
 if i % j == 0:
 break
 else:
 primes.append(i)
 break
 return primes

print(primes_up_to(8)) # [2, 3, 5, 7]",correct,OOP
Write a function to search a literals string in a string and also find the location within the original string where the pattern occurs by using regex.,,"import re
pattern = 'fox'
text = 'The quick brown fox jumps over the lazy dog.'
def find_literals(text, pattern):
  match = re.search(pattern, text)
  s = match.start()
  e = match.end()
  return (match.re.pattern, s, e)","import re
pattern = 'fox'
text = 'The quick brown fox jumps over the lazy dog.'
def find_literals(text, patter",Incomplete Answer,Loops
Write a function to find the maximum value in a normal list in Python,,"def max_value_index(array):
    current_index = 0
    max_value = array[0]
    for i in range(1, len(array)):
        if array[i] > max_value:
            max_value = array[i]
            current_index = i
    return current_index","def max_value_index(array):
    current_index = 0
    max_value = array[0]
    for i in range(1, len(array)):
        if array[i] > max_value:
            max_value = array[i]
            current_index = i
    return current_index",correct,Loops
Create an algorithm in Python that takes an array of strings and sorts them in alphabetical order.,"['Jan', 'June', 'Raju', 'April']","def alphabeticalSort(arr):
    arr.sort()
    return arr

result = alphabeticalSort(['Jan', 'June', 'Raju', 'April'])
print(result)","def alphabeticalSort(arr):
    arr.sort()
    return arr

result = alphabeticalSort(['Jan', 'June', 'Raju', 'April'])
print(name, result)",Syntax Error,Loops
Implement an algorithm in Python which can sort an array of numbers in ascending order.,,"def insertion_sort(arr): 
    #Iterationg through the array 
    for i in range(1, len(arr)): 
        key = arr[i] 
        j = i-1
        
        while j >= 0 and arr[j] > key: 
            arr[j + 1] = arr[j] 
            j -= 1
        arr[j + 1] = key 
  
    return arr","def insertion_sort(arr): 
    #Iterationg through the array 
    for i in range(1, len(arr)): 
        key = arr[i] 
        j = i-1
     ",Incomplete Answer,OOP
Create a command line application in Python which takes a list of numbers and returns whether the list is sorted.,"[1, 4, 5, 6, 7, 9]","import sys

def is_sorted(nums):
 for i in range(len(nums) - 1):
  if nums[i] > nums[i + 1]:
   return False
 return True

nums = [int(x) for x in sys.argv[1:]]

if is_sorted(nums):
 print('The list is sorted')
else:
 print('The list is not sorted')","import sys

def is_sorted(nums):
 for i in range(len(nums) - 1):
  if nums[i] > nums[i + 1]:
   return False
 return True

nums = [int(x) for x in sys.argv[1:]]

if is_sorted(nums):
 print('The list is sorted')
else:
 print('The list is not sorted')",correct,Loops
Use the BeautifulSoup library in Python to parse HTML from a website.,Example website: https://www.example.com,"import requests
from bs4 import BeautifulSoup

#make a GET request
response = requests.get('https://www.example.com')

#parse HTML
soup = BeautifulSoup(response.text, 'html.parser')","import requests
from bs4 import BeautifulSoup

#make a GET request
response = requests.get",Incomplete Answer,File I/O
"Generate a Python program that prints out every number from 0 to 10, but with every number being multiplied by 2.",,"for i in range(11):
 print(i*2)",for i in range(,Incomplete Answer,Recursion
Write a Python program to prompt the user for 3 numbers and return the average of the numbers.,,"def averageNums():
 nums = []
 for i in range(3):
 num = input(""Enter a number: "")
 nums.append(float(num))
 
 return sum(nums) / len(nums)

# Example
averageNums() # Will prompt the user for 3 numbers and print the average","def averageNums():
 nums = []
 for i in range(3):
 num = input(""Enter a number: "")
 nums.append(float(num))
 
 return sum(nums) / len(nums)

# Example
averageNums() # Will prompt the user for 3 numbers and print the average",Syntax Error,Loops
Create a Python program to display the calendar of a given year.,,"import calendar

def show_calendar(year):
    return calendar.calendar(year)","import calendar

def show_calendar(year)
    return calendar.calendar(year)",Syntax Error,File I/O
Generate a Random Forest classifier in Python,,"import numpy as np
from sklearn.ensemble import RandomForestClassifier

# Create a Random Forest Classifier
clf = RandomForestClassifier(n_estimators=100)

# Train the model using the training sets
clf.fit(X_train, y_train) 

# Predict the response for test dataset
y_pred = clf.predict(X_test)","import numpy as np
from sklearn.ensemble import RandomForestClassifier

# Create a Random Forest Classifier
clf = RandomForestClassifier(n_estimato",Incomplete Answer,Loops
Write a function to repeat the given tuple n times.,,"def repeat_tuples(test_tup, N):
  res = ((test_tup, ) * N)
  return (res) ","def repeat_tuples(test_tup, N:
  res = ((test_tup,  * N
  return (res ",Syntax Error,Recursion
Create a class in Python using object-oriented programming that creates instance of a book.,,"class Book(object):
    def __init__(self, title, author, year_published):
        self.title = title
        self.author = author
        self.year_published = year_published

    def __str__(self):
        return '{0} by {1} published in {2}.'.format(
            self.title, self.author, self.year_published)","class Book(object):
    def __init__(self, title, author, year_published):
        self.title = title
        self.author = author
        self.year_published = year_published

    def __str__(self):
        return '{0} by {1} published in {2}.'.format(
            self.title, self.author, self.year_published)",correct,OOP
Write a script in Python to retrieve data from a web API.,The web API is available at http://api.example.com/v1/zipcodes and requires the parameter `zipcode` to execute.,"import requests

zipcode = '12345'
url = 'http://api.example.com/v1/zipcodes'

params = {'zipcode': zipcode}
response = requests.get(url, params=params)

if response.status_code == 200:
 data = response.json()
 print(data)
else:
 print('Error: ', response.status_code)","import requests

zipcode = '12345'
url = 'http://api.example.com/v1/zipcodes'

params = {'zipcode': zipcode}
response = requests.get(u",Incomplete Answer,Recursion
Write a Python program to sort a list of integers in ascending order.,"list=[4,2,3,5,1]","list = [4, 2, 3, 5, 1]
list.sort()
print(list)","list = [4, 2, 3, 5, 1]
",Incomplete Answer,Recursion
"Create a class in Python that defines a shape and has three methods that calculate the perimeter, area, and volume.",,"class Shape:
    def __init__(self):
        # Initialize any variables as needed.
        pass

    def calculate_perimeter(self):
        # Code to calculate perimeter
        pass
    
    def calculate_area(self):
        # Code to calculate area
        pass

    def calculate_volume(self):
        # Code to calculate volume
        pass","class Shape:
    def __init__(self):
        # Initialize any variables as needed.
        pass

    def calculate_perimeter(self):
        # Code to calculate perimeter
  ",Incomplete Answer,Loops
What is the most efficient way to reverse a singly linked list in 7 lines of Python code?,,"# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
        
def reverseList(head): 
    prev = None
    current = head

    while current is not None:
        nxt = current.next
        current.next = prev 
        prev = current
        current = nxt

    head = prev 
    return head","# Definition for singly-linked list.
class ListNode
    def __init__(self, val=0, next=None)
        self.val = val
        self.next = next
        
def reverseList(head) 
    prev = None
    current = head

    while current is not None
        nxt = current.next
        current.next = prev 
        prev = current
        current = nxt

    head = prev 
    return head",Syntax Error,Recursion
Write a python function to check whether the given number can be represented by product of two squares or not.,,"def prod_Square(n):
    for i in range(2,(n) + 1):
        if (i*i < (n+1)):
            for j in range(2,n + 1):
                if ((i*i*j*j) == n):
                    return True;
    return False;","def prod_Square(n):
    for i in range(2,(n) + 1):
        if (i*i < (n+1)):
            for j in range(2,n + 1):
                if ((i*i*j*j) == n):
                    return True;
    return False;",correct,OOP
"Design a class called ""Coach"" in Python that has two attributes: a name and a team.",,"class Coach:
    def __init__(self, name, team):
        self.name = name
        self.team = team

    def __str__(self):
        return f""The coach of {self.team} is {self.name}.""","class Coach:
    def __init__(self, name, team):
        self.name = name
        self.team = team

    def __str__(self):
        return f""The coach of {self.team} is {self.name}.""",Syntax Error,OOP
Create a Python program to add two numbers.,,"def add_numbers(a,b):
    return a + b","def add_numbers(a,b",Incomplete Answer,File I/O
"Design a REST API endpoint in Python Flask to return a list of users, sorted by last name.",No input,"@app.route(""/users"", methods=[""GET""])
def get_users():
    users = User.query.order_by(User.last_name).all()
    return jsonify([user.serialize() for user in users]), 200","@app.route(""/users"", methods=[""GET""])
def get_users()
    users = User.query.order_by(User.last_name).all()
    return jsonify([user.serialize() for user in users]), 200",Syntax Error,OOP
"Given a list of strings, write a Python program to sort the strings in alphabetical order.","strings = ['Python', 'Java', 'C++', 'C#']","def sort_strings(strings):
	return sorted(strings)

if __name__ == '__main__':
	strings = ['Python', 'Java', 'C++', 'C#']
	sorted_strings = sort_strings(strings)
	print(sorted_strings)","def sort_strings(strings):
	return sorted(strings)

if __name__ == '__main__':
	strings = ['Python', 'Java', 'C++', 'C#']
	sorted_strings = sort_strings(strings)
	print(sorted_strings)",correct,String Manipulation
Construct a program in Python to check if a string contains only digits.,,"def is_number(s):
    try:
        float(s)
        return True
    except ValueError:
        return False","def is_number(s):
    try:
        float(s)
        return True
    except ValueError:
        return False",correct,Loops
Translate this Python program into a JavaScript program.,"# Python code
def hello_name(name):
   return ""Hello "" + name + ""!""","function hello_name(name) {
   return ""Hello "" + name + ""!"";
}","function hello_name(name) {
   ",Incomplete Answer,Loops
Write a Python program to count the number of characters in a string.,"String = ""Hello World""","String = ""Hello World""

def count_characters(str):
  return len(str)

print(""Number of characters in the string:"", count_characters(String))","String = ""Hello World""

def count_characters(str):
  return len(str)

print(""Number of characters in the string:"", count_characters(String))",Syntax Error,Loops
Write a Python script to convert a given string to datetime format.,Input Date: 10/07/2020,"import datetime

def convert_to_date(input_date):
    date_obj = datetime.datetime.strptime(input_date,""%d/%m/%Y"")
    return date_obj","import datetime

def convert_to_date(input_date):
    date_obj = datetime.datetime.strptime(input_date,""%d/%m/%Y"")
    return date_obj",correct,Recursion
Construct a neural network model in Python to predict the sale numbers of a product.,"Product: A
Historical data of sales: [3, 4, 2, 6, 5, 10]","model = Sequential()
model.add(Dense(8, activation='relu', input_shape=[6]))
model.add(Dense(1, activation='linear'))
model.compile(optimizer='adam', loss='mean_squared_error', metrics=['mae'])
model.fit(x_train, y_train, epochs=500, verbose=False)","model = Sequential()
model.add(Dense(8, activation='relu', input_shape=[6]))
model.add(Dense(1, activation='linear'))
model.compile(optimizer='adam', loss='mean_squared_error', metrics=['mae'])
model.fit(x_train, y_train, epochs=500, verbose=False)",Syntax Error,Loops
"Create a Python program that takes a list of numbers, sorts them in descending order, calculates the average of the numbers, and prints the result.","[3, 7, 9, 4, 5]","# Calculating average of [3, 7, 9, 4, 5]
sorted_nums = sorted([3, 7, 9, 4, 5], reverse=True)
sum_nums = sum(sorted_nums)

# Calculating average
average = sum_nums/len(sorted_nums)

# Printing the average
print('The average of the list is: ', average)","# Calculating average of [3, 7, 9, 4, 5]
sorted_nums = sorted([3, 7, 9, 4, 5], reverse=True
sum_nums = sum(sorted_nums

# Calculating average
average = sum_nums/len(sorted_nums

# Printing the average
print('The average of the list is: ', average",Syntax Error,String Manipulation
Write a python function to count the number of prime numbers less than a given non-negative number.,,"def count_Primes_nums(n):
    ctr = 0
    for num in range(n):
        if num <= 1:
            continue
        for i in range(2,num):
            if (num % i) == 0:
                break
        else:
            ctr += 1
    return ctr","def count_Primes_nums(n):
ctr = 0
for num in range(n):
    if num <= 1:
        continue
    for i in range(2,num):
        if (num % i) == 0:
            break
    else:
        ctr += 1
return ctr",Syntax Error,Loops
Generate a Python program that takes a number as input and calculates its sum of digits.,Number: 123,"n = 123
sum_of_digits = 0

while n > 0:
    digit = n % 10
    sum_of_digits += digit
    n //= 10

print(""Sum of digits in 123 is:"", sum_of_digits)","n = 123
sum_of_digits = 0

while n > 0:
digit = n % 10
sum_of_digits += digit
n //= 10

print(""Sum of digits in 123 is:"", sum_of_digits)",Syntax Error,Recursion
Write a Python program that takes a list as input and returns the longest consecutive string of characters.,"['a', 'bb', 'ccc', 'dd', 'eee']","def longest_consecutive(lst):
    longest = """"
    for word in lst:
        if len(word) > len(longest):
            longest = word
    return longest

lst = ['a', 'bb', 'ccc', 'dd', 'eee']

print(longest_consecutive(lst))

# Output should be ""ccc""","def longest_consecutive(lst):
    longest = """"
    for word in lst:
        if len(word) > len(longest):
            longest = word
    return longest

lst = ['a', 'bb', 'ccc', 'dd', 'eee']

print(longest_consecutive(lst))

# Output should be ""ccc""",correct,OOP
Write a function in Python that takes two lists of integers and returns a single merged list with unique elements sorted in ascending order.,"list1 = [1, 2, 3, 4] 
list2 = [2, 4, 5, 6]","def merge_unique_sorted_lists(list1, list2):
	merged_list = list1+list2
	unique_list = list(set(merged_list))
	unique_list.sort()
	return unique_list","def merge_unique_sorted_lists(list1, list2):
	merged_list = list1+list2
	u",Incomplete Answer,Loops
Design a function in Python for swapping the values of two given integers.,"x = 3, y = 5","def swap_values(x, y):
    temp = x
    x = y
    y = temp
    return x, y

x, y = swap_values(3,5)
print(x, y)","def swap_values(x, y):
    temp = x
    x = y
    y = temp
    return x, y

x, y = swap_values(3,5)
print(x, y)",correct,File I/O
Write a Python function to find the maximum from 3 numbers.,"10, 7, 4","def find_max(a, b, c):
    max = a
    if b > max:
        max = b
    if c > max:
        max = c
    return max

max_number = find_max(10, 7, 4)
print('Maximum number is', max_number)","def find_max(a, b, c):
    max = a
    if b > max:
        max = b
    if c > max:
        m",Incomplete Answer,Loops
"Given the following input, write a Python program to output the characteristics of the longest word.","laptop,computer,keyboard","def longest_word(list_words):
    longest_word = max(list_words, key=len)
    print(""Length of longest word: "" + str(len(longest_word)))
    print(""Longest Word: "" + longest_word)

list_words = [""laptop"", ""computer"", ""keyboard""]
longest_word(list_words)","def longest_word(list_words):
    longest_word = max(list_words, key=len)
    print(""Length of longest word: "" + str(len(longe",Incomplete Answer,String Manipulation
Generate a Python program that calculates the factorial of a given number.,5,"def factorial(n): 
    if n == 0:
        return 1
    else: 
        return n * factorial(n-1) 

# Test
num = 5
fac = factorial(num)
print(""Factorial of"", num, ""is"", fac)","def factorial(n): 
    if n == 0:
        return 1
    else: 
        return n * factorial(n-1) 

# Test
num = 5
fac = factorial(num)
print(""Factorial of"", num, ""is"", fac)",correct,String Manipulation
Write a Python function that accepts an integer as an argument and returns its factorial.,,"def factorial(n):
    if n == 0: 
        return 1
    else: 
        return n * factorial(n-1)","def factorial(n):
    if n == 0: 
        retur",Incomplete Answer,Recursion
Create a program in Python that takes two strings as input from the user and returns True if a substring is found within the first string or False otherwise.,,"first_string = input('Enter the main string: ')
second_string = input('Enter the substring: ')

if second_string in first_string:
 print(True)
else:
 print(False)","first_string = input('Enter the main string: ')
second_string = input('Enter the substring: ')

if second_string in first_string:
 pritn(True)
else:
 pritn(False)",Syntax Error,String Manipulation
Create a function in Python which takes a string as an input and adds the number 1 to each character in the string.,"mystring = ""Hello""","def add_one_to_each_char(mystring):
    new_str = """"
    for c in mystring:
        new_str += chr(ord(c) + 1)
    return new_str","def add_one_to_each_char(mystring):
new_str = """"
for c in mystring:
    new_str += chr(ord(c) + 1)
return new_str",Syntax Error,Loops
Rewrite a given Java class using Python syntax.,"Java class MyClass with fields ""x"" and ""y"":

public class MyClass {
 int x;
 int y;

 public MyClass(int x, int y) {
  this.x = x;
  this.y = y;
 }
}","class MyClass:
 def __init__(self, x, y):
  self.x = x
  self.y = y","class MyClass:
 def __init__(self",Incomplete Answer,File I/O
Create a program to filter a list of numbers using the built-in Python filter() function.,"[25, 35, 8, 2, 10]","def even_number_filter(number):
  return number % 2 == 0

numbers = [25, 35, 8, 2, 10]
filtered_list = list(filter(even_number_filter, numbers))
print(filtered_list)","def even_number_filter(number)
  return number % 2 == 0

numbers = [25, 35, 8, 2, 10]
filtered_list = list(filter(even_number_filter, numbers))
print(filtered_list)",Syntax Error,Loops
"Read an uncommented Python program, comment all the lines, and print the commented version.","def func_name(param1, param2):
    a = param1 + param2
    b = param1 * param2
    return a, b","def func_name(param1, param2):
    # Add two parameters
    a = param1 + param2
    
    # Multiply two parameters
    b = param1 * param2
    
    # Return a and b
    return a, b","def func_name(param1, param2):
    # Add two parameters
    a = param1 + param2
    
    #",Incomplete Answer,File I/O
Create a Python program which takes two lists as input and outputs all the elements which appear in both lists.,"list1 = [1, 2, 3] 
list2 = [3, 4, 5]","def list_intersection(list1, list2):
  return [item for item in list1 if item in list2]

list1 = [1, 2, 3] 
list2 = [3, 4, 5]

intersectedList = list_intersection(list1, list2)

print(intersectedList)

# Output: [3]","def list_intersection(list1, list2):
  return [item for item in list1 if item in list2]

list1 = [1, 2, 3] 
list2 = [3, 4, 5]

intersectedList = list_intersection(list1, list2)

print(intersectedList)

# Output: [3]",correct,String Manipulation
Edit the Python 3 code below so that it returns the sum of the two integers a and b.,"a = 3
b = 5","def add_numbers(a, b):
    return a + b

if __name__ == '__main__':
    a = 3
    b = 5
    result = add_numbers(a, b)
    print(result)","def add_numbers(a, b):
return a + b

if __name__ == '__main__':
a = 3
b = 5
result = add_numbers(a, b)
print(result)",Syntax Error,File I/O
"Write a Python program to generate a random password of length 10, consisting of letters, numbers, and special characters.",,"import string, random

def gen_password():
 chars = string.ascii_letters + string.digits + '!@#$%^&*'
 return ''.join(random.choice(chars) for _ in range(10))

print(""Random Password :"",gen_password())
``","import string, random

def gen_password():
 chars = string.ascii_letters + string.digits + '!@#$%^&*'
 return ''.join(random.choice(chars) for _ in range(10))

print(""Random Password :"",gen_password())
``",correct,File I/O
Create a program in Python to perform web scraping using the BeautifulSoup module.,URL: https://en.wikipedia.org/wiki/Python_(programming_language),"import requests 
from bs4 import BeautifulSoup 

# Get the webpage
url = 'https://en.wikipedia.org/wiki/Python_(programming_language)'
response = requests.get(url) 

# Create the soup
soup = BeautifulSoup(response.text, 'html.parser') 

# Extract the text
text = soup.get_text() 

# Output the text
print(text)","import requests 
from bs4 import BeautifulSoup 

# Get the webpage
url = 'https://en.wikipedia.org/wiki/Python_(programming_language)'
response = requests.",Incomplete Answer,Loops
Implement a program in Python that encodes a given string of text.,"encoding_string = ""Hello World""","def encode_string(encoding_string):
    encoded_string = """"
    for char in encoding_string : 
        encoded_string += str(ord(char)) + "" ""
    return encoded_string","def encode_string(encoding_string):
    encoded_string = """"
    for char in encoding_string : 
        encoded_string += str(ord(char)) + "" ""
    return encoded_string",correct,Loops
Create a command line utility in Python that takes two arguments. The utility should compare the two arguments and output the result as either “equal” or “not equal”.,"Arg1: hello
Arg2: world","import sys

arg1 = sys.argv[1]
arg2 = sys.argv[2]

if arg1 == arg2:
 print('equal')
else:
 print('not equal')","import sys

arg1 = sys.argv[1]
arg2 = sys.argv[2]

if arg1 == arg2:
 print(name, 'equal')
else:
 print(name, 'not equal')",Syntax Error,Loops
Edit the given Python code to add a feature which will print the squares of given numbers.,"def printNumbers(a, b): 
    for i in range(a, b + 1): 
        print(i, end = "" "")","def printNumbers(a, b): 
    for i in range(a, b + 1): 
        print(i, end = "" "") 
    print(""\n"")
    for i in range(a, b + 1):
        print(i*i, end = "" "")","def printNumbers(a, b): 
    for i in range(a, b + 1): 
        print(i, end = """,Incomplete Answer,Loops
Write a Python program to find the largest and smallest number from a given list of numbers.,"[7, 4, 2, 9, 0, 5]","def find_num(input_list):
    """"""Finds the largest and smallest number from a given list of numbers.""""""
    max_num = max(input_list)
    min_num = min(input_list)
    return max_num, min_num

largest, smallest = find_num([7, 4, 2, 9, 0, 5])
print('The largest number is', largest)
print('The smallest number is', smallest)","def find_num(input_list):
    """"""Finds the largest and smallest number from a given list of numbers.""""""
    max_num = max(input_list)
    min_num = min(input_lis",Incomplete Answer,OOP
Create a basic Python script that uses the requests library to get a web page and prints it out.,,"# importing the requests library 
import requests 

# api-endpoint 
URL = ""http://www.example.com""

# sending get request and saving the response as response object 
r = requests.get(url = URL) 

# extracting data in json format 
data = r.text 

# printing the output 
print(data)","# importing the requests library 
import requests 

# api-endpoint 
URL = ""http://www.example.com""

# sending get request and saving the res",Incomplete Answer,String Manipulation
Edit the existing Python program so that it rounds a number to the nearest whole number.,"# Program to round off a number 
num = 89.15","# Program to round off a number 
num = 89.15

rounded_num = round(num)
print(""The rounded number is: "", rounded_num)","# Program to round off a number 
num = 89.15

rounded_num = round(num
print(""The rounded number is: "", rounded_num",Syntax Error,Recursion
"Create a Python Pandas DataFrame for a real-world dataset of your choice, and display information about it.",A dataset containing the prices of fruits in a market.,"import pandas as pd

# load the dataset
data = pd.read_csv('data.csv')

# display information about the dataset
data.info()

# observe the first five rows
data.head()

# list all columns
data.columns 

# display summary statistics
data.describe()","import pandas as pd

# load the dataset
data = pd.read_csv('data.csv')

# display information about the dataset
data.info()

# observe the first five rows
data.head()

# list all columns
data.columns 

# display summary statistics
data.describe()",Syntax Error,Recursion
Write a python function to find the minimum element in a sorted and rotated array.,,"def find_Min(arr,low,high): 
    while (low < high): 
        mid = low + (high - low) // 2;   
        if (arr[mid] == arr[high]): 
            high -= 1; 
        elif (arr[mid] > arr[high]): 
            low = mid + 1; 
        else: 
            high = mid; 
    return arr[high]; ","def find_Min(arr,low,high): 
    while (low < high): 
        mid = low + (high - low) // 2;   
        if (arr[mid] == arr[high]): 
            high -= 1; 
        elif (arr[mid] > arr[high]): 
            low = mid + 1; 
        else: 
            high = mid; 
    return arr[high]; ",correct,OOP
Write a Python program to sort a list of lists of integers by the first element of the sublists. The list should be sorted in ascending order.,"[[2, 4, 6], [1, 9, 8], [3, 7, 5]]","def sortList(lst): 
    lst.sort(key = lambda x: x[0]) 
    return lst 
  
result = sortList([[2, 4, 6], [1, 9, 8], [3, 7, 5]]) 
print(result)","def sortList(lst): 
    lst.sort(key = lambda x: x[0]) 
    return lst ",Incomplete Answer,Recursion
Generate a Python script to identify which words in a given list appear more than 3 times and print them out.,"words = ['blue', 'red', 'green', 'red', 'yellow', 'blue', 'blue', 'orange']","words = ['blue', 'red', 'green', 'red', 'yellow', 'blue', 'blue', 'orange']
from collections import Counter
word_counts = Counter(words)
words_appearing_more_than_3_times = [word for word, count in word_counts.items() if count > 3]
print(words_appearing_more_than_3_times)","words = ['blue', 'red', 'green', 'red', 'yellow', 'blue', 'blue', 'orange']
from collections import Counter
word_counts = Counter(words)
words_appearing_more_than_3_times = [word for word, count in word_counts.items() if count > 3]
print(name, words_appearing_more_than_3_times)",Syntax Error,Recursion
Create a Python function to generate anagrams from a given string.,,"def generate_anagrams(s):
    if len(s) == 1:
        return s

    anagrams = [] 
    for i, letter in enumerate(s):
        for anagram in generate_anagrams(s[:i] + s[i+1:]):
            anagrams.append(letter + anagram)
    return anagrams","def generate_anagrams(s):
    if len(s) == 1:
        return s

    anagrams = [] 
    for i, letter in enumerate(s):
        for anagram in generate_anagrams(s[:i] + s[i+1:]):
            anagrams.append(letter + anagram)
    return anagrams",correct,OOP
Create a Pythonically optimized version of the following code.,"def add_nums(nums):
    total = 0
    for i in range(len(nums)):
        total += nums[i] 
    return total","def add_nums(nums):
    return sum(nums)","def add_nums(nums:
    return sum(nums",Syntax Error,String Manipulation
Write a Python program to add two numbers in base-10.,"num1 = 6, num2 = 8","def add_base10(num1, num2): 
    return num1 + num2","def add_base10(num1, num2",Incomplete Answer,Recursion
Generate a Python script for a query to fetch data from a given MySQL table.,"Table Name: Products
Columns: product_id, name, price","import mysql.connector

db = mysql.connector.connect(
 host=""localhost"",
 user=""root"",
 passwd=""password"",
 database=""dbname""
)

mycursor = db.cursor()

sql = ""SELECT product_id, name, price FROM Products""

mycursor.execute(sql)

myresult = mycursor.fetchall()

for row in myresult:
  print(row)","import mysql.connector

db = mysql.connector.connect(
 host=""localhost"",
 user=""root"",
 passwd=""password"",
 database=""dbname""
)

mycursor = db.cursor()

sql = ""SELECT product_id, name, price FROM Products""

mycursor.execute(sql)

myresult = mycursor.fetchall()

for row in myresult:
  print(row)",Syntax Error,OOP
Generate an error message when a provided Python code fails to execute.,,"try:
    exec(<python_code>)
except Exception as e:
    print(""Error: "", e)","try:
exec(<python_code>)
except Exception as e:
print(""Error: "", e)",Syntax Error,OOP
Generate a Python dictionary that contains the count of the characters in a given string.,"""Hello World""","def count_chars(string):
    count_dict = {}

    for char in string:
        if char in count_dict:
            count_dict[char] += 1
        else:
            count_dict[char] = 1

    return count_dict

print(count_chars(""Hello World""))

# Output: {'H': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'W': 1, 'r': 1, 'd': 1}","def count_chars(string):
    count_dict = {}

    for char in string:
        if char in count_dict:
            count_dict[char] += 1
        else:
            count_dict[char] = 1

    return count_dict

print(count_chars(""Hello World""))

# Output: {'H': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'W': 1, 'r': 1, 'd': 1}",correct,OOP
Create a recursive function in Python to print the sum of the natural numbers up to the given number.,limit = 5,"def sum_natural_numbers(limit):
    if limit < 2:
        return limit
    else:
        return limit + sum_natural_numbers(limit-1)

#print the sum 
print(sum_natural_numbers(limit))","def sum_natural_numbers(limit):
    if limit < 2:
        return limit
    else:
        re",Incomplete Answer,File I/O
Write a Python program to find the number of system parameters that are not set correctly.,,"def find_system_parameter_count():
    """"""Find the number of system parameters not set correctly.""""""
    count = 0
    for param in system_parameters:
        if not is_correctly_set(param):
            count += 1
    return count","def find_system_parameter_count()
    """"""Find the number of system parameters not set correctly.""""""
    count = 0
    for param in system_parameters
        if not is_correctly_set(param)
            count += 1
    return count",Syntax Error,Recursion
Implement a function in Python that returns the sum of Pythagorean triplets up to the given number n.,,"def pythagorean_triplet_sum(n):
    result = 0
    for c in range(1, n + 1):
        for b in range(1, c):
            for a in range(1, b):
                if a**2 + b**2 == c**2:
                    result += a + b + c
    return result","def pythagorean_triplet_sum(n):
    result = 0
    for c in range(1, n + 1):
        for b in range(1, c):
            ",Incomplete Answer,OOP
Develop a Python program to list the first 10 numbers in the Fibonacci series.,,"a, b = 0, 1
print(""The first 10 numbers in Fibonacci series are:"")
while a < 10:
    print(a)
    a, b = b, a + b","a, b = 0, 1
print(""The first 10 numbers in Fibonacci ser",Incomplete Answer,File I/O
In Python print out the first 10 numbers of the Fibonacci sequence.,,"a, b = 0, 1
for i in range(10):
  print(a)
  a, b = b, a + b

# Output:
0
1
1
2
3
5
8
13
21
34","a, b = 0, 1
for i in range(10):
  print(a)
  a, b = b, a + b

# Output:
0
1
1
2
3
5
8
13
21
34",correct,String Manipulation
Write a python function to move all zeroes to the end of the given list.,,"def move_zero(num_list):
    a = [0 for i in range(num_list.count(0))]
    x = [ i for i in num_list if i != 0]
    x.extend(a)
    return (x)","def move_zero(num_list):
    a = [0 for i in range(num_list.count(0))]
    x = [ i for i in num_list if i != 0]
    x.extend(a)
    return (x)",correct,OOP
Implement a function in Python to remove all instances of an item from a list.,"[1, 2, 1, 3, 4, 1], 1","def remove_item(list, item):
    while item in list:
        list.remove(item)
    return list

result = remove_item([1, 2, 1, 3, 4, 1], 1)
print(result)","def remove_item(list, item):
    while item in list:
        list.remove(item)
    return list

result = remove_item([1, 2, 1, 3, 4, 1], 1)
print(result)",correct,OOP
"Unify the style of a code snippet in Python. Make sure to keep the original structure, including indentation, comments, and whitespace.","Example code snippet:
  """"""
     #This function takes
     two arguments
         and adds them
     """"""
  def add (x, y):
  return x + y","""""""This function takes two arguments and adds them""""""
def add(x, y):
    return x + y","""""""This function takes two arguments and a",Incomplete Answer,Recursion
Update the given Python code to remove all the duplicated elements from a list.,,"def remove_duplicates(nums):
    new_list = []
    for num in nums:
        if num not in new_list:
            new_list.append(num)
    return new_list","def remove_duplicates(nums):
    new_list = []
    for num in nums:
        if num not in new_list:
            new_list.append(num)
    return new_list",correct,Loops
"Given a string of text, write a function in Python that prints out every word in the string.",The quick brown fox,"def printWords(text):
 words = text.split()
 for word in words:
 print(word)

printWords(""The quick brown fox"")","def printWords(text)
 words = text.split()
 for word in words
 print(word)

printWords(""The quick brown fox"")",Syntax Error,Loops
Generate a program in Python to count the occurrence of an element in a given list,,"def count_element(list, element):
    count = 0
    for i in list:
        if i == element:
            count += 1
    return count","def count_element(list, element):
    count = 0
    for i in list:
        if i == element:
            count += 1
    return count",correct,File I/O
Generate a correct python program to accomplish the next objective,Implement a function which takes two arrays and finds the element which is common to both of them.,"def find_common_element(arr1, arr2):
    common_elements = []
    for element1 in arr1:
        for element2 in arr2:
            if element1 == element2 and element1 not in common_elements:
                common_elements.append(element1)
    return common_elements","def find_common_element(arr1, arr2):
    common_elements = []
    for element1 in arr1:
        for element2 in arr2:
            if ",Incomplete Answer,Loops
Write a function to get the n largest items from a dataset.,,"import heapq
def larg_nnum(list1,n):
 largest=heapq.nlargest(n,list1)
 return largest","import heapq
def larg_nnum(list1,n):
 largest=heapq.nlargest(n,list1)
 return largest",correct,OOP
Implement a method in Python that takes an integer n and returns the n-th Fibonacci number.,,"def fibonacci(n): 
 if n==0: 
 return 0
 elif n==1: 
 return 1
 else: 
 return fibonacci(n-1)+fibonacci(n-2)","def fibonacci(n): 
 if n==0: 
 return 0
 elif n==1: 
 return 1
 else: 
 return fibonacci(n-1)+fibonacci(n-2)",Syntax Error,Loops
"Utilizing the list comprehension, create a python program that removes all multiples of 3 from the input list.","[3,4,6,8,9,12]","res = [x for x in [3,4,6,8,9,12] if x % 3 != 0] 
print(res)","res = [x for x in [3,4,6,8,9,12] if x % 3 != 0] 
print(res)",Syntax Error,Loops
Create a Python class for a hospital patient.,,"class Patient:
    def __init__(self,name, age, medical_history):
        self.name = name
        self.age = age
        self.medical_history = medical_history
        
    def get_name(self):
        return self.name
        
    def get_age(self):
        return self.age
    
    def get_history(self):
        return self.medical_history","class Patient:
    def __init__(self,name, age, medical_history):
        self.name = name
        self.age = age
        self.medical_history = medical_history
        
    def get_name(self):
        return self.name
        
    def get_age(self):
        return self.age
    
    def get_history(self):
        return self.medical_history",correct,File I/O
Create a React component for displaying a list of strings.,"[ ""javascript"",""java"",""python""]","const List = ({ items }) => { 
  return ( 
    <ul> 
      {items.map(item => ( 
        <li> 
          {item} 
        </li> 
      ))} 
    </ul> 
  ) 
};

ReactDOM.render( 
  <List items={[ ""javascript"",""java"",""python""]} />, 
  document.getElementById('root') 
);","const List = ({ items }) => { 
  return ( 
    <ul> 
      {items.map(item => ( 
        <li> 
          {item} 
        </li> 
     ",Incomplete Answer,OOP
Edit the following Python program so that it prints out the square root of a given number.,number = 8,"import math

number = 8

# compute the square root of the given number
square_root = math.sqrt(number)

# print the square root
print(f""The square root of {number} is {square_root}"")","import math

number = 8

# compute the square root of the given number
square_root = math.sqrt(number)

# print the square root
print(f""The square root of {number} is {square_root}"")",correct,Loops
Create a search algorithm in Python to find a target element in a given array.,"[1, 4, 6, 8, 10], target = 8","def search(arr, target): 
  for idx, num in enumerate(arr): 
    if num == target:
      return idx
  return -1

idx = search([1, 4, 6, 8, 10], 8)
print(idx)","def search(arr, target): 
  for idx, num in enumerate(arr): 
    if num == target:
      return idx
  return -1

idx = search([1, 4, 6, 8, 10], 8)
print(idx)",correct,Loops
Write a Python program that takes an integer and prints a set of stairs with that many levels.,Number of levels: 5,"def staircase(n):
    for i in range(1, n+1):
        for j in range(1, n+1):
            if j <= n-i:
                print(' ', end='')
            else:
                print('#', end='')
        print('')

n = 5
staircase(n)","def staircase(n):
    for i in range(1, n+1):
        for j in range(1, n+1):
            if j <= n-i:
                print(' ', end='')
            else:
                print('#', end='')
        print('')

n = 5
staircase(n)",correct,File I/O
Generate all permutations of a given list of numbers with Python.,"[1, 2, 3]","import itertools

list_nums = [1, 2, 3]

perms = itertools.permutations(list_nums)
for perm in perms:
  print(perm)","import itertools

list_nums = [1, 2, 3]

perms = itertools.permutations(list_nums)
for perm in perms:
  print(perm)",correct,File I/O
Work out a solution to the Towers of Hanoi game using Python.,The game consists of 3 rods and 4 disks.,"def TowersOfHanoi(n, fromRod, toRod, auxRod): 
    if n == 1: 
        print(""Move disk 1 from rod"",fromRod,""to rod"",toRod) 
        return
    TowersOfHanoi(n-1, fromRod, auxRod, toRod) 
    print(""Move disk"", n, ""from rod"", fromRod, ""to rod"", toRod) 
    TowersOfHanoi(n-1, auxRod, toRod, fromRod) 

n = 4
TowersOfHanoi(n, 'A', 'C', 'B')","def TowersOfHanoi(n, fromRod, toRod, auxRod): 
    if n == 1: 
        print(""Move disk 1 from rod"",fromRod,""to rod"",toRod) 
        return
    TowersOfHanoi(n-1, fromRod, auxRod, toRod) 
    print(""Move disk"", n, ""from rod"", fromRod, ""to rod"", toRod) 
    TowersOfHanoi(n-1, auxRod, toRod, fromRod) 

n = 4
TowersOfHanoi(n, 'A', 'C', 'B')",correct,OOP
Create a for loop in Python to iterate over a list of strings and print each one.,,"strings = [""string1"", ""string2"", ""string3""]
for s in strings:
    print(s)","strings = [""string1"", ""string2"", ""string3""]
for s in strings:
    print(s)",correct,File I/O
Implement a function in Python that takes two arguments: a list and a string. The function should return the indices where the string appears in the list.,"list = ['apple', 'banana', 'pear', 'banana']
string = 'banana'","def find_indices(list, string):
    indices = []
    for i,item in enumerate(list):
        if item == string:
            indices.append(i)

    return indices","def find_indices(list, string):
    indices = []
    for i,item in enumerate(list):
        if item == string:
            indices.append(i)

    return indices",Syntax Error,File I/O
Write a python function to find the sublist having minimum length.,,"def Find_Min(lst): 
    minList = min((x) for x in lst) 
    return minList","def Find_Min(lst): 
    minList = min((x) for x in lst) 
    return minList",correct,Loops
Write a function in Python that takes a string as input and returns the length of the longest word.,"string = ""the quick brown fox jumps over the lazy dog""","def length_longest_word(s):
    longest_word = """"
    longest_len = 0
  
    words = s.split()
    for word in words:
        if len(word) > longest_len:
            longest_len = len(word)
            longest_word = word
  
    return len(longest_word)
  
result = length_longest_word(string)
print(result)","def length_longest_word(s:
    longest_word = """"
    longest_len = 0
  
    words = s.split(
    for word in words:
        if len(word > longest_len:
            longest_len = len(word
            longest_word = word
  
    return len(longest_word
  
result = length_longest_word(string
print(result",Syntax Error,OOP
Create a Python script to parse a given HTML page and find the URLs linking to other pages.,,"import requests
from bs4 import BeautifulSoup

url = ""https://example.com/""
# fetch the content from url
page = requests.get(url)
# parse the fetched content
soup = BeautifulSoup(page.text, 'html.parser')
# find all href values for a tags
all_links = soup.find_all('a', href=True)
# show the results
for link in all_links:
    print(link['href'])","import requests
from bs4 import BeautifulSoup

url = ""https://example.com/""
# fetch the content from url
page = requests.get(url)
# parse the fetched content
soup = Beautifu",Incomplete Answer,Recursion
Generate a table of numbers up to 10 in list format using Python.,,"mylist = [1,2,3,4,5,6,7,8,9,10]","mylist = [1,2,3,4,5,6,7,8,9,10]",Syntax Error,String Manipulation
Create a class in Python that defines two methods,,"class MyClass:
    def FirstMethod(self):
        pass
    def SecondMethod(self):
        pass","class MyClass:
    def FirstMethod(self):
     ",Incomplete Answer,Recursion
Design a method in Python to deduplicate a given list of elements.,"[4, 5, 1, 9, 5, 4, 3]","# store the given list
my_list = [4, 5, 1, 9, 5, 4, 3]

# remove the duplicates
deduplicated_list = list(set(my_list))

# print the result
print(""Deduplicated list:"", deduplicated_list)","# store the given list
my_list = [4, 5, 1, 9, 5, 4, 3]

# remove the duplicates
deduplicated",Incomplete Answer,File I/O
Write a function to remove duplicate words from a given string using collections module.,,"from collections import OrderedDict
def remove_duplicate(string):
  result = ' '.join(OrderedDict((w,w) for w in string.split()).keys())
  return result","from collections import OrderedDict
def remove_duplicate(string):
  result = ' '.join(OrderedDict((w,w) for w in string.split()).keys())
  return result",correct,Loops
Create a Python program that classifies articles based on sentiment.,This article is bad,"import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentences = [""This article is bad""]

sid = SentimentIntensityAnalyzer()
for sentence in sentences:
  print(sentence)
  ss = sid.polarity_scores(sentence)
  print(ss)
  if ss['compound'] >= 0.05:
    print(""Positive"")
  elif -0.05 < ss['compound'] < 0.05:
    print(""Neutral"")
  else:
    print(""Negative"")","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentences = [""This article is bad""]

sid = SentimentIntensityAnalyzer()
for sentence in sentences:
  print(sentence)",Incomplete Answer,Loops
Generate a code in Python to style a paragraph using HTML tags.,,"def style_paragraph(text):
  return ""<p style='text-align: justify; font-weight: bold; font-family: sans-serif;'>{}</p>"".format(text)","def style_paragraph(text):
  return ""<p style='text-align: justify",Incomplete Answer,File I/O
Modify the below Python function to make it efficient.,"def min_product(a, b):
 return a * b * (a - b)","def min_product(a, b):
    if a > b:
        return a * b
    else:
        return a * b * (a - b)","def min_product(a, b):
    if a > b:
        return a * b
    else:
        return a * b * (a - b)",correct,Recursion
Create a method to compute the factorial of an input integer using python,,"def factorial(n): 
    #base case
    if n == 0: 
        return 1 
  
    # recursive case
    return n * factorial(n-1) 
  
# Driver code 
num = 7
print(""The factorial of"", num, ""is"",factorial(num))","def factorial(n: 
    #base case
    if n == 0: 
        return 1 
  
    # recursive case
    return n * factorial(n-1 
  
# Driver code 
num = 7
print(""The factorial of"", num, ""is"",factorial(num",Syntax Error,Loops
Write a function in Python to return the parity of the number which is even if the number is divisible by 2 otherwise it will be odd.,,"def parity (num):   
    if num % 2 == 0: 
        return ""even""
    else: 
        return ""odd""","def parity (num:   
    if num % 2 == 0: 
        return ""even""
    else: 
        return ""odd""",Syntax Error,OOP
"Create a class in Python to represent a 3D vector. The class should contain properties for the x, y, and z coordinates and methods for calculating the magnitude.",,"class Vector3D:

    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z

    def magnitude(self):
        return (self.x**2 + self.y**2 + self.z**2)**(1/2)","class Vector3D:

def __init__(self, x, y, z):
    self.x = x
    self.y = y
    self.z = z

def magnitude(self):
    return (self.x**2 + self.y**2 + self.z**2)**(1/2)",Syntax Error,String Manipulation
Write a function to calculate a dog's age in dog's years.,,"def dog_age(h_age):
 if h_age < 0:
 	exit()
 elif h_age <= 2:
	 d_age = h_age * 10.5
 else:
	 d_age = 21 + (h_age - 2)*4
 return d_age","def dog_age(h_age):
 if h_age < 0:
 	exit()
 elif h_age <= 2:
	 d_",Incomplete Answer,String Manipulation
Write a Python program to build a decision tree using a given dataset,,"from sklearn import tree

def create_tree_model(x,y):
    model = tree.DecisionTreeClassifier()
    model.fit(x, y) 
    return model","from sklearn import tree

def create_tree_model(x,y):
    model = tree.DecisionTreeClassifier()
    model.fit(x, y) 
    return model",Syntax Error,File I/O
Output a program in Python to find the most frequent occurring item in an array,"arr = [1,3,3,3,4,4,4,4,5,5]","from collections import Counter

arr = [1,3,3,3,4,4,4,4,5,5]
data = Counter(arr)
get_mode = dict(data)
mode = [k for k, v in get_mode.items() if v == max(list(data.values()))]

print(f""Mode of the given list is {mode}"")","from collections import Counter

arr = [1,3,3,3,4,4,4,4,5,5]
data = Counter(arr)
get_mode = dict(data)
mode =",Incomplete Answer,File I/O
Write Python code to parse this JSON data.,"{
  ""title"": ""The Adventures of Tom Sawyer"",
  ""author"": ""Mark Twain"",
  ""year"": 1876
}","import json

data = {
  ""title"": ""The Adventures of Tom Sawyer"",
  ""author"": ""Mark Twain"",
  ""year"": 1876
}

parsed_data = json.loads(data)

title = parsed_data['title']
author = parsed_data['author']
year = parsed_data['year']","import json

data = {
  ""title"": ""The Adventures of Tom Sawyer"",
  ""author"": ""Mark Twain"",
  ""year"": 1876
}

parsed_data = json.loads(data)

title = parsed_data['title']
author = parsed_data['author']
year = parsed_data['year']",correct,Loops
Write a Python program to optimize a given array of integers such that each element is greater than or equal to the previous element in the array.,"[7, 2, 5, 8, 4, 0]","def optimize_array(array):
    optimized_array = []
    prev = -float(""inf"")
    for n in array:
        if(n>=prev):
            optimized_array.append(n)
            prev = n
    return optimized_array

array = [7, 2, 5, 8, 4, 0]
print(optimize_array(array))
# Output: [7, 5, 8, 4]","def optimize_array(array):
    optimized_array = []
    prev = -float(""inf"")
    for n in array:
        if(n>=prev):
            optimized_a",Incomplete Answer,String Manipulation
"Create a Python program that merges two lists, removing any duplicates.","list_a = [1, 2, 3, 4, 5]
list_b = [2, 3, 4, 6]","def merge_lists(list_a, list_b): 
    merged_list = []
    for ele in list_a:
        if ele not in merged_list:
            merged_list.append(ele)
    for ele in list_b:
        if ele not in merged_list:
            merged_list.append(ele)
    return merged_list","def merge_lists(list_a, list_b): 
    merged_list = []
    for ele in list_a:
        if ele not in merged_list:
            merged_list.append(ele)
    for ele in list_b:
        if ele not in merged_list:
            merged_list.append(ele)
    return merged_list",correct,Recursion
Create a basic Python script to scrape a web page and retrieve all the headings and anchor tags.,,"import requests
from bs4 import BeautifulSoup

url = ""http://example.com""

html_doc = requests.get(url).text

soup = BeautifulSoup(html_doc, 'html.parser')
headings = soup.find_all('h1')
anchors = soup.find_all('a')

for heading in headings:
 print(heading.text)

for anchor in anchors:
 print(anchor.get('href'))","import requests
from bs4 import BeautifulSoup

url = ""http://example.com""

html_doc = requests.get(url).text

soup = BeautifulSoup(html_doc, 'html.parser')
headings = soup.find_all('h1')
anchors = soup.find_all('a')

for heading in headings:
 print(heading.text)

for anchor in anchors:
 print(anchor.get('href'))",correct,Recursion
Write a function to check if a url is valid or not using regex.,,"import re
def is_valid_URL(str):
	regex = (""((http|https)://)(www.)?"" +
			""[a-zA-Z0-9@:%._\\+~#?&//=]"" +
			""{2,256}\\.[a-z]"" +
			""{2,6}\\b([-a-zA-Z0-9@:%"" +
			""._\\+~#?&//=]*)"")
	p = re.compile(regex)
	if (str == None):
		return False
	if(re.search(p, str)):
		return True
	else:
		return False","import re
def is_valid_URL(str):
	regex = (""((http|https)://)(www.)?"" +
			""[a-zA-Z0-9@:%._\\+~#?&//=]"" +
			""{2,256}\\.[a-z]"" +
			""{2,6}\\b([-a-zA-Z0-9@:%"" +
			""._\\+~#?&//=]*)"")
	p = re.compile(regex)
	if (str == None):
		return False
	if(re.search(p, str)):
		return True
	else:
		return False",correct,Recursion
Create a custom function in python to generate a random number between 1 to 10.,,"import random

def random_num():
    return random.randint(1, 10)","import random

def random_num():
return random.randint(1, 10)",Syntax Error,Loops
Create a Python class with the given attributes and functions.,"Attributes: name (string), age (integer), email address (string)
Function: toString() - return a string with the formatted attributes","class Person:
    
    def __init__(self, name, age, email):
        self.name = name
        self.age = age
        self.email = email
    
    def toString(self):
        return f""Name: {self.name}, Age: {self.age}, Email: {self.email}""","class Person:
    
    def __init__(self, name, age, email):
        self.name = name
        self.age = age
        self.email = email
    
    def toString(self):
        return f""Name: {self.name}, Age: {self.age}, Email: {self.email}""",Syntax Error,Recursion
"Using the input, generate a Python program that prints out the frequency of each item in the list.","[""apple"", ""banana"", ""apple"", ""banana"", ""orange""]","def item_freq(list_input):
    freq = {} 
  
    for item in list_input: 
        if (item in freq): 
            freq[item] += 1
        else: 
            freq[item] = 1
  
    for key, value in freq.items(): 
        print (""% s : % d""%(key, value))","def item_freq(list_input):
    freq = {} 
  
    for item in list_input: 
        if (item in freq): 
            freq[item] += 1
        else: 
            freq[item] = 1
  
    for key, value in freq.items(): 
        print (""% s : % d""%(key, value))",correct,File I/O
Generate a Python script to print the numbers from 1 to 10 in reverse order.,,"for i in range(10,0,-1):
  print(i)",for i in range(10,Incomplete Answer,File I/O
"In Python, create a class to define a circle object.",,"class Circle:
    def __init__(self, radius):
        self.radius = radius 
 
    def area(self):
        return 3.14 * self.radius * self.radius
 
    def circumference(self):
        return 2 * 3.14 * self.radius
 
# Driver code 
c = Circle(2)
print('Area = ', c.area())
print('Circumference = ', c.circumference())","class Circle:
    def __init__(self, radius):
        self.radius = radius 
 
    def area(self):
        return 3.14 * self.radius * self.radius
 
    def ci",Incomplete Answer,OOP
Prepare a python program that displays a decoded message given in a list.,"code = [1,2,3,2,2,3,1,3]","code = [1,2,3,2,2,3,1,3]

message = """"
for d in code:
    if d == 1:
        message += ""A""
    elif d == 2:
        message += ""B""
    elif d == 3:
        message += ""C""
print(message)","code = [1,2,3,2,2,3,1,3]

message = """"
for d in code:
    if d == 1:
        message += ""A""
    elif d == 2:
        message += ""B""
    elif d == 3:
        message += ""C""
print(message)",correct,String Manipulation
"Write a Python program to convert seconds to day, hour, minutes and seconds.",3600,"def convertSeconds(seconds):
    day = seconds//(24*3600)
    seconds = seconds%(24*3600)
    hour = seconds//3600
    seconds %= 3600
    minutes = seconds // 60
    seconds %= 60
    return day, hour, minutes, seconds

day, hour, minute, second = convertSeconds(3600)

print(""Day: {}, Hour: {}, Minute: {}, Second: {}"".format(day, hour, minute, second))","def convertSeconds(seconds):
    day = seconds//(24*3600)
    seconds = seconds%(24*3600)
    hour = seconds//3600
    seconds %= 3600
    minutes = seconds // 60
    seconds %= 60
    return day, hour, minutes, seconds

day, hour, minute, second = convertSeconds(3600)

print(""Day: {}, Hour: {}, Minute: {}, Second: {}"".format(day, hour, minute, second))",correct,Loops
"Write a Python program to clean a text corpus, transforming it into a bag of words.",The cat in the hat.,"corpus = ""the cat in the hat""

words = corpus.lower().split()
bag_of_words = set(words)

print(bag_of_words)
# Output: {'the', 'in', 'cat', 'hat'}","corpus = ""the cat in the hat""

words = corpus.lower().split()
bag_of_word",Incomplete Answer,File I/O
Generate a solution to translate a text from English to French using Python.,,"# install the module 
# in command prompt
pip install googletrans

# import module
from googletrans import Translator

# create an object
translator = Translator()

# define text
text = ""Hello, this is a sample text to translate.""

# call the function and pass the text
translation = translator.translate(text, dest='fr') 

# print the translation 
print(translation.text)","# install the module 
# in command prompt
pip install googletrans

# import module
from googletrans import Translator

# create an object
translator = Translator(

# define text
text = ""Hello, this is a sample text to translate.""

# call the function and pass the text
translation = translator.translate(text, dest='fr' 

# print the translation 
print(translation.text",Syntax Error,String Manipulation
Create a python script to print a word 100 times.,,"for i in range(100):
    print(""Word"")","for i in range(100:
    print(""Word""",Syntax Error,Loops
Construct a program that computes the sum of the first n natural numbers in Python.,,"def sum_of_n(n):
    sum = 0
    for i in range(1, n+1):
        sum += i
    return sum","def sum_of_n(n)
    sum = 0
    for i in range(1, n+1)
        sum += i
    return sum",Syntax Error,File I/O
Build a python class that takes two parameters and returns the sum of the two numbers.,,"class Summation:
    def __init__(self, num1, num2):
        self.num1 = num1
        self.num2 = num2

    def get_sum(self):
        return self.num1 + self.num2

total = Summation(5, 10).get_sum()
print(total)","class Summation:
    def __init__(self, num1, num2):
        self.num1 = num1
        self.num2 = num2

  ",Incomplete Answer,String Manipulation
Write a python program to check if a given string contains all alphabetic characters.,"String: ""Hello World!""","def is_alpha(word): 
    if word.isalpha(): 
        return True 
    else: 
        return False","def is_alpha(word): 
    if word.isalpha(): 
        return True 
    else: 
        return False",correct,Loops
Develop a Python program to show the product of all odd number components in an array.,"[3,4,5,6,7]","""""""
Python program to show the product of all odd numbers in an array
""""""

def product_of_odds(arr):
    product = 1
    for num in arr:
        if num % 2 != 0:
            product *= num
    return product

if __name__ == '__main__':
    arr = [3, 4, 5, 6, 7]
    print(product_of_odds(arr)) # 105","""""""
Python program to show the product of all odd numbers in an array
""""""

def product_of_odds(arr):
    product = 1
    for num in arr:
        if num % 2 != 0:
            product *= num
    return product

if __name__ == '__main__':
    arr = [3, 4, 5, 6, 7]
    print(product_of_odds(arr)) # 105",correct,String Manipulation
Write a valid Python program that takes a list and outputs the sum of the elements.,"[1, 2, 3]","def sumListElements(arr):
    sum = 0
    for num in arr:
        sum += num
    return sum

result = sumListElements([1,2,3]) 
print(result)","def sumListElements(arr):
    sum = 0
    for num in arr:
        sum += num
    return sum

result = sumListElements([1,2,3]) 
print(result)",correct,String Manipulation
Create a web crawler in Python that takes a given URL and prints out a list of links.,https://www.example.com,"from bs4 import BeautifulSoup
import requests

url = 'https://www.example.com'
response = requests.get(url)

soup = BeautifulSoup(response.text, 'lxml')
for link in soup.find_all('a'):
    print(link.get('href'))","from bs4 import BeautifulSoup
import requests

url = 'https://www.example.com'
response = requests.get(url)

soup = BeautifulSoup(response.text, 'lxml')
for link in soup.find_all('a'):
    pritn(link.get('href'))",Syntax Error,File I/O
Write a function to find tuples which have all elements divisible by k from the given list of tuples.,,"def find_tuples(test_list, K):
  res = [sub for sub in test_list if all(ele % K == 0 for ele in sub)]
  return (str(res)) ","def find_tuples(test_list, K):
  res = [sub for sub in test_l",Incomplete Answer,Recursion
Develop a python program to demonstrate taxonomic classification.,,"class SpeciesClassifier():
    def __init__(self, species_list):
        self.species_list = species_list

    def classify_species(self, species_name):
        for name_from_list in self.species_list:
            if name_from_list == species_name:
                return self.species_list[name_from_list]['classification']
        return None","class SpeciesClassifier(:
    def __init__(self, species_list:
        self.species_list = species_list

    def classify_species(self, species_name:
        for name_from_list in self.species_list:
            if name_from_list == species_name:
                return self.species_list[name_from_list]['classification']
        return None",Syntax Error,Loops
Convert this code from Java to Python.,"public static void main(String[] args) {
    int i;
    for (i = 0; i < 5; i++) {
        System.out.println(""Hello world!"");
    }
}","for i in range(5):
    print(""Hello world!"")","for i in range(5):
    print(""Hello world!"")",correct,Recursion
Write a Python program to find the list of words that are longer than given length,"word_list = [""Red"", ""Green"", ""Blue"", ""Yellow"", ""Orange""]
length = 5","# Create a list to store the result
long_words_list = []

# Iterate the list to find words longer than the given length
for word in word_list:
    if len(word) > length:
        long_words_list.append(word)

# Print the result
print(long_words_list)","# Create a list to store the result
long_words_list = []

# Iterate the list to find words longer than the given length
for word in word_list:
    if len(word) > length:
        long_words_list.append(word)

# Print the result
print(long_words_list)",correct,OOP
Write a python function to sort a list according to the second element in sublist.,,"def Sort(sub_li): 
    sub_li.sort(key = lambda x: x[1]) 
    return sub_li ","def Sort(sub_li) 
    sub_li.sort(key = lambda x x[1]) 
    return sub_li ",Syntax Error,Loops
Write a Python program to extract the last two digits of the given array of integers.,"arr = [30, 2993, 10056]","res = []
for num in arr:
    res.append(num%100)
print(res) # [30, 93, 56]","res = []
for num in arr
    res.append(num%100)
print(res) # [30, 93, 56]",Syntax Error,File I/O
Write a Python statement to check if a given number is within a given range,"Number: 3, Range: 0-10","if 0 <= 3 <= 10:
 print('Number is within the range')
else:
 print('Number is not within the range')","if 0 <= 3 <= 10:
 print('Number is within the rang",Incomplete Answer,OOP
Configure the following python code to work the mathematical expression.,"def calculate(x, y, operator):","def calculate(x, y, operator):
    if operator == '+':
        return x + y
    elif operator == '-':
        return x - y
    elif operator == '*':
        return x * y
    elif operator == '/':
        return x / y","def calculate(x, y, operator):
if operator == '+':
    return x + y
elif operator == '-':
    return x - y
elif operator == '*':
    return x * y
elif operator == '/':
    return x / y",Syntax Error,Loops
Generate a program in Python that takes in a string and returns the reverse of the string.,"""Hello World""","def reverse_string(str):
    """""" Reverses a given string """"""

    rev_str = """"

    for c in str:
        rev_str = c + rev_str

    return rev_str

str = ""Hello World""
rev_str = reverse_string(str)

print(rev_str)","def reverse_string(str):
    """""" Reverses a given string """"""

    rev_str = """"

    for c in str:
        rev_str = c + rev_str

    return rev_str

str = ""Hello World""
rev_str = reverse_string(str)

print(name, rev_str)",Syntax Error,String Manipulation
Create a Python function called add_marks which takes two parameters: marks(a list) and mark(an integer). The function should add the mark to each value in the marks list.,"marks = [87, 56, 99, 54]
mark = 4","def add_marks(marks, mark):
 return [m + mark for m in marks]","def add_marks(marks, mark:
 return [m + mark for m in marks]",Syntax Error,Loops
Convert the following code from C++ to Python.,"int main()
{
  int val1 = 25;
  int val2 = 6;
  int sum = val1 + val2;
  cout << sum;
  return 0;
}","def main():
  val1 = 25
  val2 = 6
  sum = val1 + val2
  print(sum)
  return 0","def main():
  val1 = 25
  val2 = 6
  su",Incomplete Answer,File I/O
Generate a Python dictionary that tracks the frequency of letters in a given string.,"test_string = ""This is a test string!""","frequency_dict = {}

for letter in test_string:
    if letter not in frequency_dict:
        frequency_dict[letter] = 0
    frequency_dict[letter] += 1","frequency_dict = {}

for letter in test_string:
    if letter not in frequency_dict:
        frequency_dict[letter] = 0
    frequency_dict[letter] += 1",Syntax Error,File I/O
Create a Python program to print the Fibonacci sequence.,,"def Fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 

# Driver Program 

print(Fibonacci(9))","def Fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 

# Driver Program 

print(Fibonacci(9))",correct,File I/O
"Construct a for loop in Python to generate the sequence [0, 1, 2, 3, 4, 5, 6, 7, 8].",,"for i in range(9):
    print(i)","for i in range(9)
    print(i)",Syntax Error,File I/O
"Write an API endpoint for a basic user authentication system in Python. It should accept a username and password, validate them, and return a token if the user is valid.","username: john
password: pass123","import jwt
 
@app.route('/auth', methods=['POST'])
def auth():
 username = request.form.get('username')
 password = request.form.get('password')
 
 # authenticate the user here
 
 token = jwt.encode({'username': username}, app.config['SECRET_KEY'])
 
 return token","import jwt
 
@app.route('/auth', methods=['POST'])
def auth():
 username = request.form.get('username')
 password = request.form.get",Incomplete Answer,OOP
Create a Python script to partition a list into sub-lists of equal size.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def partition(lst, n):
 return [lst[i:i+n] for i in range(0, len(lst), n)]
 
list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
partitions = partition(list, 3)
 
for p in partitions:
 print(p)

# Output
# [1, 2, 3]
# [4, 5, 6]
# [7, 8, 9]
# [10]","def partition(lst, n):
 return [lst[i:i+n] for i in range(0, len(lst), n)]
 
list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
partitions = partition(list, 3)
 
for p in partitions:
 pritn(p)

# Output
# [1, 2, 3]
# [4, 5, 6]
# [7, 8, 9]
# [10]",Syntax Error,OOP
Design a for loop in Python which iterates over two given lists and prints their items in a orderly manner.,"list1 = [1, 2, 3]
list2 = [""Apple"", ""Banana"", ""Cherry""]","for item1, item2 in zip(list1, list2):
    print(f""{item1}: {item2}"")","for item1, item2 in zip(list1, list2):
    print(f""{item1}: {item2}"")",correct,Loops
Write a python function to find the count of rotations of a binary string with odd value.,,"def odd_Equivalent(s,n): 
    count=0
    for i in range(0,n): 
        if (s[i] == '1'): 
            count = count + 1
    return count ","def odd_Equivalent(s,n) 
    count=0
    for i in range(0,n) 
        if (s[i] == '1') 
            count = count + 1
    return count ",Syntax Error,OOP
Analyze a given python code and debug it.,"def calculate_sum(numbers : Arrar[int]):
sum = 0
for i in numbers:
sum = i
return sum

nums = [3, 7, 10]
print(""The sum is"", calculate_sum(nums))","def calculate_sum(numbers: Array[int]):
    sum = 0
    for i in numbers:
        sum += i
    return sum

nums = [3, 7, 10]
print(""The sum is"", calculate_sum(nums))","def calculate_sum(numbers: Array[int]):
sum = 0
for i in numbers:
    sum += i
return sum

nums = [3, 7, 10]
print(""The sum is"", calculate_sum(nums))",Syntax Error,String Manipulation
Develop Python code to reverse an array.,"arr = [1, 2, 3, 4, 5]","def reverse_array(arr): 
    start = 0
    end = len(arr) - 1
      
    while start < end: 
        arr[start], arr[end] = arr[end], arr[start] 
        start += 1
        end -= 1
    return arr 
  
# Driver code 
arr = [1, 2, 3, 4, 5] 
print(reverse_array(arr))","def reverse_array(arr): 
    start = 0
    end = len(arr) - 1
      
    while start < end: 
        arr[start], arr[end] = arr[end], arr[start] 
        start += 1
        end -= 1
    return arr 
  
# Driver code 
arr = [1, 2, 3, 4, 5] 
print(reverse_array(arr))",correct,OOP
Write a python script that checks if a given string is a palindrome.,,"def isPalindrome(s): 
    rev = ''.join(reversed(s))
    if s == rev:
        return True
    return False","def isPalindrome(s): 
    rev = ''.join(reversed(s))
    if s == rev:
        return True
    return False",correct,String Manipulation
Design an algorithm in Python that prints out all the prime numbers up to a certain number.,n = 15,"def is_prime(n):
  if n == 1:
    return False

  for i in range(2, int(n ** 0.5) + 1):
    if n % i == 0:
      return False
   
  return True

def get_prime_numbers(n):
  result = []
  for num in range(2, n+1):
    if is_prime(num):
      result.append(num)
  return result

prime_numbers = get_prime_numbers(15)
print(prime_numbers)","def is_prime(n):
  if n == 1:
    return False

  for i in range(2, int(n ** 0.5) + 1):
    if n % i == 0:
      return False
   
  return True

def get_prime_numbers(n):
  result = []
  for num in range(2, n+1):
    if is_prime(num):
      result.append(num)
  return result

prime_numbers = get_prime_numbers(15)
pritn(prime_numbers)",Syntax Error,Recursion
Suggest alternative code to determine the mode of a given list in Python.,,"from collections import Counter

def get_mode(numbers):
    num_count = Counter(numbers)
    max_count = max(num_count.values())
    mode = [x for x in num_count.keys() if num_count[x] == max_count]
    return mode","from collections import Counter

def get_mode(numbers):
    num_count = Counter(numbers)
    max_count = ma",Incomplete Answer,Loops
Write a python program to split a list into two halves,"data = [1, 2, 3, 4, 5]","def split_list(data):
    # Calculate the length of data
    length = len(data)
    # calculate the midpoint of the list 
    midpoint = length//2
    
    # split the data into two halves 
    first_half = data[:midpoint]
    second_half = data[midpoint:]
    
    return first_half, second_half
    
split_list([1, 2, 3, 4, 5]) # Returns ([1, 2], [3, 4, 5])","def split_list(data)
    # Calculate the length of data
    length = len(data)
    # calculate the midpoint of the list 
    midpoint = length//2
    
    # split the data into two halves 
    first_half = data[midpoint]
    second_half = data[midpoint]
    
    return first_half, second_half
    
split_list([1, 2, 3, 4, 5]) # Returns ([1, 2], [3, 4, 5])",Syntax Error,File I/O
Write a Python code to get the third largest element in a given row.,"[12, 13, 13, 45, 22, 99]","def third_largest(lst):
    if len(lst) < 3:
        return
    distinct = []
    for i in lst:
        if i not in distinct:
            distinct.append(i)
    distinct.sort(reverse=True)
    return distinct[2]","def third_largest(lst)
    if len(lst) < 3
        return
    distinct = []
    for i in lst
        if i not in distinct
            distinct.append(i)
    distinct.sort(reverse=True)
    return distinct[2]",Syntax Error,File I/O
Construct a class in Python to implement a queue.,,"class Queue(object):
 def __init__(self):
  self.items = []

 def isEmpty(self):
  return self.items == []

 def enqueue(self, item):
  self.items.insert(0, item)

 def dequeue(self):
  return self.items.pop()

 def size(self):
  return len(self.items)","class Queue(object):
 def __init__(self):
  self.items = []

 def isEmpty(self):
  return self.items == []

 def enqueue(self,",Incomplete Answer,OOP
Create a unit test for an existing Python function. The function should take a single argument and return the square of the argument.,,"import unittest

def square(x):
   return x * x

class TestSquareFunction(unittest.TestCase):
   def test_square(self):
       self.assertEqual(square(3), 9)
       self.assertEqual(square(5), 25)
       self.assertEqual(square(7), 49)

if __name__ == '__main__':
     unittest.main()","import unittest

def square(x):
   return x * x

class TestSquareFunction(unittest.TestCase):
   def test_square(self):
       self.assertEqual(square(3), 9)
       self.assertEqual(square(5), 25)
       self.assertEqual(square(7), 49)

if __name__ == '__main__':
     unittest.main()",correct,OOP
Write a function to return the sum of all divisors of a number.,,"def sum_div(number):
    divisors = [1]
    for i in range(2, number):
        if (number % i)==0:
            divisors.append(i)
    return sum(divisors)","def sum_div(number):
    divisors = [1]
    for i in range(2, number):
     ",Incomplete Answer,Loops
Create a Python program to search for a particular pattern in a string of text and return all matching substrings.,"let text = ""hey this is a string to match for a pattern"";","import re

text = ""hey this is a string to match for a pattern""
pattern = ""match""

# Find all matches
matches = re.findall(pattern, text)

# Print the matches
print(matches)
# Output: ['match']","import re

text = ""hey this is a string to match for a pattern""
pattern = ""match""

# Find all matches
matches = re.findall(pattern, text)

# Print the matches
print(matches)
# Output: ['match']",Syntax Error,Recursion
Generate a random 5-letter word using a code for a Python program.,,"import random

alphabet = 'abcdefghijklmnopqrstuvwxyz'

def generate_random_word():
    word = ''
    for i in range(5):
        word += random.choice(alphabet)
    return word

print(generate_random_word())","import random

alphabet = 'abcdefghijklmnopqrstuvwxyz'

def generate_random_word():
    word = ''
    for i in range(5):
        word += random.choice(alphabet)
    return word

print(generate_random_word())",correct,Loops
Generate a Python program to convert Fahrenheit to Celsius using a given formula.,,"def fahrenheit_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5 / 9
    return celsius","def fahrenheit_to_celsius(fahrenheit):
    celsi",Incomplete Answer,String Manipulation
Create a program in Python which will compute the sum of all the numbers in a range.,Range: 10-20,"def sum_of_range(start, end): 
    sum = 0
    for i in range(start, end+1): 
        sum += i
    return sum 
  
# Driver Code 
print(sum_of_range(10, 20))","def sum_of_range(start, end): 
    sum = 0
    for i in range(start, end+1): 
        sum += i
    return sum 
  
# Driver Code 
pritn(sum_of_range(10, 20))",Syntax Error,Loops
"Rewrite the following Javascript code as a Python code that solves the same problem.

Given an array of numbers, find the square root of each number and print it.","[2, 3, 4, 5]","import math

numbers = [2, 3, 4, 5]

for number in numbers:
 print(math.sqrt(number))

# Output
# 1.414
# 1.732
# 2.000
# 2.236","import math

numbers = [2, 3, 4, 5]

for number in numbers:
 print(name, math.sqrt(number))

# Output
# 1.414
# 1.732
# 2.000
# 2.236",Syntax Error,Recursion
Design a Python script to calculate the count of words in a given sentence.,"sentence = ""Hello World!""","def word_count(sentence):
    words = sentence.split(' ')
    return len(words)","def word_count(sentence:
    words = sentence.split(' '
    return len(words",Syntax Error,File I/O
Write a function in Python that finds all possible substrings of a string and prints them.,"String =  ""Hello World""","def printSubstrings(s): 
    n = len(s) 
      
    for i in range(n):
        for j in range(i+1, n+1):
            print(s[i:j])
  
# Driver code 
s = ""Hello World""
printSubstrings(s)","def printSubstrings(s): 
    n = len(s) 
      
    for i in range(n):
        for j in rang",Incomplete Answer,Recursion
Write a python program to calculate the mean of a list of numbers and display the mean using print statement.,"[2, 6, 9, 8, 4, 5]","list = [2, 6, 9, 8, 4, 5]
sum = 0 
for num in list:
 sum += num 

# calculate mean
mean = sum / len(list)

# print mean
print(""Mean:"", mean)

# Output
Mean: 5.8","list = [2, 6, 9, 8, 4, 5]
sum = 0 
for num in list:
 sum += num 

# calculate me",Incomplete Answer,String Manipulation
Create an animation in Python using some type of visualization library like Matplotlib.,,"import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

fig, ax = plt.subplots()
xdata, ydata = [], []

def update(frame):
 xdata.append(frame)
 ydata.append(frame ** 2)

 ax.clear()
 ax.plot(xdata, ydata)

animation = FuncAnimation(fig, update, frames=range(100), interval=100)
plt.show()","import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

fig, ax = plt.subplots()
xdata, ydata = [], []

def update(frame):
 xdata.append(frame)
 ydata.append(frame ** 2)

 ax.clear()
 ax.plot(xdata, ydata)

animation = FuncAnimation(fig, update, frames=range(100), interval=100)
plt.show()",Syntax Error,Loops
Write a function to check whether a specified list is sorted or not.,,"def issort_list(list1):
    result = all(list1[i] <= list1[i+1] for i in range(len(list1)-1))
    return result","def issort_list(list1):
    result = all(list1[i] <= list1[i+1] for i in range(len(list1)-1))
    return result",correct,String Manipulation
"Write a Python program to sum the list of integers in ""input_list"".","input_list = [1, 2, 3, 4, 5]","def sum_list(input_list):
    total = 0
    for item in input_list:
        total += item
    return total","def sum_list(input_list):
    total = 0
    for item in input_list:
        total += item
    return total",correct,OOP
Create a python code to convert a string of comma-separated numbers into list.,"numbers = '1,2,3,4,5,6'","numbers = '1,2,3,4,5,6'

numbers_list = [int(x) for x in numbers.split(',')]

print(numbers_list) # [1, 2, 3, 4, 5, 6]","numbers = '1,2,3,4,5,6'

numbers_list = [int(x) for x in numbers.split(',')]

print(numbers_list) # [1, 2, 3, 4, 5, 6]",correct,Recursion
Generate a Python script for calculating the Fibonacci numbers.,,"def fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return fibonacci(n-1)+fibonacci(n-2) 

# Driver Program 
  
print(fibonacci(9))","def fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return fibonacci(n-1)+fibonacci(n-2) 

# Driver Program 
  
print(fibonacci(9))",correct,String Manipulation
Modify the given function to sort a list of tuples based on the second index of each tuple in Python.,"def sort_list_of_tuples(input_list):
    pass","def sort_list_of_tuples(input_list):
    sorted_list = sorted(input_list, key=lambda tup: tup[1])
    return sorted_list","def sort_list_of_tuples(input_list):
    sorted_list = sorted(input_list, key=lambda tup: tup[1])
    return sorted_list",Syntax Error,File I/O
Create a program that can find the top five most common words in the input.,Python is a powerful general-purpose programming language.,"import collections
import re

# clean and preprocess text
words = re.sub('\W+', ' ', input_text).split()

# find most common words
word_counter = collections.Counter(words)

# print top five most common words
print(word_counter.most_common(5))

# Output:
[('a', 1), ('Python', 1), ('is', 1), ('powerful', 1), ('general', 1)]","import collections
import re

# clean and preprocess text
words = re.sub('\W+', ' ', input_text).split()

# find most common words
word_counter = collections.Counter(words)

# print top five most common words
print(word_counter.most_common(5))

# Output
[('a', 1), ('Python', 1), ('is', 1), ('powerful', 1), ('general', 1)]",Syntax Error,OOP
Develop a Python script to perform sentiment analysis on a given text.,"""I'm feeling really great today""","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

text = ""I'm feeling really great today""

sid = SentimentIntensityAnalyzer()
ss = sid.polarity_scores(text)

print(ss['compound']) # Prints 0.6249, which is positive sentiment.","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

text = ""I'm feeling really great today""

sid = SentimentIntensityAnalyzer()
ss = sid.polarity_scores(text)

print(ss['compound']) # Prints 0.6249, which is positive sentiment.",correct,String Manipulation
Write a code snippet in Python for sorting a given array of numbers in ascending order.,"[3, 7, 1, 5]","def sort_array(arr): 
    arr.sort() 
    return arr 

sort = sort_array([3, 7, 1, 5])

print(sort)","def sort_array(arr): 
    arr.sort() 
    return arr 

sort = sort_array([3, 7, 1, 5])

print(sort)",correct,Loops
Create a Python program to edit a given string and insert a given word into the middle of the string.,"String = 'I am a programmer';
Word = 'software'","def insert_word(string, word):
  mid_index = len(string)//2
  start_string = string[:mid_index]
  end_string = string[mid_index:]
  new_string = start_string+word+end_string
  return new_string

string = 'I am a programmer'
word = 'software'

print(insert_word(string, word))","def insert_word(string, word):
  mid_index = len(string)//2
  start_string = string[:mid_index]
  end_string = string[mid_index:]
  new_s",Incomplete Answer,Loops
Create a decision tree in Python to classify a given dataset.,,"from sklearn.tree import DecisionTreeClassifier

# define the model with the desired parameters
model = DecisionTreeClassifier(criterion='entropy', max_depth=5)

# fit the model with the data
model.fit(X, y)

# make predictions
y_pred = model.predict(X_new)","from sklearn.tree import DecisionTreeClassifier

# define the model with the desired parameters
model = DecisionTreeClassifier(c",Incomplete Answer,Recursion
Edit the given Python function to include an exception handling code block.,"def convert_to_integer(x):
    return int(x)","def convert_to_integer(x):
    try:
        return int(x)
    except Exception:
        print('Unable to convert to integer.')
        return x","def convert_to_integer(x:
    try:
        return int(x
    except Exception:
        print('Unable to convert to integer.'
        return x",Syntax Error,File I/O
Write a function to filter the height and width of students which are stored in a dictionary.,,"def filter_data(students,h,w):
    result = {k: s for k, s in students.items() if s[0] >=h and s[1] >=w}
    return result    ","def filter_data(students,h,w:
    result = {k: s for k, s in students.items( if s[0] >=h and s[1] >=w}
    return result    ",Syntax Error,OOP
Create a Python script to scrape a web page and output the title of the page.,,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'

resp = requests.get(url)
soup = BeautifulSoup(resp.text, 'html.parser')
title = soup.find('title').get_text()

print(title)","import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'

resp = requests.get(url)
soup = BeautifulSoup(resp.text, 'html.parser')
title = soup.find('title').get_text()

print(title)",correct,Recursion
Write a python function to find the sum of all odd natural numbers within the range l and r.,,"def sum_Odd(n): 
    terms = (n + 1)//2
    sum1 = terms * terms 
    return sum1  
def sum_in_Range(l,r): 
    return sum_Odd(r) - sum_Odd(l - 1)","def sum_Odd(n): 
    terms = (n + 1)//2
    sum1 = terms * terms 
    re",Incomplete Answer,Loops
"Given a Python dictionary, write a program to remove all the keys whose value is greater than a specified number.","dictionary = {'a': 1, 'b': 2, 'c': 3, 'd':4}, threshold = 2","dictionary = {'a': 1, 'b': 2, 'c': 3, 'd':4}
threshold = 2

def remove_keys(dict, threshold):
    to_remove = [k for k, v in dict.items() if v > threshold]
    for k in to_remove:
        del dict[k]
    return dict

print(remove_keys(dictionary, threshold))
# Output: {'a': 1, 'b':2}","dictionary = {'a': 1, 'b': 2, 'c': 3, 'd':4}
threshold = 2

def remove_keys(dict, threshold):
    to_remove = [k for k, v in dict.items() if v > threshold]
    for k in to_remove:
        del dict[k]
    return dict

print(remove_keys(dictionary, threshold))
# Output: {'a': 1, 'b':2}",correct,Loops
Create a python function that takes in a string and reverse any words that contain a certain character.,"String: ""Hello World!-Abc""
Character: ""-""","def string_reverse(string, character):
    new_string = []
    for word in string.split(' '):
        if character in word:
            new_string.append(word[::-1])
        else:
            new_string.append(word)
    return ' '.join(new_string)

string_reverse(""Hello World!-Abc"", ""-"") # Output: ""Hello dlroW!-cbA""","def string_reverse(string, character):
    new_string = []
    for word in string.split(' '):
        if character in word:
            new_string.append(word",Incomplete Answer,String Manipulation
Create a program in Python that takes 5 numbers input from the user and prints out their median.,"3, 4, 7, 6, 8","nums = []
ans = 0

for _ in range(5):
 nums.append(int(input()))
 
nums.sort()

if len(nums) % 2 == 0:
 ans = (nums[len(nums)//2] + nums[len(nums)//2-1]) / 2
else:
 ans = nums[len(nums) // 2]
 
print(""Median of the given numbers is: "" + str(ans))","nums = []
ans = 0

for _ in range(5):
 nums.append(int(input()))
 
nums.sort()

if len(nums) % 2 == 0:
 ans = (nums[len(nums)//2] + nums[len(nums)//2-1]) / 2
else:
 ans = nums[len(nums) // 2]
 
print(""Median of the given numbers is: "" + str(ans))",correct,File I/O
Design a function in Python to generate Fibonacci numbers from 1 to a given range.,10,"def fibonacci(x):
 fib_numbers = [1,1]
 for i in range(2,x):
  fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])
 return fib_numbers","def fibonacci(x):
 fib_numbers = [1,1]
 for i in range(2,x):
  fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])
 return fib_numbers",correct,File I/O
Sort a list in descending order using a lambda function in Python.,"Input list : [1, 5, -9, 8, 21]","list = [1, 5, -9, 8, 21]
sorted_list = sorted(list, reverse=True, key= lambda x:x)
print(sorted_list)","list = [1, 5, -9, 8, 21]
sorted_list = sorted(list, reverse=True, key= lambda x:x)
print(sorted_list)",Syntax Error,Loops
Create a Python class for handling exceptions.,,"class CustomException(Exception):
    def __init__(self, message):
        self.message = message
    def __str__(self):
        return self.message

def divide(x, y):
    try:
        result = x // y
    except ZeroDivisionError:
        raise CustomException(""Division by zero is not allowed"")
    else:
        return result","class CustomException(Exception):
    def __init__(self, message):
        self.message = message
    def __str__(self):
        return self.message

def divide(x,",Incomplete Answer,String Manipulation
Create a program to calculate the number of ways to arrange five numbers in a sequence.,"5 numbers: 1, 2, 3, 4, 5","# Python
numbers = [1, 2, 3, 4, 5]

count = 0

for i in range(5):
 for j in range(5):
 if j != i:
 for k in range(5):
 if k != i and k != j:
  for l in range(5):
  if l != i and l != j and l != k: 
   for m in range(5):
   if m != i and m != j and m != k and m != l:
   count += 1

print(count)
# 120","# Python
numbers = [1, 2, 3, 4, 5]

count = 0

for i in range(5):
 for j in range(5):
 if j != i:
 for k in range(5):
 if k != i and k != j:
  for l i",Incomplete Answer,String Manipulation
Create a Python class called 'Rectangle' with a constructor that takes two arguments: length and width.,,"class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width

    def area(self):
        return self.length * self.width","class Rectangle:
    def __init__(self, length, width):
        self.length = length
 ",Incomplete Answer,File I/O
Write a Python program to find the maximum and minimum value in a given dictionary.,"dict_a = {""a"": 1, ""b"": 2, ""c"": 3}","def max_min_dict(dict_a):
 max_val = -float('inf')
 min_val = float('inf')
 for key in dict_a:
 max_val = max(max_val, dict_a[key])
 min_val = min(min_val, dict_a[key])
 
 return max_val, min_val
 
max_min_dict(dict_a)","def max_min_dict(dict_a):
 max_val = -float('inf')
 min_val = float('inf')
 for key in dict_a:
 max_val = max",Incomplete Answer,Recursion
"Given a duration in seconds, write a Python code to convert it into a string showing hours, minutes and seconds.",32400,"def to_time_string(duration):
    hours, remainder = divmod(duration, 3600)
    minutes, seconds = divmod(remainder, 60)
    return ""%02d:%02d:%02d"" % (hours, minutes, seconds)

print(to_time_string(32400))","def to_time_string(duration:
    hours, remainder = divmod(duration, 3600
    minutes, seconds = divmod(remainder, 60
    return ""%02d:%02d:%02d"" % (hours, minutes, seconds

print(to_time_string(32400",Syntax Error,Recursion
Develop a function in Python which reverses any given string.,,"def reverseString(str):
  return str[::-1]","def reverseString(str:
  return str[::-1]",Syntax Error,OOP
Create a machine learning algorithm in Python that takes a set of data points and classifies them into two distinct classes.,"Examples [[1,2], [-2,3], [-1,-4], [0,0]]","import numpy as np
from sklearn.svm import LinearSVC

X = np.array([[1, 2], [-2, 3], [-1, -4], [0, 0]])
# y = [1, -1, -1, 0]
y = np.array([1, -1, -1, 0])

clf = LinearSVC()
clf.fit(X, y)

# Predict the class of the points [[3, -1], [-2, 0]]
predictions = clf.predict([[3, -1], [-2, 0]])
# Output -> [1, -1]","import numpy as np
from sklearn.svm import LinearSVC

X = np.array([[1, 2], [-2, 3], [-1, -4], [0, 0]])
# y = [1, -1, -1, 0]
y = np.array([1, -1, -1, 0])

clf = LinearSVC()
clf.fit(X, y)

# Predict the class of the points [[3, -1], [-2, 0]]
predictions = clf.predict([[3, -1], [-2, 0]])
# Output -> [1, -1]",Syntax Error,Recursion
Generate a Python function to compute the Fibonacci sequence.,,"def fibonacci(n):
 if n == 0:
  return 0
 elif n == 1:
  return 1
 else:
  return fibonacci(n - 1) + fibonacci(n - 2)","def fibonacci(n):
 if n == 0:
  return 0
 elif n == 1:
  r",Incomplete Answer,File I/O
Write a Python function to get the GCD (Greatest Common Divisor) of two positive integers.,"46, 24","def gcd(a,b): 
      
    if b == 0: 
        
        return a 
      
    return gcd(b, a % b)","def gcd(a,b): 
      
    if b == 0: 
        
        return a 
      
    return gcd(b, a % b)",Syntax Error,String Manipulation
Generate a Python function which takes an array and a value and returns the index at which this value is present in the array.,"arr = [2, 5, 9, 15], x = 5","def find_index(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i
    return -1

print(find_index(arr, x))","def find_index(arr, x):
    for i in range(len(arr)):
        if arr[",Incomplete Answer,Recursion
"Generate a Python dictionary with 10 key-value pairs, where the value should be an integer.",,"dictionary = {
    'one': 1,
    'two': 2,
    'three': 3,
    'four': 4,
    'five': 5,
    'six': 6,
    'seven': 7,
    'eight': 8,
    'nine': 9,
    'ten': 10
}","dictionary = {
'one': 1,
'two': 2,
'three': 3,
'four': 4,
'five': 5,
'six': 6,
'seven': 7,
'eight': 8,
'nine': 9,
'ten': 10
}",Syntax Error,Loops
Create a Python program to remove all white-space from a given string.,"""Hello World   ""","string = ""Hello World   ""

no_space_string = string.replace(' ', '')

print(no_space_string)","string = ""Hello World   ""

no_space_string = s",Incomplete Answer,OOP
Create a function in python to generate a multiplication table for a given number n.,,"def generate_multiplication_table(n):
    table = []
    for i in range(1, n+1):
        row = []
        for j in range(1, n+1):
            row.append(i * j)
        table.append(row)
    return table","def generate_multiplication_table(n):
    table = []
    for i in range(1, n+1):
        row = []
        for j in range(1, n+1):
            row.append(i * j)
        table.append(row)
    return table",correct,Loops
Create a Python script to parse a JSON string and return the value of the given field.,"{""name"": ""John"", ""age"": 30}","def get_value(json_string, field):
    json_dict = json.loads(json_string)
    return json_dict[field]","def get_value(json_string, field):
    json_dict = ",Incomplete Answer,String Manipulation
Construct a python function that sorts a list of tuples containing the names of the keys and values of a dictionary.,"dictionary = {'a': 4, 'b': 2, 'c': 3, 'd': 1}","def sort_dictionary(dictionary):
    return sorted(dictionary.items(), key=lambda x: x[1])","def sort_dictionary(dictionary):
    return s",Incomplete Answer,Recursion
Generate a class in Python that can store the following data,"Month, Calories, Exercise Minutes","class HealthData:
    def __init__(self, month, calories, minutes):
        self.month = month
        self.calories = calories
        self.minutes = minutes","class HealthData:
    def __init__(self, month, calories, minutes):
        self.month = month
        self.calories = calories
        self.minutes = minutes",Syntax Error,Recursion
Develop a code in Python to print the nth Fibonacci number.,6,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

print(Fibonacci(6))","def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

print(Fibonacci(6))",correct,Recursion
Write a Python program to arrange the following list in descending order,"[4,7,1,10,3]","arr = [4,7,1,10,3]

arr.sort(reverse=True)

print(arr)
# Output: [10, 7, 4, 3, 1]","arr = [4,7,1,10,3]

arr.sort(reverse=Tru",Incomplete Answer,Recursion
Write a Python function which takes a number as a parameter and check the number is prime or not.,,"def is_prime(num): 
    if num > 1:
        for i in range(2, num):
            if (num % i) == 0:
                return False 
        return True
    else: 
        return False","def is_prime(num): 
    if num > 1:
        for i in range(2, num):
            if (num % ",Incomplete Answer,File I/O
Write a Python program to extract all the links from a web page.,,"from bs4 import BeautifulSoup
import requests

url = 'https://www.example.com'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

links = []
for link in soup.find_all('a'):
    links.append(link.get('href'))

print(links)","from bs4 import BeautifulSoup
import requests

url = 'https://www.example.com'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

links = []
for link in soup.find_all('a'):
    links.append(link.get('href'))

print(links)",correct,OOP
Design a recursive function in Python that calculates the Fibonacci sequence to the nth number.,n = 10,"def fib(n):
 if n == 0:
  return 0
 elif n == 1:
  return 1
 else:
  return fib(n-1) + fib(n-2)

num = 10
print(""The Fibonacci sequence to the "" + str(num) +""th number is:"")
for i in range(num):
 print(fib(i))","def fib(n):
 if n == 0:
  return 0
 elif n == 1:
  return 1
 else:
  return fib(n-1) + fib(n-2)

num = 1",Incomplete Answer,Recursion
Generate a new Python program to be able to classify a list of emails.,,"def classify_email(email_list): 
    classified_list = []
    for email in email_list: 
        if '@' in email: 
            classified_list.append('Valid') 
        else: 
            classified_list.append('Invalid') 
    return classified_list","def classify_email(email_list): 
    classified_list = []
    for email in email_list: 
        if '@' in email: 
         ",Incomplete Answer,String Manipulation
Create a function in Python that takes a list of strings as an argument and sorts the strings in alphabetical order.,"[""Hello"", ""World"", ""Foo"", ""Bar""]","def sort_strings(strings):
    strings.sort()
    return strings","def sort_strings(strings):
    strings.sort()
    return strings",Syntax Error,File I/O
Write a function to sort the tuples alphabetically by the first item of each tuple.,,"def sort_tuple(tup): 
	n = len(tup) 
	for i in range(n): 
		for j in range(n-i-1): 
			if tup[j][0] > tup[j + 1][0]: 
				tup[j], tup[j + 1] = tup[j + 1], tup[j] 
	return tup","def sort_tuple(tup): 
	n = len(tup) 
	for i in range(n): 
		for j in range(n-i-1): 
			if tup[j][0] > tup[j + 1][0]: 
				tup[j], tup[j + 1] = tup[j + 1], tup[j] 
	return tup",Syntax Error,OOP
Write a function to find the division of first even and odd number of a given list.,,"def div_even_odd(list1):
    first_even = next((el for el in list1 if el%2==0),-1)
    first_odd = next((el for el in list1 if el%2!=0),-1)
    return (first_even/first_odd)","def div_even_odd(list1):
    first_even = next((el for el in list1 if el%2==0),-1)
    first_odd = next((el for el in list1 if el%2!=0),-1)
    return (first_even/first_odd)",Syntax Error,OOP
"Given a set of data, develop a Python program to classify the data into two categories: low and high.","[8, 5, 9, 1, 3, 10]","# Define the threshold
threshold = 5

def classify(data):
  result = []
  for item in data:
    if item <= threshold:
      result.append('low')
    else:
      result.append('high')
  return result

print(classify([8, 5, 9, 1, 3, 10]))
# Output: ['high', 'low', 'high', 'low', 'low', 'high']","# Define the threshold
threshold = 5

def classify(data):
  result = []
  for item in data:
    if item <= threshold:
      result.append('low')
 ",Incomplete Answer,File I/O
Create a string reverse function in Python.,,"def string_reverse(string):
  return string[::-1]

print(string_reverse(""Hello world!""))","def string_reverse(string):
  return string[::-1]

print(string_reverse(""Hello world!""))",correct,Recursion
Create a scalable program in Python using functions to add two numbers.,"7, 9","def add(x, y): 
    return x + y
 
# Driver code 
num1 = 7
num2 = 9
print(""Sum of {0} and {1} is {2}"" 
        .format(num1, num2, add(num1, num2)))","def add(x, y): 
    return x + y
 
# Driver code 
num1 = 7
num2 = 9
print(""Sum of {0} and {1} is {2}"" 
        .format(num1, num2, add(num1, num2)))",correct,Recursion
Write a Python program that takes a list of integers and returns a list of their squares.,"[1, 2, 3, 4]","def square_list(l):
 return [i**2 for i in l]

print(square_list([1, 2, 3, 4]))
# Output: [1, 4, 9, 16]","def square_list(l):
 return [i**2 for i in l]

print(square_list([1, 2, 3, 4]))
# Output: [1, 4, 9, 16]",correct,OOP
Write a Python script for creating a type-safe data model based on a given JSON object.,"{""name"": ""Bob"", ""age"": 42, ""likes"": [""Sports"", ""Coding""]}","class DataModel:
 def __init__(self, name: str, age: int, likes: List[str]):
  self.name = name
  self.age = age
  self.likes = likes

data = DataModel(name=""Bob"", age=42, likes=[""Sports"", ""Coding""])","class DataModel:
 def __init__(self, name: str, age: int, likes: List[str]):
  self.name = name
  self.age = age
  self.likes = likes

data = DataModel(name=""Bob"", age=42, likes=[""Sports"", ""Coding""])",Syntax Error,Loops
Write a Python program to get a slice of elements from a list.,"mylist = [1,2,3,4,5,6]","def get_slice(mylist, start, end):
    return mylist[start:end]

result = get_slice([1,2,3,4,5,6], 2, 5)
print(result)","def get_slice(mylist, start, end):
    return mylist[start:",Incomplete Answer,File I/O
Write a Python program to create an array containing 10 random numbers from 1 to 10 and sort them in ascending order.,,"import numpy as np

# Create an array of 10 random numbers between 1 to 10
arr = np.random.randint(low=1, high=11, size=10)

# Sort the array in ascending order
arr.sort()

print(arr)","import numpy as np

# Create an array of 10 random numbers between 1 to 10
arr = np.random.",Incomplete Answer,File I/O
Write a python function to find the length of the longest word.,,"def len_log(list1):
    max=len(list1[0])
    for i in list1:
        if len(i)>max:
            max=len(i)
    return max","def len_log(list1):
    max=len(list1[0])
    for i in list1:
        if len(i)>max:
            max=len(i)
    return max",Syntax Error,String Manipulation
Generate a Python program to divide two numbers and produce the result in decimal form.,,"def divide(a,b):
 return round(a/b, 2)","def divide(a,b):
 r",Incomplete Answer,String Manipulation
Write a python function to check whether all the bits are unset in the given range or not.,,"def all_Bits_Set_In_The_Given_Range(n,l,r):  
    num = (((1 << r) - 1) ^ ((1 << (l - 1)) - 1)) 
    new_num = n & num
    if (new_num == 0): 
        return True
    return False","def all_Bits_Set_In_The_Given_Range(n,l,r:  
    num = (((1 << r - 1 ^ ((1 << (l - 1 - 1 
    new_num = n & num
    if (new_num == 0: 
        return True
    return False",Syntax Error,Loops
"Write a function in Python that takes a list of numbers as an input, and returns the largest of them.","[1, 2, 3, 4, 5]","def largest(list):
 largest = 0
 for number in list:
 if number > largest:
 largest = number
 return largest

print(largest([1, 2, 3, 4, 5]))
# Outputs 5","def largest(list):
 largest = 0
 for number in list:
 if number > largest:
 largest = number
 return largest

print(largest([1, 2, 3, 4, 5]))
# Outputs 5",correct,OOP
Write a short python program to sort a list of words in lowercase alphabetical order,,"def sort_words(word_list):
  word_list.sort(key = lambda x : x.lower())
  return word_list","def sort_words(word_list):
  word_list.sort(key = lambda x : x.lower())
  return word_list",Syntax Error,File I/O
Create a class in Python to calculate the area and perimeter of a rectangle.,,"class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width

    def area(self):
        return self.length * self.width

    def perimeter(self):
        return 2 * (self.length + self.width)","class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width

    def area(self):
        return self.length * self.width

    def perimeter(self):
        return 2 * (self.length + self.width)",correct,File I/O
"Write a python program, taking a string input from the user, to reverse all the words in it.",,"user_input = input('Please enter a string: ')
 
words = user_input.split(' ')
 
reverse_words = [word[::-1] for word in words]
 
print(' '.join(reverse_words))","user_input = input('Please enter a string: ')
 
words = user_input.split(' ')
 
reverse_words = [word[::-1] for word in words]
 
print(name, ' '.join(reverse_words))",Syntax Error,Loops
Write a python function to check whether all the bits are within a given range or not.,,"def all_Bits_Set_In_The_Given_Range(n,l,r): 
    num = ((1 << r) - 1) ^ ((1 << (l - 1)) - 1) 
    new_num = n & num 
    if (num == new_num): 
        return True
    return False","def all_Bits_Set_In_The_Given_Range(n,l,r): 
    num = ((1 << r) - 1) ^ ((1 << (l - 1)) - 1",Incomplete Answer,File I/O
Create a data analysis solution using Python and Pandas.,"The CSV file has three columns:
Country, Population, and Area","import pandas as pd

# Read in the CSV file
df = pd.read_csv(""data.csv"")

# Calculate population density
df['Density'] = df['Population'] / df['Area']

# Print the density of the first 5 countries
print(df.head()['Density'])","import pandas as pd

# Read in the CSV file
df = pd.read_csv(""data.csv"")

# Calculate population density
df['Density'] = df['Population'] / df['Area']

# Print the density of the first 5 countries
print(df.head()['Density'])",Syntax Error,Recursion
"Create an algorithm in Python to calculate the tax payable, given yearly income and tax rates.","Yearly income: 70000
Tax rates: 0.2","def calculatetax(yearly_income, rate):
    tax = yearly_income * rate
    return tax

income = 70000
rate = 0.2
tax_payable = calculatetax(income, rate)

print(""Tax payable: "" + str(tax_payable))","def calculatetax(yearly_income, rate):
    tax = yearly_income * rate
    return tax

income = 70",Incomplete Answer,Recursion
Create a dictionary in Python with key-value pairs,"Key: ""FirstName""
value: ""John""","my_dict = {
    ""FirstName"": ""John""
}","my_dict = {
    ""F",Incomplete Answer,String Manipulation
Develop an algorithm in Python that takes an array of integers and finds two numbers whose sum is the given target.,"The array : [1, 3, 5, 7, 9]
The target : 12","def two_sum(arr, target):
 for num1 in arr:
 for num2 in arr:
 if num1 + num2 == target:
 return (num1, num2)

result = two_sum([1, 3, 5, 7, 9], 12)
print(result)
# Output -> (5, 7)","def two_sum(arr, target):
 for num1 in arr:
 for num2 in arr:
 if num1 + num2 == target:
 return (num1, num2)

result = two_sum([1, 3, 5, 7, 9], 12)
print(result)
# Output -> (5, 7)",correct,OOP
Create a list in Python from a given list of numbers.,"[1, 2, 4, 8, 16]","myList = [1, 2, 4, 8, 16]","myList = [1, 2, 4, 8, 16]",correct,Recursion
Create a Python function to classify a given string as either a palindrome or not.,"string=""kayak""","def is_palindrome(string):
    string_temp = string.lower()
    reverse_string = string_temp[::-1]
    if string_temp == reverse_string:
        print(""yes, this is a palindrome"")
    else:
        print(""no, this is not a palindrome"")

is_palindrome(string)","def is_palindrome(string):
    string_temp = string.lower()
    reverse_string = string_temp[::-1]
    if string_temp == reverse_",Incomplete Answer,String Manipulation
Write a Python program that sorts a list of integers in ascending order without using the built-in sort() method.,"[4, 5, 13, 2, 9, 7]","def selection_sort(arr):
 n = len(arr)
 for i in range(n):
 min_idx = i
 for j in range(i+1, n):
 if arr[min_idx] > arr[j]:
 min_idx = j
 arr[i], arr[min_idx] = arr[min_idx], arr[i]

arr = [4, 5, 13, 2, 9, 7]
selection_sort(arr)
print(arr)
# Output: [2, 4, 5, 7, 9, 13]","def selection_sort(arr):
 n = len(arr)
 for i in range(n):
 min_idx = i
 for j in range(i+1, n):
 if arr[min_idx] > arr[j]:
 min_idx =",Incomplete Answer,Recursion
"Write a Python function that takes a string as input and returns true if the string starts with the letter ""a"".",String: awesome,"def starts_with_a(string):
    if string[0] == 'a':
        return True
    else:
        return False

result = starts_with_a('awesome')
print(result)","def starts_with_a(string):
    if string[0] == 'a':
        return True
   ",Incomplete Answer,String Manipulation
Please provide Python code to print out all the prime numbers in a list of numbers.,"list_of_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 11]","def is_prime(num):
  for i in range(2, num):
    if num % i == 0:
      return False
  return True

list_of_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 11] 
for i in list_of_numbers:
  if is_prime(i):
    print(i)","def is_prime(num):
  for i in range(2, num):
    if num % i == 0:
      return False
  return True

li",Incomplete Answer,String Manipulation
Optimize the following Python function to merge two lists.,"a = [1,3,5]
b = [2,4,6]","def merge_lists(a, b):
  merged_list = []
  a_pos = 0
  b_pos = 0
  
  while a_pos < len(a) and b_pos < len(b):
    if a[a_pos] < b[b_pos]:
      merged_list.append(a[a_pos])
      a_pos += 1
    else:
      merged_list.append(b[b_pos])
      b_pos += 1

  return merged_list + a[a_pos:] + b[b_pos:]

a = [1,3,5]
b = [2,4,6]
print(merge_lists(a,b))","def merge_lists(a, b):
  merged_list = []
  a_pos = 0
  b_pos = 0
  
  while a_pos < len(a) and b_pos < len(b):
    if a[a_pos] < b[b_pos]:
      merged_list.append(a[a_pos])",Incomplete Answer,String Manipulation
Can you create a Python program to return true if a given string is a valid IP address and false otherwise?,,"import re
def is_valid_ip(ip):
    regex_pattern = r""^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$""
    if re.match(regex_pattern, ip):
        return True
    else:
        return False","import re
def is_valid_ip(ip):
    regex_pattern = r""^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$""
    if re.match(regex_pattern, ip):
        return True
    else:
        return False",Syntax Error,File I/O
Write a python program to search through a list of integers and find the smallest number.,"int_list = [25, 64, 11, 43, 7]","def find_smallest(int_list):
    # set the minimum value to the first item in the list initially
    min_val = int_list[0]
    # loop over the list and compare each item to the minimum value
    for num in int_list:
        if num < min_val:
            min_val = num
    # return the minimum value
    return min_val","def find_smallest(int_list:
    # set the minimum value to the first item in the list initially
    min_val = int_list[0]
    # loop over the list and compare each item to the minimum value
    for num in int_list:
        if num < min_val:
            min_val = num
    # return the minimum value
    return min_val",Syntax Error,String Manipulation
"Write a Python program to edit this list of lists and remove any empty lists from the beginning, middle and end of the list.","[[], [2, 3], [], [4, 5], [], [6]]","def remove_empty_lists(lst):
  new_lst = []
  for li in lst:
    if li:
      new_lst.append(li)
  return new_lst

# call the function  
modified_list = remove_empty_lists([[], [2, 3], [], [4, 5], [], [6]])

print(modified_list)  
# Output: [[2, 3], [4, 5], [6]]","def remove_empty_lists(lst):
  new_lst = []
  for li in lst:
if li:
  new_lst.append(li)
  return new_lst

# call the function  
modified_list = remove_empty_lists([[], [2, 3], [], [4, 5], [], [6]])

print(modified_list)  
# Output: [[2, 3], [4, 5], [6]]",Syntax Error,Loops
Write Python code to normalize the values of a list of numbers by subtracting each number from the maximum value in the list and dividing it by the maximum value.,"[7, 8, 10],","def normalize(lst): 
    max_num = max(lst)
    normalized_lst = [(num-max_num)/max_num for num in lst]
    return normalized_lst

lst = [7,8,10]
normalized_values = normalize(lst)
print(normalized_values)","def normalize(lst): 
    max_num = max(lst)
    normalized_lst = [(num-max_num)/max_num for num in lst]
    return normalized_lst

lst = [7,8,10]
normalized_values = normalize(lst)
print(normalized_values)",correct,Recursion
Write a Python program that takes an integer as input and check if the number is prime or not.,45,"def is_prime(n):
    if n < 2: 
        return False

    for i in range(2, int(n**0.5) + 1):  
        if n % i == 0: 
            return False

    return True","def is_prime(n):
    if n < 2: 
        return False

    for i in range(2, int(n**0.5) + 1):  
        if n % i == 0: 
            return False

    return True",Syntax Error,Loops
Write a python program that prints a greeting for each name in the given list,"names = ['John', 'Mary', 'James']","for name in names:
    print('Hello ' + name + '!')","for name in names:
    pr",Incomplete Answer,String Manipulation
Build a python program to convert any currency to a different currency given its exchange rate,"Input Currency = USD
Output Currency = EUR
Exchange Rate = 0.83","def currency_converter(input_currency, output_currency, exchange_rate):
amount = float(input('Enter the amount to convert: '))
total_amount = amount * exchange_rate

print('{} {} = {} {}'.format(amount, input_currency, total_amount, output_currency))","def currency_converter(input_currency, output_currency, exchange_rate):
amount = float(input('Enter the amount to convert: ')",Incomplete Answer,Loops
Generate command line commands for running a basic GridSearch model to improve an existing machine learning classifier.,,"from sklearn.model_selection import GridSearchCV

parameters = {'C': [1, 5, 10, 100], 'gamma': [0.0001, 0.001, 0.01, 0.1]}
clf = GridSearchCV(svm.SVC(), parameters)

# Run grid search
python your_program.py --estimator  clf --parameters $parameters","from sklearn.model_selection import GridSearchCV

parameters = {'C': [1, 5, 10, 100], 'gamma': [0.0001, 0.001, 0.01, 0.1]}
clf = GridSearchCV(svm.SVC(), parameters)

# Run grid search
python your_program.py --estimator  clf --parameters $parameters",Syntax Error,File I/O
Write a Python program which prints out the Fibonacci series up to the N-th term.,15,"def print_fibonacci_series(n): 
    a = 0
    b = 1
    c = 0

    while c < n:
        print(a,end="" "")
        c = c+1
        temp = a+b
        a = b 
        b = temp 
		
print_fibonacci_series(15)","def print_fibonacci_series(n) 
    a = 0
    b = 1
    c = 0

    while c < n
        print(a,end="" "")
        c = c+1
        temp = a+b
        a = b 
        b = temp 
		
print_fibonacci_series(15)",Syntax Error,String Manipulation
Write a Python functions to generate a random number between 1 and 9,,"import random

def random_number():
 return random.randint(1,9)","import random

def random_numbe",Incomplete Answer,Recursion
Generate a function to find the GCD of two numbers in Python.,,"def gcd(a,b): 
    if(b==0): 
        return a 
    else: 
        return gcd(b,a%b)","def gcd(a,b): 
    if(b==0): 
        return a 
    else: 
        return gcd(b,a%b)",correct,Loops
Generate a function in Python using the input argument side-effect free function to calculate the square root of a number.,25,"def get_sqrt(x):
    return x**0.5","def get_sqrt(x):
    return x**0.5",correct,Loops
Write a Python program to combine two lists of dictionaries into one list.,"list1: [{'a','b', 'c'}, {'d' : 'e', 'f': 'g'}]
list2: [{'h' : 'i', 'j': 'k'}, {'l': 'm'}]","combined = [{'a': 'b', 'c'}, {'d': 'e', 'f': 'g'}, {'h': 'i', 'j' : 'k'}, {'l': 'm'}]","combined = [{'a': 'b', 'c'}, {'d': 'e', 'f': 'g'}, {'h': 'i', 'j' : 'k'}, {'l': 'm'}]",Syntax Error,File I/O
Create a sorting algorithm in Python for evaluating and sorting a list of tuples with two elements.,"Input List: [('a', 3), ('b', 2), ('c', 1)]","def sort_list_tuples(tuples):
  # sort by the second element in each tuple
  return sorted(tuples, key=lambda x: x[1])

# test code
tuples = [('a', 3), ('b', 2), ('c', 1)] 
print(sort_list_tuples(tuples))","def sort_list_tuples(tuples):
  # sort by the second element in each tuple
  return sorted(tuples, key=lambda x: x[1])

# test code
tuples = [('a', 3), ('b', 2), ('c', 1)] 
print(sort_list_tuples(tuples))",correct,String Manipulation
Write a function in Python that takes a list of names as the parameter and returns the longest name in the list.,"Names = ['John', 'Michael', 'Scott', 'Steve']","def longest_name(names):
 longest_name = ''

 for name in names:
  if len(name) > len(longest_name):
   longest_name = name
 
 return longest_name

Names = ['John', 'Michael', 'Scott', 'Steve']

longest = longest_name(Names)

print(longest) # Michael","def longest_name(names):
 longest_name = ''

 for name in names:
  if len(name) > len(longest_name):
   longest_name = name
 ",Incomplete Answer,Loops
Create a python code for linear search of an item in a list.,,"def linear_search(arr, x): 
  
    for i in range(len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1","def linear_search(arr, x): 
  
    for i in range(len(arr)): 
  ",Incomplete Answer,Recursion
Combine two Python dictionaries and return a new dictionary,"dict1: {'a':1, 'b':2}
dict2: {'b':3, 'c':4}","def combine_dict(dict1, dict2):
    combined_dict = {}
    for key, value in dict1.items():
        combined_dict[key] = value
    for key, value in dict2.items():
        combined_dict[key] = value
    return combined_dict

dict1 = {'a':1, 'b':2}
dict2 = {'b':3, 'c':4}
combined_dict = combine_dict(dict1, dict2)
print(combined_dict)","def combine_dict(dict1, dict2):
    combined_dict = {}
    for key, value in dict1.items():
        combined_dict[key] = value
    for key, value in dict2.items():
        combined_dict[key] = value
    return combined_dict

dict1 = {'a':1, 'b':2}
dict2 = {'b':3, 'c':4}
combined_dict = combine_dict(dict1, dict2)
print(name, combined_dict)",Syntax Error,Recursion
Create a Python program that asks the user for a number and displays all the prime numbers up to that number.,,"number = int(input(""Please enter a number: ""))

for n in range(2, number + 1):
    is_prime = True
    for i in range(2, n):
        if n % i == 0:
            is_prime = False
            break
    if is_prime:
        print(n)","number = int(input(""Please enter a number: ""))

for n in range(2, number + 1):
    is_prime = True
    for i in range(2, n):
        if n % i == 0:
            is_prime = False
            break
    if is_prime:
        print(n)",correct,Loops
Create a Python program to sort the list of colors in alphabetical order.,"[""red"", ""green"", ""blue""]","colors = [""red"", ""green"", ""blue""]

#sorting in ascending order
desc_colors = sorted(colors)

print(""Colors in alphabetical order:"", desc_colors)","colors = [""red"", ""green"", ""blue""]

#sorting in ascending order
desc_colo",Incomplete Answer,Loops
Design a dynamic Python list to hold a series of IP addresses.,,ip_list = [],ip_lis,Incomplete Answer,Recursion
Create a python program that prints out the powers of two.,,"# Print out the powers of two from 2^0 to 2^10
for i in range(11):
  print(2**i)",# Print out the powers of two from 2^0 t,Incomplete Answer,File I/O
Predict the output of the following Python program.,"my_list = [1,2,3,4,5]
x = 0

for i in my_list:
    x += i

print(x)",15,15,Incomplete Answer,String Manipulation
Write a Python program to find the missing number in a list of integers.,"[1,2,4,5,6,7,8]","def find_missing_num(lst):
 expected_num = sum(range(lst[0],lst[-1]+1))
 actual_sum = sum(lst)
 return expected_num - actual_sum

lst = [1,2,4,5,6,7,8]
missing_num = find_missing_num(lst)
print(""The missing number is"", missing_num)","def find_missing_num(lst):
 expected_num = sum(range(lst[0],lst[-1]+1))
 actual_sum = sum(lst)
 return expected_num - actual_sum

lst = [1,2,4,5,6,7,8]
missing_num = find_missing_num(lst)
print(""The missing number is"", missing_num)",correct,String Manipulation
Create a python program to print all two dimensional subarrays in a given two-dimensional array,"two_dimensional_array = [[1, 2, 3],
                        [4, 5, 6],
                        [7, 8, 9]]","for i in range(len(two_dimensional_array)): 
    for j in range(i+1): 
        for k in range(len(two_dimensional_array[i])): 
            print(two_dimensional_array[j][k], end="" "") 
        print()","for i in range(len(two_dimensional_array)) 
    for j in range(i+1) 
        for k in range(len(two_dimensional_array[i])) 
            print(two_dimensional_array[j][k], end="" "") 
        print()",Syntax Error,Recursion
Suggest code to print the following pattern in Python.,,"for row in range(6): 
    for col in range(7): 
        if (row == 0 and col % 3 != 0) or (row == 1 and col % 3 == 0) or (row - col == 2) or (row + col == 8): 
            print(""*"", end="""") 
        else: 
            print("" "", end="""") 
    print()","for row in range(6): 
    for col in range(7): 
        if (row == 0 and col % 3 != 0) or (row == 1 and col % 3 == 0) or (row",Incomplete Answer,Loops
Write a function in Python that takes a list of objects and returns a list of those objects sorted by one of their attributes.,"[{""name"": ""Alice"", ""age"": 20}, {""name"": ""Bob"", ""age"": 21}]","def sort_by_attr(objects, attr):
 return sorted(objects, key=lambda item: item[attr])
 
sort_by_attr([{""name"": ""Alice"", ""age"": 20}, {""name"": ""Bob"", ""age"": 21}], ""age"")","def sort_by_attr(objects, attr):
 return sorted(objects, key=lambda item: item[attr",Incomplete Answer,File I/O
Develop a RESTful web service in Python which returns the data provided in the given URL.,URL: https://example.com/dataset.json,"import flask
from flask import Flask
import requests

app = Flask(__name__)

@app.route('/data', methods=[""GET""])
def data():
    r = requests.get('https://example.com/dataset.json')
    return flask.jsonify(r.json())

if __name__ == '__main__':
    app.run()","import flask
from flask import Flask
import requests

app = Flask(__name__)

@app.route('/data', methods=[""GET""])
def data():
    r = requests.get('https://example.com/dataset.json')
    return flask.jsonify(r.json())

if __name__ == '__main__':
    app.run()",correct,Loops
Construct a Python program to round the number up to the nearest integer,num = 5.6,"def round_up(num): 
    if num == int(num): 
        return int(num) 
    return int(num + 1) 

num = 5.6
print(round_up(num))","def round_up(num): 
    if num == int(num): 
        return int(num) 
    return int(num + 1) 

num = 5.6
print(round_up(num))",correct,Recursion
Generate code to solve a Fibonacci sequence using recursion in Python.,,"def fibonacci(n):
   if n <= 1:
       return n
   else:
       return(fibonacci(n-1) + fibonacci(n-2))

# Print the first 10 numbers in the sequence
for i in range(10):
   print(fibonacci(i))","def fibonacci(n):
   if n <= 1:
       return n
   else:
       return(fibonacci(n-1) + fibonacc",Incomplete Answer,File I/O
Create a Python program to detect if a given string has any palindrome substrings.,,"def is_palindrome(s):
    for i in range(len(s)):
        for j in range(len(s)-i+1):
            substring = s[i:j]
            if substring == substring[::-1]:
                return True
    return False","def is_palindrome(s):
    for i in range(len(s)):
        for j in range(len(s)-i+1):
            subst",Incomplete Answer,OOP
Improve this Python code so that it prints out an appropriate error when the index is out of bounds.,"def search(list, index):
  return list[index]","def search(lst, index): 
    if index < 0 or index >= len(lst):  
        print(""Index out of bounds"") 
        return None
    else:  
        return lst[index]","def search(lst, index): 
    if index < 0 or index >= len(lst):  
        print(""Index out of bounds"") 
        return None
    else:  
        return lst[index]",correct,Loops
Generate Python code for printing the average of a list of numbers.,"[2, 5, 6, 7]","list = [2, 5, 6, 7]

sum = 0

for num in list:
 sum += num
 
average = sum / len(list)
print(""Average:"", average)","list = [2, 5, 6, 7]

sum = 0

for num in list:
 sum += num
 
average = sum / len(list)
print(name, ""Average:"", average)",Syntax Error,File I/O
Create a function in Python to count the number of occurrences of a particular letter in a string.,,"def CountLetterOccurrences(str, letter): 
    return str.count(letter)","def CountLetterOccurrences(str, let",Incomplete Answer,OOP
Write a Python Script to find all pairs of numbers in a list that have a sum equal to the target value.,"list = [2, 4, 6, 8], target = 10","def findPair(lst, target): 
    for i in range(0, len(lst)): 
        for j in range(i + 1, len(lst)): 
            if lst[i] + lst[j] == target: 
               return print(lst[i],"","", lst[j]) 
    
list = [2, 4, 6, 8] 
target = 10
findPair(list, target)","def findPair(lst, target): 
    for i in range(0, len(lst)): 
        for j in range(i + 1, len(lst)): 
            if lst[i] + ",Incomplete Answer,Loops
Create a Python function to generate a URL endpoint mapping based on a given URL string.,"URL string: ""/posts/<title>/<action>""","from flask import Flask

app = Flask(__name__)

@app.route(""/posts/<title>/<action>"")
def process_url(title: str, action: str):
	print(f'URL endpoint mapping for title: {title} and action: {action}')

if __name__ == '__main__':
	app.run()","from flask import Flask

app = Flask(__name__)

@app.route(""/posts/<title>/<action>"")
def process_url(title: str, actio",Incomplete Answer,OOP
Create a method in Python which takes a string and an integer as arguments and returns an integer representing the number of times that character appears.,"s = ""hello world"", c = 'l'","def findCount(s, c):
    count = 0
    for char in s:
        if char == c:
            count += 1
    return count 

print(findCount(s, c))","def findCount(s, c):
    count = 0
    for char in s:
        if char ",Incomplete Answer,Loops
Write a Python program to check if a given number is divisible by 3 and 5 or not.,10,"def check_divisible_3and5(num):
    if (num % 3 == 0 and num % 5 == 0):
        return True
    else:
        return False

# test given number
num = 10
if check_divisible_3and5(num):
    print(""%d is divisible by 3 and 5"" %num)
else:
    print(""%d is not divisible by 3 and 5"" %num)","def check_divisible_3and5(num):
    if (num % 3 == 0 and num % 5 == 0):
        return True
    else:
        return False

# test given number
num = 10
if check_divisible_3and5(num):
    pritn(""%d is divisible by 3 and 5"" %num)
else:
    pritn(""%d is not divisible by 3 and 5"" %num)",Syntax Error,OOP
Write a Python script to find the area of a triangle when three sides are given.,"a = 3
b = 4
c = 5","# calculate the semi-perimeter
s = ( a + b + c ) / 2
  
# calculate the area
area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
  
print('The area of the triangle is %0.2f' %area)
// Output: The area of the triangle is 6.00","# calculate the semi-perimeter
s = ( a + b + c ) / 2
  
# calculate the area
area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
  
print('The area of the triangle is %0.2f' %area)
// Output: The area of the triangle is 6.00",correct,Recursion
Write a Python function to find the number of pairs of integers in an array that sum up to a given number,,"def count_pairs(numbers, target_sum):
 count = 0
 for i in range(len(numbers)):
 for j in range(i + 1, len(numbers)):
 if numbers[i] + numbers[j] == target_sum:
 count += 1
 return count","def count_pairs(numbers, target_sum):
 count = 0
 for i in range(len(numbers)):
 for j in range(i + 1, len(numbers)):
 if numbers[i] + numbers[j] == target_sum:
 count += 1
 return count",Syntax Error,Recursion
Create a Python script to check a given URL and see if it is active or not.,,"import requests 
  
def check_url(url): 
    try:
        response = requests.get(url)
        if response.status_code == 200:
            return True
        else:
            return False
    except:
        return False","import requests 
  
def check_url(url): 
    try:
        response = requests.get(url)
        if response.status_code == 200:
            return True
        else:
            return False
    except:
        return False",Syntax Error,Loops
Create a Python function that takes inputs in the form of two words and returns the start index of the second word in the first word.,"Word1 = ""Mountain"" ,Word2 = ""tain""","def index_of_word(w1, w2):
    pos = 0
    for i in w1:
        if w1.find(w2,pos) > -1:
            return w1.find(w2,pos)
        pos +=1
    return -1","def index_of_word(w1, w2):
    pos = 0
    for i in w1:
        if w1.find(w",Incomplete Answer,Recursion
Write a Python program to shuffle the items of a list.,,"import random

lis = [1, 2, 3, 4, 5]
random.shuffle(lis)
print(lis)","import random

lis = [1, 2, 3, 4, 5]
random.shuffle(lis)
print(lis)",correct,File I/O
Write a Python program to filter a list of words by their length.,"word_list = [""apple"", ""banana"", ""pear"", ""grape"", ""mango""]","def filter_by_length(word_list, length):
    filtered_list = []
    for word in word_list:
        if len(word) == length:
            filtered_list.append(word)
    return filtered_list

result = filter_by_length(word_list, 5)
print(result)","def filter_by_length(word_list, length):
    filtered_list = []
    for word in word_list:
        if len(word) == length:
            filtered_list.append(word)
    return filtered_list

result = filter_by_length(word_list, 5)
print(result)",correct,Recursion
Write a Python code to normalize a list of numbers.,"list_numbers = [1, 4, 4, 5, 7]","""""""
Normalize a list of numbers using Python
""""""

def normalize_list(list_numbers):
  max_val = max(list_numbers)
  normalized = [n/max_val for n in list_numbers]
  return normalized

if __name__ == '__main__':
  list_numbers = [1, 4, 4, 5, 7]
  print(normalize_list(list_numbers))","""""""
Normalize a list of numbers using Python
""""""

def normalize_list(list_numbers):
  max_val = max(list_numbers)
  normalized = [n/max_val for n in list_numbers]
  return normalized

if __name__ == '__main__':
  list_numbers = [1, 4, 4, 5, 7]
  pritn(normalize_list(list_numbers))",Syntax Error,Loops
"Write a python function to compare two strings and return 1 if the strings are anagrams, 0 if not.","""bob"", ""bob""","def is_anagram(string1, string2):
    string1 = sorted(string1.replace("" "", """").lower())
    string2 = sorted(string2.replace("" "", """").lower())
    
    if string1 == string2:
        return 1
    else:
        return 0","def is_anagram(string1, string2):
    string1 = sorted(string1.replace("" "", """").lower())
    string2 = sorted",Incomplete Answer,Loops
Create a Python program that randomly shuffles the values in an array,"my_arr = [1,2,3,4,5]","import random

def shuffle(my_arr):
    shuffled_arr = my_arr[:]
    random.shuffle(shuffled_arr)
    return shuffled_arr

shuffled_arr = shuffle(my_arr)
print(shuffled_arr)","import random

def shuffle(my_arr):
    shuffled_arr = my_arr[:]
    random.shuffle(shuffled_arr)
    return shuffled_arr

shuffled_arr = shuffle(my_arr)
print(name, shuffled_arr)",Syntax Error,Loops
Implement a program in Python that takes a string as an input and prints out the length of the longest word in the string.,"string = ""The quick brown fox jumps over the lazy dog""","def longest_word(string):
    words = string.split("" "")
    max_length = 0
    longest_word = """"
    for word in words:
        if(len(word) > max_length):
            max_length = len(word)
            longest_word = word
    print(""Longest word is {} with length {}"".format(longest_word,max_length))","def longest_word(string):
    words = string.split("" "")
    max_length = 0
    longest_word = """"
    for word in words:
        if(len(word) > max_length):
            max_length = len(word)
            longest_word = word
    print(""Longest word is {} with length {}"".format(longest_word,max_length))",correct,Loops
Generate a Python function to get the prime factors of a number,,"def prime_factors(n):
    prime_factors = []
    while n % 2 == 0: 
        prime_factors.append(2)
        n = n / 2
    for i in range(3, int(math.sqrt(n)) + 1, 2): 
        while n % i == 0: 
            prime_factors.append(int(i))
            n = n / i
    if n > 2: 
        prime_factors.append(int(n))
    return prime_factors","def prime_factors(n):
    prime_factors = []
    while n % 2 == 0: 
        prime_factors.append(2)
        n = n / 2
    for i in range(3, int(math.sqrt(n)) + 1, 2): ",Incomplete Answer,File I/O
Create a line chart representing the given data in Python.,"x = [1, 2, 3, 4, 5]
y = [2, 4, 6, 8, 10]","import matplotlib.pyplot as plt 

x = [1, 2, 3, 4, 5]
y = [2, 4, 6, 8, 10]

plt.plot(x, y)
plt.title('Line Chart') 
plt.xlabel('X-Axis') 
plt.ylabel('Y-Axis') 
plt.show()","import matplotlib.pyplot as plt 

x = [1, 2, 3, 4, 5]
y = [2, 4, 6, 8, 10]

plt.plot(x, y)
plt.title('Line Chart') 
plt.xlabel('X-Axis') 
plt.ylabel('Y-Axis') 
plt.show()",correct,Loops
Create an algorithm in Python to remove duplicates from an array of integers while preserving the order of the elements.,"[1, 8, 10, 4, 1, 8, 8]","def remove_duplicates(arr):
  seen = set()
  result = []

  for item in arr:
    if item not in seen:
      seen.add(item)
      result.append(item)

  return result

arr = [1, 8, 10, 4, 1, 8, 8]

print(remove_duplicates(arr)) # Output: [1, 8, 10, 4]","def remove_duplicates(arr):
  seen = set()
  result = []

  for item in arr:
if item not in seen:
  seen.add(item)
  result.append(item)

  return result

arr = [1, 8, 10, 4, 1, 8, 8]

print(remove_duplicates(arr)) # Output: [1, 8, 10, 4]",Syntax Error,OOP
Create a Python program that uses a given list of words to construct a poem.,"""Sleep"", ""Dream"", ""Reality"", ""Beauty"", ""Life""","def create_poem(words):
    poem = """"
    for word in words:
        poem += word + ""\n""

    poem += ""\nSleep, dream and beauty\nReality shatters in life\nWhere dreams forevermore dwell""
    return poem

print(create_poem([""Sleep"", ""Dream"", ""Reality"", ""Beauty"", ""Life""]))","def create_poem(words):
    poem = """"
    for word in words:
        poem += word + ""\n""

    poem += ""\nSleep, dream and beauty\nReality shatters in life\nWhere dreams forevermore dwell""
    return poem

print(create_poem([""Sleep"", ""Dream"", ""Reality"", ""Beauty"", ""Life""]))",correct,Recursion
"Given a list of numbers, write a program in Python to select only the elements divisible by 5.","[23, 12, 64, 39, 52]","def divisible_five(nums):
    result = []
    for num in nums:
        if num % 5 == 0:
            result.append(num)
    return result","def divisible_five(nums):
    result = []
    for num in nums:
        if num % 5 == 0:
            result.append(num)
    return result",correct,Recursion
Generate Python code to add 1 to every element of an array.,"[5, 6, 8, 9, 10]","def add_one(arr): 
    for i in range(len(arr)): 
        arr[i] += 1 
    return arr","def add_one(arr): 
    for i in range(len(",Incomplete Answer,String Manipulation
Write a Python script for developing a simple calculator.,,"import operator

ops = {
 ""+"": operator.add,
 ""-"": operator.sub,
 ""*"": operator.mul,
 ""/"": operator.truediv
}

while True:
 print(""\nEnter 'q' to exit."")
 num1 = input(""\nEnter a number: "")
 if num1 == 'q':
 break
 op = input(""Enter an operator: "")
 num2 = input(""Enter another number: "")
 
 answer = ops[op](float(num1), float(num2))
 print(""The answer is:"", answer)","import operator

ops = {
 ""+"": operator.add,
 ""-"": operator.sub,
 ""*"": operator.mul,
 ""/"": operator.truediv
}

while True:
 print(""\nEnter 'q' to exit."")
 num1 = input(""\nEnter a number: "")
 if num1 == 'q':
 break
 op = input(""Enter an operator: "")
 num2 = input(""Enter another number: "")
 
 answer = ops[op](float(num1), float(num2))
 print(""The answer is:"", answer)",correct,File I/O
Create a Python program to group elements of a list based on their length.,"['cat', 'dog', 'apple']","def groupByLength(arr):
    result = {}
    for word in arr:
        if len(word) in result:
            result[len(word)].append(word)
        else:
            result[len(word)] = [word]
    return result

groupedByLength = groupByLength(['cat', 'dog', 'apple'])
print(groupedByLength)","def groupByLength(arr):
result = {}
for word in arr:
    if len(word) in result:
        result[len(word)].append(word)
    else:
        result[len(word)] = [word]
return result

groupedByLength = groupByLength(['cat', 'dog', 'apple'])
print(groupedByLength)",Syntax Error,String Manipulation
Create a Python function to find the maximum number in an array. The function should accept a single argument and return the maximum value in the array.,"array = [5, 8, 0, 1, 3, 9]","def find_maximum(arr):
  max_val = arr[0]
  for value in arr:
    if value > max_val:
      max_val = value
  return max_val

# Usage
max_num = find_maximum([5, 8, 0, 1, 3, 9])
print(max_num)
# prints 9","def find_maximum(arr):
  max_val = arr[0]
  for value in arr:
    if value > max_val:
      max_val =",Incomplete Answer,File I/O
Write a function to remove the nested record from the given tuple.,,"def remove_nested(test_tup):
  res = tuple()
  for count, ele in enumerate(test_tup):
    if not isinstance(ele, tuple):
      res = res + (ele, )
  return (res) ","def remove_nested(test_tup):
  res = tuple()
  for count, ele in enumerate(test_tup):
    if not isinstance(ele, tuple):
      res = res + (ele, )
  return (res) ",correct,OOP
Write a Python script to generate a random password of at least 8 characters.,,"import random 
import string

def gen_random_password():
  chars = string.ascii_letters + string.digits
  password = ''.join(random.choice(chars) for _ in range(8))
  return password

print(gen_random_password())","import random 
import string

def gen_random_password():
  chars = string.ascii_letters + string.digits
  ",Incomplete Answer,String Manipulation
Generate code to remove any duplicates from a list of integers in Python.,"[1, 1, 2, 3, 4, 4, 5]","def remove_duplicates(lst): 
    final_list = [] 
    for num in lst: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 
    
lst = [1, 1, 2, 3, 4, 4, 5] 
print(remove_duplicates(lst))","def remove_duplicates(lst): 
    final_list = [] 
    for num in lst: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 
    
lst = [1, 1, 2, 3, 4, 4, 5] 
print(remove_duplicates(lst))",correct,File I/O
Code a Python function to split a sentence into an array of words.,,"def splitSentence(sentence):
 words = sentence.split()
 return words

# Usage
sentence = ""Split a sentence into an array of words""
words = splitSentence(sentence)
print(words) # ['Split', 'a', 'sentence', 'into', 'an', 'array', 'of', 'words']","def splitSentence(sentence):
 words = sentence.split()
 return words

# Usage
sentence = ""Split a sentence into an array ",Incomplete Answer,Recursion
Create a loop in Python that prints each item of the following list with a message:,"my_list = ['A', 'B', 'C', 'D']","my_list = ['A', 'B', 'C', 'D']

for item in my_list:
    print(""The item is: {}"".format(item))","my_list = ['A', 'B', 'C', 'D']

for item in my_list
    print(""The item is {}"".format(item))",Syntax Error,OOP
"Generate a Python code snippet to convert a string to a list, where each word is an item in the list.","String: ""This is a test string.""","string = ""This is a test string""

list = string.split("" "")

print(list) # Output: ['This', 'is', 'a', 'test', 'string']","string = ""This is a test string""

list = string.split("" ""

print(list # Output: ['This', 'is', 'a', 'test', 'string']",Syntax Error,Loops
Create a Python program to fetch data from an HTTPS resource.,"url = ""https://example.com/data""","import requests

url = ""https://example.com/data""

# Send a GET request to the URL
r =  requests.get(url)

# Check the status of the request
if r.status_code == 200:
 data = r.json()
 # Process the fetched data
else:
 print('Error: status code {}'.format(r.status_code))","import requests

url = ""https//example.com/data""

# Send a GET request to the URL
r =  requests.get(url)

# Check the status of the request
if r.status_code == 200
 data = r.json()
 # Process the fetched data
else
 print('Error status code {}'.format(r.status_code))",Syntax Error,File I/O
Can you provide a Python program to generate a random integer within the range of 1 to 100?,,"import random

def random_int_between_1_and_100():
  return random.randint(1, 100)","import random

def random_int_between_1_and_100():
  return random.randint(1, 100)",correct,String Manipulation
Generate a Python script to find common elements in two lists.,"list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]","def find_common_elements(list1, list2):
    result = []
    for val in list1:
        if val in list2:
            result.append(val)
    return result

list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]

result = find_common_elements(list1, list2)
print(result)","def find_common_elements(list1, list2):
    result = []
    for val in list1:
        if val in list2:
            result.appe",Incomplete Answer,String Manipulation
Create a program in Python that takes a sentence as an input and prints out the sentence in reverse.,Hello world!,"def reverse_sentence(sentence): 
    words = sentence.split() 
    newWords = [word[::-1] for word in words] 
    newSentence = "" "".join(newWords) 
    return newSentence

print(reverse_sentence(""Hello world!""))","def reverse_sentence(sentence) 
    words = sentence.split() 
    newWords = [word[-1] for word in words] 
    newSentence = "" "".join(newWords) 
    return newSentence

print(reverse_sentence(""Hello world!""))",Syntax Error,OOP
Write a Python program to generate random passwords from a list of strings.,"strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]","import random

strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]
password = """"

for i in range(len(strings)):
 randomIndex = random.randint(0,len(strings) -1)
 password += strings[randomIndex]

print(""Generated Password:"", password)","import random

strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]
password = """"

for i in range(len(strings)):
 randomIndex = random.randint(0,len(strings) -1)
 password += strings[randomIndex]

print(""Generated Password:"", password)",correct,OOP
Classify the performance complexity of the following code snippet written in Python.,"def factorial(n):
   if n == 0:
       return 1
   else:
       return n * factorial(n-1)",The performance complexity of the code snippet is O(n).,The performance complexity of the code snippet is O(n).,Syntax Error,Loops
Can you create a Python script to print out the two smallest elements from an array of numbers?,"[45, 24, 2, 17, 78]","def smallest_two_elements(nums):
    min1 = min(nums)
    nums.remove(min1)
    min2 = min(nums)
    
    print(min1, min2)

smallest_two_elements([45, 24, 2, 17, 78])","def smallest_two_elements(nums):
    min1 = min(nums)
    nums.remove(min1)
    min",Incomplete Answer,Recursion
Write a Python program to generate a square matrix with random values from 0 to 9.,4 (Size of matrix),"import random

def matrix(size):
  matrix = [[0 for i in range(size)] for j in range(size)]
  for i in range(size):
    for j in range(size):
      matrix[i][j] = random.randint(0, 9)
  return matrix

result = matrix(4)
for row in result:
  print(row)","import random

def matrix(size):
  matrix = [[0 for i in range(size)] for j in range(size)]
  for i in range(size):
    for j in range(size):
      matrix[i][j] = random.randint(0, 9)
  return matrix

result = matrix(4)
for row in result:
  print(row)",correct,File I/O
Create a Python program to format a given amount of money with a given currency symbol.,"Money: 95.50
Currency Symbol: €","def format_money(amount, symbol):
    return f""{symbol}{amount:.2f}""

format_money(95.50, '€') # returns €95.50","def format_money(amount, symbol):
    return f""{symbol}",Incomplete Answer,Loops
"Design a data structure in Python to store a list of cars with associated properties like name, color, and price.",,"class CarData:
    def __init__(self):
        self.cars = {}

    def add_car(self, name, color, price):
        car = {
            ""name"": name,
            ""color"": color,
            ""price"": price
        }
        self.cars[name] = car

    def get_car(self, name):
        if name in self.cars:
            return self.cars[name]
        return None","class CarData:
    def __init__(self):
        self.cars = {}

    def add_car(self, name, color, price):
        car = {
            ""name"": name,
            ""color"": color,
            ""price"": price
        }
        self.cars[name] = car

    def get_car(self, name):
        if name in self.cars:
            return self.cars[name]
        return None",correct,File I/O
Debug the provided Python code to make it run without errors.,"num_list = [1, 2, 3, 4, 5]

for num in num_list
 print(""Square of"", num ""is"", num*num)","num_list = [1, 2, 3, 4, 5]

for num in num_list:
 print(""Square of"", num, ""is"", num*num)","num_list = [1, 2, 3, 4, 5]

for num in num_l",Incomplete Answer,String Manipulation
Edit the following Python program to fix the syntax error,"def fx(x):
if(x=0)
	x=x++;
	return x","def fx(x):
    if x == 0:
        x += 1
    return x","def fx(x):
if x == 0:
    x += 1
return x",Syntax Error,Recursion
Convert a Javascript function to Python.,"function add(a, b) {
  return a + b;
}","def add(a, b):
    return a + b","def add(a, b):
    return a + b",correct,Loops
Optimize a Python program to count occurrences of each letter in a given string.,"""This is a sample string""","from collections import Counter

def count_letters(string):
    return Counter(string)

print(count_letters(""This is a sample string""))","from collections import Counter

def count_letters(string):
    return Counter(string)

print(name, count_letters(""This is a sample string""))",Syntax Error,String Manipulation
Write a Python program to calculate the sum of all multiples of 3 and 5 up to a given number.,,"def sum_of_multiples_of_3_and_5(num):
    sum = 0 
    for i in range(num):
        if i % 3 == 0 or i % 5 == 0:
            sum += i
    return sum

result = sum_of_multiples_of_3_and_5(20)
print(result)","def sum_of_multiples_of_3_and_5(num:
    sum = 0 
    for i in range(num:
        if i % 3 == 0 or i % 5 == 0:
            sum += i
    return sum

result = sum_of_multiples_of_3_and_5(20
print(result",Syntax Error,File I/O
Build a generator in Python that returns a JSON string of the current time,,"def time_json_string():
    t = datetime.utcnow().isoformat()
    return json.dumps({""currentTime"": t })","def time_json_string():
    t = datetime.utcnow().isoformat()
    return json.dumps({""currentTime"": t })",Syntax Error,File I/O
Construct a Python function to calculate the sum of all elements of a given array.,"[3,2,1,6,5,7,4]","def array_sum(arr):
    s = 0
    for i in arr:
        s += i
    return s

print(array_sum([3,2,1,6,5,7,4]))","def array_sum(arr)
    s = 0
    for i in arr
        s += i
    return s

print(array_sum([3,2,1,6,5,7,4]))",Syntax Error,Loops
Write a python function to count the maximum number of equilateral triangles that can be formed within a given equilateral triangle.,,"def No_of_Triangle(N,K):
    if (N < K):
        return -1;
    else:
        Tri_up = 0;
        Tri_up = ((N - K + 1) *(N - K + 2)) // 2;
        Tri_down = 0;
        Tri_down = ((N - 2 * K + 1) *(N - 2 * K + 2)) // 2;
        return Tri_up + Tri_down;","def No_of_Triangle(N,K):
    if (N < K):
        return -1;
    else:
        Tri_up = 0;
        Tri_up = ((N - K + 1) *(N - K + 2)) // 2;
        Tri_down = 0;
        Tri_down = ((N - 2 * K + 1) *(N - 2 * K + 2)) // 2;
        return Tri_up + Tri_down;",correct,Loops
Develop an algorithm in Python to create a Fibonacci sequence up to the nth number.,n=10,"def fibonacci(n):
  if n<0:
    print(""Incorrect input"")
  elif n==1:
    return 0
  elif n==2:
    return 1
  else:
    return fibonacci(n-1)+fibonacci(n-2)
print(""Fibonacci series up to"",n,"":"")
for i in range(1,n+1):
  print(fibonacci(i))","def fibonacci(n):
  if n<0:
    print(""Incorrect input"")
  elif n==1:
    return 0
  elif n==2:
    return 1
  else:
   ",Incomplete Answer,String Manipulation
"Create a Python class that simulates a bank account. The class should have methods for depositing and withdrawing money, and for displaying the account balance.",,"class BankAccount:
 def __init__(self):
 self.balance = 0
 
 def deposit(self, amount):
 self.balance += amount
 
 def withdraw(self, amount):
 self.balance -= amount
 
 def show_balance(self):
 print(""Your balance is $%.2f"" % self.balance)","class BankAccount
 def __init__(self)
 self.balance = 0
 
 def deposit(self, amount)
 self.balance += amount
 
 def withdraw(self, amount)
 self.balance -= amount
 
 def show_balance(self)
 print(""Your balance is $%.2f"" % self.balance)",Syntax Error,String Manipulation
Write a python program to use an API and process the results.,,"import requests

url = 'https://api.example.com/xyz'

# Make a request to the API
resp = requests.get(url)

# Process the response
data = resp.json()

# Do stuff with the response
for item in data:
	print(item)","import requests

url = 'https://api.example.com/xyz'

# Make a request to the API
resp = requests.get(url)

# Process the response
data = resp.json()

# Do stuff with the response
for item in data:
	print(item)",Syntax Error,Loops
Implement a sorting algorithm in Python that sorts a given array of numbers in descending order.,"[2, 5, 7, 3, 1, 8]","def sort_descending(list):
    sorted_list = sorted(list, reverse=True)
    return sorted_list","def sort_descending(list):
    sorted_list = sorted(list, reverse=True)
    return sorted_list",correct,Loops
Can you provide a code snippet in Python that takes a list of strings as input and sorts them based on their length?,"[""Hello"",""World!"",""Good"",""Morning""]","words = [""Hello"",""World!"",""Good"",""Morning""]

words.sort(key=len)

print(words)","words = [""Hello"",""World!"",""Good"",""Morning""]

words.sort(key=len)

print(words)",Syntax Error,OOP
Construct a function in Python that will take a list as an argument and prompt the user to delete elements from that list.,"my_list = [1, 2, 3, 4, 5]","def delete_element(list): 
    print(""Original list: "" + str(list)) 
    element = int(input(""Please enter the element which you want to delete: ""))
    list.remove(element) 
    print(""List after deletion of element: "" + str(list))","def delete_element(list): 
    print(""Original list: "" + str(list)) 
    element = int(input(""Please enter the element which you want to delete: ""))
    list.remove(element) 
    print(""List after deletion of element: "" + str(list))",correct,OOP
Write a Python function to compare two strings and check if they are equal.,Compare 'Hello' and 'World',"def str_compare(str1, str2):
return str1 == str2

str_compare('Hello', 'World')","def str_compare(str1, str2)
return str1 == str2

str_compare('Hello', 'World')",Syntax Error,OOP
Transform the following code from Python to JavaScript.,"for i in range(10):
    print(i)","for (let i = 0; i < 10; i++) {
  console.log(i);
}","for (let i = 0; i < 10; i++) {
  console.log(i);
}",Syntax Error,Loops
Write a Python code snippet to print the sum of all even numbers between 1 to 10,,"sum = 0
for i in range (1,11):
    if i % 2 == 0:
        sum += i
print(sum)","sum = 0
for i in range (1,11)
    if i % 2 == 0
        sum += i
print(sum)",Syntax Error,Recursion
Suggest a Python program to compute the sum of pairs of elements in a given array,"[2, 4, 5, 10]","def sum_pairs(input_list):
    output_list = []
    for i in range(len(input_list)-1):
        sum = input_list[i] + input_list[i+1]
        output_list.append(sum)
    return output_list

input_list = [2, 4, 5, 10]
result = sum_pairs(input_list)
print(result)","def sum_pairs(input_list):
    output_list = []
    for i in range(len(input_list)-1):
        sum = input_list[i] + input_list[i+1]
        output_list.append(sum)
    return output_list

input_list = [2, 4, 5, 10]
result = sum_pairs(input_list)
print(result)",correct,String Manipulation
Suggest a Python library for web scraping.,,"BeautifulSoup is a popular library for web scraping and data extraction from HTML and XML documents. It is designed to work with HTML/XML parsers like html5lib, lxml and html.parser.","BeautifulSoup is a popular library for web scraping and data extraction from HTML and XML documents. It is designed to work with HTML/XML parsers like html5lib, lxml and html.parser.",Syntax Error,String Manipulation
Generate a program in Python count the number of words in a given sentence.,,"def count_words(sentence):
    words = sentence.split(' ')
    return len(words)","def count_words(sentence:
    words = sentence.split(' '
    return len(words",Syntax Error,Recursion
Write an algorithm in Python to find the maximum element of a given array.,"[2, 7, 1, 6, 5]","def find_max_element(arr):
  
  max = arr[0]
  
  for i in range(1, len(arr)):
    # compare current max with the next array element
    if arr[i] > max:
      max = arr[i]
  
  return max

arr = [2, 7, 1, 6, 5]
max_element = find_max_element(arr)
print(""Max element in the array:"", max_element)","def find_max_element(arr):
  
  max = arr[0]
  
  for i in range(1, len(arr)):
    # compare current max with the next array element
    if arr[i] ",Incomplete Answer,OOP
Implement an algorithm in Python to classify a given dataset into different target classes.,dataset.csv,"import pandas as pd
from sklearn.neighbors import KNeighborsClassifier
import numpy as np
 
# Load dataset
data = pd.read_csv('dataset.csv')
X = data.iloc[:, :-1]
y = data.iloc[:, -1]
 
# Create and fit classifier
classifier = KNeighborsClassifier(n_neighbors=5)
classifier.fit(X, y)
 
# Make predictions
predictions = classifier.predict(X)
print(np.mean(predictions == y))","import pandas as pd
from sklearn.neighbors import KNeighborsClassifier
import numpy as np
 
# Load dataset
data = pd.read_csv('dataset.csv')
X = data.iloc[:, :-1]
y = data.iloc[:, -1]
 
# Create and fit classifier
classifier = KNeighborsClassifier(n_neighbors=5)
classifier.fit(X, y)
 
# Make predictions
predictions = classifier.predict(X)
print(np.mean(predictions == y))",correct,String Manipulation
Create a program in Python to merge two dictionaries into a new one.,"Dictionary 1
`{'name': 'John', 'age': 25}`

Dictionary 2
`{'company': 'Google', 'city': 'New York'}`","# Dictionaries
dict1 = {'name': 'John', 'age': 25}
dict2 = {'company': 'Google', 'city': 'New York'}

# Merge two dictionaries
dict3 = {**dict1, **dict2}

# Print the merged dictionary
print(dict3)

# Output:
# {'name': 'John', 'age': 25, 'company': 'Google', 'city': 'New York'}","# Dictionaries
dict1 = {'name': 'John', 'age': 25}
dict2 = {'company': 'Google', 'city': 'New York'}

# Merge two dictionaries
dict3 = {**dict1, **dict2}

# Print the merged dictionary
print(dict3)

# Output:
# {'name': 'John', 'age': 25, 'company': 'Google', 'city': 'New York'}",correct,Loops
Write a function in Python that takes an array of integer values and reverses the order of the values.,"[1, 2, 3, 4, 5]","def reverse_array(arr):
  return arr[::-1]  # Returns a slice of the list in reverse order","def reverse_array(arr):
  return arr[::-1]  #",Incomplete Answer,String Manipulation
Create a python script to fetch data from an API,,"import requests

#make the API call
response = requests.get('http://api.example.com/')

#get the data from the response
data = response.json()

#print the data
print(data)","import requests

#make the API call
response = requests.get('http://api.example.com/'",Incomplete Answer,File I/O
Create a program to generate a frequency table from a given list,a list of elements,"# Python3 program to find frequency table 
from collections import Counter 
def freq_table(arr):
    return dict(Counter(arr))","# Python3 program to find frequency table 
from collections imp",Incomplete Answer,Recursion
Design an algorithm in Python to calculate the Euclidean distance between two points,"Input: ([2, 4], [4, 8])","import math 
    
def euclidean_distance(point1, point2):
    dist = math.sqrt( (point1[0]-point2[0])**2 + (point1[1]-point2[1])**2 )
    return dist 

print(euclidean_distance([2,4], [4,8]))","import math 
    
def euclidean_distance(point1, point2):
    dist = math.sqrt( (point1[0]-poin",Incomplete Answer,Loops
Write a Python program that takes a string as input and edits the string to remove all punctuation marks.,"string = ""This string contains , a comma, and a % symbol.""","import string

def remove_puncutuation(string):
    translator = str.maketrans('', '', string.punctuation)
    return string.translate(translator)

string = ""This string contains , a comma, and a % symbol.""

print(remove_puncutuation(string))","import string

def remove_puncutuation(string):
    translator = str.maketrans('', '', string.punctuation)
    return str",Incomplete Answer,Loops
Write a Python function that takes a list of strings as input and returns a new list containing all the strings that start with 'A',"List = [""Apple"", ""Banana"", ""Ant"", ""Dog"", ""Aardvark""]","def startWithA(list): 
	new_list = [] 
	for el in list: 
		if el[0] == 'A': 
			new_list.append(el) 
	return new_list","def startWithA(list): 
	new_list = [] 
	for el in list: 
		if el[0] == 'A': 
			new_list.append(el) 
	return new_list",correct,Loops
Write a Python code to sort the given array.,"array : [ 2, 4, 1, 3, 7, 5]","# Bubble sort algorithm
def sort_array(array):
    for i in range(len(array)):
        for j in range(len(array)-i-1):
            if array[j] > array[j+1]:
               array[j], array[j+1] = array[j+1], array[j]
    return array

# Sample array
array = [2, 4, 1, 3, 7, 5]

# Function call
sorted_array = sort_array(array)

# Print sorted output
print(sorted_array)","# Bubble sort algorithm
def sort_array(array):
for i in range(len(array)):
    for j in range(len(array)-i-1):
        if array[j] > array[j+1]:
           array[j], array[j+1] = array[j+1], array[j]
return array

# Sample array
array = [2, 4, 1, 3, 7, 5]

# Function call
sorted_array = sort_array(array)

# Print sorted output
print(sorted_array)",Syntax Error,Recursion
Generate a 5-digit pin code using a Python program.,,"import random
 
def generate_pin():
    # generates a 5 digit pin
    pin = """"
    for i in range(5):
        pin += str(random.randint(0,9))
    return pin
 
pin = generate_pin()
print(""Generated pin is:"", pin)","import random
 
def generate_pin()
    # generates a 5 digit pin
    pin = """"
    for i in range(5)
        pin += str(random.randint(0,9))
    return pin
 
pin = generate_pin()
print(""Generated pin is"", pin)",Syntax Error,String Manipulation
Write a function of recursion list sum.,,"def recursive_list_sum(data_list):
	total = 0
	for element in data_list:
		if type(element) == type([]):
			total = total + recursive_list_sum(element)
		else:
			total = total + element
	return total","def recursive_list_sum(data_list):
	total = 0
	for element in data_list:
		if type(element) == type(",Incomplete Answer,Loops
Write a Python program that searches for a substring in a given string.,,"def search_substring(string, substring):
  if substring in string:
    return ""Substring found!""
  else:
    return ""Substring not found.""","def search_substring(string, substring):
  if substring in string:
  ",Incomplete Answer,Recursion
"Construct a function in Python that takes two integers, a and b, and returns their sum.",,"def add_integers(a, b):
    return a + b","def add_integers(a, b):
    return a + b",correct,Recursion
Suggest a python program that implements a stack data structure.,,"class Stack(object):

    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()
    
    def is_empty(self):
        return len(self.items) == 0","class Stack(object):

    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()
    
    def is_empty(self):
        return len(self.items) == 0",correct,OOP
Generate a python script for creating a list containing the first 20 square numbers,,"sq_list = []
n = 1
while len(sq_list) <= 19:
    sq_list.append(n*n)
    n += 1
print(sq_list)","sq_list = []
n = 1
while len(sq_list) <= 19:
    sq_list.append(n*n)
    n += 1
print(sq_list)",correct,Recursion
Optimize this Python code to reduce its run-time complexity.,"def foo(l1, l2):
    result = []
    for i in l1:
        for j in l2:
            result.append(i + j)
    return result","def foo(l1, l2):
    result = [i + j for i in l1 for j in l2]
    return result","def foo(l1, l2):
    result = [i + j for i in l1 for j in l2]
    return result",correct,File I/O
Create a web scraper to extract data from a website using Python.,,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com/'

response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

data = soup.findAll('div', class_='data-element')

for datum in data:
 # extract data and process it
 print(datum.text)","import requests
from bs4 import BeautifulSoup

url = 'https://example.com/'

response = requests.get(url)
soup = BeautifulSoup(response.te",Incomplete Answer,OOP
Create a Python program to convert a binary string to its decimal equivalent.,,"def bin_to_dec(binary_string):
    decimal = 0
    for digit in binary_string:
        decimal = decimal * 2 + int(digit)
    return decimal

print(bin_to_dec('1100'))","def bin_to_dec(binary_string):
    decimal = 0
    for digit in binary_string:
        decimal = decimal * 2 + int(digit)
    return decimal

print(bin_to_dec('1100'))",correct,Loops
Generate a Python program to merge two input lists.,,"def merge_lists(list1, list2):
   merged_list = list1 + list2
   return merged_list

result = merge_lists([1,2,3], [4,5,6])
print(result)","def merge_lists(list1, list2):
   merged_list = list1 + list2
   return merged_list

result = merge_lists([1,2,3], [4,5,6])
print(result)",correct,Recursion
Construct a Python program to check whether a given number is prime or not.,13,"def check_prime(num):
    if num == 1:
        return False
    for i in range(2,num):
        if not num % i:
            return False
    return True

result = check_prime(13)
print(result)","def check_prime(num):
    if num == 1:
        return False
    for i in range(2,num):
        if not num % i:
            return False
    return True

result = check_prime(13)
print(result)",correct,File I/O
Write a Python program to find the maximum of two numbers provided by the user.,x = 5; y = 8;,"x = int(input(""Enter the first number: ""))
y = int(input(""Enter the second number: ""))

maximum = x if x > y else y

print(""The maximum of two numbers is"", maximum)","x = int(input(""Enter the first number: ""))
y = int(input(""Enter the second number: ""))

maximum = x if x > y else y

print(""The maximum of two numbers is"", maximum)",Syntax Error,String Manipulation
Write a Python class to model a 2-dimensional vector with appropriate methods for addition and subtraction.,,"class Vector2D:
  def __init__(self, x, y):
    self.x = x
    self.y = y
  
  def add(self, other):
    self.x += other.x
    self.y += other.y

  def subtract(self, other):
    self.x -= other.x
    self.y -= other.y","class Vector2D:
  def __init__(self, x, y):
    self.x = x
    self.y = y
  
  def add(self, other):
    self",Incomplete Answer,Loops
Write a Python script to generate a random password of a given length.,length = 8,"import string
import random

def random_password_generator(length):
 chars = string.ascii_letters + string.digits + string.punctuation
 return ''.join((random.choice(chars) for i in range(length)))

print(random_password_generator(length))","import string
import random

def random_password_generator(length):
 chars = string.ascii_letters + string.digits + string.punctuation
 return ''.join((random.choice(chars) for i in range(length)))

print(random_password_generator(length))",correct,Recursion
Write a function to split a string at uppercase letters.,,"import re
def split_upperstring(text):
 return (re.findall('[A-Z][^A-Z]*', text))","import re
def split_upperstring(text):
 return (re.findall('[A-Z][^A-Z]*', text))",correct,String Manipulation
Create a Python function that takes two numbers and returns the Greatest Common Divisor (GCD) of the two numbers.,"14, 18","def gcd(x, y):
    while y != 0:
        x, y = y, x % y
    return x","def gcd(x, y:
    while y != 0:
        x, y = y, x % y
    return x",Syntax Error,Loops
Create a project using Python with automated testing. The project should include tests that verify the correct functionality of the code.,,"# import the necessary libraries
import unittest

# The function to be tested
def add(a,b):
 return a+b

# Create the test class
class TestAdd(unittest.TestCase):

 def test_add(self):
 # Test that add works correctly
 self.assertEqual(add(2,3), 5)
 self.assertEqual(add(4,5), 9)

if __name__ == '__main__':
 unittest.main()","# import the necessary libraries
import unittest

# The function to be tested
def add(a,b):
 return a+b

# Create the test class
class TestAdd(unittest.TestCase):

 def test_add(self):
 # Test that add works correctly
 self.assertEqual(add(2,3), 5)
 self.assertEqual(add(4,5), 9)

if __name__ == '__main__':
 unittest.main()",Syntax Error,Loops
Create a Python script that calculates the area of a triangle by taking the base and height as user input.,"base = 10, height = 14","base = float(input('Enter the base:'))
height = float(input('Enter the height:'))

def areaOfTriangle(base, height):
 return 0.5 * base * height

print(areaOfTriangle(base, height))","base = float(input('Enter the base:'))
height = float(input('Enter the height:'))

def areaOfTriangle(base, height):
 return 0.5 * base * height

print(areaOfTriangle(base, height))",Syntax Error,Loops
How can you create a matrix in Python?,,"# Create a matrix using a list of lists
matrix = [[1, 2, 3],
          [4, 5, 6],
          [7, 8, 9]]

# Create a matrix using Numpy
import numpy as np 
matrix = np.array([[1, 2, 3],
                    [4, 5, 6],
                    [7, 8, 9]])","# Create a matrix using a list of lists
matrix = [[1, 2, 3],
          [4, 5, 6],
          [7, 8, 9]]

# Create a matrix u",Incomplete Answer,OOP
Create a Python script to generate a calendar representation of a given month.,Month : April; Year : 2020,"import calendar

year = 2020
month = 4

# create a calendar of the given month and year
cal = calendar.month(year, month)

# print it
print(cal)

# Output
     April 2020
Mo Tu We Th Fr Sa Su
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19","import calendar

year = 2020
month = 4

# create a calendar of the given month and year
cal = calendar.month(year, month)

# pritn it
pritn(cal)

# Output
     April 2020
Mo Tu We Th Fr Sa Su
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19",Syntax Error,OOP
Write a Python program to check if two strings are a rotation of each other.,"Strings:”geeksforgeeks”, “forgeeksgeeks”","if len(string1) == len(string2) and string1 in string2*2:
    print(""The strings are a rotation of each other"")
else:
    print(""The strings are not a rotation of each other"")","if len(string1 == len(string2 and string1 in string2*2:
    print(""The strings are a rotation of each other""
else:
    print(""The strings are not a rotation of each other""",Syntax Error,OOP
Generate a function in Python that takes a number as input and prints out the n-th Fibonacci number.,6,"def nthFibonacciNumber(n): 
    if n==0: 
        return 0
    elif n==1: 
        return 1
    else: 
        return nthFibonacciNumber(n-1)+nthFibonacciNumber(n-2)

result = nthFibonacciNumber(6)
print(result)","def nthFibonacciNumber(n) 
    if n==0 
        return 0
    elif n==1 
        return 1
    else 
        return nthFibonacciNumber(n-1)+nthFibonacciNumber(n-2)

result = nthFibonacciNumber(6)
print(result)",Syntax Error,Loops
Write a python function to capitalize first and last letters of each word of a given string.,,"def capitalize_first_last_letters(str1):
     str1 = result = str1.title()
     result =  """"
     for word in str1.split():
        result += word[:-1] + word[-1].upper() + "" ""
     return result[:-1]  ","def capitalize_first_last_letters(str1:
     str1 = result = str1.title(
     result =  """"
     for word in str1.split(:
        result += word[:-1] + word[-1].upper( + "" ""
     return result[:-1]  ",Syntax Error,File I/O
Create a program in Python which takes a string and prints out all the words present in the string in alphabetical order.,"string = ""This is a test string""","def sortString(string):
    words = string.split("" "")
    words.sort()
    return words
    
print(sortString(string))","def sortString(string):
    words = string.split("" "")
    words.sort()
    return words
    
print(sortString(string))",correct,String Manipulation
Create a data structure in Python that can store 10 strings of different lengths.,,"# Create an empty list to store 10 strings
my_list = []

# Loop to prompt user to enter 10 different strings 
for i in range(10):
    input_string = input(""Enter a string: "")
    my_list.append(input_string)

print(my_list)","# Create an empty list to store 10 strings
my_list = []

# Loop to prompt user to enter 10 different strings 
for i in range(10):
    input_string = input(""Enter a string: "")
    my_list.append(input_string)

print(my_list)",correct,String Manipulation
Design an algorithm in Python to count all unique elements in a list.,"[1, 1, 2, 3, 3, 4, 5, 6]","def count_unique(lst):
    unique_count = 0
    seen = set()
    for element in lst:
        if element not in seen:
            unique_count += 1
            seen.add(element)
    return unique_count","def count_unique(lst):
    unique_count = 0
    seen = set()
    for element in lst:
        if element not in seen:
            unique_count += 1
            seen.add(element)
    return unique_count",correct,File I/O
Generate a spreadsheet to model a sine wave using Python.,,"import pandas as pd
import numpy as np

# Create spreadsheet
df = pd.DataFrame()

# Add column of x-values
x_values = np.arange(start=0,stop=2*np.pi,step=0.1)
df['x'] = x_values

# Add column of y-values
y_values = np.sin(x_values)
df['y'] = y_values

# Save spreadsheet
df.to_csv('sine-wave.csv', index=False)","import pandas as pd
import numpy as np

# Create spreadsheet
df = pd.DataFrame()

# Add column of x-values
x_values = np.arange(start=0,stop=2*np.pi,step=0.1)
df['x'] = x_values

# Add column of y-values
y_values = np.sin(x_values)
df['y'] = y_values

# Save spreadsheet
df.to_csv('sine-wave.csv', index=False)",correct,Loops
Analyze a given Python code and write a function that checks if a given number is prime.,def primeCheck(num):,"def primeCheck(num):
 if num > 1:
 for i in range(2, num):
  if (num % i) == 0:
   return False
 else:
  return False
 return True","def primeCheck(num):
 if num > 1:
 for i in range(2, num):
  if (num % i) == 0:
   return False
 else:
  return False
 return True",Syntax Error,Recursion
Create an object-oriented program in Python to represent a game.,,"class Game:
 def __init__(self):
 self.players = []
 self.board = None

def add_player(self, player):
 self.players.append(player)

def set_board(self, board):
 self.board = board

def start(self):
 for player in self.players:
 player.turn()

def end(self):
 for player in self.players:
 player.game_over()","class Game:
 def __init__(self):
 self.players = []
 self.board = None

def add_player(self, player):
 self.players.append(player)

def set_board(self, board):
 self.board = board

def start(self):
 for player in self.players:
 player.turn()

def end(self):
 for player in self.players:
 player.game_over()",correct,File I/O
Create a Python program to create a stack with basic push and pop operations.,,"""""""
Create a stack with basic push and pop operations
""""""

class Stack:
    def __init__(self):
        self.stack = []
    def push(self, item):
        self.stack.append(item)
    def pop(self):
        return self.stack.pop()
    def peek(self):
        return self.stack[-1]
    def is_empty(self):
        return len(self.stack) == 0","""""""
Create a stack with basic push and pop operations
""""""

class Stack:
    def __init__(self):
        self.stack = []
    def push(self, item):
        self.stack.append(item)
    def pop(self):
        return self.stack.pop()
    def peek(self):
        return self.stack[-1]
    def is_empty(self):
        return len(self.stack) == 0",correct,OOP
Generate a Python function that checks to see if a given string is a palindrome.,Input: madam,"def is_palindrome(str):
    reversed_str = """"
    for i in range(len(str) - 1, -1, -1): 
        reversed_str += str[i]

    if str == reversed_str: 
        return True
    else: 
        return False

string = ""madam""
result = is_palindrome(string)
print(result)","def is_palindrome(str:
    reversed_str = """"
    for i in range(len(str - 1, -1, -1: 
        reversed_str += str[i]

    if str == reversed_str: 
        return True
    else: 
        return False

string = ""madam""
result = is_palindrome(string
print(result",Syntax Error,File I/O
Create a Python script that classifies an incoming sentence as either positive or negative.,,"import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

def classify_sentence(text):
    sid = SentimentIntensityAnalyzer()
    ss = sid.polarity_scores(text)
    if ss['compound'] >= 0.05:
        return 'positive'
    elif ss['compound'] <= -0.05:
        return 'negative'
    else:
        return 'neutral'","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

def classify_sentence(text):
    sid = SentimentIntensityAnalyzer()
    ss = sid.polarity_scores(text)
    if ss['compound'] >= 0.05:
        return 'positive'
    elif ss['compound'] <= -0.05:
        return 'negative'
    else:
        return 'neutral'",correct,File I/O
Optimize an existing python program to improve its processing speed.,"def my_func(x):
    for i in range(1000000):
    x += x + 1
return x","def my_func(x): 
    x += x << 1  # 2x faster than adding 1
    for i in range(1000000 // 2):  # divide loop by 2
        x += x << 2 
    return x  # no extra operation needed on return value as it is already doubled twice already.","def my_func(x): 
    x += x << 1  # 2x faster than adding 1
    for i in range(1000000 // 2):  # divide loop by 2
  ",Incomplete Answer,File I/O
Generate a Python function for computing a factorial.,,"def factorial(n):
    if n == 0:
        return 1
    return n * factorial(n-1)","def factorial(n):
    if n == 0:
      ",Incomplete Answer,OOP
Write a function to sort a given mixed list of integers and strings.,,"def sort_mixed_list(mixed_list):
    int_part = sorted([i for i in mixed_list if type(i) is int])
    str_part = sorted([i for i in mixed_list if type(i) is str])
    return int_part + str_part","def sort_mixed_list(mixed_list):
    int_part = sorted([i for i in mixed_list if type(i) is int])",Incomplete Answer,String Manipulation
Build a Python script to compare two strings and determine which string is the longest.,"""Hello\nWorld""","def longest(str1, str2):
    if len(str1) > len(str2):
        return str1
    elif len(str2) > len(str1):
        return str2
    else:
        return 'Strings are equal length.'

str1 = 'Hello'
str2 = 'World'

print(longest(str1, str2))
# Output: World","def longest(str1, str2)
    if len(str1) > len(str2)
        return str1
    elif len(str2) > len(str1)
        return str2
    else
        return 'Strings are equal length.'

str1 = 'Hello'
str2 = 'World'

print(longest(str1, str2))
# Output World",Syntax Error,Recursion
Construct a program in Python which reverses each word of a given sentence.,,"# Function to reverse each word
def word_reverse(s) : 
    # Splitting each word
    words = s.split() 
    rev_str = """" 
    for word in words: 
        # Reversing each word
        rev_str += word[::-1] + "" ""
    return rev_str","# Function to reverse each word
def word_reverse(s) : 
    # Splitting each word
    words = s.split() 
    rev_str = """" 
    for word in words: 
        # Reversing each word
        rev_str += word[::-1] + "" ""
    return rev_str",Syntax Error,OOP
Provide a Python program that sorts a list of strings based on the length of the strings.,"[""banana"", ""apple"", ""watermelon""]","my_list = [""banana"", ""apple"", ""watermelon""]
my_list.sort(key=len)

# my_list is now [""apple"", ""banana"", ""watermelon""]","my_list = [""banana"", ""apple"", ""watermelon""]
my_list.sort(k",Incomplete Answer,Loops
Create a Python script to generate random passwords.,,"import random
import string

def generate_password(length):
 characters = string.ascii_letters + string.digits + string.punctuation
 return ''.join(random.choice(characters) for _ in range(length))

length = int(input('Enter password length: '))
password = generate_password(length)
print(password)","import random
import string

def generate_password(length):
 characters = string.ascii_letters + string.digits + string.punctuation
 return ''.join(r",Incomplete Answer,File I/O
"Create a Python script to calculate the average of the three numbers 62, 72, and 85.",,"# Calculate the average of three numbers

def calculate_average(num1, num2, num3):
    sum = num1 + num2 + num3
    average = sum / 3 
    return average

number1 = 62
number2 = 72
number3 = 85

print(""The average is:"", calculate_average(number1, number2, number3))","# Calculate the average of three numbers

def calculate_average(num1, num2, num3):
    sum = num1 + num2 + num3
    average = sum / 3 
    return average

number1 = 62
number2 = 72
number3 = 85

print(""The average is:"", calculate_average(number1, number2, number3))",correct,Loops
Generate a Python program to give an output as true if the given string contains at least two distinct characters,"""AbcdABC""","def containsTwoDistinctChars(string):
    distinctChars = set()
    for char in string:
        distinctChars.add(char)
    
    return len(distinctChars) >= 2

print(containsTwoDistinctChars(""AbcdABC""))","def containsTwoDistinctChars(string):
    distinctChars = set()
    for char in string:
        distinctChars.add(char)
    
    return len(distinctChars) >= 2

print(name, containsTwoDistinctChars(""AbcdABC""))",Syntax Error,OOP
Generate a Python program to print each letter in a word on a separate line.,,"def print_letters(word):
    for letter in word:
        print(letter)","def print_letters(word):
for letter in word:
    print(letter)",Syntax Error,String Manipulation
Create an algorithm in Python to separate numbers below 10 and above 5.,"array = [4, 7, 10, 8, 12, 6]","below_ten = [] # Separated numbers
above_five = [] # Separated numbers

# Iterate over array
for n in array:
    if n > 5:
        above_five.append(n)
    else:
        below_ten.append(n)

# Print results
print(""Below 10: "", below_ten)
print(""Above 5: "", above_five)","below_ten = [] # Separated numbers
above_five = [] # Separated numbers

# Iterate over array
for n in array:
    if n > 5:
        above_five.append(n)
    else:
        below_ten.append(n)

# Print results
print(""Below 10: "", below_ten)
print(""Above 5: "", above_five)",correct,OOP
Develop a Python code to find the longest palindromic substring,BANANAB,"def find_longest_palindrome(word):
    max_length = 0
    max_start = 0
    for i in range(len(word)):
        for j in range(0, i):
            sub = word[j:i+1]
            if sub == sub[::-1] and len(sub) > max_length:
                max_start = j
                max_length = len(sub)
    print(word[max_start:max_start + max_length])","def find_longest_palindrome(word):
    max_length = 0
    max_start = 0
    for i in range(len(word)):
        for j in range(0, i):
            sub = word[j:i+1]
      ",Incomplete Answer,Recursion
Write a Python program to create a histogram of the data in the given array.,"Array: [2, 3, 5, 6, 8, 4, 2, 4, 6, 9]","import matplotlib.pyplot as plt

data = [2, 3, 5, 6, 8, 4, 2, 4, 6, 9]

plt.hist(data)
plt.title(""Histogram of Data"")
plt.xlabel(""Data Values"")
plt.ylabel(""Frequency"")
plt.show()","import matplotlib.pyplot as plt

data = [2, 3, 5, 6, 8, 4, 2, 4, 6, 9]

plt.hist(data)
plt.title(""Histogram of Data"")
plt.xlabel(""Data Values"")
plt.ylabel(""Frequency"")
plt.show()",correct,String Manipulation
Write a Python code that prints out all the even numbers between 2 and 100.,,"for i in range(2, 101):
    if i % 2 == 0:
        print(i)","for i in range(2, 101):
    i",Incomplete Answer,String Manipulation
Develop a python program for predicting a movie's rating based on its reviews.,"reviews = ['This movie was great', 'This movie was terrible']","#Code
num_reviews = len(reviews)
num_positive_reviews = 0

for review in reviews:
    if 'great' in review:
        num_positive_reviews +=1

rating = num_positive_reviews / num_reviews #Rating  
print(rating) #Prints the rating","#Code
num_reviews = len(reviews)
num_positive_reviews = 0

for review in reviews
    if 'great' in review
        num_positive_reviews +=1

rating = num_positive_reviews / num_reviews #Rating  
print(rating) #Prints the rating",Syntax Error,String Manipulation
Write a python program to transform input set of numbers into a list of tuples.,"1, 2, 3, 4, 5","[(1, 2), (3, 4), (5, None)]","[(1, 2), (3, ",Incomplete Answer,String Manipulation
Develop a program using Python to process a PDF document.,,"import PyPDF2

# open the PDF file
pdf_file = open('sample.pdf', 'rb')

# create a PDF reader object
pdf_reader = PyPDF2.PdfFileReader(pdf_file)

# get the number of pages
num_pages = pdf_reader.numPages

# iterate over all pages
for page_num in range(num_pages):
    # get the page
    page = pdf_reader.getPage(page_num)
    # extract text
    text = page.extractText()
    print(text)","import PyPDF2

# open the PDF file
pdf_file = open('sample.pdf', 'rb'

# create a PDF reader object
pdf_reader = PyPDF2.PdfFileReader(pdf_file

# get the number of pages
num_pages = pdf_reader.numPages

# iterate over all pages
for page_num in range(num_pages:
    # get the page
    page = pdf_reader.getPage(page_num
    # extract text
    text = page.extractText(
    print(text",Syntax Error,Recursion
Generate a python function to calculate the total cost of a purchase given prices and quantities.,"prices = [10, 20, 10]
quantities = [1, 2, 3]","def calculate_total_cost(prices, quantities):
 total = 0
 for price, quantity in zip(prices, quantities):
 total += price * quantity
 return total","def calculate_total_cost(prices, quantities):
 total = 0
 for price, quan",Incomplete Answer,OOP
Produce a Python code section to calculate the average value for all elements of a given array.,"[2, 7, 5, 4]","array = [2, 7, 5, 4]

total = 0
for num in array:
 total += num
average = total/len(array)

print(""The average of the array is:"", average)","array = [2, 7, 5, 4]

total = 0
for num in array:
 total += num
avera",Incomplete Answer,String Manipulation
Normalize the following text using Python.,the     Cat    in  the  hat,"text = ""the Cat in the hat""
text = text.replace('  ', ' ').strip()
print(text)","text = ""the Cat in the hat""
text = text.replace('  ', ' ').strip()
print(text)",correct,String Manipulation
Create a Python program that takes a positive integer as input and returns the closest Fibonacci number.,,"def closest_fibonacci(number):
    a, b = 0, 1
    while b < number:
        a, b = b, a + b
    return a

number = int(input('Enter a positive integer: '))
print(""The closest Fibonacci number is"", closest_fibonacci(number))","def closest_fibonacci(number):
    a, b = 0, 1
    while b < number:
        a, b = b, a + b
    return a

number = int(input('Enter a positive integer: '))
print(""The closest Fibonacci number is"", closest_fibonacci(number))",correct,OOP
Generate a unique 32-bit number in Python.,,"import uuid

unique_number = uuid.uuid4().int
print(unique_number)","import uuid

unique_number = uuid.uuid4().int
print(name, unique_number)",Syntax Error,Recursion
Design a Python program for finding the median of a given list of numbers.,"[7, 4, 5, 2, 10]","def find_median(lst):
    lst.sort()
    if len(lst)%2 == 0:
        median1 = lst[len(lst)//2]
        median2 = lst[len(lst)//2 - 1]
        median = float(median1 + median2) / 2
    else:
        median = lst[len(lst)//2]
    return median

result = find_median([7, 4, 5, 2, 10])
print(result)","def find_median(lst):
    lst.sort()
    if len(lst)%2 == 0:
        median1 = lst[len(lst)//2]
        median2 = lst[len(lst)//2 - 1]
        median = float(median1 + median2) / 2
    else:
        median = lst[len(lst)//2]
    return median

result = find_median([7, 4, 5, 2, 10])
print(name, result)",Syntax Error,OOP
Modify the given Python code to optimize efficiency.,"def calculate_sum(nums):
    total = 0
    for n in nums:
        total += n
    return total","def calculate_sum(nums):
    return sum(nums)","def calculate_sum(nums:
    return sum(nums",Syntax Error,File I/O
Translate the following code from JavaScript to Python:,"function addTwo(num) {
    return num + 2;
}","def add_two(num):
    return num + 2","def add_two(num):
    return num + 2",Syntax Error,Loops
Write a Python program to check if a given array contains a pair of elements whose sum is equal to a given number.,"[2, 4, 6, 5], 8","def check_pair(arr, sum):
    s = set()
    for item in arr:
        target = sum - item
        if(target in s):
            return True
        s.add(item)
    return False

print(check_pair([2, 4, 6, 5], 8))","def check_pair(arr, sum):
    s = set()
    for item in arr:
        target = sum - item
        if(target in s):
            return True
        s.add(item)
    return False

print(check_pair([2, 4, 6, 5], 8))",correct,Loops
Generate an algorithm in Python that reverses the order of elements in an array.,,"def reverseArray(arr): 
    start = 0
    end = len(arr) - 1
    while start < end: 
        arr[start], arr[end] = arr[end], arr[start] 
        start += 1
        end -= 1
    return arr","def reverseArray(arr: 
    start = 0
    end = len(arr - 1
    while start < end: 
        arr[start], arr[end] = arr[end], arr[start] 
        start += 1
        end -= 1
    return arr",Syntax Error,String Manipulation
Create an algorithm in Python to fill every element in a matrix with its own column number.,"[[1, 2, 3], 
 [4, 5, 6], 
 [7, 8, 9]]","matrix = [[1, 2, 3], 
          [4, 5, 6], 
          [7, 8, 9]]

for row_index, row in enumerate(matrix):
    for col_index, _ in enumerate(row):
        matrix[row_index][col_index] = col_index + 1

print(matrix)","matrix = [[1, 2, 3], 
          [4, 5, 6], 
          [7, 8, 9]]

for row_index, row in enumerate(matrix):
    for col_index, _ in enumerate(row):
        matrix[row_index][col_index] = col_index + 1

print(matrix)",correct,OOP
"Create a Python program that takes in a string and counts how many vowels are in it, regardless of case.",amazing,"def count_vowels(word):
  answer = 0
  for letter in word:
    if letter.lower() in 'aeiou':
      answer += 1
  return answer

print(count_vowels('amazing'))","def count_vowels(word):
  answer = 0
  for letter in word:
    if letter.lower(",Incomplete Answer,OOP
Generate a python program to parse and extract information from the following input,"input = [{'animals': ['dog', 'cat', 'horse'], 'instruments': ['violin', 'guitar']},
{'food': ['banana', 'apple', 'celery'], 'objects': ['chair', 'table']}]","def parse(input):
    output = []
    for d in input:
        for key, value in d.items():
            output.append({key: value})
    return output","def parse(input):
    output = []
    for d in input:
        for key, value in d.items():
            output.append({key: value})
    return output",Syntax Error,File I/O
Modify the following Python code to remove any duplicate elements in an array.,"myList = [1, 2, 3, 2, 1]",myList = list(set(myList)),myList = list,Incomplete Answer,String Manipulation
Write a Python program to calculate the hypotenuse of a right-angled triangle.,"a = 5, b = 12","import math

# calculate the hypotenuse
def calc_hypotenuse(a, b):
    hyp = math.sqrt(a**2 + b**2)
    print(""The length of the hypotenuse is"", hyp)

# input lengths of triangle sides
a = 5
b = 12

# call the function
calc_hypotenuse(a, b)","import math

# calculate the hypotenuse
def calc_hypotenuse(a, b):
    hyp = math.sqrt(a**2 + b**2)
    print(""The lengt",Incomplete Answer,Loops
Write a function that generates a random 5-letter string in Python.,,"import string
import random

def random_string():
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(5))

result = random_string()
print(result)","import string
import random

def random_string(:
    letters = string.ascii_letters
    return ''.join(random.choice(letters for i in range(5

result = random_string(
print(result",Syntax Error,File I/O
"Create a Python list comprehension to get the squared values of a list [1, 2, 3, 5, 8, 13].",,"[x*x for x in [1, 2, 3, 5, 8, 13]]","[x*x for x in [1,",Incomplete Answer,File I/O
"Using Docker, create a container with Python 3 installed.",,docker run -it --name python3 -v /path/to/local/project:/path/to/container/project -p 80:80 python:3,docker run -it --name python3 -v /path/to/local/project:/path/to/container/project -p 80:80 python:3,correct,Recursion
Rewrite the following code in Python to print a 5x5 matrix of random integers between 0 and 4.,,"import numpy as np

x = np.random.randint(0,5,(5,5))
print(x)","import numpy as np

x = np.random.randint(0,5,(5,5))
print(x)",correct,OOP
"Create an asynchronous function in Python for processing a list of tasks. The task should complete one item from the list, and then pass that item to another function to be processed.",,"async def process_tasks(tasks, fn):
 for task in tasks:
 await fn(task)

def process_task(task):
 # Do something with task
 print(task)

my_tasks = ['task_1', 'task_2', 'task_3']

asyncio.run(process_tasks(my_tasks, process_task))","async def process_tasks(tasks, fn):
 for task in tasks:
 await fn(task)

def process_task(task):
 # Do something with task
 print(task)

my_tasks = ['task_1', 'task_2', 'task_3']

asyncio.run(process_tasks(my_tasks, process_task))",correct,File I/O
Create a Python 3 program that filters a list of numbers. The program should filter out any numbers greater than 10.,"[20, 5, 2, 15, 7, 10]","numbers = [20, 5, 2, 15, 7, 10]
numbers = [x for x in numbers if x <= 10]
print(numbers)","numbers = [20, 5, 2, 15, 7, 10]
numbers = [x",Incomplete Answer,String Manipulation
Create a Python program for calculating the area of a given triangle.,"float a = 5
float b = 10
float c = 8","def triangleArea(a, b, c): 

    # calculate the semi-perimeter 
    s = (a + b + c) / 2

    # calculate the area 
    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5

    return area","def triangleArea(a, b, c): 

    # calculate the semi-perimeter 
    s = (a + b + c) / 2

    # calculate the area 
    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5

    return area",correct,Loops
Modify the existing python program to fulfill the following purpose,"Given a list of strings, find and print the most frequent string in the list.","def most_frequent(lst):
    max = 0
    frequent = lst[0]
    for item in lst:
        freq = lst.count(item)
        if freq > max:
            max = freq
            frequent = item
    return frequent","def most_frequent(lst):
    max = 0
    frequent = lst[0]
    for item in lst:
        freq = lst.count(item)
        if freq > max:
            max = freq
            frequent = item
    return frequent",correct,File I/O
Construct a python program that randomly swaps two elements within a list of numbers.,"[1, 2, 3, 4, 5]","import random

# input list
data_list = [1, 2, 3, 4, 5]

# choose two random indices
i, j = random.sample(range(len(data_list)), 2)

# store the values before swapping
a = data_list[i]
b = data_list[j]

# swap two elements in a list
data_list[i] = b
data_list[j] = a

# print the list after swapping
print(data_list)","import random

# input list
data_list = [1, 2, 3, 4, 5]

# choose two random indices
i, j = random.sample(range(len(data_list)), 2)

# store the values before swapping
a = data_list[i]
b = data_list[j]

# swap two elements in a list
data_list[i] = b
data_list[j] = a

# pritn the list after swapping
pritn(data_list)",Syntax Error,Loops
Create a Python program that takes a list of integers as an input and returns a dictionary with keys being the numbers and values being the frequency of those numbers in the list.,"[1, 3, 5, 6, 1, 2, 5, 3]","def counting(nums):
    result={}
    for num in nums:
        if num in result:
            result[num]+=1
        else:
            result[num]=1
    return result

nums=[1, 3, 5, 6, 1, 2, 5, 3]
result=counting(nums)
print(result)
# Output: {1: 2, 3: 2, 5: 2, 6: 1, 2: 1}","def counting(nums):
    result={}
    for num in nums:
        if num in result:
            result[num]+=1
        else:
            result[num]=1
    return result

nums=[1, 3, 5, 6, 1, 2, 5, 3]
result=counting(nums)
pritn(result)
# Output: {1: 2, 3: 2, 5: 2, 6: 1, 2: 1}",Syntax Error,OOP
"In Python, write a program to calculate the area of a triangle when the base and height are given.","Base: 10, Height: 5","def triangle_area(base, height):
 return (base * height) / 2

triangle_area(10, 5)  # 25.0","def triangle_area(base, height):
 return (base * height) / 2

triangle_area(10, 5)  # 25.0",correct,OOP
Write a code optimization code that reduces the number of lines of code in a given Python script.,"def count_words(string):
    counts = { }
    for w in string.split():
        if w in counts:
            counts[w] += 1
        else:
            counts[w] = 1
    return counts","def count_words(string):
    counts = { }
    for w in string.split():
        counts[w] = counts.get(w, 0) + 1
    return counts","def count_words(string):
    counts = { }
    for w in string.sp",Incomplete Answer,Recursion
Write a function to calculate the sum of all digits of the base to the specified power.,,"def power_base_sum(base, power):
    return sum([int(i) for i in str(pow(base, power))])","def power_base_sum(base, power):
return sum([int(i) for i in str(pow(base, power))])",Syntax Error,OOP
Write a function to find all anagrams of a string in a given list of strings using lambda function.,,"from collections import Counter 
def anagram_lambda(texts,str):
  result = list(filter(lambda x: (Counter(str) == Counter(x)), texts)) 
  return result","from collections import Counter 
def anagram_lambda(texts,str):
  result = list(filter(lambda x: (Counter(str) == Counter(x)), texts)) 
  return result",correct,Recursion
Create a web scraper with Python and Beautiful Soup to scrape data from a single webpage.,URL: http://example.com/page,"import requests
from bs4 import BeautifulSoup

url = 'http://example.com/page'

response = requests.get(url)

soup = BeautifulSoup(response.text, 'html.parser')

results = soup.find_all('div', {'class': 'result'})

for result in results:
 title = result.find('h2').text
 description = result.find('p').text 
 print(title, description)","import requests
from bs4 import BeautifulSoup

url = 'http://example.com/page'

response = requests.get(url)

soup = BeautifulSoup(response.text, 'html.parser')

resul",Incomplete Answer,Loops
"Given some code, identify the type of the code written.","def foo():
    x = 0
    y = 1
    z = 2
    if x == y:
        z += 1",The code written is a combination of Python and logic control. It is a conditional statement which checks whether x is equal to y and adds one to z if this is true.,The code written is a combination of Python and logic control. It is a conditional statement which checks whether x is equal to y and adds one to z if this is true.,correct,OOP
Generate Python code to calculate the sum of the elements in a given list.,"[1, 4, 8, 10]","list = [1,4,8,10]

def calculate_sum(list):
 sum = 0
 for number in list:
 sum += number
 return sum

sum = calculate_sum(list)
print(sum) # Output: 23","list = [1,4,8,10]

def calculate_sum(list):
 sum = 0
 for number in list:
 sum += number
 return sum

sum = calculate_sum(list)
pritn(sum) # Output: 23",Syntax Error,Loops
What is a Python script to list the full path of all directories in a directory?,,"import os

path = "".""

for dirName, subdirList, fileList in os.walk(path):
 print(os.path.abspath(dirName))","import os

path = "".""

for dirName, subdirList, fileList in os.walk(path)
 print(os.path.abspath(dirName))",Syntax Error,Recursion
Create an automated program that converts a given number of dollars to Canadian currency using Python.,The given number is $100.,"# define the currency ratio
usd_to_cad = 1.33

# get user input
usd_amount = float(input('Enter the amount in USD: '))

# convert USD to CAD
cad_amount = usd_amount * usd_to_cad

# print the amount in CAD
print('The amount in CAD is', cad_amount)","# define the currency ratio
usd_to_cad = 1.33

# get user input
usd_amount = float(input('Enter the amount in USD: '))

# convert USD to CAD
cad_amount = usd_amount * usd_to_cad

# pritn the amount in CAD
pritn('The amount in CAD is', cad_amount)",Syntax Error,Loops
"Write a Python program to split a list into two parts, where the size of the first part is determined by the user.","[1, 2, 3, 4, 5, 6, 7]","def split_list(lst, size):
    part1 = lst[:size]
    part2 = lst[size:]
    return part1, part2

# example
my_list = [1, 2, 3, 4, 5, 6, 7]
part1, part2 = split_list(my_list, 3)
print(part1) # [1, 2, 3]
print(part2) # [4, 5, 6, 7]","def split_list(lst, size):
    part1 = lst[:size]
    part2 = lst[size:]
    return part1, part2

# example
my_list = [1, 2, 3, 4, 5, 6, 7]
part1, part2 = split_list(my_list, 3)
pritn(part1) # [1, 2, 3]
pritn(part2) # [4, 5, 6, 7]",Syntax Error,String Manipulation
Read the following pseudocode and generate a Python program to complete the given task.,"Given a list of numbers, print the numbers in reverse order","numbers = [1, 2, 3, 4, 5]
 
numbers.reverse()
 
for num in numbers:
    print(num)","numbers = [1, 2, 3, 4, 5]
 
numbers.reverse()
 
for num in numbers:
    print(name, num)",Syntax Error,File I/O
Write a Python program that determines whether the given string is a palindrome.,"String: ""racecar""","def is_palindrome(string):
  if len(string) <= 1:
    return True
  else:
    letter_1 = string[0]
    letter_2 = string[-1]
    if letter_1 != letter_2:
      return False
    else:
      new_word = string[1:-1]
      return is_palindrome(new_word)","def is_palindrome(string):
  if len(string) <= 1:
    return True
  else:
    letter_1 = string[0]
    letter_2 = string[-1]
    if letter_1 != letter_2:
      return False
    else:
      new_word = string[1:-1]
      return is_palindrome(new_word)",Syntax Error,Recursion
Construct a Python dictionary based on the following data,"keys = [""car"", ""bike""]
values = [""Ford"", ""Honda""]","dict = {
    ""car"" : ""Ford"", 
    ""bike"" : ""Honda""
}","dict = {
    ""car"" : ""Ford"", 
    ""bike"" : ""Honda""
}",correct,File I/O
Divide two numbers without using the divide operator in Python.,09-Mar,"def divide_without_operator(a, b):
    return a // b + (a % b != 0)

print(divide_without_operator(9, 3))","def divide_without_operator(a, b):
    return a // b",Incomplete Answer,Loops
Create a Python list comprehension to return all numbers divisible by 3 and 5 that are smaller than 10,,[number for number in range(10) if number % 3 == 0 and number % 5 == 0],[number for number in range(10) if ,Incomplete Answer,Recursion
Parse the following JSON string into a Python dictionary.,"{""name"":""John"",""age"":30,""city"":""New York""}","import json

data = '{""name"":""John"",""age"":30,""city"":""New York""}'

parsed_data = json.loads(data)
print(parsed_data) # {'name': 'John', 'age': 30, 'city': 'New York'}","import json

data = '{""name"":""John"",""age"":30,""city"":""New York""}'

parsed_data = json.loads(data)
print(parsed_data) # {'name': 'John', 'age': 30, 'city': 'New York'}",correct,String Manipulation
Create a Python script to print the first n even numbers.,n = 10,"n = 10

for i in range(1, n+1):
 if i % 2 == 0:
 print(i)","n = 10

for i in range(1, n+",Incomplete Answer,Recursion
Create a program in Python for ASCII conversion.,String: “Hello World”,"def ascii_conversion(string):
 return ''.join([f'{ord(c):08b}' for c in string])

print(ascii_conversion(""Hello World""))","def ascii_conversion(string):
 return ''.join([f'{ord(c):08b}' for c in string])

print(ascii_conversion(""Hello World""))",correct,String Manipulation
"Create a Python class for an employee with variable type member fields of name, age, and salary.",,"class Employee:
    def __init__(self, name, age, salary):
        self.name = name
        self.age = age
        self.salary = salary","class Employee:
    def __init__(self, name, age, salary):
        ",Incomplete Answer,File I/O
Create a graphql query in python to retrieve all the books stored in a database.,,"def books_query():
    books_query = '''
    query {
        books {
            id
            title
            author
            published_date
        }
    }
    '''
    return books_query","def books_query()
    books_query = '''
    query {
        books {
            id
            title
            author
            published_date
        }
    }
    '''
    return books_query",Syntax Error,OOP
Write a function to filter a dictionary based on values.,,"def dict_filter(dict,n):
 result = {key:value for (key, value) in dict.items() if value >=n}
 return result","def dict_filter(dict,n):
 result = {key:value for (ke",Incomplete Answer,Recursion
Write a function to find minimum of two numbers.,,"def min_of_two( x, y ):
    if x < y:
        return x
    return y","def min_of_two( x, y ):
    if x < y:
        return x
    return y",Syntax Error,Loops
Make a program in Python,,"# print hello world
print(""Hello World!"")","# print hello world
print(name, ""Hello World!"")",Syntax Error,Recursion
Create a Python function that takes a string as input and returns a dictionary that counts the frequency of every character.,hello,"def char_freq(s):
    freq = dict()
    for i in s:
        if i in freq:
            freq[i] += 1
        else:
            freq[i] = 1
    return freq

string = 'hello'
result = char_freq(string)

print(result) # {'h': 1, 'e': 1, 'l': 2, 'o': 1}","def char_freq(s):
    freq = dict()
    for i in s:
        if i in freq:
            freq[i] += 1
        else:
            freq[i] = 1
    return freq

string = 'hello'
result = char_freq(string)

print(result) # {'h': 1, 'e': 1, 'l': 2, 'o': 1}",correct,Recursion
Create a shell script that runs a Python program and prints out the results.,"python program.py ""example input""","#!/bin/bash

python program.py ""example input""
output=$(python program.py ""example input"")

echo $output","#!/bin/bash

python program.py ""example input""
output=$(python program.py ""example input"")

echo $output",Syntax Error,Recursion
Implement a cost function with two parameters in Python.,,"def cost_function(x, y):
    return (x**2 + y**2)","def cost_function(x, y):
    return (x**2 + y**2)",Syntax Error,Loops
Replace a string in the following python program.,"string = ""Hello, world!""
substring = ""world""
substitution = ""Python""","string = ""Hello, world!""
substring = ""world""
substitution = ""Python""

print(string.replace(substring, substitution))","string = ""Hello, world!""
substring = ""world""
substitution ",Incomplete Answer,Loops
Create a shell script to run a Python program.,,"#! /bin/bash
python my_program.py","#! /bin/bash
python my_program.py",Syntax Error,String Manipulation
Construct a Python script that uses regular expressions to find phone numbers in a text.,"The following numbers belong to us: 888-555-0000, +1-217-543-1000.","import re

text = 'The following numbers belong to us: 888-555-0000, +1-217-543-1000.'

# Find all phone numbers
numbers = re.findall(r'\+?\d[\d -]{8,12}\d', text)

# Output
print(numbers)","import re

text = 'The following numbers belong to us: 888-555-0000, +1-217-543-1000.'

# Find",Incomplete Answer,Loops
Create a web-scraping function in Python to extract the text content from any website.,,"import requests
from bs4 import BeautifulSoup

def scrape_text(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    texts = soup.find_all(text=True)
    return ' '.join(texts)
    
scraped_text = scrape_text('https://example.com')
print(scraped_text)","import requests
from bs4 import BeautifulSoup

def scrape_text(url)
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    texts = soup.find_all(text=True)
    return ' '.join(texts)
    
scraped_text = scrape_text('https//example.com')
print(scraped_text)",Syntax Error,Recursion
Generate a Python program to check if three given numbers are in the range 10 and 20 inclusive or not.,,"def is_in_range(num1, num2, num3): 
  
    # Using not operator , NOT 
    return ((10 <= num1 <= 20) and  
            (10 <= num2 <= 20) and 
            (10 <= num3 <= 20))","def is_in_range(num1, num2, num3): 
  
    # Using not operator , NOT 
    return ((10 <= num1 <= 20) and  
            (10 <= num2 <= 20) and 
            (10 <= num3 <= 20))",correct,Recursion
Write a python program that selects five random elements from a list and prints them.,"my_list = [1, 3, 5, 8, 7, 2, 10, 4, 6, 9]","import random

my_list = [1, 3, 5, 8, 7, 2, 10, 4, 6, 9]
random.shuffle(my_list)

for i in range(5):
    print(my_list[i])","import random

my_list = [1, 3, 5, 8, 7, 2, 10, 4, 6, 9]
rand",Incomplete Answer,Loops
Generate a python program that removes all whitespace from a string.,"""This    is    a   string    with    whitespace""","def remove_whitespace(x):
   return x.replace("" "", """")","def remove_whitespace(x):
   return x.replace("" "", """")",correct,File I/O
Write a Python function to determine whether a number is a prime or a composite number.,,"def is_prime(n):
   if n <= 1:
      return False
   for i in range(2, int(n**0.5) + 1):
      if n % i == 0:
         return False
   return True","def is_prime(n):
   if n <= 1:
      return False
   for i in range(2, int(n**0.5) + 1):
      if n % i == 0:
         return False
   return True",correct,OOP
"Develop an API in Python that takes in two strings and returns true if they are anagrams, and false otherwise.","listen, silent","# anagram checker

def check_anagrams(str1, str2):
    if sorted(str1) == sorted(str2):
        return True 
    else: 
        return False 
  
# Driver code 
str1 = ""listen""
str2 = ""silent""

if(check_anagrams(str1, str2)): 
    print(""The strings are anagrams."")  
else: 
    print(""The strings aren't anagrams."")","# anagram checker

def check_anagrams(str1, str2):
    if sorted(str1) == sorted(str2):
        return True 
    else: 
        return False 
  
# Driver code 
str1 = ""listen""
str2 = ""silent""

if(check_anagrams(str1, str2)): 
    print(""The strings are anagrams."")  
else: 
    print(""The strings aren't anagrams."")",correct,OOP
Create a program in Python to find the number of occurrences of an element x in a list y.,"[3, 5, 2, 7, 4, 3, 2], x = 2","def count_x(x, y):
    count = 0
    for i in y:
        if i == x:
            count += 1
    return count","def count_x(x, y):
    count = 0
    for i in y:
    ",Incomplete Answer,Loops
Improve the following function by using Python built-in functions:,"def sum_array(array):
    '''A function that takes in an array of numbers and returns the sum of all the numbers'''
    total = 0
    for num in array:
        total = total + num
    return total","def sum_array(array):
    '''A function that takes in an array of numbers and returns the sum of all the numbers'''
    return sum(array)","def sum_array(array):
    '''A function that takes in an array of numbers and returns the sum of all the numbers'''
    return sum(array)",correct,Loops
Write a Python program that generates a random string made up of five lowercase ASCII characters,,"import random

def generate_random_string():
   characters = 'abcdefghijklmnopqrstuvwxyz'
   random_string = ''
   for i in range(5):
       random_string += random.choice(characters)
   return random_string

result = generate_random_string()
print(result)","import random

def generate_random_string()
   characters = 'abcdefghijklmnopqrstuvwxyz'
   random_string = ''
   for i in range(5)
       random_string += random.choice(characters)
   return random_string

result = generate_random_string()
print(result)",Syntax Error,File I/O
Write a Python program to find the lowest common multiple of two numbers.,,"def lowest_common_multiple(x, y): 
    if x > y:
        greater = x 
    else: 
        greater = y 

    while(True): 
        if((greater % x == 0) and (greater % y == 0)): 
            lcm = greater 
            break
        greater += 1

    return lcm 

print(lowest_common_multiple(x, y))","def lowest_common_multiple(x, y): 
    if x > y:
        greater = x 
    else: 
        greater = y 

    while(True): 
        if((greater % x == 0) and (greater % y == 0)): 
            lcm = greater 
            break
        greater += 1

    return lcm 

print(lowest_common_multiple(x, y))",correct,File I/O
Generate a function in Python that checks if an entered number is even or odd and returns a string with the type.,,"def check_type(num):
    if num % 2 == 0:
        return 'even'
    else:
        return 'odd'","def check_type(num):
if num % 2 == 0:
    return 'even'
else:
    return 'odd'",Syntax Error,OOP
Create a Python program to find the sum of all the values in a dictionary,"d = {'a': 10, 'b': 20, 'c':30}","def sum_values(d):
    sum = 0
    for value in d.values():
        sum += value
    return sum

total = sum_values(d)
print(total) # 60","def sum_values(d):
    sum = 0
    for value in d.values():
        sum += value
    return sum

total = sum_values(d)
pritn(total) # 60",Syntax Error,Recursion
Create a Python program which returns the difference between the two largest numbers in a given list,"[3, 8, 9, 6, 4, 10]","def maxDifference(arr): 
    n = len(arr) 
    max_diff = arr[1] - arr[0] 
  
    for i in range(0, n): 
        for j in range(i + 1, n): 
            if (arr[j] - arr[i] > max_diff): 
                max_diff = arr[j] - arr[i] 
    return max_diff 
  
arr = [3, 8, 9, 6, 4, 10] 
print( maxDifference(arr))","def maxDifference(arr): 
    n = len(arr) 
    max_diff = arr[1] - arr[0] 
  
    for i in range(0, n): 
        for j in range(i + 1, n): 
            i",Incomplete Answer,OOP
Design a natural language processing model in Python to find  patterns in text data.,,"import re
from nltk import tokenize

input_text = 'string with several words'

tokens = tokenize.word_tokenize(input_text)
for token in tokens:
  if re.search('\w+', token):
      print(token)","import re
from nltk import tokenize

input_text = 'string with several words'

tokens = tokenize",Incomplete Answer,Recursion
"Optimize the following Python code:

def count_dups(arr):
  dt = {} 
  count = 0 
 
  for x in arr:
    if x in dt:
      count += 1 
    else:
      dt[x] = 1 
 
  return count",,"def count_dups(arr):
  dt = {} 
  count = 0 
 
  for x in arr:
    count += x in dt
    dt[x] = 1 
 
  return count","def count_dups(arr):
  dt = {} 
  count = 0 
 
  for x in",Incomplete Answer,Loops
Write a function to drop empty items from a given dictionary.,,"def drop_empty(dict1):
  dict1 = {key:value for (key, value) in dict1.items() if value is not None}
  return dict1","def drop_empty(dict1):
  dict1 = {key:value for (key, val",Incomplete Answer,OOP
"Using the given Python code, update its style using pep 8 conventions.","def factorial (x):
 if x <= 1:
 return 1
 return x * factorial (x-1)","def factorial(x):
    if x <= 1:
        return 1
    return x * factorial(x - 1)","def factorial(x):
    if x <= 1:
       ",Incomplete Answer,Recursion
Write a Python program to classify a given array of numbers into even number and odd number arrays.,"my_array = [1, 2, 3, 4, 5, 6, 7, 8, 9]","# Create empty lists to store odd and even elements
odd_elements = []
even_elements = []

# Iterate through the array
for element in my_array:
    # Check if the element is even or odd
    if element % 2 == 0:
        even_elements.append(element)
    else:
        odd_elements.append(element)

print(odd_elements)
print(even_elements)","# Create empty lists to store odd and even elements
odd_elements = []
even_elements = []

# Iterate through the array
for element in my_array:
    # Check if the element is even or odd
    if element % 2 == 0:
        even_elements.append(element)
    else:
        odd_elements.append(element)

print(name, odd_elements)
print(name, even_elements)",Syntax Error,String Manipulation
"Generate a script in Python to generate a random password that has a minimum of 8 characters, including special characters and numbers.",,"import string
import random

# Generate 8 random characters, including special characters and numbers
size = 8
password = ''.join(random.choices(string.ascii_uppercase + string.ascii_lowercase + string.digits + string.punctuation, k=size))

print(password) # Output: eu$y6c17","import string
import random

# Generate 8 random characters, including special characters and numbers
size = 8
password = ''.join(random.",Incomplete Answer,File I/O
Write a python function to calculate the number of odd days in a given year.,,"def odd_Days(N): 
    hund1 = N // 100
    hund4 = N // 400
    leap = N >> 2
    ordd = N - leap 
    if (hund1): 
        ordd += hund1 
        leap -= hund1 
    if (hund4): 
        ordd -= hund4 
        leap += hund4 
    days = ordd + leap * 2
    odd = days % 7
    return odd ","def odd_Days(N): 
    hund1 = N // 100
    hund4 = N // 400
    leap = N >> 2
    ordd = N - leap 
    if (hund1): 
        ordd += hund1 
   ",Incomplete Answer,OOP
Generate a program to take a sentence and capitalize the first letter of each word in the sentence.,,"def capitalize_sentence(sentence):
  words = sentence.split(' ')
  capitalized_words = [word.capitalize() for word in words]
  return ' '.join(capitalized_words)

# Driver Code
sentence = 'i am learning python'

result = capitalize_sentence(sentence)

print(result) # prints ""I Am Learning Python""","def capitalize_sentence(sentence):
  words = sentence.split(' ')
  capitalized_words = [word.capitalize() for word in words]
  return ' '.join(capitalized_words)

# Driver Code
sentence = 'i am learning python'

result = capitalize_sentence(sentence)

print(result) # prints ""I Am Learning Python""",Syntax Error,File I/O
Write a function to find the directrix of a parabola.,,"def parabola_directrix(a, b, c): 
  directrix=((int)(c - ((b * b) + 1) * 4 * a ))
  return directrix","def parabola_directrix(a, b, c: 
  directrix=((int(c - ((b * b + 1 * 4 * a 
  return directrix",Syntax Error,File I/O
Create a class hierarchy with a base class and two derived classes using inheritance in python.,,"class Base:
    # Base class
    def __init__(self, value):
        self.value = value

class Derived1(Base):
    # First derived class
    def __init__(self, value, name):
        super().__init__(value)
        self.name = name

class Derived2(Base):
    # Second derived class
    def __init__(self, value, age):
        super().__init__(value)
        self.age = age","class Base:
    # Base class
    def __init__(self, value):
        self.value = value

class Derived1(Base):
    # First derived class
    def __init__(self, value, name):
        super().__init__(value)
        self.name = name

class Derived2(Base):
    # Second derived class
    def __init__(self, value, age):
        super().__init__(value)
        self.age = age",correct,String Manipulation
Generate a Python class that represents a Rectangle and a Square.,,"class Rectangle:
    def __init__(self, width, height):
        self.width = width
        self.height = height

    def get_area(self):
        return self.width * self.height


class Square(Rectangle):
    def __init__(self, side_length):
        self.width = side_length
        self.height = side_length","class Rectangle:
    def __init__(self, width, height):
        self.width = width
        self.height = height

    def get_area(self):
        return self.width * self.height


class Square(Rectangle):
    def __init__(self, side_length):
        self.width = side_length
        self.height = side_length",Syntax Error,Loops
Create a new python class called Person that takes a name and age as parameters.,,"class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age","class Person:
    def __init__(self, name, age):",Incomplete Answer,Recursion
Write a Python class with methods for printing strings and computing the length of a string.,,"class MyString:
    def __init__(self):
        self.string = """"
 
    def set_string(self, string):
        self.string = string
 
    def get_string(self):
        return self.string
 
    def print_string(self):
        print(self.string)
 
    def get_length(self):
        string_length = len(self.string)
        return string_length","class MyString:
    def __init__(self):
        self.string = """"
 
    def set_string(self, string):
        self.string = string
 
    def get_string(self):
        return self.string
 
    def print_string(self):
        print(self.string)
 
    def get_length(self):
        string_length = len(self.string)
        return string_length",correct,OOP
Generate a program in Python that counts the number of words in a string.,"String: ""This is a sentence""","def count_words(string):
    words = 0
    for x in string.split():
        words += 1
    return words","def count_words(string):
    words = 0
    for x in",Incomplete Answer,Recursion
Develop a Python function that takes a list of numbers and returns the minimum value.,"[10, 5, 20, -20, 30]","def findMinValue(numlist): 

    minVal = numlist[0] 
  
    for i in numlist: 
        if i < minVal: 
            minVal = i 
  
    return minVal 

numlist = [10, 5, 20, -20, 30] 
print(findMinValue(numlist))","def findMinValue(numlist): 

    minVal = numlist[0] 
  
    for i in numlist: 
        if i < minVal: 
            minVal = i 
  
    return minVal 

numlist = [10, 5, 20, -20, 30] 
pritn(findMinValue(numlist))",Syntax Error,Loops
Create a Python program that prints a multiplication table of the given number.,number = 5,"def multiplication_table(number): 
    for i in range(1, 11): 
        print(number, 'x', i, '=', number*i) 

multiplication_table(number)","def multiplication_table(number): 
    for i in range(1, 11): 
        print(number, 'x', i, '=', number*i) 

multiplication_table(number)",correct,String Manipulation
Create a Python class which can be instantiated into an object. The object should take two parameters in its construction and store them as separate instance variables.,,"class SampleObject:
    def __init__(self, param1, param2):
        self.param1 = param1
        self.param2 = param2

obj = SampleObject(1, 2)","class SampleObject:
    def __init__(self, param1, param2):
        sel",Incomplete Answer,OOP
Create a Python program to extract the first three characters of a string.,"string = ""programming""","result = string[:3]
print(result) #pro","result = string[:3]
print(result) #pro",Syntax Error,OOP
Write a Python function to flatten a nested list of lists into a single list containing all elements.,"nested_list = [[1, 2], [3, 4], [5, 6]]","def flatten_list(nested_list):
    return [item for sublist in nested_list for item in sublist]","def flatten_list(nested_list):
    return [item for sublist in nested_list for item in sublist]",Syntax Error,Loops
Write a function for computing square roots using the babylonian method.,,"def babylonian_squareroot(number):
    if(number == 0):
        return 0;
    g = number/2.0;
    g2 = g + 1;
    while(g != g2):
        n = number/ g;
        g2 = g;
        g = (g + n)/2;
    return g;","def babylonian_squareroot(number):
    if(number == 0):
        return 0;
    g = number/2.0;
    g2 = ",Incomplete Answer,File I/O
Create a basic Python program that prints a message in the console every 3 seconds.,,"import time

while True:
    print 'This message is printed every 3s'
    time.sleep(3)  # Sleep for 3 seconds","import time

while True:
    print 'This message is pri",Incomplete Answer,Loops
Implement a linear search algorithm in Python to search for an element in an array.,"arr = [2, 3, 4, 10, 40]
x = 10","def linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1
  
arr = [2, 3, 4, 10, 40] 
x = 10

result = linear_search(arr, x) 
if result == -1: 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)","def linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1
  
arr = [2, 3, 4, 10, 40] 
x = 10

result = linear_search(arr, x) 
if result == -1: 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)",correct,Recursion
Write a Python script that normalizes given input strings.,"""Hello,  world    !  How are you?""","import re
s = ""Hello,  world    !  How are you?""
s = re.sub(' +', ' ', s)
print(s)

# Output
# 'Hello, world! How are you?'","import re
s = ""Hello,  world    !  How are you?""
s = re.sub(' +', ' ', s)
print(s)

# Output
# 'Hello, world! How are you?'",Syntax Error,Recursion
Build a Python program that identifies valid Leap Years.,,"def is_leap(year):
    if (year % 400 == 0): 
        return True
    if (year % 100 == 0):  
        return False
    if (year % 4 == 0): 
        return True
    else:
        return False
  
year = int(input())
print(is_leap(year))","def is_leap(year):
    if (year % 400 == 0): 
        return True
    if (year % 100 == 0):  
        return False
    if (year % 4 == 0): 
        return True
    else:
        return False
  
year = int(input())
print(is_leap(year))",correct,File I/O
Create a function in Python that takes an array of numbers and prints out its maximum value.,"[1, 4, 8, 9, 10]","def print_max(arr):
 max_val = max(arr)
 print(max_val)
 
print_max([1, 4, 8, 9, 10])","def print_max(arr):
 max_val = max(arr)
 print(max_val)
 
print_max([1, 4, 8, 9, 10])",correct,Recursion
Develop a Python Program to sort an array without using any built-in functions.,,"def sort_array(array): 
    for i in range(len(array)): 
        for j in range(i+1, len(array)): 
            if array[j] < array[i]: 
                array[j], array[i] = array[i], array[j] 
  
    return array","def sort_array(array): 
    for i in range(len(array)): 
        for j in range(i+1, len(array)): 
            if array[j] < array[i]: 
                array[j], array[i] = array[i], array[j] 
  
    return array",correct,Recursion
"Write a Python program that prints out the number of times the character ""e"" occurs in the string given.",,"def count_letter(string, letter):
	""""""Function to count the number of specified letter in the string""""""
	count = 0
	for char in string:
		if char == letter:
			count += 1
	return count

# Driver code 
string = ""this is a sample sentence""
print(count_letter(string, 'e'))","def count_letter(string, letter):
	""""""Function to count the number of specified letter in the string""""""
	count = 0
	for char in string:
		if char == letter:
			count += 1
	return count

# Driver code 
string = ""this is a sample sentence""
print(count_letter(string, 'e'))",correct,OOP
Write a Python code to check if the given number is prime.,Number = 23,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n//2 + 1):
        if n % i == 0:
            return False
    return True

if is_prime(23):
    print('The given number is prime')
else:
    print('The given number is not prime')","def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n//2 + 1):
        if n % i == 0:
            return",Incomplete Answer,OOP
"Given a Python dictionary, print out the keys and values that are duplicated.","my_dict = {'a': 'apple', 'b': 'banana', 'c': 'apple'}","for key, value in my_dict.items():
    if my_dict.values().count(value) > 1:
        print(key, value)","for key, value in my_dict.items():
    if my_dict.v",Incomplete Answer,OOP
Compose a python script to create a bar chart.,"[4,6,3,7,2]","import matplotlib.pyplot as plt
 
# x-axis values 
x = [4, 6, 3, 7, 2] 

# Y-axis values 
y = [0, 2, 3, 4, 5] 

# Function to plot the bar
plt.bar(x, y)

# Naming the x-axis 
plt.xlabel('x - axis')
# Naming the y-axis 
plt.ylabel('y - axis')
# Writing a title to the graph
plt.title('Bar Chart') 
# Show the plot
plt.show()","import matplotlib.pyplot as plt
 
# x-axis values 
x = [4, 6, 3, 7, 2] 

# Y-axis values 
y = [0, 2, 3, 4, 5] 

# Function to plot the bar
plt.bar(x, y)

# Naming the x-axis 
plt.xlabel('x - axis')
# Naming the y-axis 
plt.ylabel('y - axis')
# Writing a title to the graph
plt.title('Bar Chart') 
# Show the plot
plt.show()",correct,String Manipulation
Find the frequency of elements in a given list in Python.,"List: [1, 1, 2, 3, 3, 3, 4, 4, 5]","from collections import Counter

given_list = [1, 1, 2, 3, 3, 3, 4, 4, 5]

my_dict = Counter(given_list)

print(my_dict) # output: Counter({3: 3, 4: 2, 1: 2, 2: 1, 5: 1})","from collections import Counter

given_list = [1, 1, 2, 3, 3, 3, 4, 4, 5]

my_dict = ",Incomplete Answer,File I/O
Develop a function in Python to find the largest two numbers in a given array.,"input_array = [1, 9, 5, 2, 4, 7]","def find_largest_two(input_array):
    largest1, largest2 = -float(""inf""), -float(""inf"")
    if len(input_array)<2:
        return
    for el in input_array:
        if el > largest1:
            largest2 = largest1
            largest1 = el
        elif el > largest2:
            largest2 = el
    return largest1,largest2","def find_largest_two(input_array):
    largest1, largest2 = -float(""inf""), -float(""inf"")
    if len(input_array)<2:
        return
    for el in input_array:
        if el > largest1:
            largest2 = largest1
            largest1 = el
        elif el > largest2:
            largest2 = el
    return largest1,largest2",Syntax Error,Recursion
Write a Python program using NumPy to calculate the dot product of two vectors.,"x = [3, 4, 5]

y = [2, 6, 4]","import numpy as np

x = np.array([3, 4, 5])
y = np.array([2, 6, 4])

dot_product = np.dot(x, y)

print(dot_product) # 46","import numpy as np

x = np.array([3, 4, 5])
y = np.array([2, 6, 4])

dot_product = np.dot(x, y)

print(dot_product) # 46",correct,OOP
Can you design a function in Python which takes two string arguments and checks that two strings are anagrams or not?,"s1 = ""restful""
s2 = ""fluster""","def is_anagram(str1, str2):
    if (len(str1) != len(str2)):
        return False
    
    list1 = sorted(list(str1)) 
    list2 = sorted(list(str2)) 
  
    for i in range(0, len(str1)): 
        if (list1[i] != list2[i]): 
            return False
  
    return True","def is_anagram(str1, str2):
if (len(str1) != len(str2)):
    return False

list1 = sorted(list(str1)) 
list2 = sorted(list(str2)) 
  
for i in range(0, len(str1)): 
    if (list1[i] != list2[i]): 
        return False
  
return True",Syntax Error,OOP
Write a Python program for finding the maximum of 3 numbers.,"4, 7, 6","def max_of_three(a, b, c):
  if (a > b) and (a > c):
    greatest = a
  elif (b > a) and (b > c):
    greatest = b
  else:
    greatest = c
  return greatest

print(""Max is: "", max_of_three(4, 7, 6))","def max_of_three(a, b, c):
  if (a > b) and (a > c):
    greatest = a
  elif (b > a) and (b > c):
 ",Incomplete Answer,Loops
Create a python code to check if an integer is a power of two,16,"def isPowerOfTwo(number):
    return (number > 0) and ((number & (number - 1)) == 0)

print(isPowerOfTwo(16))","def isPowerOfTwo(number):
    return (number > 0) and ((number & (number - 1)) == 0)

pritn(isPowerOfTwo(16))",Syntax Error,File I/O
Create a dictionary in python from a comma-separated value string.,"s = ""name,age,city,country""","def csv_to_dict(s):
    data_dict = {}
    # split the string into list of elements
    elements = s.split(',')
    
    # iterate through the list
    for i in range(0, len(elements), 2):
        # add each element as a key to the dictionary
        data_dict[elements[i]] = elements[i+1]
    
    # return the dictionary
    return data_dict","def csv_to_dict(s):
    data_dict = {}
    # split the string into list of elements
    elements = s.split(',')
    
    # iterate through the list
    for i in range(0, len(elements), 2):
        # add each element as a key to the dictionary
        data_dict[elements[i]] = elements[i+1]
    
    # return the dictionary
    return data_dict",correct,String Manipulation
Rewrite the given code to use dictionaries instead of switch statements in Python.,"def convert_letter_grade(grade):
    switch (grade):
        case 'A':
            return 4.0
        case 'B':
            return 3.0
        case 'C':
            return 2.0
        case 'D':
            return 1.0","def convert_letter_grade(grade):
    grades = {
        'A': 4.0,
        'B': 3.0,
        'C': 2.0,
        'D': 1.0
    }
    return grades[grade]","def convert_letter_grade(grade):
    grades = {
        'A': 4.0,
        'B': 3.0,
        'C': 2.0,
        'D': 1.0
    }
    return grades[grade]",correct,Recursion
Write a Python program to calculate the entropy of a given dataset.,"Dataset: [1,1,1,1,1,1,2,2,2,2,3,3]","def entropy(dataset):
    counts = {}
    entropy = 0
    for i in dataset:
        if i in counts:
            counts[i] += 1
        else:
            counts[i] = 1
    for i in counts:
        p = counts[i]/len(dataset)
        entropy -= p*np.log2(p)
    return entropy

entropy([1,1,1,1,1,1,2,2,2,2,3,3])","def entropy(dataset):
    counts = {}
    entropy = 0
    for i in dataset:
        if i in counts:
            counts[i] += 1
        else:
            counts[i] = 1
    for i in counts:
        p = counts[i]/len(dataset)
        entropy -= p*np.log2(p)
    return entropy

entropy([1,1,1,1,1,1,2,2,2,2,3,3])",correct,Loops
Construct a Python program to sort a list of strings by their length in ascending order.,,"def sort_by_length(string_list):
    return sorted(string_list, key=len)","def sort_by_length(string_list):
    return sorted(string_list, key=len)",Syntax Error,Recursion
Write a function in Python that returns the maximum element in the given list.,"[1, -2, 3, 4]","def get_max_elem(arr):
    max_elem = arr[0]
    for elem in arr:
        if elem > max_elem:
            max_elem = elem
    return max_elem
 
arr = [1, -2, 3, 4]
max_elem = get_max_elem(arr)
print(max_elem) # Output: 4","def get_max_elem(arr)
    max_elem = arr[0]
    for elem in arr
        if elem > max_elem
            max_elem = elem
    return max_elem
 
arr = [1, -2, 3, 4]
max_elem = get_max_elem(arr)
print(max_elem) # Output 4",Syntax Error,String Manipulation
Create a python program to delete all items from a dictionary.,"d = {'a':1, 'b':2, 'c':3}","d = {'a':1, 'b':2, 'c':3}

# Using the clear() method
d.clear()

print(d) # Prints an empty dictionary","d = {'a':1, 'b':2, 'c':3}

# Using the clear( method
d.clear(

print(d # Prints an empty dictionary",Syntax Error,Recursion
Create a virtual environment in Python using Pipenv.,,"pip install pipenv
pipenv install 
pipenv shell","pip install pipenv
pipenv install 
pipenv shell",Syntax Error,String Manipulation
Write a function to find the longest common prefix in the given set of strings.,,"def common_prefix_util(str1, str2): 
	result = """"; 
	n1 = len(str1) 
	n2 = len(str2) 
	i = 0
	j = 0
	while i <= n1 - 1 and j <= n2 - 1: 
		if (str1[i] != str2[j]): 
			break
		result += str1[i] 
		i += 1
		j += 1
	return (result) 
def common_prefix (arr, n): 
	prefix = arr[0] 
	for i in range (1, n): 
		prefix = common_prefix_util(prefix, arr[i]) 
	return (prefix) ","def common_prefix_util(str1, str2): 
	result = """"; 
	n1 = len(str1) 
	n2 = len(str2) 
	i = 0
	j = 0
	while i <= n1 - 1 and j <= n2 - 1: 
		if (str1[i] != str2[j]): 
			break
		result += str1[i] 
		i += 1
		j += 1
	return (result) 
def common_prefix (arr, n): 
	prefix = arr[0] 
	for i in range (1, n): 
		prefix = common_prefix_util(prefix, arr[i]) 
	return (prefix) ",correct,Loops
Create a function in Python to sort strings in alphabetical order.,"['abc', 'bac', 'bca', 'axy', 'axz']","def sort_strings(strings):
    strings.sort()
    return strings

strings = ['abc', 'bac', 'bca', 'axy', 'axz']

print(sort_strings(strings))","def sort_strings(strings):
    strings.sort()
    return strings

strings = ['abc', 'bac', 'bca', 'axy', 'axz']

print(sort_strings(strings))",correct,OOP
Can you write a Python function to determine if a supplied number is prime?,num=20,"def is_prime(num):
    """"""Check if the given number is prime.

    Args:
        num (int): A number to check

    Returns:
        bool: True if num is prime, False otherwise.
    """"""

    if num < 2: 
        return False

    for i in range(2, num):
        if (num % i) == 0:
            return False
    return True

num = 20
result = is_prime(num)
print(f""Is {num} prime? {result}"")","def is_prime(num:
    """"""Check if the given number is prime.

    Args:
        num (int: A number to check

    Returns:
        bool: True if num is prime, False otherwise.
    """"""

    if num < 2: 
        return False

    for i in range(2, num:
        if (num % i == 0:
            return False
    return True

num = 20
result = is_prime(num
print(f""Is {num} prime? {result}""",Syntax Error,File I/O
Create a Python Flask application for solving a linear equation. The application should have an endpoint that receives an equation as input and returns the solution as output.,3x + 2 = 5,"from flask import Flask, request
from sympy import *

app = Flask(name)
x = Symbol('x')

@app.route('/solve', methods=['POST'])
def solve():
 equation = request.json['equation']
 solution = solve(equation, x)
 return {'solution': str(solution[0])}

if name == 'main':
 app.run(debug=True)","from flask import Flask, request
from sympy import *

app = Flask(name
x = Symbol('x'

@app.route('/solve', methods=['POST']
def solve(:
 equation = request.json['equation']
 solution = solve(equation, x
 return {'solution': str(solution[0]}

if name == 'main':
 app.run(debug=True",Syntax Error,Loops
Create a Python program to generate a random name from two given lists of names.,"first_names = [""Alice"", ""John"", ""Joe"", ""Michael""] 
last_names = [""Smith"", ""Williams"", ""Jackson"", ""Brown""]","import random

def get_random_name(first_names, last_names):
    first_name = random.choice(first_names)
    last_name = random.choice(last_names)
    random_name = first_name + ' ' + last_name
    return random_name","import random

def get_random_name(first_names, last_names):
    first_name = random.choice(first_names)
    last_name = random.choice(last_names)
    random_name = first_name + ' ' + last_name
    return random_name",correct,Recursion
Generate a function in Python to zip two lists.,"list1 = [""a"", ""b"", ""c""]
list2 = [1, 2, 3]","def zip_two_lists(list1, list2):
    return zip(list1, list2)","def zip_two_lists(list1, list2",Incomplete Answer,Recursion
Describe the sorted() method and how it works,,The sorted() method is a built-in function in Python that takes an iterable object and returns a sorted list. It is used to sort the items of an iterable in a specific order which may be either ascending or descending. The sorted() method works by comparing each item in the iterable with all the other items and sorting them in a specific order.,The sorted() method is a built-in function in Python that takes an iterable object and returns a sorted list. It is used to sort the items of an iterable in a specific order which may be either ascending or descending. The sorted() method works by comparing each item in the iterable with all the other items and sorting them in a specific order.,correct,Recursion
Write a Python program to visualize a given dataset in a 2D scatterplot.,"x_data = {1,2,3,4,5,6,7,8,9,10}
y_data = {3,4,7,8,10,12,14,16,18,19}","import matplotlib.pyplot as plt
def visualize_data(x_data, y_data):
 plt.scatter(x_data, y_data)
 plt.xlabel('x data')
 plt.ylabel('y data')
 plt.title('2D Scatterplot')
 plt.show()","import matplotlib.pyplot as plt
def visualize_data(x_data, y_data):
 plt.scatter(x_data, y_data)
 plt.xlabel('x data')
 plt.ylabel('y data')
 plt.title('2D Scatterplot')
 plt.show()",Syntax Error,Recursion
Create a Python app to take a list of words and determine if each word is an anagram of another.,,"def is_anagram(word1, word2):
    if sorted(word1) == sorted(word2):
        return True
    else:
        return False","def is_anagram(word1, word2):
    if sorted(word1) == sorte",Incomplete Answer,Recursion
Write a function to list out the list of given strings individually using map function.,,"def listify_list(list1):
  result = list(map(list,list1)) 
  return result ","def listify_list(list1):
  result = list(map(list,list1)) 
  return result ",correct,OOP
Design a python program to error correct a given sentence.,The cat ate potatoo chips.,"def error_correct(sentence):
    words = sentence.split()
    correct_words = []
    for word in words:
        if word == 'potatoo':
            correct_words.append('potato') # correction
        else:
            correct_words.append(word)
    return ' '.join(correct_words)","def error_correct(sentence):
    words = sentence.split()
    correct_words = []
    for word in words:
        if word == 'potatoo':
            correct_words.append('potato') # correction
        else:
            correct_words.append(word)
    return ' '.join(correct_words)",correct,String Manipulation
Write a Python program to scroll a given message on the console.,message = 'Hello World!',"def scrollMessage(message): 
    for char in message: 
        for i in range(100): 
            print (char, end = "" "")
        print("""")


# Input
message = 'Hello World!'

# Output
scrollMessage(message)","def scrollMessage(message): 
    for char in message: 
        for i in range(100): 
            print ",Incomplete Answer,File I/O
Generate a random password using Python.,,"import random

password_characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*().,?0123456789'

def generate_password(length):
    return ''.join(random.choices(password_characters, k=length))
  
print(generate_password(10))","import random

password_characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*().,?0123456789'

def generate_password(length)
    return ''.join(random.choices(password_characters, k=length))
  
print(generate_password(10))",Syntax Error,Loops
Suggest a way to optimize the following Python code snippet.,"def find_max(arr):
    '''This function returns the maximum element in the given array.'''
    maxval = arr[0]
    for i in range(len(arr)):
        if arr[i] > maxval:
            maxval = arr[i]
    return maxval","def find_max(arr):
    '''This function returns the maximum element in the given array.'''
    maxval = arr[0]
    for num in arr:
        if num > maxval:
            maxval = num
    return maxval","def find_max(arr):
    '''This function returns the maximum element in the given array.'''
    maxv",Incomplete Answer,Loops
Create a Python script to generate random numbers with using a certain range.,"Minimum = 5, Maximum = 15","import random

min_n = 5
max_n = 15

def random_number_generator(min_n, max_n):
  return random.randint(min_n, max_n)

for num in range(0, 10):
    print (random_number_generator(min_n, max_n))","import random

min_n = 5
max_n = 15

def random_number_generator(min_n, max_n:
  return random.randint(min_n, max_n

for num in range(0, 10:
    print (random_number_generator(min_n, max_n",Syntax Error,String Manipulation
Implement an algorithm in Python to optimize the following cost function,cost(x) = 3x^2 + 4x +2,"def optimization_algorithm(x): 
    cost = 3 * x ** 2 + 4*x + 2
    while cost > 0: 
        cost = cost - (6*x + 4)
        x = x - 0.01
    return x","def optimization_algorithm(x): 
    cost = 3 * x ** 2 + 4*x + 2
    while cost > 0: 
        cost = cost - (6*x + 4)
        x = x - 0.01
    return x",correct,String Manipulation
Write a function in Python to compare two given strings character-wise and return the position of the first difference.,"String1: String
String2: Strings","def compare_strings_charwise(s1, s2):
    for i in range(min(len(s1), len(s2))):
        if s1[i] != s2[i]:
            return i
    return -1","def compare_strings_charwise(s1, s2):
    for i in range(min(len(s1), l",Incomplete Answer,OOP
Contruct a python program that sorts an array of strings using BubbleSort algorithm.,"[""Hello"", ""World"", ""Boo"", ""Yay""]","def bubbleSort(arr): 
    n = len(arr) 
  
    for i in range(n):      
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
  
    return arr","def bubbleSort(arr): 
    n = len(arr) 
  
    for i in range(n):      
        for j in range(0, n-i-1): ",Incomplete Answer,Recursion
Develop a Python function to calculate the area of an irregular polygon with three sides.,,"def calculate_area(s1, s2, s3):
    # calculate the perimeter
    p = s1 + s2 + s3
    # calculate the semi-perimeter
    sp = p / 2
    # calculate the area
    area = math.sqrt(sp * (sp - s1) * (sp - s2) * (sp - s3))
    
    return area","def calculate_area(s1, s2, s3):
    # calculate the perimeter
    p = s1 + s2 + s3
    # calculate the semi-perimeter
    sp = p / 2
    # calculate the area
    area = math.sqrt(sp * (sp - s1) * (sp - s2) * (sp - s3))
    
    return area",correct,OOP
We are given the input and output schematic of a neural network. You are required to implement the network in Python code.,"Inputs=[2,1]
Hidden1=[2]
Outputs=[1]","import numpy as np
 
# Inputs
x = np.array([2, 1])
 
# Weights - Initilise to random values
w1 = np.random.rand(2, 2)
w2 = np.random.rand(2, 1)
 
# Hidden layer
h1 = np.matmul(x, w1)
 
# Output layer
y = np.matmul(h1, w2)","import numpy as np
 
# Inputs
x = np.array([2, 1])
 
# Weights - Initilise to random values
w1 = np.random.ran",Incomplete Answer,File I/O
Generate a Python script to print all the prime numbers in a given range.,Range = 2 to 20,"for n in range(2, 21): 
   if n > 1: 
       for i in range(2, n//2 + 2): 
           if (n % i) == 0: 
               break
       else: 
           print(n)","for n in range(2, 21): 
   if n > 1: 
       for i in range(2, n//2 + 2): 
           if (n % i) == 0: 
               break
       else: 
           print(n)",correct,File I/O
Write a python function to find number of elements with odd factors in a given range.,,"def count_Odd_Squares(n,m): 
    return int(m**0.5) - int((n-1)**0.5) ","def count_Odd_Squares(n,m): 
    return int(m**0.5) - int((n-1)**0.5) ",Syntax Error,String Manipulation
"Given a list of strings, write a Python snippet to sort the strings in ascending order according to word length.","[ ""Code"", ""Python"", ""JavaScript"", ""Java""]","strings = [""Code"", ""Python"", ""JavaScript"", ""Java""]

# sort the list by word length
strings.sort(key = lambda x: len(x))

print(strings)
# Output: [""Code"", ""Java"", ""Python"", ""JavaScript""]","strings = [""Code"", ""Python"", ""JavaScript"", ""Java""]

# sort the list by word length
strings.sort(key = lambda x: len(x))

print(name, strings)
# Output: [""Code"", ""Java"", ""Python"", ""JavaScript""]",Syntax Error,File I/O
Generate an automated unit test in Python for the following function,"def add(a, b):
    return a + b","import unittest

class TestAddition(unittest.TestCase):

    def test_addition(self):
        self.assertEqual(add(1, 1), 2)
        self.assertEqual(add(2, 5), 7)
        self.assertEqual(add(3, 3), 6)
        self.assertEqual(add(-8, 6), -2)
        self.assertEqual(add(-3, -3), -6)

if __name__ == '__main__':
    unittest.main()","import unittest

class TestAddition(unittest.TestCase):

    def test_addition(self):
        self.assertEqual(add(1, 1), 2)
        self.assertEqual(add(2, 5), 7)
        self.assertEqual(add(3, 3), 6)
        self.assertEqual(add(-8, 6), -2)
        self.assertEqual(add(-3, -3), -6)

if __name__ == '__main__':
    unittest.main()",Syntax Error,Recursion
Write a Python program to update a dictionary with the its key's length as the value.,"mydict = {""Model"": ""Tesla"", ""Car"": ""Tesla Roadster""}",mydict = {k: len(k) for k in mydict.keys()},mydict = {k: len(k) f,Incomplete Answer,File I/O
Create a function in Python that takes a list of words as an argument and returns a new list without duplicates.,"['apple', 'banana', 'apple', 'orange']","def remove_duplicates(words):
  seen = set()
  unique_words = []
  for word in words:
    if word not in seen:
      seen.add(word)
      unique_words.append(word)
  return unique_words

arr = ['apple', 'banana', 'apple', 'orange']
result = remove_duplicates(arr)
print(result)","def remove_duplicates(words):
  seen = set()
  unique_words = []
  for word in words:
    if word not in seen:
      seen.add(word)
      ",Incomplete Answer,Recursion
"Create a Python program which takes a word as an input, reverses it and prints the output.",hello,"def reverse_word(word):
    return word[::-1]

word = ""hello""
result = reverse_word(word)
print(result)","def reverse_word(word):
    return word[::-1]

word = ""hello""
result = reverse_word(word)
print(result)",correct,Loops
Write a Python program to sort the characters in a given string in reverse alphabetical order.,Hello,"def sortReverseString(string):
 char_list = list(string)
 char_list.sort(reverse=True)
 return ''.join(char_list)

# Usage:
string = ""Hello""
sortedString = sortReverseString(string)
print(sortedString) # Output: olleH","def sortReverseString(string)
 char_list = list(string)
 char_list.sort(reverse=True)
 return ''.join(char_list)

# Usage
string = ""Hello""
sortedString = sortReverseString(string)
print(sortedString) # Output olleH",Syntax Error,File I/O
Develop a program in Python to rotate the elements of an array to the right by K times.,"my_list = [1,2,3,4,5]","def rotate_k_times(my_list, k):
    rotated_list = my_list.copy()
    for i in range(k):
        rotated_list = [rotated_list[-1]] + rotated_list[:-1]
    return rotated_list

if __name__ == '__main__':
    print(rotate_k_times(my_list, 3))","def rotate_k_times(my_list, k):
rotated_list = my_list.copy()
for i in range(k):
    rotated_list = [rotated_list[-1]] + rotated_list[:-1]
return rotated_list

if __name__ == '__main__':
print(rotate_k_times(my_list, 3))",Syntax Error,OOP
Generate a Python code to sort a list of numbers.,"[100, 50, 30, 10, 7]","list = [100, 50, 30, 10, 7]
list.sort()
print(list) # Output: [7, 10, 30, 50, 100]","list = [100, 50, 30, 10, 7]
list.sort()
print(list) # Output: [7, 10, 30, 50, 100]",correct,File I/O
"Make a function in Python which takes a string of any length, reverses it, and then returns the reversed string.",String to be reversed,"def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string","def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string",correct,OOP
Write a function to generate a two-dimensional array.,,"def multi_list(rownum,colnum):
  multi_list = [[0 for col in range(colnum)] for row in range(rownum)]
  for row in range(rownum):
    for col in range(colnum):
        multi_list[row][col]= row*col
  return multi_list
","def multi_list(rownum,colnum):
  multi_list = [[0 for col in range(colnum)] for row in range(rownum)]
  for row in range(rownum):
    for col in range(colnum):
        multi_list[row][col]= row*col
  return multi_list
",correct,File I/O
Create a Python program that takes two arguments in the form of two lists and calculates the dot product of the two arguments.,"[1,2], [3,4]","def dot_product(list1, list2):
  product = 0
  for i in range(len(list1)):
    product += (list1[i] * list2[i])
  return product
#Example
list1 = [1,2]
list2 = [3,4]

result = dot_product(list1, list2)
print(result)
#Output
11","def dot_product(list1, list2:
  product = 0
  for i in range(len(list1:
    product += (list1[i] * list2[i]
  return product
#Example
list1 = [1,2]
list2 = [3,4]

result = dot_product(list1, list2
print(result
#Output
11",Syntax Error,String Manipulation
Create a Python script to generate random passwords of length 8 characters.,,"import string
import random

def generatePassword():
  characters = string.ascii_letters + string.digits + string.punctuation
  password = ''.join(random.choice(characters) for i in range(8))
  return password
 
print(generatePassword())","import string
import random

def generatePassword()
  characters = string.ascii_letters + string.digits + string.punctuation
  password = ''.join(random.choice(characters) for i in range(8))
  return password
 
print(generatePassword())",Syntax Error,Loops
Create a function in Python that takes a string as an input and reverses each word of the string.,,"def reverse_words(string):
    words = string.split("" "")
    output_string = """"
    for word in words:
        output_string += word[::-1] + "" ""
    return output_string.strip()","def reverse_words(string):
    words = string.split("" "")
    output_string = """"
    for word in words:
        output_string += word[::-1] + "" ""
    return output_string.strip()",Syntax Error,String Manipulation
Create a function to generate random numbers within a given range in Python.,"start=1, end=10","import random

def generate_random_numbers(start, end):
    return random.randint(start, end)

result = generate_random_numbers(1,10)
print(result)","import random

def generate_random_numbers(start, end):
    return random.randint(start, end)

result = generate_random_numbers(1,10)
pritn(result)",Syntax Error,File I/O
Develop a function in Python to calculate the n factorial.,,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n*factorial(n-1)","def factorial(n):
if n == 0:
    return 1
else:
    return n*factorial(n-1)",Syntax Error,Loops
Develop a valid Python script which computes the root of a given quadratic equation,"a = 1, b = -7, c =12","import math

def quadratic_equation_roots(a, b, c):
  d = b**2 - 4*a*c

  if d > 0:
    x1 = (-b + math.sqrt(d)) / (2*a)
    x2 = (-b - math.sqrt(d)) / (2*a)
    return x1, x2
  else:
    return ""This equation has no real roots!""","import math

def quadratic_equation_roots(a, b, c):
  d = b**2 - 4*a*c

  if d > 0:
    x1 = (-b + math.sqrt(d)) /",Incomplete Answer,String Manipulation
Generate a main.py python script that will return the maximum of two numbers.,"a = 3;
b = 4","def max(a, b): 
    if a > b: 
        return a 
    else:  
        return b 
  
#Driver Code 
a = 3
b = 4
print(max(a, b))","def max(a, b): 
if a > b: 
    return a 
else:  
    return b 
  
#Driver Code 
a = 3
b = 4
print(max(a, b))",Syntax Error,String Manipulation
Create a Python script to perform sentiment analysis on a given piece of text. Use the TextBlob package to detect the sentiment of the text and print out the sentiment score.,"Text: ""The movie was great! I really enjoyed watching it.""","import textblob

text = ""The movie was great! I really enjoyed watching it.""

blob = textblob.TextBlob(text)
sentiment = blob.sentiment

print(""Sentiment score:"", sentiment.polarity)","import textblob

text = ""The movie was great! I really enjoyed watching it.""

blob = textbl",Incomplete Answer,File I/O
Write a Python function to calculate the tax on a given price.,,"def calculate_tax(price):
 tax_rate = 0.135
 return price * tax_rate","def calculate_tax(price):
 tax_rate = 0.135
 return price * tax_rate",correct,String Manipulation
Create a text parser in Python that converts a given string into an integer.,"""47""","def parse_int(string):
 return int(string)

result = parse_int(""47"")
print(result)

# Result: 47","def parse_int(string):
 return int(string)

resu",Incomplete Answer,Loops
Generate a python code to build a simple regression model?,"X = [[1, 2, 3], [4, 5, 6]]
Y = [[7], [8]]","import numpy as np

X = np.array(X)
Y = np.array(Y)

b = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(Y)

#Print the parameters
print(""Parameters: "", b)

#Make predictions
x_new = [[1, 2, 3]]
y_pred = np.dot(x_new, b)
print(""Predicted output: "", y_pred)","import numpy as np

X = np.array(X
Y = np.array(Y

b = np.linalg.inv(X.T.dot(X.dot(X.T.dot(Y

#Print the parameters
print(""Parameters: "", b

#Make predictions
x_new = [[1, 2, 3]]
y_pred = np.dot(x_new, b
print(""Predicted output: "", y_pred",Syntax Error,File I/O
Write a Python program to edit the following code in such a way that the output is increased is increased by one.,"def add_two_numbers(a, b):
    c = a + b
    d = a - b
    total = c + d
    print(total)","def add_two_numbers(a, b):
    c = a + b
    d = a - b
    total = c + d + 1
    print(total)","def add_two_numbers(a, b):
    c = a + b
    d",Incomplete Answer,File I/O
"Create a class in Python to store the names, addresses and age of customers.",,"class Customer:
    def __init__(self, name, age, address):
        self.name = name
        self.age = age
        self.address = address

    def get_details(self):
        return f'Name: {self.name} | Age: {self.age} | Address: {self.address}'","class Customer:
    def __init__(self, name, age, address):
        self.name = name
        self.age = age
        self.address = address

    def get_details(self):
        return f'Name: {self.name} | Age: {self.age} | Address: {self.address}'",correct,String Manipulation
Edit the following Python code to handle unexpected errors.,"def add_numbers(a,b): 
  return a + b","def add_numbers(a,b): 
    try:
        return a + b
    except TypeError as e:
        print(e)
        return None","def add_numbers(a,b): 
    try:
        return a + b
    except TypeError as e:
        print(e)
        return None",correct,Loops
Write a Python script to parse a JSON string and convert it into a dictionary.,"'{""name"": ""GPT"", ""type"": ""AI""}'","import json

json_str = '{""name"": ""GPT"", ""type"": ""AI""}'

dict_x = json.loads(json_str)
print(dict_x)","import json

json_str = '{""name"": ""GPT"", ""type"": ""AI""}'

dict_x = json.loads(json_str)
print(dict_x)",correct,OOP
"Using the Python turtle library, create a drawing of a spider web on the screen.",,"import turtle

# Create a starting point
turtle.setup(400, 400)
turtle.penup()
turtle.backward(150)
turtle.pendown()

# Create the spiderweb
for _ in range(10):
    turtle.forward(50)
    turtle.right(80)

# Hide the turtle
turtle.hideturtle()
turtle.done()","import turtle

# Create a starting point
turtle.setup(400, 400)
turtle.penup()
turtle.backward(150)
turtle.pendown()

# Create the spiderweb
for _ in range(10):
    turtle.forward(50)
    turtle.right(80)

# Hide the turtle
turtle.hideturtle()
turtle.done()",Syntax Error,Loops
Develop a Python program to reverse a list of numbers.,"[1, 2, 3, 4, 5]","def reverse_list(nums):
    """"""Function to reverse a list of numbers.

    Parameters
    ----------
    nums : list
        List of numbers to be reversed.

    Returns
    -------
    reversed_list : list
        Reversed list of numbers.
    """"""

    reversed_list = nums[::-1]

    return reversed_list","def reverse_list(nums):
    """"""Function to reverse a list of numbers.

    Parameters
    ----------
    nums : list
        List of numbers to be reversed.

    Returns
    -------
    reversed_list : list
        Reversed list of numbers.
    """"""

    reversed_list = nums[::-1]

    return reversed_list",Syntax Error,Recursion
Write a function in Python to generate a Fibonacci sequence up to n.,,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b",correct,Recursion
Write a Python program to calculate the Fibonacci number at a particular position.,6,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Program 
if __name__ == ""__main__"": 
    print(Fibonacci(6))","def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Program 
if __name__ == ""__main__"": 
    print(Fibonacci(6))",correct,OOP
Design a web scraper using python to extract information from wikipedia.,,"import requests
from bs4 import BeautifulSoup

web_url = ""https://en.wikipedia.org/wiki/Wikipedia""

web_data = requests.get(web_url).text
soup = BeautifulSoup(web_data,""html.parser"")

for title in soup.find_all(""h1""):
    print(title.string)

for para in soup.find_all(""p""):
    print(para.string)","import requests
from bs4 import BeautifulSoup

web_url = ""https://en.wikipedia.org/wiki/Wikipedia""

web_data = requests.get(web_url).text
soup = BeautifulSoup(web_data,""html.parser"")

for title in soup.find_all(""h1""):
    print(name, title.string)

for para in soup.find_all(""p""):
    print(name, para.string)",Syntax Error,String Manipulation
"Using Python, create an algorithm to identify all prime numbers between 1 and 100.",,"primes = []

for num in range(2, 101):
    is_prime = True
    for i in range(2, num):
        if (num % i == 0):
            is_prime = False
            break
 
    if is_prime:
        primes.append(num)

print(primes)","primes = []

for num in range(2, 101):
    is_prime = True
    for i in range(2, num):
        if (num % i == ",Incomplete Answer,Loops
"Create a class called 'Car' in Python, which instantiates with name, model, and price.",,"class Car:
    def __init__(self, name, model, price):
        self.name = name
        self.model = model
        self.price = price","class Car:
    def __init__(self, name, model, price):
        sel",Incomplete Answer,File I/O
Optimize the following code written in Python such that its time complexity becomes linear.,"def sum(arr):
 total = 0
 for i in range(len(arr)):
 for j in range(i+1, len(arr)):
 total += arr[i] * arr[j]
 return total","def sum(arr):
 total = 0
 for i in range(len(arr)):
 total += arr[i] * (sum(arr[i+1:]) - arr[i])
 return total","def sum(arr):
 total = 0
 for i in range(len(arr)):
 total += arr[i] * (sum(arr[i+1:]) - arr[i])
 return total",Syntax Error,File I/O
Create a sorting algorithm in Python to sort a given array in ascending order.,"[9, 8, 7, 6, 5, 4, 3, 2, 1]","def quicksort(arr): 
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)

print(quicksort([9, 8, 7, 6, 5, 4, 3, 2, 1]))","def quicksort(arr): 
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)

print(quicksort([9, 8, 7, 6, 5, 4, 3, 2, 1]))",correct,OOP
Write python program to find the maximum of 3 numbers and display the result,,"def max_3(n1, n2, n3):
    max = n1
    if n2 > max:
        max = n2
    if n3 > max:
        max = n3
    
    return max

# Example
print(max_3(1, 2, 3))  # Output: 3","def max_3(n1, n2, n3):
    max = n1
    if n2 > max:
        max = n2
    if n3 > max:
        max = n3
    
    return max

# Example
pritn(max_3(1, 2, 3))  # Output: 3",Syntax Error,Loops
Create a Python function to generate a random password of length n,3,"import string
import random

def gen_password(length):
    characters = string.ascii_letters + string.digits + string.punctuation
    password = """"
    for i in range(length):
        password += random.choice(characters)
    return password

result = gen_password(3)
print(result)","import string
import random

def gen_password(length):
    characters = string.ascii_letters + string.digits + string.punctuation
    password = """"
    for i in range(length):
        password += random.choice(characters)
    return password

result = gen_password(3)
pritn(result)",Syntax Error,File I/O
"Create a Python class representing a vehicle with attributes make, model, year, and color.",,"class Vehicle:
    """"""Class representing a vehicle.""""""

    def __init__(self, make, model, year, color):
        """"""Initialize vehicle object with its attributes.""""""
        self.make = make
        self.model = model
        self.year = year
        self.color = color","class Vehicle:
    """"""Class representing a vehicle.""""""

    def __init__(self, make, model, year, color:
        """"""Initialize vehicle object with its attributes.""""""
        self.make = make
        self.model = model
        self.year = year
        self.color = color",Syntax Error,OOP
Write a python program to preprocess a dataset such that each row is a list containing tuples and containing max four columns.,,"import csv

def preprocess_data(in_file):
    '''This function preprocesses a csv file into a list containing tuples with max four columns per row.'''
    with open(in_file) as fin:
        reader = csv.reader(fin)
        data = [line[:4] for line in reader]
        return [tuple(line) for line in data]","import csv

def preprocess_data(in_file):
    '''This function preprocesses a csv file into a list containing tuples with max four columns per row.'''
    with open(in_file) as fin:
        reader = csv.reader(fin)
        data = [line[:4] for line in reader]
        return [tuple(line) for line in data]",correct,Loops
"Write a Python program to create a dictionary with keys a, b, c and their respective values as 1, 2, 3.",,"mydict = {
    'a': 1,
    'b': 2,
    'c': 3 
}","mydict = {
    'a': 1,
    'b': 2,
    'c': 3 
}",correct,String Manipulation
Write code using Python to generate a random password of given length.,Length: 8,"import string
import random

def generate_password(length):
    chars=string.ascii_uppercase + string.ascii_lowercase + string.digits
    return ''.join(random.choice(chars) for i in range(length))

print(generate_password(8))","import string
import random

def generate_password(length)
    chars=string.ascii_uppercase + string.ascii_lowercase + string.digits
    return ''.join(random.choice(chars) for i in range(length))

print(generate_password(8))",Syntax Error,File I/O
Generate a function that increments a given input by one in Python.,,"def increment(x): 
    return x + 1","def increment(x): 
    return x + 1",correct,Recursion
Write a function to convert all possible convertible elements in the list to float.,,"def list_to_float(test_list):
  res = []
  for tup in test_list:
    temp = []
    for ele in tup:
      if ele.isalpha():
        temp.append(ele)
      else:
        temp.append(float(ele))
    res.append((temp[0],temp[1])) 
  return (str(res)) ","def list_to_float(test_list):
  res = []
  for tup in test_list:
    temp = []
    for ele in tup:
      if ele.isalpha():
        temp.append(ele)
      else:
        temp.append(float(ele))
    res.append((temp[0],temp[1])) 
  return (str(res)) ",correct,String Manipulation
Write a python function to find the element that appears only once in a sorted array.,,"def search(arr,n) :
    XOR = 0
    for i in range(n) :
        XOR = XOR ^ arr[i]
    return (XOR)","def search(arr,n) :
    XOR = 0
    for i in range(n) :
        XOR = XOR ^ arr[i]
    return (XOR)",correct,OOP
"Given a multi-dimensional array, write a python code snippet to find the sum of its elements.","arr = [[1, 4, 7], [2, 6, 3], [3, 5, 9]]","# Use nested list comprehension to calculate the sum 
total_sum = sum([sum(row) for row in arr])",# Use nested list comprehension to calculate the,Incomplete Answer,Loops
Develop a python program to add two matrices of the same size.,"X = [[2, 3, 4], 
     [6, 7, 8], 
     [10, 11, 12]]

Y = [[4, 5, 6], 
     [8, 9, 10], 
     [12, 13, 14]]","def add_matrices(X, Y):
    result = [[0 for col in range(len(X[0]))] for row in range(len(X))] # Create a matrix of all 0s
    for i in range(len(X)):
        for j in range(len(X[0])):
            result[i][j] = X[i][j] + Y[i][j]
    return result 

print(add_matrices(X, Y))","def add_matrices(X, Y):
    result = [[0 for col in range(len(X[0]))] for row in range(len(X))] # Create a matrix of all 0s
    for i in range(len(X)):
        for j in range(len(X[0])):
            result[i][j] = X[i][j] + Y[i][j]
    return result 

print(add_matrices(X, Y))",correct,String Manipulation
Write python code to find the sum of all even numbers from 0 to 100.,,"# Function to find the sum of all even numbers from 0 to n
def sum_of_even_numbers(n):
    # Initialize a sum variable
    sum = 0
    # Iterate through all even numbers less than or equal to n
    for i in range(0, n+1, 2):
        sum += i
    # Return the sum
    return sum

# This function is called
sum = sum_of_even_numbers(100)
print(sum)","# Function to find the sum of all even numbers from 0 to n
def sum_of_even_numbers(n):
    # Initialize a sum variable
    sum = 0
    # Iterate through all even numbers less than or equal to n
    for i in range(0, n+1, 2):
        sum += i
    # Return the sum
    return sum

# This function is called
sum = sum_of_even_numbers(100)
print(sum)",correct,File I/O
Write a Python program to compute the sum of the absolute difference of all pairs of numbers in a given array.,"[5, 8, 10, 15]","arr = [5, 8, 10, 15]
Sum = 0

for i in range(len(arr)):
    for j in range(len(arr)):
        if(i != j):
            Sum += abs(arr[i] - arr[j])
            
print(Sum)","arr = [5, 8, 10, 15]
Sum = 0

for i in range(len(arr)):
    for j in range(len(arr))",Incomplete Answer,Loops
Write a python program to calculate the areas of two rectangles and determine which one is larger,"The dimensions of first rectangle are- length=2, width=4
The dimensions of second rectangle are- length=4, width=6","def calculate_area(length, width):
    return length * width

rectangle_1_area = calculate_area(2, 4)
rectangle_2_area = calculate_area(4, 6)

if(rectangle_1_area > rectangle_2_area):
    print(""Rectangle 1 is larger"")
else:
    print(""Rectangle 2 is larger"")","def calculate_area(length, width)
    return length * width

rectangle_1_area = calculate_area(2, 4)
rectangle_2_area = calculate_area(4, 6)

if(rectangle_1_area > rectangle_2_area)
    print(""Rectangle 1 is larger"")
else
    print(""Rectangle 2 is larger"")",Syntax Error,Loops
Output the sum of numbers in a list in Python.,"[1, 2, 3, 4, 5]","def list_sum(inpList):
    sum = 0
    for num in inpList:
        sum += num
    return sum

print(list_sum([1, 2, 3, 4, 5]))","def list_sum(inpList):
    sum = 0
    for num in inpList:
        sum += num
    return sum

print(list_sum([1, 2, 3, 4, 5]))",correct,Loops
Write a function to merge multiple sorted inputs into a single sorted iterator using heap queue algorithm.,,"import heapq
def merge_sorted_list(num1,num2,num3):
  num1=sorted(num1)
  num2=sorted(num2)
  num3=sorted(num3)
  result = heapq.merge(num1,num2,num3)
  return list(result)","import heapq
def merge_sorted_list(num1,num2,num3:
  num1=sorted(num1
  num2=sorted(num2
  num3=sorted(num3
  result = heapq.merge(num1,num2,num3
  return list(result",Syntax Error,Loops
Develop a Python program for reversing the order of a given array.,,"def reverse_array(arr):
  start = 0
  end = len(arr) - 1
  while start < end:
    arr[start], arr[end] = arr[end], arr[start]
    start += 1
    end -= 1
  return arr","def reverse_array(arr):
  start = 0
  end = len(arr) - 1
  while start < end:
    a",Incomplete Answer,String Manipulation
Classify the following text as valid or invalid python code,"sum = 0
sum = sum + 2",Valid,Valid,Incomplete Answer,Loops
Write a Python program to find all the numbers divisible by a certain number within a certain range.,"int m=36, int n=74, int divisor=6","def find_numbers_divisible_by(m, n, divisor):
    divisible_numbers = []
    for i in range(m, n+1):
        if i % divisor == 0:
            divisible_numbers.append(i)
    return divisible_numbers","def find_numbers_divisible_by(m, n, divisor):
    divisible_numbers = []
    for i in range(m, n+1)",Incomplete Answer,File I/O
Generate a Python script to generate n distinct prime numbers.,,"import math

def generate_primes(n): 
    primes = []
    num = 2
    while len(primes) < n: 
        is_prime = True
        for i in range(2, int(math.sqrt(num)) + 1): 
            if num % i == 0: 
                is_prime = False
                break

        if is_prime: 
            primes.append(num)

        num += 1
    
    return primes

n = 8
primes = generate_primes(n)
print(primes)","import math

def generate_primes(n: 
    primes = []
    num = 2
    while len(primes < n: 
        is_prime = True
        for i in range(2, int(math.sqrt(num + 1: 
            if num % i == 0: 
                is_prime = False
                break

        if is_prime: 
            primes.append(num

        num += 1
    
    return primes

n = 8
primes = generate_primes(n
print(primes",Syntax Error,Loops
"Generate a class in Python that takes three parameters: name, age, and gender.",,"class Person:
  def __init__(self, name, age, gender):
    self.name = name
    self.age = age
    self.gender = gender
    
    def display_person(self):
      print(""Name: "" + self.name + ""\nAge: "" + str(self.age) + ""\nGender: "" + self.gender)

person = Person(""John"", 28, ""Male"")
person.display_person()","class Person:
  def __init__(self, name, age, gender):
    self.name = name
    self.age = age
    self.gender = gender
    
    def display_person(self):
      print(""Name: "" + self.name + ""\nAge: "" + str(self.age) + ""\nGender: "" + self.gender)

person = Person(""John"", 28, ""Male"")
person.display_person()",correct,OOP
Code a program in Python to calculate the mean from a dataset,"[0.07, 0.69, 0.29, 0.17, 0.11, 0.51, 0.5]","def calculate_mean(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)
    
dataset = [0.07, 0.69, 0.29, 0.17, 0.11, 0.51, 0.5]
mean = calculate_mean(dataset)
print(mean)  # Output: 0.3542857142857143","def calculate_mean(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)
    
dataset = [0.07, 0.69, 0.29, 0.17, 0.11, 0.51, 0.5]
mean = calculate_mean(dataset)
pritn(mean)  # Output: 0.3542857142857143",Syntax Error,Recursion
Create an algorithm in Python to identify the missing number in a sequence of integers.,"[1,2,4,5]","def missing_number(arr): 
  n = len(arr) 
  total = (n+1)*(n+2)/2
  for i in range(n): 
    total -= arr[i] 
  return total
  
arr = [1,2,4,5]
print(""The missing number is"",int(missing_number(arr)))","def missing_number(arr): 
  n = len(arr) 
  total = (n+1)*(n+2)/2
  for i in range(n): 
    total -= arr[i] 
  return total
  
arr = [1,2,4,5]
pritn(""The missing number is"",int(missing_number(arr)))",Syntax Error,Recursion
Write a Python program to automatically format and validate user input.,,"import re

def validate_input(input):
 # validate pattern:
 pattern = r""^[a-zA-Z]*$""
 # compile regex
 regex = re.compile(pattern)

 # check if input matches pattern
 if(regex.match(input)):
  # format the input
  input = input.lower().capitalize()
  # return formatted input
  return input
 else:
 # return error
 return ""Error: Invalid input""","import re

def validate_input(input)
 # validate pattern
 pattern = r""^[a-zA-Z]*$""
 # compile regex
 regex = re.compile(pattern)

 # check if input matches pattern
 if(regex.match(input))
  # format the input
  input = input.lower().capitalize()
  # return formatted input
  return input
 else
 # return error
 return ""Error Invalid input""",Syntax Error,Loops
"Create a class ""Animal"" in Python with a function ""make_sound"" to print the sound the animal can make.",,"class Animal:
    def __init__(self):
        pass
    
    def make_sound(self):
        print(""The animal makes a sound."")","class Animal:
    def __init__(self):
        pass
    
    def make_sound(self):
        print(name, ""The animal makes a sound."")",Syntax Error,File I/O
Compose a Python function to find all the prime numbers between 1 and 100.,,"def find_primes(x, y):
    result = []
    for num in range(x, y + 1):
        if num > 1:
            isPrime = True
            for i in range(2, num//2 + 1):
                if num % i == 0:
                    isPrime = False
                    break
            if isPrime:
                result.append(num)
    return result","def find_primes(x, y):
    result = []
    for num in range(x, y + 1):
        if num > 1:
            isPrime = True
            for i in range(2, num//2 + 1):
                if num % i == 0:
                    isPrime = False
                    break
            if isPrime:
                result.append(num)
    return result",correct,String Manipulation
Can you write a python program to solve a system of linear equations?,"x + y = 5
2x + y = 8","def solve_linear_equations(a, b, c):
    """"""
    This function takes three parameters: a, b and c, which are the coefficients of a system of linear equations, 
    and returns a tuple of the solution of the system.
    """"""
    x = (c - b) / (a - b)
    y = (5 - a*x) / b
    
    return (x, y)","def solve_linear_equations(a, b, c:
    """"""
    This function takes three parameters: a, b and c, which are the coefficients of a system of linear equations, 
    and returns a tuple of the solution of the system.
    """"""
    x = (c - b / (a - b
    y = (5 - a*x / b
    
    return (x, y",Syntax Error,File I/O
"Create a python function that takes in two arguments x and y, and will print out the multiplication result after adding 1 to x.",,"def multiply_add_one(x, y):
    print(x + 1 * y)","def multiply_add_one(x, y):
    pritn(x + 1 * y)",Syntax Error,Loops
Write a script in Python to send an email using the Gmail SMTP service.,,"import smtplib

sender_email = ""sender@gmail.com""
receiver_email = ""receiver@example.com""
password = 'password'

message = """"""\
Subject: Hi There

This is an email to test the Gmail SMTP service.
""""""

server = smtplib.SMTP('smtp.gmail.com', 587)
server.ehlo()
server.starttls()

server.login(sender_email, password)
server.sendmail(sender_email, receiver_email, message)

server.quit()","import smtplib

sender_email = ""sender@gmail.com""
receiver_email = ""receiver@example.com""
password = 'password'

message = """"""\
Subject: Hi There

This is an email to test the Gmail SMTP servi",Incomplete Answer,File I/O
Generate a Python class to represent a 2D point.,,"class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __str__(self):
        return '({}, {})'.format(self.x, self.y)","class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __str__(self):
        return '({}, {})'.format(self.x, self.y)",Syntax Error,String Manipulation
Create a python class which will contain all the necessary methods to implement the str method.,,"class MyClass:
    
    def __init__(self, *args):
        self.args = args
        
    def __str__(self):
        return 'MyClass({})'.format(', '.join(str(arg) for arg in self.args))","class MyClass:
    
    def __init__(self, *args):
        self.args = args
        
    def __str__(self):
        return 'MyClass({})'.format(', '.join(str(arg) for arg in self.args))",correct,Loops
Create a Python program to edit the following string and make all characters in the string uppercase.,'This is a test string.',"def to_uppercase(input):
    output = """"
    for char in input:
        output += char.upper()
    return output","def to_uppercase(input:
    output = """"
    for char in input:
        output += char.upper(
    return output",Syntax Error,Loops
Create a Python program to remove any items from a given list that are less than 5.,"[1, 4, 6, 8, 10, 15, 20]","my_list = [1, 4, 6, 8, 10, 15, 20]

filtered_list = [item for item in my_list if item >= 5]

print(filtered_list)  # Output: [6, 8, 10, 15, 20]","my_list = [1, 4, 6, 8, 10, 15, 20]

filtered_list = [item for item in my_list if item >= 5]

print(filtered_list)  # Output: [6, 8, 10, 15, 20]",correct,Loops
Create a Python function to print the following star pyramid pattern.,,"def print_star_pyramid(n):
  # Outer loop to handle number of lines
  for i in range(0, n):
    # Inner loop to handle number of columns
    for j in range(0, i+1):
      #  Will print star
      print(""* "", end="""")
    # Line break
    print(""\r"")

# Program to demonstrate star pyramid
n = 5
print_star_pyramid(n)","def print_star_pyramid(n):
  # Outer loop to handle number of lines
  for i in range(0, n):
    # Inner loop to handle number of columns
    for j in range(0, i+1):
      #  Will print star
      print(""* "", end="""")
    # Line break
    print(""\r"")

# Program to demonstrate star pyramid
n = 5
print_star_pyramid(n)",correct,Loops
Write a Python code to print a dictionary where the keys are numbers between 1 and 15 (both included) and the values are square of keys.,,"my_dict ={}
for num in range(1, 16):
    my_dict[num] = num*num

print(my_dict)","my_dict ={}
for num in range(1, 16):
  ",Incomplete Answer,Recursion
Create a method to generate a random integer between 0 and 10 (inclusive) in Python.,,"import random 
  
def random_int(): 
    return random.randint(0, 10)","import random 
  
def random_int(): 
    return random.randint(0, 10)",Syntax Error,Loops
Rewrite the existing code to edit the contents of an existing Python dictionary.,"language_dict = {
    'English': 'Hello', 
    'Spanish': 'Hola', 
    'Japanese': 'Konnichiwa'
    }","language_dict = {
    'English': 'Hi', 
    'Spanish': 'Hola', 
    'Japanese': 'Konnichiwa'
    }
    
def edit_dict(dictionary, key, value):
    dictionary[key] = value","language_dict = {
    'English': 'Hi', 
    'Spanish': 'Hola', 
    'Japanese': 'Konn",Incomplete Answer,Recursion
Implement a CRUD (Create Read Update Delete) system in Python.,,"class CRUD:
    def __init__(self):
        self.records = []
    
    def create(self,data):
        record = data
        self.records.append(record)
    
    def read(self):
        return self.records
 
    def update(self,index,data):
        self.records[index] = data
 
    def delete(self,index):
        self.records.pop(index)","class CRUD:
    def __init__(self):
        self.records = []
    
    def create(self,data):
        record = data
        self.records.append(record)
    
    def read(self):
        return self.records
 
    def update(self,index,data):
        self.records[index] = data
 
    def delete(self,index):
        self.records.pop(index)",correct,Recursion
Optimize a given Python program by reducing the running time.,"def sum_of_numbers(n):
   s = 0
   for i in range(1,n+1):
       s = s + i
   return s","def sum_of_numbers(n):
    return int(n * (n + 1) / 2)","def sum_of_numbers(n)
    return int(n * (n + 1) / 2)",Syntax Error,Recursion
"Create a function in Python to execute the following rule: given an array of integers, find the pair of adjacent elements that has the largest sum and print the sum.","[5, 0, -1, 7, 20]","def find_largest_sum(lst):
    largest_sum = 0
    for i in range(len(lst) - 1):
        current_sum = lst[i] + lst[i+1]
        if current_sum > largest_sum:
            largest_sum = current_sum
    return largest_sum","def find_largest_sum(lst):
    largest_sum = 0
    for i in range(len(lst) - 1):
        current_sum = lst[i]",Incomplete Answer,Loops
Create a Python program to die arbitary shape black and white using matplotlib,,"import matplotlib.pyplot as plt

# Generating random coordinates
x = np.random.randint(0,100,100)
y = np.random.randint(0,100,100)

# Use the coordinates to plot a black and white shape
plt.scatter(x, y, c='black')
plt.fill_between(x, y, color='white')
plt.show()","import matplotlib.pyplot as plt

# Generating random coordinates
x = np.random.randint(0,100,100)
y = np.random.randint(0,100,100)

# Use the coordinates to plot a black and white shape
plt.scatter(x, y, c='black')
plt.fill_between(x, y, color='white')
plt.show()",Syntax Error,Recursion
Generate a Python program to compare two given dictionaries and output a dictionary with elements common in both.,"dict1 = {'a': 25, 'b': 14, 'c': 18, 'd': 7}
dict2 = {'b': 17, 'c': 18, 'e': 10, 'f': 11}","def compare_dicts(dict1, dict2):
    common_elements = {}
    for key1, value1 in dict1.items():
        for key2, value2 in dict2.items():
            if key1 == key2:
                common_elements[key1] = value1
    return common_elements","def compare_dicts(dict1, dict2):
    common_elements = {}
    for key1, value1 in dict1.items():
        for key2, value2",Incomplete Answer,String Manipulation
Build a Python program to take a given list and create a dictionary with the elements and their corresponding indices.,"L=[""a"",""b"",""c""]","def create_dict(L):
    dict = {}
    for i in range(len(L)): 
        dict[L[i]] = i
    return dict

dict_list = dict(create_dict([""a"",""b"",""c""]))
print(dict_list)","def create_dict(L):
    dict = {}
    for i in range(len(L)): 
        dict[L[i]] ",Incomplete Answer,File I/O
Write a python function to find the digit distance between two integers.,,"def digit_distance_nums(n1, n2):
         return sum(map(int,str(abs(n1-n2))))","def digit_distance_nums(n1, n2):
         return sum(map(int,str(abs(n1-n2))))",Syntax Error,File I/O
Solve this basic algebra problem in Python.,5x - 4 = 35,x = (35 + 4)/5,x = (35 + 4)/5,Syntax Error,Loops
Generate a Python program to calculate the Mean Absolute Error (MAE) of a given dataset.,,"def mae(data): 
  # Calculate the mean of the data
  mean = sum(data) / len(data) 

  # Calculate the absolute difference of the data values from the mean
  abs_differences = [abs(value - mean) for value in data] 

  # Calculate the mean absolute error
  mae = sum(abs_differences) / len(abs_differences) 

  return mae","def mae(data): 
  # Calculate the mean of the data
  mean = sum(data) / len(data) 

  # Calculate the absolute difference of the data values from the mean
  abs_differences = [abs(value - mean) for value in data] 

  # Calculate the mean absolute error
  mae = sum(abs_differences) / len(abs_differences) 

  return mae",correct,OOP
Design a function in Python that takes two lists as input and returns the elements in common.,"list1 = [2, 3, 4, 5]
list2 = [1, 2, 4, 5]","list1 = [2, 3, 4, 5]
list2 = [1, 2, 4, 5]

def common_elements(list1, list2):
    result = []
    for item in list1:
        if item in list2:
            result.append(item)
    return result

print(common_elements(list1, list2))","list1 = [2, 3, 4, 5]
list2 = [1, 2, 4, 5]

def common_elements(list1, list2):
    result = []
    for item in list1",Incomplete Answer,OOP
Optimize the above Python program to calculate the sum of a given array of numbers for better performance.,"[1, 2, 3, 4]","import numpy as np

def sum(arr):
 return np.sum(arr)

sum([1,2,3,4]) # 10","import numpy as np

def sum(arr):
 return np.sum(arr)

sum([1,2,3,4]) # 10",Syntax Error,Loops
Create a Python function to select all rows from a table where the 'status' is 'approved',,"def select_approved_rows():
   sql = ""SELECT * FROM table WHERE status = 'approved'""
   cur.execute(sql)
   return cur.fetchall()","def select_approved_rows():
   sql = ""SELECT * FROM table WHERE ",Incomplete Answer,Recursion
Write a python function to check whether two given lines are parallel or not.,,"def parallel_lines(line1, line2):
  return line1[0]/line1[1] == line2[0]/line2[1]","def parallel_lines(line1, line2):
  return line1[0]/line1[1] == line2[0]/line2[1]",correct,OOP
Design a Python program to remove duplicate characters from a given string.,,"def remove_duplicate_characters(string):
    new_string = ''
    new_string_set = set()
    for character in string:
        if character not in new_string_set:
            new_string += character
            new_string_set.add(character)
    return new_string","def remove_duplicate_characters(string):
    new_string = ''
    new_string_set = set()
    for character in string:
        if character not in new_string_set:
            new_string += character
            new_string_set.add(character)
    return new_string",Syntax Error,File I/O
Edit the given Python code to convert a list of temperatures in Fahrenheit to a list of temperatures in Celsius.,"temperatures_fahrenheit = [32, 64, 78, -10]","temperatures_fahrenheit = [32, 64, 78, -10]

temperatures_celsius = [((temp-32)*5)/9 for temp in temperatures_fahrenheit]
print(temperatures_celsius)","temperatures_fahrenheit = [32, 64, 78, -10]

temperatures_celsius = [((temp-32)*5)/9 for temp in temperatures_fahrenheit]
print(temperatures_celsius)",correct,Recursion
Write a python program to convert a string to int and float.,,"# define a string
string = ""12345""

# convert string to int
integer = int(string)

# convert string to float
floating = float(string)

# print results
print(""String: "", string)
print(""Integer: "", integer)
print(""Float: "", floating)

# Output
# String: 12345
# Integer: 12345
# Float: 12345.0","# define a string
string = ""12345""

# convert string to int
integer = int(string)

# convert string to float
floating = float(string)

# print re",Incomplete Answer,OOP
Generate a 2-dimensional array with 7 columns and 5 rows in Python.,,"import numpy as np 
  
# creating 2-dimensional array 
arr = np.array([[0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0]]) 
  
# displaying the array 
print (""2-dimensional array is:: "", arr)","import numpy as np 
  
# creating 2-dimensional array 
arr = np.array([[0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0]]) 
  
# displaying the array 
print (""2-dimensional array is:: "", arr)",Syntax Error,File I/O
Create a Python program to compute the sum of all integers from 1 to n.,Provide n: 10,"# compute sum of all numbers from 1 to n
def compute_sum(n):
 sum = 0
 
 for i in range(1, n+1):
 sum += i
 
 return sum
 
print(compute_sum(10))","# compute sum of all numbers from 1 to n
def compute_sum(n):
 sum = 0
 
 for i in range(1, n+1):
 sum += i
 
 return sum
 
print(name, compute_sum(10))",Syntax Error,Loops
Generate a Python implementation for these pseudocode.,"Repeat Steps 1 and 2 until no unscanned barcodes remain. 
  1. Scan a barcode.
  2. Print the name of its product.","def print_product_names():
    unscanned_barcodes = [barcodes] #list of unscanned barcodes

    while len(unscanned_barcodes) > 0:
        barcode = unscanned_barcodes.pop(0)
        product_name = scan_barcode(barcode) #function that returns product name
        print(product_name)","def print_product_names():
    unscanned_barcodes = [barcodes] #list of unscanned barcodes

    while len(unscanned_barcodes) > 0:
        barcode = unscanned_barcodes.pop(0)
        product_name = scan_barcode(barcode) #function that returns product name
        print(product_name)",correct,File I/O
Design an algorithm in Python that will accept an array of integers and return an array with alternate elements removed starting from the even indices.,"[1, 2, 3, 4, 5, 6]","def alternating_elements(arr):
    new_arr = [arr[i] for i in range(0, len(arr), 2)]
    return new_arr

result = alternating_elements([1, 2, 3, 4, 5, 6])
print(result) #[2, 4, 6]","def alternating_elements(arr):
    new_arr = [arr[i] for i in range(0, len(arr), 2)]
    ",Incomplete Answer,Loops
Develop a Python script to extract the minimum of two numbers.,Two numbers: 2 and 5,"def min(num1, num2):
    if num1 < num2:
        return num1
    else:
        return num2

print(min(2, 5))","def min(num1, num2):
    if num1 < num2:
        return num1
    else:
        return num2

print(min(2, 5))",correct,String Manipulation
Output the factorial of a given number in Python.,4,"def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n-1)

print(factorial(4))","def factorial(n):
if n == 0 or n == 1:
    return 1
else:
    return n * factorial(n-1)

print(factorial(4))",Syntax Error,String Manipulation
Create a Python program to find all the common elements between two given lists in a single line of code.,"List1 = [1, 2, 3, 4, 5] 
List2 = [5, 6, 7, 8, 9]",common_list = [element for element in List1 if element in List2],common_list = [element for element in List1 if element in List2],correct,Recursion
Create a Python program that takes a list of integers and prints out the total number of times that the number 7 appears in the list.,"[1, 2, 3, 4, 5, 7, 7, 8, 9]","def count_7(nums):
  count = 0
  for num in nums:
    if num == 7:
      count += 1
  return count","def count_7(nums)
  count = 0
  for num in nums
    if num == 7
      count += 1
  return count",Syntax Error,Loops
Generate a Python program which converts a given number of hours into minutes,20,"def hours_to_minutes(hours):
    minutes = hours * 60
    return minutes

minutes = hours_to_minutes(20)
print(minutes)","def hours_to_minutes(hours):
    minutes = hours * 60
    r",Incomplete Answer,OOP
Generate a Python program to partition a given array into two parts such that every element in first part is less or equal than the elements in the second part.,"[1, 9, 0, 5, 2]","def partition(arr):
  pivot = arr[0]
  i = 0
  j = len(arr) - 1

  while i <= j:
   while arr[i] < pivot:
    i += 1
   while arr[j] > pivot:
    j -= 1

   if i <= j:
    arr[i], arr[j] = arr[j], arr[i] 
    i +=1
    j -= 1

  return arr

print(partition([1, 9, 0, 5, 2]))","def partition(arr):
  pivot = arr[0]
  i = 0
  j = len(arr) - 1

  while i <= j:
   while arr[i] < pivot:
    i += 1
   while arr[j] > pi",Incomplete Answer,OOP
Create a program in Python to print out the elements in a list in reverse order.,"List = [""A"", ""B"", ""C"", ""D""]","list = [""A"", ""B"", ""C"", ""D""]

for i in range(len(list)-1, -1, -1):
    print(list[i])","list = [""A"", ""B"", ""C"", ""D""]

for i in range(len(list)-1, -1, -1):
    pritn(list[i])",Syntax Error,String Manipulation
"In Python, create a method that can take two integers and return their sum.","3, 8","def sum_ints(int1, int2):
    return int1 + int2","def sum_ints(int1, int2):
    return int1 + int2",correct,Loops
Write a Python function to remove a specific element from a list.,"list = [10,20,30,40]","def remove_element(list, element):
    for i in range(len(list)):
        if list[i] == element:
            del list[i]
            break
    return list

list = remove_element(list,40)","def remove_element(list, element)
    for i in range(len(list))
        if list[i] == element
            del list[i]
            break
    return list

list = remove_element(list,40)",Syntax Error,File I/O
Create a program in Python that prints out the first 100 Fibonacci numbers.,,"a, b = 0, 1
 
# print the first 100 Fibonacci numbers
for i in range(100):
    print(a, end=' ')
    a, b = b, a + b","a, b = 0, 1
 
# print the first 100 Fibonacci numbers
for i in range(100):
    print(a, end=' ')
    a, b = b, a + b",correct,String Manipulation
Compose a python program to identify the characters in a given alphabet,alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',"alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

def identify_characters(alphabet):
    char_list = []
    for c in alphabet:
        char_list.append(c)
    return char_list","alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

def identify_characters(alphabet):
    cha",Incomplete Answer,String Manipulation
Classify a list of words into their corresponding part of speech using Python.,"[""happy"", ""run"", ""went"", ""like""]","pos_tags = nltk.pos_tag([""happy"", ""run"", ""went"", ""like""])
for tag in pos_tags:
    print(f'{tag[0]}: {tag[1]}')

# Output 
# happy: JJ
# run: VB
# went: VBD
# like: IN","pos_tags = nltk.pos_tag([""happy"", ""run"", ""went"", ""like""]
for tag in pos_tags:
    print(f'{tag[0]}: {tag[1]}'

# Output 
# happy: JJ
# run: VB
# went: VBD
# like: IN",Syntax Error,Loops
Find the Fibonacci sequence of a given number using a Python program.,var n = 10;,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"")
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else:
        return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Program 
print(Fibonacci(n))","def Fibonacci(n): 
    if n<0: 
        pritn(""Incorrect input"")
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else:
        return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Program 
pritn(Fibonacci(n))",Syntax Error,Recursion
"Given a language (example: Python), write a function to convert a string (example: ""Hello World!) to a list.",Python,"def str_to_list(string):
    return string.split(' ')","def str_to_list(string):
return string.split(' ')",Syntax Error,String Manipulation
Implement a Queue data structure in Python.,,"class Queue:
  def __init__(self):
    self.items = []

  def is_empty(self):
    return self.items == []

  def enqueue(self, item):
    self.items.insert(0, item)

  def dequeue(self):
    return self.items.pop()

  def size(self):
    return len(self.items)","class Queue:
  def __init__(self):
    self.items = []

  def is_empty(self):
    return self.items == []

  def enqueue(self, item):
    self.items.insert(0, item)

  def dequeue(self):
    return self.items.pop()

  def size(self):
    return len(self.items)",correct,String Manipulation
Write a Python program to generate a two-dimensional array of Boolean values with alternating True and False values.,Size of the 2-D array: 5 x 5,"def generate_alternating_2d_array(n):
 arr = []
 prev_value = False
 for i in range(n):
  row = []
  for j in range(n):
   cur_value = not prev_value
   row.append(cur_value)
   prev_value = cur_value 
  arr.append(row)
 return arr

arr = generate_alternating_2d_array(5)
for row in arr:
 print(row)","def generate_alternating_2d_array(n):
 arr = []
 prev_value = False
 for i in range(n):
  row = []
  for j in range(n):
   cur_value = not prev_value
   row.append(cur_value)
   prev_value = cur_value 
  arr.append(row)
 return arr

arr = generate_alternating_2d_array(5)
for row in arr:
 print(row)",correct,File I/O
Create a function in Classical Python to extract the hostname from a given URL,"url = ""http://www.example.com/index.html""","def get_hostname(url):
    hostname = url.split(""/"")[2]
    return hostname

hostname  = get_hostname(url)
print(hostname)","def get_hostname(url)
    hostname = url.split(""/"")[2]
    return hostname

hostname  = get_hostname(url)
print(hostname)",Syntax Error,File I/O
Develop an object orientated program in Python to generate random numbers.,Range: 10-50,"import random

class RandNumGenerator:
    def __init__(self, low, high):
        self.low = low
        self.high = high
    
    def generate_rand_num(self):
        return random.randint(self.low, self.high)

if __name__ == '__main__':
    gen = RandNumGenerator(10, 50)
    print(gen.generate_rand_num())","import random

class RandNumGenerator:
    def __init__(self, low, high):
        self.low = low
        self.high = high
    
    def generate_rand_num(s",Incomplete Answer,String Manipulation
"Given a list of strings, write a Python program to find the string which has the maximum length","list1 = ['cat', 'primate', 'monkey']","def max_length(list1): 
	return max(list1, key=len) 

list1 = ['cat', 'primate', 'monkey']
print(""String with maximum length is : "", max_length(list1))","def max_length(list1): 
	return max(list1, key=len) 

list1 = ['cat', 'primate', 'monkey']
print(""String with maximum length is : "", max_length(list1))",correct,Recursion
Create a function in Python that takes two strings as an input and returns their concatenation.,"str1 = ""Hello""
str2 = ""World""","def concat_string(str1, str2):
    return str1 + str2

result = concat_string(str1, str2)
print(result)","def concat_string(str1, str2):
    return str1 + st",Incomplete Answer,Recursion
Write a function to find common index elements from three lists.,,"def extract_index_list(l1, l2, l3):
    result = []
    for m, n, o in zip(l1, l2, l3):
        if (m == n == o):
            result.append(m)
    return result","def extract_index_list(l1, l2, l3):
result = []
for m, n, o in zip(l1, l2, l3):
    if (m == n == o):
        result.append(m)
return result",Syntax Error,String Manipulation
Design a function in Python that takes an integer and returns its opposite in sign.,,"def opposite_int(num):
  return -1 * num","def opposite_int(num):
  return -1 * num",correct,String Manipulation
Generate a Python function that takes two strings as arguments and returns a sorted version of the strings.,,"def sort_strings(str1, str2): 
    str1 = sorted(str1)
    str2 = sorted(str2)
    return str1, str2","def sort_strings(str1, str2): 
    str1 = sorted(s",Incomplete Answer,Recursion
Write a python program to calculate the sum of the divisors of a number,n = 15,"def sum_divisors(n):
    '''Returns the sum of all divisors of the given number.'''
    if n <= 1:
        return 0
    #assume n is a positive integer
    sum_divisors = 1
    for i in range(2, int(n/2)+1):
        if n % i == 0:
            sum_divisors += i
    return sum_divisors","def sum_divisors(n):
    '''Returns the sum of all divisors of the given number.'''
    if n <= 1:
        return 0
    #assume n is a positive integer
    sum_divisors = 1
    for i in range(2, int(n/2)+1):
        if n % i == 0:
            sum_divisors += i
    return sum_divisors",Syntax Error,OOP
Create a Python program to print out all the combination of a given set of numbers.,"[1, 2, 3]","def combinations(arr):
    res = []
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            res.append([arr[i], arr[j]])
    return res

print(combinations([1, 2, 3]))","def combinations(arr):
    res = []
    for i in range(len(arr)):
        for j in range(i + 1, l",Incomplete Answer,String Manipulation
Create a Python script to encode a given message using the Caesar cipher.,"Message: ""Hello World""
Shift: 5","def caesar_cipher(message, shift):
 encrypted_message = """"
 for char in message:
 charIndex = ord(char)
 encryptedIndex = charIndex + shift
 if encryptedIndex <= 255:
 encrypted_message += chr(encryptedIndex)
 else:
 encrypted_message += chr(encryptedIndex - 255)
 return encrypted_message

print(caesar_cipher(""Hello World"", 5)) # prints Mjqqt Btwqi","def caesar_cipher(message, shift):
 encrypted_message = """"
 for char in message:
 charIndex = ord(char)
 encryptedIndex = charIndex + shift
 if encryptedIndex <= 255:
 encrypted_message += chr(encryptedIndex)
 else:
 encrypted_message += chr(encryptedIndex - 255)
 return encrypted_message

print(caesar_cipher(""Hello World"", 5)) # prints Mjqqt Btwqi",Syntax Error,String Manipulation
"Create a Python class called Department with three instance variables: name, employees, and budget.",,"class Department:
 def __init__(self, name, employees=[], budget=0):
  self.name = name
  self.employees = employees
  self.budget = budget

 def set_name(self, name):
  self.name = name

 def add_employee(self, employee):
  self.employees.append(employee)

 def set_budget(self, budget):
  self.budget = budget","class Department
 def __init__(self, name, employees=[], budget=0)
  self.name = name
  self.employees = employees
  self.budget = budget

 def set_name(self, name)
  self.name = name

 def add_employee(self, employee)
  self.employees.append(employee)

 def set_budget(self, budget)
  self.budget = budget",Syntax Error,Recursion
"Create a virtual environment using Python with the name ""myenv""",,python -m venv myenv,python -m venv myenv,correct,OOP
Write a Python program to remove duplicate characters of a given string.,"""bufferoverflow""","def remove_duplicate_characters(string):
    result = """"
    seen = set()
    for char in string:
        if char not in seen:
            seen.add(char)
            result += char
    return result

print(remove_duplicate_characters(""bufferoverflow""))","def remove_duplicate_characters(string):
    result = """"
    seen = set()
    for char in string:
        if char not in seen:
            seen.add(char)
            result += char
    return result

print(remove_duplicate_characters(""bufferoverflow""))",correct,File I/O
Create a binary search algorithm in Python that searches an input array for a certain number.,"A = [1,2,3,4,5,6,7,8,9]","def binarySearch(A, x):
 start = 0
 end = len(A) - 1

 while start <= end:
  mid = (start + end) // 2

  if A[mid] == x:
   return mid
  elif A[mid] > x:
   end = mid - 1
  else:
   start = mid + 1

return -1","def binarySearch(A, x:
 start = 0
 end = len(A - 1

 while start <= end:
  mid = (start + end // 2

  if A[mid] == x:
   return mid
  elif A[mid] > x:
   end = mid - 1
  else:
   start = mid + 1

return -1",Syntax Error,Recursion
Translate the Python code below into C# code.,"def is_even(n):
 return n % 2 == 0","private bool IsEven(int n)
{
    return n % 2 == 0;
}","private bool IsEven(int n)
{
return n % 2 == 0;
}",Syntax Error,Recursion
Construct a for loop in Python to iterate over a list of strings and print each string.,,"for word in list_of_strings:
    print(word)","for word in list_of_strings:
    print(name, word)",Syntax Error,OOP
Write a Python program to modify a given dataset for a specific task.,"Dataset:
{
    ""name"": ""John"", 
    ""age"": 20, 
    ""height"": 180
}

Task:
Filter the person's records if they are over the age of 18.","def modify_data(dataset, task):
modified_data = []
 if task == ""filter age >18"":
 for d in dataset:
 if d['age'] > 18:
 modified_data.append(d)
 return modified_data","def modify_data(dataset, task:
modified_data = []
 if task == ""filter age >18"":
 for d in dataset:
 if d['age'] > 18:
 modified_data.append(d
 return modified_data",Syntax Error,File I/O
Create a class to represent a door in a Python program.,,"class Door:
    #Initializing a door with default values
    def __init__(self, is_open=False, color=""brown"", material=""wood""):
        self.is_open = is_open
        self.color = color
        self.material = material

    #Function to open door 
    def open_door(self):
        self.is_open = True

    #Function to close door 
    def close_door(self):
        self.is_open = False","class Door
    #Initializing a door with default values
    def __init__(self, is_open=False, color=""brown"", material=""wood"")
        self.is_open = is_open
        self.color = color
        self.material = material

    #Function to open door 
    def open_door(self)
        self.is_open = True

    #Function to close door 
    def close_door(self)
        self.is_open = False",Syntax Error,String Manipulation
Write a Python program to create a dataframe from a given dictionary of lists.,"data = {
    'name': ['John', 'Mark', 'Tom'],
    'age': [21, 18, 20]
}","import pandas as pd

data_df = pd.DataFrame(data)

print(data_df)","import pandas as pd

data_df = pd.DataFrame(data

print(data_df",Syntax Error,Recursion
Round an input float to two decimal places in Python.,8.374,"num = 8.374
rounded_num = round(num, 2)
print(rounded_num)","num = 8.374
rounded_num = round(num, 2)
print(rounded_num)",correct,File I/O
Create a Python program to zip two lists of same size into one dictionary.,"list1 = [1,2,3]
list2 = [4,5,6]","list1 = [1,2,3]
list2 = [4,5,6]
 
zip_dict = dict(zip(list1, list2))
print(zip_dict) # {1: 4, 2: 5, 3: 6}","list1 = [1,2,3]
list2 = [4,5,6]
 
zip_dict = dict(zi",Incomplete Answer,File I/O
Solve the following problem using python,"Given a list of strings, return a list of string where each string is replaced by its length","def replace_by_length(list_of_strings):
    final_list = []
    for string in list_of_strings:
        final_list.append(len(string))
    return final_list

if __name__ == ""__main__"":
    list_of_strings = [""hello"", ""world"", ""coding""]
    print(replace_by_length(list_of_strings))","def replace_by_length(list_of_strings):
final_list = []
for string in list_of_strings:
    final_list.append(len(string))
return final_list

if __name__ == ""__main__"":
list_of_strings = [""hello"", ""world"", ""coding""]
print(replace_by_length(list_of_strings))",Syntax Error,String Manipulation
Develop a program in Python to find the second largest element in a given array.,"[10, 11, 8, 9, 20]","def second_largest(arr):
    first = max(arr[0], arr[1])
    second = min(arr[0], arr[1])
 
    for i in range(2, len(arr)):
        if arr[i] > first:
            second = first
            first = arr[i]
        elif arr[i] > second and arr[i] != first:
            second = arr[i]
 
    return second","def second_largest(arr):
    first = max(arr[0], arr[1])
    second = min(arr[0], arr[1])
 
    for i in range(2, len(arr)):
        if arr[i] > first:",Incomplete Answer,OOP
Write a function to find whether all the given tuples have equal length or not.,,"def find_equal_tuple(Input, k):
  flag = 1
  for tuple in Input:
    if len(tuple) != k:
      flag = 0
      break
  return flag
def get_equal(Input, k):
  if find_equal_tuple(Input, k) == 1:
    return (""All tuples have same length"")
  else:
    return (""All tuples do not have same length"")","def find_equal_tuple(Input, k):
  flag = 1
  for tuple in Input:
    if len(tuple) != k:
      flag = 0
      break
  return flag
def get_equal(I",Incomplete Answer,File I/O
Create a class in Python that can represent a 3D point with the given fields.,x y and z coordinates,"class Point3D:
  def __init__(self, x, y, z):
    self.x = x
    self.y = y
    self.z = z

  def __str__(self):
    return 'Point3D is at {x}, {y}, {z}'.format(x = self.x, y = self.y, z = self.z)","class Point3D:
  def __init__(self, x, y, z):
    self.x = x
    self.y = y
    self.z = z

  def __str__(self):
    return 'Point3D is at {x}, {y}, {z}'.format(x = self.x, y = self.y, z = self.z)",Syntax Error,Recursion
Create a Python script that sends a GET request to a specified URL and prints out the response.,,"import requests

url = 'http://example.com/'

r = requests.get(url)

print('Status code:', r.status_code)
print('Response text:
', r.text)","import requests

url = 'http//example.com/'

r = requests.get(url)

print('Status code', r.status_code)
print('Response text
', r.text)",Syntax Error,File I/O
Create an interactive CLI tool with Python that takes in student names and adds them to a list.,,"import sys

# init an empty list
students = []

# ask for user input
while True:
 student_name = input('Please enter a student name: ')
 
 if student_name.strip() == '':
  break
 students.append(student_name.strip())

print('The following students have been added to the list:')
for student in students:
 print(student)

sys.exit()","import sys

# init an empty list
students = []

# ask for user input
while True:
 student_name = input('Please enter a student name: ')
 
 if student_name.strip() == '':
  break
 students.append(student_name.strip())

print(name, 'The following students have been added to the list:')
for student in students:
 print(name, student)

sys.exit()",Syntax Error,File I/O
Write a Python program to sort a given list of dictionaries by a specific key in the dictionary.,,"def sort_dict_by_key(dict_list, key):
    return sorted(dict_list, key=lambda k: k[key])","def sort_dict_by_key(dict_list, key):
    re",Incomplete Answer,Loops
Create an array of 100 randomly generated integers using Python.,,"import random 

my_array = [random.randint(1, 100) for _ in range(100)]","import random 

my_array = [random.randint(1, 100) for _ in range(100)]",correct,String Manipulation
Create an HTTP GET request in Python.,,"import requests

resp = requests.get(""http://example.com"")","import requests

resp = requests.get(""http://example.com"")",Syntax Error,Loops
"Create a Python program that takes a list and returns a dictionary with the elements from the list as keys, and their frequency as values.","my_list = [1,1,2,3,4,4,4,4,5,6]","my_dict = {}

for item in my_list:
    if item not in my_dict:
        my_dict[item] = 0
    my_dict[item] += 1

print(my_dict) # {1: 2, 2: 1, 3: 1, 4: 4, 5: 1, 6: 1}","my_dict = {}

for item in my_list:
    if item not in my_dict:
        my_dict[item] = 0
    my_dict[item] += 1

print(my_dict) # {1: 2, 2: 1, 3: 1, 4: 4, 5: 1, 6: 1}",correct,Loops
Write a function to find the nested list elements which are present in another list.,,"def intersection_nested_lists(l1, l2):
    result = [[n for n in lst if n in l1] for lst in l2]
    return result","def intersection_nested_lists(l1, l2):
    result = [[n ",Incomplete Answer,Recursion
"Given a list and an integer, write a Python function to return a sublist of the list with the given integer.","[1, 2, 3, 4, 5, 6, 7], 2","def get_sublist(lst, n):
    return [lst[i:i+n] for i in range(0,len(lst),n)]","def get_sublist(lst, n):
    return [l",Incomplete Answer,Loops
Create a function in Python that prints out all prime numbers between 1 and a given number.,,"def print_primes(n):
  for num in range(2, n + 1):
      isPrime = True
      for i in range(2, num):
          if (num % i == 0):
              isPrime = False
      if isPrime:
          print(num)","def print_primes(n:
  for num in range(2, n + 1:
      isPrime = True
      for i in range(2, num:
          if (num % i == 0:
              isPrime = False
      if isPrime:
          print(num",Syntax Error,Recursion
Create a function in Python to print out all of the stuff in a given dictionary.,,"def print_dict(dict):
 for key in dict:
   print(key,"":"", dict[key])","def print_dict(dict):
 for key in ",Incomplete Answer,File I/O
Write a function to find maximum run of uppercase characters in the given string.,,"def max_run_uppercase(test_str):
  cnt = 0
  res = 0
  for idx in range(0, len(test_str)):
    if test_str[idx].isupper():
      cnt += 1
    else:
      res = cnt
      cnt = 0
  if test_str[len(test_str) - 1].isupper():
    res = cnt
  return (res)","def max_run_uppercase(test_str)
  cnt = 0
  res = 0
  for idx in range(0, len(test_str))
    if test_str[idx].isupper()
      cnt += 1
    else
      res = cnt
      cnt = 0
  if test_str[len(test_str) - 1].isupper()
    res = cnt
  return (res)",Syntax Error,OOP
Design an algorithm in Python to find the longest substring without repeating characters.,"String = ""codefortesting""","def longestSubstringWithoutRepeatingCharacters(str):
    maxLength = 0
    hashMap = dict()
    start = 0

    for i in range(len(str)):
        if str[i] in hashMap:
            start = max(hashMap[str[i]], start)

        maxLength = max(maxLength, i - start + 1)
        hashMap[str[i]] = i + 1

    return maxLength","def longestSubstringWithoutRepeatingCharacters(str)
    maxLength = 0
    hashMap = dict()
    start = 0

    for i in range(len(str))
        if str[i] in hashMap
            start = max(hashMap[str[i]], start)

        maxLength = max(maxLength, i - start + 1)
        hashMap[str[i]] = i + 1

    return maxLength",Syntax Error,OOP
Build a Python function that takes a single list of numbers and performs an insertion sort. The function should return a sorted list.,"[4, 1, 8, 11, 15]","def insertion_sort(arr):  
    for i in range(1, len(arr)): 
    
        key = arr[i] 

        j = i-1
        while j >= 0 and key < arr[j] : 
                arr[j + 1] = arr[j] 
                j -= 1
        arr[j + 1] = key 

    return arr

insertion_sort([4,1,8,11,15])

# Output  [1, 4, 8, 11, 15]","def insertion_sort(arr):  
    for i in range(1, len(arr)): 
    
        key = arr[i] 

        j = i-1
        while j >= 0 and key < arr[j] : 
                arr[j + 1] = arr[j] 
                j -= 1
        arr[j + 1] = key 

    return arr

insertion_sort([4,1,8,11,15])

# Output  [1, 4, 8, 11, 15]",correct,File I/O
Create a simple Python function for calculating the Fibonacci numbers.,,"def fibonacci(n): 
 if n == 0:
 return 0
 elif n == 1:
 return 1
 else:
 return fibonacci(n - 1) + fibonacci(n - 2)","def fibonacci(n): 
 if n == 0:
 return 0
 elif n == 1:
 r",Incomplete Answer,OOP
Write a Python program to calculate the total electricity bill given the rate per kwh for domestic loads.,"rate = 40
consumption (kwh) = 300","def calculate_bill(rate, consumption):
    bill = rate * consumption
    print(""Your total electricity bill is Rs. {}"".format(bill))

calculate_bill(40, 300)","def calculate_bill(rate, consumption):
    bill = rate * consumption
    print(""Your total electricity bill is Rs. {}"".format(bill))

calculate_bill(40, 300)",correct,OOP
Create a function in Python to generate a Fibonacci series up to a given number.,50,"def fibonacci(num):
    a = 0
    b = 1
    if num == 1:
        print(a)
    elif num == 2:
        print(a,b)
    else:
        print(a,b, end="" "")
        for i in range(2,num):
            c = a + b
            a = b
            b = c
            print(b, end="" "")

fibonacci(50) # output: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181","def fibonacci(num):
    a = 0
    b = 1
    if num == 1:
        print(a)
    elif num == 2:
        print(a,b)
    else:
        print(a,b, end="" "")
        for i in range(2,num):
            c = a + b
            a = b
            b = c
            print(b, end="" "")

fibonacci(50) # output: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181",correct,OOP
Edit this Python code to scale the inputs before applying a regression model.,"X = np.array([[1,2],[2,1],[3,4],[6,7]])
y = np.array([1.1,2.2,3.3,4.4])
model = LinearRegression().fit(X, y)","X = preprocessing.scale(np.array([[1,2],[2,1],[3,4],[6,7]]))
y = np.array([1.1,2.2,3.3,4.4])
model = LinearRegression().fit(X, y)","X = preprocessing.scale(np.array([[1,2],[2,1],[3,4],[6,7]]
y = np.array([1.1,2.2,3.3,4.4]
model = LinearRegression(.fit(X, y",Syntax Error,Recursion
Write a Python function to find the intersection of two given sets.,"set1 = [1, 2, 3, 4], set2 = [2, 3, 4, 5]","def intersection(set1, set2): 
    return [i for i in set1 if i in set2]","def intersection(set1, set2): 
    r",Incomplete Answer,Recursion
Create a program in Python to find all pairs of elements in a list with the given difference.,"[9, 4, 7, 5], 4","def find_pair_with_difference(list, difference):
    result = []
    for i in range(len(list)):
        for j in range(i+1, len(list)):
            if list[j] - list[i] == difference:
                result.append((list[i], list[j]))
    return result

list=[9, 4, 7, 5]
difference = 4
result = find_pair_with_difference(list, difference)
print(result)","def find_pair_with_difference(list, difference):
    result = []
    for i in range(len(list)):
        for j in range(i+1, len(list)):
            if list[j] - list[i] == diff",Incomplete Answer,Recursion
Create a Python program to generate random numbers between 1 and 10 of a specified length.,Length = 6,"import random
def generate_random_nums(length):
  lst = []
  for _ in range(length):
    lst.append(random.randint(1, 10))
  return lst","import random
def generate_random_nums(length):
  lst = []
  for _ in range(length):
    lst.append(random.randint(1, 10))
  return lst",Syntax Error,File I/O
Generate random strings of fixed length in Python.,,"import random 
import string

def generate_random_string(length):
    return ''.join(random.choices(string.ascii_letters + string.digits,k=length))

generate_random_string(8); //Output: 'K5h5get6'","import random 
import string

def generate_random_string(length):
    return ''.join(random.choices(string.ascii_letters + string.digits,k=length))

generate_random_string(8); //Output: 'K5h5get6'",correct,String Manipulation
Generate a program in Python to convert a list of integers into a single integer.,"list = [1, 2, 3, 4]","def list_to_int(list_of_ints):
 number = 0
 for int in list_of_ints:
  number = number*10 + int
 return number","def list_to_int(list_of_ints):
 number = 0
 for int in list_of_ints:
  number = number*10 + int
 return number",correct,OOP
Write a Python script to generate the Fourier transform of a given signal.,,"from scipy.fftpack import fft 
 
def fourier_transform(signal):
 
    # length of the signal
    N = len(signal)
 
    # calculate fourier transform (complex numbers list)
    fourier = fft(signal)
 
    return fourier","from scipy.fftpack import fft 
 
def fourier_transform(signal):
 
# length of the signal
N = len(signal)
 
# calculate fourier transform (complex numbers list)
fourier = fft(signal)
 
return fourier",Syntax Error,String Manipulation
Create a Python program for converting Celsius to Fahrenheit.,,"def celsiusToFahrenheit(celsius):
 return (9/5)*celsius + 32",def celsiusToFahrenheit(celsiu,Incomplete Answer,OOP
Perform set theory operations using Python.,"A = {1, 2, 3}
B = {2, 3, 4}","A = {1, 2, 3}
B = {2, 3, 4}

# Union of Sets
C = A.union(B) 
print(C) 

# Intersection of Sets 
C = A.intersection(B) 
print(C) 

# Difference of Sets 
C = A.difference(B) 
print(C)","A = {1, 2, 3}
B = {2, 3, 4}

# Union of Sets
C = A.union(B) 
print(C) 

# Intersection of Sets 
C = A.intersection(B) 
print(C) 

# Difference of Sets 
C = A.difference(B) 
print(C)",correct,OOP
Develop a Python code to print the current date and time.,,"import datetime

dateTimeObj = datetime.datetime.now()

print('Current Date and Time:', dateTimeObj)","import datetime

dateTimeObj = datetime.datetime.n",Incomplete Answer,Loops
Implement a lazy evaluation pattern for a function in Python.,,"class lazy_evaluation:
 def __init__(self, func):
 self.func = func

 def __call__(self, *args, **kwargs):
 result = self.func(*args, **kwargs)
 return result

@lazy_evaluation
def add(a, b):
 return a + b

result = add(2, 3)
print(result)","class lazy_evaluation:
 def __init__(self, func):
 self.func = func

 def __call__(self, *args, **kwargs):
 result = self.func(*args, **kwargs)
 return result

@lazy_evaluation
def add(a, b):
 return a + b

result = add(2, 3)
pritn(result)",Syntax Error,Recursion
Design an API for a Python script that returns the average of any given list of numbers.,"[1, 4, 5, 7, 8]","# Create API endpoint
@app.route('/api/average', methods=['POST'])
def average():
    # Get data from request
    data = request.get_json()

    # Calculate average
    avg = np.mean(data)

    # Return result
    return jsonify({'result': avg})","# Create API endpoint
@app.route('/api/average', methods=['POST'])
def average():
# Get data from request
data = request.get_json()

# Calculate average
avg = np.mean(data)

# Return result
return jsonify({'result': avg})",Syntax Error,Recursion
Write a Python function to generate the concatenation of two inputs strings.,"string1 = ""Hello ""
string2 = ""World!""","def concatenate_string(string1, string2):
    return string1 + string2

string1 = ""Hello ""
string2 = ""World!""

concatenated_string = concatenate_string(string1, string2)
print(concatenated_string)","def concatenate_string(string1, string2):
return string1 + string2

string1 = ""Hello ""
string2 = ""World!""

concatenated_string = concatenate_string(string1, string2)
print(concatenated_string)",Syntax Error,OOP
Create a Python module that converts a temperature in Celsius to Fahrenheit.,,"def celsius_to_fahrenheit(celsius): 
  return (celsius * 9/5) + 32","def celsius_to_fahrenheit(celsius) 
  return (celsius * 9/5) + 32",Syntax Error,Recursion
Generate a Python code for finding the sum and difference of two numbers.,"7, 9","# Function to calculate the sum and difference
def sum_difference(num1, num2):
    sum = num1 + num2
    difference = num1 - num2
    return sum, difference

# Calculating the sum and difference 
x,y = sum_difference(7,9)

# Print the results 
print(""Sum:"", x)
print(""Difference:"", y)","# Function to calculate the sum and difference
def sum_difference(num1, num2):
    sum = num1 + num2
    difference = num1 - num2
    return sum, difference

# Calculating the sum and difference 
x,y = sum_difference(7,9)

# Print the results 
pritn(""Sum:"", x)
pritn(""Difference:"", y)",Syntax Error,OOP
Edit a given Python code to return the maximum number in the given array.,"arr = [7, 8, 2, 4]","def findMax(arr):
    max = arr[0]
    for num in arr:
        if num > max:
            max = num
    return max

print(findMax(arr))","def findMax(arr):
    max = arr[0]
    for num in arr:
        if num > max:
            max = num
    return max

print(name, findMax(arr))",Syntax Error,Loops
Generate a script to send an email using Python.,"email: test@example.com
subject: test
content: Hello World","import smtplib

sender = 'test@example.com'
receiver = 'test@example.com'
subject = 'test'
message = 'Hello World'

try:
 smtpObj = smtplib.SMTP('localhost')
 smtpObj.sendmail(sender, receiver,
  ""Subject: "" + subject + ""\n"" + message)
 print(""Successfully sent email"")
except Exception as e:
 print(""Error: unable to send email"")","import smtplib

sender = 'test@example.com'
receiver = 'test@example.com'
subject = 'test'
message = 'Hello World'

try:
 smtpObj = smtplib.SMTP('localhost')
 smtpObj.sendmail(sender, receiver,
  ""Subject: "" + subject + ""\n"" + message)
 print(""Successfully sent email"")
except Exception as e:
 print(""Error: unable to send email"")",correct,Recursion
Create a graphical representation of a given string using Python.,Hello World!,"import matplotlib.pyplot as plt 

# initializing string
string = ""Hello World!""

# declaring x, yaxis 
X = range(len(string)) 
Y = [ord(i) for i in string] 

# making a graph 
plt.plot(X, Y) 
plt.title('Graphical representation of String : ' + string) 

plt.show()","import matplotlib.pyplot as plt 

# initializing string
string = ""Hello World!""

# declaring x, yaxis 
X = range(len(string)) 
Y = [ord(i) for i in string] 

# making a graph 
plt.plot(X, Y) 
plt.title('Graphical representation of String : ' + string) 

plt.show()",Syntax Error,Recursion
Generate a Python script to delete every second word in a string.,,"def delete_every_second_word(input):
    words = input.split()
    output = """"
    
    for i, word in enumerate(words):
        if i % 2 == 0:
            output += word + "" ""
    
    return output.strip()","def delete_every_second_word(input)
    words = input.split()
    output = """"
    
    for i, word in enumerate(words)
        if i % 2 == 0
            output += word + "" ""
    
    return output.strip()",Syntax Error,Loops
Create a function that takes two strings as its inputs and returns true if one of the two strings is a substring of the other.,"""python"", ""java""","def is_substring(string1, string2):
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i] == string2[j]:
                return True
    return False

result = is_substring(""python"", ""java"")
print(result)","def is_substring(string1, string2):
    for i in range(len(string1)):
        for j in range(len(string2)):
            if s",Incomplete Answer,File I/O
Create a Python generator that generates the odd numbers between 0 and given n.,n = 10,"def oddNumbers(n):
    for i in range(0, n + 1):
        if i % 2 != 0:
            yield i

n = 10
for num in oddNumbers(n):
    print(num)","def oddNumbers(n):
    for i in range(0, n + 1):
        if i % 2 != 0:
            yield i

n = 10
for num in oddNumbers(n):
    print(num)",correct,String Manipulation
Write a Python script to search through a list of strings and find if any of the strings contain a substring.,"list = [""who"", “are”, “you”, “looking”, “for”]
substring = ""you""","def search_for_substring(list, substring):
    for item in list:
        if substring in item:
            return True
    return False

result = search_for_substring(list, substring)
print(result) # True","def search_for_substring(list, substring):
    for item in list:
        if substring in item:
       ",Incomplete Answer,File I/O
Create an algorithm in Python that prints out all permutations of a given set of numbers.,,"def permutation(nums):
    if len(nums) == 1:
        return [nums]

    perm_list = [] 
    for i in range(len(nums)):
       m = nums[i] 

       remLst = nums[:i] + nums[i+1:] 

       for p in permutation(remLst): 
           perm_list.append([m] + p) 
    return perm_list","def permutation(nums):
    if len(nums) == 1:
        return [nums]

    perm_list = [] 
    for i in range(len(nums)):
       m = nums[i] 

       remLst = nums[:i] + nums[i+1:] 

       for p in permutation(remLst): 
           perm_list.append([m] + p) 
    return perm_list",correct,String Manipulation
Modify the given code such that a python list of strings is created based on the input.,"lst = [1, 2, 3]","lst_strs = []
for i in lst:
    lst_strs.append(str(i))","lst_strs = []
for i in lst:
lst_strs.append(str(i))",Syntax Error,String Manipulation
Write a function to sort a given matrix in ascending order according to the sum of its rows.,,"def sort_matrix(M):
    result = sorted(M, key=sum)
    return result","def sort_matrix(M):
    result = s",Incomplete Answer,Loops
Modify a basic Python algorithm to increase the speed of the program.,"list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def faster_sum(arr):
 total = 0
 # looping over the array and adding the elements
 # to the variable total
 for i in range(0, len(arr)):
 total += arr[i]
 return total

list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# using the faster_sum() function
result = faster_sum(list_of_numbers)
print(result)","def faster_sum(arr:
 total = 0
 # looping over the array and adding the elements
 # to the variable total
 for i in range(0, len(arr:
 total += arr[i]
 return total

list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# using the faster_sum( function
result = faster_sum(list_of_numbers
print(result",Syntax Error,String Manipulation
Generate a Python program to read a dataset into memory.,,"import pandas as pd

def read_data(filename):
    return pd.read_csv(filename)","import pandas as pd

def read_data(file",Incomplete Answer,Recursion
Create a Python program to generate a random password at least eight characters long.,,"import string
import random

def gen_password(length):
    all_chars = string.ascii_letters + string.digits + string.punctuation
    generated_password = ''.join(random.choice(all_chars) for _ in range(length))
    return generated_password

if __name__ == '__main__': 
    password = gen_password(8)
    print(password)","import string
import random

def gen_password(length):
    all_chars = string.ascii_letters + string.digits + string.punctuation
    generated_password = ''.join(random.choice(all_chars) for _ in range(length))
    return generated_password

if __name__ == '__main__': 
    password = gen_password(8)
    print(password)",correct,OOP
Generate a python program that takes input as a string and prints out each word in the string in reverse order.,This is an example.,"# Take input
text = input('Enter a string: ')

# Split string into words
words = text.split(' ') 

# Reverse order
words.reverse() 

# Print
for word in words:
 print(word)","# Take input
text = input('Enter a string: ')

# Split string into words
words = text.",Incomplete Answer,Loops
Develop a Python program for converting feet to meters.,,"def feet_to_meters(feet):
    return feet * 0.3048

feet = 10
meters = feet_to_meters(feet)

print('{} feet is equal to {} meters.'.format(feet, meters))","def feet_to_meters(feet):
    return feet * 0.3048

feet = 10
meters = feet_to_meters(feet)

print('{} feet is equal to {} meters.'.format(feet, meters))",correct,String Manipulation
Construct a Python script to find the average of three numbers.,"10, 20, 30","def find_average(a, b, c):
  return (a + b + c) / 3

result = find_average(10, 20, 30)
print(result) # 20","def find_average(a, b, c):
  return (a + b + c) / 3

result = find_average(10, 20, 30)
print(result) # 20",Syntax Error,File I/O
Design a python program that calculates a person's BMI (body mass index).,,"def calculate_bmi(weight, height):
    bmi = weight/(height**2)
    return bmi","def calculate_bmi(weight, height):
    bmi = weight/(height**2)
    return bmi",correct,Loops
Generate a Python function to calculate the sum of the first 100 positive natural numbers,,"def sum_first_100_natural_numbers():
 total = 0
 for i in range(1,101):
 total += i
 return total

# example
print(sum_first_100_natural_numbers()) # output: 5050","def sum_first_100_natural_numbers():
 total = 0
 for i in range(1,101):
 total += i
 return total

# example
print(sum_first_100_natural_numbers()) # output: 5050",correct,Loops
"Rewrite the following JavaScript code in Python:

for (let i = 1; i <= 10; i++) {
 console.log(i);
}",,"for i in range(1, 11):
 print(i)","for i in range(1, 11):
 print(i)",correct,Loops
Write Python code snippets that will convert comma separated values to a list of dictionaries.,"name,age
Albert,22
Bob,24
Charles,20","csv_data = [
 {'name': 'Albert', 'age': 22},
 {'name': 'Bob', 'age': 24},
 {'name': 'Charles', 'age': 20}
]","csv_data = [
 {'name': 'Albert', 'age': 22},
 {'name': 'Bob', 'age': 24},
 {'name': 'Charles', 'age': 20}
]",correct,OOP
"Given a 2D array of integers, write a Python function that returns the sum of all values in the array.","[[1, 2], [3, 4], [5, 6]]","def sum2dArray(arr):
    two_d_sum = 0
    for sub_arr in arr:
        for elem in sub_arr:
            two_d_sum += elem
    return two_d_sum

arr = [[1,2], [3,4], [5,6]]
result = sum2dArray(arr)
print(result) # 21","def sum2dArray(arr):
    two_d_sum = 0
    for sub_arr in arr:
        for elem in sub_arr:
            two_d_sum += elem
    return two_d_sum

arr = [[1,2], [3,4], [5,6]]
result = sum2dArray(arr)
print(name, result) # 21",Syntax Error,File I/O
Enhance the following Python code for saving a webpage to a local directory.,"import urllib.request

def save_webpage(url, path):
 urllib.request.urlretrieve(url, path)","import urllib.request
from urllib.parse import urlparse
import os

def save_webpage(url, path):
 parsed_url = urlparse(url)
 path = os.path.join(path, parsed_url.netloc + parsed_url.path)
 if not os.path.exists(os.path.dirname(path)):
 os.makedirs(os.path.dirname(path))
 urllib.request.urlretrieve(url, path)","import urllib.request
from urllib.parse import urlparse
import os

def save_webpage(url, path):
 parsed_url = urlparse(url)
 path = os.path.join(path, parsed_url.netloc + parsed_url.path)
 if not os.path.exists(os.path.dirname(path)):
 os.makedirs(os.path.dirname(path))
 urllib.request.urlretrieve(url, path)",correct,Loops
Create a python code to remove duplicates from a given list while preserving the order.,,"def remove_duplicates(data):
    """"""Removes duplicates from a given list while preserving the order.""""""
    seen = set()
    result = []
    for x in data:
        if x not in seen:
            seen.add(x)
            result.append(x)
    return result","def remove_duplicates(data):
    """"""Removes duplicates from a given list while preserving the order.""""""
    seen = set()
    r",Incomplete Answer,String Manipulation
Predict the output for the following Python code snippet.,"a = [1, 2, 3, 4]
b = [2, 4, 5, 7]","c = [3, 6, 8, 11]","c = [3, 6, 8, 11]",Syntax Error,Recursion
Write a function to perform the adjacent element concatenation in the given tuples.,,"def concatenate_elements(test_tup):
  res = tuple(i + j for i, j in zip(test_tup, test_tup[1:]))
  return (res) ","def concatenate_elements(test_tup):
  res = tuple(i + j for i, j in zip(test_tup, test_tup[1:]))
  return (res) ",Syntax Error,String Manipulation
Write a Python program create a string made of the first and last two characters from a given string.,,"def substring(str):
    if len(str) < 3:
        return
    else:
        return str[:2] + str[-2:]

substring(""hello"")","def substring(str):
    if len(str) < 3:
        return
    else:
        return str[:2] + str[-2:]

substring(""hello"")",Syntax Error,OOP
Create a class in Python which takes an employee name and salary as parameters and prints them.,"Employee Name: John Smith, Salary: 5000","class Employee:
    def __init__(self, name, salary):
        self.name = name
        self.salary = salary
    
    def print_employee_details(self):
        print('Employee Name: {}, Salary: {}'.format(self.name, self.salary))

employee = Employee('John Smith', 5000)
employee.print_employee_details()","class Employee
    def __init__(self, name, salary)
        self.name = name
        self.salary = salary
    
    def print_employee_details(self)
        print('Employee Name {}, Salary {}'.format(self.name, self.salary))

employee = Employee('John Smith', 5000)
employee.print_employee_details()",Syntax Error,Recursion
Generate a text-based progress bar using Python.,,"import sys 

def progress_bar(iteration, total, length=50, fill='█'):
    iteration = iteration + 1
    percent = (""{0:.1f}"").format(100 * (iteration / float(total)))
    filledLength = int(length * iteration // total)
    bar = fill * filledLength + '-' * (length - filledLength)
    sys.stdout.write('\r |{}| {}% {}'.format(bar,percent, ""Complete""))
    sys.stdout.flush()","import sys 

def progress_bar(iteration, total, length=50, fill='█'):
    iteration = iteration + 1
    percent = (""{0:.1f}"").format(100 * (iteration / float(total)))
    filledLength = int(length * iteration // total)
    bar = fill * filledLength + '-' * (length - filledLength)
    sys.stdout.write('\r |{}| {}% {}'.format(bar,percent, ""Complete""))
    sys.stdout.flush()",correct,File I/O
Implement a method in Python to round off any given number to the nearest integer.,5.66,"def roundNum(num): 
    if (num - int(num)) >= 0.5: 
        return int(num) + 1
    else: 
        return int(num) 
  
num = 5.66
roundedNum = roundNum(num) 
print(roundedNum)","def roundNum(num): 
    if (num - int(num)) >= 0.5: 
        return int(num) + 1
    else: 
        return int(num) 
  
num = 5.66
roundedNum = roundNum(num) 
print(name, roundedNum)",Syntax Error,OOP
Transform the following piece of code in C to Python.,"int a = 10;
int b = 13;

int c = a * b;","a = 10
b = 13

c = a * b","a = 10
b = 13

c = a * b",correct,Recursion
Design a Python script to remove duplicate elements of an array.,"[10, 1, 2, 5, 1, 10, 3]","def remove_duplicates(list):
    result = []
    for value in list:
        if value not in result:
            result.append(value)
    return result

list = [10, 1, 2, 5, 1, 10, 3]
result = remove_duplicates(list) 
print(result) # Output: [10, 1, 2, 5, 3]","def remove_duplicates(list):
    result = []
    for value in list:
        if value not in result:
            result.append(value)
    return result

list = [10, 1, 2, 5, 1, 10, 3]
result = remove_duplicates(list) 
print(result) # Output: [10, 1, 2, 5, 3]",correct,Recursion
"Convert the following string to a list of individual elements in Python: ""apple,orange,banana"".",,"list = [""apple"", ""orange"", ""banana""]","list = [""apple"", """,Incomplete Answer,String Manipulation
Create a program in python to count the occurences of a given word in a sentence.,"sentence = ""This is a sample sentence for the purpose of the example. ""
keyword = ""example""","#Defining the sentence and keyword
sentence = ""This is a sample sentence for the purpose of the example. ""
keyword = ""example""

#Counting the occurences
count = sentence.count(keyword)

#Printing the result
print(""The keyword appears "" + str(count) + "" time(s) in the sentence."")","#Defining the sentence and keyword
sentence = ""This is a sample sentence for the purpose of the example. ""
keyword = ""example""

#Counting the occurences
count = sentence.count(keyword)

#Printing the result
print(""The keyword appears "" + str(count) + "" time(s) in the sentence."")",Syntax Error,OOP
Write a Python function that takes a string as input and counts the number of occurrences of each character in that string.,String: 'python',"def count_characters(string):
    counts = {}
    for s in string:
        counts[s] = counts.get(s, 0) + 1
    return counts

result = count_characters('python')
print(result)","def count_characters(string):
    counts = {}
    for s in string:
        counts[s] = counts.get(s, 0) + 1
    return counts

result = count_characters('python')
print(result)",correct,File I/O
Write a function to check whether the given number is armstrong or not.,,"def armstrong_number(number):
 sum = 0
 times = 0
 temp = number
 while temp > 0:
           times = times + 1
           temp = temp // 10
 temp = number
 while temp > 0:
           reminder = temp % 10
           sum = sum + (reminder ** times)
           temp //= 10
 if number == sum:
           return True
 else:
           return False","def armstrong_number(number):
 sum = 0
 times = 0
 temp = number
 while temp > 0:
           times = times + 1
           temp = temp // 10
 temp = number
 while temp > 0:
           reminder = temp % 10
           sum = sum + (reminder ** times)
           temp //= 10
 if number == sum:
           return True
 else:
           return False",correct,Loops
Generate a code in Python to find the maximum sum subarray of size k.,"arr = [1, 4, 2, 10, 2, 3, 1, 0, 20]
k = 4","def maxSubArraySum(arr, k): 
    n = len(arr) 
    max_sum = 0
  
    for i in range(n - k + 1): 
        window_sum = sum(arr[i : k + i]) 
        max_sum = max(max_sum, window_sum) 
  
    return max_sum
  
  
arr = [1, 4, 2, 10, 2, 3, 1, 0, 20] 
k = 4
print(maxSubArraySum(arr, k))","def maxSubArraySum(arr, k): 
    n = len(arr) 
    max_sum = 0
  
    for i in range(n - k + 1): 
        window_sum = sum(arr[i : k + i]) 
        max_sum = max(max_sum, window_sum) 
  
    return max_sum
  
  
arr = [1, 4, 2, 10, 2, 3, 1, 0, 20] 
k = 4
print(name, maxSubArraySum(arr, k))",Syntax Error,File I/O
Write a python function to find the frequency of the smallest value in a given array.,,"def frequency_Of_Smallest(n,arr): 
    mn = arr[0] 
    freq = 1
    for i in range(1,n): 
        if (arr[i] < mn): 
            mn = arr[i] 
            freq = 1
        elif (arr[i] == mn): 
            freq += 1
    return freq ","def frequency_Of_Smallest(n,arr): 
    mn = arr[0] 
    freq = 1
    for i in range(1,n): 
        if (arr[i] < mn): 
            mn = arr[i] 
            freq = 1
        elif (arr[i] == mn): 
            freq += 1
    return freq ",Syntax Error,String Manipulation
Create an algorithm in Python to search for a particular string in a given text.,,"def search(query, text):
  n = len(query)
  result = []
  # Loop through the text
  for i in range(len(text)): 
    # Compare the current n characters of the text 
    # with the query string
    if text[i: i + n] == query: 
      # If matches, append the current index of text to 
      # the result 
      result.append(i) 
  # Return the list of indices  
  return result","def search(query, text:
  n = len(query
  result = []
  # Loop through the text
  for i in range(len(text: 
    # Compare the current n characters of the text 
    # with the query string
    if text[i: i + n] == query: 
      # If matches, append the current index of text to 
      # the result 
      result.append(i 
  # Return the list of indices  
  return result",Syntax Error,Recursion
Write a Python program to optimize the following code snippet so that it runs faster,"n = 10
arr = []
for i in range(n):
  arr.append(i * i)
print(arr)","def optimizeCode():
  n = 10
  arr = [i * i for i in range(n)]
  print(arr)

optimizeCode()","def optimizeCode():
  n = 10
  arr = [i * i for i in range(n)]
  print(name, arr)

optimizeCode()",Syntax Error,Recursion
Create a Python script to access a database and query a table.,,"import sqlite3

# Create or open a database
conn = sqlite3.connect('database.db')

# Create a cursor
c = conn.cursor()

# Execute a query
c.execute(""SELECT * FROM `table_name`;"")

# Get the result
rows = c.fetchall()

# Iterate over the result
for row in rows:
 print(row)

# Close the connection
c.close()
conn.close()","import sqlite3

# Create or open a database
conn = sqlite3.connect('database.db')

# Create a cursor
c = conn.cursor()

# Execute a query
c.execute(""SELECT * FROM `table_name`;"")

# Get the result
rows = c.fetchall()

# Iterate over the result
for row in rows:
 pritn(row)

# Close the connection
c.close()
conn.close()",Syntax Error,OOP
Translate the above Java program into Python program.,,"for a in range(1, 26):
    for b in range(1, 26):
        for c in range(1, 26):
            if (a*a + b*b == c*c and a+b+c == 25):
                print(""Pythagorean triplet: "" + str(a) + "", "" + str(b) + "", "" + str(c))","for a in range(1, 26):
    for b in range(1, 26):
        for c in range(1, 26):
            if (a*a + b*b == c*c and a+b+c == 25):
                print(""Pythagorean triplet: "" + str(a) + "", "" + str(b) + "", "" + str(c))",correct,OOP
Create a K means clustering algorithm in Python.,,"import numpy as np
from sklearn.cluster import KMeans

def KMeansCluster(features, clusters):
    kmeans = KMeans(n_clusters=clusters, random_state=0).fit(features)
    return kmeans.labels_
    
if __name__ == ""__main__"":
    features = np.array([[ 1.8 ,2.4],[ 3.2, 1.3], [ 1.1 , 8.2], [ 8.2, 1.2]])
    clusters = 2    
    print(KMeansCluster(features, clusters))","import numpy as np
from sklearn.cluster import KMeans

def KMeansCluster(features, clusters):
    kmeans = KMeans(n_clusters=clusters, random_state=0).fit(features)
    return kmeans.labels_
    
if __name__ == ""__main__"":
    features = np.array([[ 1.8 ,2.4],[ 3.2, 1.3], [ 1.1 , 8.2], [ 8.2, 1.2]])
    clusters = 2    
    print(KMeansCluster(features, clusters))",correct,String Manipulation
Produce a Python code to calculate the sum of two squares given x and y as input.,,"def sum_squares(x, y):
    return x**2 + y**2

x = 2
y = 4
s = sum_squares(x, y)
print(""The sum of two squares is {}"".format(s))","def sum_squares(x, y):
    return x**2 + y**2

x = 2
y = 4
s = sum_squares(x, y)
print(""The sum of two squares is {}"".format(s))",correct,Loops
Implement a KNN classifier in Python.,,"import pandas as pd 
import numpy as np
from sklearn.neighbors import KNeighborsClassifier

#Load the data
df = pd.read_csv('dataset.csv')
#Split the labels and independent variables
x = df.iloc[:,:-1].values
y = df.iloc[:,-1].values

# Fit KNN algorithm on the dataset
knn = KNeighborsClassifier(n_neighbors=5, metric='euclidean')
knn.fit(x,y)","import pandas as pd 
import numpy as np
from sklearn.neighbors import KNeighborsClassifier

#Load the data
df = pd.read_csv('dataset.csv')
#Split the labels and independent variables
x = df.iloc[:,:-1].values
y = df.iloc[:,-1].values

# Fit KNN algorithm on the dataset
knn = KNeighborsClassifier(n_neighbors=5, metric='euclidean')
knn.fit(x,y)",Syntax Error,Loops
Generate a code for creating a new python dictionary with the keys and values specified,"Keys: [""name"", ""age"", ""occupation""]
Values: [""John"", 25, ""Engineer""]","""""""
This code creates a new dictionary with the specified keys and values 
""""""

my_dict = {
    ""name"" : ""John"",
    ""age"" : 25,
    ""occupation"" : ""Engineer""
}","""""""
This code creates a new dictionary with the specified keys and values 
""""""

my_dict = {
    ""name"" : ""John"",
    ""age"" : 25,
    ""occupation"" : ""Engineer""
}",correct,File I/O
Take an input string and write a python program to determine if it is a palindrome.,racecar,"def isPalindrome(s):
 left, right = 0, len(s) - 1
 while left < right:
 if s[left] != s[right]:
 return False
 left += 1
 right -= 1
 return True

s = ""racecar""
print(isPalindrome(s))  # True","def isPalindrome(s):
 left, right = 0, len(s) - 1
 while left < right:
 if s[left] != s[right]:",Incomplete Answer,String Manipulation
Write a Python program to randomly select an item from a list.,"list_of_names = [""John"", ""Anna"", ""Bill"", ""Kim"", ""Claire""]","import random

list_of_names = [""John"", ""Anna"", ""Bill"", ""Kim"", ""Claire""]
random_name = random.choice(list_of_names)

print(f'Randomly selected name from the list: {random_name}')","import random

list_of_names = [""John"", ""Anna"", ""Bill"", ""Kim"", ""Claire""]
random_name = random.choice(list_of_names)

print(f'Randomly selected name from the list: {random_name}')",correct,OOP
Write a function to determine if the given number is an Armstrong number in Python.,,"def is_armstrong(num): 
    n = len(str(num)) 
    total = 0
    temp = num
    while temp > 0:
        digit = temp % 10
        total += digit**n
        temp //= 10
    if num == total:
        return True
    else:
        return False","def is_armstrong(num): 
    n = len(str(num)) 
    total = 0
    temp = num
    while temp > 0:
        digit = temp % ",Incomplete Answer,OOP
Write a Python function to take a list of words and return a dictionary of word counts.,,"def word_counts(words):
    counts = {}
    for word in words:
        if word in counts:
            counts[word] += 1
        else:
            counts[word] = 1
    return counts","def word_counts(words):
    counts = {}
    for word in words:
        if word in counts:
            counts[word] += 1
        else:
            counts[word] = 1
    return counts",Syntax Error,Loops
Write a Python program to remove all duplicated words from a given input string.,"sentence = ""This is a sentence with some duplicate words in it.""","sentence_words = sentence.split("" "")
 
unique_words = set(sentence_words)
 
print("" "".join(unique_words))","sentence_words = sentence.split("" "")
 
unique_words = set(sentence_words)
 
pritn("" "".join(unique_words))",Syntax Error,OOP
Create a Python program to retrieve the longest string from an array of strings,"names = ['John', 'Paul', 'George', 'Ringo']","def get_longest_string(names):
    longest_string = ''
    for name in names:
        if len(name) > len(longest_string):
            longest_string = name
    return longest_string","def get_longest_string(names):
    longest_string = ''
    for name in names:
        if len(name) > len(longest_string):
            longest_string = name
    return longest_string",correct,OOP
Design a Python program to find the area and perimeter of a circle.,r = 4,"def area_perimeter_circle(radius):
    """"""Function to return the area and perimeter of a circle""""""
    area = 3.14 * (radius ** 2)
    perimeter = 2 * 3.14 * radius
    return area, perimeter

# Driver code
radius = 4

area, perimeter = area_perimeter_circle(radius)

print(f'Area of the circle is {area} and Perimeter of the circle is {perimeter}')","def area_perimeter_circle(radius):
    """"""Function to return the area and perimeter of a circle""""""
    area = 3.14 * (radius ** 2)
    perimeter = 2 * 3.14 * radius
    return area, perimeter

# Driver code
radius = 4

area, perimeter = area_perimeter_circle(radius)

print(f'Area of the circle is {area} and Perimeter of the circle is {perimeter}')",correct,Loops
"Generate a random number between two given numbers, using Python.","min_range = 30
max_range = 100","""""""
Generate a random number between two given numbers, using Python
""""""

import random

def random_number(min_range, max_range):
    return random.randrange(min_range, max_range)

print(random_number(30, 100))","""""""
Generate a random number between two given numbers, using Python
""""""

import random

def random_number(min_range, max_range):
return random.randrange(min_range, max_range)

print(random_number(30, 100))",Syntax Error,OOP
Write a Python program to determine the number of elements in a given array before the return value is -1.,"Array = [2, 3, -1, 5, 4, 7]","def countElements(Array): 
    count = 0
    for i in Array: 
        if i != -1: 
            count = count + 1
        else: 
            break
    return count","def countElements(Array: 
    count = 0
    for i in Array: 
        if i != -1: 
            count = count + 1
        else: 
            break
    return count",Syntax Error,String Manipulation
"Create a Python program to read in a list of numbers and output a list that contains, for every even number, the list of odd numbers that sum up to it.","inputList = [4, 6, 10, 8]","def sumOfOdds(inputList):
 result = []
 for num in inputList: 
  if (num % 2 == 0): 
   for i in range(1, num): 
    if (i % 2 != 0): 
     if (num == i + (num - i)):
      result.append([i, num - i])
 
 return result
 
# Driver code
inputList = [4, 6, 10, 8]
 
print(sumOfOdds(inputList))","def sumOfOdds(inputList):
 result = []
 for num in inputList: 
  if (num % 2 == 0): 
   for i in range(1, num): 
    if (i % 2 != 0): 
     if (",Incomplete Answer,File I/O
"Create a class in Python for a given Job object with properties like title, company, location, and job type.",,"class Job:
    def __init__(self, title, company, location, job_type):
        self.title = title
        self.company = company
        self.location = location
        self.job_type = job_type","class Job:
    def __init__(self, title, company, location, job_type):
        self.title = title",Incomplete Answer,File I/O
Design a personal database in Python to store Customer's details.,,"class CustomerDatabase:
    def __init__(self):
        self.customers = []
   
    def add_customer(self, customer):
        self.customers.append(customer)
   
    def get_customer(self, id):
        for customer in self.customers:
            if customer.id == id:
                return customer
        return None
   
    def get_all_customers(self):
        return self.customers","class CustomerDatabase:
    def __init__(self):
        self.customers = []
   
    def add_customer(self, customer):
        self.customers.append(customer)
   
    def get_customer(self, id):
        for customer in self.customers:
            if customer.id == id:
                return customer
        return None
   
    def get_all_customers(self):
        return self.customers",correct,String Manipulation
Generate a program in Python that takes in a string and returns its reverse.,,"def reverse_string(string): 
    return string[::-1]",def reverse_string(string),Incomplete Answer,File I/O
Create a Python program that prints a number sequence of the Fibonacci series up to 15.,,"def fibonacci(n):
    a, b = 0, 1
    while a < n:
        print(a, end=' ')
        a, b = b, a+b
    print()

fibonacci(15)","def fibonacci(n):
    a, b = 0, 1
    while a < n:
        pri",Incomplete Answer,OOP
Suggest a completion for the following python code to count the number of a given character in a string.,"def count_characters(s, c):","def count_characters(s, c):
 count = 0
 for ch in s:
  if ch == c:
   count += 1
 return count","def count_characters(s, c):
 count = 0
 for ch ",Incomplete Answer,Loops
Generate code to connect to an Oracle Database using a Python program.,,"# Import the library
import cx_Oracle

# Connect to the database
connection = cx_Oracle.connect('<username>', '<password>', '<database_url>')

# Create a cursor
cursor = connection.cursor()

# Execute a query
cursor.execute('SELECT * FROM my_table')

# Get the results
result = cursor.fetchall()

# Close the connection
connection.close()","# Import the library
import cx_Oracle

# Connect to the database
connection = cx_Oracle.connect('<username>', '<password>', '<database_url>')

# Create a cursor
cursor = connection.cursor()

# Execute a query
cursor.execute('SELECT * FROM my_table')

# Get the results
result = cursor.fetchall()

# Close the connection
connection.close()",correct,String Manipulation
Write a function to find the number of subsequences having product smaller than k for the given non negative array.,,"def no_of_subsequences(arr, k): 
	n = len(arr) 
	dp = [[0 for i in range(n + 1)] 
			for j in range(k + 1)] 
	for i in range(1, k + 1): 
		for j in range(1, n + 1): 
			dp[i][j] = dp[i][j - 1] 
			if arr[j - 1] <= i and arr[j - 1] > 0: 
				dp[i][j] += dp[i // arr[j - 1]][j - 1] + 1
	return dp[k][n]","def no_of_subsequences(arr, k): 
	n = len(arr) 
	dp = [[0 for i in range(n + 1)] 
			for j in range(k + 1)] 
	for i in range(1, k + 1): 
		for j in range(1, n + 1): 
			dp[i][j] = dp[i][j - 1] 
			if arr[j - 1] <= i and arr[j - 1] > 0: 
				dp[i][j] += dp[i // arr[j - 1]][j - 1] + 1
	return dp[k][n]",Syntax Error,OOP
Write a Python function to create a list of 10 random numbers between 0 and 100.,,"import random

def create_random_list():
 result = []
 for i in range(10):
  result.append(random.randint(0, 100))
 return result","import random

def create_random_list():
 result = []
 for i in ",Incomplete Answer,File I/O
Write a function in Python to return the indices of all occurrences of a given item in a list.,"list = [1,2,3,4,5,1,2,3,4,5]
item = 3","def find_all_occurrence_indices(list, item):
result = []
for index, number in enumerate(list):
if number == item:
result.append(index)
return result","def find_all_occurrence_indices(list, item):
result = []
for index, number",Incomplete Answer,String Manipulation
Format a numerical table of data into a JSON object in Python.,Numerical table of data.,"Assuming the numerical table of data is stored in a 2D list data, a function to format it into a JSON object can be written as follows:

import json
def formatData2JSON(data):
    json_formatted_data = json.dumps(data)
    return json_formatted_data","Assuming the numerical table of data is stored in a 2D list data, a function to format it into a JSON object can be written as follows:

import json
def formatData2JSON(data):
    json_formatted_data = json.dumps(data)
    return json_formatted_data",Syntax Error,Loops
Write a python program that will generate a password containing numbers and letters from an entered string.,Hello,"def generate_password(word):
      # initialize variables 
    password = """"
    letters = """"
    numbers = """"

    # create new password
    for i in range(0, len(word)):
      letters += word[i]
      numbers += str(i)

    password = letters + numbers
    return password

print(generate_password(""Hello""))","def generate_password(word):
      # initialize variables 
    password = """"
    letters = """"
    numbers = """"

    # create new password
    for i in range(0, len(word)):
      letters += word[i]
      numbers += str(i)

    password = letters + numbers
    return password

print(generate_password(""Hello""))",correct,Loops
Design a REST API in Python that allows users to get and post data on a table.,,"from flask import Flask
from flask_restful import Resource, Api
 
app = Flask(__name__)
api = Api(app)
 
class TableData(Resource):
 def get(self):
  # Get data from table
  return {'data': 'formatted data'}
  
 def post(self):
 # Post data to table
 return {'message': 'Data posted successfully'}
 
api.add_resource(TableData, '/table')

if __name__ == '__main__':
 app.run(debug=True)","from flask import Flask
from flask_restful import Resource, Api
 
app = Flask(__name__)
api = Api(app)
 
class TableData(Resource):
 def get(self):
  # Get data from table
  return {'data': 'formatted data'}
  
 def post(self):
 # Post data to table
 return {'message': 'Data posted successfully'}
 
api.add_resource(TableData, '/table')

if __name__ == '__main__':
 app.run(debug=True)",Syntax Error,OOP
Create a Python program that can convert a list of strings into their corresponding encoded values.,"list of strings = [""hello"",""world"",""how"",""are"",""you""]","def encode_list_of_strings(list_of_strings):
  encoded = []
  for string in list_of_strings:
    encoded.append(string.encode(""utf-8""))
  return encoded

list_of_strings = [""hello"",""world"",""how"",""are"",""you""]
encoded = encode_list_of_strings(list_of_strings)

# Output: [b'hello', b'world', b'how', b'are', b'you']","def encode_list_of_strings(list_of_strings):
  encoded = []
  for string in list_of_strings:
    encoded.append(string.encode(""utf-8""))
  return encoded

li",Incomplete Answer,Recursion
"Generate code in Python to produce a random string of length 10 which contains the characters a, e, i, o, and u.",,"import random

def get_random_string(length=10):
    vowels = ['a', 'e', 'i', 'o', 'u']
    return """".join(random.choices(vowels, k=length))","import random

def get_random_string(length=10):
    vowels = ['a', 'e",Incomplete Answer,String Manipulation
Write a python function to find the highest power of 2 that is less than or equal to n.,,"def highest_Power_of_2(n): 
    res = 0; 
    for i in range(n, 0, -1): 
        if ((i & (i - 1)) == 0): 
            res = i; 
            break; 
    return res; ","def highest_Power_of_2(n): 
    res = 0; 
    for i in range(n, 0, -1): 
        i",Incomplete Answer,OOP
"Write a function to check for the number of jumps required of given length to reach a point of form (d, 0) from origin in a 2d plane.",,"def min_Jumps(a, b, d): 
    temp = a 
    a = min(a, b) 
    b = max(temp, b) 
    if (d >= b): 
        return (d + b - 1) / b 
    if (d == 0): 
        return 0
    if (d == a): 
        return 1
    else:
        return 2","def min_Jumps(a, b, d): 
    temp = a 
    a = min(a, b) 
    b = max(temp, b) 
    if (d >= b): 
        return ",Incomplete Answer,String Manipulation
Optimize a triple nested Python loop to perform faster.,"for i in range(n): 
    for j in range(n): 
        for k in range(n): 
            ans += A[i][j] * B[j][k]","for i in range(n): 
    for k in range(n): 
        temp = 0
        for j in range(n): 
            temp += A[i][j] * B[j][k] 
        ans += temp","for i in range(n): 
    for k in range(n): 
        temp = 0
        for j in range(n): 
            temp += A[i][j] * B[j][k] 
        ans += temp",correct,Recursion
Create a Python script to analyze a text document. The script should locate all words with three or more characters in a row and count their frequency in the document.,The quick brown fox jumps over the lazy dog. The fox barked at the dog.,"from collections import defaultdict

text = 'The quick brown fox jumps over the lazy dog. The fox barked at the dog.'

words = defaultdict(int)

 for word in text.split():
  if len(word) >= 3:
   words[word] += 1

print(words)","from collections import defaultdict

text = 'The quick brown fox jumps over the lazy dog. The fox barked at the dog.'

words = defaultdict(int)

 for word in text.split():
  if len(word) >= 3:
   words[word] += 1

print(words)",correct,Recursion
"Using the comment as the guide, generate a Python program to replace an element at a given index.","arr = [2, 3, 4, 5]
index = 2
# Replace the element at index with 0","arr = [2, 3, 4, 5]
index = 2
# Replace the element at index with 0
arr[index] = 0
print(arr)","arr = [2, 3, 4, 5]
index = 2
# Replace the element at index with 0
arr[index] = 0
print(arr",Syntax Error,String Manipulation
Create a Python script to find the person with the highest grade in a classroom.,"[
 {'name': 'John', 'grade': 85},
 {'name': 'Alice', 'grade': 95},
 {'name': 'Bob', 'grade': 70},
 {'name': 'Sam', 'grade': 80}
]","highest_grade_person = max(students, key=lambda x:x['grade'])
print(""The student with highest grade is {}"".format(highest_grade_person))","highest_grade_person = max(students, key=lambda x:x['grade'])
print(""The student with highest grade is {}"".format(highest_grade_person))",correct,File I/O
"Implement a default Python class for a message object. The class should implement `__init__` and `__str__` methods, and have a `text` attribute.",,"class Message:
    def __init__(self, text):
        self.text = text

    def __str__(self):
        return self.text","class Message
    def __init__(self, text)
        self.text = text

    def __str__(self)
        return self.text",Syntax Error,String Manipulation
Write a function in Python to calculate the maximum value of two given numbers.,12 and 15,"def max_val(num1, num2):
    # function to find the maximum value of two numbers
    if(num1 > num2):
        return num1
    else:
        return num2

# get the input values from the user
a = int(input(""Enter first number: ""))
b = int(input(""Enter second number: ""))

# call the max_val() function
max_val = max_val(a,b)

print(""The maximum value is:"", max_val)","def max_val(num1, num2):
    # function to find the maximum value of two numbers
    if(num1 > num2):
        return num1
    else:
        return num2

# get the input values from ",Incomplete Answer,OOP
Create a Python program to find out if a string contains any characters from another given string.,"String 1: Hello
String 2: eo","def contains_chars(str1, str2):
 if any([c in str1 for c in str2]):
 return True
 return False

string1 = ""Hello""
string2 = ""eo""

print(contains_chars(string1, string2)) // Outputs: True","def contains_chars(str1, str2):
 if any([c in str1 for c in str2]):
 return True
 return False

string1 = ""Hello""
string2 = ""eo""

print(contains_chars(string1, string2)) // Outputs: True",correct,Loops
Write a Python program to create a FuzzyWuzzy string matching for the given two strings.,"String 1: apple
String 2: applee","from fuzzywuzzy import fuzz 
def fuzzy_match(str1, str2): 
    return fuzz.ratio(str1, str2)","from fuzzywuzzy import fuzz 
def fuzzy_match(str1, str2): 
    return fuzz.ratio(str1, str2)",correct,Loops
Create a program in Python that adds a given list of numbers.,"[2, 5, 9]","def add_list(list_of_numbers):
    sum = 0
    for i in list_of_numbers:
        sum += i
    return sum

list = [2, 5, 9]
result = add_list(list)
print(result)","def add_list(list_of_numbers):
    sum = 0
    for i in list_of_numbers:
        sum += i
    return sum

list = [2, 5, 9]
result = add_list(list)
print(result)",correct,OOP
Design a function in Python to test if the given number is a prime or not.,N = 13,"def is_prime(n):
 if n <= 1:
 return False

 for i in range(2, n):
 if n % i == 0:
 return False

 return True

is_prime(13) # True","def is_prime(n):
 if n <= 1:
 return False

 for i in range(2, n)",Incomplete Answer,File I/O
Write an algorithm in Python that takes a list of elements and determines if the list is sorted or not.,"[4, 3, 1, 2, 5]","def is_sorted(lst):
 # base case: if the list is empty then it is sorted
 if not lst:
  return True
 # compare the first two element
 if lst[0] > lst[1]:
  return False
 # recursively call the function with the remaining elements in the list
 return is_sorted(lst[1:])","def is_sorted(lst):
 # base case: if the list is empty then it is sorted
 if not lst:
  return True
 # compare the first two element
 if lst[0] > lst[1]:
  return False
 # recursively call the function with the remaining elements in the list
 return is_sorted(lst[1:])",correct,Loops
Design a Python program to find the position of the maximum element in a list of numbers.,"nums = [1, 5, 8, -3, 0]","def find_max_position(nums):
    max_num = nums[0]
    max_pos = 0

    for i in range(len(nums)):
        if nums[i] > max_num:
            max_num = nums[i]
            max_pos = i

    return max_pos

nums = [1, 5, 8, -3, 0]
max_pos = find_max_position(nums)
print(f""The maximum element is at position {max_pos}"")","def find_max_position(nums):
    max_num = nums[0]
    max_pos = 0

    for i in range(len(nums)):
        if nums[i] > max_num:
            max_num = nums[i]
            max_pos = i

    return max_pos

nums = [1, 5, 8, -3, 0]
max_pos = find_max_position(nums)
print(f""The maximum element is at position {max_pos}"")",correct,String Manipulation
"Design an algorithm in Python that takes two input arrays, and finds an element that is common to both arrays.","arr1 = [1, 2, 3, 4, 5]
arr2 = [2, 3, 6, 7]","def find_common_element(arr1, arr2):
    common = []
    for num1 in arr1:
        for num2 in arr2:
            if num1 == num2:
                common.append(num1)
    return common

find_common_element(arr1, arr2) # return [2, 3]","def find_common_element(arr1, arr2):
    common = []
    for num1 in arr1:
        for num2 in arr2:
            if ",Incomplete Answer,Recursion
Create a Python program that outputs a dictionary containing the names of the months as keys and the number of days they contain as values.,,"month_days = { 
 ""January"": 31, 
 ""February"": 28, 
 ""March"": 31, 
 ""April"": 30, 
 ""May"": 31, 
 ""June"": 30, 
 ""July"": 31, 
 ""August"": 31, 
 ""September"": 30, 
 ""October"": 31, 
 ""November"": 30, 
 ""December"": 31 
} 
 
print(month_days)","month_days = { 
 ""January"": 31, 
 ""February"": 28, 
 ""March"": 31, 
 ""April"": 30, 
 ""May"": 31, 
 ""June"": 30, 
 ""July"": 31, 
 ""August"": 31, 
 ""September"": 30, 
 ""October"": 31, 
 ""November"": 30, 
 ""December"": 31 
} 
 
print(month_days",Syntax Error,Loops
"Convert a Python list into a string with each item separated by a comma, with no additional characters or whitespace","my_list = [1, 2, 3]","','.join(str(item) for item in my_list)","','.join(str(item for item in my_list",Syntax Error,OOP
Create a function in Python to find the maximum value in a list.,"List of values: [13, 25, 37, 49, 61]","def find_max(list):
    max_value = list[0]
    for value in list:
        if value > max_value:
            max_value = value
    return max_value","def find_max(list):
    max_value = list[0]
    for value in list:
        if value > max_value:
            max_value = value
    return max_value",correct,Recursion
Build a machine learning model in Python to predict the price of a house using its size as the independent variable.,,"import pandas as pd
from sklearn.linear_model import LinearRegression

data = pd.read_csv('house_price-data.csv')

X = data[['size']]
y = data['price']

model = LinearRegression()
model.fit(X, y)","import pandas as pd
from sklearn.linear_model import LinearRegression

data = pd.read_csv('house_price-data.csv'

X = data[['size']]
y = data['price']

model = LinearRegression(
model.fit(X, y",Syntax Error,String Manipulation
Compose a Python program to generate a list of numbers from 1 to 50.,,"number_list = [i for i in range(1, 51)]
print(number_list)","number_list = [i for i in range(1, 51)]
pritn(number_list)",Syntax Error,Loops
Develop a Python program to delete the third element of a given list.,"list = [""A"", ""B"", ""C"", ""D"", ""E""]","# Input list
list = [""A"", ""B"", ""C"", ""D"", ""E""]

# Deleting the third element
list.pop(2)

# Printing the list after deletion
print(list)
# Output: ['A', 'B', 'D', 'E']","# Input list
list = [""A"", ""B"", ""C"", ""D"", ""E""]

# Deleting the third element
list.pop(2)

# Printing the list after deletion
print(list)
# Output: ['A', 'B', 'D', 'E']",correct,File I/O
Construct a python program to copy an array.,,"def copyArray(arr): 
  
    res = [] 
  
    for i in range(len(arr)): 
        res.append(arr[i]) 
  
    return res","def copyArray(arr): 
  
    res = [] 
  
    for i in range(len(arr)): 
        res.append(arr[i]) 
  
    return res",Syntax Error,OOP
Develop a Python program to find all possible words from a set of characters,The set of characters is 'abcd',"def findWords(string):
    results = []
    for i in range(len(string)):
        for j in range(i+1, len(string)+1):
            results.append(string[i:j])
    return results

string = ""abcd""
print(findWords(string))","def findWords(string)
    results = []
    for i in range(len(string))
        for j in range(i+1, len(string)+1)
            results.append(string[ij])
    return results

string = ""abcd""
print(findWords(string))",Syntax Error,Recursion
Generate a solution for finding all possible subsets of a given set in Python.,"[1, 2, 3]","""""""
Generate a solution for finding all possible subsets of a given set in Python.
""""""

def find_subsets(nums):
  subsets = [[]]

  for current_num in nums:
    for i in range(len(subsets)):
      set_to_add = subsets[i] + [current_num]
      subsets.append(set_to_add)

  return subsets

nums = [1, 2, 3]
print(find_subsets(nums))","""""""
Generate a solution for finding all possible subsets of a given set in Python.
""""""

def find_subsets(nums):
  subsets = [[]]

  for current_num in nums:
    for ",Incomplete Answer,OOP
Create a Python script to generate a randomly generated password of 8 characters.,,"import random

def generate_password():
    password_length = 8
    password_characters = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$^&*()_+-=""
    password = ''.join(random.sample(password_characters, password_length))
    return password","import random

def generate_password():
    password_length = 8
    password_characters = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$^&*()_+-=""
    password = ''.join(random.sample(password_characters, password_length))
    return password",Syntax Error,Recursion
Create a class in Python that allows for a linked list of strings.,,"class Node:
 def __init__(self, data):
 self.data = data
 self.next = None

class LinkedList:
 def __init__(self):
 self.head = None

def append(self, new_data):
 new_node = Node(new_data)
 if self.head == None:
 self.head = new_node
 return
 last = self.head
 while last.next:
 last = last.next
 last.next = new_node","class Node:
 def __init__(self, data):
 self.data = data
 self.next = None

class LinkedList:
 def __init__(self):
 self.head = None

def append(self, new_data):
 new_node = Node(new_data)
 if self.head == None:
 self.head = new_node
 return
 last = self.head
 while last.next:
 last = last.next
 last.next = new_node",correct,OOP
Create a program in Python to sort a given list of numbers in ascending order.,"[9, 5, 7, 4, 1]","def sort_asc(lst):
    return sorted(lst)","def sort_asc(lst):
 ",Incomplete Answer,File I/O
Suggest a Python program which takes a string as an input and prints the length of the string.,,"def string_length(string):
    print(len(string))",def string_length(string,Incomplete Answer,File I/O
Create a program in Python that will add two numbers entered by the user.,,"def add_two_numbers():
    num1 = int(input(""Please enter a number: ""))
    num2 = int(input(""Please enter a another number: ""))
    return num1 + num2","def add_two_numbers():
    num1 = int(input(""Please enter a number: ""))
    num2 = int(input(""Please enter a another number: ""))
    return num1 + num2",correct,File I/O
"Write a python program to extract all the words from a given sentence and store them into a dictionary. Calculate the frequency of each word, and store them in the same dictionary keyed with the words.",I love to code,"words_dict = {}
sentence = ""I love to code""
words = sentence.split()

for word in words:
 if word in words_dict:
 words_dict[word] += 1
 else:
 words_dict[word] = 1

print(words_dict)

# Output:
# {'I': 1, 'love': 1, 'to': 1, 'code': 1}","words_dict = {}
sentence = ""I love to code""
words = sentence.split()

for word in words:
 if word in words_dict:
 words_dict[word] += 1
 else:
 words_dict[word] = 1

print(words_dict)

# Output:
# {'I': 1, 'love': 1, 'to': 1, 'code': 1}",correct,Loops
Write a function to check if the triangle is valid or not.,,"def validity_triangle(a,b,c):
 total = a + b + c
 if total == 180:
    return True
 else:
    return False","def validity_triangle(a,b,c):
 total = a + b + c
 if total == 180:
    return True
 else:
    return False",correct,File I/O
Generate a Python program to convert a given temperature from Fahrenheit to Celsius.,68,"def fahrenheitToCelsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5 / 9

    return celsius

fahrenheit_value = 68
celsius_value = fahrenheitToCelsius(fahrenheit_value)

print(""{0} Fahrenheit is equal to {1} Celsius"".format(fahrenheit_value, celsius_value))","def fahrenheitToCelsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5 / 9

    return celsius

fahrenheit_value = 68
celsius_value = fahrenheitToCelsius(fahrenheit_value)

print(""{0} Fahrenheit is equal to {1} Celsius"".format(fahrenheit_value, celsius_value))",correct,File I/O
Create a Python script to iterate over a list of words and print them out one by one.,"['cat', 'dog', 'bird']","for word in ['cat', 'dog', 'bird']:
    print(word)","for word in ['cat', 'dog'",Incomplete Answer,Recursion
Create a vectorized function in Python that computes the sigmoid of a given number.,,"import numpy as np

def sigmoid(x):
    """"""
    Compute the sigmoid of an array of numbers x. 
    """"""
    # Apply the sigmoid function to every element of x 
    sig = np.vectorize(lambda x: 1/(1 + np.exp(-x)))
    return sig(x)

print(sigmoid(5))","import numpy as np

def sigmoid(x):
    """"""
    Compute the sigmoid of an array of numbers x. 
    """"""
    # Apply the sigmoid function to every element of x 
    sig = np.vectorize(lambda x: 1/(1 + np.exp(-x)))
    return sig(x)

pritn(sigmoid(5))",Syntax Error,Loops
Create a program in Python that takes a URL as input and prints out all the links (href) that appear in the page.,,"import requests
from bs4 import BeautifulSoup

url = 'http://www.example.com'

html = requests.get(url).text
soup = BeautifulSoup(html, 'html.parser')

for link in soup.find_all('a'):
 print(link.get('href'))","import requests
from bs4 import BeautifulSoup

url = 'http://www.example.com'

html = requests.get(url).text
soup = BeautifulSoup(html, 'html.parser')

for link in soup.find_all('a'):
 print(link.get('href'))",correct,OOP
Find and remove the unnecessary code in the following Python code snippet.,"def get_data(url):
    data = [] # create an empty list
    response = requests.get(url)
    if response.status_code == 200:
        for item in response.json():
            data.append(item)# add to the list","def get_data(url):
    data = []
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()","def get_data(url):
    data = []
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()",correct,Recursion
Construct a decision tree algorithm in Python to classify credit card transactions.,The dataset consists of 5 numerical features and one categorical target variable.,"from sklearn.tree import DecisionTreeClassifier
import numpy as np 

X = np.array([features])
y = np.array([target])

clf_dt = DecisionTreeClassifier()
clf_dt.fit(X,y)

# Predict class labels
preds = clf_dt.predict(X)","from sklearn.tree import DecisionTreeClassifier
import numpy as np 

X = np.array([features])
y = np.array([",Incomplete Answer,File I/O
Write a python code to print the current time in the given timezone (America/Chicago).,,"import datetime
import pytz
 
def print_time(timezone):
    tz = pytz.timezone(timezone)
    current_time = datetime.datetime.now(tz)
    print(""Current time in {tz}: {time}"".format(tz=timezone, time=str(current_time)))
 
if __name__ == '__main__':
    print_time('America/Chicago')","import datetime
import pytz
 
def print_time(timezone)
    tz = pytz.timezone(timezone)
    current_time = datetime.datetime.now(tz)
    print(""Current time in {tz} {time}"".format(tz=timezone, time=str(current_time)))
 
if __name__ == '__main__'
    print_time('America/Chicago')",Syntax Error,File I/O
Give a Python program to extract a given number of random items from a given list.,"list = [1, 2, 3, 4, 5, 6]","import random

def extract_random_items(lst, num):
q = random.sample(lst, num)
return q","import random

def extract_random_items(lst",Incomplete Answer,OOP
Create a Python program to sort a list of strings by the descending length of the strings and alphabetically in case of ties.,"[""hello"", ""world"", ""from"", ""code""]","unsorted_list = [""hello"", ""world"", ""from"", ""code""]

sorted_list = sorted(unsorted_list, key=lambda s: (-len(s), s))

print(sorted_list)
# Output: [""world"", ""hello"", ""from"", ""code""]","unsorted_list = [""hello"", ""world"", ""from"", ""code""]

sorted_list = sorted(unsorted_list, ke",Incomplete Answer,OOP
Create a function that returns multiple values in Python.,No input needed.,"def multiple_values():
    x = 2
    y = 7
    z = ""Hello""
    return x, y, z

x, y, z = multiple_values()

print(x, y, z) # 2 7 Hello","def multiple_values():
    x = 2
    y = 7
    z = ""Hello""
    return x, y, z

x, y, z = multiple_values()

print(x, y, z) # 2 7 Hello",correct,File I/O
Design a python program that takes an integer as input and returns the sum of all multiples of 3 and 5 up to (but not including) the given integer.,15,"def calculate_sum(n):
 sum = 0
 for i in range(n):
  if i % 3 == 0 or i % 5 == 0:
   sum += i
 return sum
 
print(calculate_sum(15)) # 42","def calculate_sum(n):
 sum = 0
 for i in range(n):
  if i % 3 == 0 o",Incomplete Answer,String Manipulation
Write a function to extract only the rear index element of each string in the given tuple.,,"def extract_rear(test_tuple):
  res = list(sub[len(sub) - 1] for sub in test_tuple)
  return (res) ","def extract_rear(test_tuple):
  res = list(sub[len(sub) - 1] for sub in test_tuple)
  return (res) ",correct,String Manipulation
Create a class in Python and add two functions to it.,,"class MyClass:
    def say_hello(self):
        print(""Hello world!"")
    
    def say_goodbye(self):
        print(""Goodbye!"")","class MyClass:
    def say_hello(self):
        print(""Hello wo",Incomplete Answer,Recursion
Create a python program to Reverse Engineer an API and find its endpoints.,http://example.com/api,"import requests

url = 'http://example.com/api'
response = requests.get(url)

if response.status_code == 200:
    # Find the API endpoints
    data = response.json()
    endpoints = data.get('endpoints')
    print(endpoints)","import requests

url = 'http://example.com/api'
response = requests.get(url)

if response.status_code == 200:
  ",Incomplete Answer,Loops
"Using Python, write a program that takes a list of strings as input and returns a dictionary where the keys are the strings and the values are the lengths of the strings.","['apple', 'banana', 'orange']","def length_dict(strings):
    length_dict = {}
    for string in strings:
        length_dict[string] = len(string)
    return length_dict

print(length_dict(['apple', 'banana', 'orange'])) # {'apple': 5, 'banana': 6, 'orange': 6}","def length_dict(strings):
length_dict = {}
for string in strings:
    length_dict[string] = len(string)
return length_dict

print(length_dict(['apple', 'banana', 'orange'])) # {'apple': 5, 'banana': 6, 'orange': 6}",Syntax Error,OOP
Create a Python script to append a list to another list.,"List: [1, 2, 3]","def append_list(list_to_append, list_to_add):
    return list_to_append + list_to_add","def append_list(list_to_append, list_to_add):
    return list_to_append + list_to_add",Syntax Error,Loops
"Given two strings, write a Python program to check if one is an anagram of other.",listen and silent,"def isAnagram(str1, str2):
    str1_sorted = sorted(str1)
    str2_sorted = sorted(str2)
    # Compare sorted strings
    if str1_sorted == str2_sorted:
        return True
    else:
        return False

str1 = ""listen""
str2 = ""silent""

print(isAnagram(str1, str2))","def isAnagram(str1, str2):
    str1_sorted = sorted(str1)
    str2_sorted = sorted(str2)
    # Compare sorted strings
    if str1_sorted == str2_sorted:
        return True
    else:
        return False

str1 = ""listen""
str2 = ""silent""

print(isAnagram(str1, str2))",correct,OOP
Create a text-based chatbot using Python. The chatbot should have the ability to respond to “hello” and give a warm welcome message.,,"import random

while True:
 user_message = input('User: ')
 
if user_message == 'hello':
 response_options = ['Hi', 'Hi there', 'Hello, how are you?', 'Hey there']
 bot_response = random.choice(response_options)
 print(bot_response)
 
elif user_message == 'exit':
 break","import random

while True:
 user_message = input('User: ')
 
if user_message == 'hello':
 response_options = ['Hi', 'Hi there', 'Hello,",Incomplete Answer,OOP
Create a Python program to detect whether a given number is even or odd.,,"def detect_even_or_odd(num):
 if num % 2 == 0:
 print(num, ""is Even"")
 else:
 print(num, ""is Odd"")

if __name__ == ""__main__"":
 num = int(input(""Enter a number: ""))
 detect_even_or_odd(num)","def detect_even_or_odd(num:
 if num % 2 == 0:
 print(num, ""is Even""
 else:
 print(num, ""is Odd""

if __name__ == ""__main__"":
 num = int(input(""Enter a number: ""
 detect_even_or_odd(num",Syntax Error,String Manipulation
Create a python function that takes a string as an argument and substitues each letter with its corresponding number in the alphabet.,Input String = “Data Science”,"def letterToNumber(input_string):
    result_string = """"
    for letter in input_string:
        result_string += str(ord(letter)-64)
    return result_string

input_string  = ""Data Science""
substituted_string = letterToNumber(input_string)
print(""Substituted string : "",substituted_string)","def letterToNumber(input_string):
    result_string = """"
    for letter in input_string:
        result_string += str(ord(letter)-64)
    return result_string

input_string  = ""Data Science""
substituted_string = letterToNumber(input_string)
print(name, ""Substituted string : "",substituted_string)",Syntax Error,Recursion
"Write a Python code snippet to get the length of string ""Hello World"".",,"len(""Hello World"")","len(""Hell",Incomplete Answer,OOP
Convert a string into a valid python program that prints the string on the terminal.,Hello World!,print('Hello World!'),"print(name, 'Hello World!')",Syntax Error,String Manipulation
Refactor a code snippet that creates a list of numbers from 1 to 10 in Python to use a list comprehension.,,"numbers = [x for x in range(1, 11)]",numbers = [x for ,Incomplete Answer,Loops
Design an algorithm in Python to find the maximum value in a binary tree.,,"def max_in_tree(node):
    if node is None:
        return -float('inf')
    left_max = max_in_tree(node.left)
    right_max = max_in_tree(node.right)
    return max(node.value, left_max, right_max)","def max_in_tree(node)
    if node is None
        return -float('inf')
    left_max = max_in_tree(node.left)
    right_max = max_in_tree(node.right)
    return max(node.value, left_max, right_max)",Syntax Error,String Manipulation
Convert a given python data structure into a json string using json package,"data = {
    ""name"": ""John"",
    ""age"": 30,
    ""location"": ""Greece""
}","import json

# convert python data structure to json
data = {
    ""name"": ""John"",
    ""age"": 30,
    ""location"": ""Greece""
}

data_string = json.dumps(data)

print(data_string) # '{""name"": ""John"", ""age"": 30, ""location"": ""Greece""}'","import json

# convert python data structure to json
data = {
    ""name"": ""John"",
    ""age"": 30,
    ""location"": """,Incomplete Answer,OOP
How would you convert a string to float in Python?,,"We can use the float() function to convert a string to float in Python. We can pass the string to the function as an argument and it will return the float representation of the same.

Example:

string_value = ""12.45""
float_value = float(string_value)

print(float_value) #Output: 12.45","We can use the float() function to convert a string to float in Python. We can pass the string to the function as an argument and it will return the float representation of the same.

Example:

string_value = ""12.45""
float_value = float(string_value)

print(float_value) #Output: 12.45",correct,Recursion
Write a function in Python to convert a string of text into separate words in a list.,The quick brown fox jumped over the lazy dog.,"def convert_to_list(sentence):
 words = []
 for word in sentence.split():
  words.append(word)
 return words

result = convert_to_list(""The quick brown fox jumped over the lazy dog."")
print(result)
# Output: ['The', 'quick', 'brown', 'fox', 'jumped', 'over', 'the', 'lazy', 'dog.']","def convert_to_list(sentence):
 words = []
 for word in sentence.split():
  words.append(word)
 return words

result = convert_to_list(""The ",Incomplete Answer,String Manipulation
Use a random forest model in Python to predict the sale price of a house.,"Example data: 
Size: 500, Rooms: 4","import pandas as pd
from sklearn.ensemble import RandomForestRegressor

# Create
data = {'Size': [500], 
'Rooms': [4]}

df = pd.DataFrame(data)

# Train
X = df[['Size','Rooms']] 
Y = df['Price'] 

regressor = RandomForestRegressor(n_estimators = 10, random_state = 0) 
regressor.fit(X, Y)

# Predict
regressor.predict([[500,4]]) # Predicted price: 1716.275","import pandas as pd
from sklearn.ensemble import RandomForestRegressor

# Create
data = {'Size': [500], 
'Rooms': [4]}

df = pd.DataFrame(data)

# Train
X = df[['Size','Rooms']] ",Incomplete Answer,Recursion
Write a Python script to generate all possible permutations of a set of input strings.,"['a', 'b', 'c']","def permute(input):
 res = []
 for i in range(len(input)):
 for result in permute(input[:i] + input[i + 1:]):
 res.append([input[i]] + result)    
 return res

inputValues = ['a', 'b', 'c']
permutations = permute(inputValues)

for perm in permutations:
 print(perm)","def permute(input):
 res = []
 for i in range(len(input)):
 for result in permute(input[:i] + input[i + 1:]):
 res.append([input[i]] + result)    
 return res

inputValues = ['a', 'b', 'c']
permutations = permute(inputValues)

for perm in permutations:
 pritn(perm)",Syntax Error,Loops
Design a class in Python that implements a stack,No input,"class Stack:
    def __init__(self):
        self.items = []
    
    def isEmpty(self):
        return self.items == []
    
    def push(self, item):
        self.items.append(item)
    
    def pop(self):
        return self.items.pop()
    
    def peek(self):
        return self.items[len(self.items)-1]
    
    def size(self):
        return len(self.items)","class Stack:
    def __init__(self):
        self.items = []
    
    def isEmpty(self):
        return self.items == []
    
    def push(self, item):
        self.items.append(item)
    
    def pop(self):
        return self.items.pop()
    
    def peek(self):
        return self.items[len(self.items)-1]
    
    def size(self):
        return len(self.items)",correct,Loops
Write a python function to find the slope of a line.,,"def slope(x1,y1,x2,y2): 
    return (float)(y2-y1)/(x2-x1)  ","def slope(x1,y1,x2,y2: 
    return (float(y2-y1/(x2-x1  ",Syntax Error,OOP
Create a python script to split a string into its word components.,"String: Hello,World!","def split_words(s): 
    words = s.split("" "") 
    return words  
s = ""Hello,World!""
words = split_words(s) 
print(words)","def split_words(s): 
    words = s.split("" "") 
    return wo",Incomplete Answer,OOP
Analyze this Python code and suggest any improvements.,"def calc_sum(a, b): 
    return a + b

sum = 0 
for i in range(5): 
    sum += calc_sum(i, i + 1)

print(sum)","def calc_sum(a, b): 
    return a + b

sum = 0 
for i in range(5): 
    sum += calc_sum(i, i + 1)

print(sum) 

# Suggested fix:
sum = 0 
for i in range(0, 5):    # Use the range(start, stop) syntax
    sum += sum + calc_sum(i, i + 1)

print(sum)","def calc_sum(a, b): 
    return a + b

sum = 0 
for i in range(5): 
    sum += calc_sum(i, i + 1)

print(sum) 

# Suggested",Incomplete Answer,String Manipulation
Write a function to find minimum k records from tuple list.,,"def min_k(test_list, K):
  res = sorted(test_list, key = lambda x: x[1])[:K]
  return (res) ","def min_k(test_list, K:
  res = sorted(test_list, key = lambda x: x[1][:K]
  return (res ",Syntax Error,Recursion
Optimize the following python program to reduce running time.,"def sum_numbers(arr):
    s = 0
    i = 0
    while i < len(arr):
        s += arr[i]
        i += 1
    return s","def sum_numbers(arr):
    s = 0
    for i in range(len(arr)):
        s += arr[i]
    return s","def sum_numbers(arr:
    s = 0
    for i in range(len(arr:
        s += arr[i]
    return s",Syntax Error,OOP
Write a python program to calculate the sum of series 1 + 1/3 + 1/5 + ....,,"""""""
Calculate the sum of series 1 + 1/3 + 1/5 + ...
""""""

def sum_series(n):
    result = 0 
    for i in range(1, n+1):
        result += (1 / (2 * i - 1))
    return result
 
if __name__ == '__main__':
    n = 5
    print(sum_series(n))","""""""
Calculate the sum of series 1 + 1/3 + 1/5 + ...
""""""

def sum_series(n):
    result = 0 
    for i in range(1, n+1):
        result += (1 / (2 * i - 1))
    return result
 
if __name__ == '__main__':
    n = 5
    print(name, sum_series(n))",Syntax Error,OOP
Create a Python program to count the occurrence of a specific word in a string.,The quick brown fox,"def count_occurences(string, word):
    count = 0
    words = string.split(' ')
    for w in words:
        if w == word:
            count += 1
    return count
 
string = 'The quick brown fox'
word = 'The'
 
occurrences = count_occurences(string, word)
print('""The"" occurs', occurrences , 'times in the string.')","def count_occurences(string, word)
    count = 0
    words = string.split(' ')
    for w in words
        if w == word
            count += 1
    return count
 
string = 'The quick brown fox'
word = 'The'
 
occurrences = count_occurences(string, word)
print('""The"" occurs', occurrences , 'times in the string.')",Syntax Error,String Manipulation
Create a code to parse a web page and check whether or not a particular keyword appears in the page.,"keyword = ""python""","import requests

def check_if_keyword_exists(url, keyword):
    response = requests.get(url)
    if keyword in response.text:
        return True
    return False

keyword = ""python""
print(check_if_keyword_exists(""https://en.wikipedia.org/wiki/Python_(programming_language)"", keyword)) # Output: True","import requests

def check_if_keyword_exists(url, keyword):
    response = requests.get(url)
    if keyword in response.text:
        return True
    return False

keyword = ""python""
print(check_if_keyword_exists(""https://en.wikipedia.org/wiki/Python_(programming_language)"", keyword)) # Output: True",correct,OOP
Develop a Python program for solving a quadratic equation.,,"import cmath

def quadratic_equation(a, b, c):
 # calculate the discriminant
 d = (b**2) - (4*a*c)
 
 # find two solutions
 sol1 = (-b-cmath.sqrt(d))/(2*a)
 sol2 = (-b+cmath.sqrt(d))/(2*a)
 
 return sol1, sol2
 
if __name__ == ""__main__"":
 a = 1
 b = 5
 c = 6
 
 solutions = quadratic_equation(a, b, c)
 
 print('The solution are {0} and {1}'.format(solutions[0],solutions[1]))","import cmath

def quadratic_equation(a, b, c):
 # calculate the discriminant
 d = (b**2) - (4*a*c)
 
 # find two solutions
 sol1 = (-b-cmath.sqrt(d))/(2*a)
 sol2 = (-b+cmath.sqrt(d))/(2*a)
 
 return sol1, sol2
 
if __name__ == ""__main__"":
 a = 1
 b = 5
 c = 6
 
 solutions = quadratic_equation(a, b, c)
 
 print('The solution are {0} and {1}'.format(solutions[0],solutions[1]))",correct,File I/O
"Given a list of phone numbers, extract only the ones that start with 08 using Python.","['0834567', '0945678', '07123456', '08901234', '07890123']","phone_numbers = ['0834567', '0945678', '07123456', '08901234', '07890123']
result = [number for number in phone_numbers if number.startswith('08')]
print(result)","phone_numbers = ['0834567', '0945678', '07123456', '08901234', '07890123']
resul",Incomplete Answer,Recursion
Generate a Python program to calculate the average of the the numbers 1-k.,,"def average(k):
    sum = 0
    for i in range(1, k+1):
        sum += i

    return sum / k","def average(k):
    sum = 0
    for i in range(1, k+1):
        sum += i

    return sum / k",Syntax Error,File I/O
Create a python function to parse a character-separated string,"Parse a string ""Harry,30,England"" using comma as separator","def parse_str(str, separator):
    strList = str.split(separator) 
    return strList","def parse_str(str, separator:
    strList = str.split(separator 
    return strList",Syntax Error,Loops
Implement quick sort in Python.,,"def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left) + middle + quick_sort(right)","def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    ",Incomplete Answer,File I/O
Write a Python script to generate a valid Checksum number.,,"def calculate_checksum (data):
    checksum = 0
    for char in data:
        checksum += ord(char)
    return checksum % 256","def calculate_checksum (data):
    checksum = 0
    for char in data:
        checksum += ord(char)
    return checksum % 256",Syntax Error,Loops
"Slice and dice a given list in Python to filter out elements starting with the letter ""a"".","List: [""apple"", ""banana"", ""orange"", ""apricot""]","lst = [""apple"", ""banana"", ""orange"", ""apricot""]
  
filtered_list = [ele for ele in lst if ele[0] == 'a'] 
  
# printing filtered elements 
print(""filtered list: "", filtered_list)","lst = [""apple"", ""banana"", ""orange"", ""apricot""]
  
filtered_list = [ele for ele in lst if ele[0] == 'a'] 
  
# printing filtered elements 
print(name, ""filtered list: "", filtered_list)",Syntax Error,OOP
Create a Python program to display the current date in MM/DD/YYYY format.,,"from datetime import datetime

date = datetime.today()
date_formatted = date.strftime('%m/%d/%Y')
print(date_formatted)","from datetime import datetime

date = datetime.today()
date_formatted = date.strftime('%m/%d/%Y')
print(date_formatted)",correct,File I/O
Can you create a loop in Python to find the highest value in an array?,"arr = [2, 3, 9, 1, 4, 5]","max_val = arr[0]
for num in arr:
    if num > max_val:
        max_val = num
print(max_val)","max_val = arr[0]
for num in arr:
    if num > max_val:
        max_val = num
print(max_val)",correct,Recursion
Generate code to asynchronously execute multiple tasks in Python.,,"from concurrent.futures import ThreadPoolExecutor

def asynchronous_tasks(tasks):
    # initialize a thread pool executor 
    pool_executor = ThreadPoolExecutor(max_workers=4)

    # submit tasks to the executor 
    futures = [pool_executor.submit(task) for task in tasks]

    # wait for the tasks to finish 
    for future in futures:
        print(future.result())","from concurrent.futures import ThreadPoolExecutor

def asynchronous_tasks(tasks):
    # initialize a thread pool executor 
    pool_executor = ThreadPoolExecutor(max_workers=4)

    # submit tasks to the executor 
    futures = [pool_executor.submit(task) for task in tasks]

    # wait for the tasks to finish 
    for future in futures:
        print(future.result())",correct,OOP
Design a Python program to convert the temperature in Celsius to Fahrenheit.,25.2,"# Program to convert the temperature 
# from Celsius to Fahrenheit 

celsius = 25.2
fahrenheit = (celsius * 9/5) + 32
 
print('%.2f degree Celsius is: %0.2f degree Fahrenheit' %(celsius,fahrenheit)) 

# Output: 25.20 degree Celsius is: 77.36 degree Fahrenheit","# Program to convert the temperature 
# from Celsius to Fahrenheit 

celsius = 25.2
fahrenheit = (celsius * 9/5) + 32
 
print('%.",Incomplete Answer,OOP
Create a Python function for converting a list to a dictionary. The function should take a list of key-value tuples and return a dictionary.,"[('a', 1), ('b', 2), ('c', 3)]","def list_to_dict(input_list):
 result = {}
 for key, value in input_list:
 result[key] = value
 return result

list_to_dict([('a', 1), ('b', 2), ('c', 3)]) 
#{'a': 1, 'b': 2, 'c': 3}","def list_to_dict(input_list):
 result = {}
 for key, value in input_list:
 result[key] = value
 return result

list_to_dict([('a', 1), ('b', 2), ('c', 3)]) 
#{'a': 1, 'b': 2, 'c': 3}",correct,Recursion
"Create a SQLite database in Python, with one table containing the fields ""name"", ""country"" and ""population"".",,"import sqlite3

# create a connection to the database
conn = sqlite3.connect(""example.db"")

# create the database
c = conn.cursor()
c.execute(""create table countries (name text, country text, population int)"")

# commit changes
conn.commit()

# close the connection
conn.close()","import sqlite3

# create a connection to the database
conn = sqlite3.connect(""example.db"")

# create the database
c = conn.cursor()
c.execu",Incomplete Answer,String Manipulation
Suggest an algorithm in Python to generate the nth prime number.,,"def nth_prime_number(n):
    if n==1: 
        return 2
    count, num = 1, 3 
    while count < n: 
        for i in range(2,num): 
            if num % i == 0: 
                break
        else: 
            count += 1
        num += 2
    return num","def nth_prime_number(n):
if n==1: 
    return 2
count, num = 1, 3 
while count < n: 
    for i in range(2,num): 
        if num % i == 0: 
            break
    else: 
        count += 1
    num += 2
return num",Syntax Error,File I/O
Write a Python program to find the nearest 3 squares to a given number.,30,"def findNearestSquares(n):
  nearestSquareList = []
  i = 1
  # Find all the nearest squares
  while i * i <= n:
    nearestSquareList.append(i * i)
    i += 1
  
  # Find the nearest 3 squares
  nearest3Squares = nearestSquareList[-3:]
  
  return nearest3Squares

nearest3Squares = findNearestSquares(30)
print(nearest3Squares)

# Output:
# [25, 28, 29]","def findNearestSquares(n):
  nearestSquareList = []
  i = 1
  # Find all the nearest squares
  while i * i <= n:
    nearestSquareList.append(i * i)
    i += 1
  
  # Find the nearest 3 squares
  nearest3Squares = nearestSquareList[-3:]
  
  return nearest3Squares

nearest3Squares = findNearestSquares(30)
print(name, nearest3Squares)

# Output:
# [25, 28, 29]",Syntax Error,File I/O
Design an algorithm in Python to detect an anagram in a string.,"Input string: ""eat tea""","def isAnagram(string):
    for i in range(len(string)):
        for j in range(i + 1, len(string)):
            if sorted(string[i]) == sorted(string[j]):
                return True
    return False","def isAnagram(string:
    for i in range(len(string:
        for j in range(i + 1, len(string:
            if sorted(string[i] == sorted(string[j]:
                return True
    return False",Syntax Error,String Manipulation
Design a Python function to replace all occurrences of ‘x’ in a string with ‘y’.,"str = ""xx123xx456xx"", x = ""x"", y = ""y""","def replaceXWithY(str, x, y):
    while x in str:
        str = str.replace(x, y)
    return str

result = replaceXWithY(""xx123xx456xx"", ""x"", ""y"")
print(result)","def replaceXWithY(str, x, y)
    while x in str
        str = str.replace(x, y)
    return str

result = replaceXWithY(""xx123xx456xx"", ""x"", ""y"")
print(result)",Syntax Error,File I/O
Write a python function to remove odd numbers from a given list.,,"def remove_odd(l):
    for i in l:
        if i % 2 != 0:
            l.remove(i)
    return l","def remove_odd(l):
    for i in l:
        if i % 2 != 0:
            l.remove(i)
    return l",correct,OOP
Generate a Python function to return the elements of a given list in reverse order without using any library.,,"def reverse_list(lst): 
  reversed_list = []
  for i in range(len(lst)-1, -1, -1):
    reversed_list.append(lst[i])
  return reversed_list

result = reverse_list([1,2,3,4,5])
print(result)","def reverse_list(lst): 
  reversed_list = []
  for i in range(len(lst)-1, -1, -1):
    reverse",Incomplete Answer,OOP
Create a function in Python to animate a Gif.,,"from PIL import Image
from images2gif import writeGif

def animateGif(images, filename, duration=0.1):
    frames = []

    for image in images:
        frames.append(Image.open(image))

    writeGif(filename, frames, duration=duration)","from PIL import Image
from images2gif import writeGif

def animateGif(images, filename, duration=0.1):
    frames = []",Incomplete Answer,File I/O
Generate code for a Python class that contains functions to add and remove elements from a list.,,"class MyList:
    def __init__(self):
        self.elements = []

    def add_element(self, element):
        self.elements.append(element)

    def remove_element(self, index):
        del self.elements[index]","class MyList:
    def __init__(self):
        self.elements = []

    def add_element(self, element):
        self.elements.append(element)

    def remove_element(self, index):
        del self.elements[index]",correct,Loops
Design a class to convert Fahrenheit to Celsius in Python.,,"class TempConverter:

    def __init__(self, temp_in_fahrenheit):
        self.temp_in_fahrenheit = temp_in_fahrenheit

    def convert_f_to_c(self):
        temp_in_celsius = (self.temp_in_fahrenheit - 32) * 5/9
        return temp_in_celsius","class TempConverter

    def __init__(self, temp_in_fahrenheit)
        self.temp_in_fahrenheit = temp_in_fahrenheit

    def convert_f_to_c(self)
        temp_in_celsius = (self.temp_in_fahrenheit - 32) * 5/9
        return temp_in_celsius",Syntax Error,String Manipulation
Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format by using regex.,,"import re
def change_date_format(dt):
        return re.sub(r'(\d{4})-(\d{1,2})-(\d{1,2})', '\\3-\\2-\\1', dt)","import re
def change_date_format(dt):
        return r",Incomplete Answer,Loops
Edit the code to make it in a Python program to check if a number is divisible by 5 and 11.,"def isDivisible(num): 
    if num % 5 == 0: 
        print(""Number is divisible by 5"") 
    if num % 11 == 0:
        print(""Number is divisible by 11"")","def isDivisible(num): 
    if num % 5 == 0 and num % 11 == 0:
        print(""Number is divisible by 5 and 11"") 
    else:
        print(""Number is not divisible by 5 and 11"")","def isDivisible(num): 
    if num % 5 == 0 and num % 11 == 0:
        print(""Number is ",Incomplete Answer,String Manipulation
Create a program in Python to capitalize the first letter of a given string.,hello world,"def capitalize_first_letter(text):
  return text[0].upper() + text[1:]

print(capitalize_first_letter(""hello world"")) # Output: Hello world","def capitalize_first_letter(text):
  return text[0].upper() + text[1:]

print(name, capitalize_first_letter(""hello world"")) # Output: Hello world",Syntax Error,Recursion
Write a Python program for a given list of numbers to generate a new sorted list containing only the even numbers in the list.,,"def get_even_list(list):
    """"""
    Generate a new sorted list containing only the even numbers in a given list.
    list: the list to be checked
    """"""
    even_list = [number for number in list if number % 2 == 0]
    even_list.sort()
    return even_list","def get_even_list(list:
    """"""
    Generate a new sorted list containing only the even numbers in a given list.
    list: the list to be checked
    """"""
    even_list = [number for number in list if number % 2 == 0]
    even_list.sort(
    return even_list",Syntax Error,OOP
Create a Python program to generate a list of prime numbers up to a certain number.,The program should generate primes up to the number 100,"primes = []

for num in range(2,101):
 for i in range(2,num):
 if (num % i) == 0:
 break
 else:
 primes.append(num)

print(primes)","primes = []

for num in range(2,101)
 for i in range(2,num)
 if (num % i) == 0
 break
 else
 primes.append(num)

print(primes)",Syntax Error,String Manipulation
Write a Python 3 code snippet to check for the presence of a specific value in a dictionary.,,"def is_value_in_dict(key, my_dict):
  return key in my_dict","def is_value_in_dict(key, my_dict):
  return key in my_dict",correct,String Manipulation
Write a Python program to concatenate two strings and print the combined string.,"The two strings are - ""I love"", ""Programming"".","string1 = 'I love'
string2 = 'Programming'

output = string1 + string2

print(output)

# Output
I love Programming","string1 = 'I love'
string2 = 'Programming'

output = string1 + string2

print(output)

# Output
I love Programming",Syntax Error,OOP
Generate a code to print the stack trace in Python when an exception occurs.,,"import traceback

try:
    # some code that might generate exceptions
    pass
except Exception as e:
    print(traceback.format_exc())","import traceback

try:
    # some code that might generate exceptio",Incomplete Answer,OOP
Generate a function to check for palindrome strings in Python.,,"def check_palindrome(string):
  reversed_string = string[::-1]
  if string == reversed_string:
    return True
  else:
    return False","def check_palindrome(string):
  reversed_string = string[::-1]
  if string == reversed_string:
    return True
  else:
    return False",correct,String Manipulation
Translate the following pseudocode into Python,"""For each element in the array, if it is an even number, add one to a counter""","def count_even(arr): 
    count = 0
    for x in arr: 
        if x % 2 == 0: 
            count += 1
    return count","def count_even(arr): 
    count = 0
    for x in arr: 
        if x % 2 == 0: 
            count += 1
    return count",correct,Recursion
Create a Python function that takes in a string and an integer and returns a string with the input string repeated the number of times indicated by the input integer.,"string = ‘Hello’

int = 3","def repeat_string(s, n):
    return s*n

print(repeat_string('Hello', 3))
# Output: 'HelloHelloHello'","def repeat_string(s, n)
    return s*n

print(repeat_string('Hello', 3))
# Output 'HelloHelloHello'",Syntax Error,Recursion
Create a Python program to automatically delete any repeated words from a given text.,The cat was was running running in the park,"text = ""The cat was running in the park""

words = text.split(' ')
unique_words = []

for word in words:
 if word not in unique_words: 
  unique_words.append(word)

print(' '.join(unique_words))","text = ""The cat was running in the park""

words = text.split(' ')
unique_words = []

for word in words:
 if word not in unique_words: 
  unique_words.append(word)

print(name, ' '.join(unique_words))",Syntax Error,Recursion
Create an API endpoint in Python that takes a text string as input and outputs a JSON response with the text reversed.,Hello world,"from flask import Flask, request, jsonify

app = Flask(__name__)

@app.route('/reverse', methods=['POST'])
def reverse():
 data = request.get_json()
 text = data['text']
 reversed_text = text[::-1]

 return jsonify({'reversed_text': reversed_text})

if __name__ == '__main__':
 app.run()","from flask import Flask, request, jsonify

app = Flask(__name__)

@app.route('/reverse', methods=['POST'])
def reverse():
 data = request.get_json()
 text = data['text']
 reversed_text = text[::-1]

 return jsonify({'reversed_text': reversed_text})

if __name__ == '__main__':
 app.run()",Syntax Error,OOP
Write a function to count the longest repeating subsequences such that the two subsequences don’t have same string characters at same positions.,,"def find_longest_repeating_subseq(str): 
	n = len(str) 
	dp = [[0 for k in range(n+1)] for l in range(n+1)] 
	for i in range(1, n+1): 
		for j in range(1, n+1): 
			if (str[i-1] == str[j-1] and i != j): 
				dp[i][j] = 1 + dp[i-1][j-1] 
			else: 
				dp[i][j] = max(dp[i][j-1], dp[i-1][j]) 
	return dp[n][n]","def find_longest_repeating_subseq(str): 
	n = len(str) 
	dp = [[0 for k in range(n+1)] for l in range(n+1)] 
	for i in range(1, n+1): 
		for j in range(1, n+1): 
			if (str[i-1] == str[j-1] and i != j): 
				dp[i][j] = 1 + dp[i-1][j-1] 
			else: 
				dp[i][j] = max(dp[i][j-1], dp[i-1][j]) 
	return dp[n][n]",correct,File I/O
Design an algorithm in Python to search a list of numbers for a particular number and return the index at which the number is located.,,"def search(nums, target):
    for i, num in enumerate(nums):
        if target == num:
            return i
    return -1","def search(nums, target):
    for i, num in enumerate(nums):
        if target == num:
            return i
    return -1",correct,Recursion
Write a Python code snippet to obtain the average of the elements in a given list.,"list = [2, 3, 5, 4]","def average(list):
 total = 0
 for num in list:
 total += num
 return total / len(list)

print(average([2, 3, 5, 4]))","def average(list):
 total = 0
 for num in list:
 total += ",Incomplete Answer,Loops
Replace the element 'apple' in a given array with 'pear' using python code.,"Array: A = ['apple', 'banana', 'orange', 'grape']","A = ['apple', 'banana', 'orange', 'grape']
A[0] = 'pear'
print(A) # Output:  ['pear', 'banana', 'orange', 'grape']","A = ['apple', 'banana', 'orange', 'grape']
A[0] = 'pear'
print(A) # Output  ['pear', 'banana', 'orange', 'grape']",Syntax Error,String Manipulation
Create a function in Python that removes duplicates from a list of items.,"[1, 2, 3, 2, 4, 1]","def remove_duplicates(items):
  no_duplicates = []
  for item in items:
    if item not in no_duplicates:
      no_duplicates.append(item)
  return no_duplicates

items = [1, 2, 3, 2, 4, 1]

result = remove_duplicates(items)

print(result) # [1, 2, 3, 4]","def remove_duplicates(items:
  no_duplicates = []
  for item in items:
    if item not in no_duplicates:
      no_duplicates.append(item
  return no_duplicates

items = [1, 2, 3, 2, 4, 1]

result = remove_duplicates(items

print(result # [1, 2, 3, 4]",Syntax Error,Loops
Implement a Python Script that prints out all the prime numbers between 0 and a given number.,,"def find_primes(number):
    for num in range(1, number + 1):
       # prime numbers are greater than 1
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                print(num)

find_primes(20)","def find_primes(number):
    for num in range(1, number + 1):
       # prime numbers are greater than 1
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                pritn(num)

find_primes(20)",Syntax Error,File I/O
Write a function to extract values between quotation marks of a string.,,"import re
def extract_values(text):
 return (re.findall(r'""(.*?)""', text))","import re
def extract_values(text:
 return (re.findall(r'""(.*?""', text",Syntax Error,Recursion
"Create a Python program that prints the numbers from 1 to 100, except when the number is divisible by 3, print ""Fizz"" and when the number is divisible by 5, print ""Buzz"" and when the number is divisible by both, print ""FizzBuzz"".",,"for i in range(1, 101):
 if i%3 == 0 and i%5 == 0:
  print(""FizzBuzz"")
 elif i%3 == 0:
  print(""Fizz"")
 elif i%5 == 0:
  print(""Buzz"")
 else:
  print(i)","for i in range(1, 101)
 if i%3 == 0 and i%5 == 0
  print(""FizzBuzz"")
 elif i%3 == 0
  print(""Fizz"")
 elif i%5 == 0
  print(""Buzz"")
 else
  print(i)",Syntax Error,File I/O
Create a Python script to remove the item 'Apple' from the given array.,"[""Banana"", ""Orange"", ""Apple""]","def remove(arr):
    result = []
    for item in arr:
        if item != ""Apple"":
            result.append(item)
    return result

print(remove([""Banana"", ""Orange"", ""Apple""])) # Output: [""Banana"", ""Orange""]","def remove(arr):
    result = []
    for item in arr:
        if item != ""Apple"":
            result.app",Incomplete Answer,Recursion
"Write a Python program to print all the numbers from 1 to n (inclusive), where n is a given number.",n = 20,"for i in range(1, n+1): 
 print(i)","for i in range(1,",Incomplete Answer,Loops
"Write a Python script that creates a class ""Student"" that has two attributes name and age.",,"class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age","class Student:
def __init__(self, name, age):
    self.name = name
    self.age = age",Syntax Error,String Manipulation
Write a Python program to classify a given set of integers depending on the parity of the remainder when they are divided by 2.,"[1, 8, 4, 120]","def classifyIntegersByOddEven(arr):
    evens = []
    odds = []
    
    for num in arr:
        if num % 2 == 0:
            evens.append(num)
        else:
            odds.append(num)
    
    return evens, odds

evens, odds = classifyIntegersByOddEven([1, 8, 4, 120])
print('Evens: ', evens)
print('Odds: ', odds)","def classifyIntegersByOddEven(arr):
    evens = []
    odds = []
    
    for num in arr:
        if num % 2 == 0:
            evens.append(num)
        else:
            odds.append(num)
    
    return evens, odds

evens, odds = classifyIntegersByOddEven([1, 8, 4, 120])
print('Evens: ', evens)
print('Odds: ', odds)",correct,OOP
Establish a connection to a MySQL database using Python.,,"# Python program to establish connection to a MySQL database

import mysql.connector

# establish connection
mydb = mysql.connector.connect(host=""localhost"", user=""yourusername"", passwd=""yourpassword"")

# create a cursor
mycursor = mydb.cursor()","# Python program to establish connection to a MySQL database

import mysql.connector

# establish connection
mydb = mysql.connector.connect(host=""localhost"", user=""yourusername"", passwd=""yourpassword"")

# create a cursor
mycursor = mydb.cursor()",correct,Recursion
Construct a Python program that reverses an array.,"[1, 5, 3, 10, 4, 8]","def reverse_array(arr): 
    low = 0
    high = len(arr) - 1
    
    while low < high: 
        arr[low], arr[high] = arr[high], arr[low] 
        low += 1
        high -= 1
  
    return arr","def reverse_array(arr): 
    low = 0
    high = len(arr) - 1
    
    while low < high: 
        arr[low], arr[high] = arr[high], arr[low] 
        low += 1
        high -= 1
  
    return arr",correct,String Manipulation
Develop a Python program that reads in a string and reverses the words in it maintaining their order.,This is a sample string,"def reverseWords(str): 
    words = str.split("" "") 
  
    newWords = [word[::-1] for word in words] 
  
    newString = "" "".join(newWords) 
  
    return newString 
      
print(reverseWords(""This is a sample string"")) 
# Result: sihT si a elpmas gnirts","def reverseWords(str): 
    words = str.split("" "") 
  
    newWords = [word[::-1] for word in words] 
  
    newString = "" "".join(newWords) 
  
    return newString 
      
print(reverseWords(""This is a sample string"")) 
# Result: sihT si a elpmas gnirts",correct,String Manipulation
Write a Python program to predict the future stock price of a company.,Predict the stock price of Apple in 2021.,"import pandas as pd

# Read the data
data = pd.read_csv(""apple stock data.csv"")

# Extract the data points
X = data[['open', 'high', 'low', 'volume']]
y = data['close']

# Fit the model
model.fit(X, y)

# Predict the stock price of Apple in 2021 
predict = model.predict([[Apple_open, Apple_high, Apple_low, Apple_volume]])
print(predict)","import pandas as pd

# Read the data
data = pd.read_csv(""apple stock data.csv"")

# Extract the data points
X = data[['open', 'high', 'low', 'volume']]
y = data['close']

# Fit the model
model.fit(X, y)

# Predict the stock price of Apple in 2021 
predict = model.predict([[Apple_open, Apple_high, Apple_low, Apple_volume]])
print(predict)",correct,String Manipulation
Generate a Python program that takes in a list of strings and outputs a new list containing only those that are between 3 and 7 characters long.,"['apple', 'banana', 'strawberry', 'orange']","def filterList(lst):
  result = []

  for s in lst:
    if 3 <= len(s) <= 7:
      result.append(s)
  
  return result

print(filterList(['apple', 'banana', 'strawberry', 'orange'])) # ['apple', 'banana', 'orange']","def filterList(lst):
  result = []

  for s in lst:
    if 3 <= len(s) <= 7:
      result.append(s)
  
  return result

print(filterList(['apple', 'banana', 'strawberry', 'orange'])) # ['apple', 'banana', 'orange']",correct,Loops
Write a Python program to detect duplicate numbers in a given array.,"arr = [10,20,15,20,30,10]","duplicate_numbers = []
for i in range(len(arr)):
  for j in range(i + 1, len(arr)):
    if arr[i] == arr[j]:
      duplicate_numbers.append(arr[i])

print(duplicate_numbers) # Output: [10, 20]","duplicate_numbers = []
for i in range(len(arr)):
  for j in range(i + 1, len(arr)):
    if arr[i] == arr[j]:
      duplicate_numbers.append(arr[i])

print(duplicate_numbers) # Output: [10, 20]",correct,Loops
Create a python program to return the element most frequently occurring in a list?,,"def most_frequent(lst):
    count = 0
    max_element = 0
    for element in lst:
        curr_count = lst.count(element)
        if curr_count > count:
            count = curr_count
            max_element = element
    return max_element","def most_frequent(lst):
    count = 0
    max_element = 0
    for element in lst:
        curr_count = lst.count(element",Incomplete Answer,Recursion
Write a Python program to extract odd elements from a list.,"mylist = [2, 3, 4, 5, 6, 7, 8]","mylist = [2, 3, 4, 5, 6, 7, 8]

odd_list = []
for num in mylist:
    if num % 2 != 0:
        odd_list.append(num)

print(odd_list) #[3, 5, 7]","mylist = [2, 3, 4, 5, 6, 7, 8]

odd_list = []
for num in mylist:
    if num % 2 != 0:
        odd_list.append(num)

pritn(odd_list) #[3, 5, 7]",Syntax Error,File I/O
Generate a python function that takes an array as an argument and returns the distinct elements in the array.,,"def distinct_values(arr):
    distinct_arr = []
    for element in arr:
        if element not in distinct_arr:
            distinct_arr.append(element)
    return distinct_arr","def distinct_values(arr):
    distinct_arr = []
    for element in arr:
        if element not in distinct_arr:
            distinct_arr.append(element)
    return distinct_arr",correct,Recursion
Write a Python program to separate the given string into a list of words.,"string=""This is a test string""","# Split the string into words 
words = string.split(' ') 

# Print the list of words 
print(words) # Output: ['This', 'is', 'a', 'test', 'string']","# Split the string into words 
words = string.split(' ') 

# Print the list of words 
print(words) # Output: ['This', 'is', 'a', 'test', 'string']",correct,File I/O
"Write and edit a Python function to filter a list of strings, removing any string at least 4 characters in length that contains the letter 'k'.","my_list = [""cat"", ""dog"", ""monkey"", ""kite""]","def filter_list(list):
    return [item for item in list if len(item) < 4 or 'k' not in item]

my_list = filter_list(my_list)
print(my_list)

# Output:
# ['cat', 'dog']","def filter_list(list):
    return [item for item in list if len(item) < 4 or 'k' not",Incomplete Answer,File I/O
Write a Python script to generate a dictionary with counts of unique characters in a given string.,"String = ""Hello World!""","def char_count(string):
    char_dict = {}
    for char in string:
        if char in char_dict:
            char_dict[char] += 1
        else:
            char_dict[char] = 1
    return char_dict

string = ""Hello World!""
result = char_count(string)
print(result)

# Outputs: {'H': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'W': 1, 'r': 1, 'd': 1, '!': 1}","def char_count(string):
    char_dict = {}
    for char in string:
        if char in char_dict:
            char_dict[char] += 1
        else:
            char_dict[char] = ",Incomplete Answer,File I/O
"Given a JSON record of a customer, write a Python program to extract the customer's name.","{
    ""name"": ""John Smith"",
    ""age"": 35
}","import json

data = json.loads('{
    ""name"": ""John Smith"",
    ""age"": 35
}')

customer_name = data[""name""]
print(customer_name)","import json

data = json.loads('{
    ""name"": ""John Smith"",
    ""age"": 35
}'

customer_name = data[""name""]
print(customer_name",Syntax Error,String Manipulation
Write a python function to count the number of digits in factorial of a given number.,,"import math 
def find_Digits(n): 
    if (n < 0): 
        return 0;
    if (n <= 1): 
        return 1; 
    x = ((n * math.log10(n / math.e) + math.log10(2 * math.pi * n) /2.0)); 
    return math.floor(x) + 1; ","import math 
def find_Digits(n): 
    if (n < 0): 
        return 0;
    if (n <= 1): 
        return 1; 
    x = ((n * math.log10(n / math.e) + math.log10(2 * math.pi * n) /2.0)); 
    return math.floor(x) + 1; ",correct,Loops
Write a Python program to generate documentation in HTML format for a given Python solution.,"Solution:
def add_item(item_list, new_item):
 item_list.append(new_item)
 return","def generate_html_doc(solution):
 html = ""<html>\n<head>\n<title>Python Documentation</title>\n</head>\n<body>\n\n<h1>Solution</h1>\n\
<pre>\n""
 html += solution + ""\n</pre>\n\n</body>\n</html>""
 return html","def generate_html_doc(solution):
 html = ""<html>\n<head>\n<title>Python Documentation</title>\n</head>\n<body>\n\n<h1>Solution</h1>\n\
<pre>\n""
 html += solution + ""\n</pre>\n\n</body>\n</html>""
 return html",correct,Recursion
Calculate the number of possible permutations of a string using the following Python function.,"word = ""helloworld""","def factorial(string): 
   len_string = len(string) 
   permutations = 1
   for i in range(1, len_string + 1): 
      permutations *= i 
   return permutations 

result = factorial(word) 
print(result)","def factorial(string): 
   len_string = len(string) 
   permutations = 1
   for i in range(1, len_string + 1): 
      permutations *= i 
   return permutations 

result = factorial(word) 
print(result)",correct,Loops
Write a function in Python to input a single number and display the square of that number.,,"def display_square(number):
    result = number * number
    print(result)

display_square(5)","def display_square(number):
    result = number * number
    print(result)

display_square(5)",correct,OOP
Create a function to calculate the sum of a sequence of integers.,"[1, 2, 3, 4, 5]","# Python code
def sum_sequence(sequence):
  sum = 0
  for num in sequence:
    sum += num
  return sum","# Python code
def sum_sequence(sequence):
  sum = 0",Incomplete Answer,OOP
Write a function in Python that takes 2 numbers and returns their GCD.,"48, 18","def findGCD(a,b): 
    if (a == 0) 
        return b 
    if (b == 0) 
        return a 
    
    if (a == b): 
        return a 
          
    # If a is greater 
    if (a > b): 
        return findGCD(a-b, b) 
    return findGCD(a, b-a) 

if __name__ == '__main__': 
      a = 48 
      b = 18 
      print(""GCD of"", a , b, ""is:"", findGCD(a, b))","def findGCD(a,b): 
    if (a == 0) 
        return b 
    if (b == 0) 
        return a 
    
    if (a == b): 
        return a 
          
    # If a is greater 
    if (a ",Incomplete Answer,OOP
"Given the following code snippet, create a function in Python that takes two strings and returns true if one string is a substring of the other.","s1 = 'Hello World'
s2 = 'World'","def is_substring(s1, s2):
 # check for empty strings 
 if s1 == '' or s2 == '':
 return False
 
 # check if s2 is a substring of s1
 if s1.find(s2) > -1:
 return True
 
 return False","def is_substring(s1, s2):
 # check for empty strings 
 if s1 == '' or s2 == '':
 return Fal",Incomplete Answer,Recursion
Design a software that reverse orders of string words.,Python programming is fun,"def reverse_string_words(string): 
    words = string.split("" "") 
    words.reverse()
    return ' '.join(words)  
  
string = ""Python programming is fun""
print(reverse_string_words(string))","def reverse_string_words(string): 
    words = string.split("" "") 
    words.reverse()
    retur",Incomplete Answer,OOP
Compute the area of a given circle using its radius in Python.,radius = 5,"import math

def calculateCircleArea(radius):
    area = math.pi * radius * radius
    return area

radius = 5

print(""Area of a circle with radius 5 is: "", calculateCircleArea(radius))","import math

def calculateCircleArea(radius):
    area = math.pi * radius * radius
    return area

radius = 5

print(""Area of a circle with radius 5 is: "", calculateCircleArea(radius))",correct,OOP
Create a Python script to fill empty cells in a Pandas DataFrame with the median value for that column.,A sample Pandas DataFrame,"import pandas as pd

# Replace empty cells with the median value of the column
df = df.fillna(df.median())

# Check if the null values have been replaced
print(df.isnull().sum())","import pandas as pd

# Replace empty cells with the median value of the column
df = df.fi",Incomplete Answer,OOP
Create a web scraping program in Python to extract text from a website,,"import requests
from bs4 import BeautifulSoup

# provide the url of the website you want to scrape 
url = 'https://example.com'

# send request to the server and get the html content
r = requests.get(url) 

# parse the html content
soup = BeautifulSoup(r.content, 'html.parser') 

# extract text
text = soup.find_all(text=True)

for t in text:
  print(t.strip())","import requests
from bs4 import BeautifulSoup

# provide the url of the website you want to scrape 
url = 'https://example.com'

# send request to the server and get the html content
r = requests.get(url) 

# parse the html content
soup = BeautifulSoup(r.content, 'html.parser') 

# extract text
text = soup.find_all(text=True)

for t in text:
  pritn(t.strip())",Syntax Error,OOP
Generate a lambda function in Python to find the average of all the elements in a list.,"[1, 2, 3, 4, 5]","list_nums = [1, 2, 3, 4, 5]

average = lambda list_nums: sum(list_nums) / len(list_nums)

print(average(list_nums))","list_nums = [1, 2, 3, 4, 5]

average = lambda list_nums: ",Incomplete Answer,String Manipulation
Create a Python program to scrape data from a web page given an URL.,,"import requests
from bs4 import BeautifulSoup

def scrape_webpage(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    return soup","import requests
from bs4 import BeautifulSoup

def scrape_webpage(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    return soup",correct,Loops
Provide a Python program to find the average number of elements in the nested list.,"[[1, 2, 3], [4, 5], [6, 7, 8, 9]]","def avg_elements(list_of_lists):
    total_elements = 0
    for sublist in list_of_lists:
        total_elements += len(sublist)
    return total_elements / len(list_of_lists)","def avg_elements(list_of_lists):
    total_elements = 0
    for sublist in list_of_lists:
        total_elements += len(sublist)
    return total_elements / len(list_of_lists)",Syntax Error,Recursion
Write a Python program to get the size of an object in bytes,,"import sys

def get_object_size(obj):
    #Return the size of the object in bytes
    return sys.getsizeof(obj)","import sys

def get_object_size(obj):
    #Return the size of the object in bytes
    return sys.getsizeof(obj)",correct,Loops
Module a Python program that takes two numbers and computes the sum of their squares.,"3, 4","def squared_sum(a, b):
    """"""
    Computes the sum of the squares of two given numbers
    """"""
    return a**2 + b**2

if __name__ == '__main__':
    a = 3
    b = 4
    result = squared_sum(a, b)
    print('The sum of {} and {} squares is: {}'.format(a, b, result))","def squared_sum(a, b):
    """"""
    Computes the sum of the squares of two given numbers
    """"""
    return a**2 + b**2

if __name__ == '__main__':
    a = 3
    b = 4
    result = squared_sum(a, b)
    print('The sum of {} and {} squares is: {}'.format(a, b, result))",correct,Loops
Write a function to find the volume of a cuboid.,,"def volume_cuboid(l,w,h):
  volume=l*w*h
  return volume","def volume_cuboid(l,w,h):
  ",Incomplete Answer,Loops
Create a program in Python for generating a Fibonacci sequence.,,"# Generate a Fibonacci sequence

# Function to generate Fibonacci sequence
def Fibonacci(n):
    if n < 0:
        print(""Incorrect input"")
    elif n == 1:
        return 0
    elif n == 2:
        return 1
    else:
        return Fibonacci(n-1) + Fibonacci(n-2)

# Print the sequence upto n terms
terms = 10
print(""Fibonacci sequence:"")
for num in range(1, terms + 1):
    print(Fibonacci(num))","# Generate a Fibonacci sequence

# Function to generate Fibonacci sequence
def Fibonacci(n):
    if n < 0:
        print(""Incorrect input"")
    elif n == 1:
        return 0
    elif n == 2:
        return 1
    else:
        return Fibonacci(n-1) + Fibonacci(n-2)

# Print the sequence upto n terms
terms = 10
print(""Fibonacci sequence:"")
for num in range(1, terms + 1):
    print(Fibonacci(num))",correct,String Manipulation
Categorize the following Github repositories:,"Repo A: Languages: Python, JavaScript, HTML.
Repo B: Languages: Java, JavaScript, CSS.","Repo A: Python, JavaScript, HTML
Repo B: Java, JavaScript, CSS","Repo A: Python, JavaScript, HTM",Incomplete Answer,Loops
Write a Python script to generate 100 random numbers from 1-10.,,"import random
 
random_nums = [random.randint(1, 10) for _ in range(100)]
 
print(random_nums)","import random
 
random_nums = [random.randint(1, 10) for _ in range(100)]
 
pritn(random_nums)",Syntax Error,OOP
Generate a Python code that takes in two sets of coordinates and prints the distance between them,"(2,3), (4,5)","def calculate_distance(p1, p2):
  x1, y1 = p1
  x2, y2 = p2
  return ((x2 - x1)**2 + (y2 - y1)**2)**0.5","def calculate_distance(p1, p2):
  x1, y1 = p1
  x2,",Incomplete Answer,Loops
Create a class in Python to model a Point and its methods.,,"class Point:
  def __init__(self, x, y):
    self.x = x
    self.y = y

  def move(self, dx, dy):
    self.x += dx
    self.y += dy

  def distance(self, other_point):
    return ((self.x - other_point.x)**2 + (self.y - other_point.y)**2)**0.5

#example 
p1 = Point(2,3)
p2 = Point(5,7)

print(p1.distance(p2))","class Point:
  def __init__(self, x, y):
    self.x = x
    self.y = y

  def move(self, dx, dy):
    self.x += dx
    self.y += dy

  def distance(self, o",Incomplete Answer,Loops
Write a function in Python to find the power of a given number n using an iterative approach.,,"def power_iterative(n, exponent):
  # First, set an initial product value
  product = 1
  # Iterate up to the desired power
  for _ in range(exponent):
    product *= n
  # Return the product
  return product

power = power_iterative(3, 4)
print(power)","def power_iterative(n, exponent:
  # First, set an initial product value
  product = 1
  # Iterate up to the desired power
  for _ in range(exponent:
    product *= n
  # Return the product
  return product

power = power_iterative(3, 4
print(power",Syntax Error,String Manipulation
Create a function to filter out strings that are longer than 10 characters.,"[""Hello"", ""World"", ""Python"", ""Programming""]","def filter_long_strings(arr):
  result = []
  for word in arr:
    if len(word) <= 10:
      result.append(word)
  return result

myArr = [""Hello"", ""World"", ""Python"", ""Programming""]
print(filter_long_strings(myArr))

# Output: [""Hello"", ""World"", ""Python""]","def filter_long_strings(arr):
  result = []
  for word in arr:
    if len(word) <= 10:
      result.append(word)
  return resul",Incomplete Answer,OOP
Create a Python program to search a given list of strings to find any matches to a given substring.,"list_of_strings = ['Tesla', 'Apple', 'Microsoft', 'Google', 'Amazon']
substring = 'go'","matches = []

for string in list_of_strings:
 if substring.lower() in string.lower():
 matches.append(string)

print(""Matches: "", matches)
# Output: Matches: ['Google', 'Amazon']","matches = []

for string in list_of_strings:
 if substring.lower() in string.lower():
 matches.append(string)

print(""Matches: "", matches)
# Output: Matches: ['Google', 'Amazon']",correct,File I/O
Create a program in Python to compute the host BMI given a user’s height and weight.,"Height: 172 cm
Weight: 85 kg","def compute_bmi(height, weight):
    bmi = weight / (height * height)
    return bmi

bmi = compute_bmi(172, 85)
print(""Your BMI is {:.2f}"".format(bmi))","def compute_bmi(height, weight):
    bmi = weight / (height * height)
    return bmi

bmi = compute_bmi(172, 85)
print(""Your BMI is {:.2f}"".format(bmi))",correct,File I/O
Create a Python program for finding all combinations of numbers that equal a given target number.,target = 10,"def find_combos(target):
 combos = []
 
 for i in range(int(target/2)+1):
 # increments of two to avoid duplicate results
 for j in range(i, int(target/2)+1, 2):
 if i+j == target:
 combos.append((i,j))
 
 return combos

combos = find_combos(10)
print(combos)","def find_combos(target):
 combos = []
 
 for i in range(int(target/2)+1):
 # increments of two to avoid duplicate results
 for j ",Incomplete Answer,File I/O
Create a python program that determines whether or not a number if prime,,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True","def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True",correct,Loops
"Given a string containing a sentence, create a function in Python that returns a list of words in the sentence that are longer than 5 characters.",,"def long_words(sentence):
 words = sentence.split(' ')
 long_words = []
 
 for word in words:
   if len(word) > 5:
     long_words.append(word)
 
 return long_words","def long_words(sentence):
 words = sentence.split(' ')
 long_words = []
 
 for word in words:
   if len(word) > 5:
     long_words.append(word)
 
 return long_words",Syntax Error,String Manipulation
Create a heap data structure in Python using the heapq library.,No input,"import heapq

def create_heap(items):
 heapq.heapify(items)

def add_item(items, item):
 heapq.heappush(items, item)

def pop_item(items):
 return heapq.heappop(items)

items = [4, 5, 2, 33, 1]
create_heap(items)
add_item(items, 6)
pop_item(items)","import heapq

def create_heap(items):
 heapq.heapify(items)

def add_item(items, item):
 heapq.heappush(items, item)

def pop_item(items):
 return heapq.heappop(items)

items = [4, 5, 2, 33, 1]
create_heap(items)
add_item(items, 6)
pop_item(items)",Syntax Error,Recursion
"Rewrite the following JavaScript function to Python. The function takes two parameters and returns their product. 
 
 function multiply(x, y) {
   return x * y;
 }",,"def multiply(x, y):
    return x * y;","def multiply(x, y):
    return x * y;",Syntax Error,Loops
Detect the data type of a given string in Python.,"String: ""Hello World!""",str type,str type,Incomplete Answer,Recursion
Create a mathematical expression solver function in Python.,"""2 + 2""","def expression_solver(expression):
    '''This function solves a given mathematical expression'''

    return eval(expression)

expression = ""2 + 2""

result = expression_solver(expression)

print(result) # 4","def expression_solver(expression):
    '''This function solves a given mathematical expression'''

    ",Incomplete Answer,Loops
Create a Python program to print the even numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","[2, 4, 6, 8]","[2, 4,",Incomplete Answer,File I/O
Create a function in Python that takes in an integer and returns an array containing its prime factors.,38,"def prime_factors(num):
    res = []
    while num%2 == 0:
        num = num/2
        res.append(2)
    for i in range(3, int(num**0.5)+1,2):
        while num%i == 0:
            num = num//i
            res.append(i)
    if num > 2 :
        res.append(int(num))
    return res

print(prime_factors(38))","def prime_factors(num):
    res = []
    while num%2 == 0:
        num = num/2
        res.append(2)
    for i in range(3, int(num**0.5)+1,2):
        wh",Incomplete Answer,File I/O
Design and implement a Python class that implements a basic stack.,,"class Stack:
 def __init__(self):
 self.items = []

 def push(self, item):
 self.items.append(item)

 def pop(self):
 return self.items.pop()

 def peek(self):
 return self.items[-1]

 def is_empty(self):
 return self.items == []

 def size(self):
 return len(self.items)","class Stack:
 def __init__(self):
 self.items = []

 def push(self, item):
 self.items.append(item)

 def pop(self):
 return self.items",Incomplete Answer,Loops
Create an algorithm in Python to calculate the area of a triangle.,"A = 5, B = 10, C = 13","def calculate_area(a,b,c): 
    # calculate the semi-perimeter 
    s = (a + b + c) / 2
    # calculate the area 
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
    return area 
  
# Driver code 
a = 5
b = 10
c = 13
area = calculate_area(a,b,c) 
  
print(""The area of the triangle is {} cm"".format(area))","def calculate_area(a,b,c) 
    # calculate the semi-perimeter 
    s = (a + b + c) / 2
    # calculate the area 
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
    return area 
  
# Driver code 
a = 5
b = 10
c = 13
area = calculate_area(a,b,c) 
  
print(""The area of the triangle is {} cm"".format(area))",Syntax Error,String Manipulation
Write a code snippet in Python to print the current month.,,"import calendar

# get the current month 
current_month = calendar.month_name[calendar.datetime.now().month]
print('Current Month is %s' %current_month)","import calendar

# get the current month 
current_month = calendar.month_name[calendar.datetime.now(.month]
print('Current Month is %s' %current_month",Syntax Error,OOP
Write a Python program to print an empty square based on size,Size = 8,"def print_square(size): 

    # loop to print size number of lines 
    for _ in range(size): 

        # print stars on each line 
        print(""*"" * size) 

if __name__ == '__main__':
    size = 8
    print_square(size)","def print_square(size): 

    # loop to print size number of lines 
    for _ in range(size): 

        # print stars on each line 
        print(""*"" * size) 

if __name__ == '__main__':
    size = 8
    print_square(size)",correct,File I/O
Create a Python script to merge two dictionaries.,"dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}","def merge_dicts(dict1, dict2):
    res = {**dict1, **dict2}
    return res

dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}

merged_dicts = merge_dicts(dict1, dict2)

print(merged_dicts)","def merge_dicts(dict1, dict2):
    res = {**dict1, **dict2}
    return res

dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}

merged_dicts = merge_dicts(dict1, dict2)

print(merged_dicts)",correct,OOP
Create a Python program to find the nth Fibonacci number,,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==0: 
        return 0
    elif n==1: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2)","def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==0: 
        return 0
    elif n==1: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2)",correct,Recursion
Write a Python program to create a histogram representing the frequency distribution of a set of data.,"[1, 2, 3, 4, 5, 5]","import matplotlib.pyplot as plt 

data = [1, 2, 3, 4, 5, 5]

plt.hist(data, bins=5) 
plt.title(""Frequency Distribution"")
plt.show()","import matplotlib.pyplot as plt 

data = [1, 2, 3, 4, 5, 5]

plt.",Incomplete Answer,Loops
Create a Python program that reads in a list of strings from the keyboard and sorts them alphabetically.,,"sorted_list = []
input_strings = input(""Enter a list of strings, separated by spaces: "")

input_strings = input_strings.split()
for string in input_strings:
    sorted_list.append(string)

sorted_list.sort()

print(sorted_list)","sorted_list = []
input_strings = input(""Enter a list of strings, separated by spaces: "")

input_strings = input_strings.split()
for string in input_strings:
    sorted_list.append(string)

sorted_list.sort()

print(sorted_list)",correct,OOP
Devise a python code which will generate a new list with each element of the list squared.,"data = [2, 3, 5, 6, 20, 9]","def square_list(arr):
    result = [num**2 for num in arr]
    return result","def square_list(arr):
    result = [num**2 for num in arr]
    return result",Syntax Error,Loops
Write a Python program to find the sum of the first n natural numbers.,,"def sum_of_n_numbers(n):
  sum = 0
  for i in range(n+1):
      sum += i
  return sum","def sum_of_n_numbers(n):
  sum = 0
  for i in range(n+1):
      sum += i
  return sum",correct,OOP
Create a python program which appends a new item to a given list.,"list_data = [1, 3, 5]
new_item = 7","def append_to_list (list_data, new_item):
    list_data.append(new_item)
    return list_data","def append_to_list (list_data, new_item):
    list_data.append(new_item)
    return list_data",correct,Loops
Write a Python function that takes two arguments and prints the sum.,,"def print_sum(a, b):
    print(a + b)","def print_sum(a, b",Incomplete Answer,String Manipulation
Create a recursive program in Python which prints out the Fibonacci Sequence,,"def Fibonacci_Sequence(num): 
    if num <= 0: 
        return 0
    elif num == 1: 
        return 1
    else: 
        return Fibonacci_Sequence(num-1) + Fibonacci_Sequence(num-2) 
    
# Program to print the Fibonacci Sequence 
num = int(input(""Enter the number of fibonacci sequence: ""))
if num < 0:
    print(""Incorrect input"")
for i in range(num): 
    print(Fibonacci_Sequence(i))","def Fibonacci_Sequence(num): 
    if num <= 0: 
        return 0
    elif num == 1: 
        return 1
    else: 
        return Fibonacci_Sequence(num-1) + Fibonacci_Sequence(num-2) 
    
# Pro",Incomplete Answer,String Manipulation
Generate a python program to alphabetically sort the following list.,"[""Paul"", ""John"", ""George"", ""Ringo""]","my_list = [""Paul"", ""John"", ""George"", ""Ringo""]
my_list.sort() 
print(my_list)","my_list = [""Paul"", ""John"", ""George"", ""Ringo""]
my_list.sort() 
print(my_list)",correct,File I/O
"Implement a function in Python that given an array of integers, returns the largest number in the array.","[1, 2, -4, 8, 3, 7]","def get_largest_number(arr):
  max_val = arr[0]
  for n in arr:
    if n > max_val:
      max_val = n
  return max_val

arr = [1, 2, -4, 8, 3, 7]
ans = get_largest_number(arr)
print(ans) # Output 8","def get_largest_number(arr):
  max_val = arr[0]
  for n in arr:
    if n > max_val:
      max_val = n
  return max_val

arr = [1, 2, -4, 8, 3, 7]
ans = get_largest_number(arr)
print(ans) # Output 8",correct,Loops
Compose a Python program to convert a list of multiple integers into a single integer.,,"def convert_to_integer(my_list):
    my_integer = int("""".join(map(str, my_list))) 
    return my_integer","def convert_to_integer(my_list):
    my_integer = int("""".join(map(str, my_list))) 
    return my_integer",correct,OOP
Write a python script to compute the mean of a list of integers.,"X = [2,4,6,8,10]","def find_mean(X):
    # Compute the sum of all the elements in the list
    sum_x = 0
    for x in X:
        sum_x += x
    
    # Compute the mean
    mean = sum_x / len(X)
    
    return mean

if __name__ == '__main__':
    X = [2,4,6,8,10]
    print(find_mean(X))","def find_mean(X):
    # Compute the sum of all the elements in the list
    sum_x = 0
    for x in X:
        sum_x += x
    
    # Compute the mean
    mean = sum_x / len(X)
    
    return mean

if __name__ == '__main__':
    X = [2,4,6,8,10]
    print(find_mean(X))",correct,String Manipulation
Create a Python program to determine the missing elements from a given list.,"[2, 4, 6, 8, 10]","def find_missing_elements(list):
    missing_elements = []
    for i in range(min(list), max(list)):
        if i not in list:
            missing_elements.append(i)
    return missing_elements","def find_missing_elements(list):
    missing_elements = []
    for i in range(min(list), max(lis",Incomplete Answer,File I/O
Design a Python script to output all values in a given list that are factors of a given integer.,"list = [1, 2, 3, 4, 5, 6] 
integer = 6","def factors(list,integer):
    factors_list = []
    for num in list:
        if integer % num == 0:
            factors_list.append(num)
    return factors_list

print(factors([1,2,3,4,5,6], 6))  # [1, 2, 3, 6]","def factors(list,integer):
    factors_list = []
    for num in list:
        if integer % num == 0:
    ",Incomplete Answer,OOP
Create a function in Python that takes in a string and returns the frequency of each character in the string in form of a dictionary.,'hello world',"def frequency(string): 
    freq = {} 
    for i in string: 
        if i in freq: 
            freq[i] += 1
        else: 
            freq[i] = 1
    return freq

print(frequency('hello world'))","def frequency(string): 
    freq = {} 
    for i in string: 
        if i in freq: 
            freq[i] += 1
        else: 
            freq[i] = 1
    return freq

pritn(frequency('hello world'))",Syntax Error,String Manipulation
Write Python code to search a given collection of books to find all books containing the text “Alice in Wonderland”,,"def find_books_with_alice(books):
    found_books = []
    for book in books:
        if ""Alice in Wonderland"" in book.Text:
            found_books.append(book)
    return found_books","def find_books_with_alice(books:
    found_books = []
    for book in books:
        if ""Alice in Wonderland"" in book.Text:
            found_books.append(book
    return found_books",Syntax Error,OOP
Explain what is the purpose of the reduce() function in Python.,,"The reduce() function in Python is a part of the functools module. It receives a function and a sequence as arguments and applies the function to each item of the sequence, from left to right, cumulatively. The reduce() function reduces the sequence to a single value by combining items from the sequence using the function that is passed in as argument.","The reduce() function in Python is a part of the functools module. It receives a function and a sequence as arguments and applies the function to each item of the sequence, from left to right, cumulatively. The reduce() function reduces the sequence to a single value by combining items from the sequence using the function that is passed in as argument.",correct,OOP
Write a python function to convert a list of multiple integers into a single integer.,,"def convert(list): 
    s = [str(i) for i in list] 
    res = int("""".join(s))  
    return (res) ","def convert(list): 
    s = [str(i) for i in list",Incomplete Answer,OOP
"Create a class in Python that takes a string as a constructor argument and stores it in a list. The class should have a method that prints the string, followed by the phrase “was stored”",,"class StringList:
    def __init__(self, string):
        self.stringlist = [string]
    
    def printString(self):
        for s in self.stringlist:
            print(s + ' was stored')

mylist = StringList('Hello World')
mylist.printString()","class StringList:
    def __init__(self, string):
        self.stringlist = [string]
    
    def printString(self):
        for s in self.stringlist:
            print(s + ' was stored')

mylist = StringList('Hello World')
mylist.printString()",correct,Recursion
Write a Python script that takes in two lists of length n and outputs a set of combinations of the two lists such that the resulting list is of length n^2.,"list1 = [1,2,3]
list2 = [4,5,6]","combinations = []

for i in range(len(list1)):
for j in range(len(list2)):
combinations.append((list1[i], list2[j]))

print(combinations)
# Output: [(1,4), (1,5), (1,6), (2,4), (2,5), (2,6), (3,4), (3,5), (3,6)]","combinations = []

for i in range(len(list1)):
for j in range(len(list2)):
combinations.append((list1[i],",Incomplete Answer,String Manipulation
Write a Python program to find the elements that are present in both lists.,"<list1:[1, 2, 3, 4]><list2:[3, 4, 5, 6]>","list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]

common_elements = []
for i in range(len(list1)):
 for j in range(len(list2)):
  if list1[i] == list2[j]:
   common_elements.append(list1[i])

print(common_elements) # [3, 4]","list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]

common_elements = []
for i in range(len(list1:
 for j in range(len(list2:
  if list1[i] == list2[j]:
   common_elements.append(list1[i]

print(common_elements # [3, 4]",Syntax Error,OOP
Write an algorithm in Python that searches for a given keyword in a list of strings.,"string_list = [""hello"", ""goodbye"", ""apple"", ""world""]
keyword = ""apple""","def keyword_search(string_list, keyword):
  found = False
  for string in string_list:
    if keyword in string:
      found = True
      break
  return found

result = keyword_search(string_list, keyword)

if result:
  print(""The keyword was found"")
else:
  print(""The keyword was not found"")","def keyword_search(string_list, keyword):
  found = False
  for string in string_list:
    if keyword in string:
      found = True
      break
  ",Incomplete Answer,String Manipulation
Write a Python program to do the following:,Create a function that takes two numbers as arguments and returns their product.,"def product(x, y):
    return x * y","def product(x, y)",Incomplete Answer,Loops
Generate a python script to extract the 10th row from a table,,"import pandas as pd

# read the table
table = pd.read_csv('table_name.csv')

# Extract the 10th row
row = table.loc[9, :]

# Print the row
print('The 10th row is: ', row)","import pandas as pd

# read the table
table = pd.read_csv('table_name.csv')

# Extract the 10th row
row = table.loc[9, :]

# Print the row
print('The 10th row is: ', row)",Syntax Error,String Manipulation
Generate a Python code to print all the animal types entered in a list,"[""dog"", ""cat"", ""mouse"", ""snake""]","animal_list = [""dog"", ""cat"", ""mouse"", ""snake""] 

for animal in animal_list:
    print(animal)","animal_list = [""dog"", ""cat"", ""mouse"", ""snake""]",Incomplete Answer,String Manipulation
Develop a Python program that can convert a given amount in American Dollar (USD) to British Pound Sterling (GBP).,500 USD,"# Python code:
def convert_usd_to_gbp(usd):
  gbp = usd / 1.3
  return gbp

usd = 500
gbp = convert_usd_to_gbp(usd)

print(f""{usd} USD = {gbp:.2f} GBP"")","# Python code
def convert_usd_to_gbp(usd)
  gbp = usd / 1.3
  return gbp

usd = 500
gbp = convert_usd_to_gbp(usd)

print(f""{usd} USD = {gbp.2f} GBP"")",Syntax Error,Loops
Improve the Python method provided so that it checks whether the given array is a palindrome or not.,"arr = [1, 2, 3, 2, 1]","def is_palindrome(arr):
    mid = len(arr) // 2
    for i in range(mid):
        if arr[i] != arr[len(arr) - 1 - i]:
            return False
    return True

arr = [1, 2, 3, 2, 1]
print(is_palindrome(arr))","def is_palindrome(arr):
    mid = len(arr) // 2
    for i in range(mid):
        if arr[i] != arr[len(a",Incomplete Answer,String Manipulation
Generate code in python to automate the following task,"Given a list of numbers, find and return the first number that is greater than 10.","def find_number_greater_than_10(arr):
    for num in arr:
        if num > 10:
            return num

# Example
data_set = [1, 2, 11, 20, 6, 7]
print(find_number_greater_than_10(data_set))  # Output: 11","def find_number_greater_than_10(arr):
    for num in arr:
        if num > 10:
            return num

# Example
data_set = [1, 2, 11, 20, 6, 7]
print(find_number_greater_than_10(data_set))  # Output: 11",correct,String Manipulation
Can you suggest a code snippet that fetches the last element from a list in Python?,,"my_list = [3, 5, 7, 9, 2]

last_element = my_list[-1]
print('Last element in the list is %d' % (last_element))","my_list = [3, 5, 7, 9, 2]

last_element = my_list[-1]
p",Incomplete Answer,OOP
Create a Python function to create a dictionary from a given list of tuples with the first elements of each tuple as the key.,"tuples = [(""a"", ""b""), (""c"", ""d""), (""e"", ""f"")]","def create_dict(tuples): 
  dictionary = {} 
  
  for item in tuples: 
    dictionary[item[0]] = item[1]
  
  return dictionary 
  
tuples = [(""a"", ""b""), (""c"", ""d""), (""e"", ""f"")]
print(create_dict(tuples)) 

# Output
{'a': 'b', 'c': 'd', 'e': 'f'}","def create_dict(tuples): 
  dictionary = {} 
  
  for item in tuples: 
    dictionary[item[0]] = item[1]
  
  return dictionary 
  
tuples = [(""a"", ""b""), (""c"", ""d""), (""e"", ""f"")]
pritn(create_dict(tuples)) 

# Output
{'a': 'b', 'c': 'd', 'e': 'f'}",Syntax Error,Recursion
Create a Python 3 function to calculate the length of a string.,"string = 'hello, world!'","def get_str_length(string):
  return len(string)

print(get_str_length(string)) # outputs 13","def get_str_length(string):
  return len(strin",Incomplete Answer,Loops
"Given a matrix, write a Python function to transpose the matrix (swap the rows and columns of the matrix).",,"def transpose_matrix(matrix):
    m = len(matrix)
    n = len(matrix[0])
    result = []

    for j in range(n):
        row = []
        for i in range(m):
            row.append(matrix[i][j])
        result.append(row)
    return result","def transpose_matrix(matrix):
    m = len(matrix)
    n = len(matrix[0])
    result = []

    for j in range(n):
        row = []
        for i in range(m):
            row.append(matrix[i][j])
        result.append(row)
    return result",correct,String Manipulation
Implement a Stack data structure in Python,,"class Stack:
    def __init__(self): 
        self.stack = [] 
  
    def is_empty(self): 
        return self.stack == [] 
  
    def push(self, data): 
        self.stack.append(data) 
      
    def pop(self): 
        data = self.stack[-1] 
        del self.stack[-1] 
        return data 
  
    def peek(self): 
        return self.stack[-1] 
      
    def size_stack(self): 
        return len(self.stack)","class Stack:
    def __init__(self): 
        self.stack = [] 
  
    def is_empty(self): 
        return self.stack == [] 
  
    def push(self, data): 
        self.stack.append(data) 
      
    def pop(self): 
        data = self.stack[-1] 
        del self.stack[-1] 
        return data 
  
    def peek(self): 
        return self.stack[-1] 
      
    def size_stack(self): 
        return len(self.stack)",Syntax Error,File I/O
Write a Python program that will count the words in a sentence or piece of text.,"""Hello World. This is a sentence.""","sentence = ""Hello World. This is a sentence.""
words = sentence.split()
word_count = len(words)

print(f""The sentence has {word_count} words."")","sentence = ""Hello World. This is a sentence.""
words = sentence.split()
",Incomplete Answer,Loops
Create a Python function to generate a matrix with random numbers in it.,,"import numpy as np
def random_matrix(row, col):
    matrix = np.random.random((row,col))
    print(matrix)

random_matrix(3,3) #Outputs: [[0.48281427 0.8640267  0.16479638]
                      [0.65602432 0.37230416 0.05444421]
                      [0.78832705 0.19239374 0.03173512]]","import numpy as np
def random_matrix(row, col):
    matrix = np.random.random((row,col))
    print(matrix)

random_matrix(3,3) #Outputs: [[0.48",Incomplete Answer,OOP
Write an algorithm in Python to calculate the sum of the numbers of a list and store the result in a dictionary.,"list = [1, 4, 8, 10]","sum_dict = {}

def sum_list(list):
 total = 0
 for num in list:
 total += num
 sum_dict[""sum""] = total
 return sum_dict

sum_dict = sum_list(list)","sum_dict = {}

def sum_list(list):
 total = 0
 for num in list:
 total +=",Incomplete Answer,String Manipulation
Generate a function in Python that takes a natural number as argument and returns the product of all numbers up to it.,n = 4,"def getProduct(n):
  result = 1
  for i in range(n):
    result *= i+1
    
  return result","def getProduct(n):
  result = 1
  for i in range(n):
    result *= i+1
    
  return result",Syntax Error,Recursion
Create a Python function that takes a string and rotates the characters in the string by a specified integer.,"""Hello"", 3","def rotateString(s, n):
    output = """"
    for char in s:
        output += chr(ord(char) + n)
    return output

result = rotateString(""Hello"", 3)
print(result)","def rotateString(s, n):
    output = """"
    for char in s:
        output += chr(ord(char) + n)
    return output

result = rotateString(""Hello"", 3)
print(result)",correct,Recursion
Write a Socket program in Python to listen for messages on port 8080 and echo the received message.,,"import socket

HOST = 'localhost'
PORT = 8080

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind((HOST, PORT))
s.listen()

conn, addr = s.accept()
with conn:
 print('Connected by', addr)
 while True:
 data = conn.recv(1024)
 if not data:
 break
 print('Received:', data.decode('utf-8'))
 conn.send(data)

s.close()","import socket

HOST = 'localhost'
PORT = 8080

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind((HOST, PORT))
s.listen()

conn, addr = s.accept()
with conn:
 print(name, 'Connected by', addr)
 while True:
 data = conn.recv(1024)
 if not data:
 break
 print(name, 'Received:', data.decode('utf-8'))
 conn.send(data)

s.close()",Syntax Error,Loops
Implement a Python function to search for an item in an array.,"arr = [15, 20, 25, 30, 35]
item = 25","def search(arr, item):
    for i in range(len(arr)):
        if item == arr[i]:
            return i
    return -1

arr = [15, 20, 25, 30, 35]
item = 25
index = search(arr, item)
if index == -1:
    print(""Element not found"")
else:
    print(""Element found at index"", index)

# Output:
# Element found at index 2","def search(arr, item):
for i in range(len(arr)):
    if item == arr[i]:
        return i
return -1

arr = [15, 20, 25, 30, 35]
item = 25
index = search(arr, item)
if index == -1:
print(""Element not found"")
else:
print(""Element found at index"", index)

# Output:
# Element found at index 2",Syntax Error,Loops
Write a python script that does the following:,Download the content of a website,"import requests

url = ""https://example.com"" 
r = requests.get(url)
data = r.content

with open(""example_website.html"", ""wb"") as file:
    file.write(data)

print(""File downloaded successfully."")","import requests

url = ""https//example.com"" 
r = requests.get(url)
data = r.content

with open(""example_website.html"", ""wb"") as file
    file.write(data)

print(""File downloaded successfully."")",Syntax Error,Loops
Write a python code to create a histogram,Input is an array of integers,"import matplotlib.pyplot as plt

def create_histogram(data):
    plt.hist(data, bins=20)
    plt.title('Histogram of Input Data')
    plt.show()

# Example data
data = [1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1]

create_histogram(data)","import matplotlib.pyplot as plt

def create_histogram(data):
    plt.hist(data, bins=20)
    plt.title('Histogra",Incomplete Answer,String Manipulation
Design a sorting algorithm in Python that is capable of sorting very large lists.,"[25, 6, 7, 3, 12, 89, 74, 55]","def sort(array):
    for i in range(len(array)):
        low = i
        for j in range(i+1, len(array)):
            if array[low] > array[j]:
                low = j
        array[i], array[low] = array[low], array[i]
    return array
 
example = [25, 6, 7, 3, 12, 89, 74, 55]
sorted_array = sort(example)
print(sorted_array)","def sort(array:
    for i in range(len(array:
        low = i
        for j in range(i+1, len(array:
            if array[low] > array[j]:
                low = j
        array[i], array[low] = array[low], array[i]
    return array
 
example = [25, 6, 7, 3, 12, 89, 74, 55]
sorted_array = sort(example
print(sorted_array",Syntax Error,String Manipulation
Write a function to convert the given string of float type into tuple.,,"def float_to_tuple(test_str):
  res = tuple(map(float, test_str.split(', ')))
  return (res) ","def float_to_tuple(test_str):
  res = tuple(ma",Incomplete Answer,String Manipulation
Implement a Python program to generate randon uniform numbers. The program should have two input parameters a lower bound and an upper bound.,"Lower bound: 10, Upper bound: 20","import random

# generates a random number between lower and upper
def generateRandomNumber(lower, upper):
 r = random.uniform(lower, upper)
 return r

# driver program
if __name__ == ""__main__"":
 lower = 10
 upper = 20
 print(generateRandomNumber(lower, upper))","import random

# generates a random number between lower and upper
def generateRandomNumber(lower, upper):
 r = random.uniform(lower, upper)
 return r

# driver program
if __name__ == ""__main__"":
 lower = 10
 upper = 20
 print(generateRandomNumber(lower, upper))",correct,String Manipulation
Do you know how to write a recursive Python program to delete a given element from a list?,"[1, 2, 3, 4], 3","def delete_from_list(my_list, element):
    if element in my_list:
        my_list.remove(element)
    else:
        return
      
    delete_from_list(my_list, element)","def delete_from_list(my_list, element):
    if element in my_list:
        my_list.r",Incomplete Answer,Recursion
"Create a Python program that prints the characters in the alphabet, one per line.",,"for letter in ""abcdefghijklmnopqrstuvwxyz"":
 print(letter)","for letter in ""abcdefghijklmn",Incomplete Answer,String Manipulation
"Make a Python program that prints out a message that gives the number ""7"" when a value for an integer variable ""x"" is 7.",,"x = 7
if x == 7:
    print(""The number is 7"")","x = 7
if x == 7:
print(""The number is 7"")",Syntax Error,String Manipulation
Suggest a program to convert Celsius to Fahrenheit and vice versa using Python.,,"def celsius_to_fahrenheit(celsius):
    return celsius * 9 / 5 + 32 

def fahrenheit_to_celsius(fahrenheit):
    return (fahrenheit - 32) * 5 / 9","def celsius_to_fahrenheit(celsius:
    return celsius * 9 / 5 + 32 

def fahrenheit_to_celsius(fahrenheit:
    return (fahrenheit - 32 * 5 / 9",Syntax Error,File I/O
Rewrite the following code using classes in Python.,"def square_number(number):
 return number * number","class Square: 
    def __init__(self, number): 
        self.number = number 

    def square_number(self): 
        return self.number * self.number 

number_obj = Square(10) 
print(number_obj.square_number())","class Square: 
    def __init__(self, number): 
        self.number = number 

    def square_number(self): 
        return self.number * self.number 

number_obj = Square(10) 
print(number_obj.square_number())",correct,OOP
Implement a stack in Python using lists.,,"class Stack:
 def __init__(self):
 self.items = []
 
 def isEmpty(self):
 return self.items == []
 
 def push(self, item):
 self.items.append(item)
 
 def pop(self):
 return self.items.pop()
 
 def peek(self):
 return self.items[len(self.items)-1]
 
 def size(self):
 return len(self.items)

stack = Stack()
stack.push(1)
stack.push(2)
print(stack.peek())
print(stack.pop())
print(stack.size())","class Stack:
 def __init__(self):
 self.items = []
 
 def isEmpty(self):
 return self.items == []
 
 def push(self, item):
 self.items.append(item)
 
 def pop(self):
 return self.items.pop()
 
 def",Incomplete Answer,OOP
Write an algorithm in Python that takes as input an array of numbers and returns the maximum element.,"[15, 25, 7, 1]","def maxElement(arr): 
    maxElement = arr[0]; 
  
    for i in range(1, len(arr)): 
        if maxElement < arr[i]: 
            maxElement = arr[i]; 
  
    return maxElement; 
  
arr = [15, 25, 7, 1];
maxElement = maxElement(arr); 
print (""Maximum element in the array is:"", maxElement);","def maxElement(arr) 
    maxElement = arr[0]; 
  
    for i in range(1, len(arr)) 
        if maxElement < arr[i] 
            maxElement = arr[i]; 
  
    return maxElement; 
  
arr = [15, 25, 7, 1];
maxElement = maxElement(arr); 
print (""Maximum element in the array is"", maxElement);",Syntax Error,String Manipulation
Create a Python program that reads an integer and prints whether it is even or odd.,7,"# Read the integer
num = int(input())

# Print whether the number is even or odd
if num % 2 == 0:
 print(""The number is even."")
else:
 print(""The number is odd."")","# Read the integer
num = int(input())

# Print whether the number is even or odd
",Incomplete Answer,Recursion
Generate a program in Python to count the number of times a substring appears in a string?,"str=""The quick brown fox jumps over the lazy dog."", substr=""the""","def countSubstrings(str, subStr):
    lengthSubStr = len(subStr)
    count = 0
   
    for i in range(len(str)):
        if str[i:i+lengthSubStr] == subStr:
            count += 1
         
    return count

str = ""The quick brown fox jumps over the lazy dog.""
substr = ""the""
print(countSubstrings(str, substr))","def countSubstrings(str, subStr):
    lengthSubStr = len(subStr)
    count = 0
   
    for i in range(len(str)):
        if str[i:i+lengthSubStr] == subStr",Incomplete Answer,Loops
Modify the code to output a float in python instead of integer.,"def multiply(a, b): 
    return a * b","def multiply(a, b): 
    return float(a * b)","def multiply(a, b) 
    return float(a * b)",Syntax Error,String Manipulation
"Using only base Python (no 3rd party libraries), create a function that checks whether a number is prime or not.",,"def is_prime(num):
    for i in range(2, int(num / 2)):
        if num % i == 0:
            return False
    else:
        if num < 2:
            return False
        else:
            return True","def is_prime(num):
    for i in range(2, int(num / 2)):
        if num % i == 0:
            return False
    else:
        if num < 2:
            return False
        else:
            return True",Syntax Error,OOP
Setup a Django server that can host a website.,,"# Install Django if it does not already exist
pip install django

# Start a new project
django-admin startproject myproject

# Create and apply migrations
cd myproject
python manage.py makemigrations
python manage.py migrate

# Start the server
python manage.py runserver 0:8000","# Install Django if it does not already exist
pip install django

# Start a new project
django-admin startproject myproject

# Create and apply migrations
cd myproject
python manage.py makemigrations
python manage.py migrate

# Start the server
python manage.py runserver 0:8000",correct,OOP
Write a Python program that randomly generates a list of 10 numbers in a range from 0 to 100.,,"import random

number_list = [random.randint(0, 100) for n in range(10)]

print(number_list)","import random

number_list = [random.randint(0",Incomplete Answer,String Manipulation
Create a Python class named Student that stores a name and ID number.,,"class Student:
    def __init__(self, name, id_number):
        self.name = name
        self.id_number = id_number","class Student:
    def __init__(self, name, id_number):
 ",Incomplete Answer,File I/O
Optimize the following application in Python to reduce startup time.,"import time

def func():
    start=time.time()
    i=0
    while(i<100000000):
        i+=1
    end=time.time()
    print(end-start)

func()","import time

def func():
    start=time.time()
    # Optimized code using range instead of while loop
    lst = range(100000000)
    end=time.time()
    print(end-start)

func()","import time

def func():
    start=time.time()
    # Optimized code using range instead of while loop
    lst = range(100000000)
    end=time.time()
    print(end-start)

func()",correct,File I/O
Generate a code snippet to get an item stored in a Python dictionary using the key.,,"#Getting the value of the 'name' key from the dictionary 
dict = {'name':'John', 'age': 30, 'city':'New York'}
value = dict['name'] 

#Printing the value 
print(value)","#Getting the value of the 'name' key from the dictionary 
dict = {'name':'John', 'a",Incomplete Answer,Loops
Write a Python program to convert a given string to all uppercase letters.,,"def convert_string_to_uppercase(string):
    return string.upper()","def convert_string_to_uppercase(string)
    return string.upper()",Syntax Error,Loops
Write a python program to tokenize a given text,"Text='Python is an interpreted, high-level, general-purpose programming language.'","import nltk 
from nltk.tokenize import word_tokenize 
  
# input text  
text = 'Python is an interpreted, high-level, general-purpose programming language.'
  
# converting the text into tokens 
token = word_tokenize(text) 
  
print(token)","import nltk 
from nltk.tokenize import word_tokenize 
  
# input text  
text = 'Python is an interpreted, high-level, general-purpose programming language.'
  
# converting the text into tokens 
token = word_tokenize(text) 
  
print(name, token)",Syntax Error,OOP
Create a Python program that combines two lists and returns a single list that contains a combination of elements from both.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def combine_lists(list1, list2):
 return list1 + list2

list1 = [1, 2, 3]
list2 = [4, 5, 6]
print(combine_lists(list1, list2)) # [1, 2, 3, 4, 5, 6]","def combine_lists(list1, list2):
 return list1 + list2

list1 = [1, 2, 3]",Incomplete Answer,Loops
Write a Python program to decode the given encoded text using ROT-13 algorithm.,Gur pynff vf snpgbevnag,The code is obfuscated,The code is,Incomplete Answer,Loops
Write a Python script to list a directory's contents.,,"import os

def list_directory_contents(directory_path):
    contents = os.listdir(directory_path)
    return contents

directory = ""your_directory_path""
contents = list_directory_contents(directory)
print(contents)","import os

def list_directory_contents(directory_path):
    contents = os.listdir(directory_path)
    return contents

directory = ""your_directory_path""
contents = list_directory_contents(directory)
pritn(contents)",Syntax Error,Recursion
How would you design a Python program that checks if a number is divisible by three?,45,"def is_divisible(n):
    if n % 3 == 0:
        return True
    else:
        return False

num = 45
check_divisible = is_divisible(num)

if check_divisible:
    print(""Number is divisible by three."")
else:
    print(""Number is not divisible by three."")","def is_divisible(n):
    if n % 3 == 0:
        return True
    else:
        return False

num = 45
check_divisible = is_divisible(num)

if check_divisible:
    pritn(""Number is divisible by three."")
else:
    pritn(""Number is not divisible by three."")",Syntax Error,String Manipulation
Create an algorithm in Python to find the sum of all the numbers in a given range.,,"def sum_range(start, end): 
    sum = 0
    for i in range(start, end+1): 
        sum += i 
    return sum 
  
# Driver Code 
start = 2
end = 5
print(sum_range(start, end)) 
# Result: 14","def sum_range(start, end) 
    sum = 0
    for i in range(start, end+1) 
        sum += i 
    return sum 
  
# Driver Code 
start = 2
end = 5
print(sum_range(start, end)) 
# Result 14",Syntax Error,String Manipulation
"Using the provided input, write a Python program to calculate the sum of the digits of a given number.",number = 123,"def sum_of_digits(number):
    result = 0
    while number > 0:
        result += number % 10
        number = number // 10
    return result
    
if __name__ == '__main__':
    number = 123
    print(sum_of_digits(number))","def sum_of_digits(number):
    result = 0
    while number > 0:
        result += number % 10
        number = number // 10
    return result
    
if __name__ == '__main__':
    number = 123
    print(name, sum_of_digits(number))",Syntax Error,File I/O
Create a Machine Learning model in Python to classify the following dataset.,The dataset contains 100 samples with 10 features each.,"from sklearn.neighbors import KNeighborsClassifier

# Create the KNN classifier
knn = KNeighborsClassifier(n_neighbors = 3)

# Fit the classifier to the data
knn.fit(X, y)

# Predict the labels for the test set
y_pred = knn.predict(X_test)","from sklearn.neighbors import KNeighborsClassifier

# Create the KNN classifier
knn = KNeighborsClassifier(n_neighbors ",Incomplete Answer,File I/O
Write a function in Python that normalizes a list of numbers by subtracting their average and dividing by the standard deviation.,"[4,2,7,8,2]","def normalize(numbers):
 avg = sum(numbers) / len(numbers)
 variance = sum((x - avg) ** 2 for x in numbers) / len(numbers)
 stdev = variance ** 0.5
 return [(x - avg) / stdev for x in numbers]","def normalize(numbers):
 avg = sum(numbers) / len(numbers)
 variance = sum((x - avg) ** 2 for x ",Incomplete Answer,OOP
Generate Python code that will update the values of a list,"A list of integers lst = [5, 10, 10, 15, 25]. Update all values that are larger than 10 by subtracting 5.",lst = [x if x <= 10 else x - 5 for x in lst],lst = [x if x <= 10 else x - 5 for x in lst],correct,String Manipulation
Generate a Python program to remove all elements of given list present in other list.,"list1 = [1, 2, 3, 4, 5, 6], list2 = [2, 4, 6]","def remove_from_list(list1, list2):
    for i in list2: 
        list1.remove(i) 
        
    return list1

list1 = [1, 2, 3, 4, 5, 6]
list2 = [2, 4, 6]
       
print(remove_from_list(list1, list2))","def remove_from_list(list1, list2):
    for i in list2: 
        list1.remove(i) 
        
    return list1

list1 = [1, 2, 3, 4, 5, 6]
list2 = [2, 4, 6]
       
print(remove_from_list(list1, list2))",correct,File I/O
Write a generator function in Python to generate unique integer numbers in a given range.,"min value = 10, max value = 20","def unique_integers_generator(start, end):
    i = start
    used = set()
    while i <= end:
        if i not in used:
            used.add(i)
            yield i
        i += 1

for i in unique_integers_generator(10, 20):
    print(i)","def unique_integers_generator(start, end):
    i = start
    used = set()
    while i <= end:
        if i not in used",Incomplete Answer,String Manipulation
Generate a python code for linear regression.,,"from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(X, y)","from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(X, y)",correct,OOP
Build an algorithm in Python that creates output based on the given input.,"Input: [1, 2, 5, 8, 11]","def algorithm(input_list):
    output_list = []
    for i in input_list: 
        if i % 2 == 0:
            output_list.append(str(i) + ' is an even number')
        else:
            output_list.append(str(i) + ' is an odd number')
    return output_list","def algorithm(input_list):
output_list = []
for i in input_list: 
    if i % 2 == 0:
        output_list.append(str(i) + ' is an even number')
    else:
        output_list.append(str(i) + ' is an odd number')
return output_list",Syntax Error,File I/O
Fix the errors in the following python program to return the correct output.,"def foo(a, b):
return a + b

x = foo(2, 3)
print(x)","def foo(a, b):
    return a + b

x = foo(2, 3)
print(x)  # output is 5","def foo(a, b):
    return a + b

x = foo(2, 3)
print(x)  # output is 5",correct,Loops
"Develop a Python program that takes in a single-dimensional array as a parameter, and returns the number of subsets with size 3 or greater.","arr = [1, 2, 3, 4, 5]","def find_subsets(arr):
    count = 0
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            for k in range(j+1, len(arr)):
                count += 1
    return count","def find_subsets(arr):
    count = 0
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            for k in range(j+1, len(arr)):
                count += 1
    return count",correct,File I/O
Write a Python groupby function that returns the top 3 most frequent elements in each group.,,"def top_frequent(data, key):
  grouped = data.groupby(key)
  result = []

  for name, group in grouped:
    counts = group.value_counts()
    top_3 = counts.nlargest(3).index.tolist()
    result.append((name, top_3))
  
  return result","def top_frequent(data, key):
  grouped = data.groupby(key)
  result = []

  for name, group in grouped:
    counts = group.value_counts()
    top_3 = counts.nlargest(3).index.tolist()
    result.append((name, top_3))
  
  return result",correct,OOP
Create an object-oriented Python program to model a Vehicle.,,"class Vehicle:
   def __init__(self, capacity, speed):
      self.capacity = capacity
      self.speed = speed
 
   def increase_speed(self):
      self.speed += 10
 
   def decrease_speed(self):
      if self.speed > 0:
         self.speed -= 10","class Vehicle:
   def __init__(self, capacity, speed):
      self.capacity = capacity
      self.speed = speed
 
   def increase_speed(self):
      self.speed += 10
 
   def decrease_speed(self):
      if self.speed > 0:
         self.speed -= 10",correct,Loops
Create a Python program that can calculate the Volume of a pyramid based on the provided side length and height.,"side_length = 4;
height = 6;","def volume_pyramid(side_length, height):
    # Calculate base area
    base = (side_length**2) * 4
    
    # Calculate the volume
    volume = (base * height) / 3
    return volume

# driver code 
side_length = 4
height = 6
result = volume_pyramid(side_length, height)
print(result)","def volume_pyramid(side_length, height):
    # Calculate base area
    base = (side_length**2) * 4
    
    # Calculate the volume
    volume",Incomplete Answer,Loops
Generate a function in Python that takes a list of numbers and returns the average value of all the numbers.,,"def average(numbers):
 sum = 0
 for number in numbers:
 sum += number
 return sum / len(numbers)","def average(numbers):
 sum = 0
 for number in numbers:
 sum += number
 return sum / len(numbers)",correct,OOP
Write a python function to check whether the first and last characters of a given string are equal or not.,,"def check_Equality(str):
  if (str[0] == str[-1]):  
    return (""Equal"") 
  else:  
    return (""Not Equal"") ","def check_Equality(str:
  if (str[0] == str[-1]:  
    return (""Equal"" 
  else:  
    return (""Not Equal"" ",Syntax Error,Recursion
Identify the data type of each variable in the given Python snippet.,"x = 5
name = ""John""
y = [1, 2, 3]","x is an integer, name is a string, and y is a list.","x is an integer, name is a string, and y is a list.",correct,String Manipulation
Write a function in Python to remove duplicates in a list and return the modified list,"list := [1, 2, 2, 3]","def remove_duplicates(items):
  unique = []
  for item in items:
    if item not in unique:
      unique.append(item)
  return unique

list = [1, 2, 2, 3]
result = remove_duplicates(list)
print(result) # Output: [1, 2, 3]","def remove_duplicates(items):
  unique = []
  for item in items:
    if item not in unique:
      unique.append(item)
  return unique

list = [1, 2, 2, 3]
result = remove_duplicates(list)
print(result) # Output: [1, 2, 3]",correct,Recursion
Write a web scraper in Python to collect web data from a website.,Website: https://example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://example.com""

try: 
    page = requests.get(url)
    soup = BeautifulSoup(page.content, 'html.parser')
    # your web scraping code here

except Exception as e:
    print('Error:', e)","import requests
from bs4 import BeautifulSoup

url = ""https://example.com""

try: 
    page = requests.get(url)
    soup = ",Incomplete Answer,OOP
Write a Python function that generates a random password of 8 characters containing alphanumeric characters and symbols.,,"import string
import random

def generate_password():
    symbols = string.ascii_letters + string.digits + string.punctuation
    password = """".join(random.choice(symbols) for i in range(8))
    return password

pwd = generate_password()
print(pwd) # 1F(8y3?","import string
import random

def generate_password():
    symbols = string.ascii_letters + string.digits + string.punctuation
    password = """".join(random.choice(symbols) for i in range(8))
    return password

pwd = generate_password()
pritn(pwd) # 1F(8y3?",Syntax Error,String Manipulation
Generate a Python program to add new elements to an existing tuple.,"oldTuple = (1, 2, 3) 
newElements = (4, 5, 6)","# create a new tuple adding the elements from the old tuple and the new elements
newTuple = oldTuple + newElements",# create a new tuple adding the elements from the old tup,Incomplete Answer,File I/O
Generate a list of 100 random integers using Python.,,"import random

randoms = random.sample(range(0,1000), 100) 
print(randoms)","import random

randoms = random.sampl",Incomplete Answer,String Manipulation
Write a Python program to sort a list in ascending order with respect to a particular key.,"lst = [{‘name’:’joe’, ‘score’:90}, {‘name’:’bob’, ‘score’:50}, {‘name’:’alice’, ‘score’:80}]
key = 'score'","sorted_lst = sorted(lst, key=lambda x: x[key])","sorted_lst = sorted(lst, key=lambda x: x[key])",Syntax Error,Loops
Generate a Python function that takes in two arrays and returns a list of the elements that are present in both arrays.,,"def intersection(list1, list2):
    return [value for value in list1 if value in list2]

list1 = [1, 2, 3, 4]
list2 = [2, 4, 6, 7]

print(intersection(list1, list2)) # [2, 4]","def intersection(list1, list2):
    return [value for value in list1 if value in list2]

list1 = [1, 2, 3, 4]
list2 = [2, 4, 6, 7]

print(intersection(list1, list2)) # [2, 4]",correct,String Manipulation
Write a Python program to read a CSV and converting the contents to a dictionary.,,"import csv

def csv_to_dict(filename):
 with open(filename) as csv_file:
 reader = csv.DictReader(csv_file)
 csv_dict = {}
 for row in reader:
 csv_dict[row['Date']] = row['Product']
 return csv_dict","import csv

def csv_to_dict(filename):
 with open(filename) as csv_file:
 reader = csv.DictReader(csv_file)
 csv_dict = {}
 for row in reader:
 csv_dict[row['Date']] = row['Product']
 return csv_dict",Syntax Error,String Manipulation
Generate a python program which prints a formatted list containing the elements from two input lists.,"list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]","def print_list(list_1, list_2): 
    formatted_list = [list_1 + list_2 for i in range(len(list_1))] 
    for x in formatted_list: 
        for y in x: 
            print(y) 
    
list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]
print_list(list_1, list_2)

# Output:
# 1
# 2
# 3
# 4
# 5
# 6","def print_list(list_1, list_2): 
formatted_list = [list_1 + list_2 for i in range(len(list_1))] 
for x in formatted_list: 
    for y in x: 
        print(y) 

list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]
print_list(list_1, list_2)

# Output:
# 1
# 2
# 3
# 4
# 5
# 6",Syntax Error,OOP
Create a GPU-accelerated algorithm in Python that performs matrix multiplication.,,"import torch

def matrix_multiplication(A, B):
    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
    A = torch.tensor(A).to(device)
    B = torch.tensor(B).to(device)
    return torch.matmul(A, B).cpu().numpy()","import torch

def matrix_multiplication(A, B):
    device = torch.device('cuda' if torch.cuda.is_available() else 'cp",Incomplete Answer,Recursion
Implement a depth first search algorithm in Python to find a given node in a tree.,<Example tree structure>,"def depth_first_search(tree, node):
    if tree == None:
        return False
    elif tree.data == node:
        return True
    else:
        left_search = depth_first_search(tree.left, node)
        if left_search == True:
            return True
        right_search = depth_first_search(tree.right, node)
        return right_search","def depth_first_search(tree, node):
    if tree == None:
        return False
    elif tree.data == node:
        return True
    else:
        left_search = depth_first_search(tree.left, node)
        if left_search == True:
            return True
        right_search = depth_first_search(tree.right, node)
        return right_search",correct,OOP
"Given two lists, write a Python program to return a list that contains the elements from both the lists, except for the elements that are duplicated.","List1: [1,2,3,4,5] 
List2: [4,5,6,7,8]","new_list = [1,2,3,6,7,8]","new_list = [1,2,3,6,7,8]",Syntax Error,OOP
"Design a Python class to represent a book with title, author, publication year and number of pages.",,"class Book:
    def __init__(self, title, author, publication_year, number_of_pages):
        self.title = title
        self.author = author
        self.publication_year = publication_year
        self.number_of_pages = number_of_pages","class Book:
    def __init__(self, title, author, publication_year, number_of_pages):
        self.title = title
        self.author = author
        self.publication_year = publication_year
        self.number_of_pages = number_of_pages",correct,Loops
Create an optimization algorithm written in Python which takes a list of tuples as input and returns the pair with the smallest value.,"[(2, 3), (4, 1), (6, 4), (5, 8)]","def smallest_pair(lst): 
  return min(lst, key = lambda x: x[1]) 

lst = [(2, 3), (4, 1), (6, 4), (5, 8)] 
  
print(smallest_pair(lst)) 

# Output: (4, 1)","def smallest_pair(lst): 
  return min(lst, key = lambda x: x[1]) 

lst = [(2, 3), (4, 1), (6, 4), (5, 8)] 
  
print(smallest_pair(lst)) 

# Output: (4, 1)",correct,Loops
Design a data structure in Python that implements a Stack.,,"class Stack: 
 def __init__(self): 
 self.items = [] 

 def push(self, item): 
 self.items.append(item) 

 def pop(self):
 if not self.is_empty(): 
 return self.items.pop()

 def is_empty(self):
 return len(self.items) == 0

 def peek(self):
 if not self.is_empty(): 
 return self.items[-1]

 def size(self):
 return len(self.items)","class Stack: 
 def __init__(self): 
 self.items = [] 

 def push(self, item): 
 self.items.append(item) 

 def pop(self):
 if not self.is_empty(): 
 return self.items.pop()

 def is_empty(self):
 return len(self.items) == 0

 def peek(self):
 if not self.is_empty(): 
 return self.items[-1]

 def size(self):
 return len(self.items)",Syntax Error,File I/O
Write a class in Python that processes a given String?,,"class StringProcessor:
    def __init__(self, s):
        self.string = s
        self.num_words = len(s.split())
        self.uppercase = s.upper()
        
    def reverse_string(self):
        return self.string[::-1]
        
    def remove_whitespace(self):
        return self.string.replace(' ', '')","class StringProcessor:
    def __init__(self, s):
        self.string = s
        self.num_words = len(s.split())
        self.uppercase = s.upper()
        
    def reverse_string(self):
        return self.string[::-1]
        
    def remove_whitespace(self):
        return self.string.replace(' ', '')",correct,OOP
Create a function in python to print a string in reverse.,,"def reverse_string(string): 
  string = string[::-1] 
  return string 
  
print(reverse_string('hello'))","def reverse_string(string): 
  string = string[::-1] 
  return string 
  
pritn(reverse_string('hello'))",Syntax Error,Loops
"Construct a stack class in Python to perform push, pop, isEmpty, and peek operations.",,"class Stack:
     def __init__(self):
         self.items = []

     def isEmpty(self):
         return self.items == []

     def push(self, item):
         self.items.append(item)

     def pop(self):
         return self.items.pop()

     def peek(self):
        return self.items[len(self.items)-1]","class Stack:
     def __init__(self:
         self.items = []

     def isEmpty(self:
         return self.items == []

     def push(self, item:
         self.items.append(item

     def pop(self:
         return self.items.pop(

     def peek(self:
        return self.items[len(self.items-1]",Syntax Error,Recursion
Rewrite the following code using reduce() method in Python,"def sum(x, y):
 return x + y

list = [1, 2, 3, 4]","from functools import reduce

result = reduce(lambda x,y: x+y, list)
print(result) # 10","from functools import reduce

result = reduce(lambda x,y: x+y, list)
print(result) # 10",correct,File I/O
Write a Python program to flatten a dictionary of nested dictionaries.,,"def flatten(d): 
  flatten_d = {} 
  for key, value in d.items():
    if isinstance(value, dict):
      value = flatten(value) 
      for sub_key, sub_value in value.items(): 
        flatten_d[key + '.' + sub_key] = sub_value 
    else: 
      flatten_d[key] = value 
  return flatten_d","def flatten(d) 
  flatten_d = {} 
  for key, value in d.items()
    if isinstance(value, dict)
      value = flatten(value) 
      for sub_key, sub_value in value.items() 
        flatten_d[key + '.' + sub_key] = sub_value 
    else 
      flatten_d[key] = value 
  return flatten_d",Syntax Error,Loops
Build a Python program that sorts a list of numbers from highest to lowest.,"[28, 5, 17, 10, 43]","def sort_numbers(numbers):
    numbers.sort(reverse=True)
    return numbers

numbers = [28, 5, 17, 10, 43]

sorted_numbers = sort_numbers(numbers)
print(sorted_numbers)","def sort_numbers(numbers)
    numbers.sort(reverse=True)
    return numbers

numbers = [28, 5, 17, 10, 43]

sorted_numbers = sort_numbers(numbers)
print(sorted_numbers)",Syntax Error,Loops
Write a python function to print duplicants from a list of integers.,,"def Repeat(x): 
    _size = len(x) 
    repeated = [] 
    for i in range(_size): 
        k = i + 1
        for j in range(k, _size): 
            if x[i] == x[j] and x[i] not in repeated: 
                repeated.append(x[i]) 
    return repeated ","def Repeat(x): 
    _size = len(x) 
    repeated = [] 
    for i in range(_size): 
        k = i + 1
        for j in range(k, _size): 
            if x[i] == x[j] and x[i] not in repeated: 
                repeated.append(x[i]) 
    return repeated ",correct,File I/O
Create an algorithm in Python to sort a given list of integers from smallest to largest.,"[10, 7, 3, 5, 8]","def sort_list(numbers):
    numbers.sort()
    return numbers","def sort_list(numbers):
    nu",Incomplete Answer,Recursion
Write a python function to print positive numbers in a list.,,"def pos_nos(list1):
  for num in list1: 
    if num >= 0: 
       return num ","def pos_nos(list1)
  for num in list1 
    if num >= 0 
       return num ",Syntax Error,Recursion
Write a function to abbreviate 'road' as 'rd.' in a given string.,,"import re
def road_rd(street):
  return (re.sub('Road$', 'Rd.', street))","import re
def road_rd(street):
  return (re.sub('Road$', 'Rd.', street))",Syntax Error,File I/O
Generate a Python program that creates an array of integers between two specified numbers,,"def create_array(start, end):
    array = []

    for i in range(start, end+1):
        array.append(i)

    return array","def create_array(start, end)
    array = []

    for i in range(start, end+1)
        array.append(i)

    return array",Syntax Error,OOP
Write a Python function that takes three numbers as arguments and returns the maximum value.,"2, 5, 3","def max_val(a, b, c):
    if (a > b and a > c): 
        return a
    elif (b > a and b > c):
        return b
    else: 
        return c

result = max_val(2, 5, 3)
print(result)","def max_val(a, b, c):
    if (a > b and a > c): 
        return a
    elif (b > a and b >",Incomplete Answer,Recursion
Refactor a Python program to improve its readability and maintainability.,"The program is given below.

def main():
    result = []
    for item in range(10):
        if item % 3 == 0:
            result.append(item * item)
    return result","def main():
    result = [item * item for item in range(10) if item % 3 == 0]
    return result","def main():
    result = [item * item for item in range(10) if item % 3 == 0]
    return result",correct,Loops
"Come up with a python program to join two strings x and y, and then print the resulting combined string.","x = ""Hello""; y = ""World""","x = ""Hello""
y = ""World""

result = x + y
print(result)","x = ""Hello""
y = ""World""

result = x + y
print(result)",Syntax Error,Recursion
Write a Python script that takes a list as an argument and prints each element of the list in a new line.,"[1, 2, 3, 4]","for item in [1, 2, 3, 4]:
    print(item)","for item in [1, 2, 3",Incomplete Answer,Recursion
"Using numpy, create a Python code which would return an array with the running total of numbers in a given list.",,"import numpy as np

def runningTotal(arr):
    return np.cumsum(arr)","import numpy as np

def runningTot",Incomplete Answer,File I/O
Optimize this Python code to count the number of occurrences of an element in an array.,"[2, 3, 3, 10, 12]","def countOccurrences(arr, x): 
  
    count = 0
    n = len(arr) 
    for i in range(0, n): 
        if (x == arr[i]): 
            count = count + 1
  
    return count 
  
# Driver code 
arr = [2, 3, 3, 10, 12] 
x = 3
assert countOccurrences(arr, x) == 2","def countOccurrences(arr, x): 
  
count = 0
n = len(arr) 
for i in range(0, n): 
    if (x == arr[i]): 
        count = count + 1
  
return count 
  
# Driver code 
arr = [2, 3, 3, 10, 12] 
x = 3
assert countOccurrences(arr, x) == 2",Syntax Error,File I/O
"Provided a number and a text, write a program in Python that adds the number to each of the words in the text.","number = 5
text = ""Today is Monday""","def add_num(num, text):
    words = text.split()
    result = [str(int(w) + num) for w in words]
    return ' '.join(result)

print(add_num(5, ""Today is Monday"")) # Output: 10 Today is 10 Monday","def add_num(num, text):
    words = text.split()
    result = [str(int(w) + num) for w in words]
",Incomplete Answer,File I/O
"Optimize the following python code to speed up execution time:

arr = [2, 5, 3, 1]
for i in range(len(arr)):
  for j in range(i + 1, len(arr)):
    if arr[i] > arr[j]:
       arr[i], arr[j] = arr[j], arr[i]","[2, 5, 3, 1]","arr = [2, 5, 3, 1]

# using Python's built in `sorted` function
arr = sorted(arr)

# using the Bubble Sort algorithm
for i in range(len(arr) - 1):
 for j in range(len(arr) - 1 - i):
  if arr[j] > arr[j + 1]:
   arr[j], arr[j + 1] = arr[j + 1], arr[j]","arr = [2, 5, 3, 1]

# using Python's built in `sorted` function
arr = sorted(arr)

# using the Bubble Sort algorithm
for i in range(len(arr) - 1):
 for j in range(len(arr) - 1 - i):
  if arr[j] > arr[j + 1]:
   arr[j], arr[j + 1] = arr[j + 1], arr[j]",correct,OOP
Create a Python script to print the numbers between 500 and 1000 that are divisible by 7,,"for i in range(500, 1001):
    if i%7 == 0:
        print(i, end=' ')","for i in range(500, 1001):
    if i%7 == 0:
        print(i, end=' ')",correct,OOP
List three popular web frameworks used in Python.,,"Popular Python web frameworks include Flask, Django and Pyramid.",Popular Python web frameworks in,Incomplete Answer,File I/O
Generate a command which prints the type of any given variable in Python.,,print(type(variable)),print(type(variable)),correct,File I/O
Create a function in Python to calculate the number of hours a worker worked in a week given the number of hours worked in a day.,Number of hours worked per day: 7,"def hours_worked_week(hours_per_day):
    hours_worked_week = hours_per_day * 7
    return hours_worked_week","def hours_worked_week(hours_per_day):
    hours_worked_week = hours_per_day * 7
    return hours_worked_week",Syntax Error,OOP
"Write a Python function to remove elements from a given list of integers, if the integer is a multiple of 3","list = [3, 6, 9, 11, 12, 15]","def remove_multiple_of_three(list):
  new_list = []
  for item in list:
    if item % 3 != 0:
      new_list.append(item)
  return new_list","def remove_multiple_of_three(list):
  new_list = []
  for item in list:
    if item % 3 != 0:
      new_list.append(item)
  return new_list",correct,Loops
Develop a program to convert JSON objects to Python dictionaries.,,"import json

def json_to_dict(json_obj):
 return json.loads(json_obj)","import json

def json_to_dict(json",Incomplete Answer,Loops
Assemble a Python program to find a pattern,"Find all the numbers in the array [1, 2, 3, 5, 7, 8] which are divisible by 3.","def find_pattern(arr):
    div_by_3 = []

    for num in arr:
        if num % 3 == 0:
            div_by_3.append(num)
    
    return div_by_3","def find_pattern(arr):
    div_by_3 = []

    for num in arr:
        if num % 3 == 0:
            div_by_3.append(num)
    
    return div_by_3",Syntax Error,Recursion
Create a python script to read a JSON object and print out its values.,"{
 ""name"": ""Adam"",
 ""age"": 24,
 ""city"": ""New York""
}","import json

data = json.loads('{ ""name"": ""Adam"", ""age"": 24, ""city"": ""New York"" }')

print(""Name: "", data['name']) 
print(""Age: "", data['age']) 
print(""City: "", data['city'])","import json

data = json.loads('{ ""name"": ""Adam"", ""age"": 24, ""city"": ""New York"" }')

pr",Incomplete Answer,Recursion
"Create a program in Python that takes a string as an argument and tokenizes it, removing any punctuation.","'This sentence has commas, periods, and colons.'","import string

def tokenize(string):
    tokens = string.split()
    tokens = [token.strip(string.punctuation) for token in tokens]
    return tokens

tokenized_str = tokenize('This sentence has commas, periods, and colons.')
print(tokenized_str)
# Output: ['This', 'sentence', 'has', 'commas', 'periods', 'and', 'colons']","import string

def tokenize(string):
    tokens = string.split()
    tokens = [token.strip(string.punctuation) for token in tokens]
    return tokens

tokenized_str = tokenize('This sentence has commas, periods, and colons.')
print(tokenized_str)
# Output: ['This', 'sentence', 'has', 'commas', 'periods', 'and', 'colons']",correct,OOP
Create a Python class with a constructor and a `to_string` method that takes two integers and returns a formatted string.,The two integers are 7 and 5.,"class MyClass:
 def __init__(self, x, y):
 self.x = x
 self.y = y

def to_string(self):
 return f'The numbers are {self.x} and {self.y}.'

c = MyClass(7,5)
print(c.to_string())","class MyClass:
 def __init__(self, x, y):
 self.x = x
 self.y = y

def to_string(self):
 return f'The numbers are {self.x} and {self.y}.'

c = MyClass(7,5)
print(c.to_string())",correct,OOP
Generate a Python code that calculates the mean of a data set given as a list of integers.,"[1, 2, 3, 4, 5, 6]","def calculate_mean(data): 
    # Initialize the sum and length of data 
    sum = 0 
    length = len(data) 
  
    # Calculating the sum  
    for x in data: 
        sum += x   
    # Calculating the mean  
    mean = sum / length 
  
    return mean 
  
# Test the function 
data = [1, 2, 3, 4, 5, 6] 
print('Mean of data is:', calculate_mean(data))","def calculate_mean(data): 
    # Initialize the sum and length of data 
    sum = 0 
    length = len(data) 
  
    # Calculating the sum  
    for x in data: 
        sum += x   
    # Calculating the mean  
    mean = sum / length 
  
    return mean 
  
# Test the function 
data = [1, 2, 3, 4, 5, 6] 
pritn('Mean of data is:', calculate_mean(data))",Syntax Error,Recursion
Write a python function to find the parity of a given number.,,"def find_Parity(x): 
    y = x ^ (x >> 1); 
    y = y ^ (y >> 2); 
    y = y ^ (y >> 4); 
    y = y ^ (y >> 8); 
    y = y ^ (y >> 16); 
    if (y & 1): 
        return (""Odd Parity""); 
    return (""Even Parity""); ","def find_Parity(x): 
    y = x ^ (x >> 1); 
    y = y ^ (y >> 2); 
    y = y ^ (y >> 4); 
    y = y ^ (y >> 8); 
    y = y ^ (y >> 16); 
    if (y & 1): 
        return (""Odd Parity""); 
    return (""Even Parity""); ",Syntax Error,OOP
"In Python, write a program that reads in an unsorted array of integers and returns it in sorted order.","A = [5, 2, 9, 1, 8]","def sort_array(A):
    for i in range(len(A) - 1):
        min = A[i]
        min_index = i
        for j in range(i + 1, len(A)):
            if A[j] < min:
                min = A[j]
                min_index = j
        if min_index != i:
            A[i], A[min_index] = A[min_index], A[i]
    return A","def sort_array(A):
    for i in range(len(A) - 1):
        min = A[i]
        min_index = i
        for j in range(i + 1, len(A)):
            if A[j] < ",Incomplete Answer,Loops
Use a Python print function to write a statement that takes an input message and prints the message in all uppercase letters.,"""Hello world!""","message = 'Hello world!'

print(message.upper()) // HELLO WORLD!","message = 'Hello world!'

pritn(message.upper()) // HELLO WORLD!",Syntax Error,Recursion
Create a function in Python to extract all words from a sentence that are greater than 3 chars in length.,This is a sample sentence,"def extract_long_words(s):
 words = s.split()
 filtered = [w for w in words if len(w) > 3]
 return filtered","def extract_long_words(s):
 words = s.split()
 filtered = [w for w in words if len(w) > 3]
 return filtered",Syntax Error,Loops
Write a Python program to access a value from a nested dictionary given its keys.,,"def nested_dict_value(dictionary, keys): 
 for key in keys: 
 if key in dictionary.keys(): 
 dictionary = dictionary[key] 
 else: 
 return None
 
 return dictionary

data = {
""first"" : {
""second"" : {
""third"" : 10
}
}
}

result = nested_dict_value(data, [""first"", ""second"", ""third""])
print(result)","def nested_dict_value(dictionary, keys): 
 for key in keys: 
 if key in dictionary.keys(): 
 dictionary = dictionary[key] 
 else: 
 return None
 
 return dictionary

data = {
""first"" : {
""second"" : {
""third"" : 10
}
}
}

result = nested_dict_value(data, [""first"", ""second"", ""third""])
pritn(result)",Syntax Error,OOP
Create a Python script to log the current date and time in the console.,,"import datetime

now = datetime.datetime.now()

print ('Current date and time: ', now)","import datetime

now = datetime.datetime.now()

print ('Current date and time ', now)",Syntax Error,OOP
Optimize a Python function for computing Fibonacci numbers.,"def fib(n):
    if n == 0 or n == 1:
        return n
    else:
        return fib(n-1) + fib(n-2)","def fibonacci(n): 
    if n <= 1: 
        return n 
    else:
        fibonacci_num=[0,1] #creating a fibonacci list
        i=2
        while i<=n:
            fibonacci_num.append(fibonacci_num[i-1]+fibonacci_num[i-2])
            i+=1
        return fibonacci_num[n]","def fibonacci(n): 
    if n <= 1: 
        return n 
    else:
        fibonacci_num=[0,1] #creating a fibonacci list
        i=2
     ",Incomplete Answer,OOP
Implement a function in Python that takes a number n and generates a random list of integers between 0 and n.,n = 10,"import random

def randomList(n):
 list = []
 
 for i in range(n):
 list.append(random.randint(0, n))
 
 return list

print(randomList(10))","import random

def randomList(n):
 list = []
 
 for i in range(n):
 l",Incomplete Answer,Loops
Can you write a Python program to take a list and create a new list with unique elements of the first list?,"list=[1,2,2,3,3,3]","def unique_list(list):
    unique_list = []
    for element in list:
        if element not in unique_list:
            unique_list.append(element)
    return unique_list

unique_elements = unique_list([1,2,2,3,3,3])
print(unique_elements)","def unique_list(list):
    unique_list = []
    for element in list:
        if element not in unique_list:
           ",Incomplete Answer,File I/O
Write a Python function to create a Fibonacci sequence up to n-th number.,n=10,"def FibonacciGenerator(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
 
# Driver Program 
print(FibonacciGenerator(10))","def FibonacciGenerator(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
 ",Incomplete Answer,Loops
Create a Python program to convert imperial length units to metric length units.,5 inches,"""""""
Imperial to Metric conversion program.
""""""

def inches_to_cm(inches):
    return inches * 2.54

if __name__ == '__main__':
    print(inches_to_cm(5))","""""""
Imperial to Metric conversion program.
""""""

def inches_to_cm(inches):
    return inches * 2.54

if __name__ == '__main__':
    print(inches_to_cm(5))",correct,OOP
You have a list of temperature values. Write a python program to find the day which has the highest temperature.,"[58, 59, 61, 63, 66, 68, 71, 72, 75]","def highest_temp(temp_list):
    highest_temp_day = 0 
    highest_temp_val = temp_list[0]

    for i in range(1, len(temp_list)):
        if temp_list[i] > highest_temp_val:
            highest_temp_day = i
            highest_temp_val = temp_list[i]
            
    return highest_temp_day","def highest_temp(temp_list):
    highest_temp_day = 0 
    highest_temp_val = temp_list[0]

    for i in range(1, len(temp_list)):
        if temp",Incomplete Answer,File I/O
Generate a program which accepts a sentence as an input and returns the total number of characters in it?,"""<noinput>""","# Python program to find number of characters in a sentence 
  
# Function to calculate number of characters 
def find_char(s): 
    return(len(s)) 
  
# Taking the sentence from the user 
str = input(""Enter a sentence: "") 
  
# Calling the function 
count = find_char(str) 
  
# Printing the result 
print(""Number of characters:"", count)","# Python program to find number of characters in a sentence 
  
# Function to calculate number of characters 
def find_char(s): 
    return(len(s)) 
  
# Taking the sentence from the user 
str = input(""Enter a sentence: "") 
  
# Calling the function 
count = find_char(str) 
  
# Printing the result 
print(""Number of characters:"", count)",correct,OOP
Create a Python function which takes in two lists and returns a list that contains the elements from both lists.,"list1 = [1, 2, 3] 
list2 = [4, 5, 6]","def combine_lists(list1, list2):
    return list1 + list2","def combine_lists(list1, list2):
    return list1 + list2",correct,Loops
Create a simple neural network using TensorFlow in Python.,,"import tensorflow as tf

# declaring the model
model = tf.keras.Sequential([
    tf.keras.layers.Dense(4, activation='relu', input_shape=(2,)),
    tf.keras.layers.Dense(4, activation='relu'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

# compiling the model
model.compile(
    optimizer='adam', 
    loss='binary_crossentropy',
    metrics=['accuracy']
)","import tensorflow as tf

# declaring the model
model = tf.keras.Sequential([
    tf.keras.layers.Dense(4, activation='relu', input_shape=(2,)),
    tf.keras.layers.Dense(4, activation",Incomplete Answer,File I/O
Design a Python code to Print the length of the string entered by user.,"stringInput = ""Hello World!""","stringLength = len(stringInput)

print(""The length of the string is: "", stringLength)","stringLength = len(stringInput)

print(""Th",Incomplete Answer,Loops
Create a Python program to calculate the square root of a user-defined positive number.,n = 100,"import math

n = 100

#Calculate the square root of a number
square_root = math.sqrt(n)

print(f'Square root of {n} is {square_root}')","import math

n = 100

#Calculate the square root of a number
square_root = math.sqrt(n)

print(f'Square root of {n} is {square_root}')",Syntax Error,OOP
Create a function in Python that can print the first 5 prime numbers.,,"def print_first_five_primes():
    prime_numbers = [2, 3, 5, 7, 11]
    for prime in prime_numbers:
        print(prime)","def print_first_five_primes():
    prime_numbers = [2, 3, 5, 7, 11]
    for prime in prime_numbers:
        print(prime)",correct,Loops
Create a Python function to remove all non-alphanumeric characters from a string.,"""Hello, $World!""","def clean_string(string):
    cleanedString = """"
    for c in string:
        if c.isalnum():   
            cleanedString += c 
  
    return cleanedString","def clean_string(string):
    cleanedString = """"
    for c in string:
        if c.isalnum():   
            cleanedString += c 
  
    return cleanedString",Syntax Error,Loops
Write a simple Python function that takes a list of integers and returns the sum of all elements divisible by 3.,"li = [4, 6, 17, 24, 5, 9]","def divisibleBy3(li):
 total = 0
 for num in li:
  if num % 3 == 0:
   total += num
 return total
# Output: 24","def divisibleBy3(li):
 total = 0
 for num in li:
  if num % 3 == 0:
   total += num
 return total
# Output: 24",Syntax Error,Recursion
Generate a python script for encrypting a text with Caesar cipher.,,"def caesar_cipher(text, key):
    encrypted_text = ''
    for c in text: 
        if c.isalpha(): 
            encrypted_text += chr(ord(c) + key) 
        else:
            encrypted_text += c
  
    return encrypted_text","def caesar_cipher(text, key)
    encrypted_text = ''
    for c in text 
        if c.isalpha() 
            encrypted_text += chr(ord(c) + key) 
        else
            encrypted_text += c
  
    return encrypted_text",Syntax Error,Recursion
Create a Python program to sort a list in O(n) time.,,"def sort_list_in_O_n(lst):
    n = len(lst) 
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if lst[j] > lst[j+1] : 
                lst[j], lst[j+1] = lst[j+1], lst[j]","def sort_list_in_O_n(lst):
    n = len(lst) 
    for i in range(n-1): 
        for j in range(0,",Incomplete Answer,Recursion
Design a Python program to create a list of randomized numbers.,,"import random

def rand_list(n):
	rand_num_list = []
	for _ in range(n):
		rand_num_list.append(random.randint(1,100))
	return rand_num_list","import random

def rand_list(n):
	rand_num_list = []
	for _ in range(n):
		rand_num_list.append(random.randint(1,100))
	return rand_num_list",correct,File I/O
Construct an algorithm in Python that takes an array of numbers and removes all duplicates while maintaining the original order of the array.,"[1, 3, 2, 1, 5, 4, 8, 6, 7, 5]","def remove_duplicates(arr):
    seen = set()
    seen_add = seen.add
    return [x for x in arr if not (x in seen or seen_add(x))]

arr = [1, 3, 2, 1, 5, 4, 8, 6, 7, 5]
result = remove_duplicates(arr)

print(result)
# Output: [1, 3, 2, 5, 4, 8, 6, 7]","def remove_duplicates(arr):
    seen = set()
    seen_add = seen.add
    return [x for x in arr if not (x in seen or seen_add",Incomplete Answer,Recursion
Create a python script to download a complete web page and cache it for faster offline access.,URL: https://www.example.com/page1,"import requests
import os

url = 'https://www.example.com/page1'

if not os.path.exists('cache'):
 os.makedirs('cache')

r = requests.get(url)

filename = url.rsplit('/', 1)[-1]
file_path = os.path.join('cache', filename)

with open(file_path, 'wb') as f:
 f.write(r.content)","import requests
import os

url = 'https://www.example.com/page1'

if not os.path.exists('cache'):
 os.makedirs('cache')

r = requests.get(url)

filename = url.rsplit('/', 1)[-1]
file_path = os.path.join('cache', filename)

with open(file_path, 'wb') as f:
 f.write(r.content)",correct,OOP
Develop a Python script to output the result of the following boolean expression:,(not A or B) and (C or D),"def booleanExpression(A, B, C, D):
    return (not A or B) and (C or D)","def booleanExpression(A, B, C, D):
",Incomplete Answer,OOP
Write a python function to remove spaces from a given string.,,"def remove_spaces(str1):
  str1 = str1.replace(' ','')
  return str1","def remove_spaces(str1):
  str1 = ",Incomplete Answer,File I/O
Generate a random list of numbers in Python,,"import random
 
nums = []
for i in range(10):
 nums.append(random.randint(1, 100))
 
print(nums)","import random
 
nums = []
for i in range(10:
 nums.append(random.randint(1, 100
 
print(nums",Syntax Error,Loops
Construct a web scraper in Python using the Scrapy library which fetches information from a web page.,,"import scrapy

class MySpider(scrapy.Spider):  
 name = 'myspider'
 start_urls = [
 'https://example.com/page1',
 'https://example.com/page2',
 ]

def parse(self, response):
 for item in response.css('item'):
 yield {
 'title': item.css('item-title::text').get(),
 'description': item.css('item-description::text').get(),
 }","import scrapy

class MySpider(scrapy.Spider):  
 name = 'myspider'
 start_urls = [
 'https://example.com/page1',
 'https://example.com/page2',
 ]

def parse(self,",Incomplete Answer,OOP
Write a function to combine two dictionaries by adding values for common keys.,,"from collections import Counter
def add_dict(d1,d2):
   add_dict = Counter(d1) + Counter(d2)
   return add_dict","from collections import Counter
def add_dict(d1,d2):
   add_dict = Counter(d1) + Counter(d2)
   return add_dict",correct,OOP
Create a Python script that accesses a website's HTML.,,"# Import the requests library 
import requests 

# Get the website's content 
r = requests.get('https://www.example.com/') 

# Get the webpage's HTML 
html = r.text

# Print the HTML 
print(html)","# Import the requests library 
import requests 

# Get the website's content 
r = requests.get('https//www.example.com/') 

# Get the webpage's HTML 
html = r.text

# Print the HTML 
print(html)",Syntax Error,OOP
Develop a program in python to realize the following task:,Calculate the average of all the elements of an array.,"def avg(arr):
    tot_sum = 0
    for num in arr:
        tot_sum += num
    
    return tot_sum/len(arr)","def avg(arr:
    tot_sum = 0
    for num in arr:
        tot_sum += num
    
    return tot_sum/len(arr",Syntax Error,File I/O
Write a function in Python to return the square root of a number.,A number: 49,"import math

def square_root(num):
    return math.sqrt(num)

num = 49
print(""Square root of "", num, "" is: "", square_root(num))","import math

def square_root(num):
    return math.sqrt(num)

n",Incomplete Answer,File I/O
Create a Python program to find the number of days between two dates.,"date1 = ""2020-10-01""
date2 = ""2020-10-31""","from datetime import datetime

def get_days_diff(date1, date2):
 d1 = datetime.strptime(date1, ""%Y-%m-%d"")
 d2 = datetime.strptime(date2, ""%Y-%m-%d"")
 return abs((d2 - d1).days)","from datetime import datetime

def get_days_diff(date1, date2):
 d1 = datetime.strptime(date1, ""%Y-%m-%d"")
 d2 = datetime.strptime(date2, ""%Y-%m-%d"")
 return abs((d2 - d1).days)",correct,Recursion
Write a function to extract the ranges that are missing from the given list with the given start range and end range values.,,"def extract_missing(test_list, strt_val, stop_val):
  res = []
  for sub in test_list:
    if sub[0] > strt_val:
      res.append((strt_val, sub[0]))
      strt_val = sub[1]
    if strt_val < stop_val:
      res.append((strt_val, stop_val))
  return (res) ","def extract_missing(test_list, strt_val, stop_val)
  res = []
  for sub in test_list
    if sub[0] > strt_val
      res.append((strt_val, sub[0]))
      strt_val = sub[1]
    if strt_val < stop_val
      res.append((strt_val, stop_val))
  return (res) ",Syntax Error,OOP
Write a python function to find sum of all prime divisors of a given number.,,"def Sum(N): 
    SumOfPrimeDivisors = [0]*(N + 1)   
    for i in range(2,N + 1) : 
        if (SumOfPrimeDivisors[i] == 0) : 
            for j in range(i,N + 1,i) : 
                SumOfPrimeDivisors[j] += i           
    return SumOfPrimeDivisors[N] ","def Sum(N): 
    SumOfPrimeDivisors = [0]*(N + 1)   
    for i in range(2,N + 1) : 
        if (SumOfPrimeDivisors[i] == 0) : ",Incomplete Answer,File I/O
Create a Python program that takes a number n and prints out the Fibonacci sequence from 0 to n.,,"def Fibonacci(n): 
 a = 0
 b = 1
 if n < 0: 
 print(""Incorrect input"") 
 elif n == 0: 
 return a 
 elif n == 1: 
 return b 
 else: 
 for i in range(2,n+1): 
 c = a + b 
 a = b 
 b = c 
 return b 

def printFibonacci(n): 
 for i in range(n+1):
 print(Fibonacci(i),end="" "")","def Fibonacci(n): 
 a = 0
 b = 1
 if n < 0: 
 print(""Incorrect input"") 
 elif n == 0: 
 return a 
 elif n == 1: 
 return b 
 else: 
 for i in range(2,n+1): 
 c = a + b 
 a = b 
 b = c 
 return b 

def printFibonacci(n): 
 for i in range(n+1):
 print(Fibonacci(i),end="" "")",correct,Loops
Generate a python program to read the contents from a given URL,,"import requests

def read_url(url):
  r = requests.get(url)
  if r.status_code == 200:
    return r.text
  else:
    return None","import requests

def read_url(url):
  r = requests.get(url)
  if r.status_code == 200:
    return r.text
  else:
    return None",correct,File I/O
Create a web scraper with Python BeautifulSoup library for gathering data from a website.,,"import requests
from bs4 import BeautifulSoup

page = requests.get('http://example.com')
soup = BeautifulSoup(page.content, 'html.parser')

data = []

for item in soup.find_all('div', class_='item'):
 title = item.find('h3').get_text()
 description = item.find('p').get_text()
 
 data.append({
 'title': title,
 'description': description
 })
 
print(data)","import requests
from bs4 import BeautifulSoup

page = requests.get('http://example.com')
soup = BeautifulSoup(page.content, 'html.parser')

data = []

for item in soup.find_all('div', class_='item'):
 title = item.find('h3').get_text()
 description = item.find('p').get_text()
 
 data.append({
 'title': title,
 'description': description
 })
 
print(name, data)",Syntax Error,Loops
Generate a python code snippet to reverse a given list.,,"def reverse_list(list):
  return list[::-1]",def reverse_list(list,Incomplete Answer,File I/O
Implement a program in Python to detect the occurrence of a string in a given sentence.,"sentence: ""This is an example sentence""
string: ""example""","def detectString(sentence, string):
  if string in sentence:
    return ""String '{}' detected in the sentence"".format(string)
  else:
    return ""String '{}' not detected in the sentence"".format(string)

sentence = ""This is an example sentence""
string = ""example""

print(detectString(sentence, string))","def detectString(sentence, string):
  if string in sentence:
    return ""String '{}' detected in the sentence"".format(string)
  else:
    return ""Strin",Incomplete Answer,Loops
Develop a Python program to identify characters that occur more than once in a string,,"def find_duplicate_characters(string):
    count = {}
    result = []
    for char in string:
        count[char] = count.get(char, 0) + 1
        if count[char] > 1:
            result.append(char) 
    return result","def find_duplicate_characters(string):
    count = {}
    result = []
    for char in string:
        count[char] = count.get(char, 0) + 1
        if count[char] > 1:
            result.append(char) 
    return result",Syntax Error,Recursion
"Write a Python class to represent a person with name, age and gender attributes.",,"class Person:
    def __init__(self, name, age, gender):
        self.name = name
        self.age = age
        self.gender = gender","class Person:
    def __init__(self, name, age, gender):
        self.name = name
        self.age = age
        self.gender = gender",correct,OOP
"Write a Python program to generate a random string of fixed length of 10 characters, which contains only lowercase letters and numbers.",,"import string
import random

def generate_random_string(length):
 chars = string.ascii_lowercase + string.digits
  return ''.join(random.choice(chars) for _ in range(length))

result = generate_random_string(10)
print(result)

# Output : 'n5z5hp5d5v'","import string
import random

def generate_random_string(length):
 chars = string.ascii_lowercase + string.digits
  return ''.join(random.choice(chars) for _ in range(length))

result = generate_random_string(10)
print(result)

# Output : 'n5z5hp5d5v'",correct,File I/O
Create a web application in Python to display current weather information for a given city.,"Paris, France","# import libraries
import requests, json 
  
# api-endpoint 
url = ""http://api.openweathermap.org/data/2.5/weather?q={city}&units=metric&APPID=","# import libraries
import requests, json 
  
# api-endpoint 
url = ""http//api.openweathermap.org/data/2.5/weather?q={city}&units=metric&APPID=",Syntax Error,Recursion
Design a Python script that takes two dates as input and returns the number of days between them.,,"from datetime import date

def days_between_dates(date1, date2):
    d0 = date(date1[0], date1[1], date1[2])
    d1 = date(date2[0], date2[1], date2[2])
    return abs((d1 - d0).days)

date1 = [2020, 8, 1]
date2 = [2020, 8, 11]

print(days_between_dates(date1, date2))","from datetime import date

def days_between_dates(date1, date2):
    d0 = date(date1[0], date1[1], date1[2])
    d1 = date(date2[0], d",Incomplete Answer,OOP
Create a sorting algorithm in Python to sort strings by their length.,"[""cat"", ""dog"", ""apple"", ""banana""]","def sort_by_length(strings):
    for i in range(len(strings) - 1):
        for j in range(i + 1, len(strings)):
            if len(strings[i]) > len(strings[j]):
                strings[i], strings[j] = strings[j], strings[i]
    return strings

unsorted_list = [""cat"", ""dog"", ""apple"", ""banana""]

sorted_list = sort_by_length(unsorted_list)

print(sorted_list)","def sort_by_length(strings):
    for i in range(len(strings) - 1):
        for j in range(i + 1, len(strings)):
            if len(strings[i]) > len(strings[j]):
                st",Incomplete Answer,Loops
Create a Python program that validates the date format.,,"def validate_date(date):
  # check if input format is valid
  try:
    datetime.strptime(date, '%d/%m/%Y')
    return True
  except ValueError:
    return False","def validate_date(date):
  # check if input format is valid
  try:
    datetime.strptime(date, '%d/%m/%Y')
    return True
  except ValueError:
    return False",correct,File I/O
Generate a Python script to validate a given email address.,,"import re

def validate_email(email):
    regex = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    if re.search(regex, email):
        return True
    else:
        return False

valid = validate_email('example@domain.com')
print(valid)","import re

def validate_email(email):
    regex = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    if re.search(re",Incomplete Answer,OOP
Create a class in Python that implements the iterator protocol and produces the sequence of the Fibonacci numbers when iterated.,,"class Fibonacci:
 def __init__(self, n):
  self.n = n
  self.a = 0
  self.b = 1
 
 def __iter__(self): 
  return self
 
 def __next__(self): 
  if self.a <= self.n:
   temp = self.a
   self.a, self.b = self.b, self.a + self.b 
   return temp 
  else:
  raise StopIteration","class Fibonacci:
 def __init__(self, n:
  self.n = n
  self.a = 0
  self.b = 1
 
 def __iter__(self: 
  return self
 
 def __next__(self: 
  if self.a <= self.n:
   temp = self.a
   self.a, self.b = self.b, self.a + self.b 
   return temp 
  else:
  raise StopIteration",Syntax Error,Recursion
Write an efficient Python program to remove all the duplicate items from a list.,"[1,1,2,2,3,4,5,5]","def removeDuplicates(arr):
  output = []
  for ele in arr:
    if ele not in output:
      output.append(ele)
  return output
  
output = removeDuplicates([1,1,2,2,3,4,5,5]);
print(output) // outputs: [1, 2, 3, 4, 5]","def removeDuplicates(arr):
  output = []
  for ele in arr:
    if ele not in output:
      output.append(ele",Incomplete Answer,File I/O
Write a function to find the product of first even and odd number of a given list.,,"def mul_even_odd(list1):
    first_even = next((el for el in list1 if el%2==0),-1)
    first_odd = next((el for el in list1 if el%2!=0),-1)
    return (first_even*first_odd)","def mul_even_odd(list1):
    first_even = next((el for el in list1 if el%2==0),-1)
    first_odd = next((el for el in list1 if el%2!=0),-1)
    return (first_even*first_odd)",Syntax Error,Loops
Create a program in Python to remove duplicates from a list and return the new list.,"arr = [1, 2, 3, 1, 4]","def remove_duplicates(arr):
    new_list = []
    for item in arr:
        if item not in new_list:
            new_list.append(item)
    return new_list","def remove_duplicates(arr)
    new_list = []
    for item in arr
        if item not in new_list
            new_list.append(item)
    return new_list",Syntax Error,Loops
Generate an algorithm in Python that returns the kth smallest number in a given array.,"Input Array: [3, 2, 4, 1, 5]
Input k: 3","def kthSmallest(arr, k):
 # sort the array
 arr.sort()
 
 # return the kth element
 return arr[k-1]
 
# Driver Code
arr = [3,2,4,1,5]
k = 3

print(kthSmallest(arr, k)) # 3","def kthSmallest(arr, k:
 # sort the array
 arr.sort(
 
 # return the kth element
 return arr[k-1]
 
# Driver Code
arr = [3,2,4,1,5]
k = 3

print(kthSmallest(arr, k # 3",Syntax Error,File I/O
Optimize the following Python code to remove any redundant operations.,"x = 0
for i in range(100):
    for j in range(100):
        x += i
        x += j","x = 0
for i in range(100):
    x += i * 100
    for j in range(100):
        x += j","x = 0
for i in range(100):
    x += i * 1",Incomplete Answer,Loops
Develop a python program for the following task,Write a function to calculate the sum of the first n natural numbers.,"def sum_n(n):
    result = (n * (n+1)) / 2
    return result

n = 10

sum = sum_n(n)
print(sum)","def sum_n(n):
    result = (n * (n+1)) / 2
    return result

n = 10

sum = sum_n(n)
print(sum)",correct,OOP
"In Python, create a function to check if a given number is prime, and then print out all prime numbers between 0 and that number.",Number : 25,"def is_prime(number):
    if number <= 1:
        return False
    for i in range(2, number):
        if number % i == 0:
            return False
    return True

def print_primes(upper_limit):
    for i in range(2, upper_limit+1):
        if is_prime(i):
            print(i)

print_primes(25)","def is_prime(number):
    if number <= 1:
        return False
    for i in range(2, number):
        if number % i == 0:
            return False
    return True

def print_primes(upper_limit):
    for i in range(2, upper_limit+1):
        if is_prime(i):
            print(i)

print_primes(25)",correct,OOP
Write a Python script that takes in a Python list and returns every other element as a sublist.,"[1,2,3,4,5]","def every_other_sublist(input_list):
 sublist = []
 for i in range(len(input_list)):
 if i % 2 == 0:
 sublist.append(input_list[i])
 return sublist","def every_other_sublist(input_list):
 sublist = []
 for i in range(len(input_list)):
 if i % 2 == 0:
 sublist.append(input_list[i])
 return sublist",correct,OOP
Write a Python program that takes in a sentence and returns the words within the given sentence in reverse order.,"sentence = ""Hello world!""","def reverse_words(sentence):
    words = sentence.split("" "")
    reversed_words = words[::-1]
    return "" "".join(reversed_words)

print(reverse_words(""Hello world!""))
# Output: world! Hello","def reverse_words(sentence):
    words = sentence.split("" "")
    reversed_words = words[::-1]
    return "" "".join(reversed_words)

print(reverse_words(""Hello world!""))
# Output: world! Hello",correct,Recursion
Write a Python program to generate all combinations of 2 given lists.,,"def generate_combinations(list1, list2):
    combinations = []
    for x in list1:
        for y in list2:
            combination = (x, y)
            combinations.append(combination)
    return combinations","def generate_combinations(list1, list2):
    combinations = []
    for x in list1:
        for y in list2:
            combination = (x, y)
            combinations.append(combination)
    return combinations",correct,Loops
Write a python function to print out the first 10 numbers from Fibonacci sequence.,,"def print_fibonacci_sequence(n): 
  fibonacci_sequence = [0, 1] 
  for i in range(2, n): 
    fibonacci_sequence.append(fibonacci_sequence[i-1] + fibonacci_sequence[i-2])
  return fibonacci_sequence[:n]

print(print_fibonacci_sequence(10))
##
[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]","def pritn_fibonacci_sequence(n): 
  fibonacci_sequence = [0, 1] 
  for i in range(2, n): 
    fibonacci_sequence.append(fibonacci_sequence[i-1] + fibonacci_sequence[i-2])
  return fibonacci_sequence[:n]

pritn(pritn_fibonacci_sequence(10))
##
[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]",Syntax Error,OOP
"Write a Python program to edit a given string and remove all occurances of ""the"".","string = ""the quick brown fox jumped over the lazy dog""","def remove_the(string):
  edited_string = string.replace(""the"", """")
  return edited_string

result = remove_the(""the quick brown fox jumped over the lazy dog"")
print(result)","def remove_the(string):
  edited_string = string.replace(""the"", """")
  return edited_st",Incomplete Answer,Loops
Write a Python program to generate an array of least common multiple of all the numbers from 1 to 10.,,"import collections 

def least_common_multiples(num):
    lcm_arr = []
    for i in range(1, num + 1): 
        lcm_arr.append(i) 
    lcm_result = collections.Counter(lcm_arr).most_common()[-1][0] 
    return lcm_result","import collections 

def least_common_multiples(num):
    lcm_arr = []
    for i in range(1, num + 1): 
      ",Incomplete Answer,File I/O
Write a function to find the lateral surface area of cuboid,,"def lateralsurface_cuboid(l,w,h):
  LSA = 2*h*(l+w)
  return LSA","def lateralsurface_cuboid(l,w,h):
  LSA = 2*h*(l+w)
  return LSA",correct,OOP
Write a Python function to convert a list of multiple integers into a single integer.,"my_list = [1, 2, 3, 4]","def convert_list_to_integer(my_list):
    result = 0
    multiplier = 1
 
    for i in range(len(my_list)-1, -1, -1):
        result += my_list[i]*multiplier
        multiplier *= 10
 
    return result
 
print(convert_list_to_integer(my_list))","def convert_list_to_integer(my_list):
    result = 0
    multiplier = 1
 
    for i in range(len(my_list)-1, -1, -1):
        result += my_list[i]*multiplier
        multiplier *= 10
 
    return result
 
print(convert_list_to_integer(my_list))",correct,Recursion
Create a python program to create a dictionary with key-value pairs using two lists,"keys = [""a"", ""b"", ""c""]
values = [1, 2, 3]","keys = [""a"", ""b"", ""c""]
values = [1, 2, 3]

d = dict(zip(keys, values))
print(d) # output: {'a': 1, 'b': 2, 'c': 3}","keys = [""a"", ""b"", ""c""]
values = [1, 2, 3]

d = dict(zip(keys, values))
print(d) # output: {'a': 1, 'b': 2, 'c': 3}",correct,Loops
Generate a Python loop with a number of iterations equal to the number of given numbers.,"numbers = [1, 2, 3]","for i in range(len(numbers)):
  print(numbers[i])","for i in range(len(numbers))
  print(numbers[i])",Syntax Error,OOP
Develop a python program to add two arrays of the same size.,"a = [2, 3, 4]
b = [5, 6, 7]","def add_arrays(a, b):
    c = []
    n = len(a)
    for i in range(n):
        c.append(a[i] + b[i])
    return c

a = [2, 3, 4]
b = [5, 6, 7]
result = add_arrays(a, b)
print(result) # prints [7, 9, 11]","def add_arrays(a, b):
    c = []
    n = len(a)
    for i in range(n):
        c.append(a[i] + b[i])
",Incomplete Answer,Recursion
Write a Python program to reformat a string using a given dictionary.,"""Hello {name}, it's {time} to go"",{'name':'John', 'time':'2pm'}","def reformat_string(string, mapping):
    for k, v in mapping.items():
        string = string.replace('{' + k + '}', v)
    return string

if __name__ == ""__main__"":
    string = ""Hello {name}, it's {time} to go""
    mapping = {""name"": ""John"", ""time"": ""2pm""}
    print(reformat_string(string, mapping)) # Output: Hello John, it's 2pm to go","def reformat_string(string, mapping):
for k, v in mapping.items():
    string = string.replace('{' + k + '}', v)
return string

if __name__ == ""__main__"":
string = ""Hello {name}, it's {time} to go""
mapping = {""name"": ""John"", ""time"": ""2pm""}
print(reformat_string(string, mapping)) # Output: Hello John, it's 2pm to go",Syntax Error,Recursion
Modify the following Python code such that a thread is started from within the function.,"def doSomething():
    # Do something","import threading

def doSomething():
	#Do something
    t = threading.Thread(target=functionName)
    t.start()","import threading

def doSomething():
	#Do something
    t = threading.Thread(target=functionName)
    t.start()",correct,OOP
Write a Python program to implement an algebraic equation.,Equation: 3x2 + 7x -4,"def evaluate_eq(x):
    return 3*x*x + 7*x - 4","def evaluate_eq(x):
    return 3*x*x + 7*x - 4",Syntax Error,Loops
"Given two positive numbers x and y, write a Python program to multiply them.",15 and 10,"def multiply_numbers(x, y):
    return x * y

result = multiply_numbers(15, 10)
print(result)","def multiply_numbers(x, y):
    return x * y

result = multiply_numbers(15, 10)
print(result)",correct,File I/O
Create a Python program that computes the total time taken by two runners in a race.,"Time of Runner 1: 3 minutes
Time of Runner 2: 4 minutes","def race_time_total(time1,time2):
 total = time1 + time2
 return total","def race_time_total(time1,time2):
 ",Incomplete Answer,Recursion
Create a set of classes in Python to represent a school database.,,"class Student:
    def __init__(self, name, grade):
        self.name = name
        self.grade = grade

    
class Course:
    def __init__(self, name, teachers):
        self.name = name
        self.teachers = teachers
    
    
class School:
    def __init__(self, name):
        self.name = name
        self.students = []
        self.courses = []","class Student:
    def __init__(self, name, grade):
        self.name = name
        self.grade = grade

    
class Course:
    def __init__(self, name, teachers):
        self",Incomplete Answer,Recursion
Generate a class in Python to represent a circle with radius and diameter properties.,,"class Circle:
    def __init__(self, radius):
        self.radius = radius
        self.diameter = 2 * self.radius 

    @property
    def radius(self):
        return self.__radius

    @radius.setter
    def radius(self, radius):
        self.__radius = radius
        self.diameter = 2 * self.radius","class Circle:
    def __init__(self, radius):
        self.radius = radius
        self.diameter = 2 * self.radius 

    @property
    def radius(self):
        return self.__radius

    @radius.setter
    def radius(self, radius):
        self.__radius = radius
        self.diameter = 2 * self.radius",correct,Recursion
Create a program that uses Django and Python to display a list of books.,,"# imports
import os
import django

# set up Django
os.environ['DJANGO_SETTINGS_MODULE'] = 'myproject.settings'
django.setup()

# set up model
from myapp.models import book

# query database
books = book.objects.all()

# print books
for book in books:
    print(book.title + ' - ' + book.author)","# imports
import os
import django

# set up Django
os.environ['DJANGO_SETTINGS_MODULE'] = 'myproject.settings'
django.setup()

# set up model
from ",Incomplete Answer,Loops
Generate a Python function to calculate the least common multiple (LCM) of two numbers.,,"def lcm(a, b): 
    lcm = (a*b)//gcd(a,b) 
    return lcm","def lcm(a, b): 
    lcm = (a",Incomplete Answer,Loops
Create a method in Python to encrypt a given string using AES-256.,,"import base64
from Crypto.Cipher import AES

secret_key = ""YourSecr3tEncrKey""

def encodeAES(text):
Key = base64.b64encode(secret_key.encode(""utf-8""))

IV = 16 * '\x00' 

mode = AES.MODE_CBC
encryptor = AES.new(Key, mode, IV=IV)
text = text.encode(""utf-8"")
ciphertext = encryptor.encrypt(text)

return base64.b64encode(ciphertext).decode(""utf-8"")","import base64
from Crypto.Cipher import AES

secret_key = ""YourSecr3tEncrKey""

def encodeAES(text):
Key = base64.b64encode(secret_key.encode(""utf-8""))

IV = 16 * '\x00' 

mo",Incomplete Answer,Recursion
Write a Python program to convert kilometers to miles.,Kilometers: 10,"kilometers = 10

miles = kilometers * 0.621371

print(""{} kilometers is equal to {} miles"".format(kilometers, miles))","kilometers = 10

miles = kilometers * 0.621371

print(""{} kilometers is equal to {} miles"".format(kilometers, miles))",correct,Loops
Implement a fibonacci sequence in Python.,,"def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return b","def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return b",Syntax Error,File I/O
Create a program in Python that converts binary to decimal representation.,101010,"def BinaryToDecimal(binary): 
    binary1 = binary 
    decimal, i, n = 0, 0, 0
    while(binary != 0): 
        dec = binary % 10
        decimal = decimal + dec * pow(2, i) 
        binary = binary//10
        i += 1
    return decimal 
  
# Driver code 
binary = 101010
print(BinaryToDecimal(binary))","def BinaryToDecimal(binary): 
    binary1 = binary 
    decimal, i, n = 0, 0, 0
    while(binary != 0): 
        dec = binary % 10
        decimal = decimal + dec * pow(2, i) 
        binary = binary//10
        i += 1
    return decimal 
  
# Driver code 
binary = 101010
print(BinaryToDecimal(binary))",correct,OOP
Create a program to find the frequency of characters in a given string in Python.,"Example string: ""abbccccdddde""","def find_character_frequency(string):
    freq = {} 
    for i in string: 
        if i in freq: 
            freq[i] += 1
        else: 
            freq[i] = 1
    return freq
 
# example
string = ""abbccccdddde""
print(find_character_frequency(string))
# Output: {'a': 1, 'b': 2, 'c': 4, 'd': 4, 'e': 1}","def find_character_frequency(string):
    freq = {} 
    for i in string: 
        if i in freq: 
            freq[i] += 1
        else: 
            freq[i] = 1
    return freq
 
# example
string = ""abbccccdddde""
print(find_character_frequency(string))
# Output: {'a': 1, 'b': 2, 'c': 4, 'd': 4, 'e': 1}",correct,Recursion
Create a program in Python that takes an array of integers and returns a new array with each element multiplied by its index.,"[6, 3, 10, 4]","def multiply_by_index(numbers):
    for i in range(len(numbers)):
        numbers[i] *= i
    return numbers","def multiply_by_index(numbers):
    for i in range(len(numbers)):
        numbers[i] *= i
    return numbers",correct,Loops
Create a Python script to scrape a given website.,,"import requests
from bs4 import BeautifulSoup

url = '<your website url>'
page = requests.get(url)
soup = BeautifulSoup(page.text, 'html.parser')

# Scraping code goes here....","import requests
from bs4 import BeautifulSoup

url = '<your website url>'
page = request",Incomplete Answer,File I/O
Create a Binomial Tree in python,,"class BinomialTree:
    def __init__(self, n):
        self.n = n

    def create(self):
        tree = [None] * self.n
        tree[0] = 1

        for i in range(self.n):
            for j in range(i+1):
                if tree[i] is not None:
                    if j == 0:
                        tree[i + 1] = tree[i] * 2
                    else:
                        tree[i + 1] += tree[i - j]
        return tree","class BinomialTree:
    def __init__(self, n):
        self.n = n

    def create(self):
        tree = [None] * self.n
        tree[0] = 1

        for i in range(self.n):
            for j in range(i+1):
                if tree[i] is not None:
                    if j == 0:
                        tree[i + 1] = tree[i] * 2
                    else:
                        tree[i + 1] += tree[i - j]
        return tree",Syntax Error,OOP
Create a program in Python for converting an integer number to a Roman numeral.,,"def int_to_Roman(num):
roma_numerals = {
 1: ""I"",
 4: ""IV"",
 5: ""V"",
 9: ""IX"",
 10: ""X"",
 40: ""XL"",
 50: ""L"",
 90: ""XC"",
 100: ""C"",
 400: ""CD"",
 500: ""D"",
 900: ""CM"",
 1000: ""M"",
}

roman_num = """"
for key, value in sorted(roma_numerals.items(), reverse=True):
 while num >= key:
 roman_num += value
 num -= key

return roman_num","def int_to_Roman(num):
roma_numerals = {
 1: ""I"",
 4: ""IV"",
 5: ""V"",
 9: ""IX"",
 10: ""X"",
 40: ""XL"",
 50: ""L"",
 90: ""XC"",
 100: ""C"",
 400: ""CD"",
 500: ""D"",
 900: ""CM"",
 1000: ""M"",
}

roman_num = """"
for key, value in sorted(roma_numerals.items(), reverse=True):
 while num >= key:
 roman_num += value
 num -= key

return roman_num",correct,Loops
Write a python function to check whether the given two numbers have same number of digits or not.,,"def same_Length(A,B): 
    while (A > 0 and B > 0): 
        A = A / 10; 
        B = B / 10; 
    if (A == 0 and B == 0): 
        return True; 
    return False; ","def same_Length(A,B): 
    while (A > 0 and B > 0): 
        A = A / 10; 
        B = B / 10; 
    if (A == 0 and B == 0): 
        return True; 
    return False; ",Syntax Error,Loops
Create a class in Python to represent books.,,"class Book:
    def __init__(self, title, author, year, isbn):
        self.title = title
        self.author = author
        self.year = year
        self.isbn = isbn
    
    def __str__(self):
        return '{} by {} published in {}. ISBN: {}'.format(self.title, self.author, self.year, self.isbn)","class Book:
    def __init__(self, title, author, year, isbn):
        self.title = title
        self.author = author
        self.year = year
        self.isbn = isbn
    
    def __str__(self):
        return '{} by {} published in {}. ISBN: {}'.format(self.title, self.author, self.year, self.isbn)",Syntax Error,OOP
Write an algorithm for linear search in Python.,"List: [1, 3, 8, 10, 15, 20, 25]
Number to search: 15","def linear_search(list, n):
  i = 0
  while i < len(list):
    if list[i] == n:
      return i
    i = i+1
  return -1

list = [1, 3, 8, 10, 15, 20, 25]
n = 15
index = linear_search(list, n)
print(""Number found at index:"", index)","def linear_search(list, n):
  i = 0
  while i < len(list):
    if list[i] == n:
      return i
    i = i+1
  retur",Incomplete Answer,Loops
Program an algorithm in Python to calculate the largest sum of non-adjacents from an unsorted array.,,"def largestSumNonAdjacent(arr):
  incl = 0
  excl = 0
 
  for i in arr: 
    new_excl = max(incl, excl) 
    incl = excl + i 
    excl = new_excl 
    
  return max(incl, excl)","def largestSumNonAdjacent(arr)
  incl = 0
  excl = 0
 
  for i in arr 
    new_excl = max(incl, excl) 
    incl = excl + i 
    excl = new_excl 
    
  return max(incl, excl)",Syntax Error,OOP
Write a function to caluclate arc length of an angle.,,"def arc_length(d,a):
    pi=22/7
    if a >= 360:
        return None
    arclength = (pi*d) * (a/360)
    return arclength","def arc_length(d,a):
    pi=22/7
    if a >= 360:
        return None
    arclength = (pi*d) * (a/360)
    return arclength",correct,Loops
Write a query in Python to count the total number of times a value appears in a specific column of a table.,"Table: ""mytable""
Column: ""mycolumn""
Value: ""myvalue""","SELECT COUNT(mycolumn)
    FROM mytable
    WHERE mycolumn = 'myvalue'","SELECT COUNT(mycolumn)
    FROM mytable
    WHERE mycolumn = 'myvalue'",Syntax Error,Recursion
Create an algorithm in Python to find the longest continuous sequence of zeros in a binary string.,"Example binary string: ""1101011000""","def longestZeroSeq(inputStr):
    maxLength = 0 
   
    currentLength = 0
   
    for c in inputStr:
        if c == '0':
            currentLength += 1
        else:
            maxLength = max(maxLength, currentLength) 
            currentLength = 0
   
    maxLength = max(maxLength, currentLength)
   
    return maxLength","def longestZeroSeq(inputStr):
    maxLength = 0 
   
    currentLength = 0
   
    for c in inputStr:
        if c == '0':
            currentLength += 1
        else:
            maxLength = max(maxLength, currentLength) 
            currentLength = 0
   
    maxLength = max(maxLength, currentLength)
   
    return maxLength",correct,OOP
Create a Python function to extract the largest prime factor from a given number.,number = 35,"def largest_prime_factor(number):
 largest_factor = 1
 for i in range(2, number+1):
 while number % i == 0:
 largest_factor = i
 number //= i
 return largest_factor

largest_prime_factor(35) # Output: 5","def largest_prime_factor(number):
 largest_factor = 1
 for i in range(2, number+1):
 while number % i == 0:
 largest_factor = i
 number //= i
 return largest_factor

largest_prime_factor(35) # Output: 5",correct,OOP
Can you write Python code to replace all the vowels with '*' in a string?,"""Hello, World!""","def replaceVowels(string):
    vowels = [""a"",""e"",""i"",""o"",""u"", ""A"", ""E"", ""I"", ""O"", ""U""]
    newstr = """"
    for char in string:
        if char in vowels:
            newstr += ""*""
        else:
            newstr += char
    return newstr

print(replaceVowels(""Hello, World!""))  # H*ll*, W*rld!","def replaceVowels(string):
    vowels = [""a"",""e"",""i"",""o"",""u"", ""A"", ""E"", ""I"", ""O"", ""U""]
    newstr = """"
    for char in string:
        if char in vowels:
            newstr += ""*""
        else:
            newstr += char
    return newstr

print(replaceVowels(""Hello, World!""))  # H*ll*, W*rld!",correct,Recursion
"Using the comment, create a python program to find the highest number in a series",,"def find_max(nums):
    """"""This function takes a series of numbers as input and returns the highest number.
    
    Args:
        nums (list): A list of numbers.
    
    Returns:
        int: The highest number.
    """"""
    return max(nums)","def find_max(nums):
    """"""This function takes a series of numbers as input and returns the highest number.
    
    Args:
        nums (list): A list of numbers.
    
    Returns:
        int: The highest number.
    """"""
    return max(nums)",Syntax Error,Recursion
Generate a Python class to handle an employee's details and facilitate their salary calculation.,,"class Employee:
    def __init__(self, name, rate_per_hour, hours_worked):
        self.name = name
        self.rate_per_hour = rate_per_hour
        self.hours_worked = hours_worked
    
    def calculate_salary(self):
        return self.rate_per_hour * self.hours_worked","class Employee:
    def __init__(self, name, rate_per_hour, hours_worked):
        self.name = name
        self.rate_per_hour = rate_per_hour
        self.hours_worked = hours_worked
    
    def calculate_salary(self):
        return self.rate_per_hour * self.hours_worked",Syntax Error,Loops
"Design a class in Python called ""Car"" to represent a car object.",,"class Car:
    def __init__(self, make, model, color):
        self.make = make
        self.model = model
        self.color = color
    
    def accelerate(self):
        self.speed += 10
    
    def brakes(self):
        self.speed -= 10","class Car:
    def __init__(self, make, model, color:
        self.make = make
        self.model = model
        self.color = color
    
    def accelerate(self:
        self.speed += 10
    
    def brakes(self:
        self.speed -= 10",Syntax Error,Recursion
Create a Python function to sort a list of strings alphabetically.,"my_list = [""apple"", ""orange"", ""banana""]","def sort_list(list):
    list.sort()
    return list
    
sort_list(my_list)","def sort_list(list):
    list.sort()
    return list
    
sort_list(my_list)",correct,Loops
Design a Python script to calculate the sum of the squares of the first 100 natural numbers,,"def sum_of_squares(n):
    total = 0
    for i in range(1, n+1):
        total += i ** 2
    return total
 
print(sum_of_squares(100))","def sum_of_squares(n):
    total = 0
    for i in range(1, n+1):
  ",Incomplete Answer,OOP
"Create a Python program to capture and store user input until the user enters ""quit"".",,"userInput = input('Enter your input (or ""quit"" to stop): ')

responses = []

while userInput != 'quit':
    responses.append(userInput)
    userInput = input('Enter your input (or ""quit"" to stop): ')

print(responses)","userInput = input('Enter your input (or ""quit"" to stop): ')

responses = []

while userInput != 'quit':
    responses.append(userInput)
    userInput = input('Enter your input (or ""quit"" to stop): ')

pritn(responses)",Syntax Error,Recursion
Write a python function to count unset bits of a given number.,,"def count_unset_bits(n): 
    count = 0
    x = 1
    while(x < n + 1): 
        if ((x & n) == 0): 
            count += 1
        x = x << 1
    return count  ","def count_unset_bits(n): 
    count = 0
    x = 1
    while(x < n + 1): 
       ",Incomplete Answer,File I/O
Improve the performance of the below algorithm written in Python.,,"def algorithm(arr):
    result = []
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            if arr[i] + arr[j] == 0:
                result.append((arr[i], arr[j]))
    return result

def optimizedAlgorithm(arr):
    result = []
    seen = set()
    for num in arr:
        if -num in seen:
            result.append((num, -num))
        seen.add(num)
    return result","def algorithm(arr):
result = []
for i in range(len(arr)):
    for j in range(i + 1, len(arr)):
        if arr[i] + arr[j] == 0:
            result.append((arr[i], arr[j]))
return result

def optimizedAlgorithm(arr):
result = []
seen = set()
for num in arr:
    if -num in seen:
        result.append((num, -num))
    seen.add(num)
return result",Syntax Error,Recursion
Write a function to find nth centered hexagonal number.,,"def centered_hexagonal_number(n):
  return 3 * n * (n - 1) + 1","def centered_hexagonal_number(n):
  return 3 * n * (n - 1) + 1",correct,OOP
You need to write a Python program to print the Fibonacci series.,,"def fibonacci_series(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2, n+1): 
            c = a + b 
            a = b 
            b = c 
        return b 

for n in range(0, 10): 
    print(fibonacci_series(n))","def fibonacci_series(n: 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"" 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2, n+1: 
            c = a + b 
            a = b 
            b = c 
        return b 

for n in range(0, 10: 
    print(fibonacci_series(n",Syntax Error,Recursion
Design a Python program to replace all e with @ in an array of strings,"['abc', 'xyz', '111']","def replace_e(arr): 
    return [i.replace('e','@') for i in arr] 
  
arr = ['abc','xyz','111']
print(replace_e(arr))","def replace_e(arr): 
    return [i.replace('e','@') for i in arr] 
  
arr = ['abc','xyz','111']
print(replace_e(arr))",correct,File I/O
Write a Python program to flatten a list of lists into a single list.,"List of lists: [[1,2], [3], [4,5,6]]","import itertools

# flatten a list of lists
list_of_lists = [[1,2], [3], [4,5,6]]
flattened_list = list(itertools.chain.from_iterable(list_of_lists))

# print the flattened list
print(flattened_list)  # Output: [1, 2, 3, 4, 5, 6]","import itertools

# flatten a list of lists
list_of_lists = [[1,2], [3], [4,5,6]]
flattened_list = list(itertools.",Incomplete Answer,File I/O
Write an algorithm in Python to find the sum of the digits in a number.,123,"def findSum(n): 
	Sum = 0 
	n = str(n)
	for i in n: 
		Sum = Sum + int(i) 
	return Sum

# Driver code  
n = 123
print(findSum(n))","def findSum(n): 
	Sum = 0 
	n = str(n)
	for i in n: 
		Sum = Sum + int(i) 
	return Sum

# Driver code  
n = 123
print(findSum(n))",correct,File I/O
Write a Python function to calculate the sum of the natural numbers up to n.,,"def sum_natural_numbers(n):
    if n < 1:
        return 0
    else:
        return n + sum_natural_numbers(n - 1)","def sum_natural_numbers(n):
    if n < 1:
        return ",Incomplete Answer,Recursion
Create a script in Python that automatically generates an emial address for a given name.,Name: John Doe,"import random

def generate_email(name):
 name_words = name.split()
 first_name = name_words[0]
 last_name = name_words[1]
 random_numbers = str(random.randint(1,99))
 
 email = first_name + last_name + random_numbers + ""@example.com""
 return email
 
 print(generate_email(""John Doe""))","import random

def generate_email(name):
 name_words = name.split()
 first_name = name_words[0]
 last_name = name_words[1]
 random_numbers = str(random.randint(1,99))
 
 email = first_name + last_name + random_numbers + ""@example.com""
 return email
 
 print(generate_email(""John Doe""))",correct,File I/O
Write a function to check if the given string starts with a substring using regex.,,"import re 
def check_substring(string, sample) : 
  if (sample in string): 
      y = ""\A"" + sample 
      x = re.search(y, string) 
      if x : 
          return (""string starts with the given substring"") 
      else : 
          return (""string doesnt start with the given substring"") 
  else : 
      return (""entered string isnt a substring"")","import re 
def check_substring(string, sample)  
  if (sample in string) 
      y = ""\A"" + sample 
      x = re.search(y, string) 
      if x  
          return (""string starts with the given substring"") 
      else  
          return (""string doesnt start with the given substring"") 
  else  
      return (""entered string isnt a substring"")",Syntax Error,Loops
Generate a Python program that takes two lists as input and returns a new list containing only the common elements.,"[1, 2, 3, 4, 8], [2, 6, 8, 10]","def common_elements(list1, list2): 
    common_list=[]
    for element in list1: 
        if element in list2: 
            common_list.append(element) 
    return common_list
  
list1 = [1, 2, 3, 4, 8] 
list2 = [2, 6, 8, 10]

common_list = common_elements(list1, list2) 

print(common_list)","def common_elements(list1, list2): 
    common_list=[]
    for element in list1: 
        if element in list2: 
            common_list.append(element) 
    return common_list
  
list1 = [1, 2, 3, 4, 8] 
list2 = [2, 6, 8, 10]

common_list = common_elements(list1, list2) 

print(common_list)",correct,Loops
Write a Python program to convert a given string to list of words,Hello world,"def convert_to_list(s):
    return s.split()

string = 'Hello world'
result = convert_to_list(string)
print(result)","def convert_to_list(s):
    return s.split()

string = 'Hello world'
result = convert_to_list(string)
print(result)",correct,Loops
Generate a Python function that takes in a number as a parameter and finds its Fibonacci number.,5,"def fibonacci(n):
    a, b = 0, 1
    for i in range(n):
        a, b = b, a + b
    
    return a

fibonacci_number = fibonacci(5)
print(fibonacci_number)","def fibonacci(n):
    a, b = 0, 1
    for i in range(n):
        a, b = b, a + b
    
    return a

fibonacci_number = fibonacci(5)
print(name, fibonacci_number)",Syntax Error,File I/O
Write a Python program to sort a list of tuples by the second item in each tuple.,"[(3, 4), (5, 6), (1, 2)]","def sort_list(tuples):
    return sorted(tuples, key = lambda x: x[1])
 
tuples = [(3, 4), (5, 6), (1, 2)]
 
print(sort_list(tuples))","def sort_list(tuples)
    return sorted(tuples, key = lambda x x[1])
 
tuples = [(3, 4), (5, 6), (1, 2)]
 
print(sort_list(tuples))",Syntax Error,Recursion
Create a python program to serialize data in JSON format.,,"import json

# some Python data
data = [{'name': 'John', 'age': 30, 'city': 'New York'},
        {'name': 'Max', 'age': 20, 'city': 'Berlin'}]

# convert to JSON
json_data = json.dumps(data)

# save as JSON file
with open(""data.json"", ""w"") as json_file:
 json.dump(json_data, json_file)","import json

# some Python data
data = [{'name': 'John', 'age': 30, 'city': 'New York'},
        {'name': 'Max', 'age': 20, 'city': 'Berlin'}]

# convert to JSON
json_data = json.dumps(data)

# save as JSON file
with open(""data.json"", ""w"") as json_file:
 json.dump(json_data, json_file)",correct,Recursion
Create a Python function for calculating the mode (most frequently occuring item) in a list of numbers.,"List of numbers: [1, 2, 3, 2, 4, 2]","import collections

def mode(numbers):
 counts = collections.Counter(numbers)
 max_count = max(counts.values())
 return [item for item, count in counts.items() if count == max_count]

numbers = [1, 2, 3, 2, 4, 2]
mode = mode(numbers)
print(mode)
# Output: [2]","import collections

def mode(numbers):
 counts = collections.Counter(numbers)
 max_count = max(counts.values())
 return [item for item, count in counts.items() if count == max_count]

numbers = [1, 2, 3, 2, 4, 2]
mode = mode(numbers)
print(name, mode)
# Output: [2]",Syntax Error,File I/O
Write a Python program that can detect emails within a given text.,Hello! My name is John and my email is john@example.com.,"import re

text = 'Hello! My name is John and my email is john@example.com.'

# Find all occurrences of an email using regex
email_regex = r""[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}""
result = re.findall(email_regex, text)

# Print emails found
print(""Emails found: \n"")
for email in result:
 print(email)","import re

text = 'Hello! My name is John and my email is john@example.com.'

# Find all occurrences of an email using regex
email_regex = r""[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}""
result = re.findall(email_regex, text)

# Print emails found
print(""Emails found: \n"")
for email in result:
 print(email)",Syntax Error,Loops
Create a function in Python which takes a list as input and returns the sum of the items in the list.,,"def sum_list(input_list):
  sum = 0
  for i in input_list:
    sum += i
  return sum","def sum_list(input_list):
  sum = 0
  for ",Incomplete Answer,Recursion
Construct a algorithm in Python to find the solution of linear equation.,"2x + 3y = 5 
5x - 4y = 7","# import necessary modules 
import numpy as np 
  
# define coefficient and constants 
a = np.array([[2, 3], [5, -4]]) 
b = np.array([5, 7]) 
  
# solve linear equations 
ans = np.linalg.solve(a, b) 
  
# print the solutions 
print(ans[0], ans[1])","# import necessary modules 
import numpy as np 
  
# define coefficient and constants 
a = np.array([[2, 3], [5, -4]]) 
b = np.array([5, 7]) 
  
# solve linear equations 
ans = np.linalg.solve(a, b) 
  
# print the solutions 
print(ans[0], ans[1])",Syntax Error,Recursion
Can you create a Python program that returns the largest number in a list of numbers?,"[4, 8, 2, 6, 9]","def largestNumber(list): 
    maximum = list[0] 
      
    for num in list: 
        if num > maximum: 
            maximum = num 
    return maximum 
  
list = [4, 8, 2, 6, 9] 
largestNumber = largestNumber(list) 
  
print(""Largest number in the given list is:"", largestNumber)","def largestNumber(list): 
    maximum = list[0] 
      
    for num in list: 
        if num > maximum: 
            maximum = num 
    return maximum 
  
list = [4, 8, 2, 6, 9] 
largestNumber = largestNumber(list) 
  
print(""Largest number in the given list is:"", largestNumber)",correct,Loops
Generate a Python code snippet to sum all numbers from a list of integers.,"[2, 7, 8, 4, 5]","sum = 0
for num in [2, 7, 8, 4, 5]:
    sum += num
print(sum)","sum = 0
for num in [2, 7, 8, 4",Incomplete Answer,File I/O
"Create a function in Python which takes 3 arrays as input, and returns the arrays merged together into a single array.","[1, 2, 3], [4, 5, 6], [7, 8, 9]","def merge_arrays(arr1, arr2, arr3):
    combined_arr = arr1 + arr2 + arr3
    return combined_arr

result = merge_arrays([1, 2, 3], [4, 5, 6], [7, 8, 9])
print(result)","def merge_arrays(arr1, arr2, arr3):
    combined_arr = arr1 + arr2 + arr3
    retur",Incomplete Answer,Loops
Generate a Python script to print the elements of a list in reverse order.,"[1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

for i in reversed(my_list):
    print(i)","my_list = [1, 2, 3, 4, 5]

for i in reversed(my_list):
print(i)",Syntax Error,Recursion
Write a python code to add two given numbers using recursive function.,,"def add_recursively(num1, num2):
    if num2 == 0:
        return num1
    else:
        return add_recursively(num1 ^num2, (num1 & num2) << 1)","def add_recursively(num1, num2):
    if num2 == 0:
        return num1
    else:
        return add_recursively(num1 ^num2, (num1 & num2) << 1)",Syntax Error,File I/O
Fix the bug in this Python code.,"def swap(a, b):
  a, b = b, a

x = 10
y = 20

swap(x, y)

print(x, y)","def swap(a, b):
  temp = a
  a = b
  b = temp

x = 10
y = 20

swap(x, y)

print(x, y)","def swap(a, b):
  temp = a
  a = b
  b = temp

x = 10
y = 20

swap(x, y)

print(x, y)",correct,Recursion
Suggest some techniques to optimize the speed of a python program.,,"Some techniques to optimize the speed of a Python program include:
- Optimal use of libraries
- Use of efficient data structures
- Using vectorization and/or NumPy arrays
- Writing efficient loops
- Enabling for in-place operations
- Avoiding unnecessary computations
- Using efficient algorithms
- Avoiding global accesses
- Profiling and memory optimization","Some techniques to optimize the speed of a Python program include:
- Optimal use of libraries
- Use of efficient data structures
- Using vectorization and/or NumPy arrays
- Writing efficient loops
- Enabling for in-place operations
- Avoiding unnecessary computations
- Using efficient algorithms
- Avoiding global accesses
- Profiling and memory optimization",Syntax Error,Recursion
Suggest a way to generate a random series of characters with a given length in Python.,,"import random
import string

def generate_random_string(target_length):
    chars = string.ascii_letters + string.digits
    return ''.join(random.choice(chars) for _ in range(target_length))","import random
import string

def generate_random_string(target_length)
    chars = string.ascii_letters + string.digits
    return ''.join(random.choice(chars) for _ in range(target_length))",Syntax Error,File I/O
Generate a code in Python to find the Kth smallest element in an array.,,"def find_kth_smallest(arr, k): 
    n = len(arr) 
  
    arr.sort() 
  
    return arr[k-1]","def find_kth_smallest(arr, k): 
    n = len(arr) 
  
    arr.sort() 
  
    return arr[k-1]",correct,Recursion
Create a Python program that uses a loop to produce the following output.,,"for i in range(1,11):
 if i % 2 == 0:
 print('{} is even'.format(i))
 else:
 print('{} is odd'.format(i))","for i in range(1,11):
 if i % 2 == 0:
 print('{} is ",Incomplete Answer,File I/O
Generate Python code to clean a text string by removing all punctuation marks.,,"import string

def clean_string(text):
    return ''.join(c for c in text if c not in string.punctuation)","import string

def clean_string(text)
    return ''.join(c for c in text if c not in string.punctuation)",Syntax Error,File I/O
"Create a Python program that calculates the average of 3 grades and returns a grade level using the following scale:

90-100: A
80-89: B
70-79: C
60-69: D
Below 60: F","87, 61, 95","def get_grade_level(grades):
  average = sum(grades) / len(grades)
  if average >= 90:
    grade_level = 'A'
  elif average >= 80:
    grade_level = 'B'
  elif average >= 70:
    grade_level = 'C'
  elif average >= 60:
    grade_level = 'D'
  else:
    grade_level = 'F'

  return grade_level","def get_grade_level(grades):
  average = sum(grades) / len(grades)
  if average >= 90:
    grade_level = 'A'
  elif average >= 80:
    grade_level",Incomplete Answer,Recursion
Design a program in Python to reverse the words of a given string.,"String s = ""This is an example sentence.""","def reverseWords(s): 
	# split the string 
	words = s.split(' ') 
	
	# reverse the words 
	words = words[::-1] 
	
	# join the words 
	reverseString = ' '.join(words)
	
	return reverseString 

s = ""This is an example sentence.""
print(reverseWords(s)) 
# Output: sentence. example an is This","def reverseWords(s): 
	# split the string 
	words = s.split(' ') 
	
	# reverse the words 
	words = words[::-1] 
	
	# join the words 
	reverseString = ' '.join(words)
	
	return reverseString 

s = ""This is an example sentence.""
print(reverseWords(s)) 
# Output: sentence. example an is This",correct,File I/O
Write a distributed Python program which can generate the Fibonacci series using Spark.,,"import findspark
findspark.init()

from pyspark import SparkContext

sc = SparkContext('local', 'fibonacci-generator')

def generate_fibonacci():
 rdd = sc.parallelize([0,1])
 for _ in range(100):
 rdd = rdd.flatMap(lambda x: [x, x + rdd.takeSample(withReplacement=True)[0]])
 return rdd.collect()

result = generate_fibonacci()
print(result)","import findspark
findspark.init()

from pyspark import SparkContext

sc = SparkContext('local', 'fibonacci-generator')

def generate_fibonacci()
 rdd = sc.parallelize([0,1])
 for _ in range(100)
 rdd = rdd.flatMap(lambda x [x, x + rdd.takeSample(withReplacement=True)[0]])
 return rdd.collect()

result = generate_fibonacci()
print(result)",Syntax Error,Recursion
"Write a Python program to search through a list of dictionaries for a specific key-value pair, and return the corresponding value.","L = [{'id': 1, 'name': 'John'}, {'id': 2, 'name': 'Alice'}, {'id': 3, 'name': 'Bob'}]","def search(lst, key, value):
 for dict in lst:
  if dict[key] == value:
   return dict[value]
return None

#search for name with id 2
search(L, 'id', 2)
#outputs 'Alice'","def search(lst, key, value):
 for dict in lst:
  if dict[key] == value:
   return di",Incomplete Answer,File I/O
"Create a basic Python script that takes a user input, filters out any characters that are not letters or numbers, and prints the input after filtering.","This input contains "" special characters!","import re

input_string = ""This input contains \"" special characters!""
filtered_string = re.sub(r'[^a-zA-Z0-9]', '', input_string)

print(filtered_string) # Output: Thisinputcontainsspecialcharacters","import re

input_string = ""This input contains \"" special characters!""
filtered_string = re.sub(r'[^a-zA-Z0-9]', '', input_string)

print(filtered_string) # Output: Thisinputcontainsspecialcharacters",correct,Recursion
Find the most frequent element in an array in Python.,"[1, 3, 3, 3, 5, 4, 4, 6]","from collections import Counter 

def most_frequent(arr): 
 c = Counter(arr) 
 return c.most_common(1)[0][0]

arr = [1, 3, 3, 3, 5, 4, 4, 6] 
print(most_frequent(arr)) 
# Output: 3","from collections import Counter 

def most_frequent(arr): 
 c = Counter(arr) 
 return c.most_common(1)[0][0]

arr = [1, 3, 3, 3, 5, 4, 4, 6] 
print(most_frequent(arr)) 
# Output: 3",correct,Recursion
Write a function to find the largest sum of contiguous subarray in the given array.,,"def max_sub_array_sum(a, size):
  max_so_far = 0
  max_ending_here = 0
  for i in range(0, size):
    max_ending_here = max_ending_here + a[i]
    if max_ending_here < 0:
      max_ending_here = 0
    elif (max_so_far < max_ending_here):
      max_so_far = max_ending_here
  return max_so_far","def max_sub_array_sum(a, size):
  max_so_far = 0
  max_ending_here = 0
  for i in range(0, size):
    max_ending_here = max_ending_here + a[i]
    if max_ending_here < 0:
      max_ending_here = 0
    elif (max_so_far < max_ending_here):
      max_so_far = max_ending_here
  return max_so_far",correct,File I/O
Generate a Python program to calculate the hypotenuse of a right triangle.,,"import math

def hypotenuse(a, b):
    return math.sqrt(a**2 + b**2)

print(hypotenuse(3, 4))","import math

def hypotenuse(a, b):
    return math.sqrt(a**2 + b**2)

print(hypotenuse(3, 4))",correct,Recursion
Construct a naive bayes classifier using python to classify emails as spam or not spam.,,"from sklearn.naive_bayes import GaussianNB

# Create a Gaussian Classifier
model = GaussianNB()

# Train the model using the training sets 
model.fit(X_train, y_train)

# Predict Output 
y_pred = model.predict(X_test)","from sklearn.naive_bayes import GaussianNB

# Create a Gaussian Classifier
model = GaussianNB()

# Train the",Incomplete Answer,File I/O
Develop a loop in Python to generate a dictionary of all numbers below 1000 that are divisible by 7.,,"d = {}

for i in range(1000):
    if i % 7 == 0:
        d[i] = i

print(d)","d = {}

for i in range(1000):
    if ",Incomplete Answer,File I/O
Make a Python program that can generate random numbers between 1 and 1000.,,"import random

def random_number():
    return random.randint(1, 1000)

print(random_number())","import random

def random_number():
    return ",Incomplete Answer,File I/O
Write a function in Python that given a number n prints the first n Fibonacci numbers.,,"def fibonacci(number):
 a = 0
 b = 1 
 for i in range(number):
 print(a)
 temp = a
 a = b
 b = temp + b

number = int(input(""Enter a nmber: ""))
fibonacci(number)","def fibonacci(number):
 a = 0
 b = 1 
 for i in range(number):
 print(a)
 temp = a
 a = b
 b = temp + b

number = int(input(""Enter a nmber: ""))
fibonacci(number)",Syntax Error,Recursion
Convert a Python program that uses for-loops to one that uses only while-loops.,"for i in range(0, 3):
    print(i)","i = 0 
while i < 3: 
    print(i) 
    i += 1","i = 0 
while i < 3 
    print(i) 
    i += 1",Syntax Error,Recursion
Write a python program to optimize the given objective function.,,"from scipy.optimize import minimize 

def obj_func(x):
    # objective function
    # ...

def optimize(): 
    # set up optimization problem
    x0 = [0.0, 0.0, 0.0] 
    res = minimize(obj_func, x0, method='nelder-mead', options={'xtol': 1e-8, 'disp': True}) 
    return res.x

print(optimize())","from scipy.optimize import minimize 

def obj_func(x)
    # objective function
    # ...

def optimize() 
    # set up optimization problem
    x0 = [0.0, 0.0, 0.0] 
    res = minimize(obj_func, x0, method='nelder-mead', options={'xtol' 1e-8, 'disp' True}) 
    return res.x

print(optimize())",Syntax Error,Recursion
Write a Python program that takes an integer number as an input and calculates the sum of the even factors of that number.,50,"def get_sum_even_factors(n):
    sum = 0
    for i in range(2, n+1):
        if (n % i == 0) and (i % 2 == 0):
            sum = sum + i
    return sum

# Test 
input_num = 50
print(get_sum_even_factors(input_num)) # returns 196","def get_sum_even_factors(n):
    sum = 0
    for i in range(2, n+1):
        if (n % i == 0) and (i % 2 == 0):
   ",Incomplete Answer,Recursion
"Given a JSON object, write a Python program to convert it into a dictionary.","JSON object: { ""name"": ""John"", ""age"": 30, ""City"": ""New York"" }","import json

json_object = { ""name"": ""John"", ""age"": 30, ""City"": ""New York"" }

dict = json.loads(json.dumps(json_object))

print(dict)","import json

json_object = { ""name"": ""John"", ""age"": 30, ""City"": ""New York"" }

dict = json.loads(json.dumps(json_object))

print(dict)",Syntax Error,File I/O
Write a python function to find the minimum sum of absolute differences of two arrays.,,"def find_Min_Sum(a,b,n): 
    a.sort() 
    b.sort() 
    sum = 0  
    for i in range(n): 
        sum = sum + abs(a[i] - b[i]) 
    return sum","def find_Min_Sum(a,b,n): 
    a.sort() 
    b.sort() 
    sum = 0  
    for i in range(n): 
        sum = sum + abs(a[i] - b[i]) 
    return sum",correct,Recursion
Create a Python function that takes in two numbers and returns the greater one.,,"def get_greater_number(x, y):
    if x > y:
        return x
    else:
        return y

x = 7
y = 10
greater_number = get_greater_number(x, y)
print(greater_number) # 10","def get_greater_number(x, y):
    if x > y:
        return x
    else:
        return",Incomplete Answer,File I/O
Modify the following Python code to print the sum of the elements in a given list (without using the sum() function).,"my_list = [1, 5, 4, -3, 10]","my_list = [1, 5, 4, -3, 10]

total = 0

for num in my_list:
 total += num

print(total) # prints 17","my_list = [1, 5, 4, -3, 10]

total = 0

for num i",Incomplete Answer,Recursion
Design a program in Python to produce a list of all prime numbers up to a given number.,,"def find_all_primes(n):
    """"""Finds all prime numbers up to a given number n.""""""
    primes = []
    for num in range(2, n+1):
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            primes.append(num)
    return primes","def find_all_primes(n):
""""""Finds all prime numbers up to a given number n.""""""
primes = []
for num in range(2, n+1):
    for i in range(2, num):
        if (num % i) == 0:
            break
    else:
        primes.append(num)
return primes",Syntax Error,File I/O
Write a python function to format a string according to provided parameters.,"Input string: ""Hello World""
Upper-Case Letters: True
Lower-Case Letters: False","def formatString(s, upperCaseLetters, lowerCaseLetters):
    newStr = """"
    if upperCaseLetters: 
        newStr = s.upper()
    elif lowerCaseLetters: 
        newStr = s.lower()
    return newStr

print(formatString(""Hello World"", True, False)) # Output: ""HELLO WORLD""","def formatString(s, upperCaseLetters, lowerCaseLetters)
    newStr = """"
    if upperCaseLetters 
        newStr = s.upper()
    elif lowerCaseLetters 
        newStr = s.lower()
    return newStr

print(formatString(""Hello World"", True, False)) # Output ""HELLO WORLD""",Syntax Error,File I/O
Write Python code to shuffle a given list.,,"def shuffle_list(given_list):
    temp_list = given_list[:]
    random.shuffle(temp_list)
    return temp_list","def shuffle_list(given_list):
    temp_list = given_lis",Incomplete Answer,File I/O
Optimize the performance of a function in Python that calculates the total of a list of numbers.,"nums = [1, 2, 3, 4, 5]","def sum_list(nums):
 total = 0
 for num in nums:
 total += num
 return total

def sum_list_optimized(nums):
 total = 0
 length = len(nums)
 while length > 0:
 total += nums[length - 1]
 length -= 1
 return total

nums = [1, 2, 3, 4, 5]
print(sum_list_optimized(nums))  # Output: 15","def sum_list(nums):
 total = 0
 for num in nums:
 total += num
 return total

def sum_list_optimized(nums):
 total = 0
 length = len(nums)
 while length > 0:
 total += nums[length - 1]
 length -= 1
 return total

nums = [1, 2, 3, 4, 5]
pritn(sum_list_optimized(nums))  # Output: 15",Syntax Error,File I/O
Develop a web scraper in Python to extract data from a web page.,,"import requests
from bs4 import BeautifulSoup

url = 'example.com'
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')

data = []
for item in soup.find_all('div', attrs={'class': 'data_item'}):
  data.append(item.text)

print(data)","import requests
from bs4 import BeautifulSoup

url = 'example.com'
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')

data = []
for item in soup.find_all('div', attrs={'class': 'data_item'}):
  data.append(item.text)

print(data)",correct,Recursion
Write a Python program to sort a list of words in ascending order based on their length.,"words = [""I"", ""am"", ""all"", ""ears""]","words = [""I"", ""am"", ""all"", ""ears""]

#sort the words by length
words.sort(key = len)

#print the sorted words
for word in words:
 print(word)

# Output
I
am
all
ears","words = [""I"", ""am"", ""all"", ""ears""]

#sort the words by length
words.sort(key = len)

#print the sorted words
for word in words
 print(word)

# Output
I
am
all
ears",Syntax Error,File I/O
Generate a code for multiple linear regression in Python,,"import numpy as np

def multiple_linear_regression(x, y):
    # add ones column
    X = np.concatenate((np.ones((x.shape[0], 1)), x), axis=1)
    # calculate the parameters 
    theta = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(y)
    return theta","import numpy as np

def multiple_linear_regression(x, y):
# add ones column
X = np.concatenate((np.ones((x.shape[0], 1)), x), axis=1)
# calculate the parameters 
theta = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(y)
return theta",Syntax Error,File I/O
Create a python program that finds the number of elements between two given indices in a given list.,"list = [0, 4, 5, 8, 9]
start = 2
end = 4","def count_elements(list, start, end):
    elements_count = 0
    start_index = list.index(start)
    end_index = list.index(end)
    for i in range(start_index + 1, end_index):
        elements_count += 1
    return elements_count","def count_elements(list, start, end:
    elements_count = 0
    start_index = list.index(start
    end_index = list.index(end
    for i in range(start_index + 1, end_index:
        elements_count += 1
    return elements_count",Syntax Error,Recursion
Rewrite the following Python code using vectorization techniques to reduce the computation time.,"squares = []
for x in range(100):
 squares.append(x * x)","squares = [x * x for x in range(100)] # vectorized code equivalent to the for loop, which will be faster","squares = [x * x for x in range(100)] # vectorized code equivalent to the for loop, which will be faster",correct,File I/O
Write a Python program that reads a list of strings and sorts them by the number of characters in each string.,"['foo', 'bar', 'baz', 'foobar', 'beer', 'wine']","list_of_strings = ['foo', 'bar', 'baz', 'foobar', 'beer', 'wine']

# sort strings by length
list_of_strings.sort(key=len)

# print sorted list
print(list_of_strings)","list_of_strings = ['foo', 'bar', 'baz', 'foobar', 'beer', 'wine']

# sort strings by length
list_of_strings.sort(key=len)

# print sorted list
print(list_of_strings)",correct,File I/O
Create a loop structure in python code to perform the following task,Calculate the total number of words in a given paragraph.,"words = para.split(' ')
total = 0
for word in words:
    total += 1
print(total)","words = para.split(' ')
total = 0
for word in words:
total += 1
print(total)",Syntax Error,Recursion
"Generate a list of 100,000 random numbers from 0 to 1 using NumPy in Python.",,"import numpy as np

random_numbers = np.random.uniform(0, 1, 100000)","import numpy as np

random_numbers",Incomplete Answer,Recursion
Write a python function to identify non-prime numbers.,,"import math
def is_not_prime(n):
    result = False
    for i in range(2,int(math.sqrt(n)) + 1):
        if n % i == 0:
            result = True
    return result","import math
def is_not_prime(n)
    result = False
    for i in range(2,int(math.sqrt(n)) + 1)
        if n % i == 0
            result = True
    return result",Syntax Error,Recursion
Write a function to rearrange positive and negative numbers in a given array using lambda function.,,"def rearrange_numbs(array_nums):
  result = sorted(array_nums, key = lambda i: 0 if i == 0 else -1 / i)
  return result ","def rearrange_numbs(array_nums):
  result = sorted(array_nums, key = lambda i: 0 if i == 0 else -1 / i)
  return result ",Syntax Error,File I/O
"Given a list of integers with no duplicates, write a python program to determine if all elements in the list are perfect squares.",,"def is_perfect_square(lst):
    for num in lst:
        if (int(num ** 0.5)) ** 2 != num: 
            return False
    return True","def is_perfect_square(lst):
    for num in lst:
        if (int(num ** 0.5)) ** 2 != num: 
            return False
    return True",correct,File I/O
Generate a Python code for a web scraper to extract the current Bitcoin price from a website.,,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com/'

r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

bitcoin_price = soup.find('span', {'class': 'btc-price'}).text

print(f'The current Bitcoin price is {bitcoin_price}')","import requests
from bs4 import BeautifulSoup

url = 'https://example.com/'

r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

bitcoin_price = soup.find('span', {'class': 'btc-price'}).text

print(f'The current Bitcoin price is {bitcoin_price}')",correct,File I/O
"Write a Python code snippet to search and print all items in the list that starts with substring ""java"".","arr = [""python"", ""c++"", ""java"", ""java-script""]","arr = [""python"", ""c++"", ""java"", ""java-script""]

result = []
for item in arr:
    if item.startswith(""java""):
        result.append(item)
print(result)","arr = [""python"", ""c++"", ""java"", ""java-script""]

result = []
for item in arr:
    if item.startswith(""java""):
        result.append(item)
print(result)",correct,File I/O
Create a Python program to download a website from the Internet and save it locally.,"Website to download: ""https://www.example.com""","import urllib.request

url = 'https://www.example.com'

try:
 response = urllib.request.urlopen(url)
 content = response.read()
 filename = url.split('/')[-1]
 with open(filename, 'w') as file:
 file.write(content)
except Exception as e:
 print(e)","import urllib.request

url = 'https://www.example.com'

try:
 response = urllib.request.urlopen(url
 content = response.read(
 filename = url.split('/'[-1]
 with open(filename, 'w' as file:
 file.write(content
except Exception as e:
 print(e",Syntax Error,Recursion
Generate a code snippet in Python to handle HTTP requests from a given URL.,URL = 'https://example.com/test',"import requests

url = 'https://example.com/test'
 
# Make the request
response = requests.get(url)
 
# Check the response
if response.status_code == 200:
  # Success
  content = response.text
else:
  # Failure
  print(f'Request failed with status code: {response.status_code}')","import requests

url = 'https://example.com/test'
 
# Make the request
response = requests.get(url)
 
# Check the response
if response.status_code == 200:
  # Success
  content = response.text
else:
  # Failure
  pritn(f'Request failed with status code: {response.status_code}')",Syntax Error,File I/O
Design a Python function that outputs the sum of all multiples of 4 and 7 between 1 and a given number n.,100,"def sum_multiples_4_7(n): 
      
    sum = 0
    # iterate from 1 to n 
    for i in range(1, n+1): 
          
        # Sum only if it's a
        # multiple of 4 or 7 
        if(i % 4 == 0 or i % 7 == 0): 
            sum += i 
    return sum

result = sum_multiples_4_7(100)
print(result)","def sum_multiples_4_7(n): 
      
    sum = 0
    # iterate from 1 to n 
    for i in range(1, n+1): 
          
        # Sum only if it's a
        # multiple of 4 or 7 
        if(i % 4 == 0 or i % 7 == 0): 
            sum += i 
    return sum

result = sum_multiples_4_7(100)
print(name, result)",Syntax Error,File I/O
Design a solution in Python for determining the frequency of characters in a given string.,"""A quick brown fox jumps over the lazy dog.""","text = ""A quick brown fox jumps over the lazy dog.""

count = {} 
for character in text: 
    if character in count: 
            count[character] += 1
    else: 
            count[character] = 1
  
for key in count: 
    print('%s appears %d times' % (key, count[key]))","text = ""A quick brown fox jumps over the lazy dog.""

count = {} 
for character in text: 
    if character in count: 
            count",Incomplete Answer,Recursion
Write a short Python script to compute the average temperature of a given set of temperatures.,"temperatures = [71,77,82,81,75,72,78]","def average(temperatures):
    total = 0
    for temp in temperatures:
        total += temp
    return total/len(temperatures)

print(average(temperatures))","def average(temperatures):
total = 0
for temp in temperatures:
    total += temp
return total/len(temperatures)

print(average(temperatures))",Syntax Error,Recursion
Write a Python program to create a program to compare two lists of numbers.,"list_a = [1, 2, 3]
list_b = [2, 3, 4]","def compare_lists(list_a, list_b):
    a_not_in_b = []
    b_not_in_a = []
    
    for a in list_a:
        if a not in list_b:
            a_not_in_b.append(a)
            
    for b in list_b:
        if b not in list_a:
            b_not_in_a.append(b)
            
    return a_not_in_b, b_not_in_a","def compare_lists(list_a, list_b):
    a_not_in_b = []
    b_not_in_a = []
    
    for a in list_a:
        if a not in list_b:
            a_not_in_b.append(a)
            
    for b in list_b:
        if b not in list_a:
            b_not_in_a.append(b)
            
    return a_not_in_b, b_not_in_a",Syntax Error,File I/O
Generate a classifier in Python using the Random Forest algorithm.,"Features: Weight, Size
Label: Type","from sklearn.ensemble import RandomForestClassifier

X = [[Weight, Size]]
y = [Type]

model = RandomForestClassifier(random_state=0)
model.fit(X, y)","from sklearn.ensemble import RandomForestClassifier

X = [[Weight, Size]]
y = [Type]

model = RandomForestClassifier(random_state=0)
model.fit(X, y)",Syntax Error,Recursion
Write a Python script to measure execution time of a given operation.,,"import time

def measure_time():
 start = time.time()
 # Your code here...
 end = time.time()
 return end - start 

execution_time = measure_time()
print(""Time taken:"", execution_time, ""seconds"")","import time

def measure_time(:
 start = time.time(
 # Your code here...
 end = time.time(
 return end - start 

execution_time = measure_time(
print(""Time taken:"", execution_time, ""seconds""",Syntax Error,Recursion
Create a python dictionary using the given lists.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","{1: 4, 2: 5, 3: 6}","{1: 4, 2: 5, 3: 6}",correct,File I/O
Generate a list in Python containing all numbers between 0 and 50 (inclusive) that are multiples of 3.,,"my_list = [x for x in range(0, 51) if x % 3 == 0]","my_list = [x for x in range(0, 51) if x % 3 == 0]",correct,File I/O
Change the following python code so that the loop only iterates through the even numbers in the list.,"for num in range(16):
    print(num)","for num in range(16):
    if num % 2 == 0:
        print(num)","for num in range(16):
    if num % 2 == 0:
        print(num)",correct,File I/O
Create a Python dictionary of students' names and their corresponding grades in a course.,"John - 98;
Jennifer - 95;
Noah - 87;
Frank - 92;","students_dict = {
 ""John"": 98,
 ""Jennifer"": 95,
 ""Noah"": 87,
 ""Frank"": 92
}","students_dict = {
 ""John"": 98,
 ""Jennifer"": 95,
 ""Noah"": 87,
 ""Frank"": 92
}",Syntax Error,File I/O
Create a Python program to create a histogram from a given list of integers.,,"def print_histogram(nums):
  for num in nums:
    output = ''
    times = num
    while(times > 0):
      output += '#'
      times = times - 1
    print(output)","def print_histogram(nums):
  for num in nums:
    output = ''
    times = num
    while(times > 0):
      output += '#'
      times = times - 1
    print(output)",correct,Recursion
Create a python program to test if a given string is a palindrome,"str = ""level""","def is_palindrome(str):
    for i in range(len(str) // 2):
        if str[i] != str[-i - 1]:
            return False
    return True

# Test
result = is_palindrome(""level"")
print(result) # Output: True","def is_palindrome(str):
    for i in range(len(str) // 2):
        if str[i] != str[-i - 1]:
            return False
    return True

# Test
result = is_palindrome(""level"")
print(result) # Output: True",correct,File I/O
Create a Python code to organize a given dictionary and sort its keys alphabetically.,"myDict = {'a': 1, 'c': 2, 'b': 3}","sortedDict = dict(sorted(myDict.items()))

print(sortedDict)","sortedDict = dict(sorted(myDict.items()))

print(sortedDict)",correct,Recursion
"Create a class in Python that represents an employee object with three attributes - employee ID, name and salary.",,"class Employee:
 def __init__(self, employee_id, name, salary):
 self.employee_id = employee_id
 self.name = name
 self.salary = salary

 def __repr__(self):
 return 'Employee({}, {}, {})'.format(self.employee_id, self.name, self.salary)","class Employee:
 def __init__(self, employee_id, name, salary):
 self.employee_id = employee_id
 self.name = name
 self.salary = salary

 def __repr__(self):
 return 'Employee({}, {}, {})'.format(self.employee_id, self.name, self.salary)",Syntax Error,Recursion
Write a Python script to generate a random username using letter and numbers.,[No input],"import string
from random import *

def generate_username():
    letters = string.ascii_letters
    numbers = string.digits
    username = """"
    for _ in range(10):
        username += choice(letters) + choice(numbers)
    return username

print(generate_username())","import string
from random import *

def generate_username():
    letters = string.ascii_letters
    numbers = string.digits
    username = """"
    for _ in range(10):
        username += choice(letters) + choice(numbers)
    return username

pritn(generate_username())",Syntax Error,Recursion
Design an algorithm in Python to get the largest number in a list.,"[2, 5, 3, 7]","def getMax(list):
    max = 0
    for num in list:
        if num > max:
            max = num
    return max

list = [2, 5, 3, 7]
print(getMax(list))","def getMax(list):
    max = 0
    for num in list:
        if num > max:
  ",Incomplete Answer,File I/O
Generate a 20 x 20 matrix of zeros in Python.,,"import numpy as np

matrix = np.zeros((20,20))
print(matrix)","import numpy as np

matrix = np.zeros((20,20))
print(matrix)",Syntax Error,Recursion
Write a Python function for computing the Fibonacci numbers of n.,,"def fibonacci(n):
    if n < 2:
        return n
    return fibonacci(n - 1) + fibonacci(n - 2)","def fibonacci(n):
    if n < 2:
        return n
    return fibonacci(n - 1) + fibonacci(n - 2)",correct,File I/O
Write a function to substaract two lists using map and lambda function.,,"def sub_list(nums1,nums2):
  result = map(lambda x, y: x - y, nums1, nums2)
  return list(result)","def sub_list(nums1,nums2):
  result = map(lambda x, y: x - y, nums1, nums2)
  return list(result)",Syntax Error,File I/O
Develop a function to calculate the GCD of two given numbers in Python.,,"def gcd(a, b): 
    if (b == 0): 
        return a 
    return gcd(b, a % b)","def gcd(a, b): 
    if (b == 0): 
    ",Incomplete Answer,Recursion
Can you provide a Python code to print the largest item in a given list?,"[9, 2, 6, 10, 4]","# Find the largest element in a list

def find_largest(lst):
    max_val = float('-inf')
    for val in lst:
        if val > max_val:
            max_val = val
    return max_val

# Test
lst = [9, 2, 6, 10, 4]
print(find_largest(lst)) # 10","# Find the largest element in a list

def find_largest(lst):
    max_val = float('-inf')
    for val in lst:
        if ",Incomplete Answer,File I/O
Gadgetize the following Python function to accept any number of inputs,"def sum_two(input1, input2):
 return input1 + input2","def sum(*args):
   total = 0
   for arg in args:
       total += arg
   return total","def sum(*args):
   total = 0
   for arg in",Incomplete Answer,Recursion
Create a Python program to calculate the GC content of a DNA sequence.,ACTGCTAGCTACTAGC,"dna_sequence = 'ACTGCTAGCTACTAGC'
gc_count = 0
for base in dna_sequence:
 if base == 'G' or base == 'C':
  gc_count += 1
gc_percentage = gc_count / len(dna_sequence) * 100
print(gc_percentage)","dna_sequence = 'ACTGCTAGCTACTAGC'
gc_count = 0
for base in dna_sequence:
 if base == 'G' or base",Incomplete Answer,Recursion
Create an algorithm in Python to find the largest rectangular area in a histogram.,"heights = [2, 7, 9, 4, 1]","def maxArea(heights):
  max_area = 0
  left = 0
  right = len(heights) - 1

  while left < right:
    h = min(heights[left], heights[right])
    max_area = max(max_area, h * (right - left))
    if heights[left] < heights[right]:
      left += 1
    else: 
      right -= 1

  return max_area

print(maxArea(heights)) # 8","def maxArea(heights):
  max_area = 0
  left = 0
  right = len(heights) - 1

  while left < right:
    h = min(heights[left], heights[right])
    max_area = max(max_area, h * (right - left))
    if heights[left] < heights[right]:
      left += 1
    else: 
      right -= 1

  return max_area

print(name, maxArea(heights)) # 8",Syntax Error,Recursion
"Write a Python program to remove the words containing the letter ""a"" from a sentence.",Sentence: I am a strong girl,"sentence = ""I am a strong girl""

without_a = ' '.join([word for word in sentence.split() if 'a' not in word])

print(without_a)
# Output: I strong girl","sentence = ""I am a strong girl""

without_a = ' '.join([word for word in sentence.split() if 'a' not in word])

print(name, without_a)
# Output: I strong girl",Syntax Error,File I/O
Create a Python program to detect if the given number is a prime number or not.,,"def is_prime(num):
    # 1 is not a prime number 
    if num == 1:
        return False
  
    for i in range(2, num):
        if num % i == 0:
            return False
    return True","def is_prime(num):
    # 1 is not a prime number 
    if num == 1:
        return False
  
    for i in range(2, num):
        if num % i == 0:
            return False
    return True",correct,File I/O
Write a function that takes a string and prints out the string in reverse.,Python,"def reverse_string(s):
  return s[::-1]
  
print(reverse_string('Python'))  # nohtyP","def reverse_string(s):
  return s[::-1]
  
print(reverse_string('Python'))  # nohtyP",correct,Recursion
"Create a Python program that features an endless loop that repeatedly asks the user to input a number between 1 and 10. When the number is valid, the program should output the number plus one.",,"while True:
    num = int(input(""Please input a number between 1 and 10: ""))
    if num in range(1, 11):
        print(num + 1)
    else:
        print(""Invalid number!"")","while True:
    num = int(input(""Please input a number between 1 and 10: ""))
    if num in range(1, 11):
        print(num + 1)
    else:
        print(""Invalid number!"")",correct,File I/O
Construct a Python dictionary to convert Celsius temperature values to their Fahrenheit equivalents,,"celsius_to_fahrenheit = {
    0 : 32,
    10 : 50,
    20 : 68,
    30 : 86,
    40 : 104,
    50 : 122,
    60 : 140,
    70 : 158,
    80 : 176,
    90 : 194,
    100 : 212
}","celsius_to_fahrenheit = {
    0 : 32,
    10 : 50,
    20 : 68,
    30 : 86,
    40 : 10",Incomplete Answer,Recursion
Write a quicksort algorithm in python.,,"def quicksort(array):
    if len(array) < 2:
        return array
    else:
        pivot = array[0]
        less = [i for i in array[1:] if i <= pivot]
        greater = [i for i in array[1:] if i > pivot]
 
        return quicksort(less) + [pivot] + quicksort(greater)","def quicksort(array):
    if len(array) < 2:
        return array
    else:
        pivot = array[0]
        less = [i for i in array[1",Incomplete Answer,Recursion
Write a function to print n-times a list using map function.,,"def ntimes_list(nums,n):
    result = map(lambda x:n*x, nums) 
    return list(result)","def ntimes_list(nums,n):
    result = map(lambda x:n*x, nums) 
    return list(result)",correct,File I/O
"Design a class in Python for storing movie information including the name, year of release, genre and rating.",,"class Movie:
    def __init__(self, name, release_year, genre, rating):
        self.name = name
        self.release_year = release_year
        self.genre = genre
        self.rating = rating

movie = Movie(""Interstellar"", 2014, ""Sci-Fi"", 8.4)
print(movie.name, movie.release_year, movie.genre, movie.rating)","class Movie:
    def __init__(self, name, release_year, genre, rating):
        self.name = name
        self.release_year = release_year
        self.genre = genre
        self.rating = rating

movie = Movie(""Interstellar"", 2014, ""Sci-Fi"", 8.4)
print(movie.name, movie.release_year, movie.genre, movie.rating)",correct,Recursion
Create a code that checks whether the given date is valid or not in Python.,"Year: 2020
Month: 11
Day: 40","def validate_date(year, month, day):
    try:
        datetime.datetime(year, month, day)
        return True
    except ValueError:
        return False

validate_date(2020, 11, 40) # Output: False","def validate_date(year, month, day):
    try:
        datetime.datetime(year, month, day)
        return True
    except ValueError:
        return False

validate_date(2020, 11, 40) # Output: False",Syntax Error,File I/O
Write a function in Python to detect if a given string contains any special characters such as $ # & ! etc.,,"def special_characters_check(string):
    special_characters = ['@','#','$','%','^','&','*','(',')','+',':',';','?','/']
    for character in string:
        if character in special_characters:
            return ""Yes, the string contains a special character.""
    return ""No, the string does not contain a special character.""","def special_characters_check(string):
    special_characters = ['@','#','$','%','^','&','*','(',')','+',':',';','?','/']
    for character in string:
        if ch",Incomplete Answer,Recursion
Can you create a program Python to find the top ten most frequent words in a text?,"text=""Python is a great language to learn. It is very powerful and easy to learn.""","import collections

#Splitting the text into words
words=text.split()

#Creating a frequency table
word_freq = collections.Counter(words)

#Printing the top 10 most frequent words
for word, frequency in word_freq.most_common(10):
    print(word, frequency)","import collections

#Splitting the text into words
words=text.split()

#Creating a frequency table
word_freq = collections.Counter(words)

#Printing the top 10 most frequent words
for word, frequency in word_freq.most_common(10):
    print(word, frequency)",correct,Recursion
Write a function in Python to extract the domain name from an email address.,test@example.com,"def get_domain_name_from_email(email):
    return email.split('@')[-1]","def get_domain_name_from_email(email)
    return email.split('@')[-1]",Syntax Error,Recursion
Generate Python code to connect to a SQL database.,"hostname: test.com,
username: admin,
password: pwd123","import mysql.connector

connection = mysql.connector.connect(  
    host = ""test.com"",
    user = ""admin"",
    password = ""pwd123"",
    database = ""testdb""
)","import mysql.connector

connection = mysql.connector.connect(  
host = ""test.com"",
user = ""admin"",
password = ""pwd123"",
database = ""testdb""
)",Syntax Error,Recursion
Propose a solution that optimizes the following python program.,"for i in range(1000):
    for j in range(1000):
        arr[i][j] += 5","import numpy as np

arr = np.array(arr)  # Convert to a numpy array

arr += 5  # add 5 to the array","import numpy as np

arr = np.array(arr)  # Convert to a numpy array

arr += 5  # add 5 to the array",correct,Recursion
Develop a Python program that enables a user to select two numbers and add them together.,,"# define add() function 
def add(num1, num2): 
    # Adding both the parameters and return them 
    sum = num1 + num2
    return sum

# Give the two numbers the user wants to add 
num1 = float(input(""Enter first number: ""))
num2 = float(input(""Enter second number: ""))

# Add and print the result 
print(""The sum of {} and {} is {}"".format(num1, num2, add(num1, num2)))","# define add() function 
def add(num1, num2): 
    # Adding both the parameters and return them 
    sum = num1 + num2
    return sum

# Give the two numbers the user wants to add 
num1 = float(input(""Enter first number: ""))
num2 = float(input(""Enter second number: ""))

# Add and print the result 
print(""The sum of {} and {} is {}"".format(num1, num2, add(num1, num2)))",correct,Recursion
